package org.batfish.representation.juniper;

import static org.batfish.representation.juniper.ApplicationSetMember.getTraceElement;
import static org.junit.Assert.assertEquals;

import com.google.common.collect.ImmutableList;
import com.google.common.collect.ImmutableSet;
import org.batfish.datamodel.HeaderSpace;
import org.batfish.datamodel.IpProtocol;
import org.batfish.datamodel.NamedPort;
import org.batfish.datamodel.SubRange;
import org.batfish.datamodel.acl.MatchHeaderSpace;
import org.batfish.datamodel.acl.OrMatchExpr;
import org.junit.Test;

/** Test for {@link JunosApplication} */
public class JunosApplicationTest {

  private static JuniperConfiguration jc = new JuniperConfiguration();

  static {
    jc.setFilename("host");
  }

  @Test
  public void testToAclLineMatchExpr_bgp() {
    assertEquals(
        JunosApplication.JUNOS_BGP.toAclLineMatchExpr(jc, null),
        new OrMatchExpr(
            ImmutableList.of(
                new MatchHeaderSpace(
                    HeaderSpace.builder()
                        .setIpProtocols(ImmutableSet.of(IpProtocol.TCP))
                        .setDstPorts(ImmutableSet.of(SubRange.singleton(NamedPort.BGP.number())))
                        .build())),
            getTraceElement("host", JuniperStructureType.APPLICATION, "junos-bgp")));
  }

  @Test
  public void testToAclLineMatchExpr_smb() {
    // this application has multiple terms. since all terms are generated by BF, the tracing element
    // should only show the application name
    assertEquals(
        JunosApplication.JUNOS_SMB.toAclLineMatchExpr(jc, null),
        new OrMatchExpr(
            ImmutableList.of(
                new MatchHeaderSpace(
                    HeaderSpace.builder()
                        .setIpProtocols(ImmutableSet.of(IpProtocol.TCP))
                        .setDstPorts(
                            ImmutableSet.of(SubRange.singleton(NamedPort.MICROSOFT_DS.number())))
                        .build()),
                new MatchHeaderSpace(
                    HeaderSpace.builder()
                        .setIpProtocols(ImmutableSet.of(IpProtocol.TCP))
                        .setDstPorts(
                            ImmutableSet.of(SubRange.singleton(NamedPort.NETBIOS_SSN.number())))
                        .build())),
            getTraceElement("host", JuniperStructureType.APPLICATION, "junos-smb")));
  }

  @Test
  public void testToAclLineMatchExpr_any() {
    assertEquals(
        JunosApplication.ANY.toAclLineMatchExpr(jc, null),
        new OrMatchExpr(
            ImmutableList.of(new MatchHeaderSpace(HeaderSpace.builder().build())),
            getTraceElement("host", JuniperStructureType.APPLICATION, "any")));
  }
}
