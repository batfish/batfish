set system host-name juniper-interface-ribgroup-with-policy
#
# setup a rib group named interface-routes-rib for ipv4 routes
set routing-options interface-routes rib-group inet interface-routes-rib
# merge connected/local routes into default RIB, always required
set routing-options rib-groups interface-routes-rib import-rib inet.0
# merge connected/local routes into default RIB on VRF2
set routing-options rib-groups interface-routes-rib import-rib VRF2.inet.0
#
# policies should be chained (OR-ed) and applied on import to main RIBs
#
set routing-options rib-groups interface-routes-rib import-policy RIB_IN
set routing-options rib-groups interface-routes-rib import-policy RIB_IN_2
#
set interfaces lo0 unit 0 family inet address 1.1.1.1/32
set interfaces ge-0/0/0 unit 0 family inet address 2.2.2.2/31
set interfaces ge-0/0/1 unit 0 family inet address 2.2.2.4/31
set interfaces ge-0/0/2 unit 0 family inet address 2.2.2.6/31
#
set routing-instances VRF2 interface ge-0/0/3.0
set interfaces ge-0/0/3 unit 0 family inet address 2.2.2.8/31
#
# The policies are supposed to be chained together;
# RIB_IN allows only connected routes from ge-0/0/0.0 ge-0/0/0.1, then we fall through to RIB_IN_2
# RIB_IN_2 rejects from ge-0/0/3.0, thus 2.2.2.6/31 is NOT imported into VRF2
# Because of "exact" matching this does not affect local routes
# Local routes are accepted by the (implicit) default import policy
set policy-options policy-statement RIB_IN term TERM1 from route-filter 2.2.2.2/31 exact
set policy-options policy-statement RIB_IN term TERM1 from route-filter 2.2.2.4/31 exact 
set policy-options policy-statement RIB_IN term TERM1 then accept
#
# This line has no effect, as this filter should not be reached (accepted above)
set policy-options policy-statement RIB_IN_2 term TERM1 from route-filter 2.2.2.4/31 exact
set policy-options policy-statement RIB_IN_2 term TERM1 from route-filter 2.2.2.6/31 exact
set policy-options policy-statement RIB_IN_2 term TERM1 then reject
#
