#
set system host-name juniper-wildcards
#
set groups g1 interfaces <*> unit <*> family inet address 1.1.1.1/32
set groups g2 policy-options prefix-list <*> 3.3.3.3/32
set groups g3 protocols ospf area <*> interface <*> authentication md5 0 key "foo"
set interfaces lo0 unit 0 apply-groups g1
set interfaces lo0 unit 0 description <SCRUBBED>
set interfaces ge-0/0/0 unit 0 family inet address 88.1.2.3
set policy-options prefix-list p1 apply-path "interfaces <*> unit <*> family inet address <*>"
set policy-options prefix-list p2 apply-groups g2
## only ge-0/0/0.0's address should be here
set policy-options prefix-list p3 apply-path "interfaces <*> unit <*> family inet address <88.*>"
set routing-options autonomous-system 1
set protocols bgp group <SCRUBBED> neighbor 2.2.2.2 peer-as 2
set protocols ospf apply-groups g3
set protocols ospf area 0.0.0.1 interface et-0/0/0.0 passive
## p4 should have all addresses from both communities
set policy-options prefix-list p4 apply-path "snmp community <*> clients <*>"
set snmp community "foo" clients 4.4.4.4/32
set snmp community "<removed>" clients 5.5.5.5/32
## p5 should have no addresses because of the invalid wildcard
set policy-options prefix-list p5 apply-path "protocols bgp group <*> neighbor <*>;"
set firewall family inet filter FILTER term PERMIT-ALL from protocol tcp
set firewall family inet filter FILTER term PERMIT-ALL then accept
set groups g4 interfaces "<em[0,1]>" unit <*> family inet filter input FILTER
set interfaces em0 unit 0 family inet address 10.0.0.1/24
set apply-groups g4
#
