#TMSH-VERSION: 13.1.1

sys global-settings {
    hostname f5_bigip_structured_ltm_rule
}

ltm rule /Common/irule_foo {
                                                            # Version 1.0
# Author: foo@example.com
# Stuff
# More stuff.
when CLIENT_ACCEPTED {
    set bar1 [HSL::open -proto UDP -pool foo_pool]
}
when HTTP_REQUEST {
    set bar2 [HTTP::header value "bunch-o-stuff"]
    if { $bar2 eq "" } {
        set bar2 [IP::client_addr]
    }
    set bar3 [whereis $bar2 country]
    if { [class match $bar3 equals class_foo] } {
        HSL::send $bar4 "<190> bar5 virtual=[virtual name] http_host=[HTTP::host] rem_addr=$bar2 country=$bar3"
    } elseif { [class match $bar2 equals class_foo2] } {
        HSL::send $bar4 "<190> bar5 virtual=[virtual name] http_host=[HTTP::host] rem_addr=$bar2 country=$bar3"
    }

}
}

ltm rule /Common/empty {
}

ltm rule /Common/empty_when {
when HTTP_REQUEST {
}
}

ltm rule /Common/nested_braces {
when CLIENT_ACCEPTED priority 1 {
  if {[catch {scan [virtual name] {/a/b_%[^_]_%s} b c}]} { }
}
}

ltm rule /Common/SOME_RULE4 {
when CLIENT_ACCEPTED {
    set tcp_done [clock clicks -milliseconds]
}

when CLIENTSSL_HANDSHAKE {
   set tls_done [clock clicks -milliseconds]
   set delta [expr {$tls_done - $tcp_done}]
      log local0. "TLS handshake took $delta milliseconds for Client IP is [IP::client_addr]"
}
}

ltm rule /Common/comment_ws_if {
when HTTP_REQUEST {
# foo
  if { a } {
  }
}
}

ltm rule /Common/ws_set {
when HTTP_REQUEST {
  set a 0
}
}

ltm rule /Common/varsub_close_bracket {
when HTTP_REQUEST {
  set a [URI::decode [string range $p [string q / $r] end]]
}
}

ltm rule /Common/quote_varsub_escapequote {
when HTTP_RESPONSE {
  a "ua=\"$ua\" b"
}
}

ltm rule /Common/proc_single_command {
proc a { b c } {
  a b
}
}

ltm rule /Common/space_close_bracket {
when HTTP_REQUEST {
  set a [b  ]
}
}
