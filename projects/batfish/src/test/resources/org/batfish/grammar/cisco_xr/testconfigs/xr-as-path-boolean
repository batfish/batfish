!RANCID-CONTENT-TYPE: cisco-xr
!
hostname xr-as-path-boolean
!
route-policy rp1
 # in inline
 if as-path in (dfa-regex '^1_', ios-regex '^2_', length eq 1, length ge 2 all, neighbor-is '1.1 [2..3]' exact, originates-from '4 [5..6]', passes-through '7 [8..9]', unique-length eq 1, unique-length eq 2 all) then
  pass
 endif

 # in inline with params
 if as-path in (length eq $l1, length ge $l2 all, neighbor-is '$n1 [$n2..3]' exact, originates-from '$o1 [$o2..6]' exact, passes-through '$p1 [$p2..9]' exact, unique-length eq $u1, unique-length eq $u2 all) then
  pass
 endif

 # in named
 if as-path in set1 then
  pass
 endif

 # in param named
 if as-path in $setname then
  pass
 endif

 # is-local
 if as-path is-local then
  pass
 endif

 # length
 if as-path length eq 1 then
  pass
 endif
 
 # length with var
 if as-path length eq $l all then
  pass
 endif

 # neighbor-is
 if as-path neighbor-is '1 [2..3]' then
  pass
 endif
 
 # neighbor-is with var
 if as-path neighbor-is '$n1 [$n2..$n3]' exact then
  pass
 endif

 # originates-from
 if as-path originates-from '1 [2..3]' exact then
  pass
 endif
 
 # originates-from with var
 if as-path originates-from '$o1 [$o2..$o3]' exact then
  pass
 endif

 # passes-through
 if as-path passes-through '1 [2..3]' exact then
  pass
 endif
 
 # passes-through with var
 if as-path passes-through '$p1 [$p2..$p3]' then
  pass
 endif

 # unique-length
 if as-path unique-length eq 1 all then
  pass
 endif

 # unique-length with var
 if as-path unique-length eq $l then
  pass
 endif
end-policy
!

!!! behavior-test policies

!! neighbor-is
route-policy rp-neighbor-is
 if as-path neighbor-is '1 [2..3] 4' or
    as-path neighbor-is '6 7 8' exact or
    as-path in (neighbor-is '11 [22..33] 44') or
    as-path in (neighbor-is '66 77 88' exact) or
    as-path in aps-neighbor-is then
   pass
 endif
end-policy
as-path-set aps-neighbor-is
 neighbor-is '111 [222..333] 444',
 neighbor-is '666 777 888' exact
end-set

!! originates-from
route-policy rp-originates-from
 if as-path originates-from '1 [2..3] 4' or
    as-path originates-from '6 7 8' exact or
    as-path in (originates-from '11 [22..33] 44') or
    as-path in (originates-from '66 77 88' exact) or
    as-path in aps-originates-from then
   pass
 endif
end-policy
as-path-set aps-originates-from
 originates-from '111 [222..333] 444',
 originates-from '666 777 888' exact
end-set

!! passes-through
route-policy rp-passes-through
 if as-path passes-through '1 [2..3] 4' or
    as-path passes-through '6 7 8' exact or
    as-path in (passes-through '11 [22..33] 44') or
    as-path in (passes-through '66 77 88' exact) or
    as-path in aps-passes-through then
   pass
 endif
end-policy
as-path-set aps-passes-through
 passes-through '111 [222..333] 444',
 passes-through '666 777 888' exact
end-set

!! length
!! TODO: something with 'all'
route-policy rp-length
 if as-path length eq 2 or
    as-path in (length eq 5) or
    as-path in aps-length then
   pass
 endif
end-policy
as-path-set aps-length
 length eq 8
end-set

!! unique-length
!! TODO: something with 'all'
route-policy rp-unique-length
 if as-path unique-length eq 2 or
    as-path in (unique-length eq 5) or
    as-path in aps-unique-length then
   pass
 endif
end-policy
as-path-set aps-unique-length
 unique-length eq 8
end-set
!

!! is-local
route-policy rp-is-local
 if as-path is-local then
   pass
 endif
end-policy
end
