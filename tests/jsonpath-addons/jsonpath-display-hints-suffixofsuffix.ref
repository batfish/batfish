[
  {
    "class" : "org.batfish.question.jsonpath.JsonPathQuestionPlugin$JsonPathAnswerElement",
    "results" : {
      "0" : {
        "extractedValues" : {
          "'nodes'->'as2border1'" : {
            "mtus" : [
              1500,
              1500,
              1500,
              1500,
              1500
            ]
          }
        },
        "numResults" : 1,
        "result" : {
          "'nodes'->'as2border1'" : {
            "concretePath" : [
              "'nodes'",
              "'as2border1'"
            ],
            "suffix" : {
              "configurationFormat" : "CISCO_IOS",
              "name" : "as2border1",
              "communityLists" : {
                "as1_community" : {
                  "invertMatch" : false,
                  "lines" : [
                    {
                      "action" : "ACCEPT",
                      "regex" : "(,|\\{|\\}|^|$| )1:"
                    }
                  ],
                  "name" : "as1_community"
                },
                "as2_community" : {
                  "invertMatch" : false,
                  "lines" : [
                    {
                      "action" : "ACCEPT",
                      "regex" : "(,|\\{|\\}|^|$| )2:"
                    }
                  ],
                  "name" : "as2_community"
                },
                "as3_community" : {
                  "invertMatch" : false,
                  "lines" : [
                    {
                      "action" : "ACCEPT",
                      "regex" : "(,|\\{|\\}|^|$| )3:"
                    }
                  ],
                  "name" : "as3_community"
                }
              },
              "defaultCrossZoneAction" : "ACCEPT",
              "defaultInboundAction" : "ACCEPT",
              "deviceType" : "ROUTER",
              "domainName" : "lab.local",
              "interfaces" : {
                "Ethernet0/0" : {
                  "name" : "Ethernet0/0",
                  "accessVlan" : 0,
                  "active" : false,
                  "autostate" : true,
                  "bandwidth" : 1.0E7,
                  "declaredNames" : [
                    "Ethernet0/0"
                  ],
                  "mtu" : 1500,
                  "nativeVlan" : 1,
                  "ospfDeadInterval" : 0,
                  "ospfEnabled" : false,
                  "ospfHelloMultiplier" : 0,
                  "ospfPassive" : false,
                  "ospfPointToPoint" : false,
                  "proxyArp" : true,
                  "ripEnabled" : false,
                  "ripPassive" : false,
                  "spanningTreePortfast" : false,
                  "switchportMode" : "NONE",
                  "switchportTrunkEncapsulation" : "DOT1Q",
                  "type" : "PHYSICAL",
                  "vrf" : "default"
                },
                "GigabitEthernet0/0" : {
                  "name" : "GigabitEthernet0/0",
                  "accessVlan" : 0,
                  "active" : true,
                  "allPrefixes" : [
                    "10.12.11.2/24"
                  ],
                  "autostate" : true,
                  "bandwidth" : 1.0E9,
                  "declaredNames" : [
                    "GigabitEthernet0/0"
                  ],
                  "incomingFilter" : "OUTSIDE_TO_INSIDE",
                  "mtu" : 1500,
                  "nativeVlan" : 1,
                  "ospfDeadInterval" : 0,
                  "ospfEnabled" : false,
                  "ospfHelloMultiplier" : 0,
                  "ospfPassive" : false,
                  "ospfPointToPoint" : false,
                  "outgoingFilter" : "INSIDE_TO_AS1",
                  "prefix" : "10.12.11.2/24",
                  "proxyArp" : true,
                  "ripEnabled" : false,
                  "ripPassive" : false,
                  "spanningTreePortfast" : false,
                  "switchportMode" : "NONE",
                  "switchportTrunkEncapsulation" : "DOT1Q",
                  "type" : "PHYSICAL",
                  "vrf" : "default"
                },
                "GigabitEthernet1/0" : {
                  "name" : "GigabitEthernet1/0",
                  "accessVlan" : 0,
                  "active" : true,
                  "allPrefixes" : [
                    "2.12.11.1/24"
                  ],
                  "autostate" : true,
                  "bandwidth" : 1.0E9,
                  "declaredNames" : [
                    "GigabitEthernet1/0"
                  ],
                  "mtu" : 1500,
                  "nativeVlan" : 1,
                  "ospfArea" : 1,
                  "ospfCost" : 1,
                  "ospfDeadInterval" : 0,
                  "ospfEnabled" : true,
                  "ospfHelloMultiplier" : 0,
                  "ospfPassive" : false,
                  "ospfPointToPoint" : false,
                  "prefix" : "2.12.11.1/24",
                  "proxyArp" : true,
                  "ripEnabled" : false,
                  "ripPassive" : false,
                  "spanningTreePortfast" : false,
                  "switchportMode" : "NONE",
                  "switchportTrunkEncapsulation" : "DOT1Q",
                  "type" : "PHYSICAL",
                  "vrf" : "default"
                },
                "GigabitEthernet2/0" : {
                  "name" : "GigabitEthernet2/0",
                  "accessVlan" : 0,
                  "active" : true,
                  "allPrefixes" : [
                    "2.12.12.1/24"
                  ],
                  "autostate" : true,
                  "bandwidth" : 1.0E9,
                  "declaredNames" : [
                    "GigabitEthernet2/0"
                  ],
                  "mtu" : 1500,
                  "nativeVlan" : 1,
                  "ospfArea" : 1,
                  "ospfCost" : 1,
                  "ospfDeadInterval" : 0,
                  "ospfEnabled" : true,
                  "ospfHelloMultiplier" : 0,
                  "ospfPassive" : false,
                  "ospfPointToPoint" : false,
                  "prefix" : "2.12.12.1/24",
                  "proxyArp" : true,
                  "ripEnabled" : false,
                  "ripPassive" : false,
                  "spanningTreePortfast" : false,
                  "switchportMode" : "NONE",
                  "switchportTrunkEncapsulation" : "DOT1Q",
                  "type" : "PHYSICAL",
                  "vrf" : "default"
                },
                "Loopback0" : {
                  "name" : "Loopback0",
                  "accessVlan" : 0,
                  "active" : true,
                  "allPrefixes" : [
                    "2.1.1.1/32"
                  ],
                  "autostate" : true,
                  "bandwidth" : 8.0E9,
                  "declaredNames" : [
                    "Loopback0"
                  ],
                  "mtu" : 1500,
                  "nativeVlan" : 1,
                  "ospfArea" : 1,
                  "ospfCost" : 1,
                  "ospfDeadInterval" : 0,
                  "ospfEnabled" : true,
                  "ospfHelloMultiplier" : 0,
                  "ospfPassive" : false,
                  "ospfPointToPoint" : false,
                  "prefix" : "2.1.1.1/32",
                  "proxyArp" : true,
                  "ripEnabled" : false,
                  "ripPassive" : false,
                  "spanningTreePortfast" : false,
                  "switchportMode" : "NONE",
                  "switchportTrunkEncapsulation" : "DOT1Q",
                  "type" : "LOOPBACK",
                  "vrf" : "default"
                }
              },
              "ipAccessLists" : {
                "101" : {
                  "name" : "101",
                  "lines" : [
                    {
                      "action" : "ACCEPT",
                      "matchCondition" : {
                        "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                        "headerSpace" : {
                          "dstIps" : {
                            "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                            "ipWildcard" : "255.255.255.0"
                          },
                          "negate" : false,
                          "srcIps" : {
                            "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                            "ipWildcard" : "1.0.1.0"
                          }
                        }
                      },
                      "name" : "permit ip host 1.0.1.0 host 255.255.255.0"
                    },
                    {
                      "action" : "ACCEPT",
                      "matchCondition" : {
                        "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                        "headerSpace" : {
                          "dstIps" : {
                            "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                            "ipWildcard" : "255.255.255.0"
                          },
                          "negate" : false,
                          "srcIps" : {
                            "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                            "ipWildcard" : "1.0.2.0"
                          }
                        }
                      },
                      "name" : "permit ip host 1.0.2.0 host 255.255.255.0"
                    }
                  ],
                  "sourceName" : "101",
                  "sourceType" : "extended ipv4 access-list"
                },
                "103" : {
                  "name" : "103",
                  "lines" : [
                    {
                      "action" : "ACCEPT",
                      "matchCondition" : {
                        "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                        "headerSpace" : {
                          "dstIps" : {
                            "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                            "ipWildcard" : "255.255.255.0"
                          },
                          "negate" : false,
                          "srcIps" : {
                            "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                            "ipWildcard" : "3.0.1.0"
                          }
                        }
                      },
                      "name" : "permit ip host 3.0.1.0 host 255.255.255.0"
                    },
                    {
                      "action" : "ACCEPT",
                      "matchCondition" : {
                        "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                        "headerSpace" : {
                          "dstIps" : {
                            "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                            "ipWildcard" : "255.255.255.0"
                          },
                          "negate" : false,
                          "srcIps" : {
                            "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                            "ipWildcard" : "3.0.2.0"
                          }
                        }
                      },
                      "name" : "permit ip host 3.0.2.0 host 255.255.255.0"
                    }
                  ],
                  "sourceName" : "103",
                  "sourceType" : "extended ipv4 access-list"
                },
                "INSIDE_TO_AS1" : {
                  "name" : "INSIDE_TO_AS1",
                  "lines" : [
                    {
                      "action" : "ACCEPT",
                      "matchCondition" : {
                        "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                        "headerSpace" : {
                          "dstIps" : {
                            "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                            "ipWildcard" : "1.0.0.0/8"
                          },
                          "negate" : false,
                          "srcIps" : {
                            "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                            "ipWildcard" : "2.0.0.0/8"
                          }
                        }
                      },
                      "name" : "permit ip 2.0.0.0 0.255.255.255 1.0.0.0 0.255.255.255"
                    },
                    {
                      "action" : "ACCEPT",
                      "matchCondition" : {
                        "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                        "headerSpace" : {
                          "dstIps" : {
                            "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                            "ipWildcard" : "10.12.11.1"
                          },
                          "negate" : false,
                          "srcIps" : {
                            "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                            "ipWildcard" : "10.12.11.2"
                          }
                        }
                      },
                      "name" : "permit ip 10.12.11.2 0.0.0.0 10.12.11.1 0.0.0.0"
                    },
                    {
                      "action" : "REJECT",
                      "matchCondition" : {
                        "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                        "headerSpace" : {
                          "dstIps" : {
                            "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                            "ipWildcard" : "0.0.0.0/0"
                          },
                          "negate" : false,
                          "srcIps" : {
                            "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                            "ipWildcard" : "0.0.0.0/0"
                          }
                        }
                      },
                      "name" : "deny   ip any any"
                    }
                  ],
                  "sourceName" : "INSIDE_TO_AS1",
                  "sourceType" : "extended ipv4 access-list"
                },
                "OUTSIDE_TO_INSIDE" : {
                  "name" : "OUTSIDE_TO_INSIDE",
                  "lines" : [
                    {
                      "action" : "REJECT",
                      "matchCondition" : {
                        "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                        "headerSpace" : {
                          "dstIps" : {
                            "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                            "ipWildcard" : "0.0.0.0/0"
                          },
                          "negate" : false,
                          "srcIps" : {
                            "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                            "ipWildcard" : "2.0.0.0/8"
                          }
                        }
                      },
                      "name" : "deny   ip 2.0.0.0 0.255.255.255 any"
                    },
                    {
                      "action" : "REJECT",
                      "matchCondition" : {
                        "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                        "headerSpace" : {
                          "dstIps" : {
                            "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                            "ipWildcard" : "2.128.1.101"
                          },
                          "negate" : false,
                          "srcIps" : {
                            "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                            "ipWildcard" : "0.0.0.0/0"
                          }
                        }
                      },
                      "name" : "deny   ip any host 2.128.1.101"
                    },
                    {
                      "action" : "ACCEPT",
                      "matchCondition" : {
                        "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                        "headerSpace" : {
                          "dstIps" : {
                            "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                            "ipWildcard" : "0.0.0.0/0"
                          },
                          "negate" : false,
                          "srcIps" : {
                            "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                            "ipWildcard" : "0.0.0.0/0"
                          }
                        }
                      },
                      "name" : "permit ip any any"
                    }
                  ],
                  "sourceName" : "OUTSIDE_TO_INSIDE",
                  "sourceType" : "extended ipv4 access-list"
                }
              },
              "ntpServers" : [
                "18.18.18.18",
                "23.23.23.23"
              ],
              "routeFilterLists" : {
                "101" : {
                  "name" : "101",
                  "lines" : [
                    {
                      "action" : "ACCEPT",
                      "ipWildcard" : "1.0.1.0/24",
                      "lengthRange" : "24-24"
                    },
                    {
                      "action" : "ACCEPT",
                      "ipWildcard" : "1.0.2.0/24",
                      "lengthRange" : "24-24"
                    }
                  ]
                },
                "103" : {
                  "name" : "103",
                  "lines" : [
                    {
                      "action" : "ACCEPT",
                      "ipWildcard" : "3.0.1.0/24",
                      "lengthRange" : "24-24"
                    },
                    {
                      "action" : "ACCEPT",
                      "ipWildcard" : "3.0.2.0/24",
                      "lengthRange" : "24-24"
                    }
                  ]
                },
                "inbound_route_filter" : {
                  "name" : "inbound_route_filter",
                  "lines" : [
                    {
                      "action" : "REJECT",
                      "ipWildcard" : "2.0.0.0/8",
                      "lengthRange" : "8-32"
                    },
                    {
                      "action" : "ACCEPT",
                      "ipWildcard" : "0.0.0.0/0",
                      "lengthRange" : "0-32"
                    }
                  ]
                },
                "outbound_routes" : {
                  "name" : "outbound_routes",
                  "lines" : [
                    {
                      "action" : "ACCEPT",
                      "ipWildcard" : "2.128.0.0/9",
                      "lengthRange" : "16-32"
                    }
                  ]
                },
                "~MATCH_SUPPRESSED_SUMMARY_ONLY:default~" : {
                  "name" : "~MATCH_SUPPRESSED_SUMMARY_ONLY:default~",
                  "lines" : [
                    {
                      "action" : "ACCEPT",
                      "ipWildcard" : "2.128.0.0/16",
                      "lengthRange" : "17-32"
                    }
                  ]
                }
              },
              "routingPolicies" : {
                "as1_to_as2" : {
                  "name" : "as1_to_as2",
                  "statements" : [
                    {
                      "class" : "org.batfish.datamodel.routing_policy.statement.If",
                      "comment" : "~RMCLAUSE~as1_to_as2~100~",
                      "falseStatements" : [
                        {
                          "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                          "type" : "ReturnLocalDefaultAction"
                        }
                      ],
                      "guard" : {
                        "class" : "org.batfish.datamodel.routing_policy.expr.MatchCommunitySet",
                        "expr" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.NamedCommunitySet",
                          "name" : "as1_community"
                        }
                      },
                      "trueStatements" : [
                        {
                          "class" : "org.batfish.datamodel.routing_policy.statement.SetLocalPreference",
                          "localPreference" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.LiteralInt",
                            "value" : 350
                          }
                        },
                        {
                          "class" : "org.batfish.datamodel.routing_policy.statement.AddCommunity",
                          "expr" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.InlineCommunitySet",
                            "communities" : [
                              {
                                "prefix" : {
                                  "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                                  "value" : 1
                                },
                                "suffix" : {
                                  "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                                  "value" : 2
                                }
                              }
                            ]
                          }
                        },
                        {
                          "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                          "type" : "ReturnTrue"
                        }
                      ]
                    }
                  ]
                },
                "as2_to_as1" : {
                  "name" : "as2_to_as1",
                  "statements" : [
                    {
                      "class" : "org.batfish.datamodel.routing_policy.statement.If",
                      "comment" : "~RMCLAUSE~as2_to_as1~2~",
                      "falseStatements" : [
                        {
                          "class" : "org.batfish.datamodel.routing_policy.statement.If",
                          "comment" : "~RMCLAUSE~as2_to_as1~3~",
                          "falseStatements" : [
                            {
                              "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                              "type" : "ReturnLocalDefaultAction"
                            }
                          ],
                          "guard" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                            "prefix" : {
                              "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                            },
                            "prefixSet" : {
                              "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                              "name" : "103"
                            }
                          },
                          "trueStatements" : [
                            {
                              "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
                              "metric" : {
                                "class" : "org.batfish.datamodel.routing_policy.expr.LiteralLong",
                                "value" : 50
                              }
                            },
                            {
                              "class" : "org.batfish.datamodel.routing_policy.statement.AddCommunity",
                              "expr" : {
                                "class" : "org.batfish.datamodel.routing_policy.expr.InlineCommunitySet",
                                "communities" : [
                                  {
                                    "prefix" : {
                                      "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                                      "value" : 2
                                    },
                                    "suffix" : {
                                      "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                                      "value" : 1
                                    }
                                  }
                                ]
                              }
                            },
                            {
                              "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                              "type" : "ReturnTrue"
                            }
                          ]
                        }
                      ],
                      "guard" : {
                        "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                        "prefix" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                        },
                        "prefixSet" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                          "name" : "outbound_routes"
                        }
                      },
                      "trueStatements" : [
                        {
                          "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
                          "metric" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.LiteralLong",
                            "value" : 50
                          }
                        },
                        {
                          "class" : "org.batfish.datamodel.routing_policy.statement.AddCommunity",
                          "expr" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.InlineCommunitySet",
                            "communities" : [
                              {
                                "prefix" : {
                                  "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                                  "value" : 2
                                },
                                "suffix" : {
                                  "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                                  "value" : 1
                                }
                              }
                            ]
                          }
                        },
                        {
                          "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                          "type" : "ReturnTrue"
                        }
                      ]
                    }
                  ]
                },
                "as2_to_as3" : {
                  "name" : "as2_to_as3",
                  "statements" : [
                    {
                      "class" : "org.batfish.datamodel.routing_policy.statement.If",
                      "comment" : "~RMCLAUSE~as2_to_as3~1~",
                      "falseStatements" : [
                        {
                          "class" : "org.batfish.datamodel.routing_policy.statement.If",
                          "comment" : "~RMCLAUSE~as2_to_as3~2~",
                          "falseStatements" : [
                            {
                              "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                              "type" : "ReturnLocalDefaultAction"
                            }
                          ],
                          "guard" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                            "prefix" : {
                              "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                            },
                            "prefixSet" : {
                              "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                              "name" : "outbound_routes"
                            }
                          },
                          "trueStatements" : [
                            {
                              "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
                              "metric" : {
                                "class" : "org.batfish.datamodel.routing_policy.expr.LiteralLong",
                                "value" : 50
                              }
                            },
                            {
                              "class" : "org.batfish.datamodel.routing_policy.statement.AddCommunity",
                              "expr" : {
                                "class" : "org.batfish.datamodel.routing_policy.expr.InlineCommunitySet",
                                "communities" : [
                                  {
                                    "prefix" : {
                                      "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                                      "value" : 2
                                    },
                                    "suffix" : {
                                      "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                                      "value" : 3
                                    }
                                  }
                                ]
                              }
                            },
                            {
                              "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                              "type" : "ReturnTrue"
                            }
                          ]
                        }
                      ],
                      "guard" : {
                        "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                        "prefix" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                        },
                        "prefixSet" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                          "name" : "101"
                        }
                      },
                      "trueStatements" : [
                        {
                          "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
                          "metric" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.LiteralLong",
                            "value" : 50
                          }
                        },
                        {
                          "class" : "org.batfish.datamodel.routing_policy.statement.AddCommunity",
                          "expr" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.InlineCommunitySet",
                            "communities" : [
                              {
                                "prefix" : {
                                  "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                                  "value" : 2
                                },
                                "suffix" : {
                                  "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                                  "value" : 3
                                }
                              }
                            ]
                          }
                        },
                        {
                          "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                          "type" : "ReturnTrue"
                        }
                      ]
                    }
                  ]
                },
                "as3_to_as2" : {
                  "name" : "as3_to_as2",
                  "statements" : [
                    {
                      "class" : "org.batfish.datamodel.routing_policy.statement.If",
                      "comment" : "~RMCLAUSE~as3_to_as2~100~",
                      "falseStatements" : [
                        {
                          "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                          "type" : "ReturnLocalDefaultAction"
                        }
                      ],
                      "guard" : {
                        "class" : "org.batfish.datamodel.routing_policy.expr.MatchCommunitySet",
                        "expr" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.NamedCommunitySet",
                          "name" : "as3_community"
                        }
                      },
                      "trueStatements" : [
                        {
                          "class" : "org.batfish.datamodel.routing_policy.statement.SetLocalPreference",
                          "localPreference" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.LiteralInt",
                            "value" : 350
                          }
                        },
                        {
                          "class" : "org.batfish.datamodel.routing_policy.statement.AddCommunity",
                          "expr" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.InlineCommunitySet",
                            "communities" : [
                              {
                                "prefix" : {
                                  "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                                  "value" : 3
                                },
                                "suffix" : {
                                  "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                                  "value" : 2
                                }
                              }
                            ]
                          }
                        },
                        {
                          "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                          "type" : "ReturnTrue"
                        }
                      ]
                    }
                  ]
                },
                "~AGGREGATE_ROUTE_GEN:default:2.128.0.0/16~" : {
                  "name" : "~AGGREGATE_ROUTE_GEN:default:2.128.0.0/16~",
                  "statements" : [
                    {
                      "class" : "org.batfish.datamodel.routing_policy.statement.If",
                      "guard" : {
                        "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                        "prefix" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                        },
                        "prefixSet" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.ExplicitPrefixSet",
                          "prefixSpace" : [
                            "2.128.0.0/16:17-32"
                          ]
                        }
                      },
                      "trueStatements" : [
                        {
                          "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                          "type" : "ReturnTrue"
                        }
                      ]
                    }
                  ]
                },
                "~BGP_COMMON_EXPORT_POLICY:default~" : {
                  "name" : "~BGP_COMMON_EXPORT_POLICY:default~",
                  "statements" : [
                    {
                      "class" : "org.batfish.datamodel.routing_policy.statement.If",
                      "comment" : "Suppress more specific networks for summary-only aggregate-address networks",
                      "guard" : {
                        "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                        "prefix" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                        },
                        "prefixSet" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                          "name" : "~MATCH_SUPPRESSED_SUMMARY_ONLY:default~"
                        }
                      },
                      "trueStatements" : [
                        {
                          "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                          "type" : "Suppress"
                        }
                      ]
                    },
                    {
                      "class" : "org.batfish.datamodel.routing_policy.statement.If",
                      "guard" : {
                        "class" : "org.batfish.datamodel.routing_policy.expr.Disjunction",
                        "disjuncts" : [
                          {
                            "class" : "org.batfish.datamodel.routing_policy.expr.Conjunction",
                            "conjuncts" : [
                              {
                                "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                                "prefix" : {
                                  "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                                },
                                "prefixSet" : {
                                  "class" : "org.batfish.datamodel.routing_policy.expr.ExplicitPrefixSet",
                                  "prefixSpace" : [
                                    "2.128.0.0/16"
                                  ]
                                }
                              },
                              {
                                "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                                "protocol" : "aggregate"
                              },
                              {
                                "class" : "org.batfish.datamodel.routing_policy.expr.WithEnvironmentExpr",
                                "expr" : {
                                  "class" : "org.batfish.datamodel.routing_policy.expr.BooleanExprs$StaticBooleanExpr",
                                  "type" : "True"
                                },
                                "postStatements" : [
                                  {
                                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                                    "type" : "UnsetWriteIntermediateBgpAttributes"
                                  }
                                ],
                                "postTrueStatements" : [
                                  {
                                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                                    "type" : "SetReadIntermediateBgpAttributes"
                                  },
                                  {
                                    "class" : "org.batfish.datamodel.routing_policy.statement.SetOrigin",
                                    "originType" : {
                                      "class" : "org.batfish.datamodel.routing_policy.expr.LiteralOrigin",
                                      "originType" : "igp"
                                    }
                                  }
                                ],
                                "preStatements" : [
                                  {
                                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                                    "type" : "SetWriteIntermediateBgpAttributes"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                            "protocol" : "bgp"
                          },
                          {
                            "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                            "protocol" : "ibgp"
                          }
                        ]
                      },
                      "trueStatements" : [
                        {
                          "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                          "type" : "ReturnTrue"
                        }
                      ]
                    },
                    {
                      "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                      "type" : "ReturnFalse"
                    }
                  ]
                },
                "~BGP_PEER_EXPORT_POLICY:default:10.12.11.1~" : {
                  "name" : "~BGP_PEER_EXPORT_POLICY:default:10.12.11.1~",
                  "statements" : [
                    {
                      "class" : "org.batfish.datamodel.routing_policy.statement.If",
                      "comment" : "peer-export policy main conditional: exitAccept if true / exitReject if false",
                      "falseStatements" : [
                        {
                          "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                          "type" : "ExitReject"
                        }
                      ],
                      "guard" : {
                        "class" : "org.batfish.datamodel.routing_policy.expr.Conjunction",
                        "conjuncts" : [
                          {
                            "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                            "calledPolicyName" : "~BGP_COMMON_EXPORT_POLICY:default~"
                          },
                          {
                            "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                            "calledPolicyName" : "as2_to_as1"
                          }
                        ]
                      },
                      "trueStatements" : [
                        {
                          "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                          "type" : "ExitAccept"
                        }
                      ]
                    }
                  ]
                },
                "~BGP_PEER_EXPORT_POLICY:default:2.1.2.1~" : {
                  "name" : "~BGP_PEER_EXPORT_POLICY:default:2.1.2.1~",
                  "statements" : [
                    {
                      "class" : "org.batfish.datamodel.routing_policy.statement.If",
                      "comment" : "peer-export policy main conditional: exitAccept if true / exitReject if false",
                      "falseStatements" : [
                        {
                          "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                          "type" : "ExitReject"
                        }
                      ],
                      "guard" : {
                        "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                        "calledPolicyName" : "~BGP_COMMON_EXPORT_POLICY:default~"
                      },
                      "trueStatements" : [
                        {
                          "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                          "type" : "ExitAccept"
                        }
                      ]
                    }
                  ]
                },
                "~BGP_PEER_EXPORT_POLICY:default:2.1.2.2~" : {
                  "name" : "~BGP_PEER_EXPORT_POLICY:default:2.1.2.2~",
                  "statements" : [
                    {
                      "class" : "org.batfish.datamodel.routing_policy.statement.If",
                      "comment" : "peer-export policy main conditional: exitAccept if true / exitReject if false",
                      "falseStatements" : [
                        {
                          "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                          "type" : "ExitReject"
                        }
                      ],
                      "guard" : {
                        "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                        "calledPolicyName" : "~BGP_COMMON_EXPORT_POLICY:default~"
                      },
                      "trueStatements" : [
                        {
                          "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                          "type" : "ExitAccept"
                        }
                      ]
                    }
                  ]
                },
                "~OSPF_EXPORT_POLICY:default~" : {
                  "name" : "~OSPF_EXPORT_POLICY:default~",
                  "statements" : [
                    {
                      "class" : "org.batfish.datamodel.routing_policy.statement.If",
                      "comment" : "OSPF export routes for connected",
                      "guard" : {
                        "class" : "org.batfish.datamodel.routing_policy.expr.Conjunction",
                        "conjuncts" : [
                          {
                            "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                            "protocol" : "connected"
                          },
                          {
                            "class" : "org.batfish.datamodel.routing_policy.expr.Not",
                            "expr" : {
                              "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                              "comment" : "match default route",
                              "prefix" : {
                                "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                              },
                              "prefixSet" : {
                                "class" : "org.batfish.datamodel.routing_policy.expr.ExplicitPrefixSet",
                                "prefixSpace" : [
                                  "0.0.0.0/0"
                                ]
                              }
                            }
                          }
                        ]
                      },
                      "trueStatements" : [
                        {
                          "class" : "org.batfish.datamodel.routing_policy.statement.SetOspfMetricType",
                          "metricType" : "E2"
                        },
                        {
                          "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
                          "metric" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.LiteralLong",
                            "value" : 20
                          }
                        },
                        {
                          "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                          "type" : "ExitAccept"
                        }
                      ]
                    }
                  ]
                }
              },
              "vendorFamily" : {
                "cisco" : {
                  "aaa" : {
                    "authentication" : {
                      "login" : {
                        "privilegeMode" : true
                      }
                    },
                    "newModel" : true
                  },
                  "hostname" : "as2border1",
                  "lines" : {
                    "aux0" : {
                      "name" : "aux0",
                      "aaaAuthenticationLoginList" : {
                        "methods" : [
                          "LOCAL"
                        ]
                      },
                      "execTimeoutMinutes" : 0,
                      "execTimeoutSeconds" : 0,
                      "lineType" : "AUX"
                    },
                    "con0" : {
                      "name" : "con0",
                      "execTimeoutMinutes" : 0,
                      "execTimeoutSeconds" : 0,
                      "lineType" : "CON"
                    },
                    "vty0" : {
                      "name" : "vty0",
                      "aaaAuthenticationLoginList" : {
                        "methods" : [
                          "LOCAL"
                        ]
                      },
                      "execTimeoutMinutes" : 0,
                      "execTimeoutSeconds" : 0,
                      "lineType" : "VTY"
                    },
                    "vty1" : {
                      "name" : "vty1",
                      "aaaAuthenticationLoginList" : {
                        "methods" : [
                          "LOCAL"
                        ]
                      },
                      "execTimeoutMinutes" : 0,
                      "execTimeoutSeconds" : 0,
                      "lineType" : "VTY"
                    },
                    "vty2" : {
                      "name" : "vty2",
                      "aaaAuthenticationLoginList" : {
                        "methods" : [
                          "LOCAL"
                        ]
                      },
                      "execTimeoutMinutes" : 0,
                      "execTimeoutSeconds" : 0,
                      "lineType" : "VTY"
                    },
                    "vty3" : {
                      "name" : "vty3",
                      "aaaAuthenticationLoginList" : {
                        "methods" : [
                          "LOCAL"
                        ]
                      },
                      "execTimeoutMinutes" : 0,
                      "execTimeoutSeconds" : 0,
                      "lineType" : "VTY"
                    },
                    "vty4" : {
                      "name" : "vty4",
                      "aaaAuthenticationLoginList" : {
                        "methods" : [
                          "LOCAL"
                        ]
                      },
                      "execTimeoutMinutes" : 0,
                      "execTimeoutSeconds" : 0,
                      "lineType" : "VTY"
                    }
                  },
                  "logging" : {
                    "on" : true
                  },
                  "ntp" : {
                    "servers" : {
                      "18.18.18.18" : {
                        "name" : "18.18.18.18"
                      },
                      "23.23.23.23" : {
                        "name" : "23.23.23.23"
                      }
                    }
                  },
                  "services" : {
                    "timestamps" : {
                      "enabled" : true,
                      "subservices" : {
                        "debug" : {
                          "enabled" : true,
                          "subservices" : {
                            "datetime" : {
                              "enabled" : true,
                              "subservices" : {
                                "msec" : {
                                  "enabled" : true
                                }
                              }
                            }
                          }
                        },
                        "log" : {
                          "enabled" : true,
                          "subservices" : {
                            "datetime" : {
                              "enabled" : true,
                              "subservices" : {
                                "msec" : {
                                  "enabled" : true
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "vrfs" : {
                "default" : {
                  "name" : "default",
                  "aggregateRoutes" : [
                    {
                      "class" : "org.batfish.datamodel.GeneratedRoute",
                      "administrativeCost" : 200,
                      "asPath" : [ ],
                      "discard" : true,
                      "generationPolicy" : "~AGGREGATE_ROUTE_GEN:default:2.128.0.0/16~",
                      "metric" : 0,
                      "network" : "2.128.0.0/16",
                      "nextHopIp" : "AUTO/NONE(-1l)"
                    }
                  ],
                  "bgpProcess" : {
                    "multipathEbgp" : true,
                    "multipathEquivalentAsPathMatchMode" : "EXACT_PATH",
                    "multipathIbgp" : true,
                    "neighbors" : {
                      "2.1.2.1/32" : {
                        "class" : "org.batfish.datamodel.BgpActivePeerConfig",
                        "additionalPathsReceive" : true,
                        "additionalPathsSelectAll" : true,
                        "additionalPathsSend" : true,
                        "advertiseExternal" : false,
                        "advertiseInactive" : true,
                        "allowLocalAsIn" : false,
                        "allowRemoteAsOut" : true,
                        "clusterId" : 33620225,
                        "defaultMetric" : 0,
                        "ebgpMultihop" : false,
                        "enforceFirstAs" : false,
                        "exportPolicy" : "~BGP_PEER_EXPORT_POLICY:default:2.1.2.1~",
                        "group" : "as2",
                        "localAs" : 2,
                        "localIp" : "2.1.1.1",
                        "peerAddress" : "2.1.2.1",
                        "remoteAs" : 2,
                        "routeReflectorClient" : false,
                        "sendCommunity" : true
                      },
                      "2.1.2.2/32" : {
                        "class" : "org.batfish.datamodel.BgpActivePeerConfig",
                        "additionalPathsReceive" : true,
                        "additionalPathsSelectAll" : true,
                        "additionalPathsSend" : true,
                        "advertiseExternal" : false,
                        "advertiseInactive" : true,
                        "allowLocalAsIn" : false,
                        "allowRemoteAsOut" : true,
                        "clusterId" : 33620225,
                        "defaultMetric" : 0,
                        "ebgpMultihop" : false,
                        "enforceFirstAs" : false,
                        "exportPolicy" : "~BGP_PEER_EXPORT_POLICY:default:2.1.2.2~",
                        "group" : "as2",
                        "localAs" : 2,
                        "localIp" : "2.1.1.1",
                        "peerAddress" : "2.1.2.2",
                        "remoteAs" : 2,
                        "routeReflectorClient" : false,
                        "sendCommunity" : true
                      },
                      "10.12.11.1/32" : {
                        "class" : "org.batfish.datamodel.BgpActivePeerConfig",
                        "additionalPathsReceive" : true,
                        "additionalPathsSelectAll" : true,
                        "additionalPathsSend" : true,
                        "advertiseExternal" : false,
                        "advertiseInactive" : true,
                        "allowLocalAsIn" : false,
                        "allowRemoteAsOut" : true,
                        "clusterId" : 33620225,
                        "defaultMetric" : 0,
                        "ebgpMultihop" : false,
                        "enforceFirstAs" : false,
                        "exportPolicy" : "~BGP_PEER_EXPORT_POLICY:default:10.12.11.1~",
                        "exportPolicySources" : [
                          "as2_to_as1"
                        ],
                        "group" : "as1",
                        "importPolicy" : "as1_to_as2",
                        "importPolicySources" : [
                          "as1_to_as2"
                        ],
                        "localAs" : 2,
                        "localIp" : "10.12.11.2",
                        "peerAddress" : "10.12.11.1",
                        "remoteAs" : 1,
                        "routeReflectorClient" : false,
                        "sendCommunity" : true
                      }
                    },
                    "routerId" : "2.1.1.1",
                    "tieBreaker" : "ARRIVAL_ORDER"
                  },
                  "interfaces" : [
                    "Ethernet0/0",
                    "GigabitEthernet0/0",
                    "GigabitEthernet1/0",
                    "GigabitEthernet2/0",
                    "Loopback0"
                  ],
                  "ospfProcess" : {
                    "areas" : {
                      "1" : {
                        "name" : 1,
                        "interfaces" : [
                          "GigabitEthernet1/0",
                          "GigabitEthernet2/0",
                          "Loopback0"
                        ],
                        "stubType" : "NONE"
                      }
                    },
                    "exportPolicy" : "~OSPF_EXPORT_POLICY:default~",
                    "processId" : "1",
                    "referenceBandwidth" : 1.0E8,
                    "routerId" : "2.1.1.1"
                  }
                }
              }
            }
          }
        }
      }
    },
    "summary" : {
      "numFailed" : 0,
      "numPassed" : 0,
      "numResults" : 1
    }
  }
]