#this file assumes that we are running from top-level source directory

add-batfish-option haltonconverterror
add-batfish-option haltonparseerror
add-batfish-option verboseparse

# set up the example network
init-snapshot networks/example jsonpath-example

# assertions 
test tests/jsonpath-addons/jsonpath-assertion-countequals.ref get jsonpath innerQuestion: {"class": "org.batfish.question.NodesQuestionPlugin$NodesQuestion", summary: False}, paths: [{"path" : "$.nodes['as3border1']..mtu", "assertion": {"type" : "countEquals", "expect": 5}}]

test tests/jsonpath-addons/jsonpath-assertion-countlessthan.ref get jsonpath innerQuestion: {"class": "org.batfish.question.NodesQuestionPlugin$NodesQuestion", summary: False}, paths: [{"path" : "$.nodes['as3border1']..mtu", "assertion": {"type" : "countLessThan", "expect": 5}}]

test tests/jsonpath-addons/jsonpath-assertion-countmorethan.ref get jsonpath innerQuestion: {"class": "org.batfish.question.NodesQuestionPlugin$NodesQuestion", summary: False}, paths: [{"path" : "$.nodes['as3border1']..mtu", "assertion": {"type" : "countMoreThan", "expect": 5}}]

test tests/jsonpath-addons/jsonpath-assertion-equals-no-suffix.ref get jsonpath innerQuestion: {"class": "org.batfish.question.NodesQuestionPlugin$NodesQuestion", summary: False}, paths: [{"path" : "$.nodes['as3border1']..mtu", "assertion": {"type" : "equals", "expect": [{"concretePath" : ["'nodes'", "'as3border1'", "'interfaces'", "'Ethernet0/0'", "'mtu'"]}, {"concretePath" : ["'nodes'", "'as3border1'","'interfaces'", "'GigabitEthernet0/0'", "'mtu'"]}, {"concretePath" : ["'nodes'", "'as3border1'", "'interfaces'", "'GigabitEthernet1/0'", "'mtu'"]}, {"concretePath" : ["'nodes'", "'as3border1'", "'interfaces'", "'Loopback0'", "'mtu'"]}]}}]

test tests/jsonpath-addons/jsonpath-assertion-equals-with-suffix.ref get jsonpath innerQuestion: {"class": "org.batfish.question.NodesQuestionPlugin$NodesQuestion", summary: False}, paths: [{"path" : "$.nodes['as3border1']..mtu", suffix: True, "assertion": {"type" : "equals", "expect": [{"concretePath" : ["'nodes'","'as3border1'", "'interfaces'", "'Ethernet0/0'", "'mtu'"], "suffix": 1500}, {"concretePath" : ["'nodes'", "'as3border1'", "'interfaces'", "'GigabitEthernet0/0'", "'mtu'"], "suffix": 1500}, {"concretePath" : ["'nodes'", "'as3border1'", "'interfaces'", "'GigabitEthernet1/0'", "'mtu'"], "suffix": 1500}, {"concretePath" : ["'nodes'", "'as3border1'", "'interfaces'", "'Loopback0'", "'mtu'"], "suffix": 1500}]}}]

# exceptions 
test tests/jsonpath-addons/jsonpath-exception-with-suffix.ref get jsonpath innerQuestion: {"class": "org.batfish.question.NodesQuestionPlugin$NodesQuestion", summary: False}, paths: [{"path" : "$.nodes['as3border1']..mtu", suffix: True, "exceptions": [{"concretePath" : ["'nodes'", "'as3border1'", "'interfaces'", "'Ethernet0/0'", "'mtu'"], "suffix": 1500}]}]

test tests/jsonpath-addons/jsonpath-exception-assertion.ref get jsonpath innerQuestion: {"class": "org.batfish.question.NodesQuestionPlugin$NodesQuestion", summary: False}, paths: [{"path" : "$.nodes['as3border1']..mtu", suffix: True, "exceptions": [{"concretePath" : ["'nodes'", "'as3border1'", "'interfaces'", "'Ethernet0/0'", "'mtu'"], "suffix": 1500}], "assertion": {"type" : "countequals", "expect" : 3}}]

# display hints
test tests/jsonpath-addons/jsonpath-display-hints-prefix.ref get jsonpath innerQuestion: {"class": "org.batfish.question.NodesQuestionPlugin$NodesQuestion", summary: False}, paths: [{"path": "$.nodes.*", suffix: False, displayHints: { extractions: { node: { schema : "String", method: { use: prefix, index: 1}}}}}]

test tests/jsonpath-addons/jsonpath-display-hints-prefixofsuffix.ref get jsonpath innerQuestion: {"class": "org.batfish.question.NodesQuestionPlugin$NodesQuestion", summary: False}, paths: [{"path": "$.nodes.as2border1", suffix: True, displayHints: { extractions: { interfaces: { schema : "List<String>", method: { use: prefixofsuffix, filter: $.interfaces.*, index: 1}}}}}]

test tests/jsonpath-addons/jsonpath-display-hints-suffixofsuffix.ref get jsonpath innerQuestion: {"class": "org.batfish.question.NodesQuestionPlugin$NodesQuestion", summary: False}, paths: [{"path": "$.nodes.as2border1", suffix: True, displayHints: { extractions: { mtus: { schema : "List<Integer>", method: { use: suffixofsuffix, filter: $.interfaces.*.mtu}}}}}]

# load templates
load-questions tests/jsonpath-addons/templates
test -raw tests/jsonpath-addons/add-exceptions-assertions.ref configure-template new1AaaAccountingCommands aaaAccountingCommands exceptions=[{"concretePath" : ["'nodes'", "'as3border1'", "'interfaces'", "'Ethernet0/0'", "'mtu'"], "suffix": 1500}], assertion={"type" : "countequals", "expect" : 3}
test -raw tests/jsonpath-addons/remove-assertions.ref configure-template new2AaaAccountingCommands new1AaaAccountingCommands assertion={}
test -raw tests/jsonpath-addons/remove-exceptions.ref configure-template new3AaaAccountingCommands new2AaaAccountingCommands exceptions=[]

