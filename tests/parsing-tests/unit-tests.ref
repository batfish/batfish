{
  "answerElements" : [
    {
      "class" : "org.batfish.datamodel.answers.ParseVendorConfigurationAnswerElement",
      "fileMap" : {
        "aaa_accounting" : [
          "configs/aaa_accounting"
        ],
        "aaa_authentication_login_default_tacacs_local" : [
          "configs/aaa_authentication_login_default_tacacs_local"
        ],
        "aaa_group_server_source_interface" : [
          "configs/aaa_group_server_source_interface"
        ],
        "access_list" : [
          "configs/access_list"
        ],
        "address_family" : [
          "configs/address_family"
        ],
        "aggaddress" : [
          "configs/ios_bgp_aggregate_address"
        ],
        "arista-event-handler" : [
          "configs/arista-event-handler"
        ],
        "arista_acl" : [
          "configs/arista_acl"
        ],
        "arista_bgp" : [
          "configs/arista_bgp"
        ],
        "arista_dhcp_relay" : [
          "configs/arista_dhcp_relay"
        ],
        "arista_interface" : [
          "configs/arista_interface"
        ],
        "arista_ip_route" : [
          "configs/arista_ip_route"
        ],
        "arista_logging" : [
          "configs/arista-logging"
        ],
        "arista_misc" : [
          "configs/arista_misc"
        ],
        "arista_nat" : [
          "configs/arista_nat"
        ],
        "arista_ospf" : [
          "configs/arista_ospf"
        ],
        "arista_queue_monitor" : [
          "configs/arista_queue_monitor"
        ],
        "arista_username" : [
          "configs/arista_username"
        ],
        "arista_vrf" : [
          "configs/arista_vrf"
        ],
        "aruba_aaa" : [
          "configs/aruba_aaa"
        ],
        "aruba_acl" : [
          "configs/aruba_acl"
        ],
        "aruba_airgroup" : [
          "configs/aruba_airgroup"
        ],
        "aruba_crypto" : [
          "configs/aruba_crypto"
        ],
        "aruba_dhcp" : [
          "configs/aruba_dhcp"
        ],
        "aruba_interface" : [
          "configs/aruba_interface"
        ],
        "aruba_logging" : [
          "configs/aruba_logging"
        ],
        "aruba_misc" : [
          "configs/aruba_misc"
        ],
        "aruba_net" : [
          "configs/aruba_net"
        ],
        "aruba_snmp" : [
          "configs/aruba_snmp"
        ],
        "aruba_time_range" : [
          "configs/aruba_time_range"
        ],
        "aruba_user_role" : [
          "configs/aruba_user_role"
        ],
        "aruba_vlan" : [
          "configs/aruba_vlan"
        ],
        "aruba_voice" : [
          "configs/aruba_voice"
        ],
        "aruba_vpn" : [
          "configs/aruba_vpn"
        ],
        "as_path_prepend" : [
          "configs/as_path_prepend"
        ],
        "asa_acl" : [
          "configs/asa_acl"
        ],
        "asa_banner" : [
          "configs/asa_banner"
        ],
        "asa_interface" : [
          "configs/asa_interface"
        ],
        "asa_nat" : [
          "configs/asa_nat"
        ],
        "asa_object_groups" : [
          "configs/asa_object_groups"
        ],
        "asa_ospf" : [
          "configs/asa_ospf"
        ],
        "asa_ssh" : [
          "configs/asa_ssh"
        ],
        "aws_configs" : [
          "input/aws_configs/NatGateways.json"
        ],
        "banner" : [
          "configs/banner"
        ],
        "banner_dos" : [
          "configs/banner_dos"
        ],
        "bgp-allow" : [
          "configs/juniper_bgp_allow"
        ],
        "bgp-disable" : [
          "configs/juniper_bgp_disable"
        ],
        "bgp-enforce-first-as" : [
          "configs/juniper_bgp_enforce_fist_as"
        ],
        "bgp_address_family" : [
          "configs/bgp_address_family"
        ],
        "bgp_default_originate_policy" : [
          "configs/bgp_default_originate_policy"
        ],
        "bgp_foundry" : [
          "configs/bgp_foundry"
        ],
        "bgp_nsr" : [
          "configs/bgp_nsr"
        ],
        "bgp_route_policy" : [
          "configs/bgp_route_policy"
        ],
        "cadant_acl" : [
          "configs/cadant_acl"
        ],
        "cadant_banner" : [
          "configs/cadant_banner"
        ],
        "cadant_bgp" : [
          "configs/cadant_bgp"
        ],
        "cadant_cable" : [
          "configs/cadant_cable"
        ],
        "cadant_interface" : [
          "configs/cadant_interface"
        ],
        "cadant_ip_route" : [
          "configs/cadant_ip_route"
        ],
        "cadant_isis" : [
          "configs/cadant_isis"
        ],
        "cadant_line" : [
          "configs/cadant_line"
        ],
        "cadant_logging" : [
          "configs/cadant_logging"
        ],
        "cadant_misc" : [
          "configs/cadant_misc"
        ],
        "cadant_prefix_list" : [
          "configs/cadant_prefix_list"
        ],
        "cadant_qos" : [
          "configs/cadant_qos"
        ],
        "cadant_rip" : [
          "configs/cadant_rip"
        ],
        "cadant_route_map" : [
          "configs/cadant_route_map"
        ],
        "cadant_snmp" : [
          "configs/cadant_snmp"
        ],
        "cisco-zone" : [
          "configs/cisco_zone"
        ],
        "cisco_aaa" : [
          "configs/cisco_aaa"
        ],
        "cisco_acl" : [
          "configs/cisco_acl"
        ],
        "cisco_additional_paths" : [
          "configs/cisco_additional_paths"
        ],
        "cisco_authentication" : [
          "configs/cisco_authentication"
        ],
        "cisco_bgp" : [
          "configs/cisco_bgp"
        ],
        "cisco_bgp_confederation" : [
          "configs/cisco_bgp_confederation"
        ],
        "cisco_cable" : [
          "configs/cisco_cable"
        ],
        "cisco_callhome" : [
          "configs/cisco_callhome"
        ],
        "cisco_control_plane" : [
          "configs/cisco_control_plane"
        ],
        "cisco_controller" : [
          "configs/cisco_controller"
        ],
        "cisco_crypto" : [
          "configs/cisco_crypto"
        ],
        "cisco_dhcp" : [
          "configs/cisco_dhcp"
        ],
        "cisco_domain" : [
          "configs/cisco_domain"
        ],
        "cisco_dot11" : [
          "configs/cisco_dot11"
        ],
        "cisco_dot1x" : [
          "configs/cisco_dot1x"
        ],
        "cisco_dspfarm" : [
          "configs/cisco_dscpfarm"
        ],
        "cisco_dynamic_access_policy_record" : [
          "configs/cisco_dynamic_access_policy_record"
        ],
        "cisco_eigrp" : [
          "configs/cisco_eigrp"
        ],
        "cisco_enable" : [
          "configs/cisco_enable"
        ],
        "cisco_flow" : [
          "configs/cisco_flow"
        ],
        "cisco_hardware" : [
          "configs/cisco_hardware"
        ],
        "cisco_hsrp" : [
          "configs/cisco_hsrp"
        ],
        "cisco_interface" : [
          "configs/cisco_interface"
        ],
        "cisco_ios_neighbor" : [
          "configs/cisco_ios_neighbor"
        ],
        "cisco_ip" : [
          "configs/cisco_ip"
        ],
        "cisco_ip_nat" : [
          "configs/cisco_ip_nat"
        ],
        "cisco_ip_route" : [
          "configs/cisco_ip_route"
        ],
        "cisco_ipsla" : [
          "configs/cisco_ipsla"
        ],
        "cisco_ipv6" : [
          "configs/cisco_ipv6"
        ],
        "cisco_ipv6_access_list" : [
          "configs/cisco_ipv6_access_list"
        ],
        "cisco_isis" : [
          "configs/cisco_isis"
        ],
        "cisco_l2tp" : [
          "configs/cisco_l2tp"
        ],
        "cisco_line" : [
          "configs/cisco_line"
        ],
        "cisco_logging" : [
          "configs/cisco_logging"
        ],
        "cisco_mac_acl" : [
          "configs/cisco_mac_acl"
        ],
        "cisco_misc" : [
          "configs/cisco_misc"
        ],
        "cisco_monitor" : [
          "configs/cisco_monitor"
        ],
        "cisco_mpls" : [
          "configs/cisco_mpls"
        ],
        "cisco_multicast" : [
          "configs/cisco_multicast"
        ],
        "cisco_ntp" : [
          "configs/cisco_ntp"
        ],
        "cisco_nxos" : [
          "configs/cisco_nxos"
        ],
        "cisco_nxos_bgp" : [
          "configs/cisco_nxos_bgp"
        ],
        "cisco_ospf" : [
          "configs/cisco_ospf"
        ],
        "cisco_ospf_ipv6" : [
          "configs/cisco_ospf_ipv6"
        ],
        "cisco_ospf_multi_process" : [
          "configs/cisco_ospf_multi_process"
        ],
        "cisco_ospfv3" : [
          "configs/cisco_opsfv3"
        ],
        "cisco_pim" : [
          "configs/cisco_pim"
        ],
        "cisco_platform" : [
          "configs/cisco_platform"
        ],
        "cisco_privilege" : [
          "configs/cisco_privilege"
        ],
        "cisco_qos" : [
          "configs/cisco_qos"
        ],
        "cisco_queue_monitor" : [
          "configs/cisco_queue_monitor"
        ],
        "cisco_redundancy" : [
          "configs/cisco_redundancy"
        ],
        "cisco_rip" : [
          "configs/cisco_rip"
        ],
        "cisco_role" : [
          "configs/cisco_role"
        ],
        "cisco_route_map" : [
          "configs/cisco_route_map"
        ],
        "cisco_sccp" : [
          "configs/cisco_sccp"
        ],
        "cisco_snmp" : [
          "configs/cisco_snmp"
        ],
        "cisco_spanning_tree" : [
          "configs/cisco_spanning_tree"
        ],
        "cisco_ssh" : [
          "configs/cisco_ssh"
        ],
        "cisco_stcapp" : [
          "configs/cisco_stcapp"
        ],
        "cisco_style_acl1" : [
          "configs/cisco_style_acl1"
        ],
        "cisco_style_acl2" : [
          "configs/cisco_style_acl2"
        ],
        "cisco_system" : [
          "configs/cisco_system"
        ],
        "cisco_tacacs" : [
          "configs/cisco_tacacs"
        ],
        "cisco_track" : [
          "configs/cisco_track"
        ],
        "cisco_username" : [
          "configs/cisco_username"
        ],
        "cisco_username_without_password" : [
          "configs/cisco_username_without_password"
        ],
        "cisco_vdc" : [
          "configs/cisco_vdc"
        ],
        "cisco_vlan" : [
          "configs/cisco_vlan"
        ],
        "cisco_voice" : [
          "configs/cisco_voice"
        ],
        "cisco_vpdn" : [
          "configs/cisco_vpdn"
        ],
        "cisco_vpn" : [
          "configs/cisco_vpn"
        ],
        "cisco_vrf" : [
          "configs/cisco_vrf"
        ],
        "cisco_vrrp" : [
          "configs/cisco_vrrp"
        ],
        "cisco_webvpn" : [
          "configs/cisco_webvpn"
        ],
        "cisco_wsma" : [
          "configs/cisco_wsma"
        ],
        "colon_in_vrf" : [
          "configs/colon_in_vrf"
        ],
        "commset" : [
          "configs/ios_xr_community_set"
        ],
        "community-name-numbers" : [
          "configs/community_name_numbers"
        ],
        "community-name-numbers_dos" : [
          "configs/community_name_numbers_dos"
        ],
        "community_list_named" : [
          "configs/community_list_named"
        ],
        "community_set" : [
          "configs/community_set"
        ],
        "cumulus_nclu" : [
          "configs/cumulus_nclu"
        ],
        "cumulus_nclu_invalid_bonds" : [
          "configs/cumulus_nclu_invalid_bonds"
        ],
        "cumulus_nclu_invalid_interfaces" : [
          "configs/cumulus_nclu_invalid_interfaces"
        ],
        "cumulus_nclu_invalid_vrfs" : [
          "configs/cumulus_nclu_invalid_vrfs"
        ],
        "cumulus_nclu_invalid_vxlans" : [
          "configs/cumulus_nclu_invalid_vxlans"
        ],
        "eos_mlag" : [
          "configs/eos_mlag"
        ],
        "eos_trunk_group" : [
          "configs/eos_trunk_group"
        ],
        "f5_bigip_imish_malformed" : [
          "configs/f5_bigip_imish_malformed"
        ],
        "f5_bigip_structured_ltm" : [
          "configs/f5_bigip_structured_ltm"
        ],
        "f5_bigip_structured_malformed" : [
          "configs/f5_bigip_structured_malformed"
        ],
        "f5_bigip_structured_net" : [
          "configs/f5_bigip_structured_net"
        ],
        "f5_bigip_structured_net_routing_bgp" : [
          "configs/f5_bigip_structured_net_routing_bgp"
        ],
        "f5_bigip_structured_net_routing_prefix_list" : [
          "configs/f5_bigip_structured_net_routing_prefix_list"
        ],
        "f5_bigip_structured_net_routing_route_map" : [
          "configs/f5_bigip_structured_net_routing_route_map"
        ],
        "f5_bigip_structured_sys" : [
          "configs/f5_bigip_structured_sys"
        ],
        "f5_bigip_structured_with_imish" : [
          "configs/f5_bigip_structured_with_imish"
        ],
        "foundry_access_list" : [
          "configs/foundry_access_list"
        ],
        "foundry_bgp" : [
          "configs/foundry_bgp"
        ],
        "foundry_interface" : [
          "configs/foundry_interface"
        ],
        "foundry_misc" : [
          "configs/foundry_misc"
        ],
        "foundry_vlan_group" : [
          "configs/foundry_vlan_group"
        ],
        "host1" : [
          "hosts/host1.json"
        ],
        "host2" : [
          "configs/host2",
          "hosts/host2.json"
        ],
        "if_tag_is" : [
          "configs/if_tag_is"
        ],
        "interface-reth" : [
          "configs/juniper_reth_interfaces"
        ],
        "interface_exit" : [
          "configs/interface_exit"
        ],
        "interface_name" : [
          "configs/interface_name"
        ],
        "interface_sdr" : [
          "configs/interface_sdr"
        ],
        "interfacemtu" : [
          "configs/juniper-interfaces"
        ],
        "ios_bfd" : [
          "configs/ios_bfd"
        ],
        "ios_bgp" : [
          "configs/ios_bgp"
        ],
        "ios_interface" : [
          "configs/ios_interface"
        ],
        "ios_standby" : [
          "configs/ios_standby"
        ],
        "ios_template" : [
          "configs/ios_template"
        ],
        "ios_xr_acl" : [
          "configs/ios_xr_acl"
        ],
        "ios_xr_bgp" : [
          "configs/ios_xr_bgp"
        ],
        "ios_xr_bgp_neighbor_group" : [
          "configs/ios_xr_bgp_neighbor_group"
        ],
        "ios_xr_class_map" : [
          "configs/ios_xr_class_map"
        ],
        "ios_xr_isis" : [
          "configs/ios_xr_isis"
        ],
        "ios_xr_logging" : [
          "configs/ios_xr_logging"
        ],
        "ios_xr_misc" : [
          "configs/ios_xr_misc"
        ],
        "ios_xr_multipart" : [
          "configs/ios_xr_multipart"
        ],
        "ios_xr_ntp" : [
          "configs/ios_xr_ntp"
        ],
        "ios_xr_ospf" : [
          "configs/ios_xr_ospf"
        ],
        "ios_xr_router_static" : [
          "configs/ios_xr_router_static"
        ],
        "ios_xr_ssh" : [
          "configs/ios_xr_ssh"
        ],
        "ios_xr_taskgroup" : [
          "configs/ios_xr_taskgroup"
        ],
        "iosxrmulticast" : [
          "configs/ios_xr_multicast"
        ],
        "ip_prefix_list_single_line" : [
          "configs/ip_prefix_list_single_line"
        ],
        "iptables/host1.iptables" : [
          "iptables/host1.iptables"
        ],
        "iptables/host2.iptables" : [
          "iptables/host2.iptables"
        ],
        "isr_crypto_gdoi" : [
          "configs/isr_crypto"
        ],
        "isr_voip" : [
          "configs/isr_voip"
        ],
        "juniper-ospf" : [
          "configs/juniper_ospf"
        ],
        "juniper-tcpflags" : [
          "configs/juniper-tcpflags"
        ],
        "juniper_application" : [
          "configs/juniper_application"
        ],
        "juniper_apply_macro" : [
          "configs/juniper_apply_macro"
        ],
        "juniper_as_path_group" : [
          "configs/juniper_as_path_group"
        ],
        "juniper_bgp" : [
          "configs/juniper_bgp"
        ],
        "juniper_bgp_authentication" : [
          "configs/juniper_bgp_authentication"
        ],
        "juniper_bgp_remove_private_as" : [
          "configs/juniper_bgp_remove_private_as"
        ],
        "juniper_extended_community" : [
          "configs/juniper_extended_community"
        ],
        "juniper_firewall" : [
          "configs/juniper_firewall"
        ],
        "juniper_forwarding_options" : [
          "configs/juniper_forwarding_options"
        ],
        "juniper_interfaces" : [
          "configs/juniper_interfaces"
        ],
        "juniper_isis" : [
          "configs/juniper_isis"
        ],
        "juniper_l2_learning" : [
          "configs/juniper_l2_learning"
        ],
        "juniper_misc" : [
          "configs/juniper_misc"
        ],
        "juniper_nat" : [
          "configs/juniper_nat"
        ],
        "juniper_ntp" : [
          "configs/juniper_ntp"
        ],
        "juniper_ospf_stub_areas" : [
          "configs/juniper_ospf_stub_areas"
        ],
        "juniper_passwords" : [
          "configs/juniper_passwords"
        ],
        "juniper_policy_statement" : [
          "configs/juniper_policy_statement"
        ],
        "juniper_relay" : [
          "configs/juniper_relay"
        ],
        "juniper_rib_groups" : [
          "configs/juniper_rib_groups"
        ],
        "juniper_route_filter" : [
          "configs/juniper_route_filter"
        ],
        "juniper_routing_options" : [
          "configs/juniper_routing_options"
        ],
        "juniper_routing_policy" : [
          "configs/juniper_routing_policy"
        ],
        "juniper_security" : [
          "configs/juniper_security"
        ],
        "juniper_snmp" : [
          "configs/juniper_snmp"
        ],
        "juniper_syslog" : [
          "configs/juniper_syslog"
        ],
        "juniper_system" : [
          "configs/juniper_system"
        ],
        "juniper_tacplus" : [
          "configs/juniper_tacplus"
        ],
        "juniper_trailing_space" : [
          "configs/juniper_trailing_space"
        ],
        "juniper_vlan" : [
          "configs/juniper_vlan"
        ],
        "l2vpn" : [
          "configs/ios_xr_l2vpn"
        ],
        "local_v6_addr" : [
          "configs/local_v6_addr"
        ],
        "mac_access_list" : [
          "configs/mac_access_list"
        ],
        "mcastrouting" : [
          "configs/ios_xr_multicast_routing"
        ],
        "mos_interface" : [
          "configs/mos_interface"
        ],
        "mos_misc" : [
          "configs/mos_misc"
        ],
        "msdp_originator_id" : [
          "configs/msdp_originator_id"
        ],
        "named_and_numbered_lists" : [
          "configs/named_and_numbered_lists"
        ],
        "neighbor_mix" : [
          "configs/neighbor_mix"
        ],
        "neighbor_nxos" : [
          "configs/neighbor_nxos"
        ],
        "network6" : [
          "configs/network6"
        ],
        "nexus" : [
          "configs/nexus"
        ],
        "nexus_bgp" : [
          "configs/nexus_bgp"
        ],
        "nexus_ntp" : [
          "configs/nexus_ntp"
        ],
        "nexus_ssh" : [
          "configs/nexus_ssh"
        ],
        "no_aaa_group_server" : [
          "configs/no_aaa_group_server"
        ],
        "no_ip_name_server" : [
          "configs/cisco_noipns"
        ],
        "no_mask_reply" : [
          "configs/cisco_nomaskreply"
        ],
        "no_snmp_server" : [
          "configs/cisco_nosnmp"
        ],
        "non_nexus_neighbor_af" : [
          "configs/non_nexus_neighbor_af"
        ],
        "nxos_acl" : [
          "configs/nxos_acl"
        ],
        "nxos_bgp" : [
          "configs/nxos_bgp"
        ],
        "nxos_interface" : [
          "configs/nxos_interface"
        ],
        "nxos_misc" : [
          "configs/nxos_misc"
        ],
        "nxos_ospf" : [
          "configs/nxos_ospf"
        ],
        "nxos_route_map_continue" : [
          "configs/nxos_route_map_continue"
        ],
        "nxos_system" : [
          "configs/nxos_system"
        ],
        "openflow" : [
          "configs/openflow"
        ],
        "ospf-disable" : [
          "configs/juniper_ospf_disable"
        ],
        "peer_template" : [
          "configs/peer_template"
        ],
        "pim" : [
          "configs/pim"
        ],
        "pim_snooping" : [
          "configs/pim_snooping"
        ],
        "prefix_list_ipv4" : [
          "configs/prefix_list_ipv4"
        ],
        "preset" : [
          "configs/ios_xr_prefix_set"
        ],
        "route_maps_in_two_address_families" : [
          "configs/route_maps_in_two_address_families"
        ],
        "route_policy_as_path_set" : [
          "configs/route_policy_as_path"
        ],
        "route_policy_igp_cost" : [
          "configs/route_policy_igp_cost"
        ],
        "route_policy_metric_type" : [
          "configs/route_policy_metric_type"
        ],
        "route_policy_param" : [
          "configs/route_policy_param"
        ],
        "router_msdp" : [
          "configs/router_msdp"
        ],
        "rp" : [
          "configs/ios_xr_route_policy"
        ],
        "set_inline_community" : [
          "configs/set_inline_community"
        ],
        "statistics" : [
          "configs/statistics"
        ],
        "switchport_range" : [
          "configs/switchport_range"
        ],
        "syslog_source_interface" : [
          "configs/syslog_source_interface"
        ],
        "taskgroup" : [
          "configs/taskgroup"
        ],
        "tcpflags" : [
          "configs/tcpflags"
        ],
        "test" : [
          "configs/ip_default_route_classless"
        ],
        "underscore_variable" : [
          "configs/underscore_variable"
        ],
        "variables" : [
          "configs/variables"
        ],
        "variables_dos" : [
          "configs/variables_dos"
        ],
        "vlan_access_map4" : [
          "configs/vlan_access_map2"
        ],
        "vmx4" : [
          "configs/gh-2658-juniper-vrf-import-export.cfg"
        ],
        "vrf_context" : [
          "configs/vrf_context"
        ],
        "vxlan" : [
          "configs/vxlan"
        ]
      },
      "parseStatus" : {
        "configs/aaa_accounting" : "PASSED",
        "configs/aaa_authentication_login_default_tacacs_local" : "PASSED",
        "configs/aaa_group_server_source_interface" : "PASSED",
        "configs/access_list" : "PASSED",
        "configs/address_family" : "PASSED",
        "configs/arista-event-handler" : "PASSED",
        "configs/arista-logging" : "PASSED",
        "configs/arista_acl" : "PASSED",
        "configs/arista_bgp" : "PASSED",
        "configs/arista_dhcp_relay" : "PASSED",
        "configs/arista_interface" : "PASSED",
        "configs/arista_ip_route" : "PASSED",
        "configs/arista_misc" : "PASSED",
        "configs/arista_nat" : "PASSED",
        "configs/arista_ospf" : "PASSED",
        "configs/arista_queue_monitor" : "PASSED",
        "configs/arista_username" : "PASSED",
        "configs/arista_vrf" : "PASSED",
        "configs/aruba_aaa" : "PASSED",
        "configs/aruba_acl" : "PASSED",
        "configs/aruba_airgroup" : "PASSED",
        "configs/aruba_crypto" : "PASSED",
        "configs/aruba_dhcp" : "PASSED",
        "configs/aruba_interface" : "PASSED",
        "configs/aruba_logging" : "PASSED",
        "configs/aruba_misc" : "PASSED",
        "configs/aruba_net" : "PASSED",
        "configs/aruba_snmp" : "PASSED",
        "configs/aruba_time_range" : "PASSED",
        "configs/aruba_user_role" : "PASSED",
        "configs/aruba_vlan" : "PASSED",
        "configs/aruba_voice" : "PASSED",
        "configs/aruba_vpn" : "PASSED",
        "configs/as_path_prepend" : "PASSED",
        "configs/asa_acl" : "PASSED",
        "configs/asa_banner" : "PASSED",
        "configs/asa_interface" : "PASSED",
        "configs/asa_nat" : "PASSED",
        "configs/asa_object_groups" : "PASSED",
        "configs/asa_ospf" : "PASSED",
        "configs/asa_ssh" : "PASSED",
        "configs/banner" : "PASSED",
        "configs/banner_dos" : "PASSED",
        "configs/bgp_address_family" : "PASSED",
        "configs/bgp_default_originate_policy" : "PASSED",
        "configs/bgp_foundry" : "PASSED",
        "configs/bgp_nsr" : "PASSED",
        "configs/bgp_route_policy" : "PASSED",
        "configs/cadant_acl" : "PASSED",
        "configs/cadant_banner" : "PASSED",
        "configs/cadant_bgp" : "PASSED",
        "configs/cadant_cable" : "PASSED",
        "configs/cadant_interface" : "PASSED",
        "configs/cadant_ip_route" : "PASSED",
        "configs/cadant_isis" : "PASSED",
        "configs/cadant_line" : "PASSED",
        "configs/cadant_logging" : "PASSED",
        "configs/cadant_misc" : "PASSED",
        "configs/cadant_prefix_list" : "PASSED",
        "configs/cadant_qos" : "PASSED",
        "configs/cadant_rip" : "PASSED",
        "configs/cadant_route_map" : "PASSED",
        "configs/cadant_snmp" : "PASSED",
        "configs/cisco_aaa" : "PASSED",
        "configs/cisco_acl" : "PASSED",
        "configs/cisco_additional_paths" : "PASSED",
        "configs/cisco_authentication" : "PASSED",
        "configs/cisco_bgp" : "PASSED",
        "configs/cisco_bgp_confederation" : "PASSED",
        "configs/cisco_cable" : "PASSED",
        "configs/cisco_callhome" : "PASSED",
        "configs/cisco_control_plane" : "PASSED",
        "configs/cisco_controller" : "PASSED",
        "configs/cisco_crypto" : "PASSED",
        "configs/cisco_dhcp" : "PASSED",
        "configs/cisco_domain" : "PASSED",
        "configs/cisco_dot11" : "PASSED",
        "configs/cisco_dot1x" : "PASSED",
        "configs/cisco_dscpfarm" : "PASSED",
        "configs/cisco_dynamic_access_policy_record" : "PASSED",
        "configs/cisco_eigrp" : "PASSED",
        "configs/cisco_enable" : "PASSED",
        "configs/cisco_flow" : "PASSED",
        "configs/cisco_hardware" : "PASSED",
        "configs/cisco_hsrp" : "PASSED",
        "configs/cisco_interface" : "PASSED",
        "configs/cisco_ios_neighbor" : "PASSED",
        "configs/cisco_ip" : "PASSED",
        "configs/cisco_ip_nat" : "PASSED",
        "configs/cisco_ip_route" : "PASSED",
        "configs/cisco_ipsla" : "PASSED",
        "configs/cisco_ipv6" : "PASSED",
        "configs/cisco_ipv6_access_list" : "PASSED",
        "configs/cisco_isis" : "PASSED",
        "configs/cisco_l2tp" : "PASSED",
        "configs/cisco_line" : "PASSED",
        "configs/cisco_logging" : "PASSED",
        "configs/cisco_mac_acl" : "PASSED",
        "configs/cisco_misc" : "PASSED",
        "configs/cisco_monitor" : "PASSED",
        "configs/cisco_mpls" : "PASSED",
        "configs/cisco_multicast" : "PASSED",
        "configs/cisco_noipns" : "PASSED",
        "configs/cisco_nomaskreply" : "PASSED",
        "configs/cisco_nosnmp" : "PASSED",
        "configs/cisco_ntp" : "PASSED",
        "configs/cisco_nxos" : "PASSED",
        "configs/cisco_nxos_bgp" : "PASSED",
        "configs/cisco_opsfv3" : "PASSED",
        "configs/cisco_ospf" : "PASSED",
        "configs/cisco_ospf_ipv6" : "PASSED",
        "configs/cisco_ospf_multi_process" : "PASSED",
        "configs/cisco_pim" : "PASSED",
        "configs/cisco_platform" : "PASSED",
        "configs/cisco_privilege" : "PASSED",
        "configs/cisco_qos" : "PASSED",
        "configs/cisco_queue_monitor" : "PASSED",
        "configs/cisco_redundancy" : "PASSED",
        "configs/cisco_rip" : "PASSED",
        "configs/cisco_role" : "PASSED",
        "configs/cisco_route_map" : "PASSED",
        "configs/cisco_sccp" : "PASSED",
        "configs/cisco_snmp" : "PASSED",
        "configs/cisco_spanning_tree" : "PASSED",
        "configs/cisco_ssh" : "PASSED",
        "configs/cisco_stcapp" : "PASSED",
        "configs/cisco_style_acl1" : "PASSED",
        "configs/cisco_style_acl2" : "PASSED",
        "configs/cisco_system" : "PASSED",
        "configs/cisco_tacacs" : "PASSED",
        "configs/cisco_track" : "PASSED",
        "configs/cisco_username" : "PASSED",
        "configs/cisco_username_without_password" : "PASSED",
        "configs/cisco_vdc" : "PASSED",
        "configs/cisco_vlan" : "PASSED",
        "configs/cisco_voice" : "PASSED",
        "configs/cisco_vpdn" : "PASSED",
        "configs/cisco_vpn" : "PASSED",
        "configs/cisco_vrf" : "PASSED",
        "configs/cisco_vrrp" : "PASSED",
        "configs/cisco_webvpn" : "PASSED",
        "configs/cisco_wsma" : "PASSED",
        "configs/cisco_zone" : "PASSED",
        "configs/colon_in_vrf" : "PASSED",
        "configs/community_list_named" : "PASSED",
        "configs/community_name_numbers" : "PASSED",
        "configs/community_name_numbers_dos" : "PASSED",
        "configs/community_set" : "PASSED",
        "configs/cumulus_nclu" : "PASSED",
        "configs/cumulus_nclu_invalid_bonds" : "PASSED",
        "configs/cumulus_nclu_invalid_interfaces" : "PASSED",
        "configs/cumulus_nclu_invalid_vrfs" : "PASSED",
        "configs/cumulus_nclu_invalid_vxlans" : "PASSED",
        "configs/eos_mlag" : "PASSED",
        "configs/eos_trunk_group" : "PASSED",
        "configs/f5_bigip_imish_malformed" : "PASSED",
        "configs/f5_bigip_structured_ltm" : "PARTIALLY_UNRECOGNIZED",
        "configs/f5_bigip_structured_malformed" : "PASSED",
        "configs/f5_bigip_structured_net" : "PARTIALLY_UNRECOGNIZED",
        "configs/f5_bigip_structured_net_routing_bgp" : "PARTIALLY_UNRECOGNIZED",
        "configs/f5_bigip_structured_net_routing_prefix_list" : "PASSED",
        "configs/f5_bigip_structured_net_routing_route_map" : "PASSED",
        "configs/f5_bigip_structured_sys" : "PARTIALLY_UNRECOGNIZED",
        "configs/f5_bigip_structured_with_imish" : "PASSED",
        "configs/foundry_access_list" : "PASSED",
        "configs/foundry_bgp" : "PASSED",
        "configs/foundry_interface" : "PASSED",
        "configs/foundry_misc" : "PASSED",
        "configs/foundry_vlan_group" : "PASSED",
        "configs/gh-2658-juniper-vrf-import-export.cfg" : "PASSED",
        "configs/host2" : "PASSED",
        "configs/if_tag_is" : "PASSED",
        "configs/interface_exit" : "PASSED",
        "configs/interface_name" : "PASSED",
        "configs/interface_sdr" : "PASSED",
        "configs/ios_bfd" : "PASSED",
        "configs/ios_bgp" : "PASSED",
        "configs/ios_bgp_aggregate_address" : "PASSED",
        "configs/ios_interface" : "PASSED",
        "configs/ios_standby" : "PASSED",
        "configs/ios_template" : "PASSED",
        "configs/ios_xr_acl" : "PASSED",
        "configs/ios_xr_bgp" : "PASSED",
        "configs/ios_xr_bgp_neighbor_group" : "PASSED",
        "configs/ios_xr_class_map" : "PASSED",
        "configs/ios_xr_community_set" : "PASSED",
        "configs/ios_xr_isis" : "PASSED",
        "configs/ios_xr_l2vpn" : "PASSED",
        "configs/ios_xr_logging" : "PASSED",
        "configs/ios_xr_misc" : "PASSED",
        "configs/ios_xr_multicast" : "PASSED",
        "configs/ios_xr_multicast_routing" : "PASSED",
        "configs/ios_xr_multipart" : "PASSED",
        "configs/ios_xr_ntp" : "PASSED",
        "configs/ios_xr_ospf" : "PASSED",
        "configs/ios_xr_prefix_set" : "PASSED",
        "configs/ios_xr_route_policy" : "PASSED",
        "configs/ios_xr_router_static" : "PASSED",
        "configs/ios_xr_ssh" : "PASSED",
        "configs/ios_xr_taskgroup" : "PASSED",
        "configs/ip_default_route_classless" : "PASSED",
        "configs/ip_prefix_list_single_line" : "PASSED",
        "configs/isr_crypto" : "PASSED",
        "configs/isr_voip" : "PASSED",
        "configs/juniper-interfaces" : "PASSED",
        "configs/juniper-tcpflags" : "PASSED",
        "configs/juniper_application" : "PASSED",
        "configs/juniper_apply_macro" : "PASSED",
        "configs/juniper_as_path_group" : "PASSED",
        "configs/juniper_bgp" : "PASSED",
        "configs/juniper_bgp_allow" : "PASSED",
        "configs/juniper_bgp_authentication" : "PASSED",
        "configs/juniper_bgp_disable" : "PASSED",
        "configs/juniper_bgp_enforce_fist_as" : "PASSED",
        "configs/juniper_bgp_remove_private_as" : "PASSED",
        "configs/juniper_extended_community" : "PASSED",
        "configs/juniper_firewall" : "PASSED",
        "configs/juniper_forwarding_options" : "PASSED",
        "configs/juniper_interfaces" : "PASSED",
        "configs/juniper_isis" : "PASSED",
        "configs/juniper_l2_learning" : "PASSED",
        "configs/juniper_misc" : "PASSED",
        "configs/juniper_nat" : "PASSED",
        "configs/juniper_ntp" : "PASSED",
        "configs/juniper_ospf" : "PASSED",
        "configs/juniper_ospf_disable" : "PASSED",
        "configs/juniper_ospf_stub_areas" : "PASSED",
        "configs/juniper_passwords" : "PASSED",
        "configs/juniper_policy_statement" : "PASSED",
        "configs/juniper_relay" : "PASSED",
        "configs/juniper_reth_interfaces" : "PASSED",
        "configs/juniper_rib_groups" : "PASSED",
        "configs/juniper_route_filter" : "PASSED",
        "configs/juniper_routing_options" : "PASSED",
        "configs/juniper_routing_policy" : "PASSED",
        "configs/juniper_security" : "PASSED",
        "configs/juniper_snmp" : "PASSED",
        "configs/juniper_syslog" : "PASSED",
        "configs/juniper_system" : "PASSED",
        "configs/juniper_tacplus" : "PASSED",
        "configs/juniper_trailing_space" : "PASSED",
        "configs/juniper_vlan" : "PASSED",
        "configs/local_v6_addr" : "PASSED",
        "configs/mac_access_list" : "PASSED",
        "configs/mos_application" : "UNSUPPORTED",
        "configs/mos_interface" : "PASSED",
        "configs/mos_misc" : "PASSED",
        "configs/msdp_originator_id" : "PASSED",
        "configs/named_and_numbered_lists" : "PASSED",
        "configs/neighbor_mix" : "PASSED",
        "configs/neighbor_nxos" : "PASSED",
        "configs/network6" : "PASSED",
        "configs/nexus" : "PASSED",
        "configs/nexus_bgp" : "PASSED",
        "configs/nexus_ntp" : "PASSED",
        "configs/nexus_ssh" : "PASSED",
        "configs/no_aaa_group_server" : "PASSED",
        "configs/non_nexus_neighbor_af" : "PASSED",
        "configs/nxos_acl" : "PASSED",
        "configs/nxos_bgp" : "PASSED",
        "configs/nxos_interface" : "PASSED",
        "configs/nxos_misc" : "PASSED",
        "configs/nxos_ospf" : "PASSED",
        "configs/nxos_route_map_continue" : "PASSED",
        "configs/nxos_system" : "PASSED",
        "configs/openflow" : "PASSED",
        "configs/peer_template" : "PASSED",
        "configs/pim" : "PASSED",
        "configs/pim_snooping" : "PASSED",
        "configs/prefix_list_ipv4" : "PASSED",
        "configs/route_maps_in_two_address_families" : "PASSED",
        "configs/route_policy_as_path" : "PASSED",
        "configs/route_policy_igp_cost" : "PASSED",
        "configs/route_policy_metric_type" : "PASSED",
        "configs/route_policy_param" : "PASSED",
        "configs/router_msdp" : "PASSED",
        "configs/set_inline_community" : "PASSED",
        "configs/statistics" : "PASSED",
        "configs/switchport_range" : "PASSED",
        "configs/syslog_source_interface" : "PASSED",
        "configs/taskgroup" : "PASSED",
        "configs/tcpflags" : "PASSED",
        "configs/underscore_variable" : "PASSED",
        "configs/variables" : "PASSED",
        "configs/variables_dos" : "PASSED",
        "configs/vlan_access_map2" : "PASSED",
        "configs/vrf_context" : "PASSED",
        "configs/vxlan" : "PASSED",
        "hosts/host1.json" : "PASSED",
        "hosts/host2.json" : "PASSED",
        "hosts/hostEmpty.json" : "EMPTY",
        "iptables/host1.iptables" : "PASSED",
        "iptables/host2.iptables" : "PASSED"
      },
      "parseTrees" : {
        "configs/aaa_accounting" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'aaa_accounting'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_aaa",
            "      AAA:'aaa'",
            "      (aaa_accounting",
            "        ACCOUNTING:'accounting'",
            "        (aaa_accounting_exec_line",
            "          EXEC:'exec'",
            "          list = (variable",
            "            VARIABLE:'ABC')",
            "          (aaa_accounting_method",
            "            (aaa_accounting_method_start_stop",
            "              START_STOP:'start-stop'",
            "              (aaa_accounting_method_target",
            "                GROUP:'group'",
            "                TAC_PLUS:'tac_plus'",
            "                NONE:'none')))",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_aaa",
            "      AAA:'aaa'",
            "      (aaa_accounting",
            "        ACCOUNTING:'accounting'",
            "        (aaa_accounting_commands_line",
            "          COMMANDS:'commands'",
            "          list = (variable",
            "            VARIABLE:'XYZ')",
            "          (aaa_accounting_method",
            "            (aaa_accounting_method_start_stop",
            "              START_STOP:'start-stop'",
            "              (aaa_accounting_method_target",
            "                GROUP:'group'",
            "                TAC_PLUS:'tac_plus'",
            "                NONE:'none')))",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_aaa",
            "      AAA:'aaa'",
            "      (null_aaa_substanza",
            "        (aaa_default_taskgroup",
            "          DEFAULT_TASKGROUP:'default-taskgroup'",
            "          (null_rest_of_line",
            "            VARIABLE:'ASDF'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_aaa",
            "      AAA:'aaa'",
            "      (aaa_accounting",
            "        ACCOUNTING:'accounting'",
            "        (aaa_accounting_exec_stanza",
            "          EXEC:'exec'",
            "          DEFAULT:'default'",
            "          NEWLINE:'\\n'",
            "          ACTION_TYPE:'action-type'",
            "          (null_rest_of_line",
            "            START_STOP:'start-stop'",
            "            NEWLINE:'\\n')",
            "          GROUP:'group'",
            "          (null_rest_of_line",
            "            TACACS_PLUS:'tacacs+'",
            "            NEWLINE:'\\n')))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/aaa_authentication_login_default_tacacs_local" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'aaa_authentication_login_default_tacacs_local'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_aaa",
            "      AAA:'aaa'",
            "      (aaa_authentication",
            "        AUTHENTICATION:'authentication'",
            "        (aaa_authentication_login",
            "          LOGIN:'login'  <== mode:M_Authentication",
            "          (aaa_authentication_login_list",
            "            DEFAULT:'default'",
            "            (aaa_authentication_list_method",
            "              (aaa_authentication_list_method_tacacs_local",
            "                TACACS:'tacacs'",
            "                LOCAL:'local'))",
            "            NEWLINE:'\\n\\n')))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/aaa_group_server_source_interface" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'aaa_group_server_source_interface'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_aaa",
            "      AAA:'aaa'",
            "      (aaa_group",
            "        GROUP:'group'",
            "        SERVER:'server'",
            "        TACACS_PLUS:'tacacs+'",
            "        name = (variable",
            "          TACACS:'tacacs')",
            "        NEWLINE:'\\n'",
            "        (aaa_group_source_interface",
            "          SOURCE_INTERFACE:'source-interface'",
            "          (interface_name",
            "            name_prefix_alpha = M_Interface_PREFIX:'FOO'  <== mode:M_Interface",
            "            (range",
            "              (subrange",
            "                low = DEC:'0'  <== mode:M_Interface)))",
            "          NEWLINE:'\\n\\n'  <== mode:M_Interface))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/access_list" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'access_list'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_no_access_list_extended",
            "      NO:'no'",
            "      ACCESS_LIST:'access-list'",
            "      ACL_NUM_EXTENDED:'100'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_no_access_list_standard",
            "      NO:'no'",
            "      ACCESS_LIST:'access-list'",
            "      ACL_NUM_STANDARD:'1'",
            "      NEWLINE:'\\n'))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/address_family" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'address_family'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (router_bgp_stanza",
            "      ROUTER:'router'",
            "      BGP:'bgp'",
            "      procnum = (bgp_asn",
            "        asn = DEC:'1')",
            "      NEWLINE:'\\n'",
            "      (router_bgp_stanza_tail",
            "        (address_family_rb_stanza",
            "          (address_family_header",
            "            ADDRESS_FAMILY:'address-family'",
            "            af = (bgp_address_family",
            "              IPV4:'ipv4')",
            "            NEWLINE:'\\n')",
            "          (neighbor_flat_rb_stanza",
            "            NEIGHBOR:'neighbor'",
            "            ip = IP_ADDRESS:'1.2.3.4'  <== mode:M_NEIGHBOR",
            "            (remote_as_bgp_tail",
            "              REMOTE_AS:'remote-as'",
            "              remote = (bgp_asn",
            "                asn = DEC:'1')",
            "              NEWLINE:'\\n'))",
            "          (address_family_footer",
            "            EXIT_ADDRESS_FAMILY:'exit-address-family'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        END:'end'",
            "        NEWLINE:'\\n\\n')))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/arista-event-handler" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'arista-event-handler'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_event_handler",
            "      EVENT_HANDLER:'event-handler'",
            "      (null_rest_of_line",
            "        VARIABLE:'snmp-agentx'",
            "        NEWLINE:'\\n')",
            "      (eh_null",
            "        ACTION:'action'",
            "        (null_rest_of_line",
            "          BASH:'bash'",
            "          VARIABLE:'sudo'",
            "          VARIABLE:'cp'",
            "          VARIABLE:'/mnt/flash/snmp-agentx/'",
            "          ASTERISK:'*'",
            "          VARIABLE:'/etc/snmp/'",
            "          NEWLINE:'\\n'))",
            "      (eh_null",
            "        ASYNCHRONOUS:'asynchronous'",
            "        (null_rest_of_line",
            "          NEWLINE:'\\n'))",
            "      (eh_null",
            "        DELAY:'delay'",
            "        (null_rest_of_line",
            "          DEC:'0'",
            "          NEWLINE:'\\n'))",
            "      (eh_null",
            "        TRIGGER:'trigger'",
            "        (null_rest_of_line",
            "          VARIABLE:'onBoot'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        END:'end'",
            "        NEWLINE:'\\n')))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/arista-logging" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'arista_logging'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_format",
            "          FORMAT:'format'",
            "          TIMESTAMP:'timestamp'",
            "          HIGH_RESOLUTION:'high-resolution'",
            "          NEWLINE:'\\n'))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/arista_acl" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'arista_acl'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (extended_access_list_stanza",
            "      IP:'ip'",
            "      ACCESS_LIST:'access-list'",
            "      shortname = (variable",
            "        VARIABLE:'abcd')",
            "      NEWLINE:'\\n'",
            "      (extended_access_list_tail",
            "        num = DEC:'5'",
            "        ala = (access_list_action",
            "          PERMIT:'permit')",
            "        VLAN:'vlan'",
            "        vlan = DEC:'123'",
            "        vmask = HEX:'0x000'",
            "        prot = (protocol",
            "          UDP:'udp')",
            "        srcipr = (access_list_ip_range",
            "          ANY:'any')",
            "        dstipr = (access_list_ip_range",
            "          prefix = IP_PREFIX:'224.0.0.0/4')",
            "        NEWLINE:'\\n')",
            "      (extended_access_list_tail",
            "        num = DEC:'10'",
            "        ala = (access_list_action",
            "          DENY:'deny')",
            "        prot = (protocol",
            "          TCP:'tcp')",
            "        srcipr = (access_list_ip_range",
            "          ANY:'any')",
            "        dstipr = (access_list_ip_range",
            "          prefix = IP_PREFIX:'102.66.49.113/24')",
            "        alps_dst = (port_specifier",
            "          NEQ:'neq'",
            "          (port",
            "            WWW:'www')",
            "          (port",
            "            HTTPS:'https'))",
            "        (extended_access_list_additional_feature",
            "          SYN:'syn')",
            "        NEWLINE:'\\n')",
            "      (extended_access_list_tail",
            "        num = DEC:'20'",
            "        ala = (access_list_action",
            "          DENY:'deny')",
            "        prot = (protocol",
            "          IP:'ip')",
            "        srcipr = (access_list_ip_range",
            "          ANY:'any')",
            "        dstipr = (access_list_ip_range",
            "          ANY:'any')",
            "        NEWLINE:'\\n')))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/arista_bgp" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'arista_bgp'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        BOOT:'boot'",
            "        SYSTEM:'system'",
            "        FLASH:'flash'",
            "        VARIABLE:'fake.swi'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (router_bgp_stanza",
            "      ROUTER:'router'",
            "      BGP:'bgp'",
            "      procnum = (bgp_asn",
            "        asn = DEC:'1')",
            "      NEWLINE:'\\n'",
            "      (router_bgp_stanza_tail",
            "        (as_path_multipath_relax_rb_stanza",
            "          NO:'no'",
            "          BGP:'bgp'",
            "          BESTPATH:'bestpath'",
            "          AS_PATH:'as-path'",
            "          MULTIPATH_RELAX:'multipath-relax'  <== mode:M_AsPath",
            "          NEWLINE:'\\n'))",
            "      (router_bgp_stanza_tail",
            "        (bgp_tail",
            "          (null_bgp_tail",
            "            UPDATE:'update'",
            "            (null_rest_of_line",
            "              VARIABLE:'wait-for-convergence'",
            "              NEWLINE:'\\n'))))",
            "      (router_bgp_stanza_tail",
            "        (bgp_tail",
            "          (null_bgp_tail",
            "            UPDATE:'update'",
            "            (null_rest_of_line",
            "              VARIABLE:'wait-install'",
            "              NEWLINE:'\\n'))))",
            "      (router_bgp_stanza_tail",
            "        (address_family_rb_stanza",
            "          (address_family_header",
            "            ADDRESS_FAMILY:'address-family'",
            "            af = (bgp_address_family",
            "              IPV4:'ipv4')",
            "            NEWLINE:'\\n')",
            "          (neighbor_flat_rb_stanza",
            "            NEIGHBOR:'neighbor'",
            "            peergroup = VARIABLE:'UNDEFINED_PEER_GROUP'  <== mode:M_NEIGHBOR",
            "            (bgp_tail",
            "              (activate_bgp_tail",
            "                ACTIVATE:'activate'",
            "                NEWLINE:'\\n')))",
            "          (bgp_tail",
            "            (redistribute_ospfv3_bgp_tail",
            "              REDISTRIBUTE:'redistribute'",
            "              OSPF3:'ospf3'",
            "              MATCH:'match'",
            "              (ospf_route_type",
            "                INTERNAL:'internal')",
            "              ROUTE_MAP:'route-map'",
            "              map = (variable",
            "                VARIABLE:'ROUTE_MAP'  <== mode:M_RouteMap)",
            "              NEWLINE:'\\n'))",
            "          (bgp_tail",
            "            (redistribute_ospfv3_bgp_tail",
            "              REDISTRIBUTE:'redistribute'",
            "              OSPF3:'ospf3'",
            "              MATCH:'match'",
            "              (ospf_route_type",
            "                EXTERNAL:'external')",
            "              ROUTE_MAP:'route-map'",
            "              map = (variable",
            "                VARIABLE:'UNDEFINED_MAP'  <== mode:M_RouteMap)",
            "              NEWLINE:'\\n'))",
            "          (address_family_footer)))))",
            "  (stanza",
            "    (route_map_stanza",
            "      ROUTE_MAP:'route-map'",
            "      name = (variable",
            "        VARIABLE:'ROUTE_MAP'  <== mode:M_RouteMap)",
            "      rmt = (access_list_action",
            "        DENY:'deny')",
            "      num = DEC:'10'",
            "      NEWLINE:'\\n'))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/arista_dhcp_relay" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'arista_dhcp_relay'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_ip_dhcp",
            "      IP:'ip'",
            "      DHCP:'dhcp'",
            "      (ip_dhcp_relay",
            "        RELAY:'relay'",
            "        (ip_dhcp_relay_null",
            "          ALWAYS_ON:'always-on'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_ip_dhcp",
            "      IP:'ip'",
            "      DHCP:'dhcp'",
            "      (ip_dhcp_relay",
            "        RELAY:'relay'",
            "        (ip_dhcp_relay_server",
            "          SERVER:'server'",
            "          ip = IP_ADDRESS:'1.2.3.4'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_ip_dhcp",
            "      IP:'ip'",
            "      DHCP:'dhcp'",
            "      (ip_dhcp_relay",
            "        RELAY:'relay'",
            "        (ip_dhcp_relay_server",
            "          SERVER:'server'",
            "          ip = IP_ADDRESS:'2.3.4.5'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_ip_dhcp",
            "      IP:'ip'",
            "      DHCP:'dhcp'",
            "      (ip_dhcp_null",
            "        SMART_RELAY:'smart-relay'",
            "        (null_rest_of_line",
            "          GLOBAL:'global'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_interface",
            "      INTERFACE:'interface'",
            "      iname = (interface_name",
            "        name_prefix_alpha = M_Interface_PREFIX:'Ethernet'  <== mode:M_Interface",
            "        (range",
            "          (subrange",
            "            low = DEC:'0'  <== mode:M_Interface)))",
            "      NEWLINE:'\\n'  <== mode:M_Interface",
            "      (if_inner",
            "        (if_ip_dhcp",
            "          IP:'ip'",
            "          DHCP:'dhcp'",
            "          (ifdhcp_relay",
            "            RELAY:'relay'",
            "            (ifdhcpr_client",
            "              CLIENT:'client'",
            "              NEWLINE:'\\n'))))",
            "      (if_inner",
            "        (if_shutdown",
            "          NO:'no'",
            "          SHUTDOWN:'shutdown'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_interface",
            "      INTERFACE:'interface'",
            "      iname = (interface_name",
            "        name_prefix_alpha = M_Interface_PREFIX:'Ethernet'  <== mode:M_Interface",
            "        (range",
            "          (subrange",
            "            low = DEC:'1'  <== mode:M_Interface)))",
            "      NEWLINE:'\\n'  <== mode:M_Interface",
            "      (if_inner",
            "        (if_shutdown",
            "          NO:'no'",
            "          SHUTDOWN:'shutdown'",
            "          NEWLINE:'\\n'))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/arista_interface" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'arista_interface'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_interface",
            "      INTERFACE:'interface'",
            "      iname = (interface_name",
            "        name_prefix_alpha = M_Interface_PREFIX:'Vlan'  <== mode:M_Interface",
            "        (range",
            "          (subrange",
            "            low = DEC:'1'  <== mode:M_Interface)))",
            "      NEWLINE:'\\n'  <== mode:M_Interface",
            "      (if_inner",
            "        (if_ip_address",
            "          IP:'ip'",
            "          ADDRESS:'address'",
            "          prefix = IP_PREFIX:'1.2.3.4/23'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_ip_address_secondary",
            "          IP:'ip'",
            "          ADDRESS:'address'",
            "          prefix = IP_PREFIX:'2.3.4.5/24'",
            "          SECONDARY:'secondary'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_ip_helper_address",
            "          IP:'ip'",
            "          HELPER_ADDRESS:'helper-address'",
            "          address = IP_ADDRESS:'5.5.5.5'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_service_policy",
            "          SERVICE_POLICY:'service-policy'",
            "          TYPE:'type'",
            "          PBR:'pbr'",
            "          INPUT:'input'",
            "          policy_map = (variable",
            "            VARIABLE:'pbr-pmap')",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_service_policy",
            "          SERVICE_POLICY:'service-policy'",
            "          TYPE:'type'",
            "          QOS:'qos'",
            "          INPUT:'input'",
            "          policy_map = (variable",
            "            VARIABLE:'qos-pmap')",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_ip_vrf_forwarding",
            "          VRF:'vrf'",
            "          FORWARDING:'forwarding'",
            "          vrf = (variable",
            "            MGMT:'mgmt')",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_vrrp",
            "          VRRP:'vrrp'",
            "          groupnum = DEC:'1'",
            "          (ifvrrp_ip",
            "            IP:'ip'",
            "            ip = IP_ADDRESS:'1.2.3.4'",
            "            NEWLINE:'\\n')))",
            "      (if_inner",
            "        (if_vrrp",
            "          VRRP:'vrrp'",
            "          groupnum = DEC:'1'",
            "          (ifvrrp_ip_secondary",
            "            IP:'ip'",
            "            ip = IP_ADDRESS:'2.3.4.5'",
            "            SECONDARY:'secondary'",
            "            NEWLINE:'\\n')))",
            "      (if_inner",
            "        (if_vrrp",
            "          VRRP:'vrrp'",
            "          groupnum = DEC:'1'",
            "          (ifvrrp_preempt",
            "            PREEMPT:'preempt'",
            "            DELAY:'delay'",
            "            MINIMUM:'minimum'",
            "            DEC:'360'",
            "            NEWLINE:'\\n')))",
            "      (if_inner",
            "        (if_vrrp",
            "          VRRP:'vrrp'",
            "          groupnum = DEC:'1'",
            "          (ifvrrp_preempt",
            "            PREEMPT:'preempt'",
            "            DELAY:'delay'",
            "            RELOAD:'reload'",
            "            DEC:'360'",
            "            NEWLINE:'\\n')))",
            "      (if_inner",
            "        (if_vrrp",
            "          VRRP:'vrrp'",
            "          groupnum = DEC:'1'",
            "          (ifvrrp_priority",
            "            PRIORITY:'priority'",
            "            priority = DEC:'110'",
            "            NEWLINE:'\\n')))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/arista_ip_route" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'arista_ip_route'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (ip_route_stanza",
            "      IP:'ip'",
            "      ROUTE:'route'",
            "      (ip_route_tail",
            "        prefix = IP_PREFIX:'1.2.3.32/29'",
            "        nexthopint = (interface_name",
            "          VARIABLE:'Null0')",
            "        NAME:'name'",
            "        (variable",
            "          VARIABLE:'bippety'  <== mode:M_Name)",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (ip_route_stanza",
            "      IP:'ip'",
            "      ROUTE:'route'",
            "      (ip_route_tail",
            "        prefix = IP_PREFIX:'2.3.4.5/32'",
            "        nexthopip = IP_ADDRESS:'3.4.5.6'",
            "        NAME:'name'",
            "        (variable",
            "          VARIABLE:'boppety'  <== mode:M_Name)",
            "        NEWLINE:'\\n')))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/arista_misc" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'arista_misc'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_cvx",
            "      CVX:'cvx'",
            "      NEWLINE:'\\n'",
            "      (cvx_null",
            "        NO:'no'",
            "        SHUTDOWN:'shutdown'",
            "        (null_rest_of_line",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_daemon",
            "      DAEMON:'daemon'",
            "      (null_rest_of_line",
            "        VARIABLE:'abcd'",
            "        NEWLINE:'\\n')",
            "      (daemon_null",
            "        EXEC:'exec'",
            "        (null_rest_of_line",
            "          VARIABLE:'/mnt/flash/blah/installed/blorp_example.py'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_daemon",
            "      DAEMON:'daemon'",
            "      (null_rest_of_line",
            "        VARIABLE:'efgh'",
            "        NEWLINE:'\\n')",
            "      (daemon_null",
            "        EXEC:'exec'",
            "        (null_rest_of_line",
            "          VARIABLE:'/mnt/flash/bleh/installed/blerp_example.py'",
            "          NEWLINE:'\\n'))",
            "      (daemon_null",
            "        NO:'no'",
            "        SHUTDOWN:'shutdown'",
            "        (null_rest_of_line",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_ip_pim",
            "      IP:'ip'",
            "      PIM:'pim'",
            "      (ip_pim_tail",
            "        (pim_rp_address",
            "          RP_ADDRESS:'rp-address'",
            "          IP_ADDRESS:'1.2.3.4'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_management",
            "      MANAGEMENT:'management'",
            "      (management_api",
            "        API:'api'",
            "        HTTP_COMMANDS:'http-commands'",
            "        NEWLINE:'\\n'",
            "        (management_api_null",
            "          PROTOCOL:'protocol'",
            "          (null_rest_of_line",
            "            VARIABLE:'unix-socket'",
            "            NEWLINE:'\\n'))",
            "        (management_api_null",
            "          NO:'no'",
            "          SHUTDOWN:'shutdown'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n'))",
            "        (management_api_vrf",
            "          VRF:'vrf'",
            "          name = (variable",
            "            MGMT:'mgmt')",
            "          NEWLINE:'\\n'",
            "          (management_api_vrf_null",
            "            NO:'no'",
            "            SHUTDOWN:'shutdown'",
            "            (null_rest_of_line",
            "              NEWLINE:'\\n'))))))",
            "  (stanza",
            "    (s_management",
            "      MANAGEMENT:'management'",
            "      (management_console",
            "        CONSOLE:'console'",
            "        NEWLINE:'\\n'",
            "        (management_console_null",
            "          IDLE_TIMEOUT:'idle-timeout'",
            "          (null_rest_of_line",
            "            DEC:'60'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (standard_access_list_stanza",
            "      IP:'ip'",
            "      ACCESS_LIST:'access-list'",
            "      STANDARD:'standard'",
            "      name = (variable_aclname",
            "        VARIABLE:'sshabc')",
            "      NEWLINE:'\\n'",
            "      (standard_access_list_tail",
            "        num = DEC:'10'",
            "        ala = (access_list_action",
            "          PERMIT:'permit')",
            "        ipr = (access_list_ip_range",
            "          prefix = IP_PREFIX:'1.2.4.8/16')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_management",
            "      MANAGEMENT:'management'",
            "      (management_ssh",
            "        SSH:'ssh'",
            "        NEWLINE:'\\n'",
            "        (management_ssh_null",
            "          AUTHENTICATION:'authentication'",
            "          (null_rest_of_line",
            "            VARIABLE:'mode'  <== mode:M_Authentication",
            "            PASSWORD:'password'",
            "            NEWLINE:'\\n'))",
            "        (management_ssh_ip_access_group",
            "          IP:'ip'",
            "          ACCESS_GROUP:'access-group'",
            "          name = (variable",
            "            VARIABLE:'sshabc')",
            "          IN:'in'",
            "          NEWLINE:'\\n')",
            "        (management_ssh_null",
            "          IDLE_TIMEOUT:'idle-timeout'",
            "          (null_rest_of_line",
            "            DEC:'60'",
            "            NEWLINE:'\\n'))",
            "        (management_ssh_null",
            "          SHUTDOWN:'shutdown'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_management",
            "      MANAGEMENT:'management'",
            "      (management_telnet",
            "        TELNET:'telnet'",
            "        NEWLINE:'\\n'",
            "        (management_telnet_null",
            "          IDLE_TIMEOUT:'idle-timeout'",
            "          (null_rest_of_line",
            "            DEC:'10'",
            "            NEWLINE:'\\n'))",
            "        (management_telnet_ip_access_group",
            "          IP:'ip'",
            "          ACCESS_GROUP:'access-group'",
            "          name = (variable",
            "            VARIABLE:'abc')",
            "          IN:'in'",
            "          NEWLINE:'\\n')",
            "        (management_telnet_null",
            "          NO:'no'",
            "          SHUTDOWN:'shutdown'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_switchport",
            "      SWITCHPORT:'switchport'",
            "      DEFAULT:'default'",
            "      MODE:'mode'",
            "      ROUTED:'routed'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_management",
            "      MANAGEMENT:'management'",
            "      (management_cvx",
            "        CVX:'cvx'",
            "        NEWLINE:'\\n'",
            "        (management_cvx_null",
            "          NO:'no'",
            "          SHUTDOWN:'shutdown'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n'))",
            "        (management_cvx_null",
            "          SERVER:'server'",
            "          (null_rest_of_line",
            "            HOST:'host'",
            "            IP_ADDRESS:'1.2.3.4'",
            "            NEWLINE:'\\n'))",
            "        (management_cvx_null",
            "          SHUTDOWN:'shutdown'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n')))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/arista_nat" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        BOOT:'boot'",
            "        SYSTEM:'system'",
            "        FLASH:'flash'",
            "        VARIABLE:'this-is-an-arista-device.swi'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'arista_nat'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (extended_access_list_stanza",
            "      IP:'ip'",
            "      ACCESS_LIST:'access-list'",
            "      shortname = (variable",
            "        VARIABLE:'acl1')",
            "      NEWLINE:'\\n'",
            "      (extended_access_list_tail",
            "        ala = (access_list_action",
            "          PERMIT:'permit')",
            "        prot = (protocol",
            "          IP:'ip')",
            "        srcipr = (access_list_ip_range",
            "          ANY:'any')",
            "        dstipr = (access_list_ip_range",
            "          ANY:'any')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_ip_nat",
            "      (ip_nat_pool",
            "        IP:'ip'",
            "        NAT:'nat'",
            "        POOL:'pool'",
            "        name = (variable",
            "          VARIABLE:'pool1')",
            "        first = IP_ADDRESS:'1.1.1.1'",
            "        last = IP_ADDRESS:'1.1.1.2'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_ip_nat",
            "      (ip_nat_pool",
            "        IP:'ip'",
            "        NAT:'nat'",
            "        POOL:'pool'",
            "        name = (variable",
            "          VARIABLE:'pool2')",
            "        first = IP_ADDRESS:'1.1.1.1'",
            "        last = IP_ADDRESS:'1.1.1.2'",
            "        NETMASK:'netmask'",
            "        mask = IP_ADDRESS:'255.255.255.255'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_ip_nat",
            "      (ip_nat_pool",
            "        IP:'ip'",
            "        NAT:'nat'",
            "        POOL:'pool'",
            "        name = (variable",
            "          VARIABLE:'pool3')",
            "        first = IP_ADDRESS:'1.1.1.1'",
            "        last = IP_ADDRESS:'1.1.1.2'",
            "        PREFIX_LENGTH:'prefix-length'",
            "        prefix_length = DEC:'32'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_interface",
            "      INTERFACE:'interface'",
            "      iname = (interface_name",
            "        name_prefix_alpha = M_Interface_PREFIX:'Ethernet'  <== mode:M_Interface",
            "        (range",
            "          (subrange",
            "            low = DEC:'1'  <== mode:M_Interface)))",
            "      NEWLINE:'\\n'  <== mode:M_Interface",
            "      (if_inner",
            "        (if_ip_address",
            "          IP:'ip'",
            "          ADDRESS:'address'",
            "          prefix = IP_PREFIX:'1.1.1.1/32'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_ip_nat_source",
            "          IP:'ip'",
            "          NAT:'nat'",
            "          SOURCE:'source'",
            "          DYNAMIC:'dynamic'",
            "          ACCESS_LIST:'access-list'",
            "          acl = (variable",
            "            VARIABLE:'acl1')",
            "          POOL:'pool'",
            "          pool = (variable",
            "            VARIABLE:'pool1')",
            "          NEWLINE:'\\n'))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/arista_ospf" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'arista_ospf'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_router_ospf",
            "      ROUTER:'router'",
            "      OSPF:'ospf'",
            "      name = (variable",
            "        DEC:'1')",
            "      NEWLINE:'\\n'",
            "      (ro_common",
            "        (ro_null",
            "          NO:'no'",
            "          DEFAULT_INFORMATION:'default-information'",
            "          (null_rest_of_line",
            "            ORIGINATE:'originate'",
            "            NEWLINE:'\\n')))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/arista_queue_monitor" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'arista_queue_monitor'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_queue_monitor",
            "      QUEUE_MONITOR:'queue-monitor'",
            "      (qm_streaming",
            "        STREAMING:'streaming'",
            "        NEWLINE:'\\n'",
            "        (qms_null",
            "          MAX_CONNECTIONS:'max-connections'",
            "          (null_rest_of_line",
            "            DEC:'5'",
            "            NEWLINE:'\\n'))",
            "        (qms_null",
            "          NO:'no'",
            "          SHUTDOWN:'shutdown'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n')))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/arista_username" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'arista_username'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_enable",
            "      ENABLE:'enable'",
            "      (enable_secret",
            "        SECRET:'secret'",
            "        DEC:'5'",
            "        pass = (variable_secret",
            "          MD5_ARISTA:'$1$5C7CVuxv$nnhvQ21cl8fsuw/HTaYpA/')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        NO:'no'",
            "        AAA:'aaa'",
            "        ROOT:'root'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_username",
            "      USERNAME:'username'",
            "      user = (variable",
            "        ADMIN:'admin')",
            "      (u",
            "        (u_role",
            "          ROLE:'role'",
            "          role = (variable",
            "            VARIABLE:'network-admin')))",
            "      (u",
            "        (u_password",
            "          SECRET:'secret'",
            "          (up_arista_md5",
            "            DEC:'5'",
            "            pass = MD5_ARISTA:'$1$5C7CVuxv$nnhvQ21cl8fsuw/HTaYpA/')))",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_username",
            "      USERNAME:'username'",
            "      user = (variable",
            "        VARIABLE:'noc')",
            "      (u",
            "        (u_password",
            "          SECRET:'secret'",
            "          (up_arista_sha512",
            "            SHA512:'sha512'",
            "            pass = SHA512_ARISTA:'$6$RMxgK5ALGIf.nWEC$tHuKCyfNtJMCY561P52dTzHUmYMmLxb/Mxik.j3vMUs8lMCPocM00/NAS.SN6GCWx7d/vQIgxnClyQLAb7n3x0')))",
            "      NEWLINE:'\\n'))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/arista_vrf" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'arista_vrf'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_vrf_definition",
            "      VRF:'vrf'",
            "      DEFINITION:'definition'",
            "      name = (variable",
            "        VARIABLE:'vrfName')",
            "      NEWLINE:'\\n'",
            "      (vrfd_null",
            "        RD:'rd'",
            "        (null_rest_of_line",
            "          DEC:'2'",
            "          COLON:':'",
            "          DEC:'700'",
            "          NEWLINE:'\\n'))",
            "      (vrfd_description",
            "        (description_line",
            "          DESCRIPTION:'description'",
            "          text = RAW_TEXT:' descriptive sentence'  <== mode:M_Description",
            "          NEWLINE:'\\n'  <== mode:M_Description))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/aruba_aaa" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'aruba_aaa'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_aaa",
            "      AAA:'aaa'",
            "      (aaa_authentication",
            "        AUTHENTICATION:'authentication'",
            "        (aaa_authentication_captive_portal",
            "          CAPTIVE_PORTAL:'captive-portal'  <== mode:M_Authentication",
            "          (null_rest_of_line",
            "            DOUBLE_QUOTE:'\"'",
            "            DEFAULT:'default'",
            "            DOUBLE_QUOTE:'\"'",
            "            NEWLINE:'\\n')",
            "          (aaa_authentication_captive_portal_null",
            "            DEFAULT_GUEST_ROLE:'default-guest-role'",
            "            (null_rest_of_line",
            "              DOUBLE_QUOTE:'\"'",
            "              VARIABLE:'goo'",
            "              DOUBLE_QUOTE:'\"'",
            "              NEWLINE:'\\n'))",
            "          (aaa_authentication_captive_portal_null",
            "            DEFAULT_ROLE:'default-role'",
            "            (null_rest_of_line",
            "              DOUBLE_QUOTE:'\"'",
            "              VARIABLE:'hoo'",
            "              DOUBLE_QUOTE:'\"'",
            "              NEWLINE:'\\n'))",
            "          (aaa_authentication_captive_portal_null",
            "            NO:'no'",
            "            ENABLE_WELCOME_PAGE:'enable-welcome-page'",
            "            (null_rest_of_line",
            "              NEWLINE:'\\n'))",
            "          (aaa_authentication_captive_portal_null",
            "            GUEST_LOGON:'guest-logon'",
            "            (null_rest_of_line",
            "              NEWLINE:'\\n'))",
            "          (aaa_authentication_captive_portal_null",
            "            LOGIN_PAGE:'login-page'",
            "            (null_rest_of_line",
            "              DOUBLE_QUOTE:'\"'",
            "              HTTP:'http'",
            "              COLON:':'",
            "              VARIABLE:'//1.2.3.4/blah.php'",
            "              DOUBLE_QUOTE:'\"'",
            "              NEWLINE:'\\n'))",
            "          (aaa_authentication_captive_portal_null",
            "            MAX_AUTHENTICATION_FAILURES:'max-authentication-failures'",
            "            (null_rest_of_line",
            "              DEC:'123'",
            "              NEWLINE:'\\n'))",
            "          (aaa_authentication_captive_portal_null",
            "            PROTOCOL_HTTP:'protocol-http'",
            "            (null_rest_of_line",
            "              NEWLINE:'\\n'))",
            "          (aaa_authentication_captive_portal_null",
            "            REDIRECT_PAUSE:'redirect-pause'",
            "            (null_rest_of_line",
            "              DEC:'8'",
            "              NEWLINE:'\\n'))",
            "          (aaa_authentication_captive_portal_null",
            "            SERVER_GROUP:'server-group'",
            "            (null_rest_of_line",
            "              DOUBLE_QUOTE:'\"'",
            "              VARIABLE:'florf'",
            "              DOUBLE_QUOTE:'\"'",
            "              NEWLINE:'\\n'))",
            "          (aaa_authentication_captive_portal_null",
            "            WELCOME_PAGE:'welcome-page'",
            "            (null_rest_of_line",
            "              DOUBLE_QUOTE:'\"'",
            "              HTTP:'http'",
            "              COLON:':'",
            "              VARIABLE:'//www.example.com'",
            "              DOUBLE_QUOTE:'\"'",
            "              NEWLINE:'\\n'))",
            "          (aaa_authentication_captive_portal_null",
            "            WHITE_LIST:'white-list'",
            "            (null_rest_of_line",
            "              DOUBLE_QUOTE:'\"'",
            "              VARIABLE:'flarg'",
            "              DOUBLE_QUOTE:'\"'",
            "              NEWLINE:'\\n'))))))",
            "  (stanza",
            "    (s_aaa",
            "      AAA:'aaa'",
            "      (aaa_authentication",
            "        AUTHENTICATION:'authentication'",
            "        (aaa_authentication_dot1x",
            "          DOT1X:'dot1x'  <== mode:M_Authentication",
            "          (double_quoted_string",
            "            DOUBLE_QUOTE:'\"'",
            "            VARIABLE:'foofoofoo'",
            "            DOUBLE_QUOTE:'\"')",
            "          NEWLINE:'\\n'",
            "          (aaa_authentication_dot1x_null",
            "            MACHINE_AUTHENTICATION:'machine-authentication'",
            "            (null_rest_of_line",
            "              VARIABLE:'blacklist-on-failure'",
            "              NEWLINE:'\\n'))",
            "          (aaa_authentication_dot1x_null",
            "            MACHINE_AUTHENTICATION:'machine-authentication'",
            "            (null_rest_of_line",
            "              CACHE_TIMEOUT:'cache-timeout'",
            "              DEC:'1'",
            "              NEWLINE:'\\n'))",
            "          (aaa_authentication_dot1x_null",
            "            MACHINE_AUTHENTICATION:'machine-authentication'",
            "            (null_rest_of_line",
            "              VARIABLE:'machine-default-role'",
            "              DOUBLE_QUOTE:'\"'",
            "              VARIABLE:'Deny-All'",
            "              DOUBLE_QUOTE:'\"'",
            "              NEWLINE:'\\n'))",
            "          (aaa_authentication_dot1x_null",
            "            MACHINE_AUTHENTICATION:'machine-authentication'",
            "            (null_rest_of_line",
            "              VARIABLE:'user-default-role'",
            "              DOUBLE_QUOTE:'\"'",
            "              VARIABLE:'Deny-All'",
            "              DOUBLE_QUOTE:'\"'",
            "              NEWLINE:'\\n'))",
            "          (aaa_authentication_dot1x_null",
            "            MAX_AUTHENTICATION_FAILURES:'max-authentication-failures'",
            "            (null_rest_of_line",
            "              DEC:'123'",
            "              NEWLINE:'\\n'))",
            "          (aaa_authentication_dot1x_null",
            "            REAUTHENTICATION:'reauthentication'",
            "            (null_rest_of_line",
            "              NEWLINE:'\\n'))",
            "          (aaa_authentication_dot1x_null",
            "            TERMINATION:'termination'",
            "            (null_rest_of_line",
            "              VARIABLE:'eap-type'",
            "              VARIABLE:'eap-tls'",
            "              NEWLINE:'\\n'))",
            "          (aaa_authentication_dot1x_null",
            "            TIMER:'timer'",
            "            (null_rest_of_line",
            "              VARIABLE:'quiet-period'",
            "              DEC:'123'",
            "              NEWLINE:'\\n'))",
            "          (aaa_authentication_dot1x_null",
            "            WPA_FAST_HANDOVER:'wpa-fast-handover'",
            "            (null_rest_of_line",
            "              NEWLINE:'\\n'))))))",
            "  (stanza",
            "    (s_aaa",
            "      AAA:'aaa'",
            "      (aaa_authentication",
            "        AUTHENTICATION:'authentication'",
            "        (aaa_authentication_mac",
            "          MAC:'mac'  <== mode:M_Authentication",
            "          (double_quoted_string",
            "            DOUBLE_QUOTE:'\"'",
            "            DEFAULT:'default'",
            "            DOUBLE_QUOTE:'\"')",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_aaa",
            "      AAA:'aaa'",
            "      (aaa_authentication",
            "        AUTHENTICATION:'authentication'",
            "        (aaa_authentication_mac",
            "          MAC:'mac'  <== mode:M_Authentication",
            "          (double_quoted_string",
            "            DOUBLE_QUOTE:'\"'",
            "            VARIABLE:'abcd'",
            "            DOUBLE_QUOTE:'\"')",
            "          NEWLINE:'\\n'",
            "          (aaa_authentication_mac_null",
            "            CASE:'case'",
            "            (null_rest_of_line",
            "              VARIABLE:'upper'",
            "              NEWLINE:'\\n'))",
            "          (aaa_authentication_mac_null",
            "            DELIMITER:'delimiter'",
            "            (null_rest_of_line",
            "              VARIABLE:'colon'",
            "              NEWLINE:'\\n'))",
            "          (aaa_authentication_mac_null",
            "            DELIMITER:'delimiter'",
            "            (null_rest_of_line",
            "              VARIABLE:'dash'",
            "              NEWLINE:'\\n'))",
            "          (aaa_authentication_mac_null",
            "            MAX_AUTHENTICATION_FAILURES:'max-authentication-failures'",
            "            (null_rest_of_line",
            "              DEC:'123'",
            "              NEWLINE:'\\n'))",
            "          (aaa_authentication_mac_null",
            "            REAUTHENTICATION:'reauthentication'",
            "            (null_rest_of_line",
            "              NEWLINE:'\\n'))",
            "          (aaa_authentication_mac_null",
            "            TIMER:'timer'",
            "            (null_rest_of_line",
            "              VARIABLE:'reauth-period'",
            "              SERVER:'server'",
            "              NEWLINE:'\\n'))))))",
            "  (stanza",
            "    (s_aaa",
            "      AAA:'aaa'",
            "      (aaa_authentication",
            "        AUTHENTICATION:'authentication'",
            "        (aaa_authentication_mgmt",
            "          MGMT:'mgmt'  <== mode:M_Authentication",
            "          NEWLINE:'\\n'",
            "          (aaa_authentication_mgmt_null",
            "            ENABLE:'enable'",
            "            (null_rest_of_line",
            "              NEWLINE:'\\n'))",
            "          (aaa_authentication_mgmt_null",
            "            SERVER_GROUP:'server-group'",
            "            (null_rest_of_line",
            "              DOUBLE_QUOTE:'\"'",
            "              VARIABLE:'floof'",
            "              DOUBLE_QUOTE:'\"'",
            "              NEWLINE:'\\n'))))))",
            "  (stanza",
            "    (s_aaa",
            "      AAA:'aaa'",
            "      (aaa_authentication",
            "        AUTHENTICATION:'authentication'",
            "        (aaa_authentication_stateful_dot1x",
            "          STATEFUL_DOT1X:'stateful-dot1x'  <== mode:M_Authentication",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_aaa",
            "      AAA:'aaa'",
            "      (aaa_authentication",
            "        AUTHENTICATION:'authentication'",
            "        (aaa_authentication_stateful_kerberos",
            "          STATEFUL_KERBEROS:'stateful-kerberos'  <== mode:M_Authentication",
            "          (double_quoted_string",
            "            DOUBLE_QUOTE:'\"'",
            "            DEFAULT:'default'",
            "            DOUBLE_QUOTE:'\"')",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_aaa",
            "      AAA:'aaa'",
            "      (aaa_authentication",
            "        AUTHENTICATION:'authentication'",
            "        (aaa_authentication_stateful_ntlm",
            "          STATEFUL_NTLM:'stateful-ntlm'  <== mode:M_Authentication",
            "          (double_quoted_string",
            "            DOUBLE_QUOTE:'\"'",
            "            DEFAULT:'default'",
            "            DOUBLE_QUOTE:'\"')",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_aaa",
            "      AAA:'aaa'",
            "      (aaa_authentication",
            "        AUTHENTICATION:'authentication'",
            "        (aaa_authentication_vpn",
            "          VPN:'vpn'  <== mode:M_Authentication",
            "          (double_quoted_string",
            "            DOUBLE_QUOTE:'\"'",
            "            DEFAULT:'default'",
            "            DOUBLE_QUOTE:'\"')",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_aaa",
            "      AAA:'aaa'",
            "      (aaa_authentication",
            "        AUTHENTICATION:'authentication'",
            "        (aaa_authentication_wired",
            "          WIRED:'wired'  <== mode:M_Authentication",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_aaa",
            "      AAA:'aaa'",
            "      (aaa_authentication",
            "        AUTHENTICATION:'authentication'",
            "        (aaa_authentication_wispr",
            "          WISPR:'wispr'  <== mode:M_Authentication",
            "          (double_quoted_string",
            "            DOUBLE_QUOTE:'\"'",
            "            DEFAULT:'default'",
            "            DOUBLE_QUOTE:'\"')",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_aaa",
            "      AAA:'aaa'",
            "      (aaa_authentication_server",
            "        AUTHENTICATION_SERVER:'authentication-server'",
            "        (aaa_authentication_server_radius",
            "          RADIUS:'radius'",
            "          (double_quoted_string",
            "            DOUBLE_QUOTE:'\"'",
            "            VARIABLE:'ababcdcd'",
            "            DOUBLE_QUOTE:'\"')",
            "          NEWLINE:'\\n'",
            "          (aaa_authentication_server_radius_null",
            "            HOST:'host'",
            "            (null_rest_of_line",
            "              DOUBLE_QUOTE:'\"'",
            "              IP_ADDRESS:'5.4.3.2'",
            "              DOUBLE_QUOTE:'\"'",
            "              NEWLINE:'\\n'))))))",
            "  (stanza",
            "    (s_aaa",
            "      AAA:'aaa'",
            "      (aaa_authentication_server",
            "        AUTHENTICATION_SERVER:'authentication-server'",
            "        (aaa_authentication_server_tacacs",
            "          TACACS:'tacacs'",
            "          (double_quoted_string",
            "            DOUBLE_QUOTE:'\"'",
            "            IP_ADDRESS:'4.4.4.4'",
            "            DOUBLE_QUOTE:'\"')",
            "          NEWLINE:'\\n'",
            "          (aaa_authentication_server_tacacs_null",
            "            HOST:'host'",
            "            (null_rest_of_line",
            "              DOUBLE_QUOTE:'\"'",
            "              IP_ADDRESS:'4.4.4.4'",
            "              DOUBLE_QUOTE:'\"'",
            "              NEWLINE:'\\n'))",
            "          (aaa_authentication_server_tacacs_null",
            "            SESSION_AUTHORIZATION:'session-authorization'",
            "            (null_rest_of_line",
            "              NEWLINE:'\\n'))))))",
            "  (stanza",
            "    (s_aaa",
            "      AAA:'aaa'",
            "      (aaa_bandwidth_contract",
            "        BANDWIDTH_CONTRACT:'bandwidth-contract'",
            "        name = (variable",
            "          VARIABLE:'foobarcontract')",
            "        (null_rest_of_line",
            "          VARIABLE:'mbits'",
            "          DEC:'50'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_aaa",
            "      AAA:'aaa'",
            "      (aaa_derivation_rules",
            "        DERIVATION_RULES:'derivation-rules'",
            "        (null_rest_of_line",
            "          USER:'user'",
            "          VARIABLE:'abcdefg'",
            "          NEWLINE:'\\n')",
            "        (aaa_derivation_rules_null",
            "          SET:'set'",
            "          (null_rest_of_line",
            "            ROLE:'role'",
            "            VARIABLE:'condition'",
            "            VARIABLE:'macaddr'",
            "            VARIABLE:'contains'",
            "            DOUBLE_QUOTE:'\"'",
            "            DEC:'01'",
            "            COLON:':'",
            "            DEC:'23'",
            "            COLON:':'",
            "            DEC:'45'",
            "            COLON:':'",
            "            DEC:'67'",
            "            COLON:':'",
            "            DEC:'89'",
            "            COLON:':'",
            "            VARIABLE:'ab'",
            "            DOUBLE_QUOTE:'\"'",
            "            VARIABLE:'set-value'",
            "            VARIABLE:'Deny-All'",
            "            DESCRIPTION:'description'",
            "            RAW_TEXT:' \"blibbety\"'  <== mode:M_Description",
            "            NEWLINE:'\\n'  <== mode:M_Description)))))",
            "  (stanza",
            "    (s_aaa",
            "      AAA:'aaa'",
            "      (aaa_group",
            "        GROUP:'group'",
            "        SERVER:'server'",
            "        TACACS_PLUS:'tacacs+'",
            "        name = (variable",
            "          VARIABLE:'authservers')",
            "        NEWLINE:'\\n'",
            "        (aaa_group_ip_vrf",
            "          IP:'ip'",
            "          VRF:'vrf'",
            "          FORWARDING:'forwarding'",
            "          name = (variable",
            "            VARIABLE:'Mgmt-vrf')",
            "          NEWLINE:'\\n')",
            "        (aaa_group_server_private",
            "          SERVER_PRIVATE:'server-private'",
            "          IP_ADDRESS:'2.3.4.5'",
            "          TIMEOUT:'timeout'",
            "          DEC:'2'",
            "          KEY:'key'",
            "          DEC:'7'",
            "          (variable_secret",
            "            VARIABLE:'0123456789ABCDEF0123456789AB')",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_aaa",
            "      AAA:'aaa'",
            "      (aaa_password_policy",
            "        PASSWORD_POLICY:'password-policy'",
            "        (null_rest_of_line",
            "          MGMT:'mgmt'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_aaa",
            "      AAA:'aaa'",
            "      (aaa_profile",
            "        PROFILE:'profile'",
            "        (double_quoted_string",
            "          DOUBLE_QUOTE:'\"'",
            "          VARIABLE:'fooprofile'",
            "          DOUBLE_QUOTE:'\"')",
            "        NEWLINE:'\\n'",
            "        (aaa_profile_null",
            "          AUTHENTICATION_DOT1X:'authentication-dot1x'",
            "          (null_rest_of_line",
            "            DOUBLE_QUOTE:'\"'",
            "            VARIABLE:'bleep'",
            "            DOUBLE_QUOTE:'\"'",
            "            NEWLINE:'\\n'))",
            "        (aaa_profile_null",
            "          AUTHENTICATION_MAC:'authentication-mac'",
            "          (null_rest_of_line",
            "            DOUBLE_QUOTE:'\"'",
            "            VARIABLE:'blarp'",
            "            DOUBLE_QUOTE:'\"'",
            "            NEWLINE:'\\n'))",
            "        (aaa_profile_null",
            "          DOT1X_DEFAULT_ROLE:'dot1x-default-role'",
            "          (null_rest_of_line",
            "            DOUBLE_QUOTE:'\"'",
            "            VARIABLE:'Deny-All'",
            "            DOUBLE_QUOTE:'\"'",
            "            NEWLINE:'\\n'))",
            "        (aaa_profile_null",
            "          DOT1X_SERVER_GROUP:'dot1x-server-group'",
            "          (null_rest_of_line",
            "            DOUBLE_QUOTE:'\"'",
            "            VARIABLE:'blorp'",
            "            DOUBLE_QUOTE:'\"'",
            "            NEWLINE:'\\n'))",
            "        (aaa_profile_null",
            "          ENFORCE_DHCP:'enforce-dhcp'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n'))",
            "        (aaa_profile_null",
            "          INITIAL_ROLE:'initial-role'",
            "          (null_rest_of_line",
            "            DOUBLE_QUOTE:'\"'",
            "            VARIABLE:'Deny-All'",
            "            DOUBLE_QUOTE:'\"'",
            "            NEWLINE:'\\n'))",
            "        (aaa_profile_null",
            "          MAC_DEFAULT_ROLE:'mac-default-role'",
            "          (null_rest_of_line",
            "            DOUBLE_QUOTE:'\"'",
            "            VARIABLE:'Deny-All'",
            "            DOUBLE_QUOTE:'\"'",
            "            NEWLINE:'\\n'))",
            "        (aaa_profile_null",
            "          MAC_SERVER_GROUP:'mac-server-group'",
            "          (null_rest_of_line",
            "            DOUBLE_QUOTE:'\"'",
            "            VARIABLE:'msgfoo'",
            "            DOUBLE_QUOTE:'\"'",
            "            NEWLINE:'\\n'))",
            "        (aaa_profile_null",
            "          RADIUS_ACCOUNTING:'radius-accounting'",
            "          (null_rest_of_line",
            "            DOUBLE_QUOTE:'\"'",
            "            VARIABLE:'blorp'",
            "            DOUBLE_QUOTE:'\"'",
            "            NEWLINE:'\\n'))",
            "        (aaa_profile_null",
            "          RADIUS_INTERIM_ACCOUNTING:'radius-interim-accounting'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n'))",
            "        (aaa_profile_null",
            "          RFC_3576_SERVER:'rfc-3576-server'",
            "          (null_rest_of_line",
            "            DOUBLE_QUOTE:'\"'",
            "            IP_ADDRESS:'1.2.3.4'",
            "            DOUBLE_QUOTE:'\"'",
            "            NEWLINE:'\\n'))",
            "        (aaa_profile_null",
            "          RFC_3576_SERVER:'rfc-3576-server'",
            "          (null_rest_of_line",
            "            DOUBLE_QUOTE:'\"'",
            "            IP_ADDRESS:'1.2.3.5'",
            "            DOUBLE_QUOTE:'\"'",
            "            NEWLINE:'\\n'))",
            "        (aaa_profile_null",
            "          NO:'no'",
            "          WIRED_TO_WIRELESS_ROAM:'wired-to-wireless-roam'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_aaa",
            "      AAA:'aaa'",
            "      (aaa_rfc_3576_server",
            "        RFC_3576_SERVER:'rfc-3576-server'",
            "        (double_quoted_string",
            "          DOUBLE_QUOTE:'\"'",
            "          IP_ADDRESS:'1.2.3.4'",
            "          DOUBLE_QUOTE:'\"')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_aaa",
            "      AAA:'aaa'",
            "      (aaa_server_group",
            "        SERVER_GROUP:'server-group'",
            "        (double_quoted_string",
            "          DOUBLE_QUOTE:'\"'",
            "          VARIABLE:'mygroupfoo'",
            "          DOUBLE_QUOTE:'\"')",
            "        NEWLINE:'\\n'",
            "        (aaa_server_group_null",
            "          ALLOW_FAIL_THROUGH:'allow-fail-through'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n'))",
            "        (aaa_server_group_null",
            "          AUTH_SERVER:'auth-server'",
            "          (null_rest_of_line",
            "            VARIABLE:'ABCD'",
            "            NEWLINE:'\\n'))",
            "        (aaa_server_group_null",
            "          AUTH_SERVER:'auth-server'",
            "          (null_rest_of_line",
            "            VARIABLE:'HIJK'",
            "            NEWLINE:'\\n'))",
            "        (aaa_server_group_null",
            "          LOAD_BALANCE:'load-balance'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n'))",
            "        (aaa_server_group_null",
            "          SET:'set'",
            "          (null_rest_of_line",
            "            ROLE:'role'",
            "            VARIABLE:'condition'",
            "            ROLE:'role'",
            "            VARIABLE:'value-of'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_aaa",
            "      AAA:'aaa'",
            "      (aaa_user",
            "        USER:'user'",
            "        FAST_AGE:'fast-age'",
            "        NEWLINE:'\\n')))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/aruba_acl" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'aruba_acl'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_ip_access_list_eth",
            "      IP:'ip'",
            "      ACCESS_LIST:'access-list'",
            "      ETH:'eth'",
            "      name = (variable",
            "        VARIABLE:'someethlist')",
            "      NEWLINE:'\\n'",
            "      (ipacleth_line",
            "        action = (access_list_action",
            "          PERMIT:'permit')",
            "        (ipacleth_range",
            "          ANY:'any')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_ip_access_list_session",
            "      IP:'ip'",
            "      ACCESS_LIST:'access-list'",
            "      SESSION:'session'",
            "      name = (variable",
            "        VARIABLE:'some_ipv4_acl')",
            "      NEWLINE:'\\n'",
            "      (ipaclsession_line",
            "        src = (ipaclsession_ip_range",
            "          NETWORK:'network'",
            "          net = IP_ADDRESS:'1.2.3.0'",
            "          mask = IP_ADDRESS:'255.255.255.0')",
            "        dst = (ipaclsession_ip_range",
            "          HOST:'host'",
            "          hostip = IP_ADDRESS:'2.3.4.5')",
            "        svc = (ipaclsession_service",
            "          netsvc = (variable",
            "            VARIABLE:'svc-pptp'))",
            "        action = (aruba_access_list_action",
            "          action = (access_list_action",
            "            DENY:'deny'))",
            "        LOG:'log'",
            "        NEWLINE:'\\n')",
            "      (ipaclsession_line",
            "        src = (ipaclsession_ip_range",
            "          ANY:'any')",
            "        dst = (ipaclsession_ip_range",
            "          ANY:'any')",
            "        svc = (ipaclsession_service",
            "          prot = (protocol",
            "            TCP:'tcp')",
            "          ps = (netservice_port_specifier",
            "            start_port = DEC:'123'",
            "            end_port = DEC:'125'))",
            "        action = (aruba_access_list_action",
            "          action = (access_list_action",
            "            PERMIT:'permit'))",
            "        LOG:'log'",
            "        NEWLINE:'\\n')",
            "      (ipaclsession_line",
            "        src = (ipaclsession_ip_range",
            "          ANY:'any')",
            "        dst = (ipaclsession_ip_range",
            "          HOST:'host'",
            "          hostip = IP_ADDRESS:'1.2.3.4')",
            "        svc = (ipaclsession_service",
            "          prot = (protocol",
            "            TCP:'tcp')",
            "          ps = (netservice_port_specifier",
            "            start_port = DEC:'333'))",
            "        action = (aruba_access_list_action",
            "          action = (access_list_action",
            "            PERMIT:'permit'))",
            "        NEWLINE:'\\n')",
            "      (ipaclsession_line",
            "        src = (ipaclsession_ip_range",
            "          ANY:'any')",
            "        dst = (ipaclsession_ip_range",
            "          ANY:'any')",
            "        svc = (ipaclsession_service",
            "          netsvc = (variable",
            "            VARIABLE:'svc-blah'))",
            "        action = (aruba_access_list_action",
            "          action = (access_list_action",
            "            PERMIT:'permit'))",
            "        QUEUE:'queue'",
            "        HIGH:'high'",
            "        NEWLINE:'\\n')",
            "      (ipaclsession_line",
            "        src = (ipaclsession_ip_range",
            "          USER:'user')",
            "        dst = (ipaclsession_ip_range",
            "          HOST:'host'",
            "          hostip = IP_ADDRESS:'4.4.4.4')",
            "        svc = (ipaclsession_service",
            "          netsvc = (variable",
            "            ANY:'any'))",
            "        action = (aruba_access_list_action",
            "          action = (access_list_action",
            "            PERMIT:'permit'))",
            "        NEWLINE:'\\n')",
            "      (ipaclsession_line",
            "        src = (ipaclsession_ip_range",
            "          ANY:'any')",
            "        dst = (ipaclsession_ip_range",
            "          ALIAS:'alias'",
            "          alias = (variable",
            "            VARIABLE:'blah.example.com'  <== mode:M_Alias))",
            "        svc = (ipaclsession_service",
            "          netsvc = (variable",
            "            ANY:'any'))",
            "        action = (aruba_access_list_action",
            "          action = (access_list_action",
            "            DENY:'deny'))",
            "        LOG:'log'",
            "        NEWLINE:'\\n')",
            "      (ipaclsession_line",
            "        src = (ipaclsession_ip_range",
            "          USER:'user')",
            "        dst = (ipaclsession_ip_range",
            "          ANY:'any')",
            "        svc = (ipaclsession_service",
            "          prot = (protocol",
            "            UDP:'udp')",
            "          ps = (netservice_port_specifier",
            "            start_port = DEC:'222'))",
            "        action = (aruba_access_list_action",
            "          action = (access_list_action",
            "            DENY:'deny'))",
            "        NEWLINE:'\\n')",
            "      (ipaclsession_line",
            "        src = (ipaclsession_ip_range",
            "          ANY:'any')",
            "        dst = (ipaclsession_ip_range",
            "          ANY:'any')",
            "        svc = (ipaclsession_service",
            "          netsvc = (variable",
            "            VARIABLE:'svc-abcd'))",
            "        action = (aruba_access_list_action",
            "          action = (access_list_action",
            "            PERMIT:'permit'))",
            "        TOS:'tos'",
            "        tos = DEC:'46'",
            "        DOT1P_PRIORITY:'dot1p-priority'",
            "        d1ppri = DEC:'6'",
            "        NEWLINE:'\\n')",
            "      (ipaclsession_line",
            "        src = (ipaclsession_ip_range",
            "          USER:'user')",
            "        dst = (ipaclsession_ip_range",
            "          ANY:'any')",
            "        svc = (ipaclsession_service",
            "          netsvc = (variable",
            "            ANY:'any'))",
            "        action = (aruba_access_list_action",
            "          SRC_NAT:'src-nat')",
            "        NEWLINE:'\\n')",
            "      (ipaclsession_line",
            "        src = (ipaclsession_ip_range",
            "          USER:'user')",
            "        dst = (ipaclsession_ip_range",
            "          ANY:'any')",
            "        svc = (ipaclsession_service",
            "          netsvc = (variable",
            "            VARIABLE:'svc-http'))",
            "        action = (aruba_access_list_action",
            "          DST_NAT:'dst-nat'",
            "          dstnat = DEC:'8080')",
            "        NEWLINE:'\\n')",
            "      (ipaclsession_line",
            "        src = (ipaclsession_ip_range",
            "          USER:'user')",
            "        dst = (ipaclsession_ip_range",
            "          ALIAS:'alias'",
            "          alias = (variable",
            "            VARIABLE:'controller'  <== mode:M_Alias))",
            "        svc = (ipaclsession_service",
            "          netsvc = (variable",
            "            VARIABLE:'abcdefg'))",
            "        action = (aruba_access_list_action",
            "          DST_NAT:'dst-nat'",
            "          dstnat = DEC:'8081')",
            "        NEWLINE:'\\n')",
            "      (ipaclsession_line",
            "        src = (ipaclsession_ip_range",
            "          USER:'user')",
            "        dst = (ipaclsession_ip_range",
            "          ANY:'any')",
            "        svc = (ipaclsession_service",
            "          APP:'app'",
            "          app = (aruba_app",
            "            BITTORRENT:'bittorrent'))",
            "        action = (aruba_access_list_action",
            "          action = (access_list_action",
            "            DENY:'deny'))",
            "        NEWLINE:'\\n')",
            "      (ipaclsession_line",
            "        src = (ipaclsession_ip_range",
            "          USER:'user')",
            "        dst = (ipaclsession_ip_range",
            "          ANY:'any')",
            "        svc = (ipaclsession_service",
            "          APP:'app'",
            "          app = (aruba_app",
            "            BITTORRENT_APPLICATION:'bittorrent-application'))",
            "        action = (aruba_access_list_action",
            "          action = (access_list_action",
            "            DENY:'deny'))",
            "        NEWLINE:'\\n')",
            "      (ipaclsession_line",
            "        src = (ipaclsession_ip_range",
            "          USER:'user')",
            "        dst = (ipaclsession_ip_range",
            "          ANY:'any')",
            "        svc = (ipaclsession_service",
            "          APPCATEGORY:'appcategory'",
            "          appcat = (aruba_appcategory",
            "            PEER_TO_PEER:'peer-to-peer'))",
            "        action = (aruba_access_list_action",
            "          action = (access_list_action",
            "            DENY:'deny'))",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_ip_access_list_session",
            "      IP:'ip'",
            "      ACCESS_LIST:'access-list'",
            "      SESSION:'session'",
            "      name = (variable",
            "        VARIABLE:'some_ipv6_acl')",
            "      NEWLINE:'\\n'",
            "      (ipaclsession_line6",
            "        IPV6:'ipv6'",
            "        src = (ipaclsession_ip6_range",
            "          USER:'user')",
            "        dst = (ipaclsession_ip6_range",
            "          ANY:'any')",
            "        svc = (ipaclsession_service6",
            "          UDP:'udp'",
            "          ps = (netservice_port_specifier",
            "            start_port = DEC:'222'))",
            "        action = (aruba_access_list_action",
            "          action = (access_list_action",
            "            DENY:'deny'))",
            "        NEWLINE:'\\n')",
            "      (ipaclsession_line6",
            "        IPV6:'ipv6'",
            "        src = (ipaclsession_ip6_range",
            "          ANY:'any')",
            "        dst = (ipaclsession_ip6_range",
            "          ANY:'any')",
            "        svc = (ipaclsession_service6",
            "          netsvc = (variable",
            "            VARIABLE:'svc-v6-icmp'))",
            "        action = (aruba_access_list_action",
            "          action = (access_list_action",
            "            PERMIT:'permit'))",
            "        NEWLINE:'\\n')",
            "      (ipaclsession_line6",
            "        IPV6:'ipv6'",
            "        src = (ipaclsession_ip6_range",
            "          ANY:'any')",
            "        dst = (ipaclsession_ip6_range",
            "          ANY:'any')",
            "        svc = (ipaclsession_service6",
            "          netsvc = (variable",
            "            VARIABLE:'svc-v6-dhcp'))",
            "        action = (aruba_access_list_action",
            "          action = (access_list_action",
            "            PERMIT:'permit'))",
            "        NEWLINE:'\\n')",
            "      (ipaclsession_line6",
            "        IPV6:'ipv6'",
            "        src = (ipaclsession_ip6_range",
            "          ANY:'any')",
            "        dst = (ipaclsession_ip6_range",
            "          ANY:'any')",
            "        svc = (ipaclsession_service6",
            "          netsvc = (variable",
            "            VARIABLE:'svc-dns'))",
            "        action = (aruba_access_list_action",
            "          action = (access_list_action",
            "            PERMIT:'permit'))",
            "        NEWLINE:'\\n')",
            "      (ipaclsession_line6",
            "        IPV6:'ipv6'",
            "        src = (ipaclsession_ip6_range",
            "          ANY:'any')",
            "        dst = (ipaclsession_ip6_range",
            "          NETWORK:'network'",
            "          net = IPV6_PREFIX:'abcd::/7')",
            "        svc = (ipaclsession_service6",
            "          netsvc = (variable",
            "            ANY:'any'))",
            "        action = (aruba_access_list_action",
            "          action = (access_list_action",
            "            PERMIT:'permit'))",
            "        NEWLINE:'\\n')",
            "      (ipaclsession_line6",
            "        IPV6:'ipv6'",
            "        src = (ipaclsession_ip6_range",
            "          ANY:'any')",
            "        dst = (ipaclsession_ip6_range",
            "          NETWORK:'network'",
            "          net = IPV6_PREFIX:'dcba::/64')",
            "        svc = (ipaclsession_service6",
            "          netsvc = (variable",
            "            ANY:'any'))",
            "        action = (aruba_access_list_action",
            "          action = (access_list_action",
            "            PERMIT:'permit'))",
            "        NEWLINE:'\\n')",
            "      (ipaclsession_line6",
            "        IPV6:'ipv6'",
            "        src = (ipaclsession_ip6_range",
            "          ANY:'any')",
            "        dst = (ipaclsession_ip6_range",
            "          ALIAS:'alias'",
            "          alias = (variable",
            "            VARIABLE:'ipv6-reserved-range'  <== mode:M_Alias))",
            "        svc = (ipaclsession_service6",
            "          netsvc = (variable",
            "            ANY:'any'))",
            "        action = (aruba_access_list_action",
            "          action = (access_list_action",
            "            DENY:'deny'))",
            "        NEWLINE:'\\n')",
            "      (ipaclsession_line6",
            "        IPV6:'ipv6'",
            "        src = (ipaclsession_ip6_range",
            "          USER:'user')",
            "        dst = (ipaclsession_ip6_range",
            "          ANY:'any')",
            "        svc = (ipaclsession_service6",
            "          ICMPV6:'icmpv6'",
            "          is = (netservice_icmpv6_specifier",
            "            RTR_ADV:'rtr-adv'))",
            "        action = (aruba_access_list_action",
            "          action = (access_list_action",
            "            DENY:'deny'))",
            "        NEWLINE:'\\n')",
            "      (ipaclsession_line6",
            "        IPV6:'ipv6'",
            "        src = (ipaclsession_ip6_range",
            "          USER:'user')",
            "        dst = (ipaclsession_ip6_range",
            "          ALIAS:'alias'",
            "          alias = (variable",
            "            VARIABLE:'controller6'  <== mode:M_Alias))",
            "        svc = (ipaclsession_service6",
            "          netsvc = (variable",
            "            VARIABLE:'svc-https'))",
            "        action = (aruba_access_list_action",
            "          CAPTIVE:'captive')",
            "        NEWLINE:'\\n')))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/aruba_airgroup" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'aruba_airgroup'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        AIRGROUP:'airgroup'",
            "        VARIABLE:'active-wireless-discovery'",
            "        DOUBLE_QUOTE:'\"'",
            "        ENABLE:'enable'",
            "        DOUBLE_QUOTE:'\"'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        AIRGROUP:'airgroup'",
            "        VARIABLE:'cppm-server'",
            "        AAA:'aaa'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        AIRGROUP:'airgroup'",
            "        VARIABLE:'dlna'",
            "        DOUBLE_QUOTE:'\"'",
            "        DISABLE:'disable'",
            "        DOUBLE_QUOTE:'\"'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        AIRGROUP:'airgroup'",
            "        VARIABLE:'location-discovery'",
            "        DOUBLE_QUOTE:'\"'",
            "        ENABLE:'enable'",
            "        DOUBLE_QUOTE:'\"'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        AIRGROUP:'airgroup'",
            "        VARIABLE:'mdns'",
            "        DOUBLE_QUOTE:'\"'",
            "        DISABLE:'disable'",
            "        DOUBLE_QUOTE:'\"'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        AIRGROUP:'airgroup'",
            "        SERVICE:'service'",
            "        DOUBLE_QUOTE:'\"'",
            "        VARIABLE:'abcd'",
            "        DOUBLE_QUOTE:'\"'",
            "        ENABLE:'enable'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        AIRGROUP:'airgroup'",
            "        SERVICE:'service'",
            "        DOUBLE_QUOTE:'\"'",
            "        VARIABLE:'efgh'",
            "        DOUBLE_QUOTE:'\"'",
            "        DISABLE:'disable'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_airgroupservice",
            "      AIRGROUPSERVICE:'airgroupservice'",
            "      (null_rest_of_line",
            "        DOUBLE_QUOTE:'\"'",
            "        VARIABLE:'airplay'",
            "        DOUBLE_QUOTE:'\"'",
            "        NEWLINE:'\\n')",
            "      (ags_null",
            "        DESCRIPTION:'description'",
            "        (null_rest_of_line",
            "          RAW_TEXT:' \"AirPlay\"'  <== mode:M_Description",
            "          NEWLINE:'\\n'  <== mode:M_Description))",
            "      (ags_null",
            "        ID:'id'",
            "        (null_rest_of_line",
            "          DOUBLE_QUOTE:'\"'",
            "          VARIABLE:'_airplay._tcp'",
            "          DOUBLE_QUOTE:'\"'",
            "          NEWLINE:'\\n'))",
            "      (ags_null",
            "        ID:'id'",
            "        (null_rest_of_line",
            "          DOUBLE_QUOTE:'\"'",
            "          VARIABLE:'_appletv-v2._tcp'",
            "          DOUBLE_QUOTE:'\"'",
            "          NEWLINE:'\\n'))",
            "      (ags_null",
            "        ID:'id'",
            "        (null_rest_of_line",
            "          DOUBLE_QUOTE:'\"'",
            "          VARIABLE:'_raop._tcp'",
            "          DOUBLE_QUOTE:'\"'",
            "          NEWLINE:'\\n'))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/aruba_crypto" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'aruba_crypto'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_crypto",
            "      CRYPTO:'crypto'",
            "      (crypto_dynamic_map",
            "        DYNAMIC_MAP:'dynamic-map'",
            "        name = (variable",
            "          VARIABLE:'abcd')",
            "        seq_num = DEC:'1234'",
            "        NEWLINE:'\\n'",
            "        (cd_set",
            "          SET:'set'",
            "          (cd_set_transform_set",
            "            TRANSFORM_SET:'transform-set'",
            "            (variable",
            "              DOUBLE_QUOTE:'\"')",
            "            (variable",
            "              VARIABLE:'foo')",
            "            (variable",
            "              DOUBLE_QUOTE:'\"')",
            "            (variable",
            "              DOUBLE_QUOTE:'\"')",
            "            (variable",
            "              VARIABLE:'bar')",
            "            (variable",
            "              DOUBLE_QUOTE:'\"')",
            "            (variable",
            "              DOUBLE_QUOTE:'\"')",
            "            (variable",
            "              VARIABLE:'baz')",
            "            (variable",
            "              DOUBLE_QUOTE:'\"')",
            "            NEWLINE:'\\n'))",
            "        (cd_null",
            "          VERSION:'version'",
            "          (null_rest_of_line",
            "            V2:'v2'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_crypto",
            "      CRYPTO:'crypto'",
            "      (crypto_isakmp",
            "        ISAKMP:'isakmp'",
            "        (cis_null",
            "          EAP_PASSTHROUGH:'eap-passthrough'",
            "          (null_rest_of_line",
            "            VARIABLE:'eap-mschapv2'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_crypto",
            "      CRYPTO:'crypto'",
            "      (crypto_isakmp",
            "        ISAKMP:'isakmp'",
            "        (cis_null",
            "          EAP_PASSTHROUGH:'eap-passthrough'",
            "          (null_rest_of_line",
            "            VARIABLE:'eap-peap'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_crypto",
            "      CRYPTO:'crypto'",
            "      (crypto_isakmp",
            "        ISAKMP:'isakmp'",
            "        (cis_null",
            "          EAP_PASSTHROUGH:'eap-passthrough'",
            "          (null_rest_of_line",
            "            VARIABLE:'eap-tls'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_crypto",
            "      CRYPTO:'crypto'",
            "      (crypto_isakmp",
            "        ISAKMP:'isakmp'",
            "        (cis_policy",
            "          POLICY:'policy'",
            "          priority = DEC:'1'",
            "          NEWLINE:'\\n'",
            "          (cispol_authentication",
            "            AUTHENTICATION:'authentication'",
            "            RSA_SIG:'rsa-sig'  <== mode:M_Authentication",
            "            NEWLINE:'\\n')",
            "          (cispol_encryption",
            "            ENCRYPTION:'encryption'",
            "            (ike_encryption_aruba",
            "              AES128:'aes128')",
            "            NEWLINE:'\\n')",
            "          (cispol_encryption",
            "            ENCRYPTION:'encryption'",
            "            (ike_encryption_aruba",
            "              AES256:'aes256')",
            "            NEWLINE:'\\n')",
            "          (cispol_group",
            "            GROUP:'group'",
            "            DEC:'19'",
            "            NEWLINE:'\\n')",
            "          (cispol_group",
            "            GROUP:'group'",
            "            DEC:'20'",
            "            NEWLINE:'\\n')",
            "          (cispol_hash",
            "            HASH:'hash'",
            "            SHA2_256_128:'sha2-256-128'",
            "            NEWLINE:'\\n')",
            "          (cispol_null",
            "            PRF:'prf'",
            "            (null_rest_of_line",
            "              VARIABLE:'prf-hmac-sha256'",
            "              NEWLINE:'\\n'))",
            "          (cispol_null",
            "            VERSION:'version'",
            "            (null_rest_of_line",
            "              V2:'v2'",
            "              NEWLINE:'\\n'))))))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        CRYPTO_LOCAL:'crypto-local'",
            "        PKI:'pki'",
            "        VARIABLE:'ServerCert'",
            "        VARIABLE:'blah.example.com'",
            "        VARIABLE:'blah.pem'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        CRYPTO_LOCAL:'crypto-local'",
            "        PKI:'pki'",
            "        VARIABLE:'ServerCert'",
            "        VARIABLE:'web-controller'",
            "        VARIABLE:'controller.p7b'",
            "        NEWLINE:'\\n')))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/aruba_dhcp" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'aruba_dhcp'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_ip_dhcp",
            "      IP:'ip'",
            "      DHCP:'dhcp'",
            "      (ip_dhcp_null",
            "        EXCLUDED_ADDRESS:'excluded-address'",
            "        (null_rest_of_line",
            "          IP_ADDRESS:'1.2.3.4'",
            "          IP_ADDRESS:'1.2.3.5'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_ip_dhcp",
            "      IP:'ip'",
            "      DHCP:'dhcp'",
            "      (ip_dhcp_pool",
            "        POOL:'pool'",
            "        name = (variable",
            "          VARIABLE:'foopool')",
            "        NEWLINE:'\\n'",
            "        (ip_dhcp_pool_null",
            "          AUTHORITATIVE:'authoritative'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n'))",
            "        (ip_dhcp_pool_null",
            "          DEFAULT_ROUTER:'default-router'",
            "          (null_rest_of_line",
            "            IP_ADDRESS:'2.2.2.2'",
            "            NEWLINE:'\\n'))",
            "        (ip_dhcp_pool_null",
            "          DNS_SERVER:'dns-server'",
            "          (null_rest_of_line",
            "            IP_ADDRESS:'3.3.3.3'",
            "            IP_ADDRESS:'3.3.3.4'",
            "            NEWLINE:'\\n'))",
            "        (ip_dhcp_pool_null",
            "          DOMAIN_NAME:'domain-name'",
            "          (null_rest_of_line",
            "            VARIABLE:'example.com'",
            "            NEWLINE:'\\n'))",
            "        (ip_dhcp_pool_null",
            "          LEASE:'lease'",
            "          (null_rest_of_line",
            "            DEC:'7'",
            "            DEC:'0'",
            "            DEC:'0'",
            "            DEC:'0'",
            "            NEWLINE:'\\n'))",
            "        (ip_dhcp_pool_null",
            "          NETWORK:'network'",
            "          (null_rest_of_line",
            "            IP_ADDRESS:'4.4.4.0'",
            "            IP_ADDRESS:'255.255.255.0'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_service",
            "      SERVICE:'service'",
            "      (variable",
            "        DHCP:'dhcp')",
            "      NEWLINE:'\\n'))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/aruba_interface" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'aruba_interface'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_interface",
            "      INTERFACE:'interface'",
            "      iname = (interface_name",
            "        name_prefix_alpha = M_Interface_PREFIX:'gigabitethernet'  <== mode:M_Interface",
            "        DEC:'0'  <== mode:M_Interface",
            "        FORWARD_SLASH:'/'  <== mode:M_Interface",
            "        DEC:'0'  <== mode:M_Interface",
            "        FORWARD_SLASH:'/'  <== mode:M_Interface",
            "        (range",
            "          (subrange",
            "            low = DEC:'0'  <== mode:M_Interface)))",
            "      NEWLINE:'\\n'  <== mode:M_Interface",
            "      (if_inner",
            "        (if_null_single",
            "          BCMC_OPTIMIZATION:'bcmc-optimization'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_description",
            "          (description_line",
            "            DESCRIPTION:'description'",
            "            text = RAW_TEXT:' \"blah\"'  <== mode:M_Description",
            "            NEWLINE:'\\n'  <== mode:M_Description)))",
            "      (if_inner",
            "        (if_ip_address",
            "          IP:'ip'",
            "          ADDRESS:'address'",
            "          prefix = IP_PREFIX:'1.2.3.4/5'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_ip_helper_address",
            "          IP:'ip'",
            "          HELPER_ADDRESS:'helper-address'",
            "          address = IP_ADDRESS:'2.3.4.5'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_single",
            "          JUMBO:'jumbo'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          LLDP:'lldp'",
            "          MED:'med'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          LLDP:'lldp'",
            "          RECEIVE:'receive'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          LLDP:'lldp'",
            "          TRANSMIT:'transmit'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_spanning_tree",
            "          NO:'no'",
            "          SPANNING_TREE:'spanning-tree'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_single",
            "          NO:'no'",
            "          SUPPRESS_ARP:'suppress-arp'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_switchport_mode",
            "          SWITCHPORT:'switchport'",
            "          MODE:'mode'",
            "          TRUNK:'trunk'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_switchport_trunk_native",
            "          SWITCHPORT:'switchport'",
            "          TRUNK:'trunk'",
            "          NATIVE:'native'",
            "          VLAN:'vlan'",
            "          vlan = DEC:'123'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_switchport_trunk_allowed",
            "          SWITCHPORT:'switchport'",
            "          TRUNK:'trunk'",
            "          ALLOWED:'allowed'",
            "          VLAN:'vlan'",
            "          r = (range",
            "            (subrange",
            "              low = DEC:'124')",
            "            COMMA:','",
            "            (subrange",
            "              low = DEC:'125'))",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_single",
            "          TRUSTED:'trusted'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_single",
            "          TRUSTED:'trusted'",
            "          VLAN:'vlan'",
            "          DEC:'1'",
            "          DASH:'-'",
            "          DEC:'1234'",
            "          NEWLINE:'\\n'))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/aruba_logging" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'aruba_logging'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_address",
            "          hostname = IP_ADDRESS:'1.2.3.4'",
            "          TYPE:'type'",
            "          ltype = (variable",
            "            VARIABLE:'ap-debug')",
            "          SEVERITY:'severity'",
            "          severity = (variable",
            "            INFORMATIONAL:'informational')",
            "          FACILITY:'facility'",
            "          facility = (variable",
            "            VARIABLE:'local0')",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_address",
            "          hostname = IP_ADDRESS:'1.2.3.4'",
            "          TYPE:'type'",
            "          ltype = (variable",
            "            VARIABLE:'arm-user-debug')",
            "          SEVERITY:'severity'",
            "          severity = (variable",
            "            INFORMATIONAL:'informational')",
            "          FACILITY:'facility'",
            "          facility = (variable",
            "            VARIABLE:'local0')",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_address",
            "          hostname = IP_ADDRESS:'1.2.3.4'",
            "          TYPE:'type'",
            "          ltype = (variable",
            "            VARIABLE:'arm')",
            "          SEVERITY:'severity'",
            "          severity = (variable",
            "            INFORMATIONAL:'informational')",
            "          FACILITY:'facility'",
            "          facility = (variable",
            "            VARIABLE:'local0')",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_address",
            "          hostname = IP_ADDRESS:'1.2.3.4'",
            "          TYPE:'type'",
            "          ltype = (variable",
            "            NETWORK:'network')",
            "          SEVERITY:'severity'",
            "          severity = (variable",
            "            INFORMATIONAL:'informational')",
            "          FACILITY:'facility'",
            "          facility = (variable",
            "            VARIABLE:'local0')",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_address",
            "          hostname = IP_ADDRESS:'1.2.3.4'",
            "          TYPE:'type'",
            "          ltype = (variable",
            "            SECURITY:'security')",
            "          SEVERITY:'severity'",
            "          severity = (variable",
            "            INFORMATIONAL:'informational')",
            "          FACILITY:'facility'",
            "          facility = (variable",
            "            VARIABLE:'local0')",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_address",
            "          hostname = IP_ADDRESS:'1.2.3.4'",
            "          TYPE:'type'",
            "          ltype = (variable",
            "            SYSTEM:'system')",
            "          SEVERITY:'severity'",
            "          severity = (variable",
            "            INFORMATIONAL:'informational')",
            "          FACILITY:'facility'",
            "          facility = (variable",
            "            VARIABLE:'local0')",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_address",
            "          hostname = IP_ADDRESS:'1.2.3.4'",
            "          TYPE:'type'",
            "          ltype = (variable",
            "            USER:'user')",
            "          SEVERITY:'severity'",
            "          severity = (variable",
            "            INFORMATIONAL:'informational')",
            "          FACILITY:'facility'",
            "          facility = (variable",
            "            VARIABLE:'local0')",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_address",
            "          hostname = IP_ADDRESS:'1.2.3.4'",
            "          TYPE:'type'",
            "          ltype = (variable",
            "            VARIABLE:'user-debug')",
            "          SEVERITY:'severity'",
            "          severity = (variable",
            "            INFORMATIONAL:'informational')",
            "          FACILITY:'facility'",
            "          facility = (variable",
            "            VARIABLE:'local0')",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_address",
            "          hostname = IP_ADDRESS:'1.2.3.4'",
            "          TYPE:'type'",
            "          ltype = (variable",
            "            VARIABLE:'wireless')",
            "          SEVERITY:'severity'",
            "          severity = (variable",
            "            INFORMATIONAL:'informational')",
            "          FACILITY:'facility'",
            "          facility = (variable",
            "            VARIABLE:'local0')",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_null",
            "          LEVEL:'level'",
            "          (null_rest_of_line",
            "            DEBUGGING:'debugging'",
            "            VARIABLE:'ap-debug'",
            "            DEC:'1'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_null",
            "          LEVEL:'level'",
            "          (null_rest_of_line",
            "            DEBUGGING:'debugging'",
            "            VARIABLE:'ap-debug'",
            "            DEC:'10'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_null",
            "          LEVEL:'level'",
            "          (null_rest_of_line",
            "            DEBUGGING:'debugging'",
            "            SYSTEM:'system'",
            "            PROCESS:'process'",
            "            VARIABLE:'cfgm'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_null",
            "          LEVEL:'level'",
            "          (null_rest_of_line",
            "            DEBUGGING:'debugging'",
            "            SYSTEM:'system'",
            "            PROCESS:'process'",
            "            VARIABLE:'processes'",
            "            VARIABLE:'subcat'",
            "            VARIABLE:'mapc'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_null",
            "          LEVEL:'level'",
            "          (null_rest_of_line",
            "            INFORMATIONAL:'informational'",
            "            VARIABLE:'arm'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_null",
            "          LEVEL:'level'",
            "          (null_rest_of_line",
            "            INFORMATIONAL:'informational'",
            "            VARIABLE:'arm'",
            "            VARIABLE:'subcat'",
            "            ALL:'all'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_null",
            "          LEVEL:'level'",
            "          (null_rest_of_line",
            "            INFORMATIONAL:'informational'",
            "            VARIABLE:'arm'",
            "            VARIABLE:'subcat'",
            "            VARIABLE:'client-match'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_null",
            "          LEVEL:'level'",
            "          (null_rest_of_line",
            "            INFORMATIONAL:'informational'",
            "            VARIABLE:'arm'",
            "            VARIABLE:'subcat'",
            "            VARIABLE:'radio-mgmt'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_null",
            "          LEVEL:'level'",
            "          (null_rest_of_line",
            "            INFORMATIONAL:'informational'",
            "            NETWORK:'network'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_null",
            "          LEVEL:'level'",
            "          (null_rest_of_line",
            "            INFORMATIONAL:'informational'",
            "            NETWORK:'network'",
            "            VARIABLE:'subcat'",
            "            ALL:'all'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_null",
            "          LEVEL:'level'",
            "          (null_rest_of_line",
            "            INFORMATIONAL:'informational'",
            "            NETWORK:'network'",
            "            VARIABLE:'subcat'",
            "            DHCP:'dhcp'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_null",
            "          LEVEL:'level'",
            "          (null_rest_of_line",
            "            INFORMATIONAL:'informational'",
            "            NETWORK:'network'",
            "            VARIABLE:'subcat'",
            "            VARIABLE:'gp'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_null",
            "          LEVEL:'level'",
            "          (null_rest_of_line",
            "            INFORMATIONAL:'informational'",
            "            NETWORK:'network'",
            "            VARIABLE:'subcat'",
            "            MOBILITY:'mobility'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_null",
            "          LEVEL:'level'",
            "          (null_rest_of_line",
            "            INFORMATIONAL:'informational'",
            "            NETWORK:'network'",
            "            VARIABLE:'subcat'",
            "            VARIABLE:'packet-dump'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_null",
            "          LEVEL:'level'",
            "          (null_rest_of_line",
            "            INFORMATIONAL:'informational'",
            "            SECURITY:'security'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_null",
            "          LEVEL:'level'",
            "          (null_rest_of_line",
            "            INFORMATIONAL:'informational'",
            "            SECURITY:'security'",
            "            VARIABLE:'subcat'",
            "            AAA:'aaa'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_null",
            "          LEVEL:'level'",
            "          (null_rest_of_line",
            "            INFORMATIONAL:'informational'",
            "            SECURITY:'security'",
            "            VARIABLE:'subcat'",
            "            ALL:'all'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_null",
            "          LEVEL:'level'",
            "          (null_rest_of_line",
            "            INFORMATIONAL:'informational'",
            "            SECURITY:'security'",
            "            VARIABLE:'subcat'",
            "            VARIABLE:'auth-amon'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_null",
            "          LEVEL:'level'",
            "          (null_rest_of_line",
            "            INFORMATIONAL:'informational'",
            "            SECURITY:'security'",
            "            VARIABLE:'subcat'",
            "            VARIABLE:'certmgr'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_null",
            "          LEVEL:'level'",
            "          (null_rest_of_line",
            "            INFORMATIONAL:'informational'",
            "            SECURITY:'security'",
            "            VARIABLE:'subcat'",
            "            VARIABLE:'cpsec'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_null",
            "          LEVEL:'level'",
            "          (null_rest_of_line",
            "            INFORMATIONAL:'informational'",
            "            SECURITY:'security'",
            "            VARIABLE:'subcat'",
            "            VARIABLE:'db'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_null",
            "          LEVEL:'level'",
            "          (null_rest_of_line",
            "            INFORMATIONAL:'informational'",
            "            SECURITY:'security'",
            "            VARIABLE:'subcat'",
            "            DOT1X:'dot1x'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_null",
            "          LEVEL:'level'",
            "          (null_rest_of_line",
            "            INFORMATIONAL:'informational'",
            "            SECURITY:'security'",
            "            VARIABLE:'subcat'",
            "            FIREWALL:'firewall'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_null",
            "          LEVEL:'level'",
            "          (null_rest_of_line",
            "            INFORMATIONAL:'informational'",
            "            SECURITY:'security'",
            "            VARIABLE:'subcat'",
            "            IDS:'ids'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_null",
            "          LEVEL:'level'",
            "          (null_rest_of_line",
            "            INFORMATIONAL:'informational'",
            "            SECURITY:'security'",
            "            VARIABLE:'subcat'",
            "            VARIABLE:'ids-ap'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_null",
            "          LEVEL:'level'",
            "          (null_rest_of_line",
            "            INFORMATIONAL:'informational'",
            "            SECURITY:'security'",
            "            VARIABLE:'subcat'",
            "            IKE:'ike'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_null",
            "          LEVEL:'level'",
            "          (null_rest_of_line",
            "            INFORMATIONAL:'informational'",
            "            SECURITY:'security'",
            "            VARIABLE:'subcat'",
            "            KERBEROS:'kerberos'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_null",
            "          LEVEL:'level'",
            "          (null_rest_of_line",
            "            INFORMATIONAL:'informational'",
            "            SECURITY:'security'",
            "            VARIABLE:'subcat'",
            "            MOBILITY:'mobility'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_null",
            "          LEVEL:'level'",
            "          (null_rest_of_line",
            "            INFORMATIONAL:'informational'",
            "            SECURITY:'security'",
            "            VARIABLE:'subcat'",
            "            VARIABLE:'ntlm'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_null",
            "          LEVEL:'level'",
            "          (null_rest_of_line",
            "            INFORMATIONAL:'informational'",
            "            SECURITY:'security'",
            "            VARIABLE:'subcat'",
            "            VARIABLE:'packet-trace'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_null",
            "          LEVEL:'level'",
            "          (null_rest_of_line",
            "            INFORMATIONAL:'informational'",
            "            SECURITY:'security'",
            "            VARIABLE:'subcat'",
            "            VPN:'vpn'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_null",
            "          LEVEL:'level'",
            "          (null_rest_of_line",
            "            INFORMATIONAL:'informational'",
            "            SECURITY:'security'",
            "            VARIABLE:'subcat'",
            "            VARIABLE:'webserver'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_null",
            "          LEVEL:'level'",
            "          (null_rest_of_line",
            "            INFORMATIONAL:'informational'",
            "            SECURITY:'security'",
            "            VARIABLE:'subcat'",
            "            VARIABLE:'wl-sync'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_null",
            "          LEVEL:'level'",
            "          (null_rest_of_line",
            "            INFORMATIONAL:'informational'",
            "            SYSTEM:'system'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_null",
            "          LEVEL:'level'",
            "          (null_rest_of_line",
            "            INFORMATIONAL:'informational'",
            "            SYSTEM:'system'",
            "            VARIABLE:'subcat'",
            "            ALL:'all'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_null",
            "          LEVEL:'level'",
            "          (null_rest_of_line",
            "            INFORMATIONAL:'informational'",
            "            SYSTEM:'system'",
            "            VARIABLE:'subcat'",
            "            AMON:'amon'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_null",
            "          LEVEL:'level'",
            "          (null_rest_of_line",
            "            INFORMATIONAL:'informational'",
            "            SYSTEM:'system'",
            "            VARIABLE:'subcat'",
            "            VARIABLE:'amon-ale'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_null",
            "          LEVEL:'level'",
            "          (null_rest_of_line",
            "            INFORMATIONAL:'informational'",
            "            SYSTEM:'system'",
            "            VARIABLE:'subcat'",
            "            VARIABLE:'amon-amp'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_null",
            "          LEVEL:'level'",
            "          (null_rest_of_line",
            "            INFORMATIONAL:'informational'",
            "            SYSTEM:'system'",
            "            VARIABLE:'subcat'",
            "            AP:'ap'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_null",
            "          LEVEL:'level'",
            "          (null_rest_of_line",
            "            INFORMATIONAL:'informational'",
            "            SYSTEM:'system'",
            "            VARIABLE:'subcat'",
            "            CONFIGURATION:'configuration'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_null",
            "          LEVEL:'level'",
            "          (null_rest_of_line",
            "            INFORMATIONAL:'informational'",
            "            SYSTEM:'system'",
            "            VARIABLE:'subcat'",
            "            VARIABLE:'gp'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_null",
            "          LEVEL:'level'",
            "          (null_rest_of_line",
            "            INFORMATIONAL:'informational'",
            "            SYSTEM:'system'",
            "            VARIABLE:'subcat'",
            "            VARIABLE:'ha'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_null",
            "          LEVEL:'level'",
            "          (null_rest_of_line",
            "            INFORMATIONAL:'informational'",
            "            SYSTEM:'system'",
            "            VARIABLE:'subcat'",
            "            VARIABLE:'mapc'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_null",
            "          LEVEL:'level'",
            "          (null_rest_of_line",
            "            INFORMATIONAL:'informational'",
            "            SYSTEM:'system'",
            "            VARIABLE:'subcat'",
            "            VARIABLE:'messages'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_null",
            "          LEVEL:'level'",
            "          (null_rest_of_line",
            "            INFORMATIONAL:'informational'",
            "            SYSTEM:'system'",
            "            VARIABLE:'subcat'",
            "            PAN:'pan'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_null",
            "          LEVEL:'level'",
            "          (null_rest_of_line",
            "            INFORMATIONAL:'informational'",
            "            SYSTEM:'system'",
            "            VARIABLE:'subcat'",
            "            VARIABLE:'reg-tbl'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_null",
            "          LEVEL:'level'",
            "          (null_rest_of_line",
            "            INFORMATIONAL:'informational'",
            "            SYSTEM:'system'",
            "            VARIABLE:'subcat'",
            "            SNMP:'snmp'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_null",
            "          LEVEL:'level'",
            "          (null_rest_of_line",
            "            INFORMATIONAL:'informational'",
            "            SYSTEM:'system'",
            "            VARIABLE:'subcat'",
            "            VARIABLE:'webserver'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_null",
            "          LEVEL:'level'",
            "          (null_rest_of_line",
            "            INFORMATIONAL:'informational'",
            "            USER:'user'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_null",
            "          LEVEL:'level'",
            "          (null_rest_of_line",
            "            INFORMATIONAL:'informational'",
            "            USER:'user'",
            "            VARIABLE:'subcat'",
            "            ALL:'all'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_null",
            "          LEVEL:'level'",
            "          (null_rest_of_line",
            "            INFORMATIONAL:'informational'",
            "            USER:'user'",
            "            VARIABLE:'subcat'",
            "            CAPTIVE_PORTAL:'captive-portal'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_null",
            "          LEVEL:'level'",
            "          (null_rest_of_line",
            "            INFORMATIONAL:'informational'",
            "            USER:'user'",
            "            VARIABLE:'subcat'",
            "            VARIABLE:'client-match'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_null",
            "          LEVEL:'level'",
            "          (null_rest_of_line",
            "            INFORMATIONAL:'informational'",
            "            USER:'user'",
            "            VARIABLE:'subcat'",
            "            DOT1X:'dot1x'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_null",
            "          LEVEL:'level'",
            "          (null_rest_of_line",
            "            INFORMATIONAL:'informational'",
            "            USER:'user'",
            "            VARIABLE:'subcat'",
            "            VARIABLE:'mapc'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_null",
            "          LEVEL:'level'",
            "          (null_rest_of_line",
            "            INFORMATIONAL:'informational'",
            "            USER:'user'",
            "            VARIABLE:'subcat'",
            "            PAN:'pan'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_null",
            "          LEVEL:'level'",
            "          (null_rest_of_line",
            "            INFORMATIONAL:'informational'",
            "            USER:'user'",
            "            VARIABLE:'subcat'",
            "            RADIUS:'radius'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_null",
            "          LEVEL:'level'",
            "          (null_rest_of_line",
            "            INFORMATIONAL:'informational'",
            "            USER:'user'",
            "            VARIABLE:'subcat'",
            "            VOICE:'voice'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_null",
            "          LEVEL:'level'",
            "          (null_rest_of_line",
            "            INFORMATIONAL:'informational'",
            "            USER:'user'",
            "            VARIABLE:'subcat'",
            "            VPN:'vpn'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_null",
            "          LEVEL:'level'",
            "          (null_rest_of_line",
            "            INFORMATIONAL:'informational'",
            "            VARIABLE:'wireless'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_null",
            "          LEVEL:'level'",
            "          (null_rest_of_line",
            "            INFORMATIONAL:'informational'",
            "            VARIABLE:'wireless'",
            "            VARIABLE:'subcat'",
            "            ALL:'all'",
            "            NEWLINE:'\\n')))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/aruba_misc" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'aruba_misc'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        ACTIVATE_SERVICE_WHITELIST:'activate-service-whitelist'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        ADP:'adp'",
            "        DISCOVERY:'discovery'",
            "        ENABLE:'enable'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        ADP:'adp'",
            "        VARIABLE:'igmp-join'",
            "        ENABLE:'enable'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        ADP:'adp'",
            "        VARIABLE:'igmp-vlan'",
            "        DEC:'0'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        AMON:'amon'",
            "        VARIABLE:'msg-buffer-size'",
            "        DEC:'1234'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_ap",
            "      AP:'ap'",
            "      (ap_null",
            "        AP_BLACKLIST_TIME:'ap-blacklist-time'",
            "        (null_rest_of_line",
            "          DEC:'1234'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_ap",
            "      AP:'ap'",
            "      (ap_null",
            "        ENET_LINK_PROFILE:'enet-link-profile'",
            "        (null_rest_of_line",
            "          DOUBLE_QUOTE:'\"'",
            "          DEFAULT:'default'",
            "          DOUBLE_QUOTE:'\"'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_ap",
            "      AP:'ap'",
            "      (ap_null",
            "        FLUSH_R1_ON_NEW_R0:'flush-r1-on-new-r0'",
            "        (null_rest_of_line",
            "          DISABLE:'disable'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_ap",
            "      AP:'ap'",
            "      (ap_null",
            "        GENERAL_PROFILE:'general-profile'",
            "        (null_rest_of_line",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_ap",
            "      AP:'ap'",
            "      (ap_null",
            "        LLDP:'lldp'",
            "        (null_rest_of_line",
            "          VARIABLE:'med-network-policy-profile'",
            "          DOUBLE_QUOTE:'\"'",
            "          DEFAULT:'default'",
            "          DOUBLE_QUOTE:'\"'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_ap",
            "      AP:'ap'",
            "      (ap_null",
            "        LLDP:'lldp'",
            "        (null_rest_of_line",
            "          PROFILE:'profile'",
            "          DOUBLE_QUOTE:'\"'",
            "          DEFAULT:'default'",
            "          DOUBLE_QUOTE:'\"'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_ap",
            "      AP:'ap'",
            "      (ap_null",
            "        MESH_CLUSTER_PROFILE:'mesh-cluster-profile'",
            "        (null_rest_of_line",
            "          DOUBLE_QUOTE:'\"'",
            "          DEFAULT:'default'",
            "          DOUBLE_QUOTE:'\"'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_ap",
            "      AP:'ap'",
            "      (ap_null",
            "        MESH_HT_SSID_PROFILE:'mesh-ht-ssid-profile'",
            "        (null_rest_of_line",
            "          DOUBLE_QUOTE:'\"'",
            "          DEFAULT:'default'",
            "          DOUBLE_QUOTE:'\"'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_ap",
            "      AP:'ap'",
            "      (ap_null",
            "        MESH_RADIO_PROFILE:'mesh-radio-profile'",
            "        (null_rest_of_line",
            "          DOUBLE_QUOTE:'\"'",
            "          DEFAULT:'default'",
            "          DOUBLE_QUOTE:'\"'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_ap",
            "      AP:'ap'",
            "      (ap_null",
            "        PROVISIONING_PROFILE:'provisioning-profile'",
            "        (null_rest_of_line",
            "          DOUBLE_QUOTE:'\"'",
            "          DEFAULT:'default'",
            "          DOUBLE_QUOTE:'\"'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_ap",
            "      AP:'ap'",
            "      (ap_regulatory_domain_profile",
            "        REGULATORY_DOMAIN_PROFILE:'regulatory-domain-profile'",
            "        (null_rest_of_line",
            "          DOUBLE_QUOTE:'\"'",
            "          DEFAULT:'default'",
            "          DOUBLE_QUOTE:'\"'",
            "          NEWLINE:'\\n')",
            "        (aprdp_null",
            "          COUNTRY_CODE:'country-code'",
            "          (null_rest_of_line",
            "            VARIABLE:'US'",
            "            NEWLINE:'\\n'))",
            "        (aprdp_null",
            "          VALID_11G_CHANNEL:'valid-11g-channel'",
            "          (null_rest_of_line",
            "            DEC:'1'",
            "            NEWLINE:'\\n'))",
            "        (aprdp_null",
            "          VALID_11G_CHANNEL:'valid-11g-channel'",
            "          (null_rest_of_line",
            "            DEC:'6'",
            "            NEWLINE:'\\n'))",
            "        (aprdp_null",
            "          VALID_11G_CHANNEL:'valid-11g-channel'",
            "          (null_rest_of_line",
            "            DEC:'11'",
            "            NEWLINE:'\\n'))",
            "        (aprdp_null",
            "          VALID_11A_CHANNEL:'valid-11a-channel'",
            "          (null_rest_of_line",
            "            DEC:'36'",
            "            NEWLINE:'\\n'))",
            "        (aprdp_null",
            "          VALID_11A_CHANNEL:'valid-11a-channel'",
            "          (null_rest_of_line",
            "            DEC:'40'",
            "            NEWLINE:'\\n'))",
            "        (aprdp_null",
            "          VALID_11A_CHANNEL:'valid-11a-channel'",
            "          (null_rest_of_line",
            "            DEC:'44'",
            "            NEWLINE:'\\n'))",
            "        (aprdp_null",
            "          VALID_11A_CHANNEL:'valid-11a-channel'",
            "          (null_rest_of_line",
            "            DEC:'48'",
            "            NEWLINE:'\\n'))",
            "        (aprdp_null",
            "          VALID_11A_CHANNEL:'valid-11a-channel'",
            "          (null_rest_of_line",
            "            DEC:'149'",
            "            NEWLINE:'\\n'))",
            "        (aprdp_null",
            "          VALID_11A_CHANNEL:'valid-11a-channel'",
            "          (null_rest_of_line",
            "            DEC:'153'",
            "            NEWLINE:'\\n'))",
            "        (aprdp_null",
            "          VALID_11A_CHANNEL:'valid-11a-channel'",
            "          (null_rest_of_line",
            "            DEC:'157'",
            "            NEWLINE:'\\n'))",
            "        (aprdp_null",
            "          VALID_11A_CHANNEL:'valid-11a-channel'",
            "          (null_rest_of_line",
            "            DEC:'161'",
            "            NEWLINE:'\\n'))",
            "        (aprdp_null",
            "          VALID_11A_CHANNEL:'valid-11a-channel'",
            "          (null_rest_of_line",
            "            DEC:'165'",
            "            NEWLINE:'\\n'))",
            "        (aprdp_null",
            "          VALID_11G_40MHZ_CHANNEL_PAIR:'valid-11g-40mhz-channel-pair'",
            "          (null_rest_of_line",
            "            DEC:'1'",
            "            DASH:'-'",
            "            DEC:'5'",
            "            NEWLINE:'\\n'))",
            "        (aprdp_null",
            "          VALID_11G_40MHZ_CHANNEL_PAIR:'valid-11g-40mhz-channel-pair'",
            "          (null_rest_of_line",
            "            DEC:'7'",
            "            DASH:'-'",
            "            DEC:'11'",
            "            NEWLINE:'\\n'))",
            "        (aprdp_null",
            "          VALID_11A_40MHZ_CHANNEL_PAIR:'valid-11a-40mhz-channel-pair'",
            "          (null_rest_of_line",
            "            DEC:'36'",
            "            DASH:'-'",
            "            DEC:'40'",
            "            NEWLINE:'\\n'))",
            "        (aprdp_null",
            "          VALID_11A_40MHZ_CHANNEL_PAIR:'valid-11a-40mhz-channel-pair'",
            "          (null_rest_of_line",
            "            DEC:'44'",
            "            DASH:'-'",
            "            DEC:'48'",
            "            NEWLINE:'\\n'))",
            "        (aprdp_null",
            "          VALID_11A_40MHZ_CHANNEL_PAIR:'valid-11a-40mhz-channel-pair'",
            "          (null_rest_of_line",
            "            DEC:'149'",
            "            DASH:'-'",
            "            DEC:'153'",
            "            NEWLINE:'\\n'))",
            "        (aprdp_null",
            "          VALID_11A_40MHZ_CHANNEL_PAIR:'valid-11a-40mhz-channel-pair'",
            "          (null_rest_of_line",
            "            DEC:'157'",
            "            DASH:'-'",
            "            DEC:'161'",
            "            NEWLINE:'\\n'))",
            "        (aprdp_null",
            "          VALID_11A_80MHZ_CHANNEL_GROUP:'valid-11a-80mhz-channel-group'",
            "          (null_rest_of_line",
            "            DEC:'36'",
            "            DASH:'-'",
            "            DEC:'48'",
            "            NEWLINE:'\\n'))",
            "        (aprdp_null",
            "          VALID_11A_80MHZ_CHANNEL_GROUP:'valid-11a-80mhz-channel-group'",
            "          (null_rest_of_line",
            "            DEC:'149'",
            "            DASH:'-'",
            "            DEC:'161'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_ap",
            "      AP:'ap'",
            "      (ap_null",
            "        SPECTRUM:'spectrum'",
            "        (null_rest_of_line",
            "          VARIABLE:'local-override'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_ap",
            "      AP:'ap'",
            "      (ap_system_profile",
            "        SYSTEM_PROFILE:'system-profile'",
            "        (null_rest_of_line",
            "          DOUBLE_QUOTE:'\"'",
            "          VARIABLE:'fuffuff'",
            "          DOUBLE_QUOTE:'\"'",
            "          NEWLINE:'\\n')",
            "        (apsp_null",
            "          BKUP_LMS_IP:'bkup-lms-ip'",
            "          (null_rest_of_line",
            "            IP_ADDRESS:'1.2.3.5'",
            "            NEWLINE:'\\n'))",
            "        (apsp_null",
            "          DNS_DOMAIN:'dns-domain'",
            "          (null_rest_of_line",
            "            DOUBLE_QUOTE:'\"'",
            "            IP_ADDRESS:'2.3.4.5'",
            "            DOUBLE_QUOTE:'\"'",
            "            NEWLINE:'\\n'))",
            "        (apsp_null",
            "          DNS_DOMAIN:'dns-domain'",
            "          (null_rest_of_line",
            "            DOUBLE_QUOTE:'\"'",
            "            IP_ADDRESS:'2.3.4.6'",
            "            DOUBLE_QUOTE:'\"'",
            "            NEWLINE:'\\n'))",
            "        (apsp_null",
            "          LMS_IP:'lms-ip'",
            "          (null_rest_of_line",
            "            IP_ADDRESS:'1.2.3.4'",
            "            NEWLINE:'\\n'))",
            "        (apsp_null",
            "          LMS_PREEMPTION:'lms-preemption'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_ap",
            "      AP:'ap'",
            "      (ap_null",
            "        WIRED_AP_PROFILE:'wired-ap-profile'",
            "        (null_rest_of_line",
            "          DOUBLE_QUOTE:'\"'",
            "          DEFAULT:'default'",
            "          DOUBLE_QUOTE:'\"'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_ap",
            "      AP:'ap'",
            "      (ap_null",
            "        WIRED_PORT_PROFILE:'wired-port-profile'",
            "        (null_rest_of_line",
            "          DOUBLE_QUOTE:'\"'",
            "          DEFAULT:'default'",
            "          DOUBLE_QUOTE:'\"'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        AP_CRASH_TRANSFER:'ap-crash-transfer'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_ap_group",
            "      AP_GROUP:'ap-group'",
            "      (double_quoted_string",
            "        DOUBLE_QUOTE:'\"'",
            "        DEFAULT:'default'",
            "        DOUBLE_QUOTE:'\"')",
            "      NEWLINE:'\\n'",
            "      (apg_null",
            "        AP_SYSTEM_PROFILE:'ap-system-profile'",
            "        (null_rest_of_line",
            "          DOUBLE_QUOTE:'\"'",
            "          VARIABLE:'bbbbbb'",
            "          DOUBLE_QUOTE:'\"'",
            "          NEWLINE:'\\n'))",
            "      (apg_null",
            "        DOT11A_RADIO_PROFILE:'dot11a-radio-profile'",
            "        (null_rest_of_line",
            "          DOUBLE_QUOTE:'\"'",
            "          VARIABLE:'vvvv'",
            "          DOUBLE_QUOTE:'\"'",
            "          NEWLINE:'\\n'))",
            "      (apg_null",
            "        DOT11G_RADIO_PROFILE:'dot11g-radio-profile'",
            "        (null_rest_of_line",
            "          DOUBLE_QUOTE:'\"'",
            "          VARIABLE:'vvdd'",
            "          DOUBLE_QUOTE:'\"'",
            "          NEWLINE:'\\n'))",
            "      (apg_null",
            "        IDS_PROFILE:'ids-profile'",
            "        (null_rest_of_line",
            "          DOUBLE_QUOTE:'\"'",
            "          VARIABLE:'cccccc'",
            "          DOUBLE_QUOTE:'\"'",
            "          NEWLINE:'\\n'))",
            "      (apg_null",
            "        VIRTUAL_AP:'virtual-ap'",
            "        (null_rest_of_line",
            "          DOUBLE_QUOTE:'\"'",
            "          VARIABLE:'ddddd'",
            "          DOUBLE_QUOTE:'\"'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        AP_LACP_STRIPING_IP:'ap-lacp-striping-ip'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_ap_name",
            "      AP_NAME:'ap-name'",
            "      (double_quoted_string",
            "        DOUBLE_QUOTE:'\"'",
            "        VARIABLE:'blorfoo'",
            "        DOUBLE_QUOTE:'\"')",
            "      NEWLINE:'\\n'",
            "      (apn_null",
            "        VIRTUAL_AP:'virtual-ap'",
            "        (null_rest_of_line",
            "          DOUBLE_QUOTE:'\"'",
            "          VARIABLE:'abcd'",
            "          DOUBLE_QUOTE:'\"'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        APP:'app'",
            "        VARIABLE:'lync'",
            "        VARIABLE:'traffic-control'",
            "        DOUBLE_QUOTE:'\"'",
            "        DEFAULT:'default'",
            "        DOUBLE_QUOTE:'\"'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_control_plane_security",
            "      CONTROL_PLANE_SECURITY:'control-plane-security'",
            "      NEWLINE:'\\n'",
            "      (cps_null",
            "        NO:'no'",
            "        AUTO_CERT_ALLOW_ALL:'auto-cert-allow-all'",
            "        (null_rest_of_line",
            "          NEWLINE:'\\n'))",
            "      (cps_null",
            "        AUTO_CERT_ALLOWED_ADDRS:'auto-cert-allowed-addrs'",
            "        (null_rest_of_line",
            "          IP_ADDRESS:'1.1.1.1'",
            "          IP_ADDRESS:'1.1.1.1'",
            "          NEWLINE:'\\n'))",
            "      (cps_null",
            "        AUTO_CERT_ALLOWED_ADDRS:'auto-cert-allowed-addrs'",
            "        (null_rest_of_line",
            "          IP_ADDRESS:'2.2.2.2'",
            "          IP_ADDRESS:'2.2.2.2'",
            "          NEWLINE:'\\n'))",
            "      (cps_null",
            "        AUTO_CERT_PROV:'auto-cert-prov'",
            "        (null_rest_of_line",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_controller",
            "      CONTROLLER:'controller'",
            "      iname = (interface_name",
            "        name_prefix_alpha = M_Interface_PREFIX:'config'  <== mode:M_Interface",
            "        (range",
            "          (subrange",
            "            low = DEC:'821'  <== mode:M_Interface)))",
            "      NEWLINE:'\\n'  <== mode:M_Interface))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        CONTROLLER_IP:'controller-ip'",
            "        VLAN:'vlan'",
            "        DEC:'1234'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        COUNTRY:'country'",
            "        VARIABLE:'GB'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        NO:'no'",
            "        DATABASE:'database'",
            "        VARIABLE:'synchronize'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        FILE:'file'",
            "        VARIABLE:'syncing'",
            "        PROFILE:'profile'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        NO:'no'",
            "        FIREWALL:'firewall'",
            "        VARIABLE:'attack-rate'",
            "        VARIABLE:'cp'",
            "        DEC:'32'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        FIREWALL:'firewall'",
            "        VARIABLE:'cp'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        FIREWALL:'firewall'",
            "        VARIABLE:'dpi'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        FIREWALL:'firewall'",
            "        ENABLE:'enable'",
            "        VARIABLE:'ICE-STUN'",
            "        VARIABLE:'based'",
            "        FIREWALL:'firewall'",
            "        VARIABLE:'traversal'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        FIREWALL:'firewall'",
            "        JUMBO:'jumbo'",
            "        MTU:'mtu'",
            "        DEC:'9123'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        FIREWALL:'firewall'",
            "        VARIABLE:'log-icmp-error'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        FIREWALL:'firewall'",
            "        VARIABLE:'prevent-dhcp-exhaustion'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        FIREWALL:'firewall'",
            "        VARIABLE:'prohibit-arp-spoofing'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        FIREWALL:'firewall'",
            "        VARIABLE:'prohibit-rst-replay'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        FIREWALL:'firewall'",
            "        VARIABLE:'web-cc'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        FIREWALL_VISIBILITY:'firewall-visibility'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_guest_access_email",
            "      GUEST_ACCESS_EMAIL:'guest-access-email'",
            "      NEWLINE:'\\n'",
            "      (gae_null",
            "        SMTP_SERVER:'smtp-server'",
            "        (null_rest_of_line",
            "          IP_ADDRESS:'1.2.3.4'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_ip_default_gateway",
            "      NO:'no'",
            "      IP:'ip'",
            "      DEFAULT_GATEWAY:'default-gateway'",
            "      (ipdg_null",
            "        IMPORT:'import'",
            "        (null_rest_of_line",
            "          VARIABLE:'cell'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_ip_default_gateway",
            "      NO:'no'",
            "      IP:'ip'",
            "      DEFAULT_GATEWAY:'default-gateway'",
            "      (ipdg_null",
            "        IMPORT:'import'",
            "        (null_rest_of_line",
            "          VARIABLE:'pppoe'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        NO:'no'",
            "        KERNEL:'kernel'",
            "        VARIABLE:'coredump'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        LOGINSESSION:'loginsession'",
            "        TIMEOUT:'timeout'",
            "        DEC:'60'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_ids",
            "      IDS:'ids'",
            "      (ids_ap_classification_rule",
            "        AP_CLASSIFICATION_RULE:'ap-classification-rule'",
            "        (double_quoted_string",
            "          DOUBLE_QUOTE:'\"'",
            "          VARIABLE:'abcd'",
            "          DOUBLE_QUOTE:'\"')",
            "        NEWLINE:'\\n'",
            "        (ids_ap_classification_rule_null",
            "          CONF_LEVEL_INCR:'conf-level-incr'",
            "          (null_rest_of_line",
            "            DEC:'78'",
            "            NEWLINE:'\\n'))",
            "        (ids_ap_classification_rule_null",
            "          DISCOVERED_AP_CNT:'discovered-ap-cnt'",
            "          (null_rest_of_line",
            "            DEC:'56'",
            "            NEWLINE:'\\n'))",
            "        (ids_ap_classification_rule_null",
            "          SSID:'ssid'",
            "          (null_rest_of_line",
            "            DOUBLE_QUOTE:'\"'",
            "            VARIABLE:'ABCDEFG'",
            "            DOUBLE_QUOTE:'\"'",
            "            NEWLINE:'\\n'))",
            "        (ids_ap_classification_rule_null",
            "          SSID:'ssid'",
            "          (null_rest_of_line",
            "            DOUBLE_QUOTE:'\"'",
            "            VARIABLE:'HIJKLMN'",
            "            DOUBLE_QUOTE:'\"'",
            "            NEWLINE:'\\n'))",
            "        (ids_ap_classification_rule_null",
            "          SNR_MAX:'snr-max'",
            "          (null_rest_of_line",
            "            DEC:'34'",
            "            NEWLINE:'\\n'))",
            "        (ids_ap_classification_rule_null",
            "          SNR_MIN:'snr-min'",
            "          (null_rest_of_line",
            "            DEC:'12'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_ids",
            "      IDS:'ids'",
            "      (ids_ap_rule_matching",
            "        AP_RULE_MATCHING:'ap-rule-matching'",
            "        NEWLINE:'\\n'",
            "        (ids_ap_rule_matching_null",
            "          RULE_NAME:'rule-name'",
            "          (null_rest_of_line",
            "            DOUBLE_QUOTE:'\"'",
            "            VARIABLE:'blorp'",
            "            DOUBLE_QUOTE:'\"'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_ids",
            "      IDS:'ids'",
            "      (ids_dos_profile",
            "        DOS_PROFILE:'dos-profile'",
            "        (double_quoted_string",
            "          DOUBLE_QUOTE:'\"'",
            "          DEFAULT:'default'",
            "          DOUBLE_QUOTE:'\"')",
            "        NEWLINE:'\\n'",
            "        (ids_dos_profile_null",
            "          DETECT_AP_FLOOD:'detect-ap-flood'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n'))",
            "        (ids_dos_profile_null",
            "          DETECT_CHOPCHOP_ATTACK:'detect-chopchop-attack'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n'))",
            "        (ids_dos_profile_null",
            "          DETECT_CLIENT_FLOOD:'detect-client-flood'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n'))",
            "        (ids_dos_profile_null",
            "          DETECT_CTS_RATE_ANOMALY:'detect-cts-rate-anomaly'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n'))",
            "        (ids_dos_profile_null",
            "          DETECT_EAP_RATE_ANOMALY:'detect-eap-rate-anomaly'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n'))",
            "        (ids_dos_profile_null",
            "          DETECT_HT_40MHZ_INTOLERANCE:'detect-ht-40mhz-intolerance'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n'))",
            "        (ids_dos_profile_null",
            "          DETECT_INVALID_ADDRESS_COMBINATION:'detect-invalid-address-combination'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n'))",
            "        (ids_dos_profile_null",
            "          DETECT_MALFORMED_ASSOCIATION_REQUEST:'detect-malformed-association-request'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n'))",
            "        (ids_dos_profile_null",
            "          DETECT_MALFORMED_AUTH_FRAME:'detect-malformed-auth-frame'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n'))",
            "        (ids_dos_profile_null",
            "          DETECT_MALFORMED_HTIE:'detect-malformed-htie'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n'))",
            "        (ids_dos_profile_null",
            "          DETECT_MALFORMED_LARGE_DURATION:'detect-malformed-large-duration'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n'))",
            "        (ids_dos_profile_null",
            "          DETECT_OVERFLOW_EAPOL_KEY:'detect-overflow-eapol-key'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n'))",
            "        (ids_dos_profile_null",
            "          DETECT_OVERFLOW_IE:'detect-overflow-ie'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n'))",
            "        (ids_dos_profile_null",
            "          DETECT_RATE_ANOMALIES:'detect-rate-anomalies'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n'))",
            "        (ids_dos_profile_null",
            "          DETECT_RTS_RATE_ANOMALY:'detect-rts-rate-anomaly'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n'))",
            "        (ids_dos_profile_null",
            "          DETECT_TKIP_REPLAY_ATTACK:'detect-tkip-replay-attack'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_ids",
            "      IDS:'ids'",
            "      (ids_general_profile",
            "        GENERAL_PROFILE:'general-profile'",
            "        (double_quoted_string",
            "          DOUBLE_QUOTE:'\"'",
            "          DEFAULT:'default'",
            "          DOUBLE_QUOTE:'\"')",
            "        NEWLINE:'\\n'",
            "        (ids_general_profile_null",
            "          WIRED_CONTAINMENT:'wired-containment'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n'))",
            "        (ids_general_profile_null",
            "          WIRELESS_CONTAINMENT:'wireless-containment'",
            "          (null_rest_of_line",
            "            NONE:'none'",
            "            NEWLINE:'\\n'))",
            "        (ids_general_profile_null",
            "          WIRELESS_CONTAINMENT:'wireless-containment'",
            "          (null_rest_of_line",
            "            VARIABLE:'tarpit-non-valid-sta'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_ids",
            "      IDS:'ids'",
            "      (ids_impersonation_profile",
            "        IMPERSONATION_PROFILE:'impersonation-profile'",
            "        (double_quoted_string",
            "          DOUBLE_QUOTE:'\"'",
            "          DEFAULT:'default'",
            "          DOUBLE_QUOTE:'\"')",
            "        NEWLINE:'\\n'",
            "        (ids_impersonation_profile_null",
            "          DETECT_AP_IMPERSONATION:'detect-ap-impersonation'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n'))",
            "        (ids_impersonation_profile_null",
            "          DETECT_BEACON_WRONG_CHANNEL:'detect-beacon-wrong-channel'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n'))",
            "        (ids_impersonation_profile_null",
            "          DETECT_HOTSPOTTER:'detect-hotspotter'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_ids",
            "      IDS:'ids'",
            "      (ids_null",
            "        MANAGEMENT_PROFILE:'management-profile'",
            "        (null_rest_of_line",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_ids",
            "      IDS:'ids'",
            "      (ids_null",
            "        RATE_THRESHOLDS_PROFILE:'rate-thresholds-profile'",
            "        (null_rest_of_line",
            "          DOUBLE_QUOTE:'\"'",
            "          DEFAULT:'default'",
            "          DOUBLE_QUOTE:'\"'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_ids",
            "      IDS:'ids'",
            "      (ids_profile",
            "        PROFILE:'profile'",
            "        (double_quoted_string",
            "          DOUBLE_QUOTE:'\"'",
            "          VARIABLE:'florfo'",
            "          DOUBLE_QUOTE:'\"')",
            "        NEWLINE:'\\n'",
            "        (ids_profile_null",
            "          DOS_PROFILE:'dos-profile'",
            "          (null_rest_of_line",
            "            DOUBLE_QUOTE:'\"'",
            "            VARIABLE:'fwip'",
            "            DOUBLE_QUOTE:'\"'",
            "            NEWLINE:'\\n'))",
            "        (ids_profile_null",
            "          GENERAL_PROFILE:'general-profile'",
            "          (null_rest_of_line",
            "            DOUBLE_QUOTE:'\"'",
            "            VARIABLE:'fleep'",
            "            DOUBLE_QUOTE:'\"'",
            "            NEWLINE:'\\n'))",
            "        (ids_profile_null",
            "          SIGNATURE_MATCHING_PROFILE:'signature-matching-profile'",
            "          (null_rest_of_line",
            "            DOUBLE_QUOTE:'\"'",
            "            VARIABLE:'blorp'",
            "            DOUBLE_QUOTE:'\"'",
            "            NEWLINE:'\\n'))",
            "        (ids_profile_null",
            "          IMPERSONATION_PROFILE:'impersonation-profile'",
            "          (null_rest_of_line",
            "            DOUBLE_QUOTE:'\"'",
            "            VARIABLE:'thwank'",
            "            DOUBLE_QUOTE:'\"'",
            "            NEWLINE:'\\n'))",
            "        (ids_profile_null",
            "          UNAUTHORIZED_DEVICE_PROFILE:'unauthorized-device-profile'",
            "          (null_rest_of_line",
            "            DOUBLE_QUOTE:'\"'",
            "            VARIABLE:'flarg'",
            "            DOUBLE_QUOTE:'\"'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_ids",
            "      IDS:'ids'",
            "      (ids_signature_matching_profile",
            "        SIGNATURE_MATCHING_PROFILE:'signature-matching-profile'",
            "        (double_quoted_string",
            "          DOUBLE_QUOTE:'\"'",
            "          DEFAULT:'default'",
            "          DOUBLE_QUOTE:'\"')",
            "        NEWLINE:'\\n'",
            "        (ids_signature_matching_profile_null",
            "          SIGNATURE:'signature'",
            "          (null_rest_of_line",
            "            DOUBLE_QUOTE:'\"'",
            "            VARIABLE:'fleef'",
            "            DOUBLE_QUOTE:'\"'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_ids",
            "      IDS:'ids'",
            "      (ids_null",
            "        SIGNATURE_PROFILE:'signature-profile'",
            "        (null_rest_of_line",
            "          DOUBLE_QUOTE:'\"'",
            "          DEFAULT:'default'",
            "          DOUBLE_QUOTE:'\"'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_ids",
            "      IDS:'ids'",
            "      (ids_unauthorized_device_profile",
            "        UNAUTHORIZED_DEVICE_PROFILE:'unauthorized-device-profile'",
            "        (double_quoted_string",
            "          DOUBLE_QUOTE:'\"'",
            "          VARIABLE:'blah'",
            "          DOUBLE_QUOTE:'\"')",
            "        NEWLINE:'\\n'",
            "        (ids_unauthorized_device_profile_null",
            "          DETECT_ADHOC_NETWORK:'detect-adhoc-network'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n'))",
            "        (ids_unauthorized_device_profile_null",
            "          DETECT_BAD_WEP:'detect-bad-wep'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n'))",
            "        (ids_unauthorized_device_profile_null",
            "          DETECT_HT_GREENFIELD:'detect-ht-greenfield'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n'))",
            "        (ids_unauthorized_device_profile_null",
            "          DETECT_INVALID_MAC_OUI:'detect-invalid-mac-oui'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n'))",
            "        (ids_unauthorized_device_profile_null",
            "          DETECT_MISCONFIGURED_AP:'detect-misconfigured-ap'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n'))",
            "        (ids_unauthorized_device_profile_null",
            "          DETECT_VALID_SSID_MISUSE:'detect-valid-ssid-misuse'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n'))",
            "        (ids_unauthorized_device_profile_null",
            "          DETECT_WIRELESS_BRIDGE:'detect-wireless-bridge'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n'))",
            "        (ids_unauthorized_device_profile_null",
            "          DETECT_WIRELESS_HOSTED_NETWORK:'detect-wireless-hosted-network'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n'))",
            "        (ids_unauthorized_device_profile_null",
            "          PRIVACY:'privacy'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n'))",
            "        (ids_unauthorized_device_profile_null",
            "          PROTECT_SSID:'protect-ssid'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n'))",
            "        (ids_unauthorized_device_profile_null",
            "          PROTECT_VALID_STA:'protect-valid-sta'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n'))",
            "        (ids_unauthorized_device_profile_null",
            "          REQUIRE_WPA:'require-wpa'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n'))",
            "        (ids_unauthorized_device_profile_null",
            "          SUSPECT_ROGUE_CONF_LEVEL:'suspect-rogue-conf-level'",
            "          (null_rest_of_line",
            "            DEC:'80'",
            "            NEWLINE:'\\n'))",
            "        (ids_unauthorized_device_profile_null",
            "          VALID_AND_PROTECTED_SSID:'valid-and-protected-ssid'",
            "          (null_rest_of_line",
            "            DOUBLE_QUOTE:'\"'",
            "            VARIABLE:'foofoo'",
            "            DOUBLE_QUOTE:'\"'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_ids",
            "      IDS:'ids'",
            "      (ids_wms_general_profile",
            "        WMS_GENERAL_PROFILE:'wms-general-profile'",
            "        NEWLINE:'\\n'",
            "        (ids_wms_general_profile_null",
            "          COLLECT_STATS:'collect-stats'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_ids",
            "      IDS:'ids'",
            "      (ids_null",
            "        WMS_LOCAL_SYSTEM_PROFILE:'wms-local-system-profile'",
            "        (null_rest_of_line",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_ifmap",
            "      IFMAP:'ifmap'",
            "      (null_rest_of_line",
            "        VARIABLE:'cppm'",
            "        NEWLINE:'\\n')",
            "      (ifmap_null",
            "        ENABLE:'enable'",
            "        (null_rest_of_line",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        IP:'ip'",
            "        DOMAIN_LOOKUP:'domain-lookup'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        IP:'ip'",
            "        IGMP:'igmp'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        IP:'ip'",
            "        MOBILE:'mobile'",
            "        DOMAIN:'domain'",
            "        DEFAULT:'default'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        IP:'ip'",
            "        NEXTHOP_LIST:'nexthop-list'",
            "        VARIABLE:'abcdefg'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_ip_probe",
            "      IP:'ip'",
            "      PROBE:'probe'",
            "      (null_rest_of_line",
            "        DEFAULT:'default'",
            "        NEWLINE:'\\n')",
            "      (ip_probe_null",
            "        BURST_SIZE:'burst-size'",
            "        (null_rest_of_line",
            "          DEC:'1'",
            "          NEWLINE:'\\n'))",
            "      (ip_probe_null",
            "        FREQUENCY:'frequency'",
            "        (null_rest_of_line",
            "          DEC:'2'",
            "          NEWLINE:'\\n'))",
            "      (ip_probe_null",
            "        MODE:'mode'",
            "        (null_rest_of_line",
            "          VARIABLE:'Ping'",
            "          NEWLINE:'\\n'))",
            "      (ip_probe_null",
            "        RETRIES:'retries'",
            "        (null_rest_of_line",
            "          DEC:'3'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        IP:'ip'",
            "        RADIUS:'radius'",
            "        VARIABLE:'nas-ip'",
            "        IP_ADDRESS:'1.2.3.4'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        IP_FLOW_EXPORT_PROFILE:'ip-flow-export-profile'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        IPV6:'ipv6'",
            "        FIREWALL:'firewall'",
            "        VARIABLE:'ext-hdr-parse-len'",
            "        DEC:'100'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        IPV6:'ipv6'",
            "        MLD:'mld'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        LCD_MENU:'lcd-menu'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_license",
            "      LICENSE:'license'",
            "      (null_rest_of_line",
            "        PROFILE:'profile'",
            "        NEWLINE:'\\n')",
            "      (license_null",
            "        CENTRALIZED_LICENSING_ENABLE:'centralized-licensing-enable'",
            "        (null_rest_of_line",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        LOCALIP:'localip'",
            "        IP_ADDRESS:'0.0.0.0'",
            "        IPSEC:'ipsec'",
            "        VARIABLE:'0123456789abcdef0123456789abcdef0123456789abcdef'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_block",
            "        MASTERIP:'masterip'",
            "        (null_rest_of_line",
            "          IP_ADDRESS:'1.2.3.4'",
            "          IPSEC:'ipsec'",
            "          ASTERISK:'*'",
            "          ASTERISK:'*'",
            "          ASTERISK:'*'",
            "          ASTERISK:'*'",
            "          ASTERISK:'*'",
            "          ASTERISK:'*'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        MGMT_SERVER:'mgmt-server'",
            "        TYPE:'type'",
            "        VARIABLE:'amp'",
            "        VARIABLE:'primary-server'",
            "        IP_ADDRESS:'1.2.3.4'",
            "        PROFILE:'profile'",
            "        VARIABLE:'default-amp'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        MGMT_USER:'mgmt-user'",
            "        ADMIN:'admin'",
            "        ROOT:'root'",
            "        VARIABLE:'0123456789abcdef0123456789abcdef0123456789abcdef01'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        PACKET_CAPTURE_DEFAULTS:'packet-capture-defaults'",
            "        VARIABLE:'datapath'",
            "        VARIABLE:'wifi-client'",
            "        DEC:'00'",
            "        COLON:':'",
            "        DEC:'11'",
            "        COLON:':'",
            "        DEC:'22'",
            "        COLON:':'",
            "        DEC:'33'",
            "        COLON:':'",
            "        DEC:'44'",
            "        COLON:':'",
            "        DEC:'55'",
            "        ALL:'all'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        PACKET_CAPTURE_DEFAULTS:'packet-capture-defaults'",
            "        DESTINATION:'destination'",
            "        VARIABLE:'local-filesystem'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        PAN:'pan'",
            "        VARIABLE:'active-profile'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        PAN:'pan'",
            "        PROFILE:'profile'",
            "        DOUBLE_QUOTE:'\"'",
            "        DEFAULT:'default'",
            "        DOUBLE_QUOTE:'\"'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        PAN_OPTIONS:'pan-options'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        PROCESS:'process'",
            "        MONITOR:'monitor'",
            "        LOG:'log'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_rf",
            "      RF:'rf'",
            "      (rf_null",
            "        AM_SCAN_PROFILE:'am-scan-profile'",
            "        (null_rest_of_line",
            "          DOUBLE_QUOTE:'\"'",
            "          DEFAULT:'default'",
            "          DOUBLE_QUOTE:'\"'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_rf",
            "      RF:'rf'",
            "      (rf_arm_profile",
            "        ARM_PROFILE:'arm-profile'",
            "        (double_quoted_string",
            "          DOUBLE_QUOTE:'\"'",
            "          VARIABLE:'blah'",
            "          DOUBLE_QUOTE:'\"')",
            "        NEWLINE:'\\n'",
            "        (rf_arm_profile_null",
            "          ASSIGNMENT:'assignment'",
            "          (null_rest_of_line",
            "            VARIABLE:'maintain'",
            "            NEWLINE:'\\n'))",
            "        (rf_arm_profile_null",
            "          BACKOFF_TIME:'backoff-time'",
            "          (null_rest_of_line",
            "            DEC:'1234'",
            "            NEWLINE:'\\n'))",
            "        (rf_arm_profile_null",
            "          ERROR_RATE_THRESHOLD:'error-rate-threshold'",
            "          (null_rest_of_line",
            "            DEC:'44'",
            "            NEWLINE:'\\n'))",
            "        (rf_arm_profile_null",
            "          FREE_CHANNEL_INDEX:'free-channel-index'",
            "          (null_rest_of_line",
            "            DEC:'123'",
            "            NEWLINE:'\\n'))",
            "        (rf_arm_profile_null",
            "          IDEAL_COVERAGE_INDEX:'ideal-coverage-index'",
            "          (null_rest_of_line",
            "            DEC:'5'",
            "            NEWLINE:'\\n'))",
            "        (rf_arm_profile_null",
            "          MAX_TX_POWER:'max-tx-power'",
            "          (null_rest_of_line",
            "            DEC:'67'",
            "            NEWLINE:'\\n'))",
            "        (rf_arm_profile_null",
            "          MIN_TX_POWER:'min-tx-power'",
            "          (null_rest_of_line",
            "            DEC:'65'",
            "            NEWLINE:'\\n'))",
            "        (rf_arm_profile_null",
            "          ROGUE_AP_AWARE:'rogue-ap-aware'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n'))",
            "        (rf_arm_profile_null",
            "          NO:'no'",
            "          SCANNING:'scanning'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_rf",
            "      RF:'rf'",
            "      (rf_null",
            "        ARM_RF_DOMAIN_PROFILE:'arm-rf-domain-profile'",
            "        (null_rest_of_line",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_rf",
            "      RF:'rf'",
            "      (rf_dot11a_radio_profile",
            "        DOT11A_RADIO_PROFILE:'dot11a-radio-profile'",
            "        (double_quoted_string",
            "          DOUBLE_QUOTE:'\"'",
            "          DEFAULT:'default'",
            "          DOUBLE_QUOTE:'\"')",
            "        NEWLINE:'\\n'",
            "        (rf_dot11a_radio_profile_null",
            "          ARM_PROFILE:'arm-profile'",
            "          (null_rest_of_line",
            "            DOUBLE_QUOTE:'\"'",
            "            VARIABLE:'blah'",
            "            DOUBLE_QUOTE:'\"'",
            "            NEWLINE:'\\n'))",
            "        (rf_dot11a_radio_profile_null",
            "          MODE:'mode'",
            "          (null_rest_of_line",
            "            VARIABLE:'am-mode'",
            "            NEWLINE:'\\n'))",
            "        (rf_dot11a_radio_profile_null",
            "          SPECTRUM_LOAD_BALANCING:'spectrum-load-balancing'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n'))",
            "        (rf_dot11a_radio_profile_null",
            "          SPECTRUM_MONITORING:'spectrum-monitoring'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_rf",
            "      RF:'rf'",
            "      (rf_dot11g_radio_profile",
            "        DOT11G_RADIO_PROFILE:'dot11g-radio-profile'",
            "        (double_quoted_string",
            "          DOUBLE_QUOTE:'\"'",
            "          DEFAULT:'default'",
            "          DOUBLE_QUOTE:'\"')",
            "        NEWLINE:'\\n'",
            "        (rf_dot11g_radio_profile_null",
            "          ARM_PROFILE:'arm-profile'",
            "          (null_rest_of_line",
            "            DOUBLE_QUOTE:'\"'",
            "            VARIABLE:'bloh'",
            "            DOUBLE_QUOTE:'\"'",
            "            NEWLINE:'\\n'))",
            "        (rf_dot11g_radio_profile_null",
            "          MODE:'mode'",
            "          (null_rest_of_line",
            "            VARIABLE:'am-mode'",
            "            NEWLINE:'\\n'))",
            "        (rf_dot11g_radio_profile_null",
            "          SPECTRUM_LOAD_BALANCING:'spectrum-load-balancing'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n'))",
            "        (rf_dot11g_radio_profile_null",
            "          SPECTRUM_MONITORING:'spectrum-monitoring'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_rf",
            "      RF:'rf'",
            "      (rf_null",
            "        EVENT_THRESHOLDS_PROFILE:'event-thresholds-profile'",
            "        (null_rest_of_line",
            "          DOUBLE_QUOTE:'\"'",
            "          DEFAULT:'default'",
            "          DOUBLE_QUOTE:'\"'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_rf",
            "      RF:'rf'",
            "      (rf_null",
            "        OPTIMIZATION_PROFILE:'optimization-profile'",
            "        (null_rest_of_line",
            "          DOUBLE_QUOTE:'\"'",
            "          DEFAULT:'default'",
            "          DOUBLE_QUOTE:'\"'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        NO:'no'",
            "        SSH:'ssh'",
            "        MGMT_AUTH:'mgmt-auth'",
            "        PUBLIC_KEY:'public-key'",
            "        NEWLINE:'\\n'  <== mode:M_SshKey)))",
            "  (stanza",
            "    (s_ssh",
            "      SSH:'ssh'",
            "      (ssh_null",
            "        MGMT_AUTH:'mgmt-auth'",
            "        (null_rest_of_line",
            "          VARIABLE:'username/password'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        SYSCONTACT:'syscontact'",
            "        DOUBLE_QUOTE:'\"'",
            "        VARIABLE:'def'",
            "        DOUBLE_QUOTE:'\"'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        SYSLOCATION:'syslocation'",
            "        DOUBLE_QUOTE:'\"'",
            "        VARIABLE:'abc'",
            "        DOUBLE_QUOTE:'\"'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        TUNNELED_NODE_ADDRESS:'tunneled-node-address'",
            "        IP_ADDRESS:'0.0.0.0'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        UPGRADE_PROFILE:'upgrade-profile'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        UPLINK:'uplink'",
            "        DISABLE:'disable'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        NO:'no'",
            "        UPLINK:'uplink'",
            "        VARIABLE:'wired'",
            "        VLAN:'vlan'",
            "        DEC:'1'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        VALID_NETWORK_OUI_PROFILE:'valid-network-oui-profile'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        VPDN:'vpdn'",
            "        GROUP:'group'",
            "        L2TP:'l2tp'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_web_server",
            "      WEB_SERVER:'web-server'",
            "      PROFILE:'profile'",
            "      NEWLINE:'\\n'",
            "      (web_server_null",
            "        CAPTIVE_PORTAL_CERT:'captive-portal-cert'",
            "        (null_rest_of_line",
            "          DOUBLE_QUOTE:'\"'",
            "          VARIABLE:'blah.example.com'",
            "          DOUBLE_QUOTE:'\"'",
            "          NEWLINE:'\\n'))",
            "      (web_server_null",
            "        IDP_CERT:'idp-cert'",
            "        (null_rest_of_line",
            "          DOUBLE_QUOTE:'\"'",
            "          VARIABLE:'blah.example.com'",
            "          DOUBLE_QUOTE:'\"'",
            "          NEWLINE:'\\n'))",
            "      (web_server_null",
            "        SESSION_TIMEOUT:'session-timeout'",
            "        (null_rest_of_line",
            "          DEC:'1234'",
            "          NEWLINE:'\\n'))",
            "      (web_server_null",
            "        SWITCH_CERT:'switch-cert'",
            "        (null_rest_of_line",
            "          DOUBLE_QUOTE:'\"'",
            "          VARIABLE:'blah'",
            "          DOUBLE_QUOTE:'\"'",
            "          NEWLINE:'\\n'))",
            "      (web_server_null",
            "        WEB_HTTPS_PORT_443:'web-https-port-443'",
            "        (null_rest_of_line",
            "          NEWLINE:'\\n'))",
            "      (web_server_null",
            "        WEB_MAX_CLIENTS:'web-max-clients'",
            "        (null_rest_of_line",
            "          DEC:'50'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_wlan",
            "      WLAN:'wlan'",
            "      (wlan_null",
            "        BCN_RPT_REQ_PROFILE:'bcn-rpt-req-profile'",
            "        (null_rest_of_line",
            "          DOUBLE_QUOTE:'\"'",
            "          DEFAULT:'default'",
            "          DOUBLE_QUOTE:'\"'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_wlan",
            "      WLAN:'wlan'",
            "      (wlan_null",
            "        DOT11K_PROFILE:'dot11k-profile'",
            "        (null_rest_of_line",
            "          DOUBLE_QUOTE:'\"'",
            "          DEFAULT:'default'",
            "          DOUBLE_QUOTE:'\"'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_wlan",
            "      WLAN:'wlan'",
            "      (wlan_null",
            "        DOT11R_PROFILE:'dot11r-profile'",
            "        (null_rest_of_line",
            "          DOUBLE_QUOTE:'\"'",
            "          DEFAULT:'default'",
            "          DOUBLE_QUOTE:'\"'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_wlan",
            "      WLAN:'wlan'",
            "      (wlan_null",
            "        EDCA_PARAMETERS_PROFILE:'edca-parameters-profile'",
            "        (null_rest_of_line",
            "          AP:'ap'",
            "          DOUBLE_QUOTE:'\"'",
            "          DEFAULT:'default'",
            "          DOUBLE_QUOTE:'\"'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_wlan",
            "      WLAN:'wlan'",
            "      (wlan_null",
            "        EDCA_PARAMETERS_PROFILE:'edca-parameters-profile'",
            "        (null_rest_of_line",
            "          VARIABLE:'station'",
            "          DOUBLE_QUOTE:'\"'",
            "          DEFAULT:'default'",
            "          DOUBLE_QUOTE:'\"'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_wlan",
            "      WLAN:'wlan'",
            "      (wlan_null",
            "        HANDOVER_TRIGGER_PROFILE:'handover-trigger-profile'",
            "        (null_rest_of_line",
            "          DOUBLE_QUOTE:'\"'",
            "          DEFAULT:'default'",
            "          DOUBLE_QUOTE:'\"'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_wlan",
            "      WLAN:'wlan'",
            "      (wlan_null",
            "        HOTSPOT:'hotspot'",
            "        (null_rest_of_line",
            "          VARIABLE:'advertisement-profile'",
            "          DOUBLE_QUOTE:'\"'",
            "          DEFAULT:'default'",
            "          DOUBLE_QUOTE:'\"'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_wlan",
            "      WLAN:'wlan'",
            "      (wlan_null",
            "        HOTSPOT:'hotspot'",
            "        (null_rest_of_line",
            "          VARIABLE:'anqp-3gpp-nwk-profile'",
            "          DOUBLE_QUOTE:'\"'",
            "          DEFAULT:'default'",
            "          DOUBLE_QUOTE:'\"'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_wlan",
            "      WLAN:'wlan'",
            "      (wlan_null",
            "        HOTSPOT:'hotspot'",
            "        (null_rest_of_line",
            "          VARIABLE:'anqp-domain-name-profile'",
            "          DOUBLE_QUOTE:'\"'",
            "          DEFAULT:'default'",
            "          DOUBLE_QUOTE:'\"'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_wlan",
            "      WLAN:'wlan'",
            "      (wlan_null",
            "        HOTSPOT:'hotspot'",
            "        (null_rest_of_line",
            "          VARIABLE:'anqp-ip-addr-avail-profile'",
            "          DOUBLE_QUOTE:'\"'",
            "          DEFAULT:'default'",
            "          DOUBLE_QUOTE:'\"'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_wlan",
            "      WLAN:'wlan'",
            "      (wlan_null",
            "        HOTSPOT:'hotspot'",
            "        (null_rest_of_line",
            "          VARIABLE:'anqp-nai-realm-profile'",
            "          DOUBLE_QUOTE:'\"'",
            "          DEFAULT:'default'",
            "          DOUBLE_QUOTE:'\"'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_wlan",
            "      WLAN:'wlan'",
            "      (wlan_null",
            "        HOTSPOT:'hotspot'",
            "        (null_rest_of_line",
            "          VARIABLE:'anqp-nwk-auth-profile'",
            "          DOUBLE_QUOTE:'\"'",
            "          DEFAULT:'default'",
            "          DOUBLE_QUOTE:'\"'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_wlan",
            "      WLAN:'wlan'",
            "      (wlan_null",
            "        HOTSPOT:'hotspot'",
            "        (null_rest_of_line",
            "          VARIABLE:'anqp-roam-cons-profile'",
            "          DOUBLE_QUOTE:'\"'",
            "          DEFAULT:'default'",
            "          DOUBLE_QUOTE:'\"'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_wlan",
            "      WLAN:'wlan'",
            "      (wlan_null",
            "        HOTSPOT:'hotspot'",
            "        (null_rest_of_line",
            "          VARIABLE:'anqp-venue-name-profile'",
            "          DOUBLE_QUOTE:'\"'",
            "          DEFAULT:'default'",
            "          DOUBLE_QUOTE:'\"'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_wlan",
            "      WLAN:'wlan'",
            "      (wlan_null",
            "        HOTSPOT:'hotspot'",
            "        (null_rest_of_line",
            "          VARIABLE:'h2qp-conn-capability-profile'",
            "          DOUBLE_QUOTE:'\"'",
            "          DEFAULT:'default'",
            "          DOUBLE_QUOTE:'\"'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_wlan",
            "      WLAN:'wlan'",
            "      (wlan_null",
            "        HOTSPOT:'hotspot'",
            "        (null_rest_of_line",
            "          VARIABLE:'h2qp-op-cl-profile'",
            "          DOUBLE_QUOTE:'\"'",
            "          DEFAULT:'default'",
            "          DOUBLE_QUOTE:'\"'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_wlan",
            "      WLAN:'wlan'",
            "      (wlan_null",
            "        HOTSPOT:'hotspot'",
            "        (null_rest_of_line",
            "          VARIABLE:'h2qp-operator-friendly-name-profile'",
            "          DOUBLE_QUOTE:'\"'",
            "          DEFAULT:'default'",
            "          DOUBLE_QUOTE:'\"'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_wlan",
            "      WLAN:'wlan'",
            "      (wlan_null",
            "        HOTSPOT:'hotspot'",
            "        (null_rest_of_line",
            "          VARIABLE:'h2qp-wan-metrics-profile'",
            "          DOUBLE_QUOTE:'\"'",
            "          DEFAULT:'default'",
            "          DOUBLE_QUOTE:'\"'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_wlan",
            "      WLAN:'wlan'",
            "      (wlan_null",
            "        HOTSPOT:'hotspot'",
            "        (null_rest_of_line",
            "          VARIABLE:'hs2-profile'",
            "          DOUBLE_QUOTE:'\"'",
            "          DEFAULT:'default'",
            "          DOUBLE_QUOTE:'\"'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_wlan",
            "      WLAN:'wlan'",
            "      (wlan_null",
            "        HT_SSID_PROFILE:'ht-ssid-profile'",
            "        (null_rest_of_line",
            "          DOUBLE_QUOTE:'\"'",
            "          DEFAULT:'default'",
            "          DOUBLE_QUOTE:'\"'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_wlan",
            "      WLAN:'wlan'",
            "      (wlan_null",
            "        RRM_IE_PROFILE:'rrm-ie-profile'",
            "        (null_rest_of_line",
            "          DOUBLE_QUOTE:'\"'",
            "          DEFAULT:'default'",
            "          DOUBLE_QUOTE:'\"'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_wlan",
            "      WLAN:'wlan'",
            "      (wlan_ssid_profile",
            "        SSID_PROFILE:'ssid-profile'",
            "        (double_quoted_string",
            "          DOUBLE_QUOTE:'\"'",
            "          VARIABLE:'abcd'",
            "          DOUBLE_QUOTE:'\"')",
            "        NEWLINE:'\\n'",
            "        (wlan_ssid_profile_null",
            "          NO:'no'",
            "          EAPOL_RATE_OPT:'eapol-rate-opt'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n'))",
            "        (wlan_ssid_profile_null",
            "          ESSID:'essid'",
            "          (null_rest_of_line",
            "            DOUBLE_QUOTE:'\"'",
            "            VARIABLE:'bbbb'",
            "            DOUBLE_QUOTE:'\"'",
            "            NEWLINE:'\\n'))",
            "        (wlan_ssid_profile_null",
            "          HT_SSID_PROFILE:'ht-ssid-profile'",
            "          (null_rest_of_line",
            "            DOUBLE_QUOTE:'\"'",
            "            VARIABLE:'fafafafa'",
            "            DOUBLE_QUOTE:'\"'",
            "            NEWLINE:'\\n'))",
            "        (wlan_ssid_profile_null",
            "          MAX_CLIENTS:'max-clients'",
            "          (null_rest_of_line",
            "            DEC:'123'",
            "            NEWLINE:'\\n'))",
            "        (wlan_ssid_profile_null",
            "          MCAST_RATE_OPT:'mcast-rate-opt'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n'))",
            "        (wlan_ssid_profile_null",
            "          OPMODE:'opmode'",
            "          (null_rest_of_line",
            "            VARIABLE:'wpa2-aes'",
            "            NEWLINE:'\\n'))",
            "        (wlan_ssid_profile_null",
            "          NO:'no'",
            "          SSID_ENABLE:'ssid-enable'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n'))",
            "        (wlan_ssid_profile_null",
            "          WMM:'wmm'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_wlan",
            "      WLAN:'wlan'",
            "      (wlan_null",
            "        TSM_REQ_PROFILE:'tsm-req-profile'",
            "        (null_rest_of_line",
            "          DOUBLE_QUOTE:'\"'",
            "          DEFAULT:'default'",
            "          DOUBLE_QUOTE:'\"'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_wlan",
            "      WLAN:'wlan'",
            "      (wlan_virtual_ap",
            "        VIRTUAL_AP:'virtual-ap'",
            "        (double_quoted_string",
            "          DOUBLE_QUOTE:'\"'",
            "          VARIABLE:'bbbb'",
            "          DOUBLE_QUOTE:'\"')",
            "        NEWLINE:'\\n'",
            "        (wlan_virtual_ap_null",
            "          AAA_PROFILE:'aaa-profile'",
            "          (null_rest_of_line",
            "            DOUBLE_QUOTE:'\"'",
            "            VARIABLE:'eeeeeeeeeee'",
            "            DOUBLE_QUOTE:'\"'",
            "            NEWLINE:'\\n'))",
            "        (wlan_virtual_ap_null",
            "          AUTH_FAILURE_BLACKLIST_TIME:'auth-failure-blacklist-time'",
            "          (null_rest_of_line",
            "            DEC:'0'",
            "            NEWLINE:'\\n'))",
            "        (wlan_virtual_ap_null",
            "          BAND_STEERING:'band-steering'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n'))",
            "        (wlan_virtual_ap_null",
            "          NO:'no'",
            "          BLACKLIST:'blacklist'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n'))",
            "        (wlan_virtual_ap_null",
            "          BLACKLIST_TIME:'blacklist-time'",
            "          (null_rest_of_line",
            "            DEC:'0'",
            "            NEWLINE:'\\n'))",
            "        (wlan_virtual_ap_null",
            "          BROADCAST_FILTER:'broadcast-filter'",
            "          (null_rest_of_line",
            "            ALL:'all'",
            "            NEWLINE:'\\n'))",
            "        (wlan_virtual_ap_null",
            "          DENY_INTER_USER_TRAFFIC:'deny-inter-user-traffic'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n'))",
            "        (wlan_virtual_ap_null",
            "          DYNAMIC_MCAST_OPTIMIZATION:'dynamic-mcast-optimization'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n'))",
            "        (wlan_virtual_ap_null",
            "          DYNAMIC_MCAST_OPTIMIZATION_THRESH:'dynamic-mcast-optimization-thresh'",
            "          (null_rest_of_line",
            "            DEC:'123'",
            "            NEWLINE:'\\n'))",
            "        (wlan_virtual_ap_null",
            "          SSID_PROFILE:'ssid-profile'",
            "          (null_rest_of_line",
            "            DOUBLE_QUOTE:'\"'",
            "            VARIABLE:'ffffffffffff'",
            "            DOUBLE_QUOTE:'\"'",
            "            NEWLINE:'\\n'))",
            "        (wlan_virtual_ap_null",
            "          NO:'no'",
            "          VAP_ENABLE:'vap-enable'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n'))",
            "        (wlan_virtual_ap_null",
            "          VLAN:'vlan'",
            "          (null_rest_of_line",
            "            DEC:'123'",
            "            NEWLINE:'\\n'))",
            "        (wlan_virtual_ap_null",
            "          VLAN:'vlan'",
            "          (null_rest_of_line",
            "            VARIABLE:'foobar'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_wlan",
            "      WLAN:'wlan'",
            "      (wlan_null",
            "        VOIP_CAC_PROFILE:'voip-cac-profile'",
            "        (null_rest_of_line",
            "          DOUBLE_QUOTE:'\"'",
            "          DEFAULT:'default'",
            "          DOUBLE_QUOTE:'\"'",
            "          NEWLINE:'\\n'))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/aruba_net" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'aruba_net'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_netdestination",
            "      NETDESTINATION:'netdestination'",
            "      name = (variable",
            "        VARIABLE:'byname1')",
            "      NEWLINE:'\\n'",
            "      (netdestination_name",
            "        NAME:'name'",
            "        name = (variable_permissive",
            "          VARIABLE:'stuff.example.com'  <== mode:M_Name)",
            "        NEWLINE:'\\n')",
            "      (netdestination_name",
            "        NAME:'name'",
            "        name = (variable_permissive",
            "          VARIABLE:'.notarealdomainhopefully.com'  <== mode:M_Name)",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_netdestination",
            "      NETDESTINATION:'netdestination'",
            "      name = (variable",
            "        VARIABLE:'foobar1')",
            "      NEWLINE:'\\n'",
            "      (netdestination_description",
            "        desc = (description_line",
            "          DESCRIPTION:'description'",
            "          text = RAW_TEXT:' \"foofoo\"'  <== mode:M_Description",
            "          NEWLINE:'\\n'  <== mode:M_Description))",
            "      (netdestination_host",
            "        HOST:'host'",
            "        ip = IP_ADDRESS:'1.2.3.4'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_netdestination6",
            "      NETDESTINATION6:'netdestination6'",
            "      name = (variable",
            "        VARIABLE:'foobar2')",
            "      NEWLINE:'\\n'",
            "      (netdestination6_description",
            "        desc = (description_line",
            "          DESCRIPTION:'description'",
            "          text = RAW_TEXT:' \"barbar\"'  <== mode:M_Description",
            "          NEWLINE:'\\n'  <== mode:M_Description))",
            "      (netdestination6_invert",
            "        INVERT:'invert'",
            "        NEWLINE:'\\n')",
            "      (netdestination6_network",
            "        NETWORK:'network'",
            "        net6 = IPV6_PREFIX:'abcd::/3'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        NETEXTHDR:'netexthdr'",
            "        DEFAULT:'default'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_netservice",
            "      NETSERVICE:'netservice'",
            "      name = (variable",
            "        VARIABLE:'svc-adp')",
            "      prot = (protocol",
            "        UDP:'udp')",
            "      ps = (netservice_port_specifier",
            "        start_port = DEC:'8200')",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_netservice",
            "      NETSERVICE:'netservice'",
            "      name = (variable",
            "        VARIABLE:'svc-bootp')",
            "      prot = (protocol",
            "        UDP:'udp')",
            "      ps = (netservice_port_specifier",
            "        start_port = DEC:'67'",
            "        end_port = DEC:'69')",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_netservice",
            "      NETSERVICE:'netservice'",
            "      name = (variable",
            "        VARIABLE:'svc-cfgm-tcp')",
            "      prot = (protocol",
            "        TCP:'tcp')",
            "      ps = (netservice_port_specifier",
            "        start_port = DEC:'8211')",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_netservice",
            "      NETSERVICE:'netservice'",
            "      name = (variable",
            "        VARIABLE:'svc-dhcp')",
            "      prot = (protocol",
            "        UDP:'udp')",
            "      ps = (netservice_port_specifier",
            "        start_port = DEC:'67'",
            "        end_port = DEC:'68')",
            "      ALG:'alg'",
            "      alg = (netservice_alg",
            "        DHCP:'dhcp')",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_netservice",
            "      NETSERVICE:'netservice'",
            "      name = (variable",
            "        VARIABLE:'svc-dns')",
            "      prot = (protocol",
            "        UDP:'udp')",
            "      ps = (netservice_port_specifier",
            "        start_port = DEC:'53')",
            "      ALG:'alg'",
            "      alg = (netservice_alg",
            "        DNS:'dns')",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_netservice",
            "      NETSERVICE:'netservice'",
            "      name = (variable",
            "        VARIABLE:'svc-esp')",
            "      prot = (protocol",
            "        DEC:'50')",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_netservice",
            "      NETSERVICE:'netservice'",
            "      name = (variable",
            "        VARIABLE:'svc-ftp')",
            "      prot = (protocol",
            "        TCP:'tcp')",
            "      ps = (netservice_port_specifier",
            "        start_port = DEC:'21')",
            "      ALG:'alg'",
            "      alg = (netservice_alg",
            "        FTP:'ftp')",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_netservice",
            "      NETSERVICE:'netservice'",
            "      name = (variable",
            "        VARIABLE:'svc-gre')",
            "      prot = (protocol",
            "        DEC:'47')",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_netservice",
            "      NETSERVICE:'netservice'",
            "      name = (variable",
            "        VARIABLE:'svc-icloud')",
            "      prot = (protocol",
            "        TCP:'tcp')",
            "      ps = (netservice_port_specifier",
            "        LIST:'list'",
            "        DOUBLE_QUOTE:'\"'",
            "        DEC:'587'",
            "        DOUBLE_QUOTE:'\"')",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_netservice",
            "      NETSERVICE:'netservice'",
            "      name = (variable",
            "        VARIABLE:'svc-msrpc-tcp')",
            "      prot = (protocol",
            "        TCP:'tcp')",
            "      ps = (netservice_port_specifier",
            "        start_port = DEC:'135'",
            "        end_port = DEC:'139')",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_netservice",
            "      NETSERVICE:'netservice'",
            "      name = (variable",
            "        VARIABLE:'svc-noe-oxo')",
            "      prot = (protocol",
            "        UDP:'udp')",
            "      ps = (netservice_port_specifier",
            "        start_port = DEC:'5000')",
            "      ALG:'alg'",
            "      alg = (netservice_alg",
            "        NOE:'noe')",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_netservice",
            "      NETSERVICE:'netservice'",
            "      name = (variable",
            "        VARIABLE:'svc-rtsp')",
            "      prot = (protocol",
            "        TCP:'tcp')",
            "      ps = (netservice_port_specifier",
            "        start_port = DEC:'554')",
            "      ALG:'alg'",
            "      alg = (netservice_alg",
            "        RTSP:'rtsp')",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_netservice",
            "      NETSERVICE:'netservice'",
            "      name = (variable",
            "        VARIABLE:'svc-sccp')",
            "      prot = (protocol",
            "        TCP:'tcp')",
            "      ps = (netservice_port_specifier",
            "        start_port = DEC:'2000')",
            "      ALG:'alg'",
            "      alg = (netservice_alg",
            "        SCCP:'sccp')",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_netservice",
            "      NETSERVICE:'netservice'",
            "      name = (variable",
            "        VARIABLE:'svc-sips')",
            "      prot = (protocol",
            "        TCP:'tcp')",
            "      ps = (netservice_port_specifier",
            "        start_port = DEC:'5061')",
            "      ALG:'alg'",
            "      alg = (netservice_alg",
            "        SIPS:'sips')",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_netservice",
            "      NETSERVICE:'netservice'",
            "      name = (variable",
            "        VARIABLE:'svc-svp')",
            "      prot = (protocol",
            "        DEC:'119')",
            "      ALG:'alg'",
            "      alg = (netservice_alg",
            "        SVP:'svp')",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_netservice",
            "      NETSERVICE:'netservice'",
            "      name = (variable",
            "        VARIABLE:'svc-tftp')",
            "      prot = (protocol",
            "        UDP:'udp')",
            "      ps = (netservice_port_specifier",
            "        start_port = DEC:'69')",
            "      ALG:'alg'",
            "      alg = (netservice_alg",
            "        TFTP:'tftp')",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_netservice",
            "      NETSERVICE:'netservice'",
            "      name = (variable",
            "        VARIABLE:'svc-v6-icmp')",
            "      prot = (protocol",
            "        DEC:'58')",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_netservice",
            "      NETSERVICE:'netservice'",
            "      name = (variable",
            "        VARIABLE:'svc-vocera')",
            "      prot = (protocol",
            "        UDP:'udp')",
            "      ps = (netservice_port_specifier",
            "        start_port = DEC:'5002')",
            "      ALG:'alg'",
            "      alg = (netservice_alg",
            "        VOCERA:'vocera')",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_netservice",
            "      NETSERVICE:'netservice'",
            "      name = (variable",
            "        VARIABLE:'svc-web')",
            "      prot = (protocol",
            "        TCP:'tcp')",
            "      ps = (netservice_port_specifier",
            "        LIST:'list'",
            "        DOUBLE_QUOTE:'\"'",
            "        DEC:'80'",
            "        DEC:'443'",
            "        DOUBLE_QUOTE:'\"')",
            "      NEWLINE:'\\n'))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/aruba_snmp" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'aruba_snmp'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_community",
            "        COMMUNITY:'community'  <== mode:M_SnmpServerCommunity",
            "        DOUBLE_QUOTE:'\"'  <== mode:M_SnmpServerCommunity",
            "        name = (variable_community_name",
            "          M_DoubleQuote_TEXT:'abc'  <== mode:M_DoubleQuote)",
            "        DOUBLE_QUOTE:'\"'  <== mode:M_DoubleQuote",
            "        (ssc_access_control",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_community",
            "        COMMUNITY:'community'  <== mode:M_SnmpServerCommunity",
            "        DOUBLE_QUOTE:'\"'  <== mode:M_SnmpServerCommunity",
            "        name = (variable_community_name",
            "          M_DoubleQuote_TEXT:'def'  <== mode:M_DoubleQuote)",
            "        DOUBLE_QUOTE:'\"'  <== mode:M_DoubleQuote",
            "        (ssc_access_control",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_enable_trap",
            "        ENABLE:'enable'",
            "        TRAP:'trap'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_host",
            "        HOST:'host'",
            "        ip4 = IP_ADDRESS:'1.2.3.4'",
            "        (ss_host_version",
            "          VERSION:'version'",
            "          version = (variable_snmp_host",
            "            VARIABLE:'2c'))",
            "        comm_or_username = (variable_snmp_host",
            "          VARIABLE:'foofoo')",
            "        (variable_snmp_host",
            "          UDP_PORT:'udp-port')",
            "        (variable_snmp_host",
            "          DEC:'123')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_null",
            "        TRAP:'trap'",
            "        (null_rest_of_line",
            "          SOURCE:'source'",
            "          IP_ADDRESS:'0.0.0.0'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_null",
            "        TRAP:'trap'",
            "        (null_rest_of_line",
            "          DISABLE:'disable'",
            "          VARIABLE:'wlsxAdhocNetwork'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_null",
            "        TRAP:'trap'",
            "        (null_rest_of_line",
            "          DISABLE:'disable'",
            "          VARIABLE:'wlsxAdhocNetworkBridgeDetectedAP'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_null",
            "        TRAP:'trap'",
            "        (null_rest_of_line",
            "          DISABLE:'disable'",
            "          VARIABLE:'wlsxAdhocNetworkBridgeDetectedSta'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_null",
            "        TRAP:'trap'",
            "        (null_rest_of_line",
            "          DISABLE:'disable'",
            "          VARIABLE:'wlsxAdhocUsingValidSSID'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_null",
            "        TRAP:'trap'",
            "        (null_rest_of_line",
            "          DISABLE:'disable'",
            "          VARIABLE:'wlsxAuthMaxAclEntries'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_null",
            "        TRAP:'trap'",
            "        (null_rest_of_line",
            "          DISABLE:'disable'",
            "          VARIABLE:'wlsxAuthMaxBWContracts'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_null",
            "        TRAP:'trap'",
            "        (null_rest_of_line",
            "          DISABLE:'disable'",
            "          VARIABLE:'wlsxAuthMaxUserEntries'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_null",
            "        TRAP:'trap'",
            "        (null_rest_of_line",
            "          DISABLE:'disable'",
            "          VARIABLE:'wlsxAuthServerIsUp'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_null",
            "        TRAP:'trap'",
            "        (null_rest_of_line",
            "          DISABLE:'disable'",
            "          VARIABLE:'wlsxAuthServerReqTimedOut'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_null",
            "        TRAP:'trap'",
            "        (null_rest_of_line",
            "          DISABLE:'disable'",
            "          VARIABLE:'wlsxAuthServerTimedOut'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_null",
            "        TRAP:'trap'",
            "        (null_rest_of_line",
            "          DISABLE:'disable'",
            "          VARIABLE:'wlsxChannelChanged'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_null",
            "        TRAP:'trap'",
            "        (null_rest_of_line",
            "          DISABLE:'disable'",
            "          VARIABLE:'wlsxCoverageHoleDetected'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_null",
            "        TRAP:'trap'",
            "        (null_rest_of_line",
            "          DISABLE:'disable'",
            "          VARIABLE:'wlsxDBCommunicationFailure'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_null",
            "        TRAP:'trap'",
            "        (null_rest_of_line",
            "          DISABLE:'disable'",
            "          VARIABLE:'wlsxDisconnectStationAttack'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_null",
            "        TRAP:'trap'",
            "        (null_rest_of_line",
            "          DISABLE:'disable'",
            "          VARIABLE:'wlsxESIServerDown'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_null",
            "        TRAP:'trap'",
            "        (null_rest_of_line",
            "          DISABLE:'disable'",
            "          VARIABLE:'wlsxESIServerUp'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_null",
            "        TRAP:'trap'",
            "        (null_rest_of_line",
            "          DISABLE:'disable'",
            "          VARIABLE:'wlsxFanFailure'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_null",
            "        TRAP:'trap'",
            "        (null_rest_of_line",
            "          DISABLE:'disable'",
            "          VARIABLE:'wlsxFanTrayInserted'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_null",
            "        TRAP:'trap'",
            "        (null_rest_of_line",
            "          DISABLE:'disable'",
            "          VARIABLE:'wlsxFanTrayRemoved'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_null",
            "        TRAP:'trap'",
            "        (null_rest_of_line",
            "          DISABLE:'disable'",
            "          VARIABLE:'wlsxGBICInserted'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_null",
            "        TRAP:'trap'",
            "        (null_rest_of_line",
            "          DISABLE:'disable'",
            "          VARIABLE:'wlsxIpSpoofingDetected'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_null",
            "        TRAP:'trap'",
            "        (null_rest_of_line",
            "          DISABLE:'disable'",
            "          VARIABLE:'wlsxLCInserted'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_null",
            "        TRAP:'trap'",
            "        (null_rest_of_line",
            "          DISABLE:'disable'",
            "          VARIABLE:'wlsxLCRemoved'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_null",
            "        TRAP:'trap'",
            "        (null_rest_of_line",
            "          DISABLE:'disable'",
            "          VARIABLE:'wlsxLicenseExpiry'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_null",
            "        TRAP:'trap'",
            "        (null_rest_of_line",
            "          DISABLE:'disable'",
            "          VARIABLE:'wlsxLowMemory'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_null",
            "        TRAP:'trap'",
            "        (null_rest_of_line",
            "          DISABLE:'disable'",
            "          VARIABLE:'wlsxLowOnFlashSpace'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_null",
            "        TRAP:'trap'",
            "        (null_rest_of_line",
            "          DISABLE:'disable'",
            "          VARIABLE:'wlsxOutOfRangeTemperature'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_null",
            "        TRAP:'trap'",
            "        (null_rest_of_line",
            "          DISABLE:'disable'",
            "          VARIABLE:'wlsxOutOfRangeVoltage'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_null",
            "        TRAP:'trap'",
            "        (null_rest_of_line",
            "          DISABLE:'disable'",
            "          VARIABLE:'wlsxPowerSupplyFailure'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_null",
            "        TRAP:'trap'",
            "        (null_rest_of_line",
            "          DISABLE:'disable'",
            "          VARIABLE:'wlsxPowerSupplyMissing'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_null",
            "        TRAP:'trap'",
            "        (null_rest_of_line",
            "          DISABLE:'disable'",
            "          VARIABLE:'wlsxProcessDied'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_null",
            "        TRAP:'trap'",
            "        (null_rest_of_line",
            "          DISABLE:'disable'",
            "          VARIABLE:'wlsxProcessExceedsMemoryLimits'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_null",
            "        TRAP:'trap'",
            "        (null_rest_of_line",
            "          DISABLE:'disable'",
            "          VARIABLE:'wlsxSCInserted'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_null",
            "        TRAP:'trap'",
            "        (null_rest_of_line",
            "          DISABLE:'disable'",
            "          VARIABLE:'wlsxSignatureMatch'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_null",
            "        TRAP:'trap'",
            "        (null_rest_of_line",
            "          DISABLE:'disable'",
            "          VARIABLE:'wlsxStaUnAssociatedFromUnsecureAP'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_null",
            "        TRAP:'trap'",
            "        (null_rest_of_line",
            "          DISABLE:'disable'",
            "          VARIABLE:'wlsxStationAddedToBlackList'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_null",
            "        TRAP:'trap'",
            "        (null_rest_of_line",
            "          DISABLE:'disable'",
            "          VARIABLE:'wlsxStationRemovedFromBlackList'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_null",
            "        TRAP:'trap'",
            "        (null_rest_of_line",
            "          DISABLE:'disable'",
            "          VARIABLE:'wlsxSwitchIPChanged'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_null",
            "        TRAP:'trap'",
            "        (null_rest_of_line",
            "          DISABLE:'disable'",
            "          VARIABLE:'wlsxSwitchRoleChange'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_null",
            "        TRAP:'trap'",
            "        (null_rest_of_line",
            "          DISABLE:'disable'",
            "          VARIABLE:'wlsxUserAuthenticationFailed'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_null",
            "        TRAP:'trap'",
            "        (null_rest_of_line",
            "          DISABLE:'disable'",
            "          VARIABLE:'wlsxUserEntryAuthenticated'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_null",
            "        TRAP:'trap'",
            "        (null_rest_of_line",
            "          DISABLE:'disable'",
            "          VARIABLE:'wlsxUserEntryChanged'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_null",
            "        TRAP:'trap'",
            "        (null_rest_of_line",
            "          DISABLE:'disable'",
            "          VARIABLE:'wlsxUserEntryCreated'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_null",
            "        TRAP:'trap'",
            "        (null_rest_of_line",
            "          DISABLE:'disable'",
            "          VARIABLE:'wlsxUserEntryDeAuthenticated'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_null",
            "        TRAP:'trap'",
            "        (null_rest_of_line",
            "          DISABLE:'disable'",
            "          VARIABLE:'wlsxUserEntryDeleted'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_null",
            "        TRAP:'trap'",
            "        (null_rest_of_line",
            "          DISABLE:'disable'",
            "          VARIABLE:'wlsxVrrpStateChange'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_null",
            "        USER:'user'",
            "        (null_rest_of_line",
            "          DOUBLE_QUOTE:'\"'",
            "          VARIABLE:'foofoo'",
            "          DOUBLE_QUOTE:'\"'",
            "          VARIABLE:'auth-prot'",
            "          SHA:'sha'",
            "          ASTERISK:'*'",
            "          ASTERISK:'*'",
            "          ASTERISK:'*'",
            "          ASTERISK:'*'",
            "          ASTERISK:'*'",
            "          ASTERISK:'*'",
            "          VARIABLE:'priv-prot'",
            "          DES:'des'",
            "          ASTERISK:'*'",
            "          ASTERISK:'*'",
            "          ASTERISK:'*'",
            "          ASTERISK:'*'",
            "          ASTERISK:'*'",
            "          ASTERISK:'*'",
            "          NEWLINE:'\\n'))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/aruba_time_range" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'aruba_time_range'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_time_range",
            "      TIME_RANGE:'time-range'",
            "      name = (variable",
            "        VARIABLE:'foobar')",
            "      PERIODIC:'periodic'",
            "      NEWLINE:'\\n'",
            "      (tr_null",
            "        WEEKDAY:'weekday'",
            "        (null_rest_of_line",
            "          DEC:'09'",
            "          COLON:':'",
            "          DEC:'00'",
            "          DASH:'-'",
            "          DEC:'17'",
            "          COLON:':'",
            "          DEC:'00'",
            "          NEWLINE:'\\n'))",
            "      (tr_null",
            "        WEEKEND:'weekend'",
            "        (null_rest_of_line",
            "          DEC:'12'",
            "          COLON:':'",
            "          DEC:'00'",
            "          DASH:'-'",
            "          DEC:'16'",
            "          COLON:':'",
            "          DEC:'00'",
            "          NEWLINE:'\\n'))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/aruba_user_role" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'aruba_user_role'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_user_role",
            "      USER_ROLE:'user-role'",
            "      name = (variable_permissive",
            "        VARIABLE:'role1')",
            "      NEWLINE:'\\n'",
            "      (ur_access_list",
            "        ACCESS_LIST:'access-list'",
            "        SESSION:'session'",
            "        name = (variable_permissive",
            "          VARIABLE:'abcd')",
            "        NEWLINE:'\\n')",
            "      (ur_access_list",
            "        ACCESS_LIST:'access-list'",
            "        SESSION:'session'",
            "        name = (variable_permissive",
            "          VARIABLE:'efgh')",
            "        NEWLINE:'\\n')",
            "      (ur_null",
            "        CAPTIVE_PORTAL:'captive-portal'",
            "        (null_rest_of_line",
            "          DOUBLE_QUOTE:'\"'",
            "          VARIABLE:'foobar'",
            "          DOUBLE_QUOTE:'\"'",
            "          NEWLINE:'\\n'))",
            "      (ur_null",
            "        NO:'no'",
            "        CAPTIVE_PORTAL:'captive-portal'",
            "        (null_rest_of_line",
            "          VARIABLE:'check-for-accounting'",
            "          NEWLINE:'\\n'))",
            "      (ur_null",
            "        MAX_SESSIONS:'max-sessions'",
            "        (null_rest_of_line",
            "          DEC:'12345'",
            "          NEWLINE:'\\n'))",
            "      (ur_null",
            "        VLAN:'vlan'",
            "        (null_rest_of_line",
            "          DEC:'123'",
            "          NEWLINE:'\\n'))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/aruba_vlan" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'aruba_vlan'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_vlan_cisco",
            "      VLAN:'vlan'",
            "      DEC:'123'",
            "      (null_rest_of_line",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_vlan_name",
            "      VLAN_NAME:'vlan-name'",
            "      name = (variable_permissive",
            "        VARIABLE:'abcdefg')",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_vlan_cisco",
            "      VLAN:'vlan'",
            "      (variable_vlan",
            "        VARIABLE:'abcdefg')",
            "      DEC:'123'",
            "      (null_rest_of_line",
            "        NEWLINE:'\\n')))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/aruba_voice" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'aruba_voice'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_dialer",
            "      DIALER:'dialer'",
            "      (dialer_group",
            "        GROUP:'group'",
            "        (null_rest_of_line",
            "          VARIABLE:'evdo_us'",
            "          NEWLINE:'\\n')",
            "        (dialer_group_null",
            "          DIAL_STRING:'dial-string'",
            "          (null_rest_of_line",
            "            VARIABLE:'AT'",
            "            ASTERISK:'*'",
            "            ASTERISK:'*'",
            "            ASTERISK:'*'",
            "            ASTERISK:'*'",
            "            ASTERISK:'*'",
            "            NEWLINE:'\\n'))",
            "        (dialer_group_null",
            "          INIT_STRING:'init-string'",
            "          (null_rest_of_line",
            "            VARIABLE:'AT'",
            "            ASTERISK:'*'",
            "            ASTERISK:'*'",
            "            ASTERISK:'*'",
            "            ASTERISK:'*'",
            "            ASTERISK:'*'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_voice",
            "      VOICE:'voice'",
            "      (voice_null",
            "        ALG_BASED_CAC:'alg-based-cac'",
            "        (null_rest_of_line",
            "          ENABLE:'enable'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_voice",
            "      VOICE:'voice'",
            "      (voice_null",
            "        DIALPLAN_PROFILE:'dialplan-profile'",
            "        (null_rest_of_line",
            "          DOUBLE_QUOTE:'\"'",
            "          DEFAULT:'default'",
            "          DOUBLE_QUOTE:'\"'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_voice",
            "      VOICE:'voice'",
            "      (voice_null",
            "        LOGGING:'logging'",
            "        (null_rest_of_line",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_voice",
            "      VOICE:'voice'",
            "      (voice_null",
            "        REAL_TIME_CONFIG:'real-time-config'",
            "        (null_rest_of_line",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_voice",
            "      VOICE:'voice'",
            "      (voice_null",
            "        RTCP_INACTIVITY:'rtcp-inactivity'",
            "        (null_rest_of_line",
            "          DISABLE:'disable'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_voice",
            "      VOICE:'voice'",
            "      (voice_null",
            "        SIP:'sip'",
            "        (null_rest_of_line",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_voice",
            "      VOICE:'voice'",
            "      (voice_null",
            "        SIP_MIDCALL_REQ_TIMEOUT:'sip-midcall-req-timeout'",
            "        (null_rest_of_line",
            "          DISABLE:'disable'",
            "          NEWLINE:'\\n'))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/aruba_vpn" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'aruba_vpn'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_vpn_dialer",
            "      VPN_DIALER:'vpn-dialer'",
            "      name = (variable",
            "        VARIABLE:'default-dialer')",
            "      NEWLINE:'\\n'",
            "      (vpn_dialer_null",
            "        IKE:'ike'",
            "        (null_rest_of_line",
            "          AUTHENTICATION:'authentication'",
            "          VARIABLE:'PRE-SHARE'  <== mode:M_Authentication",
            "          ASTERISK:'*'",
            "          ASTERISK:'*'",
            "          ASTERISK:'*'",
            "          ASTERISK:'*'",
            "          ASTERISK:'*'",
            "          ASTERISK:'*'",
            "          NEWLINE:'\\n'))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/as_path_prepend" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'as_path_prepend'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (route_map_stanza",
            "      ROUTE_MAP:'route-map'",
            "      name = (variable",
            "        VARIABLE:'rmap'  <== mode:M_RouteMap)",
            "      rmt = (access_list_action",
            "        PERMIT:'permit')",
            "      num = DEC:'10'",
            "      NEWLINE:'\\n'",
            "      (rm_stanza",
            "        (set_rm_stanza",
            "          (set_as_path_prepend_rm_stanza",
            "            SET:'set'",
            "            AS_PATH:'as-path'",
            "            PREPEND:'prepend'  <== mode:M_AsPath",
            "            (as_expr",
            "              DEC:'1')",
            "            NEWLINE:'\\n')))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/asa_acl" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        ASA:'ASA'",
            "        VARIABLE:'Version'",
            "        FLOAT:'9.9'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'asa_acl'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (extended_access_list_stanza",
            "      ACCESS_LIST:'access-list'",
            "      name = (variable_aclname",
            "        VARIABLE:'outside_in')",
            "      EXTENDED:'extended'",
            "      (extended_access_list_tail",
            "        ala = (access_list_action",
            "          PERMIT:'permit')",
            "        prot = (protocol",
            "          UDP:'udp')",
            "        srcipr = (access_list_ip_range",
            "          ANY4:'any4')",
            "        dstipr = (access_list_ip_range",
            "          HOST:'host'",
            "          ip = IP_ADDRESS:'1.2.3.4')",
            "        alps_dst = (port_specifier",
            "          EQ:'eq'",
            "          (port",
            "            TFTP:'tftp'))",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (standard_access_list_stanza",
            "      ACCESS_LIST:'access-list'",
            "      name = (variable_aclname",
            "        VARIABLE:'Local_LAN_Access')",
            "      STANDARD:'standard'",
            "      (standard_access_list_tail",
            "        ala = (access_list_action",
            "          PERMIT:'permit')",
            "        ipr = (access_list_ip_range",
            "          HOST:'host'",
            "          ip = IP_ADDRESS:'0.0.0.0')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        ACCESS_LIST:'access-list'",
            "        (variable_aclname",
            "          OUTSIDE:'outside')",
            "        REMARK:'remark'",
            "        M_REMARK_REMARK:' some-remark with multiple words and 1 or 2 numbers'  <== mode:M_REMARK",
            "        NEWLINE:'\\n'  <== mode:M_REMARK)))",
            "  (stanza",
            "    (extended_access_list_stanza",
            "      ACCESS_LIST:'access-list'",
            "      name = (variable_aclname",
            "        OUTSIDE:'outside')",
            "      EXTENDED:'extended'",
            "      (extended_access_list_tail",
            "        ala = (access_list_action",
            "          PERMIT:'permit')",
            "        prot = (protocol",
            "          TCP:'tcp')",
            "        srcipr = (access_list_ip_range",
            "          OBJECT_GROUP:'object-group'",
            "          og = (variable",
            "            VARIABLE:'drawbridge_hosts'  <== mode:M_ObjectGroup))",
            "        dstipr = (access_list_ip_range",
            "          INTERFACE:'interface'",
            "          iface = (variable",
            "            OUTSIDE:'outside'))",
            "        alps_dst = (port_specifier",
            "          EQ:'eq'",
            "          (port",
            "            HTTPS:'https'))",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (extended_access_list_stanza",
            "      ACCESS_LIST:'access-list'",
            "      name = (variable_aclname",
            "        VARIABLE:'inline_specifiers')",
            "      EXTENDED:'extended'",
            "      (extended_access_list_tail",
            "        ala = (access_list_action",
            "          PERMIT:'permit')",
            "        OBJECT:'object'",
            "        inline_obj_icmp = (icmp_inline_object_type",
            "          ICMP_ALTERNATE_ADDRESS:'icmp-alternate-address')",
            "        srcipr = (access_list_ip_range",
            "          ANY:'any')",
            "        dstipr = (access_list_ip_range",
            "          ANY:'any')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (extended_access_list_stanza",
            "      ACCESS_LIST:'access-list'",
            "      name = (variable_aclname",
            "        VARIABLE:'inline_specifiers')",
            "      EXTENDED:'extended'",
            "      (extended_access_list_tail",
            "        ala = (access_list_action",
            "          PERMIT:'permit')",
            "        OBJECT:'object'",
            "        inline_obj_icmp = (icmp_inline_object_type",
            "          ICMP_CONVERSION_ERROR:'icmp-conversion-error')",
            "        srcipr = (access_list_ip_range",
            "          ANY:'any')",
            "        dstipr = (access_list_ip_range",
            "          ANY:'any')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (extended_access_list_stanza",
            "      ACCESS_LIST:'access-list'",
            "      name = (variable_aclname",
            "        VARIABLE:'inline_specifiers')",
            "      EXTENDED:'extended'",
            "      (extended_access_list_tail",
            "        ala = (access_list_action",
            "          PERMIT:'permit')",
            "        OBJECT:'object'",
            "        inline_obj_icmp = (icmp_inline_object_type",
            "          ICMP_ECHO:'icmp-echo')",
            "        srcipr = (access_list_ip_range",
            "          ANY:'any')",
            "        dstipr = (access_list_ip_range",
            "          ANY:'any')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (extended_access_list_stanza",
            "      ACCESS_LIST:'access-list'",
            "      name = (variable_aclname",
            "        VARIABLE:'inline_specifiers')",
            "      EXTENDED:'extended'",
            "      (extended_access_list_tail",
            "        ala = (access_list_action",
            "          PERMIT:'permit')",
            "        OBJECT:'object'",
            "        inline_obj_icmp = (icmp_inline_object_type",
            "          ICMP_ECHO_REPLY:'icmp-echo-reply')",
            "        srcipr = (access_list_ip_range",
            "          ANY:'any')",
            "        dstipr = (access_list_ip_range",
            "          ANY:'any')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (extended_access_list_stanza",
            "      ACCESS_LIST:'access-list'",
            "      name = (variable_aclname",
            "        VARIABLE:'inline_specifiers')",
            "      EXTENDED:'extended'",
            "      (extended_access_list_tail",
            "        ala = (access_list_action",
            "          PERMIT:'permit')",
            "        OBJECT:'object'",
            "        inline_obj_icmp = (icmp_inline_object_type",
            "          ICMP_INFORMATION_REPLY:'icmp-information-reply')",
            "        srcipr = (access_list_ip_range",
            "          ANY:'any')",
            "        dstipr = (access_list_ip_range",
            "          ANY:'any')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (extended_access_list_stanza",
            "      ACCESS_LIST:'access-list'",
            "      name = (variable_aclname",
            "        VARIABLE:'inline_specifiers')",
            "      EXTENDED:'extended'",
            "      (extended_access_list_tail",
            "        ala = (access_list_action",
            "          PERMIT:'permit')",
            "        OBJECT:'object'",
            "        inline_obj_icmp = (icmp_inline_object_type",
            "          ICMP_INFORMATION_REQUEST:'icmp-information-request')",
            "        srcipr = (access_list_ip_range",
            "          ANY:'any')",
            "        dstipr = (access_list_ip_range",
            "          ANY:'any')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (extended_access_list_stanza",
            "      ACCESS_LIST:'access-list'",
            "      name = (variable_aclname",
            "        VARIABLE:'inline_specifiers')",
            "      EXTENDED:'extended'",
            "      (extended_access_list_tail",
            "        ala = (access_list_action",
            "          PERMIT:'permit')",
            "        OBJECT:'object'",
            "        inline_obj_icmp = (icmp_inline_object_type",
            "          ICMP_MASK_REPLY:'icmp-mask-reply')",
            "        srcipr = (access_list_ip_range",
            "          ANY:'any')",
            "        dstipr = (access_list_ip_range",
            "          ANY:'any')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (extended_access_list_stanza",
            "      ACCESS_LIST:'access-list'",
            "      name = (variable_aclname",
            "        VARIABLE:'inline_specifiers')",
            "      EXTENDED:'extended'",
            "      (extended_access_list_tail",
            "        ala = (access_list_action",
            "          PERMIT:'permit')",
            "        OBJECT:'object'",
            "        inline_obj_icmp = (icmp_inline_object_type",
            "          ICMP_MASK_REQUEST:'icmp-mask-request')",
            "        srcipr = (access_list_ip_range",
            "          ANY:'any')",
            "        dstipr = (access_list_ip_range",
            "          ANY:'any')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (extended_access_list_stanza",
            "      ACCESS_LIST:'access-list'",
            "      name = (variable_aclname",
            "        VARIABLE:'inline_specifiers')",
            "      EXTENDED:'extended'",
            "      (extended_access_list_tail",
            "        ala = (access_list_action",
            "          PERMIT:'permit')",
            "        OBJECT:'object'",
            "        inline_obj_icmp = (icmp_inline_object_type",
            "          ICMP_MOBILE_REDIRECT:'icmp-mobile-redirect')",
            "        srcipr = (access_list_ip_range",
            "          ANY:'any')",
            "        dstipr = (access_list_ip_range",
            "          ANY:'any')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (extended_access_list_stanza",
            "      ACCESS_LIST:'access-list'",
            "      name = (variable_aclname",
            "        VARIABLE:'inline_specifiers')",
            "      EXTENDED:'extended'",
            "      (extended_access_list_tail",
            "        ala = (access_list_action",
            "          PERMIT:'permit')",
            "        OBJECT:'object'",
            "        inline_obj_icmp = (icmp_inline_object_type",
            "          ICMP_PARAMETER_PROBLEM:'icmp-parameter-problem')",
            "        srcipr = (access_list_ip_range",
            "          ANY:'any')",
            "        dstipr = (access_list_ip_range",
            "          ANY:'any')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (extended_access_list_stanza",
            "      ACCESS_LIST:'access-list'",
            "      name = (variable_aclname",
            "        VARIABLE:'inline_specifiers')",
            "      EXTENDED:'extended'",
            "      (extended_access_list_tail",
            "        ala = (access_list_action",
            "          PERMIT:'permit')",
            "        OBJECT:'object'",
            "        inline_obj_icmp = (icmp_inline_object_type",
            "          ICMP_REDIRECT:'icmp-redirect')",
            "        srcipr = (access_list_ip_range",
            "          ANY:'any')",
            "        dstipr = (access_list_ip_range",
            "          ANY:'any')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (extended_access_list_stanza",
            "      ACCESS_LIST:'access-list'",
            "      name = (variable_aclname",
            "        VARIABLE:'inline_specifiers')",
            "      EXTENDED:'extended'",
            "      (extended_access_list_tail",
            "        ala = (access_list_action",
            "          PERMIT:'permit')",
            "        OBJECT:'object'",
            "        inline_obj_icmp = (icmp_inline_object_type",
            "          ICMP_ROUTER_ADVERTISEMENT:'icmp-router-advertisement')",
            "        srcipr = (access_list_ip_range",
            "          ANY:'any')",
            "        dstipr = (access_list_ip_range",
            "          ANY:'any')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (extended_access_list_stanza",
            "      ACCESS_LIST:'access-list'",
            "      name = (variable_aclname",
            "        VARIABLE:'inline_specifiers')",
            "      EXTENDED:'extended'",
            "      (extended_access_list_tail",
            "        ala = (access_list_action",
            "          PERMIT:'permit')",
            "        OBJECT:'object'",
            "        inline_obj_icmp = (icmp_inline_object_type",
            "          ICMP_ROUTER_SOLICITATION:'icmp-router-solicitation')",
            "        srcipr = (access_list_ip_range",
            "          ANY:'any')",
            "        dstipr = (access_list_ip_range",
            "          ANY:'any')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (extended_access_list_stanza",
            "      ACCESS_LIST:'access-list'",
            "      name = (variable_aclname",
            "        VARIABLE:'inline_specifiers')",
            "      EXTENDED:'extended'",
            "      (extended_access_list_tail",
            "        ala = (access_list_action",
            "          PERMIT:'permit')",
            "        OBJECT:'object'",
            "        inline_obj_icmp = (icmp_inline_object_type",
            "          ICMP_SOURCE_QUENCH:'icmp-source-quench')",
            "        srcipr = (access_list_ip_range",
            "          ANY:'any')",
            "        dstipr = (access_list_ip_range",
            "          ANY:'any')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (extended_access_list_stanza",
            "      ACCESS_LIST:'access-list'",
            "      name = (variable_aclname",
            "        VARIABLE:'inline_specifiers')",
            "      EXTENDED:'extended'",
            "      (extended_access_list_tail",
            "        ala = (access_list_action",
            "          PERMIT:'permit')",
            "        OBJECT:'object'",
            "        inline_obj_icmp = (icmp_inline_object_type",
            "          ICMP_TIME_EXCEEDED:'icmp-time-exceeded')",
            "        srcipr = (access_list_ip_range",
            "          ANY:'any')",
            "        dstipr = (access_list_ip_range",
            "          ANY:'any')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (extended_access_list_stanza",
            "      ACCESS_LIST:'access-list'",
            "      name = (variable_aclname",
            "        VARIABLE:'inline_specifiers')",
            "      EXTENDED:'extended'",
            "      (extended_access_list_tail",
            "        ala = (access_list_action",
            "          PERMIT:'permit')",
            "        OBJECT:'object'",
            "        inline_obj_icmp = (icmp_inline_object_type",
            "          ICMP_TIMESTAMP_REPLY:'icmp-timestamp-reply')",
            "        srcipr = (access_list_ip_range",
            "          ANY:'any')",
            "        dstipr = (access_list_ip_range",
            "          ANY:'any')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (extended_access_list_stanza",
            "      ACCESS_LIST:'access-list'",
            "      name = (variable_aclname",
            "        VARIABLE:'inline_specifiers')",
            "      EXTENDED:'extended'",
            "      (extended_access_list_tail",
            "        ala = (access_list_action",
            "          PERMIT:'permit')",
            "        OBJECT:'object'",
            "        inline_obj_icmp = (icmp_inline_object_type",
            "          ICMP_TIMESTAMP_REQUEST:'icmp-timestamp-request')",
            "        srcipr = (access_list_ip_range",
            "          ANY:'any')",
            "        dstipr = (access_list_ip_range",
            "          ANY:'any')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (extended_access_list_stanza",
            "      ACCESS_LIST:'access-list'",
            "      name = (variable_aclname",
            "        VARIABLE:'inline_specifiers')",
            "      EXTENDED:'extended'",
            "      (extended_access_list_tail",
            "        ala = (access_list_action",
            "          PERMIT:'permit')",
            "        OBJECT:'object'",
            "        inline_obj_icmp = (icmp_inline_object_type",
            "          ICMP_TRACEROUTE:'icmp-traceroute')",
            "        srcipr = (access_list_ip_range",
            "          ANY:'any')",
            "        dstipr = (access_list_ip_range",
            "          ANY:'any')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (extended_access_list_stanza",
            "      ACCESS_LIST:'access-list'",
            "      name = (variable_aclname",
            "        VARIABLE:'inline_specifiers')",
            "      EXTENDED:'extended'",
            "      (extended_access_list_tail",
            "        ala = (access_list_action",
            "          PERMIT:'permit')",
            "        OBJECT:'object'",
            "        inline_obj_icmp = (icmp_inline_object_type",
            "          ICMP_UNREACHABLE:'icmp-unreachable')",
            "        srcipr = (access_list_ip_range",
            "          ANY:'any')",
            "        dstipr = (access_list_ip_range",
            "          ANY:'any')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (extended_access_list_stanza",
            "      ACCESS_LIST:'access-list'",
            "      name = (variable_aclname",
            "        VARIABLE:'inline_specifiers')",
            "      EXTENDED:'extended'",
            "      (extended_access_list_tail",
            "        ala = (access_list_action",
            "          PERMIT:'permit')",
            "        OBJECT:'object'",
            "        inline_obj = (protocol",
            "          OSPF:'ospf')",
            "        srcipr = (access_list_ip_range",
            "          ANY:'any')",
            "        dstipr = (access_list_ip_range",
            "          ANY:'any')",
            "        NEWLINE:'\\n\\n')))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/asa_banner" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'asa_banner'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (banner_stanza",
            "      BANNER:'banner'",
            "      (banner_type",
            "        LOGIN:'login'  <== mode:M_Banner)",
            "      (banner",
            "        ASA_BANNER_LINE:'**************************************************'  <== mode:M_BannerText",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (banner_stanza",
            "      BANNER:'banner'",
            "      (banner_type",
            "        LOGIN:'login'  <== mode:M_Banner)",
            "      (banner",
            "        ASA_BANNER_LINE:'You are connected to HOSTNAME If you are'  <== mode:M_BannerText",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (banner_stanza",
            "      BANNER:'banner'",
            "      (banner_type",
            "        LOGIN:'login'  <== mode:M_Banner)",
            "      (banner",
            "        ASA_BANNER_LINE:'experiencing any problems, please contact XXX at'  <== mode:M_BannerText",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (banner_stanza",
            "      BANNER:'banner'",
            "      (banner_type",
            "        LOGIN:'login'  <== mode:M_Banner)",
            "      (banner",
            "        ASA_BANNER_LINE:'someone@somewhere.com or XXX-XXX-XXX'  <== mode:M_BannerText",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (banner_stanza",
            "      BANNER:'banner'",
            "      (banner_type",
            "        LOGIN:'login'  <== mode:M_Banner)",
            "      (banner",
            "        ASA_BANNER_LINE:'**************************************************'  <== mode:M_BannerText",
            "        NEWLINE:'\\n')))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/asa_interface" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        ASA:'ASA'",
            "        VARIABLE:'Version'",
            "        FLOAT:'9.9'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'asa_interface'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_interface",
            "      INTERFACE:'interface'",
            "      iname = (interface_name",
            "        name_prefix_alpha = M_Interface_PREFIX:'GigabitEthernet'  <== mode:M_Interface",
            "        DEC:'0'  <== mode:M_Interface",
            "        FORWARD_SLASH:'/'  <== mode:M_Interface",
            "        (range",
            "          (subrange",
            "            low = DEC:'1'  <== mode:M_Interface)))",
            "      NEWLINE:'\\n'  <== mode:M_Interface",
            "      (if_inner",
            "        (if_nameif",
            "          NAMEIF:'nameif'",
            "          name = (variable",
            "            VARIABLE:'ifname')",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_service_policy_interface",
            "      SERVICE_POLICY:'service-policy'",
            "      name = (variable",
            "        VARIABLE:'some-interface-policy')",
            "      INTERFACE:'interface'",
            "      iface = (interface_name",
            "        VARIABLE:'ifname')",
            "      NEWLINE:'\\n'))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/asa_nat" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        ASA:'ASA'",
            "        VARIABLE:'Version'",
            "        FLOAT:'9.9'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'asa_nat'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_asa_twice_nat",
            "      NAT:'nat'",
            "      (asa_nat_ifaces",
            "        PAREN_LEFT:'('",
            "        real_if = (variable",
            "          ANY:'any')",
            "        COMMA:','",
            "        mapped_if = (variable",
            "          ANY:'any')",
            "        PAREN_RIGHT:')')",
            "      SOURCE:'source'",
            "      (asa_twice_nat_dynamic",
            "        DYNAMIC:'dynamic'",
            "        real_src = (variable",
            "          VARIABLE:'source-net')",
            "        (asa_nat_pat_pool",
            "          PAT_POOL:'pat-pool'",
            "          pat_obj = (variable",
            "            POOL:'pool')",
            "          BLOCK_ALLOCATION:'block-allocation'",
            "          ROUND_ROBIN:'round-robin'))",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_asa_twice_nat",
            "      NAT:'nat'",
            "      (asa_nat_ifaces",
            "        PAREN_LEFT:'('",
            "        real_if = (variable",
            "          INSIDE:'inside')",
            "        COMMA:','",
            "        mapped_if = (variable",
            "          OUTSIDE:'outside')",
            "        PAREN_RIGHT:')')",
            "      SOURCE:'source'",
            "      (asa_twice_nat_dynamic",
            "        DYNAMIC:'dynamic'",
            "        real_src = (variable",
            "          VARIABLE:'net1')",
            "        mapped_src = (variable",
            "          VARIABLE:'net2')",
            "        mapped_src_iface = INTERFACE:'interface')",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_asa_twice_nat",
            "      NAT:'nat'",
            "      (asa_nat_ifaces",
            "        PAREN_LEFT:'('",
            "        real_if = (variable",
            "          INSIDE:'inside')",
            "        COMMA:','",
            "        mapped_if = (variable",
            "          OUTSIDE:'outside')",
            "        PAREN_RIGHT:')')",
            "      SOURCE:'source'",
            "      (asa_twice_nat_dynamic",
            "        DYNAMIC:'dynamic'",
            "        real_src = (variable",
            "          VARIABLE:'net1')",
            "        mapped_src = (variable",
            "          INTERFACE:'interface'))",
            "      (asa_twice_nat_destination",
            "        DESTINATION:'destination'",
            "        STATIC:'static'",
            "        mapped_dst = (variable",
            "          INTERFACE:'interface')",
            "        real_dst = (variable",
            "          VARIABLE:'net2'))",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_asa_twice_nat",
            "      NAT:'nat'",
            "      (asa_nat_ifaces",
            "        PAREN_LEFT:'('",
            "        real_if = (variable",
            "          INSIDE:'inside')",
            "        COMMA:','",
            "        mapped_if = (variable",
            "          OUTSIDE:'outside')",
            "        PAREN_RIGHT:')')",
            "      SOURCE:'source'",
            "      (asa_twice_nat_static",
            "        STATIC:'static'",
            "        real_src = (variable",
            "          VARIABLE:'net1')",
            "        mapped_src = (variable",
            "          VARIABLE:'net2'))",
            "      (asa_nat_optional_args",
            "        ROUTE_LOOKUP:'route-lookup')",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_asa_twice_nat",
            "      NAT:'nat'",
            "      SOURCE:'source'",
            "      (asa_twice_nat_dynamic",
            "        DYNAMIC:'dynamic'",
            "        real_src = (variable",
            "          VARIABLE:'source-net')",
            "        (asa_nat_pat_pool",
            "          PAT_POOL:'pat-pool'",
            "          pat_obj = (variable",
            "            POOL:'pool')",
            "          EXTENDED:'extended'",
            "          FLAT:'flat'",
            "          INCLUDE_RESERVE:'include-reserve'))",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_asa_twice_nat",
            "      NAT:'nat'",
            "      SOURCE:'source'",
            "      (asa_twice_nat_static",
            "        STATIC:'static'",
            "        real_src = (variable",
            "          VARIABLE:'net1')",
            "        mapped_src = (variable",
            "          VARIABLE:'net2'))",
            "      (asa_twice_nat_destination",
            "        DESTINATION:'destination'",
            "        STATIC:'static'",
            "        mapped_dst = (variable",
            "          VARIABLE:'net3')",
            "        real_dst = (variable",
            "          VARIABLE:'net4'))",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_asa_twice_nat",
            "      NAT:'nat'",
            "      SOURCE:'source'",
            "      (asa_twice_nat_static",
            "        STATIC:'static'",
            "        real_src = (variable",
            "          VARIABLE:'net1')",
            "        mapped_src = (variable",
            "          VARIABLE:'net2'))",
            "      (asa_nat_optional_args",
            "        DNS:'dns')",
            "      (asa_nat_optional_args",
            "        NO_PROXY_ARP:'no-proxy-arp')",
            "      (asa_nat_optional_args",
            "        UNIDIRECTIONAL:'unidirectional')",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_asa_twice_nat",
            "      NAT:'nat'",
            "      SOURCE:'source'",
            "      (asa_twice_nat_static",
            "        STATIC:'static'",
            "        real_src = (variable",
            "          VARIABLE:'net1')",
            "        mapped_src = (variable",
            "          VARIABLE:'net2'))",
            "      (asa_twice_nat_service",
            "        SERVICE:'service'",
            "        svc_obj1 = (variable",
            "          VARIABLE:'service1')",
            "        svc_obj2 = (variable",
            "          VARIABLE:'service2'))",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_object",
            "      OBJECT:'object'",
            "      (o_network",
            "        NETWORK:'network'",
            "        name = (variable_permissive",
            "          VARIABLE:'source-real')",
            "        NEWLINE:'\\n'",
            "        (on_nat",
            "          NAT:'nat'",
            "          (asa_nat_ifaces",
            "            PAREN_LEFT:'('",
            "            real_if = (variable",
            "              INSIDE:'inside')",
            "            COMMA:','",
            "            mapped_if = (variable",
            "              OUTSIDE:'outside')",
            "            PAREN_RIGHT:')')",
            "          (onn_dynamic",
            "            DYNAMIC:'dynamic'",
            "            mapped_iface = INTERFACE:'interface')",
            "          NEWLINE:'\\n')",
            "        (on_nat",
            "          NAT:'nat'",
            "          (asa_nat_ifaces",
            "            PAREN_LEFT:'('",
            "            real_if = (variable",
            "              INSIDE:'inside')",
            "            COMMA:','",
            "            mapped_if = (variable",
            "              OUTSIDE:'outside')",
            "            PAREN_RIGHT:')')",
            "          (onn_dynamic",
            "            DYNAMIC:'dynamic'",
            "            host_ip = IP_ADDRESS:'1.1.1.1')",
            "          NEWLINE:'\\n')",
            "        (on_nat",
            "          NAT:'nat'",
            "          (asa_nat_ifaces",
            "            PAREN_LEFT:'('",
            "            real_if = (variable",
            "              INSIDE:'inside')",
            "            COMMA:','",
            "            mapped_if = (variable",
            "              OUTSIDE:'outside')",
            "            PAREN_RIGHT:')')",
            "          (onn_dynamic",
            "            DYNAMIC:'dynamic'",
            "            obj = (variable",
            "              VARIABLE:'source-mapped')",
            "            DNS:'dns')",
            "          NEWLINE:'\\n')",
            "        (on_nat",
            "          NAT:'nat'",
            "          (asa_nat_ifaces",
            "            PAREN_LEFT:'('",
            "            real_if = (variable",
            "              INSIDE:'inside')",
            "            COMMA:','",
            "            mapped_if = (variable",
            "              ANY:'any')",
            "            PAREN_RIGHT:')')",
            "          (onn_dynamic",
            "            DYNAMIC:'dynamic'",
            "            obj = (variable",
            "              VARIABLE:'source-mapped')",
            "            mapped_iface_after = INTERFACE:'interface')",
            "          NEWLINE:'\\n')",
            "        (on_nat",
            "          NAT:'nat'",
            "          (asa_nat_ifaces",
            "            PAREN_LEFT:'('",
            "            real_if = (variable",
            "              ANY:'any')",
            "            COMMA:','",
            "            mapped_if = (variable",
            "              OUTSIDE:'outside')",
            "            PAREN_RIGHT:')')",
            "          (onn_dynamic",
            "            DYNAMIC:'dynamic'",
            "            (asa_nat_pat_pool",
            "              PAT_POOL:'pat-pool'",
            "              pat_obj = (variable",
            "                VARIABLE:'WORD')",
            "              INTERFACE:'interface'",
            "              FLAT:'flat'))",
            "          NEWLINE:'\\n')",
            "        (on_nat",
            "          NAT:'nat'",
            "          (asa_nat_ifaces",
            "            PAREN_LEFT:'('",
            "            real_if = (variable",
            "              ANY:'any')",
            "            COMMA:','",
            "            mapped_if = (variable",
            "              ANY:'any')",
            "            PAREN_RIGHT:')')",
            "          (onn_static",
            "            STATIC:'static'",
            "            INTERFACE:'interface')",
            "          NEWLINE:'\\n')",
            "        (on_nat",
            "          NAT:'nat'",
            "          (onn_static",
            "            STATIC:'static'",
            "            obj = (variable",
            "              VARIABLE:'source-mapped')",
            "            (asa_nat_optional_args",
            "              NO_PROXY_ARP:'no-proxy-arp')",
            "            (asa_nat_optional_args",
            "              ROUTE_LOOKUP:'route-lookup'))",
            "          NEWLINE:'\\n')",
            "        (on_nat",
            "          NAT:'nat'",
            "          (onn_static",
            "            STATIC:'static'",
            "            obj = (variable",
            "              VARIABLE:'source-mapped')",
            "            (asa_object_nat_service",
            "              SERVICE:'service'",
            "              SCTP:'sctp'",
            "              real_port = (port",
            "                FTP:'ftp')",
            "              mapped_port = (port",
            "                BGP:'bgp')))",
            "          NEWLINE:'\\n'))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/asa_object_groups" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        ASA:'ASA'",
            "        VARIABLE:'Version'",
            "        FLOAT:'9.9'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'asa_object_groups'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_object",
            "      OBJECT:'object'",
            "      (o_network",
            "        NETWORK:'network'",
            "        name = (variable_permissive",
            "          VARIABLE:'server02')",
            "        NEWLINE:'\\n'",
            "        (on_host",
            "          HOST:'host'",
            "          address = IP_ADDRESS:'192.168.126.64'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (extended_access_list_stanza",
            "      ACCESS_LIST:'access-list'",
            "      name = (variable_aclname",
            "        VARIABLE:'ALLOW_SERVER02')",
            "      EXTENDED:'extended'",
            "      (extended_access_list_tail",
            "        ala = (access_list_action",
            "          PERMIT:'permit')",
            "        prot = (protocol",
            "          TCP:'tcp')",
            "        srcipr = (access_list_ip_range",
            "          ANY:'any')",
            "        dstipr = (access_list_ip_range",
            "          OBJECT:'object'",
            "          obj = (variable",
            "            VARIABLE:'server02'))",
            "        NEWLINE:'\\n\\n')))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/asa_ospf" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'asa_ospf'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        ASA:'ASA'",
            "        VARIABLE:'Version'",
            "        FLOAT:'9.7'",
            "        PAREN_LEFT:'('",
            "        DEC:'1'",
            "        PAREN_RIGHT:')'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_interface",
            "      INTERFACE:'interface'",
            "      iname = (interface_name",
            "        name_prefix_alpha = M_Interface_PREFIX:'Ethernet'  <== mode:M_Interface",
            "        DEC:'0'  <== mode:M_Interface",
            "        FORWARD_SLASH:'/'  <== mode:M_Interface",
            "        (range",
            "          (subrange",
            "            low = DEC:'0'  <== mode:M_Interface)))",
            "      NEWLINE:'\\n'  <== mode:M_Interface",
            "      (if_inner",
            "        (if_ip_address",
            "          IP:'ip'",
            "          ADDRESS:'address'",
            "          ip = IP_ADDRESS:'192.168.1.0'",
            "          subnet = IP_ADDRESS:'255.255.255.0'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_nameif",
            "          NAMEIF:'nameif'",
            "          name = (variable",
            "            VARIABLE:'blah')",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_security_level",
            "          SECURITY_LEVEL:'security-level'",
            "          level = DEC:'0'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_router_ospf",
            "      ROUTER:'router'",
            "      OSPF:'ospf'",
            "      name = (variable",
            "        DEC:'1')",
            "      NEWLINE:'\\n'",
            "      (ro_network",
            "        NETWORK:'network'",
            "        ip = IP_ADDRESS:'192.168.1.0'",
            "        wildcard = IP_ADDRESS:'255.255.255.0'",
            "        AREA:'area'",
            "        area_int = DEC:'0'",
            "        NEWLINE:'\\n')))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/asa_ssh" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'asa_ssh'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_ssh",
            "      SSH:'ssh'",
            "      (ssh_null",
            "        STRICTHOSTKEYCHECK:'stricthostkeycheck'",
            "        (null_rest_of_line",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_access_line",
            "      linetype = SSH:'ssh'",
            "      (allowed_ip",
            "        hostname = IP_ADDRESS:'1.2.3.0'",
            "        mask = IP_ADDRESS:'255.255.255.0'",
            "        iname = (variable",
            "          INSIDE:'inside')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_access_line",
            "      linetype = SSH:'ssh'",
            "      (allowed_ip",
            "        hostname = IP_ADDRESS:'1.2.3.0'",
            "        mask = IP_ADDRESS:'255.255.255.0'",
            "        iname = (variable",
            "          MGMT:'mgmt')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_ssh",
            "      SSH:'ssh'",
            "      (ssh_null",
            "        KEY_EXCHANGE:'key-exchange'",
            "        (null_rest_of_line",
            "          GROUP:'group'",
            "          VARIABLE:'dh-group1-sha1'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        NO:'no'",
            "        SSH:'ssh'",
            "        STRICTHOSTKEYCHECK:'stricthostkeycheck'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_ssh",
            "      SSH:'ssh'",
            "      (ssh_timeout",
            "        TIMEOUT:'timeout'",
            "        DEC:'30'",
            "        NEWLINE:'\\n')))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/banner" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      BANNER:'banner'",
            "      NEWLINE:'\\n'  <== mode:M_Banner))",
            "  (stanza",
            "    (banner_stanza",
            "      BANNER:'banner'",
            "      (banner_type",
            "        LOGIN:'login'  <== mode:M_Banner)",
            "      (banner",
            "        NEWLINE:'\\n'  <== mode:M_BannerText",
            "        M_MOTD_EOF_MOTD:'THIS IS AN ARISTA STYLE BANNER\\n\\nNOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE\\nUnauthorized access and/or use prohibited. All access and/or use subject to monitoring.\\nNOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE\\n\\n'  <== mode:M_MOTD_EOF",
            "        EOF_LITERAL:'EOF'  <== mode:M_MOTD_EOF",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (banner_stanza",
            "      BANNER:'banner'",
            "      (banner_type",
            "        MOTD:'motd'  <== mode:M_Banner)",
            "      (banner",
            "        ESCAPE_C:'^C'  <== mode:M_BannerText",
            "        M_MOTD_C_MOTD:'\\nTHIS BANNER IS DELIMITED BY HASHES (nexus)\\n\\nNOTICE   NOTICE   NOTICE   NOTICE   NOTICE   NOTICE   NOTICE   NOTICE   NOTICE\\n\\nUnauthorized access and/or use prohibited.\\nAll access and/or use subject to monitoring.\\n\\nNOTICE   NOTICE   NOTICE   NOTICE   NOTICE   NOTICE   NOTICE   NOTICE   NOTICE\\n'  <== mode:M_MOTD_C",
            "        ESCAPE_C:'^C'  <== mode:M_MOTD_C",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (banner_stanza",
            "      BANNER:'banner'",
            "      (banner_type",
            "        MOTD:'motd'  <== mode:M_Banner)",
            "      (banner",
            "        ESCAPE_C:'^C'  <== mode:M_BannerText",
            "        M_MOTD_C_MOTD:'\\nTHIS BANNER's ESCAPE_C DOES NOT START ON A NEWLINE\\nIt has a has (#) character in it\\nNOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE\\nUnauthorized a'  <== mode:M_MOTD_C",
            "        ESCAPE_C:'^C'  <== mode:M_MOTD_C",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (banner_stanza",
            "      BANNER:'banner'",
            "      (banner_type",
            "        MOTD:'motd'  <== mode:M_Banner)",
            "      (banner",
            "        ESCAPE_C:'^C'  <== mode:M_BannerText",
            "        M_MOTD_C_MOTD:'\\nNOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE\\nTHIS BANNER CONTAINS A UNICODE '0003' character (CTRL-C)\\nNOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE\\n'  <== mode:M_MOTD_C",
            "        ESCAPE_C:'^C'  <== mode:M_MOTD_C",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (banner_stanza",
            "      BANNER:'banner'",
            "      (banner_type",
            "        LOGIN:'login'  <== mode:M_Banner)",
            "      (banner",
            "        ESCAPE_C:'^C'  <== mode:M_BannerText",
            "        M_MOTD_C_MOTD:'\\n***************************************************************************\\n*                                                                         *\\n*  This banner was seen in IOS XR                                         *\\n*  It ends with a caret                                                   *\\n*                                                                         *\\n***************************************************************************\\n'  <== mode:M_MOTD_C",
            "        ESCAPE_C:'^C'  <== mode:M_MOTD_C",
            "        NEWLINE:'\\n\\n')))",
            "  (stanza",
            "    (banner_stanza",
            "      BANNER:'banner'",
            "      (banner_type",
            "        MOTD:'motd'  <== mode:M_Banner)",
            "      (banner",
            "        ESCAPE_C:'^'  <== mode:M_BannerText",
            "        M_MOTD_C_MOTD:'=================================================================================                                             \\n                       BLAH BLAH\\n\\n                             BOOP\\n================================================================================='  <== mode:M_MOTD_C",
            "        ESCAPE_C:'^\\n'  <== mode:M_MOTD_C",
            "        NEWLINE:'\\n\\n\\n')))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_trap",
            "          TRAP:'trap'",
            "          (logging_severity",
            "            INFORMATIONAL:'informational')",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        END:'end'",
            "        NEWLINE:'\\n\\n')))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/banner_dos" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'banner_dos'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (banner_stanza",
            "      BANNER:'banner'",
            "      (banner_type",
            "        LOGIN:'login'  <== mode:M_Banner)",
            "      (banner",
            "        NEWLINE:'\\n'  <== mode:M_BannerText",
            "        M_MOTD_EOF_MOTD:'THIS IS AN ARISTA STYLE BANNER\\n\\nNOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE\\nUnauthorized access and/or use prohibited. All access and/or use subject to monitoring.\\nNOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE\\n\\n'  <== mode:M_MOTD_EOF",
            "        EOF_LITERAL:'EOF'  <== mode:M_MOTD_EOF",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (banner_stanza",
            "      BANNER:'banner'",
            "      (banner_type",
            "        MOTD:'motd'  <== mode:M_Banner)",
            "      (banner",
            "        ESCAPE_C:'^C'  <== mode:M_BannerText",
            "        M_MOTD_C_MOTD:'\\nTHIS BANNER IS DELIMITED BY HASHES (nexus)\\n\\nNOTICE   NOTICE   NOTICE   NOTICE   NOTICE   NOTICE   NOTICE   NOTICE   NOTICE\\n\\nUnauthorized access and/or use prohibited.\\nAll access and/or use subject to monitoring.\\n\\nNOTICE   NOTICE   NOTICE   NOTICE   NOTICE   NOTICE   NOTICE   NOTICE   NOTICE\\n'  <== mode:M_MOTD_C",
            "        ESCAPE_C:'^C'  <== mode:M_MOTD_C",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (banner_stanza",
            "      BANNER:'banner'",
            "      (banner_type",
            "        MOTD:'motd'  <== mode:M_Banner)",
            "      (banner",
            "        ESCAPE_C:'^C'  <== mode:M_BannerText",
            "        M_MOTD_C_MOTD:'\\nTHIS BANNER's ESCAPE_C DOES NOT START ON A NEWLINE\\nIt has a has (#) character in it\\nNOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE\\nUnauthorized a'  <== mode:M_MOTD_C",
            "        ESCAPE_C:'^C'  <== mode:M_MOTD_C",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (banner_stanza",
            "      BANNER:'banner'",
            "      (banner_type",
            "        MOTD:'motd'  <== mode:M_Banner)",
            "      (banner",
            "        ESCAPE_C:'^C'  <== mode:M_BannerText",
            "        M_MOTD_C_MOTD:'\\nNOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE\\nTHIS BANNER CONTAINS A UNICODE '0003' character (CTRL-C)\\nNOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE\\n'  <== mode:M_MOTD_C",
            "        ESCAPE_C:'^C'  <== mode:M_MOTD_C",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        END:'end'",
            "        NEWLINE:'\\n\\n')))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/bgp_address_family" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'bgp_address_family'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (router_bgp_stanza",
            "      ROUTER:'router'",
            "      BGP:'bgp'",
            "      procnum = (bgp_asn",
            "        asn = DEC:'1')",
            "      NEWLINE:'\\n'",
            "      (router_bgp_stanza_tail",
            "        (router_id_rb_stanza",
            "          BGP:'bgp'",
            "          (router_id_bgp_tail",
            "            ROUTER_ID:'router-id'",
            "            routerid = IP_ADDRESS:'1.1.1.1'",
            "            NEWLINE:'\\n')))",
            "      (router_bgp_stanza_tail",
            "        (bgp_tail",
            "          (null_bgp_tail",
            "            BGP:'bgp'",
            "            LOG_NEIGHBOR_CHANGES:'log-neighbor-changes'",
            "            (null_rest_of_line",
            "              NEWLINE:'\\n'))))",
            "      (router_bgp_stanza_tail",
            "        (peer_group_creation_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          name = VARIABLE:'as1'  <== mode:M_NEIGHBOR",
            "          PEER_GROUP:'peer-group'",
            "          NEWLINE:'\\n'  <== mode:M_NEIGHBOR))",
            "      (router_bgp_stanza_tail",
            "        (neighbor_flat_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          peergroup = VARIABLE:'as1'  <== mode:M_NEIGHBOR",
            "          (remote_as_bgp_tail",
            "            REMOTE_AS:'remote-as'",
            "            remote = (bgp_asn",
            "              asn = DEC:'1')",
            "            NEWLINE:'\\n')))",
            "      (router_bgp_stanza_tail",
            "        (peer_group_creation_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          name = VARIABLE:'as2'  <== mode:M_NEIGHBOR",
            "          PEER_GROUP:'peer-group'",
            "          NEWLINE:'\\n'  <== mode:M_NEIGHBOR))",
            "      (router_bgp_stanza_tail",
            "        (neighbor_flat_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          peergroup = VARIABLE:'as2'  <== mode:M_NEIGHBOR",
            "          (remote_as_bgp_tail",
            "            REMOTE_AS:'remote-as'",
            "            remote = (bgp_asn",
            "              asn = DEC:'2')",
            "            NEWLINE:'\\n')))",
            "      (router_bgp_stanza_tail",
            "        (peer_group_creation_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          name = VARIABLE:'as3'  <== mode:M_NEIGHBOR",
            "          PEER_GROUP:'peer-group'",
            "          NEWLINE:'\\n'  <== mode:M_NEIGHBOR))",
            "      (router_bgp_stanza_tail",
            "        (neighbor_flat_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          peergroup = VARIABLE:'as3'  <== mode:M_NEIGHBOR",
            "          (remote_as_bgp_tail",
            "            REMOTE_AS:'remote-as'",
            "            remote = (bgp_asn",
            "              asn = DEC:'3')",
            "            NEWLINE:'\\n')))",
            "      (router_bgp_stanza_tail",
            "        (peer_group_assignment_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          address = IP_ADDRESS:'1.10.1.1'  <== mode:M_NEIGHBOR",
            "          PEER_GROUP:'peer-group'",
            "          name = (variable",
            "            VARIABLE:'as1'  <== mode:M_NEIGHBOR)",
            "          NEWLINE:'\\n'))",
            "      (router_bgp_stanza_tail",
            "        (neighbor_flat_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          ip = IP_ADDRESS:'1.10.1.1'  <== mode:M_NEIGHBOR",
            "          (bgp_tail",
            "            (update_source_bgp_tail",
            "              UPDATE_SOURCE:'update-source'",
            "              source = (interface_name",
            "                name_prefix_alpha = M_Interface_PREFIX:'Loopback'  <== mode:M_Interface",
            "                (range",
            "                  (subrange",
            "                    low = DEC:'0'  <== mode:M_Interface)))",
            "              NEWLINE:'\\n'  <== mode:M_Interface))))",
            "      (router_bgp_stanza_tail",
            "        (peer_group_assignment_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          address = IP_ADDRESS:'10.12.11.2'  <== mode:M_NEIGHBOR",
            "          PEER_GROUP:'peer-group'",
            "          name = (variable",
            "            VARIABLE:'as2'  <== mode:M_NEIGHBOR)",
            "          NEWLINE:'\\n'))",
            "      (router_bgp_stanza_tail",
            "        (peer_group_creation_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          name = VARIABLE:'dcp-rrs'  <== mode:M_NEIGHBOR",
            "          PEER_GROUP:'peer-group'",
            "          NLRI:'nlri'  <== mode:M_NEIGHBOR",
            "          UNICAST:'unicast'",
            "          MULTICAST:'multicast'",
            "          NEWLINE:'\\n'))",
            "      (router_bgp_stanza_tail",
            "        (neighbor_flat_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          ip = IP_ADDRESS:'13.16.3.16'  <== mode:M_NEIGHBOR",
            "          (bgp_tail",
            "            (null_bgp_tail",
            "              CAPABILITY:'capability'",
            "              (null_rest_of_line",
            "                VARIABLE:'orf'",
            "                PREFIX_LIST:'prefix-list'",
            "                VARIABLE:'receive'  <== mode:M_Name",
            "                NEWLINE:'\\n')))))",
            "      (router_bgp_stanza_tail",
            "        (neighbor_flat_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          peergroup = VARIABLE:'as1'  <== mode:M_NEIGHBOR",
            "          (bgp_tail",
            "            (null_bgp_tail",
            "              FAIL_OVER:'fail-over'",
            "              (null_rest_of_line",
            "                BFD_ENABLE:'bfd-enable'",
            "                NEWLINE:'\\n')))))",
            "      (router_bgp_stanza_tail",
            "        (bgp_tail",
            "          (maximum_paths_bgp_tail",
            "            MAXIMUM_PATHS:'maximum-paths'",
            "            paths = DEC:'5'",
            "            NEWLINE:'\\n')))",
            "      (router_bgp_stanza_tail",
            "        (bgp_tail",
            "          (null_bgp_tail",
            "            TABLE_MAP:'table-map'",
            "            (null_rest_of_line",
            "              VARIABLE:'traffic-types'",
            "              NEWLINE:'\\n'))))",
            "      (router_bgp_stanza_tail",
            "        (address_family_rb_stanza",
            "          (address_family_header",
            "            ADDRESS_FAMILY:'address-family'",
            "            af = (bgp_address_family",
            "              IPV4:'ipv4')",
            "            NEWLINE:'\\n')",
            "          (neighbor_flat_rb_stanza",
            "            NEIGHBOR:'neighbor'",
            "            peergroup = VARIABLE:'as1'  <== mode:M_NEIGHBOR",
            "            (bgp_tail",
            "              (send_community_bgp_tail",
            "                SEND_COMMUNITY:'send-community'",
            "                NEWLINE:'\\n')))",
            "          (neighbor_flat_rb_stanza",
            "            NEIGHBOR:'neighbor'",
            "            peergroup = VARIABLE:'as2'  <== mode:M_NEIGHBOR",
            "            (bgp_tail",
            "              (send_community_bgp_tail",
            "                SEND_COMMUNITY:'send-community'",
            "                NEWLINE:'\\n')))",
            "          (neighbor_flat_rb_stanza",
            "            NEIGHBOR:'neighbor'",
            "            peergroup = VARIABLE:'as3'  <== mode:M_NEIGHBOR",
            "            (bgp_tail",
            "              (send_community_bgp_tail",
            "                SEND_COMMUNITY:'send-community'",
            "                NEWLINE:'\\n')))",
            "          (neighbor_flat_rb_stanza",
            "            NEIGHBOR:'neighbor'",
            "            peergroup = VARIABLE:'as2'  <== mode:M_NEIGHBOR",
            "            (bgp_tail",
            "              (route_map_bgp_tail",
            "                ROUTE_MAP:'route-map'",
            "                name = (variable",
            "                  VARIABLE:'as1_to_as2'  <== mode:M_RouteMap)",
            "                OUT:'out'",
            "                NEWLINE:'\\n')))",
            "          (neighbor_flat_rb_stanza",
            "            NEIGHBOR:'neighbor'",
            "            peergroup = VARIABLE:'as2'  <== mode:M_NEIGHBOR",
            "            (bgp_tail",
            "              (route_map_bgp_tail",
            "                ROUTE_MAP:'route-map'",
            "                name = (variable",
            "                  VARIABLE:'as2_to_as1'  <== mode:M_RouteMap)",
            "                IN:'in'",
            "                NEWLINE:'\\n')))",
            "          (neighbor_flat_rb_stanza",
            "            NEIGHBOR:'neighbor'",
            "            peergroup = VARIABLE:'as3'  <== mode:M_NEIGHBOR",
            "            (bgp_tail",
            "              (route_map_bgp_tail",
            "                ROUTE_MAP:'route-map'",
            "                name = (variable",
            "                  VARIABLE:'as1_to_as3'  <== mode:M_RouteMap)",
            "                OUT:'out'",
            "                NEWLINE:'\\n')))",
            "          (neighbor_flat_rb_stanza",
            "            NEIGHBOR:'neighbor'",
            "            peergroup = VARIABLE:'as3'  <== mode:M_NEIGHBOR",
            "            (bgp_tail",
            "              (route_map_bgp_tail",
            "                ROUTE_MAP:'route-map'",
            "                name = (variable",
            "                  VARIABLE:'as3_to_as1'  <== mode:M_RouteMap)",
            "                IN:'in'",
            "                NEWLINE:'\\n')))",
            "          (neighbor_flat_rb_stanza",
            "            NEIGHBOR:'neighbor'",
            "            ip = IP_ADDRESS:'1.10.1.1'  <== mode:M_NEIGHBOR",
            "            (bgp_tail",
            "              (activate_bgp_tail",
            "                ACTIVATE:'activate'",
            "                NEWLINE:'\\n')))",
            "          (neighbor_flat_rb_stanza",
            "            NEIGHBOR:'neighbor'",
            "            ip = IP_ADDRESS:'10.12.11.2'  <== mode:M_NEIGHBOR",
            "            (bgp_tail",
            "              (activate_bgp_tail",
            "                ACTIVATE:'activate'",
            "                NEWLINE:'\\n')))",
            "          (bgp_tail",
            "            (maximum_paths_bgp_tail",
            "              MAXIMUM_PATHS:'maximum-paths'",
            "              paths = DEC:'5'",
            "              NEWLINE:'\\n'))",
            "          (bgp_tail",
            "            (null_bgp_tail",
            "              NO:'no'",
            "              AUTO_SUMMARY:'auto-summary'",
            "              (null_rest_of_line",
            "                NEWLINE:'\\n')))",
            "          (bgp_tail",
            "            (null_bgp_tail",
            "              NO:'no'",
            "              SYNCHRONIZATION:'synchronization'",
            "              (null_rest_of_line",
            "                NEWLINE:'\\n')))",
            "          (bgp_tail",
            "            (null_bgp_tail",
            "              BGP:'bgp'",
            "              DAMPENING:'dampening'",
            "              (null_rest_of_line",
            "                NEWLINE:'\\n')))",
            "          (bgp_tail",
            "            (null_bgp_tail",
            "              BGP:'bgp'",
            "              REDISTRIBUTE_INTERNAL:'redistribute-internal'",
            "              (null_rest_of_line",
            "                NEWLINE:'\\n')))",
            "          (bgp_tail",
            "            (network_bgp_tail",
            "              NETWORK:'network'",
            "              ip = IP_ADDRESS:'1.0.1.0'",
            "              MASK:'mask'",
            "              mask = IP_ADDRESS:'255.255.255.0'",
            "              NEWLINE:'\\n'))",
            "          (bgp_tail",
            "            (network_bgp_tail",
            "              NETWORK:'network'",
            "              ip = IP_ADDRESS:'1.0.2.0'",
            "              MASK:'mask'",
            "              mask = IP_ADDRESS:'255.255.255.0'",
            "              NEWLINE:'\\n'))",
            "          (address_family_footer",
            "            EXIT_ADDRESS_FAMILY:'exit-address-family'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        IP:'ip'",
            "        FORWARD_PROTOCOL:'forward-protocol'",
            "        ND:'nd'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        END:'end'",
            "        NEWLINE:'\\n\\n\\n')))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/bgp_default_originate_policy" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'bgp_default_originate_policy'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (router_bgp_stanza",
            "      ROUTER:'router'",
            "      BGP:'bgp'",
            "      procnum = (bgp_asn",
            "        asn = DEC:'1')",
            "      NEWLINE:'\\n'",
            "      (router_bgp_stanza_tail",
            "        (neighbor_group_rb_stanza",
            "          NEIGHBOR_GROUP:'neighbor-group'",
            "          name = (variable",
            "            VARIABLE:'ama-coe')",
            "          NEWLINE:'\\n'",
            "          (remote_as_bgp_tail",
            "            REMOTE_AS:'remote-as'",
            "            remote = (bgp_asn",
            "              asn = DEC:'64666')",
            "            NEWLINE:'\\n')))",
            "      (router_bgp_stanza_tail",
            "        (bgp_tail",
            "          (description_bgp_tail",
            "            (description_line",
            "              DESCRIPTION:'description'",
            "              text = RAW_TEXT:' amador coe bgp gw'  <== mode:M_Description",
            "              NEWLINE:'\\n'  <== mode:M_Description))))",
            "      (router_bgp_stanza_tail",
            "        (address_family_rb_stanza",
            "          (address_family_header",
            "            ADDRESS_FAMILY:'address-family'",
            "            af = (bgp_address_family",
            "              IPV4:'ipv4'",
            "              UNICAST:'unicast')",
            "            NEWLINE:'\\n')",
            "          (bgp_tail",
            "            (send_community_bgp_tail",
            "              SEND_COMMUNITY_EBGP:'send-community-ebgp'",
            "              NEWLINE:'\\n'))",
            "          (bgp_tail",
            "            (route_policy_bgp_tail",
            "              ROUTE_POLICY:'route-policy'",
            "              name = (variable",
            "                VARIABLE:'cust_v4_in')",
            "              PAREN_LEFT:'('",
            "              (route_policy_params_list",
            "                (variable",
            "                  VARIABLE:'ama-coe-v4')",
            "                COMMA:','",
            "                (variable",
            "                  VARIABLE:'ama-coe-as-path')",
            "                COMMA:','",
            "                (variable",
            "                  VARIABLE:'ama-coe-no-auth')",
            "                COMMA:','",
            "                (variable",
            "                  VARIABLE:'ama-coe-need-auth')",
            "                COMMA:','",
            "                (variable",
            "                  DEC:'65517')",
            "                COMMA:','",
            "                (variable",
            "                  VARIABLE:'ama-coe-isp-authorized'))",
            "              PAREN_RIGHT:')'",
            "              IN:'in'",
            "              NEWLINE:'\\n'))",
            "          (bgp_tail",
            "            (null_bgp_tail",
            "              MAXIMUM_PREFIX:'maximum-prefix'",
            "              (null_rest_of_line",
            "                DEC:'500'",
            "                DEC:'80'",
            "                RESTART:'restart'",
            "                DEC:'60'",
            "                NEWLINE:'\\n')))",
            "          (bgp_tail",
            "            (route_policy_bgp_tail",
            "              ROUTE_POLICY:'route-policy'",
            "              name = (variable",
            "                VARIABLE:'EBGP_CUST_FULL_v4')",
            "              OUT:'out'",
            "              NEWLINE:'\\n'))",
            "          (bgp_tail",
            "            (default_originate_bgp_tail",
            "              DEFAULT_ORIGINATE:'default-originate'",
            "              ROUTE_POLICY:'route-policy'",
            "              policy = VARIABLE:'DEFAULT_ORIGINATE'",
            "              NEWLINE:'\\n'))",
            "          (bgp_tail",
            "            (remove_private_as_bgp_tail",
            "              REMOVE_PRIVATE_AS:'remove-private-AS'",
            "              NEWLINE:'\\n'))",
            "          (bgp_tail",
            "            (null_bgp_tail",
            "              SOFT_RECONFIGURATION:'soft-reconfiguration'",
            "              (null_rest_of_line",
            "                INBOUND:'inbound'",
            "                ALWAYS:'always'",
            "                NEWLINE:'\\n')))",
            "          (address_family_footer)))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/bgp_foundry" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'bgp_foundry'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (router_bgp_stanza",
            "      ROUTER:'router'",
            "      BGP:'bgp'",
            "      NEWLINE:'\\n'",
            "      (router_bgp_stanza_tail",
            "        (bgp_tail",
            "          (local_as_bgp_tail",
            "            LOCAL_AS:'local-as'",
            "            (bgp_asn",
            "              asn = DEC:'2153')",
            "            NEWLINE:'\\n')))",
            "      (router_bgp_stanza_tail",
            "        (bgp_tail",
            "          (null_bgp_tail",
            "            BFD_ENABLE:'bfd-enable'",
            "            (null_rest_of_line",
            "              NEWLINE:'\\n'))))",
            "      (router_bgp_stanza_tail",
            "        (peer_group_creation_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          name = VARIABLE:'ucr'  <== mode:M_NEIGHBOR",
            "          PEER_GROUP:'peer-group'",
            "          NEWLINE:'\\n'  <== mode:M_NEIGHBOR))",
            "      (router_bgp_stanza_tail",
            "        (address_family_rb_stanza",
            "          (address_family_header",
            "            ADDRESS_FAMILY:'address-family'",
            "            af = (bgp_address_family",
            "              IPV4:'ipv4'",
            "              UNICAST:'unicast')",
            "            NEWLINE:'\\n')",
            "          (bgp_tail",
            "            (null_bgp_tail",
            "              GRACEFUL_RESTART:'graceful-restart'",
            "              (null_rest_of_line",
            "                RESTART_TIME:'restart-time'",
            "                DEC:'20'",
            "                NEWLINE:'\\n')))",
            "          (neighbor_flat_rb_stanza",
            "            NEIGHBOR:'neighbor'",
            "            peergroup = VARIABLE:'ucr'  <== mode:M_NEIGHBOR",
            "            (bgp_tail",
            "              (route_map_bgp_tail",
            "                ROUTE_MAP:'route-map'",
            "                IN:'in'  <== mode:M_RouteMap",
            "                name = (variable",
            "                  VARIABLE:'from_ucr'  <== mode:M_RouteMap)",
            "                NEWLINE:'\\n')))",
            "          (address_family_footer",
            "            EXIT_ADDRESS_FAMILY:'exit-address-family'",
            "            NEWLINE:'\\n')))",
            "      (router_bgp_stanza_tail",
            "        (address_family_rb_stanza",
            "          (address_family_header",
            "            ADDRESS_FAMILY:'address-family'",
            "            af = (bgp_address_family",
            "              IPV4:'ipv4'",
            "              MULTICAST:'multicast')",
            "            NEWLINE:'\\n')",
            "          (bgp_tail",
            "            (null_bgp_tail",
            "              DAMPENING:'dampening'",
            "              (null_rest_of_line",
            "                NEWLINE:'\\n')))",
            "          (bgp_tail",
            "            (network_bgp_tail",
            "              NETWORK:'network'",
            "              prefix = IP_PREFIX:'137.164.17.0/24'",
            "              ROUTE_MAP:'route-map'",
            "              mapname = (variable",
            "                VARIABLE:'tag-bbone-prefixes'  <== mode:M_RouteMap)",
            "              NEWLINE:'\\n'))",
            "          (address_family_footer",
            "            EXIT_ADDRESS_FAMILY:'exit-address-family'",
            "            NEWLINE:'\\n')))",
            "      (router_bgp_stanza_tail",
            "        (address_family_rb_stanza",
            "          (address_family_header",
            "            ADDRESS_FAMILY:'address-family'",
            "            af = (bgp_address_family",
            "              L2VPN:'l2vpn'",
            "              VPLS:'vpls')",
            "            NEWLINE:'\\n')",
            "          (address_family_footer",
            "            EXIT_ADDRESS_FAMILY:'exit-address-family'",
            "            NEWLINE:'\\n')))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/bgp_nsr" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'bgp_nsr'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (router_bgp_stanza",
            "      ROUTER:'router'",
            "      BGP:'bgp'",
            "      procnum = (bgp_asn",
            "        asn = DEC:'2152')",
            "      NEWLINE:'\\n'",
            "      (router_bgp_stanza_tail",
            "        (bgp_tail",
            "          (null_bgp_tail",
            "            NSR:'nsr'",
            "            (null_rest_of_line",
            "              NEWLINE:'\\n'))))",
            "      (router_bgp_stanza_tail",
            "        (bgp_tail",
            "          (null_bgp_tail",
            "            TIMERS:'timers'",
            "            (null_rest_of_line",
            "              BGP:'bgp'",
            "              DEC:'10'",
            "              DEC:'30'",
            "              NEWLINE:'\\n'))))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/bgp_route_policy" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'bgp_route_policy'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (router_bgp_stanza",
            "      ROUTER:'router'",
            "      BGP:'bgp'",
            "      procnum = (bgp_asn",
            "        asn = DEC:'2152')",
            "      NEWLINE:'\\n'",
            "      (router_bgp_stanza_tail",
            "        (bgp_tail",
            "          (null_bgp_tail",
            "            NSR:'nsr'",
            "            (null_rest_of_line",
            "              NEWLINE:'\\n'))))",
            "      (router_bgp_stanza_tail",
            "        (bgp_tail",
            "          (null_bgp_tail",
            "            BGP:'bgp'",
            "            DEFAULT:'default'",
            "            (null_rest_of_line",
            "              LOCAL_PREFERENCE:'local-preference'",
            "              DEC:'100'",
            "              NEWLINE:'\\n'))))",
            "      (router_bgp_stanza_tail",
            "        (address_family_rb_stanza",
            "          (address_family_header",
            "            ADDRESS_FAMILY:'address-family'",
            "            af = (bgp_address_family",
            "              IPV6:'ipv6'",
            "              UNICAST:'unicast')",
            "            NEWLINE:'\\n')",
            "          (bgp_tail",
            "            (null_bgp_tail",
            "              BGP:'bgp'",
            "              DAMPENING:'dampening'",
            "              (null_rest_of_line",
            "                DEC:'15'",
            "                DEC:'750'",
            "                DEC:'6000'",
            "                DEC:'60'",
            "                NEWLINE:'\\n')))",
            "          (bgp_tail",
            "            (null_bgp_tail",
            "              BGP:'bgp'",
            "              CLIENT_TO_CLIENT:'client-to-client'",
            "              (null_rest_of_line",
            "                REFLECTION:'reflection'",
            "                DISABLE:'disable'",
            "                NEWLINE:'\\n')))",
            "          (bgp_tail",
            "            (maximum_paths_bgp_tail",
            "              MAXIMUM_PATHS:'maximum-paths'",
            "              EBGP:'ebgp'",
            "              paths = DEC:'4'",
            "              SELECTIVE:'selective'",
            "              NEWLINE:'\\n'))",
            "          (bgp_tail",
            "            (network6_bgp_tail",
            "              NETWORK:'network'",
            "              prefix = IPV6_PREFIX:'2607:f380::/32'",
            "              ROUTE_POLICY:'route-policy'",
            "              policyname = VARIABLE:'originate-internal-ipv6'",
            "              NEWLINE:'\\n'))",
            "          (bgp_tail",
            "            (redistribute_connected_bgp_tail",
            "              REDISTRIBUTE:'redistribute'",
            "              CONNECTED:'connected'",
            "              ROUTE_POLICY:'route-policy'",
            "              policy = (variable",
            "                VARIABLE:'static-connected-to-bgp')",
            "              NEWLINE:'\\n'))",
            "          (address_family_footer)))",
            "      (router_bgp_stanza_tail",
            "        (address_family_rb_stanza",
            "          (address_family_header",
            "            ADDRESS_FAMILY:'address-family'",
            "            af = (bgp_address_family",
            "              IPV4:'ipv4'",
            "              MULTICAST:'multicast')",
            "            NEWLINE:'\\n')",
            "          (bgp_tail",
            "            (null_bgp_tail",
            "              DISTANCE:'distance'",
            "              (null_rest_of_line",
            "                BGP:'bgp'",
            "                DEC:'20'",
            "                DEC:'20'",
            "                DEC:'1'",
            "                NEWLINE:'\\n')))",
            "          (bgp_tail",
            "            (redistribute_static_bgp_tail",
            "              REDISTRIBUTE:'redistribute'",
            "              STATIC:'static'",
            "              ROUTE_POLICY:'route-policy'",
            "              policy = VARIABLE:'static-to-bgp'",
            "              NEWLINE:'\\n'))",
            "          (address_family_footer)))",
            "      (router_bgp_stanza_tail",
            "        (neighbor_block_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          ip_address = IP_ADDRESS:'64.57.21.1'  <== mode:M_NEIGHBOR",
            "          NEWLINE:'\\n'",
            "          (remote_as_bgp_tail",
            "            REMOTE_AS:'remote-as'",
            "            remote = (bgp_asn",
            "              asn = DEC:'11164')",
            "            NEWLINE:'\\n')",
            "          (use_neighbor_group_bgp_tail",
            "            USE:'use'",
            "            NEIGHBOR_GROUP:'neighbor-group'",
            "            name = (variable",
            "              VARIABLE:'EBGP-PEER-SVL-PNI')",
            "            NEWLINE:'\\n')",
            "          (bgp_tail",
            "            (description_bgp_tail",
            "              (description_line",
            "                DESCRIPTION:'description'",
            "                text = RAW_TEXT:' cps AS11164 - SVL-PNI'  <== mode:M_Description",
            "                NEWLINE:'\\n'  <== mode:M_Description)))",
            "          (neighbor_block_address_family",
            "            (address_family_header",
            "              ADDRESS_FAMILY:'address-family'",
            "              af = (bgp_address_family",
            "                IPV4:'ipv4'",
            "                UNICAST:'unicast')",
            "              NEWLINE:'\\n')",
            "            (bgp_tail",
            "              (null_bgp_tail",
            "                MULTIPATH:'multipath'",
            "                (null_rest_of_line",
            "                  NEWLINE:'\\n')))",
            "            (bgp_tail",
            "              (route_policy_bgp_tail",
            "                ROUTE_POLICY:'route-policy'",
            "                name = (variable",
            "                  VARIABLE:'EBGP-PEER-AS11164-SVL-PNI-IN')",
            "                IN:'in'",
            "                NEWLINE:'\\n'))",
            "            (bgp_tail",
            "              (null_bgp_tail",
            "                MAXIMUM_PREFIX:'maximum-prefix'",
            "                (null_rest_of_line",
            "                  DEC:'500000'",
            "                  DEC:'80'",
            "                  RESTART:'restart'",
            "                  DEC:'60'",
            "                  NEWLINE:'\\n')))",
            "            (bgp_tail",
            "              (route_policy_bgp_tail",
            "                ROUTE_POLICY:'route-policy'",
            "                name = (variable",
            "                  VARIABLE:'EBGP-PEER-AS11164-SVL-PNI-OUT')",
            "                OUT:'out'",
            "                NEWLINE:'\\n'))",
            "            (address_family_footer))))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/cadant_acl" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        SHELFNAME:'shelfname'",
            "        DOUBLE_QUOTE:'\"'",
            "        DOUBLE_QUOTE:'\"'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      quoted_name = (double_quoted_string",
            "        DOUBLE_QUOTE:'\"'",
            "        VARIABLE:'cadant_acl'",
            "        DOUBLE_QUOTE:'\"')",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (standard_access_list_stanza",
            "      ACCESS_LIST:'access-list'",
            "      num = ACL_NUM_STANDARD:'50'",
            "      NEWLINE:'\\n'",
            "      (cadant_stdacl_name",
            "        NAME:'name'",
            "        name = (variable_permissive",
            "          VARIABLE:'stdAcl-foo'  <== mode:M_Name)",
            "        NEWLINE:'\\n')",
            "      (standard_access_list_null_tail",
            "        REMARK:'remark'",
            "        (null_rest_of_line",
            "          M_REMARK_REMARK:' \"Hey there\"'  <== mode:M_REMARK",
            "          NEWLINE:'\\n'  <== mode:M_REMARK))",
            "      (standard_access_list_tail",
            "        ala = (access_list_action",
            "          PERMIT:'permit')",
            "        ipr = (access_list_ip_range",
            "          ip = IP_ADDRESS:'1.2.3.0'",
            "          wildcard = IP_ADDRESS:'0.0.0.255')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_block",
            "        EXIT:'exit'",
            "        (null_rest_of_line",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (standard_access_list_stanza",
            "      ACCESS_LIST:'access-list'",
            "      num = ACL_NUM_STANDARD:'51'",
            "      NEWLINE:'\\n'",
            "      (standard_access_list_tail",
            "        ala = (access_list_action",
            "          PERMIT:'permit')",
            "        ipr = (access_list_ip_range",
            "          ip = IP_ADDRESS:'2.3.4.0'",
            "          wildcard = IP_ADDRESS:'0.0.0.255')",
            "        NEWLINE:'\\n')",
            "      (standard_access_list_tail",
            "        ala = (access_list_action",
            "          DENY:'deny')",
            "        ipr = (access_list_ip_range",
            "          ANY:'any')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_block",
            "        EXIT:'exit'",
            "        (null_rest_of_line",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (standard_access_list_stanza",
            "      ACCESS_LIST:'access-list'",
            "      num = ACL_NUM_STANDARD:'99'",
            "      NEWLINE:'\\n'",
            "      (cadant_stdacl_name",
            "        NAME:'name'",
            "        name = (variable_permissive",
            "          VARIABLE:'stdAcl-bar'  <== mode:M_Name)",
            "        NEWLINE:'\\n')",
            "      (standard_access_list_tail",
            "        ala = (access_list_action",
            "          PERMIT:'permit')",
            "        ipr = (access_list_ip_range",
            "          ip = IP_ADDRESS:'3.4.5.6')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_block",
            "        EXIT:'exit'",
            "        (null_rest_of_line",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (extended_ipv6_access_list_stanza",
            "      IPV6:'ipv6'",
            "      ACCESS_LIST:'access-list'",
            "      name = (variable_permissive",
            "        VARIABLE:'ipv6-acl-foo')",
            "      NEWLINE:'\\n'",
            "      (extended_access_list_null_tail",
            "        REMARK:'remark'",
            "        (null_rest_of_line",
            "          M_REMARK_REMARK:' \"Hello again\"'  <== mode:M_REMARK",
            "          NEWLINE:'\\n'  <== mode:M_REMARK))",
            "      (extended_ipv6_access_list_tail",
            "        ala = (access_list_action",
            "          DENY:'deny')",
            "        prot = (protocol",
            "          TCP:'tcp')",
            "        srcipr = (access_list_ip6_range",
            "          ANY:'any')",
            "        dstipr = (access_list_ip6_range",
            "          ANY:'any')",
            "        alps_dst = (port_specifier",
            "          RANGE:'range'",
            "          arg1 = (port",
            "            DEC:'123')",
            "          arg2 = (port",
            "            DEC:'456'))",
            "        NEWLINE:'\\n')",
            "      (extended_ipv6_access_list_tail",
            "        ala = (access_list_action",
            "          DENY:'deny')",
            "        prot = (protocol",
            "          UDP:'udp')",
            "        srcipr = (access_list_ip6_range",
            "          ANY:'any')",
            "        dstipr = (access_list_ip6_range",
            "          ANY:'any')",
            "        alps_dst = (port_specifier",
            "          RANGE:'range'",
            "          arg1 = (port",
            "            NETBIOS_NS:'netbios-ns')",
            "          arg2 = (port",
            "            NETBIOS_SS:'netbios-ss'))",
            "        NEWLINE:'\\n')",
            "      (extended_ipv6_access_list_tail",
            "        ala = (access_list_action",
            "          PERMIT:'permit')",
            "        prot = (protocol",
            "          ICMP:'icmp')",
            "        srcipr = (access_list_ip6_range",
            "          ANY:'any')",
            "        dstipr = (access_list_ip6_range",
            "          ANY:'any')",
            "        (extended_access_list_additional_feature",
            "          icmp_message_type = DEC:'123')",
            "        NEWLINE:'\\n')",
            "      (extended_ipv6_access_list_tail",
            "        ala = (access_list_action",
            "          PERMIT:'permit')",
            "        prot = (protocol",
            "          IP:'ip')",
            "        srcipr = (access_list_ip6_range",
            "          HOST:'host'",
            "          ipv6 = IPV6_ADDRESS:'dead:beef::1')",
            "        dstipr = (access_list_ip6_range",
            "          ANY:'any')",
            "        NEWLINE:'\\n')",
            "      (extended_ipv6_access_list_tail",
            "        ala = (access_list_action",
            "          PERMIT:'permit')",
            "        prot = (protocol",
            "          ND:'nd')",
            "        srcipr = (access_list_ip6_range",
            "          ANY:'any')",
            "        dstipr = (access_list_ip6_range",
            "          ipv6_prefix = IPV6_PREFIX:'dead::/8')",
            "        (extended_access_list_additional_feature",
            "          ND_TYPE:'nd-type')",
            "        (extended_access_list_additional_feature",
            "          icmp_message_type = DEC:'133')",
            "        NEWLINE:'\\n')",
            "      (extended_ipv6_access_list_tail",
            "        ala = (access_list_action",
            "          PERMIT:'permit')",
            "        prot = (protocol",
            "          TCP:'tcp')",
            "        srcipr = (access_list_ip6_range",
            "          ipv6_prefix = IPV6_PREFIX:'dead::/36')",
            "        alps_src = (port_specifier",
            "          EQ:'eq'",
            "          (port",
            "            WWW:'www'))",
            "        dstipr = (access_list_ip6_range",
            "          ipv6_prefix = IPV6_PREFIX:'beef::/33')",
            "        NEWLINE:'\\n')",
            "      (extended_ipv6_access_list_tail",
            "        ala = (access_list_action",
            "          PERMIT:'permit')",
            "        prot = (protocol",
            "          TCP:'tcp')",
            "        srcipr = (access_list_ip6_range",
            "          ipv6_prefix = IPV6_PREFIX:'dead::/36')",
            "        alps_src = (port_specifier",
            "          EQ:'eq'",
            "          (port",
            "            TELNET:'telnet'))",
            "        dstipr = (access_list_ip6_range",
            "          ipv6_prefix = IPV6_PREFIX:'beef::/33')",
            "        NEWLINE:'\\n')",
            "      (extended_ipv6_access_list_tail",
            "        ala = (access_list_action",
            "          PERMIT:'permit')",
            "        prot = (protocol",
            "          UDP:'udp')",
            "        srcipr = (access_list_ip6_range",
            "          ipv6_prefix = IPV6_PREFIX:'dead:beef::/36')",
            "        dstipr = (access_list_ip6_range",
            "          ipv6_prefix = IPV6_PREFIX:'beef:dead::/36')",
            "        NEWLINE:'\\n')",
            "      (extended_ipv6_access_list_tail",
            "        ala = (access_list_action",
            "          PERMIT:'permit')",
            "        prot = (protocol",
            "          UDP:'udp')",
            "        srcipr = (access_list_ip6_range",
            "          ANY:'any')",
            "        alps_src = (port_specifier",
            "          EQ:'eq'",
            "          (port",
            "            DEC:'123'))",
            "        dstipr = (access_list_ip6_range",
            "          ANY:'any')",
            "        alps_dst = (port_specifier",
            "          EQ:'eq'",
            "          (port",
            "            DEC:'456'))",
            "        NEWLINE:'\\n')",
            "      (exit_line",
            "        EXIT:'exit'",
            "        NEWLINE:'\\n')))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/cadant_banner" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        SHELFNAME:'shelfname'",
            "        DOUBLE_QUOTE:'\"'",
            "        DOUBLE_QUOTE:'\"'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      quoted_name = (double_quoted_string",
            "        DOUBLE_QUOTE:'\"'",
            "        VARIABLE:'cadant_banner'",
            "        DOUBLE_QUOTE:'\"')",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_configure",
            "      CONFIGURE:'configure'",
            "      (configure_null",
            "        (null_rest_of_line",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (banner_stanza",
            "      BANNER:'banner'",
            "      (banner_type",
            "        LOGIN:'login'  <== mode:M_Banner)",
            "      (banner",
            "        NEWLINE:'\\n'  <== mode:M_BannerText",
            "        LINE_CADANT:'****************************\\n'  <== mode:M_BannerCadant",
            "        LINE_CADANT:'* Arris CADANT banner text *\\n'  <== mode:M_BannerCadant",
            "        LINE_CADANT:'****************************\\n'  <== mode:M_BannerCadant",
            "        END_CADANT:'/end\\n'  <== mode:M_BannerCadant)))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/cadant_bgp" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        SHELFNAME:'shelfname'",
            "        DOUBLE_QUOTE:'\"'",
            "        DOUBLE_QUOTE:'\"'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      quoted_name = (double_quoted_string",
            "        DOUBLE_QUOTE:'\"'",
            "        VARIABLE:'cadant_bgp'",
            "        DOUBLE_QUOTE:'\"')",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (router_bgp_stanza",
            "      ROUTER:'router'",
            "      BGP:'bgp'",
            "      procnum = (bgp_asn",
            "        asn = DEC:'12345')",
            "      NEWLINE:'\\n'",
            "      (router_bgp_stanza_tail",
            "        (address_family_enable_rb_stanza",
            "          ADDRESS_FAMILY:'address-family'",
            "          af = (bgp_address_family",
            "            IPV6:'ipv6')",
            "          ENABLE:'enable'",
            "          NEWLINE:'\\n'))",
            "      (router_bgp_stanza_tail",
            "        (router_id_rb_stanza",
            "          BGP:'bgp'",
            "          (router_id_bgp_tail",
            "            ROUTER_ID:'router-id'",
            "            routerid = IP_ADDRESS:'1.2.3.4'",
            "            NEWLINE:'\\n')))",
            "      (router_bgp_stanza_tail",
            "        (bgp_tail",
            "          (null_bgp_tail",
            "            NO:'no'",
            "            SHUTDOWN:'shutdown'",
            "            (null_rest_of_line",
            "              NEWLINE:'\\n'))))",
            "      (router_bgp_stanza_tail",
            "        (bgp_tail",
            "          (null_bgp_tail",
            "            EXIT:'exit'",
            "            (null_rest_of_line",
            "              NEWLINE:'\\n'))))))",
            "  (stanza",
            "    (router_bgp_stanza",
            "      ROUTER:'router'",
            "      BGP:'bgp'",
            "      NEWLINE:'\\n'",
            "      (router_bgp_stanza_tail",
            "        (neighbor_flat_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          ip = IP_ADDRESS:'1.2.3.4'  <== mode:M_NEIGHBOR",
            "          (remote_as_bgp_tail",
            "            REMOTE_AS:'remote-as'",
            "            remote = (bgp_asn",
            "              asn = DEC:'12345')",
            "            NEWLINE:'\\n')))",
            "      (router_bgp_stanza_tail",
            "        (neighbor_flat_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          ip = IP_ADDRESS:'1.2.3.4'  <== mode:M_NEIGHBOR",
            "          (bgp_tail",
            "            (update_source_bgp_tail",
            "              UPDATE_SOURCE:'update-source'",
            "              source = (interface_name",
            "                name_prefix_alpha = M_Interface_PREFIX:'loopback'  <== mode:M_Interface",
            "                (range",
            "                  (subrange",
            "                    low = DEC:'15'  <== mode:M_Interface)))",
            "              NEWLINE:'\\n'  <== mode:M_Interface))))",
            "      (router_bgp_stanza_tail",
            "        (neighbor_flat_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          ip = IP_ADDRESS:'1.2.3.4'  <== mode:M_NEIGHBOR",
            "          (bgp_tail",
            "            (null_bgp_tail",
            "              PASSWORD:'password'",
            "              (null_rest_of_line",
            "                VARIABLE:'0123456789abcdef0123456789abcdef'",
            "                HIDDEN_LITERAL:'hidden'",
            "                NEWLINE:'\\n')))))",
            "      (router_bgp_stanza_tail",
            "        (neighbor_flat_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          ip = IP_ADDRESS:'1.2.3.4'  <== mode:M_NEIGHBOR",
            "          (bgp_tail",
            "            (null_bgp_tail",
            "              CONNECT_RETRY:'connect-retry'",
            "              (null_rest_of_line",
            "                DEC:'5'",
            "                NEWLINE:'\\n')))))",
            "      (router_bgp_stanza_tail",
            "        (neighbor_flat_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          ip = IP_ADDRESS:'1.2.3.4'  <== mode:M_NEIGHBOR",
            "          (bgp_tail",
            "            (null_bgp_tail",
            "              TIMERS:'timers'",
            "              (null_rest_of_line",
            "                DEC:'5'",
            "                DEC:'20'",
            "                NEWLINE:'\\n')))))",
            "      (router_bgp_stanza_tail",
            "        (neighbor_flat_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          ip6 = IPV6_ADDRESS:'dead:beef::1'  <== mode:M_NEIGHBOR",
            "          (remote_as_bgp_tail",
            "            REMOTE_AS:'remote-as'",
            "            remote = (bgp_asn",
            "              asn = DEC:'12345')",
            "            NEWLINE:'\\n')))",
            "      (router_bgp_stanza_tail",
            "        (neighbor_flat_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          ip6 = IPV6_ADDRESS:'dead:beef::1'  <== mode:M_NEIGHBOR",
            "          (bgp_tail",
            "            (update_source_bgp_tail",
            "              UPDATE_SOURCE:'update-source'",
            "              source = (interface_name",
            "                name_prefix_alpha = M_Interface_PREFIX:'loopback'  <== mode:M_Interface",
            "                (range",
            "                  (subrange",
            "                    low = DEC:'15'  <== mode:M_Interface)))",
            "              NEWLINE:'\\n'  <== mode:M_Interface))))",
            "      (router_bgp_stanza_tail",
            "        (neighbor_flat_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          ip6 = IPV6_ADDRESS:'dead:beef::1'  <== mode:M_NEIGHBOR",
            "          (bgp_tail",
            "            (null_bgp_tail",
            "              PASSWORD:'password'",
            "              (null_rest_of_line",
            "                VARIABLE:'0123456789abcdef0123456789abcdef'",
            "                HIDDEN_LITERAL:'hidden'",
            "                NEWLINE:'\\n')))))",
            "      (router_bgp_stanza_tail",
            "        (neighbor_flat_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          ip6 = IPV6_ADDRESS:'dead:beef::1'  <== mode:M_NEIGHBOR",
            "          (bgp_tail",
            "            (null_bgp_tail",
            "              CONNECT_RETRY:'connect-retry'",
            "              (null_rest_of_line",
            "                DEC:'5'",
            "                NEWLINE:'\\n')))))",
            "      (router_bgp_stanza_tail",
            "        (neighbor_flat_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          ip6 = IPV6_ADDRESS:'dead:beef::1'  <== mode:M_NEIGHBOR",
            "          (bgp_tail",
            "            (null_bgp_tail",
            "              TIMERS:'timers'",
            "              (null_rest_of_line",
            "                DEC:'5'",
            "                DEC:'20'",
            "                NEWLINE:'\\n')))))",
            "      (router_bgp_stanza_tail",
            "        (bgp_tail",
            "          (null_bgp_tail",
            "            EXIT:'exit'",
            "            (null_rest_of_line",
            "              NEWLINE:'\\n'))))))",
            "  (stanza",
            "    (router_bgp_stanza",
            "      ROUTER:'router'",
            "      BGP:'bgp'",
            "      procnum = (bgp_asn",
            "        asn = DEC:'12345')",
            "      NEWLINE:'\\n'",
            "      (router_bgp_stanza_tail",
            "        (address_family_rb_stanza",
            "          (address_family_header",
            "            ADDRESS_FAMILY:'address-family'",
            "            af = (bgp_address_family",
            "              IPV4:'ipv4')",
            "            NEWLINE:'\\n')",
            "          (bgp_tail",
            "            (redistribute_connected_bgp_tail",
            "              REDISTRIBUTE:'redistribute'",
            "              CONNECTED:'connected'",
            "              NEWLINE:'\\n'))",
            "          (bgp_tail",
            "            (redistribute_rip_bgp_tail",
            "              REDISTRIBUTE:'redistribute'",
            "              RIP:'rip'",
            "              NEWLINE:'\\n'))",
            "          (neighbor_flat_rb_stanza",
            "            NEIGHBOR:'neighbor'",
            "            ip = IP_ADDRESS:'1.2.3.4'  <== mode:M_NEIGHBOR",
            "            (bgp_tail",
            "              (activate_bgp_tail",
            "                ACTIVATE:'activate'",
            "                NEWLINE:'\\n')))",
            "          (neighbor_flat_rb_stanza",
            "            NEIGHBOR:'neighbor'",
            "            ip = IP_ADDRESS:'1.2.3.4'  <== mode:M_NEIGHBOR",
            "            (bgp_tail",
            "              (next_hop_self_bgp_tail",
            "                NEXT_HOP_SELF:'next-hop-self'",
            "                NEWLINE:'\\n')))",
            "          (neighbor_flat_rb_stanza",
            "            NEIGHBOR:'neighbor'",
            "            ip = IP_ADDRESS:'1.2.3.4'  <== mode:M_NEIGHBOR",
            "            (bgp_tail",
            "              (route_map_bgp_tail",
            "                ROUTE_MAP:'route-map'",
            "                name = (variable",
            "                  VARIABLE:'blarp'  <== mode:M_RouteMap)",
            "                OUT:'out'",
            "                NEWLINE:'\\n')))",
            "          (bgp_tail",
            "            (null_bgp_tail",
            "              EXIT:'exit'",
            "              (null_rest_of_line",
            "                NEWLINE:'\\n')))",
            "          (address_family_footer)))",
            "      (router_bgp_stanza_tail",
            "        (address_family_rb_stanza",
            "          (address_family_header",
            "            ADDRESS_FAMILY:'address-family'",
            "            af = (bgp_address_family",
            "              IPV6:'ipv6')",
            "            NEWLINE:'\\n')",
            "          (bgp_tail",
            "            (redistribute_connected_bgp_tail",
            "              REDISTRIBUTE:'redistribute'",
            "              CONNECTED:'connected'",
            "              NEWLINE:'\\n'))",
            "          (bgp_tail",
            "            (redistribute_static_bgp_tail",
            "              REDISTRIBUTE:'redistribute'",
            "              STATIC:'static'",
            "              NEWLINE:'\\n'))",
            "          (neighbor_flat_rb_stanza",
            "            NEIGHBOR:'neighbor'",
            "            ip6 = IPV6_ADDRESS:'dead:beef::1'  <== mode:M_NEIGHBOR",
            "            (bgp_tail",
            "              (activate_bgp_tail",
            "                ACTIVATE:'activate'",
            "                NEWLINE:'\\n')))",
            "          (neighbor_flat_rb_stanza",
            "            NEIGHBOR:'neighbor'",
            "            ip6 = IPV6_ADDRESS:'dead:beef::1'  <== mode:M_NEIGHBOR",
            "            (bgp_tail",
            "              (next_hop_self_bgp_tail",
            "                NEXT_HOP_SELF:'next-hop-self'",
            "                NEWLINE:'\\n')))",
            "          (neighbor_flat_rb_stanza",
            "            NEIGHBOR:'neighbor'",
            "            ip6 = IPV6_ADDRESS:'dead:beef::1'  <== mode:M_NEIGHBOR",
            "            (bgp_tail",
            "              (route_map_bgp_tail",
            "                ROUTE_MAP:'route-map'",
            "                name = (variable",
            "                  VARIABLE:'blerp'  <== mode:M_RouteMap)",
            "                OUT:'out'",
            "                NEWLINE:'\\n')))",
            "          (bgp_tail",
            "            (null_bgp_tail",
            "              EXIT:'exit'",
            "              (null_rest_of_line",
            "                NEWLINE:'\\n')))",
            "          (bgp_tail",
            "            (null_bgp_tail",
            "              EXIT:'exit'",
            "              (null_rest_of_line",
            "                NEWLINE:'\\n')))",
            "          (address_family_footer)))))",
            "  (stanza",
            "    (router_bgp_stanza",
            "      ROUTER:'router'",
            "      BGP:'bgp'",
            "      NEWLINE:'\\n'",
            "      (router_bgp_stanza_tail",
            "        (neighbor_flat_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          ip = IP_ADDRESS:'1.2.3.4'  <== mode:M_NEIGHBOR",
            "          (bgp_tail",
            "            (null_bgp_tail",
            "              NO:'no'",
            "              SHUTDOWN:'shutdown'",
            "              (null_rest_of_line",
            "                NEWLINE:'\\n')))))",
            "      (router_bgp_stanza_tail",
            "        (neighbor_flat_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          ip6 = IPV6_ADDRESS:'dead:beef::1'  <== mode:M_NEIGHBOR",
            "          (bgp_tail",
            "            (null_bgp_tail",
            "              NO:'no'",
            "              SHUTDOWN:'shutdown'",
            "              (null_rest_of_line",
            "                NEWLINE:'\\n')))))",
            "      (router_bgp_stanza_tail",
            "        (bgp_tail",
            "          (null_bgp_tail",
            "            EXIT:'exit'",
            "            (null_rest_of_line",
            "              NEWLINE:'\\n'))))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/cadant_cable" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        SHELFNAME:'shelfname'",
            "        DOUBLE_QUOTE:'\"'",
            "        DOUBLE_QUOTE:'\"'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      quoted_name = (double_quoted_string",
            "        DOUBLE_QUOTE:'\"'",
            "        VARIABLE:'cadant_cable'",
            "        DOUBLE_QUOTE:'\"')",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_null",
            "        DSG:'dsg'",
            "        (null_rest_of_line",
            "          VARIABLE:'timer-list'",
            "          DEC:'1'",
            "          VARIABLE:'initialization-tdsg1'",
            "          DEC:'5'",
            "          VARIABLE:'operational-tdsg2'",
            "          DEC:'150'",
            "          VARIABLE:'two-way-tdsg3'",
            "          DEC:'10'",
            "          VARIABLE:'one-way-tdsg4'",
            "          DEC:'150'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_null",
            "        DSG:'dsg'",
            "        (null_rest_of_line",
            "          VARIABLE:'client-id-list'",
            "          DEC:'1500'",
            "          INDEX:'index'",
            "          DEC:'1500'",
            "          TYPE:'type'",
            "          VARIABLE:'ca-system-id'",
            "          VARIABLE:'value'",
            "          HEX:'0x96b'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_null",
            "        DSG:'dsg'",
            "        (null_rest_of_line",
            "          VARIABLE:'client-id-list'",
            "          DEC:'2500'",
            "          INDEX:'index'",
            "          DEC:'2500'",
            "          TYPE:'type'",
            "          BROADCAST:'broadcast'",
            "          VARIABLE:'value'",
            "          DEC:'55555'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_null",
            "        DSG:'dsg'",
            "        (null_rest_of_line",
            "          VARIABLE:'client-id-list'",
            "          DEC:'3500'",
            "          INDEX:'index'",
            "          DEC:'3500'",
            "          TYPE:'type'",
            "          VARIABLE:'application-id'",
            "          VARIABLE:'value'",
            "          DEC:'2000'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_null",
            "        DSG:'dsg'",
            "        (null_rest_of_line",
            "          VARIABLE:'client-id-list'",
            "          DEC:'4500'",
            "          INDEX:'index'",
            "          DEC:'4500'",
            "          TYPE:'type'",
            "          BROADCAST:'broadcast'",
            "          VARIABLE:'value'",
            "          DEC:'5'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_null",
            "        DSG:'dsg'",
            "        (null_rest_of_line",
            "          VARIABLE:'client-id-list'",
            "          DEC:'6500'",
            "          INDEX:'index'",
            "          DEC:'6500'",
            "          TYPE:'type'",
            "          VARIABLE:'ca-system-id'",
            "          VARIABLE:'value'",
            "          HEX:'0x700'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_null",
            "        DSG:'dsg'",
            "        (null_rest_of_line",
            "          VARIABLE:'client-id-list'",
            "          DEC:'7500'",
            "          INDEX:'index'",
            "          DEC:'7500'",
            "          TYPE:'type'",
            "          VARIABLE:'application-id'",
            "          VARIABLE:'value'",
            "          DEC:'1'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_null",
            "        DSG:'dsg'",
            "        (null_rest_of_line",
            "          VARIABLE:'client-id-list'",
            "          DEC:'8500'",
            "          INDEX:'index'",
            "          DEC:'8500'",
            "          TYPE:'type'",
            "          VARIABLE:'application-id'",
            "          VARIABLE:'value'",
            "          DEC:'31'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_null",
            "        DSG:'dsg'",
            "        (null_rest_of_line",
            "          VARIABLE:'client-id-list'",
            "          DEC:'8507'",
            "          INDEX:'index'",
            "          DEC:'8507'",
            "          TYPE:'type'",
            "          VARIABLE:'application-id'",
            "          VARIABLE:'value'",
            "          DEC:'31'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_null",
            "        DSG:'dsg'",
            "        (null_rest_of_line",
            "          VARIABLE:'client-id-list'",
            "          DEC:'8508'",
            "          INDEX:'index'",
            "          DEC:'8508'",
            "          TYPE:'type'",
            "          VARIABLE:'application-id'",
            "          VARIABLE:'value'",
            "          DEC:'31'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_null",
            "        DSG:'dsg'",
            "        (null_rest_of_line",
            "          VARIABLE:'client-id-list'",
            "          DEC:'9500'",
            "          INDEX:'index'",
            "          DEC:'9500'",
            "          TYPE:'type'",
            "          BROADCAST:'broadcast'",
            "          VARIABLE:'value'",
            "          DEC:'2'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_null",
            "        DSG:'dsg'",
            "        (null_rest_of_line",
            "          TUNNEL:'tunnel'",
            "          DEC:'1234'",
            "          TUNNEL_GROUP:'tunnel-group'",
            "          DEC:'1234'",
            "          VARIABLE:'client-id-list'",
            "          DEC:'1234'",
            "          MAC_ADDRESS:'mac-address'",
            "          M_COMMENT_NON_NEWLINE:' dead.beef.feed'  <== mode:M_COMMENT",
            "          NEWLINE:'\\n'  <== mode:M_COMMENT))))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_null",
            "        DSG:'dsg'",
            "        (null_rest_of_line",
            "          TUNNEL:'tunnel'",
            "          DEC:'1234'",
            "          VARIABLE:'classifier'",
            "          DEC:'1234'",
            "          PRIORITY:'priority'",
            "          DEC:'1'",
            "          VARIABLE:'source-network'",
            "          IP_ADDRESS:'1.2.3.4'",
            "          DEST_IP:'dest-ip'",
            "          IP_ADDRESS:'5.6.7.8'",
            "          VARIABLE:'include-in-dcd'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_fiber_node",
            "        FIBER_NODE:'fiber-node'",
            "        quoted_name = (double_quoted_string",
            "          DOUBLE_QUOTE:'\"'  <== mode:M_FiberNode",
            "          M_DoubleQuote_TEXT:'abcdefg'  <== mode:M_DoubleQuote",
            "          DOUBLE_QUOTE:'\"'  <== mode:M_DoubleQuote)",
            "        NEWLINE:'\\n'",
            "        (cfn_null",
            "          CABLE_DOWNSTREAM:'cable-downstream'",
            "          (null_rest_of_line",
            "            DEC:'55'",
            "            FORWARD_SLASH:'/'",
            "            DEC:'0'",
            "            FORWARD_SLASH:'/'",
            "            DEC:'0'",
            "            DASH:'-'",
            "            DEC:'5'",
            "            NEWLINE:'\\n'))",
            "        (cfn_null",
            "          CABLE_UPSTREAM:'cable-upstream'",
            "          (null_rest_of_line",
            "            DEC:'3'",
            "            FORWARD_SLASH:'/'",
            "            DEC:'0'",
            "            FORWARD_SLASH:'/'",
            "            DEC:'0'",
            "            DASH:'-'",
            "            DEC:'3'",
            "            NEWLINE:'\\n'))",
            "        (cfn_null",
            "          INIT:'init'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_null",
            "      (null_block",
            "        EXIT:'exit'",
            "        (null_rest_of_line",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_filter",
            "        FILTER:'filter'",
            "        (null_rest_of_line",
            "          GROUP:'group'",
            "          DEC:'602'",
            "          NEWLINE:'\\n')",
            "        (cf_null",
            "          INDEX:'index'",
            "          (null_rest_of_line",
            "            DEC:'1'",
            "            VARIABLE:'ip-version'",
            "            IPV4:'ipv4'",
            "            NEWLINE:'\\n'))",
            "        (cf_null",
            "          INDEX:'index'",
            "          (null_rest_of_line",
            "            DEC:'1'",
            "            DEST_IP:'dest-ip'",
            "            IP_ADDRESS:'255.255.255.255'",
            "            NEWLINE:'\\n'))",
            "        (cf_null",
            "          INDEX:'index'",
            "          (null_rest_of_line",
            "            DEC:'1'",
            "            VARIABLE:'dest-mask'",
            "            IP_ADDRESS:'255.255.255.255'",
            "            NEWLINE:'\\n'))",
            "        (cf_null",
            "          INDEX:'index'",
            "          (null_rest_of_line",
            "            DEC:'1'",
            "            VARIABLE:'dest-port'",
            "            DEC:'123'",
            "            NEWLINE:'\\n'))",
            "        (cf_null",
            "          INDEX:'index'",
            "          (null_rest_of_line",
            "            DEC:'1'",
            "            VARIABLE:'ip-proto'",
            "            DEC:'123'",
            "            NEWLINE:'\\n'))",
            "        (cf_null",
            "          INDEX:'index'",
            "          (null_rest_of_line",
            "            DEC:'1'",
            "            VARIABLE:'match-action'",
            "            DROP:'drop'",
            "            NEWLINE:'\\n'))",
            "        (cf_null",
            "          INDEX:'index'",
            "          (null_rest_of_line",
            "            DEC:'1'",
            "            SRC_IP:'src-ip'",
            "            IP_ADDRESS:'10.0.0.0'",
            "            NEWLINE:'\\n'))",
            "        (cf_null",
            "          INDEX:'index'",
            "          (null_rest_of_line",
            "            DEC:'1'",
            "            VARIABLE:'src-mask'",
            "            IP_ADDRESS:'255.0.0.0'",
            "            NEWLINE:'\\n'))",
            "        (cf_null",
            "          INDEX:'index'",
            "          (null_rest_of_line",
            "            DEC:'1'",
            "            VARIABLE:'src-port'",
            "            DEC:'123'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_null",
            "      (null_block",
            "        EXIT:'exit'",
            "        (null_rest_of_line",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_null",
            "        GLOBAL:'global'",
            "        (null_rest_of_line",
            "          VARIABLE:'dsa-rsp-sid-tlv-override'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_null",
            "        GLOBAL:'global'",
            "        (null_rest_of_line",
            "          LOAD_INTERVAL:'load-interval'",
            "          DEC:'123'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_null",
            "        GLOBAL:'global'",
            "        (null_rest_of_line",
            "          VARIABLE:'recover-US-impaired-ack'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_null",
            "        GLOBAL:'global'",
            "        (null_rest_of_line",
            "          VARIABLE:'unicast-polling'",
            "          VARIABLE:'pri'",
            "          DEC:'1'",
            "          VARIABLE:'slow-intvl'",
            "          DEC:'0'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_null",
            "        INTERCEPT:'intercept'",
            "        (null_rest_of_line",
            "          SOURCE_INTERFACE:'source-interface'",
            "          M_Interface_PREFIX:'loopback'  <== mode:M_Interface",
            "          DEC:'0'  <== mode:M_Interface",
            "          NEWLINE:'\\n'  <== mode:M_Interface))))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_null",
            "        MODEM:'modem'",
            "        (null_rest_of_line",
            "          VARIABLE:'vendor'",
            "          VARIABLE:'fe.dc.ba'",
            "          DOUBLE_QUOTE:'\"'",
            "          VARIABLE:'SomeVendor'",
            "          DOUBLE_QUOTE:'\"'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_cable",
            "      NO:'no'",
            "      CABLE:'cable'",
            "      (c_null",
            "        SHARED_SECONDARY_SECRET:'shared-secondary-secret'",
            "        (null_rest_of_line",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_null",
            "        SHARED_SECRET:'shared-secret'",
            "        (null_rest_of_line",
            "          VARIABLE:'123456789abcdef'",
            "          HIDDEN_LITERAL:'hidden'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_load_balance",
            "        LOAD_BALANCE:'load-balance'",
            "        (clb_null",
            "          DOWNSTREAM_START_THRESHOLD:'downstream-start-threshold'",
            "          (null_rest_of_line",
            "            DEC:'12'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_load_balance",
            "        LOAD_BALANCE:'load-balance'",
            "        (clb_null",
            "          EXCLUDE:'exclude'",
            "          (null_rest_of_line",
            "            OUI:'oui'",
            "            M_COMMENT_NON_NEWLINE:' de.ad.be'  <== mode:M_COMMENT",
            "            NEWLINE:'\\n'  <== mode:M_COMMENT)))))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_load_balance",
            "        LOAD_BALANCE:'load-balance'",
            "        (clb_null",
            "          FAILED_LIST:'failed-list'",
            "          (null_rest_of_line",
            "            VARIABLE:'exclude-count'",
            "            DEC:'78'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_load_balance",
            "        LOAD_BALANCE:'load-balance'",
            "        (clb_null",
            "          FAILED_LIST:'failed-list'",
            "          (null_rest_of_line",
            "            TIMEOUT:'timeout'",
            "            DEC:'56'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_load_balance",
            "        LOAD_BALANCE:'load-balance'",
            "        (clb_null",
            "          GENERAL_GROUP_DEFAULTS:'general-group-defaults'",
            "          (null_rest_of_line",
            "            VARIABLE:'init-technique'",
            "            VARIABLE:'ranging'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_load_balance",
            "        LOAD_BALANCE:'load-balance'",
            "        (clb_null",
            "          GENERAL_GROUP_DEFAULTS:'general-group-defaults'",
            "          (null_rest_of_line",
            "            POLICY:'policy'",
            "            DEC:'1'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_load_balance",
            "        LOAD_BALANCE:'load-balance'",
            "        (clb_docsis_policy",
            "          POLICY:'policy'",
            "          policy = DEC:'1'",
            "          RULE:'rule'",
            "          rulenum = DEC:'1'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_load_balance",
            "        LOAD_BALANCE:'load-balance'",
            "        (clb_rule",
            "          RULE:'rule'",
            "          rulenum = DEC:'1'",
            "          (null_rest_of_line",
            "            ENABLE:'enable'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_load_balance",
            "        LOAD_BALANCE:'load-balance'",
            "        (clb_rule",
            "          RULE:'rule'",
            "          rulenum = DEC:'1'",
            "          (null_rest_of_line",
            "            METHOD:'method'",
            "            VARIABLE:'utilization'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_load_balance",
            "        LOAD_BALANCE:'load-balance'",
            "        (clb_rule",
            "          RULE:'rule'",
            "          rulenum = DEC:'1'",
            "          (null_rest_of_line",
            "            VARIABLE:'periodic-steeringD2'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_load_balance",
            "        LOAD_BALANCE:'load-balance'",
            "        (clb_rule",
            "          RULE:'rule'",
            "          rulenum = DEC:'1'",
            "          (null_rest_of_line",
            "            VARIABLE:'registration-steeringD2'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_load_balance",
            "        LOAD_BALANCE:'load-balance'",
            "        (clb_rule",
            "          RULE:'rule'",
            "          rulenum = DEC:'1'",
            "          (null_rest_of_line",
            "            VARIABLE:'registration-steeringD3'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_load_balance",
            "        LOAD_BALANCE:'load-balance'",
            "        (clb_rule",
            "          RULE:'rule'",
            "          rulenum = DEC:'1'",
            "          (null_rest_of_line",
            "            TYPE:'type'",
            "            STATIC:'static'",
            "            VARIABLE:'non-bonded-dcc'",
            "            VARIABLE:'bonded-us-dbc'",
            "            VARIABLE:'bonded-ds-dbc'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_load_balance",
            "        LOAD_BALANCE:'load-balance'",
            "        (clb_null",
            "          TCS_LOAD_BALANCE:'tcs-load-balance'",
            "          (null_rest_of_line",
            "            ENABLE:'enable'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_load_balance",
            "        LOAD_BALANCE:'load-balance'",
            "        (clb_null",
            "          UPSTREAM_START_THRESHOLD:'upstream-start-threshold'",
            "          (null_rest_of_line",
            "            DEC:'34'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_null",
            "        METERING:'metering'",
            "        (null_rest_of_line",
            "          VARIABLE:'collector'",
            "          DEC:'1'",
            "          IP_ADDRESS:'1.2.3.4'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_null",
            "        METERING:'metering'",
            "        (null_rest_of_line",
            "          ENABLE:'enable'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_null",
            "        METERING:'metering'",
            "        (null_rest_of_line",
            "          EXPORT:'export'",
            "          VARIABLE:'all-counts'",
            "          VARIABLE:'cpe-info'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_null",
            "        METERING:'metering'",
            "        (null_rest_of_line",
            "          VARIABLE:'report-cycle'",
            "          VARIABLE:'start'",
            "          DEC:'00'",
            "          COLON:':'",
            "          DEC:'00'",
            "          INTERVAL:'interval'",
            "          DEC:'30'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_modulation_profile_block",
            "        MODULATION_PROFILE:'modulation-profile'",
            "        DEC:'1'",
            "        NEWLINE:'\\n'",
            "        (cmp_null",
            "          IUC:'iuc'",
            "          (null_rest_of_line",
            "            DEC:'1'",
            "            VARIABLE:'mod'",
            "            VARIABLE:'qpsk'",
            "            VARIABLE:'pre-len'",
            "            DEC:'123'",
            "            VARIABLE:'diff'",
            "            VARIABLE:'false'",
            "            VARIABLE:'fec-tbytes'",
            "            DEC:'0'",
            "            VARIABLE:'fec-len'",
            "            DEC:'12'",
            "            VARIABLE:'seed'",
            "            DEC:'345'",
            "            VARIABLE:'burst-len'",
            "            DEC:'0'",
            "            VARIABLE:'guard-time-size'",
            "            DEC:'123'",
            "            VARIABLE:'last-cw'",
            "            VARIABLE:'false'",
            "            VARIABLE:'scrambler'",
            "            VARIABLE:'true'",
            "            VARIABLE:'docsis-mode'",
            "            VARIABLE:'tdma'",
            "            NEWLINE:'\\n'))",
            "        EXIT:'exit'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_modulation_profile_block",
            "        MODULATION_PROFILE:'modulation-profile'",
            "        DEC:'2'",
            "        NEWLINE:'\\n'",
            "        (cmp_null",
            "          IUC:'iuc'",
            "          (null_rest_of_line",
            "            DEC:'1'",
            "            VARIABLE:'mod'",
            "            VARIABLE:'qam16'",
            "            VARIABLE:'pre-len'",
            "            DEC:'123'",
            "            VARIABLE:'diff'",
            "            VARIABLE:'false'",
            "            VARIABLE:'fec-tbytes'",
            "            DEC:'0'",
            "            VARIABLE:'fec-len'",
            "            DEC:'12'",
            "            VARIABLE:'seed'",
            "            DEC:'345'",
            "            VARIABLE:'burst-len'",
            "            DEC:'0'",
            "            VARIABLE:'guard-time-size'",
            "            DEC:'123'",
            "            VARIABLE:'last-cw'",
            "            VARIABLE:'false'",
            "            VARIABLE:'scrambler'",
            "            VARIABLE:'true'",
            "            VARIABLE:'docsis-mode'",
            "            VARIABLE:'tdma'",
            "            NEWLINE:'\\n'))",
            "        EXIT:'exit'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_modulation_profile_block",
            "        MODULATION_PROFILE:'modulation-profile'",
            "        DEC:'223'",
            "        NEWLINE:'\\n'",
            "        (cmp_null",
            "          IUC:'iuc'",
            "          (null_rest_of_line",
            "            DEC:'1'",
            "            VARIABLE:'mod'",
            "            VARIABLE:'qam16'",
            "            VARIABLE:'pre-len'",
            "            DEC:'123'",
            "            VARIABLE:'diff'",
            "            VARIABLE:'false'",
            "            VARIABLE:'fec-tbytes'",
            "            DEC:'0'",
            "            VARIABLE:'fec-len'",
            "            DEC:'12'",
            "            VARIABLE:'seed'",
            "            DEC:'345'",
            "            VARIABLE:'burst-len'",
            "            DEC:'0'",
            "            VARIABLE:'guard-time-size'",
            "            DEC:'123'",
            "            VARIABLE:'last-cw'",
            "            VARIABLE:'false'",
            "            VARIABLE:'scrambler'",
            "            VARIABLE:'true'",
            "            VARIABLE:'docsis-mode'",
            "            VARIABLE:'atdma'",
            "            NEWLINE:'\\n'))",
            "        (cmp_null",
            "          IUC:'iuc'",
            "          (null_rest_of_line",
            "            DEC:'1'",
            "            VARIABLE:'pre-type'",
            "            VARIABLE:'qpsk1'",
            "            VARIABLE:'int-depth'",
            "            DEC:'1'",
            "            VARIABLE:'int-blocksize'",
            "            DEC:'1234'",
            "            NEWLINE:'\\n'))",
            "        EXIT:'exit'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_null",
            "        SUBMGMT:'submgmt'",
            "        (null_rest_of_line",
            "          DEFAULT:'default'",
            "          VARIABLE:'v6-max-cpe'",
            "          DEC:'6'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_null",
            "        SUBMGMT:'submgmt'",
            "        (null_rest_of_line",
            "          DEFAULT:'default'",
            "          ACTIVE:'active'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        PACKETCABLE:'packetcable'",
            "        VARIABLE:'dqos'",
            "        NO:'no'",
            "        SHUTDOWN:'shutdown'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        PACKETCABLE:'packetcable'",
            "        VARIABLE:'pcmm'",
            "        NO:'no'",
            "        SHUTDOWN:'shutdown'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        PACKETCABLE:'packetcable'",
            "        VARIABLE:'voice-limits'",
            "        VARIABLE:'allowed-total'",
            "        DEC:'123'",
            "        VARIABLE:'allowed-emergency'",
            "        DEC:'45'",
            "        DOWNSTREAM:'downstream'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        PACKETCABLE:'packetcable'",
            "        VARIABLE:'voice-limits'",
            "        VARIABLE:'allowed-total'",
            "        DEC:'123'",
            "        VARIABLE:'allowed-emergency'",
            "        DEC:'45'",
            "        UPSTREAM:'upstream'",
            "        NEWLINE:'\\n')))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/cadant_interface" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        SHELFNAME:'shelfname'",
            "        DOUBLE_QUOTE:'\"'",
            "        DOUBLE_QUOTE:'\"'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      quoted_name = (double_quoted_string",
            "        DOUBLE_QUOTE:'\"'",
            "        VARIABLE:'cadant_interface'",
            "        DOUBLE_QUOTE:'\"')",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_interface",
            "      INTERFACE:'interface'",
            "      iname = (interface_name",
            "        name_prefix_alpha = M_Interface_PREFIX:'cable-downstream'  <== mode:M_Interface",
            "        DEC:'1'  <== mode:M_Interface",
            "        FORWARD_SLASH:'/'  <== mode:M_Interface",
            "        (range",
            "          (subrange",
            "            low = DEC:'2'  <== mode:M_Interface)))",
            "      NEWLINE:'\\n'  <== mode:M_Interface",
            "      (if_inner",
            "        (if_null_block",
            "          POWER_LEVEL:'power-level'",
            "          DEC:'123'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          EXIT:'exit'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_interface",
            "      INTERFACE:'interface'",
            "      iname = (interface_name",
            "        name_prefix_alpha = M_Interface_PREFIX:'cable-downstream'  <== mode:M_Interface",
            "        DEC:'1'  <== mode:M_Interface",
            "        FORWARD_SLASH:'/'  <== mode:M_Interface",
            "        DEC:'2'  <== mode:M_Interface",
            "        FORWARD_SLASH:'/'  <== mode:M_Interface",
            "        (range",
            "          (subrange",
            "            low = DEC:'3'  <== mode:M_Interface)))",
            "      NEWLINE:'\\n'  <== mode:M_Interface",
            "      (if_inner",
            "        (if_null_block",
            "          CABLE:'cable'",
            "          VARIABLE:'cable-mac'",
            "          DEC:'12'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          CABLE:'cable'",
            "          VARIABLE:'channel-id'",
            "          DEC:'1'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          CABLE:'cable'",
            "          FREQUENCY:'frequency'",
            "          DEC:'123456789'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          CABLE:'cable'",
            "          NO:'no'",
            "          SHUTDOWN:'shutdown'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_description",
            "          (description_line",
            "            DESCRIPTION:'description'",
            "            text = RAW_TEXT:' \"blah\"'  <== mode:M_Description",
            "            NEWLINE:'\\n'  <== mode:M_Description)))",
            "      (if_inner",
            "        (if_null_block",
            "          EXIT:'exit'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_interface",
            "      INTERFACE:'interface'",
            "      iname = (interface_name",
            "        name_prefix_alpha = M_Interface_PREFIX:'cable-downstream'  <== mode:M_Interface",
            "        DEC:'5'  <== mode:M_Interface",
            "        FORWARD_SLASH:'/'  <== mode:M_Interface",
            "        DEC:'0'  <== mode:M_Interface",
            "        FORWARD_SLASH:'/'  <== mode:M_Interface",
            "        (range",
            "          (subrange",
            "            low = DEC:'0'  <== mode:M_Interface)))",
            "      NEWLINE:'\\n'  <== mode:M_Interface",
            "      (if_inner",
            "        (if_null_block",
            "          CABLE:'cable'",
            "          DSG:'dsg'",
            "          VARIABLE:'dcd-enable'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          CABLE:'cable'",
            "          DSG:'dsg'",
            "          VARIABLE:'timer-list'",
            "          DEC:'1'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          CABLE:'cable'",
            "          DSG:'dsg'",
            "          TUNNEL_GROUP:'tunnel-group'",
            "          DEC:'1234'",
            "          PRIORITY:'priority'",
            "          DEC:'1'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          CABLE:'cable'",
            "          DSG:'dsg'",
            "          TUNNEL_GROUP:'tunnel-group'",
            "          DEC:'5678'",
            "          PRIORITY:'priority'",
            "          DEC:'1'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          EXIT:'exit'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_interface",
            "      INTERFACE:'interface'",
            "      iname = (interface_name",
            "        name_prefix_alpha = M_Interface_PREFIX:'cable-upstream'  <== mode:M_Interface",
            "        DEC:'1'  <== mode:M_Interface",
            "        FORWARD_SLASH:'/'  <== mode:M_Interface",
            "        DEC:'0'  <== mode:M_Interface",
            "        FORWARD_SLASH:'/'  <== mode:M_Interface",
            "        (range",
            "          (subrange",
            "            low = DEC:'0'  <== mode:M_Interface)))",
            "      NEWLINE:'\\n'  <== mode:M_Interface",
            "      (if_inner",
            "        (if_null_block",
            "          CABLE:'cable'",
            "          VARIABLE:'cable-mac'",
            "          DEC:'1'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          CABLE:'cable'",
            "          VARIABLE:'connector'",
            "          DEC:'0'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          CABLE:'cable'",
            "          VARIABLE:'ingress-cancellation'",
            "          INTERVAL:'interval'",
            "          DEC:'123'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          CABLE:'cable'",
            "          FREQUENCY:'frequency'",
            "          DEC:'12345678'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          CABLE:'cable'",
            "          VARIABLE:'supervision'",
            "          DEC:'12'",
            "          FORWARD_SLASH:'/'",
            "          DEC:'0'",
            "          FORWARD_SLASH:'/'",
            "          DEC:'0'",
            "          DASH:'-'",
            "          DEC:'23'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_description",
            "          (description_line",
            "            DESCRIPTION:'description'",
            "            text = RAW_TEXT:' \"bleh\"'  <== mode:M_Description",
            "            NEWLINE:'\\n'  <== mode:M_Description)))",
            "      (if_inner",
            "        (if_null_block",
            "          EXIT:'exit'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_interface",
            "      INTERFACE:'interface'",
            "      iname = (interface_name",
            "        name_prefix_alpha = M_Interface_PREFIX:'cable-upstream'  <== mode:M_Interface",
            "        DEC:'1'  <== mode:M_Interface",
            "        FORWARD_SLASH:'/'  <== mode:M_Interface",
            "        DEC:'0'  <== mode:M_Interface",
            "        FORWARD_SLASH:'/'  <== mode:M_Interface",
            "        (range",
            "          (subrange",
            "            low = DEC:'10'  <== mode:M_Interface)))",
            "      (if_inner",
            "        (if_shutdown",
            "          NO:'no'  <== mode:M_Interface",
            "          SHUTDOWN:'shutdown'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_interface",
            "      INTERFACE:'interface'",
            "      iname = (interface_name",
            "        name_prefix_alpha = M_Interface_PREFIX:'cable-upstream'  <== mode:M_Interface",
            "        DEC:'1'  <== mode:M_Interface",
            "        FORWARD_SLASH:'/'  <== mode:M_Interface",
            "        DEC:'0'  <== mode:M_Interface",
            "        FORWARD_SLASH:'/'  <== mode:M_Interface",
            "        (range",
            "          (subrange",
            "            low = DEC:'10'  <== mode:M_Interface)))",
            "      (if_inner",
            "        (if_shutdown",
            "          SHUTDOWN:'shutdown'  <== mode:M_Interface",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_interface",
            "      INTERFACE:'interface'",
            "      iname = (interface_name",
            "        name_prefix_alpha = M_Interface_PREFIX:'cable-upstream'  <== mode:M_Interface",
            "        DEC:'1'  <== mode:M_Interface",
            "        FORWARD_SLASH:'/'  <== mode:M_Interface",
            "        DEC:'0'  <== mode:M_Interface",
            "        FORWARD_SLASH:'/'  <== mode:M_Interface",
            "        DEC:'0'  <== mode:M_Interface",
            "        PERIOD:'.'  <== mode:M_Interface",
            "        (range",
            "          (subrange",
            "            low = DEC:'0'  <== mode:M_Interface)))",
            "      NEWLINE:'\\n'  <== mode:M_Interface",
            "      (if_inner",
            "        (if_null_block",
            "          CABLE:'cable'",
            "          VARIABLE:'channel-id'",
            "          DEC:'1'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          CABLE:'cable'",
            "          VARIABLE:'docsis-mode'",
            "          VARIABLE:'atdma'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          CABLE:'cable'",
            "          MODULATION_PROFILE:'modulation-profile'",
            "          DEC:'23'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          CABLE:'cable'",
            "          VARIABLE:'pre-eq-enable'",
            "          VARIABLE:'true'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_shutdown",
            "          NO:'no'",
            "          SHUTDOWN:'shutdown'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_description",
            "          (description_line",
            "            DESCRIPTION:'description'",
            "            text = RAW_TEXT:' \"blarp\"'  <== mode:M_Description",
            "            NEWLINE:'\\n'  <== mode:M_Description)))",
            "      (if_inner",
            "        (if_null_block",
            "          EXIT:'exit'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_interface",
            "      INTERFACE:'interface'",
            "      iname = (interface_name",
            "        name_prefix_alpha = M_Interface_PREFIX:'cable-mac'  <== mode:M_Interface",
            "        (range",
            "          (subrange",
            "            low = DEC:'1'  <== mode:M_Interface)))",
            "      (if_inner",
            "        (if_null_block",
            "          CABLE:'cable'  <== mode:M_Interface",
            "          BUNDLE:'bundle'",
            "          MASTER:'master'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_interface",
            "      INTERFACE:'interface'",
            "      iname = (interface_name",
            "        name_prefix_alpha = M_Interface_PREFIX:'cable-mac'  <== mode:M_Interface",
            "        (range",
            "          (subrange",
            "            low = DEC:'2'  <== mode:M_Interface)))",
            "      (if_inner",
            "        (if_null_block",
            "          CABLE:'cable'  <== mode:M_Interface",
            "          BUNDLE:'bundle'",
            "          VARIABLE:'cable-mac'",
            "          DEC:'1'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_interface",
            "      INTERFACE:'interface'",
            "      iname = (interface_name",
            "        name_prefix_alpha = M_Interface_PREFIX:'cable-mac'  <== mode:M_Interface",
            "        (range",
            "          (subrange",
            "            low = DEC:'3'  <== mode:M_Interface)))",
            "      (if_inner",
            "        (if_null_block",
            "          CABLE:'cable'  <== mode:M_Interface",
            "          BUNDLE:'bundle'",
            "          VARIABLE:'cable-mac'",
            "          DEC:'1'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_interface",
            "      INTERFACE:'interface'",
            "      iname = (interface_name",
            "        name_prefix_alpha = M_Interface_PREFIX:'cable-mac'  <== mode:M_Interface",
            "        (range",
            "          (subrange",
            "            low = DEC:'1'  <== mode:M_Interface)))",
            "      NEWLINE:'\\n'  <== mode:M_Interface",
            "      (if_inner",
            "        (if_description",
            "          (description_line",
            "            DESCRIPTION:'description'",
            "            text = RAW_TEXT:' \"cable-mac 1\"'  <== mode:M_Description",
            "            NEWLINE:'\\n'  <== mode:M_Description)))",
            "      (if_inner",
            "        (if_null_block",
            "          CABLE:'cable'",
            "          VARIABLE:'cm-dynamic-multi-tuner'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          CABLE:'cable'",
            "          VARIABLE:'cm-ip-prov-mode'",
            "          VARIABLE:'apm'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          CABLE:'cable'",
            "          VARIABLE:'cm-tcs-max-size'",
            "          DEC:'5'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          CABLE:'cable'",
            "          VARIABLE:'downstream-bonding-group'",
            "          DYNAMIC:'dynamic'",
            "          ENABLE:'enable'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          CABLE:'cable'",
            "          DSG:'dsg'",
            "          MODE:'mode'",
            "          VARIABLE:'30DOCSIS_SUPPORT'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          CABLE:'cable'",
            "          VARIABLE:'dynamic-rcc'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          CABLE:'cable'",
            "          VARIABLE:'dynamic-secret'",
            "          VARIABLE:'reject'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          CABLE:'cable'",
            "          VARIABLE:'mcast-fwd-by-dsid'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          CABLE:'cable'",
            "          VARIABLE:'mult-tx-chl-mode'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          CABLE:'cable'",
            "          VARIABLE:'tftp-enforce'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          CABLE:'cable'",
            "          VARIABLE:'upstream-bonding-group'",
            "          DYNAMIC:'dynamic'",
            "          ENABLE:'enable'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          CABLE:'cable'",
            "          UPSTREAM:'upstream'",
            "          VARIABLE:'graceful-tcs-reduction'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          CABLE:'cable'",
            "          UPSTREAM:'upstream'",
            "          VARIABLE:'ranging-poll'",
            "          VARIABLE:'t4-multiplier'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          CABLE:'cable'",
            "          VARIABLE:'verbose-cm-rcp'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          EXIT:'exit'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_interface",
            "      INTERFACE:'interface'",
            "      iname = (interface_name",
            "        name_prefix_alpha = M_Interface_PREFIX:'cable-mac'  <== mode:M_Interface",
            "        DEC:'1'  <== mode:M_Interface",
            "        PERIOD:'.'  <== mode:M_Interface",
            "        (range",
            "          (subrange",
            "            low = DEC:'1'  <== mode:M_Interface)))",
            "      NEWLINE:'\\n'  <== mode:M_Interface",
            "      (if_inner",
            "        (if_null_block",
            "          CABLE:'cable'",
            "          DHCP_GIADDR:'dhcp-giaddr'",
            "          POLICY:'policy'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          CABLE:'cable'",
            "          HELPER_ADDRESS:'helper-address'",
            "          IP_ADDRESS:'5.6.7.8'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          CABLE:'cable'",
            "          HELPER_ADDRESS:'helper-address'",
            "          IP_ADDRESS:'5.6.7.9'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          CABLE:'cable'",
            "          VARIABLE:'source-verify'",
            "          DHCP:'dhcp'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_description",
            "          (description_line",
            "            DESCRIPTION:'description'",
            "            text = RAW_TEXT:' \"foobar\"'  <== mode:M_Description",
            "            NEWLINE:'\\n'  <== mode:M_Description)))",
            "      (if_inner",
            "        (if_ip_address",
            "          IP:'ip'",
            "          ADDRESS:'address'",
            "          ip = IP_ADDRESS:'1.2.3.0'",
            "          subnet = IP_ADDRESS:'255.255.255.252'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_ip_igmp",
            "          IP:'ip'",
            "          IGMP:'igmp'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_ip_igmp",
            "          IP:'ip'",
            "          IGMP:'igmp'",
            "          (ifigmp_null",
            "            MULTICAST_STATIC_ONLY:'multicast-static-only'",
            "            (null_rest_of_line",
            "              NEWLINE:'\\n'))))",
            "      (if_inner",
            "        (if_ip_igmp",
            "          IP:'ip'",
            "          IGMP:'igmp'",
            "          (ifigmp_static_group",
            "            STATIC_GROUP:'static-group'",
            "            (ifigmpsg_null",
            "              IP_ADDRESS:'239.0.0.1'",
            "              (null_rest_of_line",
            "                SOURCE:'source'",
            "                IP_ADDRESS:'1.1.1.1'",
            "                POUND:'#'",
            "                RAW_TEXT:' layer 3 (support bundles)'  <== mode:M_Description",
            "                NEWLINE:'\\n'  <== mode:M_Description)))))",
            "      (if_inner",
            "        (if_ip_igmp",
            "          IP:'ip'",
            "          IGMP:'igmp'",
            "          (ifigmp_static_group",
            "            STATIC_GROUP:'static-group'",
            "            (ifigmpsg_null",
            "              IP_ADDRESS:'239.0.0.1'",
            "              (null_rest_of_line",
            "                SOURCE:'source'",
            "                IP_ADDRESS:'2.2.2.2'",
            "                POUND:'#'",
            "                RAW_TEXT:' layer 3 (support bundles)'  <== mode:M_Description",
            "                NEWLINE:'\\n'  <== mode:M_Description)))))",
            "      (if_inner",
            "        (if_ip_igmp",
            "          IP:'ip'",
            "          IGMP:'igmp'",
            "          (ifigmp_static_group",
            "            STATIC_GROUP:'static-group'",
            "            (ifigmpsg_null",
            "              IP_ADDRESS:'239.1.0.1'",
            "              (null_rest_of_line",
            "                SOURCE:'source'",
            "                IP_ADDRESS:'3.3.3.3'",
            "                POUND:'#'",
            "                RAW_TEXT:' layer 3 (support bundles)'  <== mode:M_Description",
            "                NEWLINE:'\\n'  <== mode:M_Description)))))",
            "      (if_inner",
            "        (if_ip_igmp",
            "          IP:'ip'",
            "          IGMP:'igmp'",
            "          (ifigmp_static_group",
            "            STATIC_GROUP:'static-group'",
            "            (ifigmpsg_null",
            "              IP_ADDRESS:'239.1.0.1'",
            "              (null_rest_of_line",
            "                SOURCE:'source'",
            "                IP_ADDRESS:'4.4.4.4'",
            "                POUND:'#'",
            "                RAW_TEXT:' layer 3 (support bundles)'  <== mode:M_Description",
            "                NEWLINE:'\\n'  <== mode:M_Description)))))",
            "      (if_inner",
            "        (if_null_block",
            "          IP:'ip'",
            "          UNREACHABLES:'unreachables'",
            "          NO:'no'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_ip_vrf_forwarding",
            "          IP:'ip'",
            "          VRF:'vrf'",
            "          FORWARDING:'forwarding'",
            "          vrf = (variable",
            "            VARIABLE:'foovrf')",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_ipv6",
            "          IPV6:'ipv6'",
            "          (if_ipv6_inner",
            "            (if_ipv6_enable",
            "              ENABLE:'enable'",
            "              NEWLINE:'\\n'))))",
            "      (if_inner",
            "        (if_null_block",
            "          IPV6:'ipv6'",
            "          ADDRESS:'address'",
            "          IPV6_PREFIX:'dead:beef::1/64'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          IPV6:'ipv6'",
            "          ADDRESS:'address'",
            "          IPV6_PREFIX:'beef:dead::1/64'",
            "          VARIABLE:'dhcp-link-address'",
            "          HOST:'host'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          IPV6:'ipv6'",
            "          DHCP:'dhcp'",
            "          RELAY:'relay'",
            "          DESTINATION:'destination'",
            "          IPV6_ADDRESS:'dead:beef::5'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          IPV6:'ipv6'",
            "          DHCP:'dhcp'",
            "          RELAY:'relay'",
            "          DESTINATION:'destination'",
            "          IPV6_ADDRESS:'dead:beef::6'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          IPV6:'ipv6'",
            "          ND:'nd'",
            "          VARIABLE:'dad'",
            "          ATTEMPTS:'attempts'",
            "          DEC:'0'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          IPV6:'ipv6'",
            "          ND:'nd'",
            "          VARIABLE:'managed-config-flag'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          IPV6:'ipv6'",
            "          ND:'nd'",
            "          VARIABLE:'other-config-flag'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          IPV6:'ipv6'",
            "          ND:'nd'",
            "          PREFIX:'prefix'",
            "          IPV6_PREFIX:'feed:beef:200::/64'",
            "          VARIABLE:'off-link'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          IPV6:'ipv6'",
            "          ND:'nd'",
            "          VARIABLE:'ra'",
            "          INTERVAL:'interval'",
            "          DEC:'123'",
            "          DEC:'45'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          IPV6:'ipv6'",
            "          ND:'nd'",
            "          VARIABLE:'ra'",
            "          LIFETIME:'lifetime'",
            "          DEC:'1234'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_ipv6",
            "          IPV6:'ipv6'",
            "          (if_ipv6_inner",
            "            (if_ipv6_traffic_filter",
            "              TRAFFIC_FILTER:'traffic-filter'",
            "              acl = (variable_aclname",
            "                VARIABLE:'foo-filter')",
            "              IN:'in'",
            "              NEWLINE:'\\n'))))",
            "      (if_inner",
            "        (if_ipv6",
            "          IPV6:'ipv6'",
            "          (if_ipv6_inner",
            "            (if_ipv6_traffic_filter",
            "              TRAFFIC_FILTER:'traffic-filter'",
            "              acl = (variable_aclname",
            "                VARIABLE:'bar-filter')",
            "              OUT:'out'",
            "              NEWLINE:'\\n'))))",
            "      (if_inner",
            "        (if_null_block",
            "          EXIT:'exit'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_interface",
            "      INTERFACE:'interface'",
            "      iname = (interface_name",
            "        name_prefix_alpha = M_Interface_PREFIX:'cable-mac'  <== mode:M_Interface",
            "        DEC:'1'  <== mode:M_Interface",
            "        PERIOD:'.'  <== mode:M_Interface",
            "        (range",
            "          (subrange",
            "            low = DEC:'2'  <== mode:M_Interface)))",
            "      NEWLINE:'\\n'  <== mode:M_Interface",
            "      (if_inner",
            "        (if_description",
            "          (description_line",
            "            DESCRIPTION:'description'",
            "            text = RAW_TEXT:' \"bleep\"'  <== mode:M_Description",
            "            NEWLINE:'\\n'  <== mode:M_Description)))",
            "      (if_inner",
            "        (if_null_block",
            "          CABLE:'cable'",
            "          DHCP_GIADDR:'dhcp-giaddr'",
            "          POLICY:'policy'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          CABLE:'cable'",
            "          HELPER_ADDRESS:'helper-address'",
            "          IP_ADDRESS:'6.7.8.9'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          CABLE:'cable'",
            "          HELPER_ADDRESS:'helper-address'",
            "          IP_ADDRESS:'7.8.9.0'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          CABLE:'cable'",
            "          VARIABLE:'source-verify'",
            "          DHCP:'dhcp'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          CABLE:'cable'",
            "          SUBMGMT:'submgmt'",
            "          DEFAULT:'default'",
            "          VARIABLE:'filter-group'",
            "          VARIABLE:'cm'",
            "          DOWNSTREAM:'downstream'",
            "          DEC:'123'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          CABLE:'cable'",
            "          SUBMGMT:'submgmt'",
            "          DEFAULT:'default'",
            "          VARIABLE:'filter-group'",
            "          VARIABLE:'cm'",
            "          UPSTREAM:'upstream'",
            "          DEC:'456'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          CABLE:'cable'",
            "          SUBMGMT:'submgmt'",
            "          DEFAULT:'default'",
            "          VARIABLE:'filter-group'",
            "          HOST:'host'",
            "          DOWNSTREAM:'downstream'",
            "          DEC:'123'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          CABLE:'cable'",
            "          SUBMGMT:'submgmt'",
            "          DEFAULT:'default'",
            "          VARIABLE:'filter-group'",
            "          HOST:'host'",
            "          UPSTREAM:'upstream'",
            "          DEC:'456'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_ip_address",
            "          IP:'ip'",
            "          ADDRESS:'address'",
            "          ip = IP_ADDRESS:'2.2.2.0'",
            "          subnet = IP_ADDRESS:'255.255.255.128'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_ip_address_secondary",
            "          IP:'ip'",
            "          ADDRESS:'address'",
            "          ip = IP_ADDRESS:'3.3.3.0'",
            "          subnet = IP_ADDRESS:'255.255.255.192'",
            "          SECONDARY:'secondary'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_ip_address_secondary",
            "          IP:'ip'",
            "          ADDRESS:'address'",
            "          ip = IP_ADDRESS:'4.4.4.0'",
            "          subnet = IP_ADDRESS:'255.255.255.240'",
            "          SECONDARY:'secondary'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_ip_address_secondary",
            "          IP:'ip'",
            "          ADDRESS:'address'",
            "          ip = IP_ADDRESS:'5.5.0.0'",
            "          subnet = IP_ADDRESS:'255.255.254.0'",
            "          SECONDARY:'secondary'",
            "          DHCP_GIADDR:'dhcp-giaddr'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          IP:'ip'",
            "          UNREACHABLES:'unreachables'",
            "          NO:'no'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          EXIT:'exit'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_interface",
            "      INTERFACE:'interface'",
            "      iname = (interface_name",
            "        name_prefix_alpha = M_Interface_PREFIX:'ethernet'  <== mode:M_Interface",
            "        DEC:'6'  <== mode:M_Interface",
            "        FORWARD_SLASH:'/'  <== mode:M_Interface",
            "        DEC:'0'  <== mode:M_Interface",
            "        PERIOD:'.'  <== mode:M_Interface",
            "        (range",
            "          (subrange",
            "            low = DEC:'0'  <== mode:M_Interface)))",
            "      NEWLINE:'\\n'  <== mode:M_Interface",
            "      (if_inner",
            "        (if_description",
            "          (description_line",
            "            DESCRIPTION:'description'",
            "            text = RAW_TEXT:' \"squeee\"'  <== mode:M_Description",
            "            NEWLINE:'\\n'  <== mode:M_Description)))",
            "      (if_inner",
            "        (if_ip_address",
            "          IP:'ip'",
            "          ADDRESS:'address'",
            "          ip = IP_ADDRESS:'11.22.33.44'",
            "          subnet = IP_ADDRESS:'255.255.255.252'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_ip_igmp",
            "          IP:'ip'",
            "          IGMP:'igmp'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_ip_igmp",
            "          IP:'ip'",
            "          IGMP:'igmp'",
            "          (ifigmp_null",
            "            VERSION:'version'",
            "            (null_rest_of_line",
            "              DEC:'3'",
            "              NEWLINE:'\\n'))))",
            "      (if_inner",
            "        (if_null_block",
            "          IP:'ip'",
            "          PIM:'pim'",
            "          SPARSE_MODE_SSM:'sparse-mode-ssm'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_ip_router_isis",
            "          IP:'ip'",
            "          ROUTER:'router'",
            "          ISIS:'isis'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n')))",
            "      (if_inner",
            "        (if_null_block",
            "          IP:'ip'",
            "          UNREACHABLES:'unreachables'",
            "          NO:'no'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          IPV6:'ipv6'",
            "          ADDRESS:'address'",
            "          IPV6_PREFIX:'dada:ebeb::2/126'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_isis_circuit_type",
            "          ISIS:'isis'",
            "          CIRCUIT_TYPE:'circuit-type'",
            "          LEVEL_1:'level-1'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_ipv6",
            "          IPV6:'ipv6'",
            "          (if_ipv6_inner",
            "            (if_ipv6_enable",
            "              ENABLE:'enable'",
            "              NEWLINE:'\\n'))))",
            "      (if_inner",
            "        (if_null_block",
            "          IPV6:'ipv6'",
            "          ROUTER:'router'",
            "          ISIS:'isis'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          ISIS:'isis'",
            "          DS_HELLO_INTERVAL:'ds-hello-interval'",
            "          DEC:'12345'",
            "          LEVEL_1:'level-1'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_isis_hello_interval",
            "          ISIS:'isis'",
            "          HELLO_INTERVAL:'hello-interval'",
            "          DEC:'12345'",
            "          LEVEL_1:'level-1'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          ISIS:'isis'",
            "          HELLO_MULTIPLIER:'hello-multiplier'",
            "          DEC:'5'",
            "          LEVEL_1:'level-1'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          ISIS:'isis'",
            "          LSP_INTERVAL:'lsp-interval'",
            "          DEC:'21'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          ISIS:'isis'",
            "          PROTOCOL:'protocol'",
            "          NO:'no'",
            "          SHUTDOWN:'shutdown'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          ISIS:'isis'",
            "          SMALL_HELLO:'small-hello'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          ISIS:'isis'",
            "          WIDE_METRIC:'wide-metric'",
            "          DEC:'2121'",
            "          LEVEL_1:'level-1'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          EXIT:'exit'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_interface",
            "      INTERFACE:'interface'",
            "      iname = (interface_name",
            "        name_prefix_alpha = M_Interface_PREFIX:'ethernet'  <== mode:M_Interface",
            "        DEC:'6'  <== mode:M_Interface",
            "        FORWARD_SLASH:'/'  <== mode:M_Interface",
            "        DEC:'0'  <== mode:M_Interface",
            "        PERIOD:'.'  <== mode:M_Interface",
            "        (range",
            "          (subrange",
            "            low = DEC:'48'  <== mode:M_Interface)))",
            "      NEWLINE:'\\n'  <== mode:M_Interface",
            "      (if_inner",
            "        (if_null_block",
            "          ENCAPSULATION:'encapsulation'",
            "          DOT1Q:'dot1q'",
            "          DEC:'48'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_ip_address",
            "          IP:'ip'",
            "          ADDRESS:'address'",
            "          ip = IP_ADDRESS:'22.33.44.55'",
            "          subnet = IP_ADDRESS:'255.255.255.252'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_ip_vrf_forwarding",
            "          IP:'ip'",
            "          VRF:'vrf'",
            "          FORWARDING:'forwarding'",
            "          vrf = (variable",
            "            VARIABLE:'bleepvrf')",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          EXIT:'exit'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_interface",
            "      INTERFACE:'interface'",
            "      iname = (interface_name",
            "        name_prefix_alpha = M_Interface_PREFIX:'ethernet'  <== mode:M_Interface",
            "        DEC:'6'  <== mode:M_Interface",
            "        FORWARD_SLASH:'/'  <== mode:M_Interface",
            "        (range",
            "          (subrange",
            "            low = DEC:'1'  <== mode:M_Interface)))",
            "      NEWLINE:'\\n'  <== mode:M_Interface",
            "      (if_inner",
            "        (if_ip_inband_access_group",
            "          IP:'ip'",
            "          INBAND:'inband'",
            "          ACCESS_GROUP:'access-group'",
            "          name = (variable_permissive",
            "            VARIABLE:'fleep-acl')",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          FLOWCONTROL:'flowcontrol'",
            "          RECEIVE:'receive'",
            "          ON:'on'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          FLOWCONTROL:'flowcontrol'",
            "          SEND:'send'",
            "          ON:'on'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_shutdown",
            "          NO:'no'",
            "          SHUTDOWN:'shutdown'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_interface",
            "      INTERFACE:'interface'",
            "      iname = (interface_name",
            "        name_prefix_alpha = M_Interface_PREFIX:'mgmt'  <== mode:M_Interface",
            "        DEC:'6'  <== mode:M_Interface",
            "        FORWARD_SLASH:'/'  <== mode:M_Interface",
            "        (range",
            "          (subrange",
            "            low = DEC:'0'  <== mode:M_Interface)))",
            "      NEWLINE:'\\n'  <== mode:M_Interface",
            "      (if_inner",
            "        (if_no_ip_address",
            "          NO:'no'",
            "          IP:'ip'",
            "          ADDRESS:'address'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          NO:'no'",
            "          ACTIVE:'active'",
            "          IP:'ip'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_shutdown",
            "          NO:'no'",
            "          SHUTDOWN:'shutdown'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          EXIT:'exit'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          EXIT:'exit'",
            "          NEWLINE:'\\n'))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/cadant_ip_route" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        SHELFNAME:'shelfname'",
            "        DOUBLE_QUOTE:'\"'",
            "        DOUBLE_QUOTE:'\"'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      quoted_name = (double_quoted_string",
            "        DOUBLE_QUOTE:'\"'",
            "        VARIABLE:'cadant_ip_route'",
            "        DOUBLE_QUOTE:'\"')",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (ip_route_stanza",
            "      IP:'ip'",
            "      ROUTE:'route'",
            "      VRF:'vrf'",
            "      vrf = (variable",
            "        MANAGEMENT:'management')",
            "      (ip_route_tail",
            "        address = IP_ADDRESS:'0.0.0.0'",
            "        mask = IP_ADDRESS:'0.0.0.0'",
            "        nexthopip = IP_ADDRESS:'127.0.0.1'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (ip_route_stanza",
            "      IP:'ip'",
            "      ROUTE:'route'",
            "      (ip_route_tail",
            "        address = IP_ADDRESS:'0.0.0.0'",
            "        mask = IP_ADDRESS:'0.0.0.0'",
            "        nexthopip = IP_ADDRESS:'1.1.1.1'",
            "        ADMIN_DIST:'admin-dist'",
            "        distance = DEC:'253'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (ip_route_stanza",
            "      IP:'ip'",
            "      ROUTE:'route'",
            "      (ip_route_tail",
            "        address = IP_ADDRESS:'0.0.0.0'",
            "        mask = IP_ADDRESS:'0.0.0.0'",
            "        nexthopip = IP_ADDRESS:'2.2.2.2'",
            "        ADMIN_DIST:'admin-dist'",
            "        distance = DEC:'254'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (ip_route_stanza",
            "      IP:'ip'",
            "      ROUTE:'route'",
            "      (ip_route_tail",
            "        address = IP_ADDRESS:'1.1.1.0'",
            "        mask = IP_ADDRESS:'255.255.255.0'",
            "        nexthopip = IP_ADDRESS:'6.6.6.6'",
            "        METRIC:'metric'",
            "        metric = DEC:'123'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (ip_route_stanza",
            "      IP:'ip'",
            "      ROUTE:'route'",
            "      (ip_route_tail",
            "        address = IP_ADDRESS:'22.71.224.0'",
            "        mask = IP_ADDRESS:'255.255.224.0'",
            "        nexthopip = IP_ADDRESS:'22.71.252.185'",
            "        METRIC:'metric'",
            "        metric = DEC:'110'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (ip_route_stanza",
            "      IP:'ip'",
            "      ROUTE:'route'",
            "      VRF:'vrf'",
            "      vrf = (variable",
            "        VARIABLE:'foobar')",
            "      (ip_route_tail",
            "        address = IP_ADDRESS:'0.0.0.0'",
            "        mask = IP_ADDRESS:'0.0.0.0'",
            "        nexthopip = IP_ADDRESS:'7.7.7.7'",
            "        METRIC:'metric'",
            "        metric = DEC:'111'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (ip_route_stanza",
            "      IP:'ip'",
            "      ROUTE:'route'",
            "      VRF:'vrf'",
            "      vrf = (variable",
            "        VARIABLE:'foobar')",
            "      (ip_route_tail",
            "        address = IP_ADDRESS:'9.9.9.0'",
            "        mask = IP_ADDRESS:'255.255.255.224'",
            "        nexthopip = IP_ADDRESS:'10.10.10.10'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        IPV6:'ipv6'",
            "        ROUTE:'route'",
            "        IPV6_PREFIX:'::/0'",
            "        IPV6_ADDRESS:'feed::5'",
            "        ADMIN_DISTANCE:'admin-distance'",
            "        DEC:'253'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        IPV6:'ipv6'",
            "        ROUTE:'route'",
            "        IPV6_PREFIX:'::/0'",
            "        IPV6_ADDRESS:'fede::5'",
            "        ADMIN_DISTANCE:'admin-distance'",
            "        DEC:'254'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        IPV6:'ipv6'",
            "        ROUTE:'route'",
            "        IPV6_PREFIX:'dead:beef::/40'",
            "        NULL:'null'",
            "        DEC:'0'",
            "        ADMIN_DISTANCE:'admin-distance'",
            "        DEC:'255'",
            "        NEWLINE:'\\n')))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/cadant_isis" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        SHELFNAME:'shelfname'",
            "        DOUBLE_QUOTE:'\"'",
            "        DOUBLE_QUOTE:'\"'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      quoted_name = (double_quoted_string",
            "        DOUBLE_QUOTE:'\"'",
            "        VARIABLE:'cadant_isis'",
            "        DOUBLE_QUOTE:'\"')",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (router_isis_stanza",
            "      ROUTER:'router'",
            "      ISIS:'isis'",
            "      NEWLINE:'\\n'",
            "      (is_stanza",
            "        (common_is_stanza",
            "          (null_is_stanza",
            "            AUTHENTICATION:'authentication'",
            "            (null_rest_of_line",
            "              VARIABLE:'key-chain'  <== mode:M_Authentication",
            "              ISIS:'isis'",
            "              LEVEL_1:'level-1'",
            "              NEWLINE:'\\n'))))",
            "      (is_stanza",
            "        (common_is_stanza",
            "          (null_is_stanza",
            "            AUTHENTICATION:'authentication'",
            "            (null_rest_of_line",
            "              VARIABLE:'mode'  <== mode:M_Authentication",
            "              VARIABLE:'text'",
            "              LEVEL_1:'level-1'",
            "              NEWLINE:'\\n'))))",
            "      (is_stanza",
            "        (common_is_stanza",
            "          (is_type_is_stanza",
            "            IS_TYPE:'is-type'",
            "            LEVEL_1:'level-1'",
            "            NEWLINE:'\\n')))",
            "      (is_stanza",
            "        (common_is_stanza",
            "          (null_is_stanza",
            "            LSP_GEN_INTERVAL:'lsp-gen-interval'",
            "            (null_rest_of_line",
            "              DEC:'1234'",
            "              LEVEL_1:'level-1'",
            "              NEWLINE:'\\n'))))",
            "      (is_stanza",
            "        (common_is_stanza",
            "          (null_is_stanza",
            "            LSP_REFRESH_INTERVAL:'lsp-refresh-interval'",
            "            (null_rest_of_line",
            "              DEC:'12345'",
            "              NEWLINE:'\\n'))))",
            "      (is_stanza",
            "        (common_is_stanza",
            "          (null_is_stanza",
            "            MAX_LSP_LIFETIME:'max-lsp-lifetime'",
            "            (null_rest_of_line",
            "              DEC:'23456'",
            "              NEWLINE:'\\n'))))",
            "      (is_stanza",
            "        (common_is_stanza",
            "          (metric_style_is_stanza",
            "            METRIC_STYLE:'metric-style'",
            "            WIDE:'wide'",
            "            LEVEL_1:'level-1'",
            "            NEWLINE:'\\n')))",
            "      (is_stanza",
            "        (common_is_stanza",
            "          (net_is_stanza",
            "            NET:'net'",
            "            ISO_ADDRESS:'12.3456.7890.1234.5678.90'  <== mode:M_ISO_Address",
            "            NEWLINE:'\\n')))",
            "      (is_stanza",
            "        (address_family_is_stanza",
            "          ADDRESS_FAMILY:'address-family'",
            "          IPV4:'ipv4'",
            "          NEWLINE:'\\n'",
            "          (isaf_stanza",
            "            (common_is_stanza",
            "              (distribute_list_is_stanza",
            "                DISTRIBUTE_LIST:'distribute-list'",
            "                name = (variable",
            "                  VARIABLE:'blah-acl-99')",
            "                OUT:'out'",
            "                CONNECTED:'connected'",
            "                NEWLINE:'\\n')))",
            "          (isaf_stanza",
            "            (common_is_stanza",
            "              (null_is_stanza",
            "                ENABLE:'enable'",
            "                (null_rest_of_line",
            "                  NEWLINE:'\\n'))))",
            "          (isaf_stanza",
            "            (common_is_stanza",
            "              (redistribute_connected_is_stanza",
            "                REDISTRIBUTE:'redistribute'",
            "                CONNECTED:'connected'",
            "                LEVEL_1:'level-1'",
            "                NEWLINE:'\\n')))",
            "          (address_family_footer",
            "            EXIT:'exit'",
            "            NEWLINE:'\\n')))",
            "      (is_stanza",
            "        (address_family_is_stanza",
            "          ADDRESS_FAMILY:'address-family'",
            "          IPV6:'ipv6'",
            "          NEWLINE:'\\n'",
            "          (isaf_stanza",
            "            (common_is_stanza",
            "              (distribute_list_is_stanza",
            "                DISTRIBUTE_LIST:'distribute-list'",
            "                name = (variable",
            "                  VARIABLE:'blah-ipv6-access-list')",
            "                OUT:'out'",
            "                CONNECTED:'connected'",
            "                NEWLINE:'\\n')))",
            "          (isaf_stanza",
            "            (common_is_stanza",
            "              (null_is_stanza",
            "                ENABLE:'enable'",
            "                (null_rest_of_line",
            "                  NEWLINE:'\\n'))))",
            "          (isaf_stanza",
            "            (common_is_stanza",
            "              (redistribute_connected_is_stanza",
            "                REDISTRIBUTE:'redistribute'",
            "                CONNECTED:'connected'",
            "                LEVEL_1:'level-1'",
            "                NEWLINE:'\\n')))",
            "          (address_family_footer",
            "            EXIT:'exit'",
            "            NEWLINE:'\\n')))",
            "      (is_stanza",
            "        (common_is_stanza",
            "          (null_is_stanza",
            "            NO:'no'",
            "            SHUTDOWN:'shutdown'",
            "            (null_rest_of_line",
            "              NEWLINE:'\\n'))))))",
            "  (stanza",
            "    (s_null",
            "      (null_block",
            "        EXIT:'exit'",
            "        (null_rest_of_line",
            "          NEWLINE:'\\n'))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/cadant_line" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        SHELFNAME:'shelfname'",
            "        DOUBLE_QUOTE:'\"'",
            "        DOUBLE_QUOTE:'\"'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      quoted_name = (double_quoted_string",
            "        DOUBLE_QUOTE:'\"'",
            "        VARIABLE:'cadant_line'",
            "        DOUBLE_QUOTE:'\"')",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_line_cadant",
            "      LINE:'line'",
            "      (line_type_cadant",
            "        CONSOLE:'console')",
            "      start_line = DEC:'0'",
            "      (lc_null",
            "        ACCOUNTING:'accounting'",
            "        (null_rest_of_line",
            "          DOUBLE_QUOTE:'\"'",
            "          VARIABLE:'baz'",
            "          DOUBLE_QUOTE:'\"'",
            "          COMMAND:'command'",
            "          VARIABLE:'0'  <== mode:M_Command",
            "          VARIABLE:'stop-only'  <== mode:M_Command",
            "          NEWLINE:'\\n'  <== mode:M_Command))))",
            "  (stanza",
            "    (s_line_cadant",
            "      LINE:'line'",
            "      (line_type_cadant",
            "        CONSOLE:'console')",
            "      start_line = DEC:'0'",
            "      (lc_null",
            "        AUTHENTICATION:'authentication'",
            "        (null_rest_of_line",
            "          M_Authentication_DOUBLE_QUOTE:'\"'  <== mode:M_Authentication",
            "          M_DoubleQuote_TEXT:'foo'  <== mode:M_DoubleQuote",
            "          DOUBLE_QUOTE:'\"'  <== mode:M_DoubleQuote",
            "          ENABLE_AUTHENTICATION:'enable-authentication'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_line_cadant",
            "      LINE:'line'",
            "      (line_type_cadant",
            "        CONSOLE:'console')",
            "      start_line = DEC:'0'",
            "      (lc_null",
            "        AUTHENTICATION:'authentication'",
            "        (null_rest_of_line",
            "          M_Authentication_DOUBLE_QUOTE:'\"'  <== mode:M_Authentication",
            "          M_DoubleQuote_TEXT:'foo'  <== mode:M_DoubleQuote",
            "          DOUBLE_QUOTE:'\"'  <== mode:M_DoubleQuote",
            "          LOGIN_AUTHENTICATION:'login-authentication'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_line_cadant",
            "      LINE:'line'",
            "      (line_type_cadant",
            "        CONSOLE:'console')",
            "      start_line = DEC:'0'",
            "      (lc_null",
            "        AUTHORIZATION:'authorization'",
            "        (null_rest_of_line",
            "          DOUBLE_QUOTE:'\"'",
            "          VARIABLE:'bar'",
            "          DOUBLE_QUOTE:'\"'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_line_cadant",
            "      LINE:'line'",
            "      (line_type_cadant",
            "        CONSOLE:'console')",
            "      start_line = DEC:'0'",
            "      (lc_null",
            "        IDLE_TIMEOUT:'idle-timeout'",
            "        (null_rest_of_line",
            "          DEC:'1234'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_line_cadant",
            "      LINE:'line'",
            "      (line_type_cadant",
            "        CONSOLE:'console')",
            "      start_line = DEC:'0'",
            "      end_line = DEC:'1'",
            "      (lc_null",
            "        SPEED:'speed'",
            "        (null_rest_of_line",
            "          DEC:'12345'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_line_cadant",
            "      LINE:'line'",
            "      (line_type_cadant",
            "        VTY:'vty')",
            "      start_line = DEC:'0'",
            "      (lc_null",
            "        LENGTH:'length'",
            "        (null_rest_of_line",
            "          DEC:'123'",
            "          NEWLINE:'\\n'))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/cadant_logging" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        SHELFNAME:'shelfname'",
            "        DOUBLE_QUOTE:'\"'",
            "        DOUBLE_QUOTE:'\"'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      quoted_name = (double_quoted_string",
            "        DOUBLE_QUOTE:'\"'",
            "        VARIABLE:'cadant_logging'",
            "        DOUBLE_QUOTE:'\"')",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_host",
            "          HOST:'host'",
            "          hostname = (variable",
            "            IP_ADDRESS:'1.2.3.4')",
            "          FACILITY:'facility'",
            "          name = (variable",
            "            VARIABLE:'local0')",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_null",
            "          LOCAL_VOLATILE:'local-volatile'",
            "          (null_rest_of_line",
            "            DEC:'8'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_logging",
            "      NO:'no'",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_null",
            "          OVERRIDE:'override'",
            "          (null_rest_of_line",
            "            EVENT:'event'",
            "            DEC:'12345678'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_source_interface",
            "          SOURCE_INTERFACE:'source-interface'",
            "          (interface_name",
            "            name_prefix_alpha = M_Interface_PREFIX:'loopback'  <== mode:M_Interface",
            "            (range",
            "              (subrange",
            "                low = DEC:'0'  <== mode:M_Interface)))",
            "          NEWLINE:'\\n'  <== mode:M_Interface))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_null",
            "          SYSLOG:'syslog'",
            "          (null_rest_of_line",
            "            DEC:'8'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_null",
            "          PROPRIETARY:'proprietary'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n')))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/cadant_misc" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        SHELFNAME:'shelfname'",
            "        DOUBLE_QUOTE:'\"'",
            "        DOUBLE_QUOTE:'\"'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      quoted_name = (double_quoted_string",
            "        DOUBLE_QUOTE:'\"'",
            "        VARIABLE:'cadant_misc'",
            "        DOUBLE_QUOTE:'\"')",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        ACCOUNTING:'accounting'",
            "        VARIABLE:'AccountList'",
            "        TACACS:'tacacs'",
            "        VARIABLE:'TACPLUS'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        AGING:'aging'",
            "        VARIABLE:'idle-mac'",
            "        DEC:'573696'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        AGING:'aging'",
            "        VARIABLE:'stale-mac'",
            "        DEC:'86400'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        ARP:'arp'",
            "        TIMEOUT:'timeout'",
            "        DEC:'345600'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        ARP:'arp'",
            "        STATE:'state'",
            "        VARIABLE:'searching'",
            "        CABLE:'cable'",
            "        UNICAST:'unicast'",
            "        DEC:'2'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        ARP:'arp'",
            "        STATE:'state'",
            "        VARIABLE:'searching'",
            "        CABLE:'cable'",
            "        BROADCAST:'broadcast'",
            "        NO:'no'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_authentication",
            "      AUTHENTICATION:'authentication'",
            "      (null_rest_of_line",
            "        VARIABLE:'default'  <== mode:M_Authentication",
            "        LOCAL:'local'",
            "        NONE:'none'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_authentication",
            "      AUTHENTICATION:'authentication'",
            "      (null_rest_of_line",
            "        VARIABLE:'AuthenList'  <== mode:M_Authentication",
            "        TACACS:'tacacs'",
            "        VARIABLE:'TACPLUS'",
            "        LOCAL:'local'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        AUTHORIZATION:'authorization'",
            "        VARIABLE:'AuthorList'",
            "        TACACS:'tacacs'",
            "        VARIABLE:'TACPLUS'",
            "        LOCAL:'local'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        AUTHORIZATION:'authorization'",
            "        VARIABLE:'author_default'",
            "        LOCAL:'local'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        AUTORECOVERY:'autorecovery'",
            "        ON:'on'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        COS_MAPPING:'cos-mapping'",
            "        VARIABLE:'down-max-traffic-burst'",
            "        DEC:'123456'",
            "        VARIABLE:'class-id'",
            "        DEC:'1'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        COS_MAPPING:'cos-mapping'",
            "        VARIABLE:'up-tos-and-mask'",
            "        DEC:'0'",
            "        VARIABLE:'class-id'",
            "        DEC:'1'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_enable",
            "      ENABLE:'enable'",
            "      (enable_null",
            "        ENCRYPTED_PASSWORD:'encrypted-password'",
            "        (null_rest_of_line",
            "          VARIABLE:'0123456789abcdef0123456789abcdef'",
            "          PRIVILEGE:'privilege'",
            "          DEC:'15'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        FAN:'fan'",
            "        MONITOR:'monitor'",
            "        DEC:'0'",
            "        NO:'no'",
            "        SHUTDOWN:'shutdown'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        FAN:'fan'",
            "        VARIABLE:'offset'",
            "        DEC:'123'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        FTP_SERVER:'ftp-server'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        IP:'ip'",
            "        NO:'no'",
            "        DOMAIN_LOOKUP:'domain-lookup'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_ip_ssh",
            "      IP:'ip'",
            "      SSH:'ssh'",
            "      (ip_ssh_null",
            "        NO:'no'",
            "        SHUTDOWN:'shutdown'",
            "        (null_rest_of_line",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_ip_ssh",
            "      IP:'ip'",
            "      SSH:'ssh'",
            "      (ip_ssh_private_key",
            "        PRIVATE_KEY:'private-key'",
            "        DSA1024:'dsa1024'  <== mode:M_SshKey",
            "        NEWLINE:'\\n'  <== mode:M_CadantSshKey",
            "        M_CadantSshKey_LINE:'0123456789abcdef0123456789abcdef0123456789abcdef01\\n'  <== mode:M_CadantSshKey",
            "        M_CadantSshKey_LINE:'0123456789abcdef0123456789abcdef0123456789abcdef01\\n'  <== mode:M_CadantSshKey",
            "        M_CadantSshKey_LINE:'0123456789abcdef0123456789abcdef0123456789abcdef01\\n'  <== mode:M_CadantSshKey",
            "        M_CadantSshKey_LINE:'0123456789abcdef0123456789abcdef0123456789abcdef01\\n'  <== mode:M_CadantSshKey",
            "        M_CadantSshKey_LINE:'0123456789abcdef0123456789abcdef0123456789abcdef01\\n'  <== mode:M_CadantSshKey",
            "        M_CadantSshKey_LINE:'0123456789abcdef0123456789abcdef0123456789abcdef01\\n'  <== mode:M_CadantSshKey",
            "        M_CadantSshKey_LINE:'0123456789abcdef0123456789abcdef0123456789abcdef01\\n'  <== mode:M_CadantSshKey",
            "        M_CadantSshKey_LINE:'0123456789abcdef0123456789abcdef0123456789abcdef01\\n'  <== mode:M_CadantSshKey",
            "        M_CadantSshKey_LINE:'0123456789abcdef0123456789abcdef0123456789abcdef01\\n'  <== mode:M_CadantSshKey",
            "        M_CadantSshKey_LINE:'0123456789abcdef0123456789abcdef0123456789abcdef01\\n'  <== mode:M_CadantSshKey",
            "        M_CadantSshKey_LINE:'0123456789abcdef0123456789abcdef0123456789abcdef01\\n'  <== mode:M_CadantSshKey",
            "        M_CadantSshKey_LINE:'0123456789abcdef0123456789abcdef0123456789abcdef01\\n'  <== mode:M_CadantSshKey",
            "        M_CadantSshKey_LINE:'0123456789abcdef0123456789abcdef0123456789abcdef01\\n'  <== mode:M_CadantSshKey",
            "        M_CadantSshKey_LINE:'0123456789abcdef0123456789abcdef0123456789abcdef01\\n'  <== mode:M_CadantSshKey",
            "        M_CadantSshKey_LINE:'0123456789abcdef0123456789abcdef0123456789abcdef01\\n'  <== mode:M_CadantSshKey",
            "        M_CadantSshKey_LINE:'0123456789abcdef0123456789abcdef0123456789abcdef01\\n'  <== mode:M_CadantSshKey",
            "        M_CadantSshKey_LINE:'0123456789abcdef0123456789abcdef0123456789abcdef01\\n'  <== mode:M_CadantSshKey",
            "        M_CadantSshKey_LINE:'0123456789abcdef0123456789abcdef0123456789abcdef01\\n'  <== mode:M_CadantSshKey",
            "        M_CadantSshKey_LINE:'0123456789abcdef0123456789abcdef0123456789abcdef01\\n'  <== mode:M_CadantSshKey",
            "        M_CadantSshKey_LINE:'0123456789abcdef0123456789abcdef0123456789abcdef01\\n'  <== mode:M_CadantSshKey",
            "        M_CadantSshKey_LINE:'0123456789abcdef0123456789abcdef0123456789abcdef01\\n'  <== mode:M_CadantSshKey",
            "        M_CadantSshKey_LINE:'0123456789abcdef0123456789abcdef0123456789abcdef01\\n'  <== mode:M_CadantSshKey",
            "        M_CadantSshKey_LINE:'0123456789abcdef0123456789abcdef0123456789abcdef01\\n'  <== mode:M_CadantSshKey",
            "        M_CadantSshKey_LINE:'0123456789abcdef0123456789abcdef0123456789abcdef01\\n'  <== mode:M_CadantSshKey",
            "        M_CadantSshKey_LINE:'0123456789abcdef0123456789abcdef0123456789abcdef01\\n'  <== mode:M_CadantSshKey",
            "        M_CadantSshKey_LINE:'0123456789abcdef0123456789abcdef0123456789abcdef01\\n'  <== mode:M_CadantSshKey",
            "        M_CadantSshKey_LINE:'0123456789abcdef0123456789abcdef0123456789abcdef01\\n'  <== mode:M_CadantSshKey",
            "        M_CadantSshKey_LINE:'0123456789abcdef0123456789abcdef0123456789abcdef01\\n'  <== mode:M_CadantSshKey",
            "        M_CadantSshKey_LINE:'0123456789abcdef0123456789abcdef0123456789abcdef01\\n'  <== mode:M_CadantSshKey",
            "        M_CadantSshKey_LINE:'0123456789abcdef01234567\\n'  <== mode:M_CadantSshKey",
            "        END_CADANT:'/end # end of ssh private-key\\n'  <== mode:M_CadantSshKey)))",
            "  (stanza",
            "    (s_ip_ssh",
            "      IP:'ip'",
            "      SSH:'ssh'",
            "      (ip_ssh_public_key",
            "        PUBLIC_KEY:'public-key'",
            "        DSA1024:'dsa1024'  <== mode:M_SshKey",
            "        NEWLINE:'\\n'  <== mode:M_CadantSshKey",
            "        M_CadantSshKey_LINE:'0123456789abcdef0123456789abcdef0123456789abcdef01\\n'  <== mode:M_CadantSshKey",
            "        M_CadantSshKey_LINE:'0123456789abcdef0123456789abcdef0123456789abcdef01\\n'  <== mode:M_CadantSshKey",
            "        M_CadantSshKey_LINE:'0123456789abcdef0123456789abcdef0123456789abcdef01\\n'  <== mode:M_CadantSshKey",
            "        M_CadantSshKey_LINE:'0123456789abcdef0123456789abcdef0123456789abcdef01\\n'  <== mode:M_CadantSshKey",
            "        M_CadantSshKey_LINE:'0123456789abcdef0123456789abcdef0123456789abcdef01\\n'  <== mode:M_CadantSshKey",
            "        M_CadantSshKey_LINE:'0123456789abcdef0123456789abcdef0123456789abcdef01\\n'  <== mode:M_CadantSshKey",
            "        M_CadantSshKey_LINE:'0123456789abcdef0123456789abcdef0123456789abcdef01\\n'  <== mode:M_CadantSshKey",
            "        M_CadantSshKey_LINE:'0123456789abcdef0123456789abcdef0123456789abcdef01\\n'  <== mode:M_CadantSshKey",
            "        M_CadantSshKey_LINE:'0123456789abcdef0123456789abcdef0123456789abcdef01\\n'  <== mode:M_CadantSshKey",
            "        M_CadantSshKey_LINE:'0123456789abcdef0123456789abcdef0123456789abcdef01\\n'  <== mode:M_CadantSshKey",
            "        M_CadantSshKey_LINE:'0123456789abcdef0123456789abcdef0123456789abcdef01\\n'  <== mode:M_CadantSshKey",
            "        M_CadantSshKey_LINE:'0123456789abcdef0123456789abcdef0123\\n'  <== mode:M_CadantSshKey",
            "        END_CADANT:'/end  # end of ssh public-key\\n'  <== mode:M_CadantSshKey)))",
            "  (stanza",
            "    (s_ip_dhcp",
            "      IPV6:'ipv6'",
            "      DHCP:'dhcp'",
            "      (ip_dhcp_relay",
            "        RELAY:'relay'",
            "        (ip_dhcp_relay_null",
            "          USE_LINK_ADDRESS:'use-link-address'",
            "          (null_rest_of_line",
            "            NO:'no'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        IPV6:'ipv6'",
            "        HOP_LIMIT:'hop-limit'",
            "        DEC:'123'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        IPV6:'ipv6'",
            "        ND:'nd'",
            "        STATE:'state'",
            "        VARIABLE:'searching'",
            "        CABLE:'cable'",
            "        MULTICAST:'multicast'",
            "        NO:'no'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        IPV6:'ipv6'",
            "        ND:'nd'",
            "        STATE:'state'",
            "        VARIABLE:'searching'",
            "        CABLE:'cable'",
            "        UNICAST:'unicast'",
            "        DEC:'3'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        IPV6:'ipv6'",
            "        PD_ROUTE_INJECTION:'pd-route-injection'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_key",
            "      KEY:'key'",
            "      CHAIN:'chain'",
            "      name = (variable_permissive",
            "        VARIABLE:'abc'",
            "        KEY:'key'",
            "        DEC:'0'",
            "        KEY_STRING:'key-string'",
            "        VARIABLE:'0123456789abcdef'",
            "        HIDDEN_LITERAL:'hidden')",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_key",
            "      KEY:'key'",
            "      CHAIN:'chain'",
            "      name = (variable_permissive",
            "        VARIABLE:'def'",
            "        KEY:'key'",
            "        DEC:'1'",
            "        KEY_STRING:'key-string'",
            "        VARIABLE:'0123456789abcdef'",
            "        HIDDEN_LITERAL:'hidden')",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_ntp",
            "      NTP:'ntp'",
            "      (ntp_common",
            "        (ntp_authentication",
            "          AUTHENTICATION:'authentication'",
            "          NEWLINE:'\\n'  <== mode:M_Authentication))))",
            "  (stanza",
            "    (s_ntp",
            "      NTP:'ntp'",
            "      (ntp_common",
            "        (ntp_server",
            "          SERVER:'server'",
            "          hostname = (variable",
            "            IP_ADDRESS:'1.2.3.4')",
            "          MINPOLL:'minpoll'",
            "          DEC:'6'",
            "          MAXPOLL:'maxpoll'",
            "          DEC:'7'",
            "          VERSION:'version'",
            "          ver = DEC:'4'",
            "          KEY:'key'",
            "          key = DEC:'0'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_ntp",
            "      NTP:'ntp'",
            "      (ntp_common",
            "        (ntp_server",
            "          SERVER:'server'",
            "          hostname = (variable",
            "            IP_ADDRESS:'5.6.7.8')",
            "          MINPOLL:'minpoll'",
            "          DEC:'6'",
            "          MAXPOLL:'maxpoll'",
            "          DEC:'7'",
            "          VERSION:'version'",
            "          ver = DEC:'4'",
            "          KEY:'key'",
            "          key = DEC:'0'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_ntp",
            "      NTP:'ntp'",
            "      (ntp_common",
            "        (ntp_source_interface",
            "          SOURCE_INTERFACE:'source-interface'",
            "          iname = (interface_name",
            "            name_prefix_alpha = M_Interface_PREFIX:'loopback'  <== mode:M_Interface",
            "            (range",
            "              (subrange",
            "                low = DEC:'0'  <== mode:M_Interface)))",
            "          NEWLINE:'\\n'  <== mode:M_Interface))))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        POWER_MONITOR:'power-monitor'",
            "        VARIABLE:'A'",
            "        NO:'no'",
            "        SHUTDOWN:'shutdown'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        POWER_MONITOR:'power-monitor'",
            "        VARIABLE:'B'",
            "        NO:'no'",
            "        SHUTDOWN:'shutdown'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_block",
            "        SLOT:'slot'",
            "        (null_rest_of_line",
            "          DEC:'0'",
            "          VARIABLE:'spare-group'",
            "          DEC:'0'",
            "          VARIABLE:'failback-override'",
            "          VARIABLE:'fpgaCrcErr'",
            "          AUTO:'auto'",
            "          NEWLINE:'\\n')",
            "        (null_inner",
            "          SLOT:'slot'",
            "          (null_rest_of_line",
            "            DEC:'0'",
            "            VARIABLE:'spare-group'",
            "            DEC:'0'",
            "            VARIABLE:'manual'",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          SLOT:'slot'",
            "          (null_rest_of_line",
            "            DEC:'0'",
            "            TYPE:'type'",
            "            VARIABLE:'ucam'",
            "            NAME:'name'",
            "            VARIABLE:'\"slot0-foo\"'  <== mode:M_Name",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          SLOT:'slot'",
            "          (null_rest_of_line",
            "            DEC:'1'",
            "            VARIABLE:'spare-group'",
            "            DEC:'0'",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          SLOT:'slot'",
            "          (null_rest_of_line",
            "            DEC:'1'",
            "            TYPE:'type'",
            "            VARIABLE:'dcam-b'",
            "            NAME:'name'",
            "            VARIABLE:'\"slot1-bar\"'  <== mode:M_Name",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          SLOT:'slot'",
            "          (null_rest_of_line",
            "            DEC:'2'",
            "            TYPE:'type'",
            "            VARIABLE:'rsm'",
            "            NAME:'name'",
            "            VARIABLE:'\"slot3-rsm\"'  <== mode:M_Name",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          SLOT:'slot'",
            "          (null_rest_of_line",
            "            DEC:'7'",
            "            NO:'no'",
            "            SHUTDOWN:'shutdown'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_tacacs",
            "      TACACS:'tacacs'",
            "      (t_null",
            "        GROUP:'group'",
            "        (null_rest_of_line",
            "          VARIABLE:'TACPLUS'",
            "          HOST:'host'",
            "          IP_ADDRESS:'1.2.3.4'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_tacacs",
            "      TACACS:'tacacs'",
            "      (t_null",
            "        GROUP:'group'",
            "        (null_rest_of_line",
            "          VARIABLE:'TACPLUS'",
            "          HOST:'host'",
            "          IP_ADDRESS:'2.3.4.5'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_tacacs",
            "      TACACS:'tacacs'",
            "      (t_null",
            "        HOST:'host'",
            "        (null_rest_of_line",
            "          IP_ADDRESS:'1.2.3.4'",
            "          PORT:'port'",
            "          DEC:'12'",
            "          TIMEOUT:'timeout'",
            "          DEC:'3'",
            "          KEY:'key'",
            "          DOUBLE_QUOTE:'\"'",
            "          VARIABLE:'01234567890abcdef01234567890abcdef'",
            "          DOUBLE_QUOTE:'\"'",
            "          HIDDEN_LITERAL:'hidden'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_tacacs",
            "      TACACS:'tacacs'",
            "      (t_null",
            "        HOST:'host'",
            "        (null_rest_of_line",
            "          IP_ADDRESS:'2.3.4.5'",
            "          PORT:'port'",
            "          DEC:'34'",
            "          TIMEOUT:'timeout'",
            "          DEC:'3'",
            "          KEY:'key'",
            "          DOUBLE_QUOTE:'\"'",
            "          VARIABLE:'01234567890abcdef01234567890abcdef'",
            "          DOUBLE_QUOTE:'\"'",
            "          HIDDEN_LITERAL:'hidden'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_tacacs",
            "      TACACS:'tacacs'",
            "      (t_source_interface",
            "        SOURCE_INTERFACE:'source-interface'",
            "        iname = (interface_name",
            "          name_prefix_alpha = M_Interface_PREFIX:'loopback'  <== mode:M_Interface",
            "          (range",
            "            (subrange",
            "              low = DEC:'0'  <== mode:M_Interface)))",
            "        NEWLINE:'\\n'  <== mode:M_Interface)))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        TELNET_SERVER:'telnet-server'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_username",
            "      USERNAME:'username'",
            "      quoted_user = (double_quoted_string",
            "        DOUBLE_QUOTE:'\"'",
            "        ADMIN:'admin'",
            "        DOUBLE_QUOTE:'\"')",
            "      (u",
            "        (u_privilege",
            "          PRIVILEGE:'privilege'",
            "          privilege = (variable",
            "            DEC:'15')))",
            "      (u",
            "        (u_encrypted_password",
            "          ENCRYPTED_PASSWORD:'encrypted-password'",
            "          pass = (variable_permissive",
            "            VARIABLE:'0123456789abcdef0123456789abcdef')))",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        VIDEO:'video'",
            "        VARIABLE:'vpme'",
            "        SHARED_SECRET:'shared-secret'",
            "        DEFAULT:'default'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_vrf_definition",
            "      VRF:'vrf'",
            "      name = (variable",
            "        DEFAULT:'default')",
            "      NEWLINE:'\\n'",
            "      (vrfd_null",
            "        AUTO_IMPORT:'auto-import'",
            "        (null_rest_of_line",
            "          ENABLE:'enable'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_null",
            "      (null_block",
            "        EXIT:'exit'",
            "        (null_rest_of_line",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_vrf_definition",
            "      VRF:'vrf'",
            "      name = (variable",
            "        VARIABLE:'vrf-foo1')",
            "      NEWLINE:'\\n'",
            "      (vrfd_null",
            "        AUTO_IMPORT:'auto-import'",
            "        (null_rest_of_line",
            "          ENABLE:'enable'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_null",
            "      (null_block",
            "        EXIT:'exit'",
            "        (null_rest_of_line",
            "          NEWLINE:'\\n'))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/cadant_prefix_list" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        SHELFNAME:'shelfname'",
            "        DOUBLE_QUOTE:'\"'",
            "        DOUBLE_QUOTE:'\"'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      quoted_name = (double_quoted_string",
            "        DOUBLE_QUOTE:'\"'",
            "        VARIABLE:'cadant_prefix_list'",
            "        DOUBLE_QUOTE:'\"')",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (ip_prefix_list_stanza",
            "      IP:'ip'",
            "      PREFIX_LIST:'prefix-list'",
            "      name = (variable",
            "        VARIABLE:'foo'  <== mode:M_Name)",
            "      (ip_prefix_list_tail",
            "        SEQ:'seq'",
            "        seqnum = DEC:'10'",
            "        action = (access_list_action",
            "          PERMIT:'permit')",
            "        prefix = IP_PREFIX:'1.1.1.1/32'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (ip_prefix_list_stanza",
            "      IP:'ip'",
            "      PREFIX_LIST:'prefix-list'",
            "      name = (variable",
            "        VARIABLE:'foo'  <== mode:M_Name)",
            "      (ip_prefix_list_tail",
            "        SEQ:'seq'",
            "        seqnum = DEC:'20'",
            "        action = (access_list_action",
            "          PERMIT:'permit')",
            "        prefix = IP_PREFIX:'2.2.0.0/19'",
            "        GE:'ge'",
            "        minpl = DEC:'24'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (ip_prefix_list_stanza",
            "      IP:'ip'",
            "      PREFIX_LIST:'prefix-list'",
            "      name = (variable",
            "        VARIABLE:'A+C'  <== mode:M_Name)",
            "      (ip_prefix_list_tail",
            "        SEQ:'seq'",
            "        seqnum = DEC:'5'",
            "        action = (access_list_action",
            "          PERMIT:'permit')",
            "        prefix = IP_PREFIX:'2.2.0.0/19'",
            "        GE:'ge'",
            "        minpl = DEC:'24'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (ipv6_prefix_list_stanza",
            "      IPV6:'ipv6'",
            "      PREFIX_LIST:'prefix-list'",
            "      name = (variable",
            "        VARIABLE:'bar'  <== mode:M_Name)",
            "      (ipv6_prefix_list_tail",
            "        SEQ:'seq'",
            "        seqnum = DEC:'10'",
            "        action = (access_list_action",
            "          PERMIT:'permit')",
            "        prefix6 = IPV6_PREFIX:'::/128'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (ipv6_prefix_list_stanza",
            "      IPV6:'ipv6'",
            "      PREFIX_LIST:'prefix-list'",
            "      name = (variable",
            "        VARIABLE:'bar'  <== mode:M_Name)",
            "      (ipv6_prefix_list_tail",
            "        SEQ:'seq'",
            "        seqnum = DEC:'20'",
            "        action = (access_list_action",
            "          PERMIT:'permit')",
            "        prefix6 = IPV6_PREFIX:'dead:beef::/26'",
            "        GE:'ge'",
            "        minpl = DEC:'64'",
            "        LE:'le'",
            "        maxpl = DEC:'64'",
            "        NEWLINE:'\\n')))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/cadant_qos" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        SHELFNAME:'shelfname'",
            "        DOUBLE_QUOTE:'\"'",
            "        DOUBLE_QUOTE:'\"'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      quoted_name = (double_quoted_string",
            "        DOUBLE_QUOTE:'\"'",
            "        VARIABLE:'cadant_qos'",
            "        DOUBLE_QUOTE:'\"')",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        QOS_SC:'qos-sc'",
            "        ENFORCE_RULE:'enforce-rule'",
            "        VARIABLE:'foo1'",
            "        VARIABLE:'enforce-name'",
            "        VARIABLE:'bar1'",
            "        TRIGGER:'trigger'",
            "        DEC:'123456'",
            "        HISTORY:'history'",
            "        DEC:'0'",
            "        COLON:':'",
            "        DEC:'30'",
            "        VARIABLE:'sampling-interval'",
            "        DEC:'10'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        QOS_SC:'qos-sc'",
            "        NAME:'name'",
            "        VARIABLE:'foo1'  <== mode:M_Name",
            "        VARIABLE:'and-mask'",
            "        HEX:'0xbe'",
            "        VARIABLE:'dir'",
            "        DEC:'2'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        QOS_SC:'qos-sc'",
            "        NAME:'name'",
            "        VARIABLE:'foo2'  <== mode:M_Name",
            "        VARIABLE:'dir'",
            "        DEC:'1'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        QOS_SC:'qos-sc'",
            "        NAME:'name'",
            "        VARIABLE:'bar1'  <== mode:M_Name",
            "        VARIABLE:'max-tr-rate'",
            "        DEC:'1234567'",
            "        VARIABLE:'max-tr-burst'",
            "        DEC:'1234567'",
            "        MAX_BURST:'max-burst'",
            "        DEC:'1234567'",
            "        VARIABLE:'dir'",
            "        DEC:'1'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        QOS_SC:'qos-sc'",
            "        NAME:'name'",
            "        VARIABLE:'bar2'  <== mode:M_Name",
            "        PRIORITY:'priority'",
            "        DEC:'3'",
            "        VARIABLE:'dir'",
            "        DEC:'1'",
            "        VARIABLE:'forbidden-attr-mask-value'",
            "        HEX:'0xFFFF0000'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        QOS_SC:'qos-sc'",
            "        NAME:'name'",
            "        VARIABLE:'bar3'  <== mode:M_Name",
            "        PRIORITY:'priority'",
            "        DEC:'1'",
            "        VARIABLE:'max-tr-rate'",
            "        DEC:'1234567'",
            "        VARIABLE:'max-tr-burst'",
            "        DEC:'1234567'",
            "        MAX_BURST:'max-burst'",
            "        DEC:'1234567'",
            "        VARIABLE:'dir'",
            "        DEC:'1'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        QOS_SC:'qos-sc'",
            "        NAME:'name'",
            "        VARIABLE:'bar4'  <== mode:M_Name",
            "        PRIORITY:'priority'",
            "        DEC:'2'",
            "        VARIABLE:'max-tr-rate'",
            "        DEC:'1234567'",
            "        VARIABLE:'max-tr-burst'",
            "        DEC:'1234567'",
            "        VARIABLE:'min-res-rate'",
            "        DEC:'1234567'",
            "        MAX_BURST:'max-burst'",
            "        DEC:'1234567'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        QOS_SC:'qos-sc'",
            "        NAME:'name'",
            "        VARIABLE:'bar5'  <== mode:M_Name",
            "        PRIORITY:'priority'",
            "        DEC:'4'",
            "        VARIABLE:'max-tr-rate'",
            "        DEC:'1234567'",
            "        VARIABLE:'max-tr-burst'",
            "        DEC:'1234567'",
            "        MAX_BURST:'max-burst'",
            "        DEC:'1234567'",
            "        VARIABLE:'req-policy'",
            "        HEX:'0x1234ABCD'",
            "        NEWLINE:'\\n')))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/cadant_rip" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        SHELFNAME:'shelfname'",
            "        DOUBLE_QUOTE:'\"'",
            "        DOUBLE_QUOTE:'\"'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      quoted_name = (double_quoted_string",
            "        DOUBLE_QUOTE:'\"'",
            "        VARIABLE:'cadant_rip'",
            "        DOUBLE_QUOTE:'\"')",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_router_rip",
            "      ROUTER:'router'",
            "      RIP:'rip'",
            "      NEWLINE:'\\n'",
            "      (rr_distribute_list",
            "        DISTRIBUTE_LIST:'distribute-list'",
            "        acl = (variable",
            "          VARIABLE:'blah-std-acl')",
            "        IN:'in'",
            "        NEWLINE:'\\n')",
            "      (rr_network",
            "        NETWORK:'network'",
            "        network = IP_ADDRESS:'1.2.3.0'",
            "        NEWLINE:'\\n')",
            "      (rr_passive_interface",
            "        PASSIVE_INTERFACE:'passive-interface'",
            "        iname = (interface_name",
            "          name_prefix_alpha = M_Interface_PREFIX:'cable-mac'  <== mode:M_Interface",
            "          DEC:'1'  <== mode:M_Interface",
            "          PERIOD:'.'  <== mode:M_Interface",
            "          (range",
            "            (subrange",
            "              low = DEC:'23'  <== mode:M_Interface)))",
            "        NEWLINE:'\\n'  <== mode:M_Interface)",
            "      (rr_null",
            "        NO:'no'",
            "        SHUTDOWN:'shutdown'",
            "        (null_rest_of_line",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_null",
            "      (null_block",
            "        EXIT:'exit'",
            "        (null_rest_of_line",
            "          NEWLINE:'\\n'))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/cadant_route_map" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        SHELFNAME:'shelfname'",
            "        DOUBLE_QUOTE:'\"'",
            "        DOUBLE_QUOTE:'\"'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      quoted_name = (double_quoted_string",
            "        DOUBLE_QUOTE:'\"'",
            "        VARIABLE:'cadant_route_map'",
            "        DOUBLE_QUOTE:'\"')",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (route_map_stanza",
            "      ROUTE_MAP:'route-map'",
            "      name = (variable",
            "        VARIABLE:'foo'  <== mode:M_RouteMap)",
            "      rmt = (access_list_action",
            "        PERMIT:'permit')",
            "      num = DEC:'1'",
            "      NEWLINE:'\\n'",
            "      (rm_stanza",
            "        (match_rm_stanza",
            "          (match_ip_prefix_list_rm_stanza",
            "            MATCH:'match'",
            "            IP:'ip'",
            "            ADDRESS:'address'",
            "            PREFIX_LIST:'prefix-list'",
            "            (variable",
            "              VARIABLE:'bar-prefix-list'  <== mode:M_Words)",
            "            NEWLINE:'\\n'  <== mode:M_Words)))",
            "      (rm_stanza",
            "        (set_rm_stanza",
            "          (set_community_rm_stanza",
            "            SET:'set'",
            "            COMMUNITY:'community'",
            "            (community",
            "              STANDARD_COMMUNITY:'1234:5678')",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_null",
            "      (null_block",
            "        EXIT:'exit'",
            "        (null_rest_of_line",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (route_map_stanza",
            "      ROUTE_MAP:'route-map'",
            "      name = (variable",
            "        VARIABLE:'bar'  <== mode:M_RouteMap)",
            "      rmt = (access_list_action",
            "        PERMIT:'permit')",
            "      num = DEC:'99'",
            "      NEWLINE:'\\n'",
            "      (rm_stanza",
            "        (match_rm_stanza",
            "          (match_ipv6_prefix_list_rm_stanza",
            "            MATCH:'match'",
            "            IPV6:'ipv6'",
            "            ADDRESS:'address'",
            "            PREFIX_LIST:'prefix-list'",
            "            (variable",
            "              VARIABLE:'baz-ipv6-prefix-list'  <== mode:M_Words)",
            "            NEWLINE:'\\n'  <== mode:M_Words)))",
            "      (rm_stanza",
            "        (set_rm_stanza",
            "          (set_community_additive_rm_stanza",
            "            SET:'set'",
            "            COMMUNITY:'community'",
            "            ADD:'add'",
            "            (community",
            "              STANDARD_COMMUNITY:'5555:1111')",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_null",
            "      (null_block",
            "        EXIT:'exit'",
            "        (null_rest_of_line",
            "          NEWLINE:'\\n'))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/cadant_snmp" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        SHELFNAME:'shelfname'",
            "        DOUBLE_QUOTE:'\"'",
            "        DOUBLE_QUOTE:'\"'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      quoted_name = (double_quoted_string",
            "        DOUBLE_QUOTE:'\"'",
            "        VARIABLE:'cadant_snmp'",
            "        DOUBLE_QUOTE:'\"')",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_null",
            "        CARD_TRAP_INH:'card-trap-inh'",
            "        (null_rest_of_line",
            "          SLOT:'slot'",
            "          DEC:'6'",
            "          HEX:'0x12'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_community",
            "        COMMUNITY:'community'  <== mode:M_SnmpServerCommunity",
            "        DOUBLE_QUOTE:'\"'  <== mode:M_SnmpServerCommunity",
            "        name = (variable_community_name",
            "          M_DoubleQuote_TEXT:'somepassword'  <== mode:M_DoubleQuote)",
            "        DOUBLE_QUOTE:'\"'  <== mode:M_DoubleQuote",
            "        (ssc_access_control",
            "          readonly = RO:'ro'",
            "          acl4 = (variable_snmp",
            "            DEC:'52')",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_null",
            "        CONTEXT:'context'",
            "        (null_rest_of_line",
            "          DOUBLE_QUOTE:'\"'",
            "          DOUBLE_QUOTE:'\"'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_null",
            "        GROUP:'group'",
            "        (null_rest_of_line",
            "          DOUBLE_QUOTE:'\"'",
            "          VARIABLE:'foogroup'",
            "          DOUBLE_QUOTE:'\"'",
            "          VARIABLE:'v1'",
            "          VARIABLE:'read'",
            "          DOUBLE_QUOTE:'\"'",
            "          VARIABLE:'hithere'",
            "          DOUBLE_QUOTE:'\"'",
            "          VARIABLE:'write'",
            "          DOUBLE_QUOTE:'\"'",
            "          DOUBLE_QUOTE:'\"'",
            "          NOTIFY:'notify'",
            "          DOUBLE_QUOTE:'\"'",
            "          DOUBLE_QUOTE:'\"'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_null",
            "        GROUP:'group'",
            "        (null_rest_of_line",
            "          DOUBLE_QUOTE:'\"'",
            "          VARIABLE:'foogroup'",
            "          DOUBLE_QUOTE:'\"'",
            "          VARIABLE:'v1'",
            "          VARIABLE:'read'",
            "          DOUBLE_QUOTE:'\"'",
            "          VARIABLE:'hithere'",
            "          DOUBLE_QUOTE:'\"'",
            "          VARIABLE:'write'",
            "          DOUBLE_QUOTE:'\"'",
            "          VARIABLE:'hithere'",
            "          DOUBLE_QUOTE:'\"'",
            "          NOTIFY:'notify'",
            "          DOUBLE_QUOTE:'\"'",
            "          DOUBLE_QUOTE:'\"'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_null",
            "        GROUP:'group'",
            "        (null_rest_of_line",
            "          DOUBLE_QUOTE:'\"'",
            "          VARIABLE:'foogroup'",
            "          DOUBLE_QUOTE:'\"'",
            "          VARIABLE:'v2c'",
            "          VARIABLE:'read'",
            "          DOUBLE_QUOTE:'\"'",
            "          VARIABLE:'hithere'",
            "          DOUBLE_QUOTE:'\"'",
            "          VARIABLE:'write'",
            "          DOUBLE_QUOTE:'\"'",
            "          DOUBLE_QUOTE:'\"'",
            "          NOTIFY:'notify'",
            "          DOUBLE_QUOTE:'\"'",
            "          VARIABLE:'hithere'",
            "          DOUBLE_QUOTE:'\"'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_null",
            "        GROUP:'group'",
            "        (null_rest_of_line",
            "          DOUBLE_QUOTE:'\"'",
            "          VARIABLE:'foogroup'",
            "          DOUBLE_QUOTE:'\"'",
            "          VARIABLE:'v2c'",
            "          VARIABLE:'read'",
            "          DOUBLE_QUOTE:'\"'",
            "          VARIABLE:'hithere'",
            "          DOUBLE_QUOTE:'\"'",
            "          VARIABLE:'write'",
            "          DOUBLE_QUOTE:'\"'",
            "          VARIABLE:'hithere'",
            "          DOUBLE_QUOTE:'\"'",
            "          NOTIFY:'notify'",
            "          DOUBLE_QUOTE:'\"'",
            "          DOUBLE_QUOTE:'\"'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_null",
            "        GROUP:'group'",
            "        (null_rest_of_line",
            "          DOUBLE_QUOTE:'\"'",
            "          VARIABLE:'blorp'",
            "          DOUBLE_QUOTE:'\"'",
            "          VARIABLE:'v3'",
            "          AUTH:'auth'",
            "          VARIABLE:'read'",
            "          DOUBLE_QUOTE:'\"'",
            "          VARIABLE:'byethere'",
            "          DOUBLE_QUOTE:'\"'",
            "          VARIABLE:'write'",
            "          DOUBLE_QUOTE:'\"'",
            "          VARIABLE:'byethere'",
            "          DOUBLE_QUOTE:'\"'",
            "          NOTIFY:'notify'",
            "          DOUBLE_QUOTE:'\"'",
            "          VARIABLE:'byethere'",
            "          DOUBLE_QUOTE:'\"'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_null",
            "        GROUP:'group'",
            "        (null_rest_of_line",
            "          DOUBLE_QUOTE:'\"'",
            "          VARIABLE:'foogroup'",
            "          DOUBLE_QUOTE:'\"'",
            "          VARIABLE:'v3'",
            "          NOAUTH:'noauth'",
            "          VARIABLE:'read'",
            "          DOUBLE_QUOTE:'\"'",
            "          VARIABLE:'hithere'",
            "          DOUBLE_QUOTE:'\"'",
            "          VARIABLE:'write'",
            "          DOUBLE_QUOTE:'\"'",
            "          VARIABLE:'hithere'",
            "          DOUBLE_QUOTE:'\"'",
            "          NOTIFY:'notify'",
            "          DOUBLE_QUOTE:'\"'",
            "          VARIABLE:'hithere'",
            "          DOUBLE_QUOTE:'\"'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_null",
            "        GROUP:'group'",
            "        (null_rest_of_line",
            "          DOUBLE_QUOTE:'\"'",
            "          VARIABLE:'blarp'",
            "          DOUBLE_QUOTE:'\"'",
            "          VARIABLE:'v3'",
            "          PRIV:'priv'",
            "          VARIABLE:'read'",
            "          DOUBLE_QUOTE:'\"'",
            "          VARIABLE:'byethere'",
            "          DOUBLE_QUOTE:'\"'",
            "          VARIABLE:'write'",
            "          DOUBLE_QUOTE:'\"'",
            "          VARIABLE:'byethere'",
            "          DOUBLE_QUOTE:'\"'",
            "          NOTIFY:'notify'",
            "          DOUBLE_QUOTE:'\"'",
            "          VARIABLE:'byethere'",
            "          DOUBLE_QUOTE:'\"'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_host",
            "        HOST:'host'",
            "        ip4 = IP_ADDRESS:'1.2.3.4'",
            "        (ss_host_name",
            "          NAME:'name'",
            "          name = (variable",
            "            VARIABLE:'\"1.2.3.4:1\"'  <== mode:M_Name))",
            "        (ss_host_traps",
            "          TRAPS:'traps')",
            "        (ss_host_version",
            "          VERSION:'version'",
            "          version = (variable_snmp_host",
            "            VARIABLE:'v2c'))",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_null",
            "        NOTIFY_FILTER:'notify-filter'",
            "        (null_rest_of_line",
            "          PROFILE:'profile'",
            "          DOUBLE_QUOTE:'\"'",
            "          VARIABLE:'someprofilename'",
            "          DOUBLE_QUOTE:'\"'",
            "          VARIABLE:'subtree'",
            "          IP_ADDRESS:'2.3.4.5'",
            "          TYPE:'type'",
            "          VARIABLE:'included'",
            "          POUND:'#'",
            "          RAW_TEXT:' internet'  <== mode:M_Description",
            "          NEWLINE:'\\n'  <== mode:M_Description))))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_source_interface",
            "        SOURCE_INTERFACE:'source-interface'",
            "        iname = (interface_name",
            "          name_prefix_alpha = M_Interface_PREFIX:'loopback'  <== mode:M_Interface",
            "          (range",
            "            (subrange",
            "              low = DEC:'0'  <== mode:M_Interface)))",
            "        NEWLINE:'\\n'  <== mode:M_Interface)))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_null",
            "        USER:'user'",
            "        (null_rest_of_line",
            "          DOUBLE_QUOTE:'\"'",
            "          VARIABLE:'bar'",
            "          DOUBLE_QUOTE:'\"'",
            "          DOUBLE_QUOTE:'\"'",
            "          VARIABLE:'bar'",
            "          DOUBLE_QUOTE:'\"'",
            "          VARIABLE:'v1'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_null",
            "        USER:'user'",
            "        (null_rest_of_line",
            "          DOUBLE_QUOTE:'\"'",
            "          VARIABLE:'baz'",
            "          DOUBLE_QUOTE:'\"'",
            "          DOUBLE_QUOTE:'\"'",
            "          VARIABLE:'baz'",
            "          DOUBLE_QUOTE:'\"'",
            "          VARIABLE:'v2c'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_null",
            "        USER:'user'",
            "        (null_rest_of_line",
            "          DOUBLE_QUOTE:'\"'",
            "          VARIABLE:'foo'",
            "          DOUBLE_QUOTE:'\"'",
            "          DOUBLE_QUOTE:'\"'",
            "          VARIABLE:'foogroup'",
            "          DOUBLE_QUOTE:'\"'",
            "          VARIABLE:'v3'",
            "          AUTH:'auth'",
            "          MD5:'md5'",
            "          DOUBLE_QUOTE:'\"'",
            "          VARIABLE:'0123456789abcdef0123456789abcdef'",
            "          DOUBLE_QUOTE:'\"'",
            "          ENCRYPTED:'encrypted'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_null",
            "        VIEW:'view'",
            "        (null_rest_of_line",
            "          DOUBLE_QUOTE:'\"'",
            "          VARIABLE:'byethere'",
            "          DOUBLE_QUOTE:'\"'",
            "          DOUBLE_QUOTE:'\"'",
            "          IP_ADDRESS:'1.2.3.4'",
            "          PERIOD:'.'",
            "          IP_ADDRESS:'5.6.7.8'",
            "          PERIOD:'.'",
            "          DEC:'9'",
            "          DOUBLE_QUOTE:'\"'",
            "          VARIABLE:'included'",
            "          POUND:'#'",
            "          RAW_TEXT:' bleepblorp'  <== mode:M_Description",
            "          NEWLINE:'\\n'  <== mode:M_Description))))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_null",
            "        VIEW:'view'",
            "        (null_rest_of_line",
            "          DOUBLE_QUOTE:'\"'",
            "          VARIABLE:'hithere'",
            "          DOUBLE_QUOTE:'\"'",
            "          DOUBLE_QUOTE:'\"'",
            "          IP_ADDRESS:'5.6.7.8'",
            "          DOUBLE_QUOTE:'\"'",
            "          VARIABLE:'included'",
            "          POUND:'#'",
            "          RAW_TEXT:' internet'  <== mode:M_Description",
            "          NEWLINE:'\\n'  <== mode:M_Description))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/cisco_aaa" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'cisco_aaa'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_aaa",
            "      AAA:'aaa'",
            "      (aaa_accounting",
            "        ACCOUNTING:'accounting'",
            "        (aaa_accounting_commands_line",
            "          COMMANDS:'commands'",
            "          levels = (range",
            "            (subrange",
            "              low = DEC:'0'))",
            "          DEFAULT:'default'",
            "          (aaa_accounting_method",
            "            (aaa_accounting_method_start_stop",
            "              START_STOP:'start-stop'",
            "              (aaa_accounting_method_target",
            "                GROUP:'group'",
            "                TACACS_PLUS:'tacacs+')))",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_aaa",
            "      AAA:'aaa'",
            "      (aaa_accounting",
            "        ACCOUNTING:'accounting'",
            "        (aaa_accounting_commands_line",
            "          COMMANDS:'commands'",
            "          levels = (range",
            "            (subrange",
            "              low = DEC:'1'))",
            "          DEFAULT:'default'",
            "          (aaa_accounting_method",
            "            (aaa_accounting_method_start_stop",
            "              START_STOP:'start-stop'",
            "              (aaa_accounting_method_target",
            "                GROUP:'group'",
            "                TACACS_PLUS:'tacacs+')))",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_aaa",
            "      AAA:'aaa'",
            "      (aaa_accounting",
            "        ACCOUNTING:'accounting'",
            "        (aaa_accounting_commands_line",
            "          COMMANDS:'commands'",
            "          levels = (range",
            "            (subrange",
            "              low = DEC:'15'))",
            "          DEFAULT:'default'",
            "          (aaa_accounting_method",
            "            (aaa_accounting_method_start_stop",
            "              START_STOP:'start-stop'",
            "              (aaa_accounting_method_target",
            "                GROUP:'group'",
            "                TACACS_PLUS:'tacacs+')))",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_aaa",
            "      AAA:'aaa'",
            "      (aaa_accounting",
            "        ACCOUNTING:'accounting'",
            "        (aaa_accounting_commands_line",
            "          COMMANDS:'commands'",
            "          levels = (range",
            "            (subrange",
            "              low = DEC:'0'",
            "              DASH:'-'",
            "              high = DEC:'1')",
            "            COMMA:','",
            "            (subrange",
            "              low = DEC:'15'))",
            "          DEFAULT:'default'",
            "          (aaa_accounting_method",
            "            (aaa_accounting_method_stop_only",
            "              STOP_ONLY:'stop-only'",
            "              (aaa_accounting_method_target",
            "                GROUP:'group'",
            "                TACACS_PLUS:'tacacs+')))",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_aaa",
            "      AAA:'aaa'",
            "      (aaa_accounting",
            "        ACCOUNTING:'accounting'",
            "        (aaa_accounting_commands_line",
            "          COMMANDS:'commands'",
            "          ALL:'all'",
            "          DEFAULT:'default'",
            "          (aaa_accounting_method",
            "            (aaa_accounting_method_stop_only",
            "              STOP_ONLY:'stop-only'",
            "              (aaa_accounting_method_target",
            "                GROUP:'group'",
            "                TACACS_PLUS:'tacacs+')))",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_aaa",
            "      AAA:'aaa'",
            "      (aaa_accounting",
            "        ACCOUNTING:'accounting'",
            "        (aaa_accounting_commands_stanza",
            "          COMMANDS:'commands'",
            "          levels = (range",
            "            (subrange",
            "              low = DEC:'0'))",
            "          DEFAULT:'default'",
            "          NEWLINE:'\\n'",
            "          (aaaac_action_type",
            "            ACTION_TYPE:'action-type'",
            "            START_STOP:'start-stop'",
            "            NEWLINE:'\\n')",
            "          (aaaac_group",
            "            GROUP:'group'",
            "            TACACS_PLUS:'tacacs+'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_aaa",
            "      AAA:'aaa'",
            "      (aaa_accounting",
            "        ACCOUNTING:'accounting'",
            "        (aaa_accounting_connection_line",
            "          CONNECTION:'connection'",
            "          DEFAULT:'default'",
            "          (aaa_accounting_method",
            "            (aaa_accounting_method_wait_start",
            "              WAIT_START:'wait-start'",
            "              (aaa_accounting_method_target",
            "                GROUP:'group'",
            "                RADIUS:'radius')))",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_aaa",
            "      AAA:'aaa'",
            "      (aaa_accounting",
            "        ACCOUNTING:'accounting'",
            "        (aaa_accounting_connection_stanza",
            "          CONNECTION:'connection'",
            "          DEFAULT:'default'",
            "          NEWLINE:'\\n'",
            "          ACTION_TYPE:'action-type'",
            "          (null_rest_of_line",
            "            START_STOP:'start-stop'",
            "            NEWLINE:'\\n')",
            "          GROUP:'group'",
            "          (null_rest_of_line",
            "            RADIUS:'radius'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_aaa",
            "      AAA:'aaa'",
            "      (aaa_accounting",
            "        ACCOUNTING:'accounting'",
            "        (aaa_accounting_delay_start",
            "          DELAY_START:'delay-start'",
            "          ALL:'all'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_aaa",
            "      AAA:'aaa'",
            "      (aaa_accounting",
            "        ACCOUNTING:'accounting'",
            "        (aaa_accounting_exec_line",
            "          EXEC:'exec'",
            "          DEFAULT:'default'",
            "          (aaa_accounting_method",
            "            (aaa_accounting_method_start_stop",
            "              START_STOP:'start-stop'",
            "              (aaa_accounting_method_target",
            "                GROUP:'group'",
            "                TACACS_PLUS:'tacacs+')))",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_aaa",
            "      AAA:'aaa'",
            "      (aaa_accounting",
            "        ACCOUNTING:'accounting'",
            "        (aaa_accounting_exec_line",
            "          EXEC:'exec'",
            "          DEFAULT:'default'",
            "          (aaa_accounting_method",
            "            (aaa_accounting_method_start_stop",
            "              START_STOP:'start-stop'",
            "              (aaa_accounting_method_target",
            "                RADIUS:'radius')))",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_aaa",
            "      AAA:'aaa'",
            "      (aaa_accounting",
            "        ACCOUNTING:'accounting'",
            "        (aaa_accounting_exec_line",
            "          EXEC:'exec'",
            "          DEFAULT:'default'",
            "          (aaa_accounting_method",
            "            (aaa_accounting_method_wait_start",
            "              WAIT_START:'wait-start'",
            "              (aaa_accounting_method_target",
            "                GROUP:'group'",
            "                RADIUS:'radius')))",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_aaa",
            "      AAA:'aaa'",
            "      (aaa_accounting",
            "        ACCOUNTING:'accounting'",
            "        (aaa_accounting_exec_stanza",
            "          EXEC:'exec'",
            "          DEFAULT:'default'",
            "          NEWLINE:'\\n'",
            "          ACTION_TYPE:'action-type'",
            "          (null_rest_of_line",
            "            START_STOP:'start-stop'",
            "            NEWLINE:'\\n')",
            "          GROUP:'group'",
            "          (null_rest_of_line",
            "            TACACS_PLUS:'tacacs+'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_aaa",
            "      AAA:'aaa'",
            "      (aaa_accounting",
            "        ACCOUNTING:'accounting'",
            "        (aaa_accounting_identity",
            "          IDENTITY:'identity'",
            "          DEFAULT:'default'",
            "          (aaa_accounting_method",
            "            (aaa_accounting_method_start_stop",
            "              START_STOP:'start-stop'",
            "              (aaa_accounting_method_target",
            "                GROUP:'group'",
            "                (variable",
            "                  VARIABLE:'MEE'))))",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_aaa",
            "      AAA:'aaa'",
            "      (aaa_accounting",
            "        ACCOUNTING:'accounting'",
            "        (aaa_accounting_nested",
            "          NESTED:'nested'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_aaa",
            "      AAA:'aaa'",
            "      (aaa_accounting",
            "        ACCOUNTING:'accounting'",
            "        (aaa_accounting_network_line",
            "          NETWORK:'network'",
            "          DEFAULT:'default'",
            "          (aaa_accounting_method",
            "            (aaa_accounting_method_start_stop",
            "              START_STOP:'start-stop'",
            "              (aaa_accounting_method_target",
            "                GROUP:'group'",
            "                TACACS_PLUS:'tacacs+')))",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_aaa",
            "      AAA:'aaa'",
            "      (aaa_accounting",
            "        ACCOUNTING:'accounting'",
            "        (aaa_accounting_network_stanza",
            "          NETWORK:'network'",
            "          DEFAULT:'default'",
            "          NEWLINE:'\\n'",
            "          ACTION_TYPE:'action-type'",
            "          (null_rest_of_line",
            "            START_STOP:'start-stop'",
            "            NEWLINE:'\\n')",
            "          GROUP:'group'",
            "          (null_rest_of_line",
            "            TACACS_PLUS:'tacacs+'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_aaa",
            "      AAA:'aaa'",
            "      (aaa_accounting",
            "        ACCOUNTING:'accounting'",
            "        (aaa_accounting_send",
            "          SEND:'send'",
            "          (aaa_accounting_send_stop_record",
            "            STOP_RECORD:'stop-record'",
            "            AUTHENTICATION:'authentication'",
            "            FAILURE:'failure'  <== mode:M_Authentication",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_aaa",
            "      AAA:'aaa'",
            "      (aaa_accounting",
            "        ACCOUNTING:'accounting'",
            "        (aaa_accounting_system_line",
            "          SYSTEM:'system'",
            "          DEFAULT:'default'",
            "          (aaa_accounting_method",
            "            (aaa_accounting_method_start_stop",
            "              START_STOP:'start-stop'",
            "              (aaa_accounting_method_target",
            "                GROUP:'group'",
            "                TACACS_PLUS:'tacacs+')))",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_aaa",
            "      AAA:'aaa'",
            "      (aaa_accounting",
            "        ACCOUNTING:'accounting'",
            "        (aaa_accounting_system_stanza",
            "          SYSTEM:'system'",
            "          DEFAULT:'default'",
            "          NEWLINE:'\\n'",
            "          (aaaas_action_type",
            "            ACTION_TYPE:'action-type'",
            "            START_STOP:'start-stop'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        GROUP:'group'",
            "        TACACS_PLUS:'tacacs+'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_aaa",
            "      AAA:'aaa'",
            "      (aaa_accounting",
            "        ACCOUNTING:'accounting'",
            "        (aaa_accounting_update",
            "          UPDATE:'update'",
            "          DEC:'30'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_aaa",
            "      AAA:'aaa'",
            "      (aaa_accounting",
            "        ACCOUNTING:'accounting'",
            "        (aaa_accounting_update",
            "          UPDATE:'update'",
            "          NEWINFO:'newinfo'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_aaa",
            "      AAA:'aaa'",
            "      (aaa_accounting",
            "        ACCOUNTING:'accounting'",
            "        (aaa_accounting_update",
            "          UPDATE:'update'",
            "          NEWINFO:'newinfo'",
            "          DEC:'30'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_aaa",
            "      AAA:'aaa'",
            "      (aaa_accounting",
            "        ACCOUNTING:'accounting'",
            "        (aaa_accounting_update",
            "          UPDATE:'update'",
            "          PERIODIC:'periodic'",
            "          DEC:'30'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_aaa",
            "      AAA:'aaa'",
            "      (aaa_accounting",
            "        ACCOUNTING:'accounting'",
            "        (aaa_accounting_update",
            "          UPDATE:'update'",
            "          NEWINFO:'newinfo'",
            "          PERIODIC:'periodic'",
            "          DEC:'30'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_aaa",
            "      AAA:'aaa'",
            "      (aaa_authentication",
            "        AUTHENTICATION:'authentication'",
            "        (aaa_authentication_banner",
            "          BANNER:'banner'  <== mode:M_Authentication",
            "          (banner",
            "            ESCAPE_C:'^C'  <== mode:M_BannerText",
            "            M_MOTD_C_MOTD:'Unauthorized access prohibited by law - disconnect now!'  <== mode:M_MOTD_C",
            "            ESCAPE_C:'^C'  <== mode:M_MOTD_C",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_aaa",
            "      AAA:'aaa'",
            "      (aaa_authentication",
            "        AUTHENTICATION:'authentication'",
            "        (aaa_authentication_dot1x",
            "          DOT1X:'dot1x'  <== mode:M_Authentication",
            "          DEFAULT:'default'",
            "          (aaa_authentication_list_method",
            "            (aaa_authentication_list_method_group",
            "              GROUP:'group'",
            "              (aaa_authentication_list_method_group_ios",
            "                RADIUS:'radius')))",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_aaa",
            "      AAA:'aaa'",
            "      (aaa_authentication",
            "        AUTHENTICATION:'authentication'",
            "        (aaa_authentication_enable",
            "          ENABLE:'enable'  <== mode:M_Authentication",
            "          DEFAULT:'default'",
            "          (aaa_authentication_list_method",
            "            (aaa_authentication_list_method_ios",
            "              ENABLE:'enable'))",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_aaa",
            "      AAA:'aaa'",
            "      (aaa_authentication",
            "        AUTHENTICATION:'authentication'",
            "        (aaa_authentication_enable",
            "          ENABLE:'enable'  <== mode:M_Authentication",
            "          IMPLICIT_USER:'implicit-user'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_aaa",
            "      AAA:'aaa'",
            "      (aaa_authentication",
            "        AUTHENTICATION:'authentication'",
            "        (aaa_authentication_asa",
            "          linetype = HTTP:'http'  <== mode:M_Authentication",
            "          (aaa_authentication_asa_console",
            "            CONSOLE:'console'",
            "            group = (variable",
            "              TACACS_PLUS_ASA:'TACACS+')",
            "            LOCAL_ASA:'LOCAL'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_aaa",
            "      AAA:'aaa'",
            "      (aaa_authentication",
            "        AUTHENTICATION:'authentication'",
            "        (aaa_authentication_include",
            "          INCLUDE:'include'  <== mode:M_Authentication",
            "          name = (variable",
            "            TELNET:'telnet')",
            "          iface = (variable",
            "            OUTSIDE:'outside')",
            "          srcip = IP_ADDRESS:'1.2.3.4'",
            "          srcmask = IP_ADDRESS:'255.255.255.255'",
            "          dstip = IP_ADDRESS:'0.0.0.0'",
            "          dstmask = IP_ADDRESS:'0.0.0.0'",
            "          group = (variable",
            "            VARIABLE:'user_telnet')",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_aaa",
            "      AAA:'aaa'",
            "      (aaa_authentication",
            "        AUTHENTICATION:'authentication'",
            "        (aaa_authentication_login",
            "          LOGIN:'login'  <== mode:M_Authentication",
            "          (aaa_authentication_login_list",
            "            name = (variable",
            "              VARIABLE:'blah')",
            "            (aaa_authentication_list_method",
            "              (aaa_authentication_list_method_group",
            "                GROUP:'group'",
            "                (aaa_authentication_list_method_group_ios",
            "                  TACACS_PLUS:'tacacs+')))",
            "            (aaa_authentication_list_method",
            "              (aaa_authentication_list_method_ios",
            "                ENABLE:'enable'))",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_aaa",
            "      AAA:'aaa'",
            "      (aaa_authentication",
            "        AUTHENTICATION:'authentication'",
            "        (aaa_authentication_login",
            "          LOGIN:'login'  <== mode:M_Authentication",
            "          (aaa_authentication_login_list",
            "            DEFAULT:'default'",
            "            (aaa_authentication_list_method",
            "              (aaa_authentication_list_method_ios",
            "                LINE:'line'))",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_aaa",
            "      AAA:'aaa'",
            "      (aaa_authentication",
            "        AUTHENTICATION:'authentication'",
            "        (aaa_authentication_login",
            "          LOGIN:'login'  <== mode:M_Authentication",
            "          (aaa_authentication_login_list",
            "            DEFAULT:'default'",
            "            (aaa_authentication_list_method",
            "              (aaa_authentication_list_method_tacacs_plus",
            "                TACACS_PLUS:'tacacs+'))",
            "            (aaa_authentication_list_method",
            "              (aaa_authentication_list_method_ios",
            "                ENABLE:'enable'))",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_aaa",
            "      AAA:'aaa'",
            "      (aaa_authentication",
            "        AUTHENTICATION:'authentication'",
            "        (aaa_authentication_login",
            "          LOGIN:'login'  <== mode:M_Authentication",
            "          (aaa_authentication_login_list",
            "            DEFAULT:'default'",
            "            (aaa_authentication_list_method",
            "              (aaa_authentication_list_method_group",
            "                GROUP:'group'",
            "                (aaa_authentication_list_method_group_ios",
            "                  TACACS_PLUS:'tacacs+')))",
            "            (aaa_authentication_list_method",
            "              (aaa_authentication_list_method_ios",
            "                LOCAL:'local'))",
            "            (aaa_authentication_list_method",
            "              (aaa_authentication_list_method_ios",
            "                ENABLE:'enable'))",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_aaa",
            "      NO:'no'",
            "      AAA:'aaa'",
            "      (aaa_authentication",
            "        AUTHENTICATION:'authentication'",
            "        (aaa_authentication_login",
            "          LOGIN:'login'  <== mode:M_Authentication",
            "          (aaa_authentication_login_invalid_username_log",
            "            INVALID_USERNAME_LOG:'invalid-username-log'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_aaa",
            "      AAA:'aaa'",
            "      (aaa_authentication",
            "        AUTHENTICATION:'authentication'",
            "        (aaa_authentication_login",
            "          LOGIN:'login'  <== mode:M_Authentication",
            "          (aaa_authentication_login_privilege_mode",
            "            PRIVILEGE_MODE:'privilege-mode'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_aaa",
            "      AAA:'aaa'",
            "      (aaa_authentication",
            "        AUTHENTICATION:'authentication'",
            "        (aaa_authentication_policy",
            "          POLICY:'policy'  <== mode:M_Authentication",
            "          LOCAL:'local'",
            "          ALLOW_NOPASSWORD_REMOTE_LOGIN:'allow-nopassword-remote-login'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_aaa",
            "      AAA:'aaa'",
            "      (aaa_authentication",
            "        AUTHENTICATION:'authentication'",
            "        (aaa_authentication_policy",
            "          POLICY:'policy'  <== mode:M_Authentication",
            "          ON_FAILURE:'on-failure'",
            "          LOG:'log'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_aaa",
            "      AAA:'aaa'",
            "      (aaa_authentication",
            "        AUTHENTICATION:'authentication'",
            "        (aaa_authentication_policy",
            "          POLICY:'policy'  <== mode:M_Authentication",
            "          ON_SUCCESS:'on-success'",
            "          LOG:'log'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_aaa",
            "      AAA:'aaa'",
            "      (aaa_authentication",
            "        AUTHENTICATION:'authentication'",
            "        (aaa_authentication_ppp",
            "          PPP:'ppp'  <== mode:M_Authentication",
            "          DEFAULT:'default'",
            "          (aaa_authentication_list_method",
            "            (aaa_authentication_list_method_group",
            "              GROUP:'group'",
            "              (aaa_authentication_list_method_group_ios",
            "                RADIUS:'radius')))",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_aaa",
            "      AAA:'aaa'",
            "      (aaa_authentication",
            "        AUTHENTICATION:'authentication'",
            "        (aaa_authentication_ppp",
            "          PPP:'ppp'  <== mode:M_Authentication",
            "          list = (variable",
            "            VARIABLE:'dialup')",
            "          (aaa_authentication_list_method",
            "            (aaa_authentication_list_method_if_needed",
            "              IF_NEEDED:'if-needed'))",
            "          (aaa_authentication_list_method",
            "            (aaa_authentication_list_method_group",
            "              GROUP:'group'",
            "              (aaa_authentication_list_method_group_ios",
            "                RADIUS:'radius')))",
            "          (aaa_authentication_list_method",
            "            (aaa_authentication_list_method_group",
            "              GROUP:'group'",
            "              (aaa_authentication_list_method_group_ios",
            "                TACACS_PLUS:'tacacs+')))",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_aaa",
            "      AAA:'aaa'",
            "      (aaa_authentication",
            "        AUTHENTICATION:'authentication'",
            "        (aaa_authentication_asa",
            "          linetype = TELNET:'telnet'  <== mode:M_Authentication",
            "          (aaa_authentication_asa_console",
            "            CONSOLE:'console'",
            "            group = (variable",
            "              TACACS_PLUS_ASA:'TACACS+')",
            "            LOCAL_ASA:'LOCAL'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_aaa",
            "      AAA:'aaa'",
            "      (aaa_authentication",
            "        AUTHENTICATION:'authentication'",
            "        (aaa_authentication_username_prompt",
            "          USERNAME_PROMPT:'username-prompt'  <== mode:M_Authentication",
            "          DOUBLE_QUOTE:'\"'  <== mode:M_AuthenticationUsernamePrompt",
            "          RAW_TEXT:'Local Username: '  <== mode:M_AuthenticationUsernamePromptText",
            "          DOUBLE_QUOTE:'\"'  <== mode:M_AuthenticationUsernamePromptText",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_aaa",
            "      AAA:'aaa'",
            "      (aaa_authorization",
            "        AUTHORIZATION:'authorization'",
            "        (aaa_authorization_auth_proxy",
            "          AUTH_PROXY:'auth-proxy'",
            "          DEFAULT:'default'",
            "          (aaa_authorization_method",
            "            GROUP:'group'",
            "            VARIABLE:'MEE'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_aaa",
            "      AAA:'aaa'",
            "      (aaa_authorization",
            "        AUTHORIZATION:'authorization'",
            "        (aaa_authorization_commands",
            "          COMMANDS:'commands'",
            "          level = DEC:'0'",
            "          DEFAULT:'default'",
            "          (aaa_authorization_method",
            "            GROUP:'group'",
            "            TACACS_PLUS:'tacacs+'",
            "            LOCAL:'local'",
            "            NONE:'none'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_aaa",
            "      AAA:'aaa'",
            "      (aaa_authorization",
            "        AUTHORIZATION:'authorization'",
            "        (aaa_authorization_commands",
            "          COMMANDS:'commands'",
            "          level = DEC:'1'",
            "          DEFAULT:'default'",
            "          (aaa_authorization_method",
            "            GROUP:'group'",
            "            TACACS_PLUS:'tacacs+'",
            "            LOCAL:'local'",
            "            NONE:'none'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_aaa",
            "      AAA:'aaa'",
            "      (aaa_authorization",
            "        AUTHORIZATION:'authorization'",
            "        (aaa_authorization_commands",
            "          COMMANDS:'commands'",
            "          level = DEC:'15'",
            "          DEFAULT:'default'",
            "          (aaa_authorization_method",
            "            GROUP:'group'",
            "            TACACS_PLUS:'tacacs+'",
            "            LOCAL:'local'",
            "            NONE:'none'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_aaa",
            "      AAA:'aaa'",
            "      (aaa_authorization",
            "        AUTHORIZATION:'authorization'",
            "        (aaa_authorization_config_commands",
            "          CONFIG_COMMANDS:'config-commands'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_aaa",
            "      AAA:'aaa'",
            "      (aaa_authorization",
            "        AUTHORIZATION:'authorization'",
            "        (aaa_authorization_console",
            "          CONSOLE:'console'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_aaa",
            "      AAA:'aaa'",
            "      (aaa_authorization",
            "        AUTHORIZATION:'authorization'",
            "        (aaa_authorization_exec",
            "          EXEC:'exec'",
            "          DEFAULT:'default'",
            "          (aaa_authorization_method",
            "            GROUP:'group'",
            "            TACACS_PLUS:'tacacs+'",
            "            LOCAL:'local'",
            "            NONE:'none'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_aaa",
            "      AAA:'aaa'",
            "      (aaa_authorization",
            "        AUTHORIZATION:'authorization'",
            "        (aaa_authorization_exec",
            "          EXEC:'exec'",
            "          DEFAULT:'default'",
            "          (aaa_authorization_method",
            "            TACACS_PLUS:'tacacs+'",
            "            NONE:'none'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_aaa",
            "      AAA:'aaa'",
            "      (aaa_authorization",
            "        AUTHORIZATION:'authorization'",
            "        (aaa_authorization_exec",
            "          EXEC:'exec'",
            "          list = (variable",
            "            VARIABLE:'ffffff')",
            "          (aaa_authorization_method",
            "            NONE:'none'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_aaa",
            "      AAA:'aaa'",
            "      (aaa_authorization",
            "        AUTHORIZATION:'authorization'",
            "        (aaa_authorization_include",
            "          INCLUDE:'include'",
            "          name = (variable",
            "            TELNET:'telnet')",
            "          iface = (variable",
            "            OUTSIDE:'outside')",
            "          srcip = IP_ADDRESS:'1.2.3.4'",
            "          srcmask = IP_ADDRESS:'255.255.255.255'",
            "          dstip = IP_ADDRESS:'0.0.0.0'",
            "          dstmask = IP_ADDRESS:'0.0.0.0'",
            "          group = (variable",
            "            VARIABLE:'User_Telnet')",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_aaa",
            "      AAA:'aaa'",
            "      (aaa_authorization",
            "        AUTHORIZATION:'authorization'",
            "        (aaa_authorization_network",
            "          NETWORK:'network'",
            "          DEFAULT:'default'",
            "          (aaa_authorization_method",
            "            GROUP:'group'",
            "            TACACS_PLUS:'tacacs+'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_aaa",
            "      AAA:'aaa'",
            "      (aaa_authorization",
            "        AUTHORIZATION:'authorization'",
            "        (aaa_authorization_reverse_access",
            "          REVERSE_ACCESS:'reverse-access'",
            "          DEFAULT:'default'",
            "          (aaa_authorization_method",
            "            NONE:'none'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_aaa",
            "      AAA:'aaa'",
            "      (aaa_server",
            "        SERVER:'server'",
            "        RADIUS:'radius'",
            "        DYNAMIC_AUTHOR:'dynamic-author'",
            "        NEWLINE:'\\n'",
            "        (aaa_server_client",
            "          CLIENT:'client'",
            "          IP_ADDRESS:'12.5.1.61'",
            "          SERVER_KEY:'server-key'",
            "          DEC:'7'",
            "          (variable",
            "            VARIABLE:'KKKKAAA')",
            "          NEWLINE:'\\n')",
            "        (aaa_server_client",
            "          CLIENT:'client'",
            "          name = (variable",
            "            VARIABLE:'nameMe')",
            "          SERVER_KEY:'server-key'",
            "          DEC:'0'",
            "          (variable",
            "            VARIABLE:'KKKKAAA')",
            "          NEWLINE:'\\n')",
            "        (aaa_server_port",
            "          PORT:'port'",
            "          port_num = DEC:'12'",
            "          NEWLINE:'\\n')",
            "        (aaa_server_auth_type",
            "          AUTH_TYPE:'auth-type'",
            "          ALL:'all'",
            "          NEWLINE:'\\n')",
            "        (aaa_server_ignore",
            "          IGNORE:'ignore'",
            "          SESSION_KEY:'session-key'",
            "          NEWLINE:'\\n')",
            "        (aaa_server_ignore",
            "          IGNORE:'ignore'",
            "          SERVER_KEY:'server-key'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_aaa",
            "      AAA:'aaa'",
            "      (aaa_group",
            "        GROUP:'group'",
            "        SERVER:'server'",
            "        RADIUS:'radius'",
            "        name = (variable",
            "          VARIABLE:'fguiwrego')",
            "        NEWLINE:'\\n'",
            "        (aaa_group_server",
            "          SERVER:'server'",
            "          IP_ADDRESS:'1.2.3.4'",
            "          AUTH_PORT:'auth-port'",
            "          auth_port = DEC:'1812'",
            "          ACCT_PORT:'acct-port'",
            "          acct_port = DEC:'1813'",
            "          NEWLINE:'\\n')",
            "        (aaa_group_server",
            "          SERVER:'server'",
            "          NAME:'name'",
            "          name = (variable",
            "            VARIABLE:'somename'  <== mode:M_Name)",
            "          NEWLINE:'\\n')",
            "        (aaa_group_no_source_interface",
            "          NO:'no'",
            "          SOURCE_INTERFACE:'source-interface'",
            "          NEWLINE:'\\n'  <== mode:M_Interface))))",
            "  (stanza",
            "    (s_aaa",
            "      AAA:'aaa'",
            "      (aaa_group",
            "        GROUP:'group'",
            "        SERVER:'server'",
            "        TACACS_PLUS:'tacacs+'",
            "        name = (variable",
            "          VARIABLE:'authservers')",
            "        NEWLINE:'\\n'",
            "        (aaa_group_ip_tacacs",
            "          IP:'ip'",
            "          TACACS:'tacacs'",
            "          SOURCE_INTERFACE:'source-interface'",
            "          (interface_name",
            "            name_prefix_alpha = M_Interface_PREFIX:'FastEthernet'  <== mode:M_Interface",
            "            DEC:'0'  <== mode:M_Interface",
            "            FORWARD_SLASH:'/'  <== mode:M_Interface",
            "            (range",
            "              (subrange",
            "                low = DEC:'1'  <== mode:M_Interface)))",
            "          NEWLINE:'\\n'  <== mode:M_Interface)",
            "        (aaa_group_vrf",
            "          VRF:'vrf'",
            "          name = (variable",
            "            VARIABLE:'Management')",
            "          NEWLINE:'\\n')",
            "        (aaa_group_server_private",
            "          SERVER_PRIVATE:'server-private'",
            "          IP_ADDRESS:'1.2.3.4'",
            "          PORT:'port'",
            "          prt = DEC:'49'",
            "          NEWLINE:'\\n')",
            "        (aaa_group_server_private",
            "          SERVER_PRIVATE:'server-private'",
            "          IP_ADDRESS:'2.3.4.5'",
            "          PORT:'port'",
            "          prt = DEC:'49'",
            "          NEWLINE:'\\n')",
            "        (aaa_group_server_private",
            "          SERVER_PRIVATE:'server-private'",
            "          IP_ADDRESS:'1.2.3.4'",
            "          AUTH_PORT:'auth-port'",
            "          auth_port = DEC:'1812'",
            "          ACCT_PORT:'acct-port'",
            "          acct_port = DEC:'1813'",
            "          KEY:'key'",
            "          DEC:'7'",
            "          (variable_secret",
            "            VARIABLE:'KKKKAAA')",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_aaa",
            "      AAA:'aaa'",
            "      (aaa_new_model",
            "        NEW_MODEL:'new-model'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_aaa",
            "      NO:'no'",
            "      AAA:'aaa'",
            "      (aaa_new_model",
            "        NEW_MODEL:'new-model'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        NO:'no'",
            "        AAA:'aaa'",
            "        ROOT:'root'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_aaa",
            "      AAA:'aaa'",
            "      (aaa_session_id",
            "        SESSION_ID:'session-id'",
            "        COMMON:'common'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_aaa",
            "      NO:'no'",
            "      AAA:'aaa'",
            "      (aaa_user",
            "        USER:'user'",
            "        DEFAULT_ROLE:'default-role'",
            "        NEWLINE:'\\n')))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/cisco_acl" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'cisco_acl'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (extended_access_list_stanza",
            "      IP:'ip'",
            "      ACCESS_LIST:'access-list'",
            "      shortname = (variable",
            "        VARIABLE:'BLAH-BLAH')",
            "      NEWLINE:'\\n'",
            "      (extended_access_list_tail",
            "        num = DEC:'10'",
            "        ala = (access_list_action",
            "          PERMIT:'permit')",
            "        prot = (protocol",
            "          ICMP:'icmp')",
            "        srcipr = (access_list_ip_range",
            "          ANY:'any')",
            "        dstipr = (access_list_ip_range",
            "          ANY:'any')",
            "        (extended_access_list_additional_feature",
            "          PACKET_TOO_BIG:'packet-too-big')",
            "        NEWLINE:'\\n')",
            "      (extended_access_list_tail",
            "        num = DEC:'20'",
            "        ala = (access_list_action",
            "          PERMIT:'permit')",
            "        prot = (protocol",
            "          IP:'ip')",
            "        srcipr = (access_list_ip_range",
            "          ANY:'any')",
            "        dstipr = (access_list_ip_range",
            "          ANY:'any')",
            "        (extended_access_list_additional_feature",
            "          TRACKED:'tracked')",
            "        NEWLINE:'\\n')",
            "      (extended_access_list_tail",
            "        num = DEC:'30'",
            "        ala = (access_list_action",
            "          PERMIT:'permit')",
            "        prot = (protocol",
            "          OSPF:'ospf')",
            "        srcipr = (access_list_ip_range",
            "          ANY:'any')",
            "        dstipr = (access_list_ip_range",
            "          ANY:'any')",
            "        NEWLINE:'\\n')",
            "      (extended_access_list_tail",
            "        num = DEC:'40'",
            "        ala = (access_list_action",
            "          PERMIT:'permit')",
            "        prot = (protocol",
            "          TCP:'tcp')",
            "        srcipr = (access_list_ip_range",
            "          ANY:'any')",
            "        dstipr = (access_list_ip_range",
            "          ANY:'any')",
            "        alps_dst = (port_specifier",
            "          EQ:'eq'",
            "          (port",
            "            BGP:'bgp'))",
            "        NEWLINE:'\\n')",
            "      (extended_access_list_tail",
            "        num = DEC:'50'",
            "        ala = (access_list_action",
            "          PERMIT:'permit')",
            "        prot = (protocol",
            "          UDP:'udp')",
            "        srcipr = (access_list_ip_range",
            "          ANY:'any')",
            "        dstipr = (access_list_ip_range",
            "          ANY:'any')",
            "        alps_dst = (port_specifier",
            "          EQ:'eq'",
            "          (port",
            "            BOOTPS:'bootps')",
            "          (port",
            "            BOOTPC:'bootpc')",
            "          (port",
            "            NTP:'ntp'))",
            "        NEWLINE:'\\n')",
            "      (extended_access_list_tail",
            "        num = DEC:'60'",
            "        ala = (access_list_action",
            "          PERMIT:'permit')",
            "        prot = (protocol",
            "          TCP:'tcp')",
            "        srcipr = (access_list_ip_range",
            "          ANY:'any')",
            "        dstipr = (access_list_ip_range",
            "          ANY:'any')",
            "        alps_dst = (port_specifier",
            "          EQ:'eq'",
            "          (port",
            "            MLAG:'mlag'))",
            "        (extended_access_list_additional_feature",
            "          TTL:'ttl'",
            "          EQ:'eq'",
            "          DEC:'255')",
            "        NEWLINE:'\\n')",
            "      (extended_access_list_tail",
            "        num = DEC:'70'",
            "        ala = (access_list_action",
            "          PERMIT:'permit')",
            "        prot = (protocol",
            "          UDP:'udp')",
            "        srcipr = (access_list_ip_range",
            "          ANY:'any')",
            "        dstipr = (access_list_ip_range",
            "          ANY:'any')",
            "        alps_dst = (port_specifier",
            "          EQ:'eq'",
            "          (port",
            "            MLAG:'mlag'))",
            "        (extended_access_list_additional_feature",
            "          TTL:'ttl'",
            "          EQ:'eq'",
            "          DEC:'255')",
            "        NEWLINE:'\\n')",
            "      (extended_access_list_tail",
            "        num = DEC:'80'",
            "        ala = (access_list_action",
            "          PERMIT:'permit')",
            "        prot = (protocol",
            "          VRRP:'vrrp')",
            "        srcipr = (access_list_ip_range",
            "          ANY:'any')",
            "        dstipr = (access_list_ip_range",
            "          ANY:'any')",
            "        NEWLINE:'\\n')",
            "      (extended_access_list_tail",
            "        num = DEC:'90'",
            "        ala = (access_list_action",
            "          PERMIT:'permit')",
            "        prot = (protocol",
            "          AHP:'ahp')",
            "        srcipr = (access_list_ip_range",
            "          ANY:'any')",
            "        dstipr = (access_list_ip_range",
            "          ANY:'any')",
            "        NEWLINE:'\\n')",
            "      (extended_access_list_tail",
            "        num = DEC:'100'",
            "        ala = (access_list_action",
            "          PERMIT:'permit')",
            "        prot = (protocol",
            "          PIM:'pim')",
            "        srcipr = (access_list_ip_range",
            "          ANY:'any')",
            "        dstipr = (access_list_ip_range",
            "          ANY:'any')",
            "        NEWLINE:'\\n')",
            "      (extended_access_list_tail",
            "        num = DEC:'110'",
            "        ala = (access_list_action",
            "          PERMIT:'permit')",
            "        prot = (protocol",
            "          IGMP:'igmp')",
            "        srcipr = (access_list_ip_range",
            "          ANY:'any')",
            "        dstipr = (access_list_ip_range",
            "          ANY:'any')",
            "        NEWLINE:'\\n')",
            "      (extended_access_list_tail",
            "        num = DEC:'120'",
            "        ala = (access_list_action",
            "          PERMIT:'permit')",
            "        prot = (protocol",
            "          TCP:'tcp')",
            "        srcipr = (access_list_ip_range",
            "          ANY:'any')",
            "        dstipr = (access_list_ip_range",
            "          ANY:'any')",
            "        alps_dst = (port_specifier",
            "          RANGE:'range'",
            "          arg1 = (port",
            "            DEC:'1')",
            "          arg2 = (port",
            "            DEC:'10'))",
            "        NEWLINE:'\\n')",
            "      (extended_access_list_null_tail",
            "        num = DEC:'130'",
            "        REMARK:'remark'",
            "        (null_rest_of_line",
            "          M_REMARK_REMARK:' REMOVED'  <== mode:M_REMARK",
            "          NEWLINE:'\\n'  <== mode:M_REMARK))",
            "      (extended_access_list_tail",
            "        num = DEC:'140'",
            "        ala = (access_list_action",
            "          PERMIT:'permit')",
            "        prot = (protocol",
            "          UDP:'udp')",
            "        srcipr = (access_list_ip_range",
            "          prefix = IP_PREFIX:'10.0.0.0/19')",
            "        dstipr = (access_list_ip_range",
            "          ANY:'any')",
            "        alps_dst = (port_specifier",
            "          EQ:'eq'",
            "          (port",
            "            SNMP:'snmp'))",
            "        NEWLINE:'\\n')",
            "      (extended_access_list_tail",
            "        num = DEC:'180'",
            "        ala = (access_list_action",
            "          PERMIT:'permit')",
            "        prot = (protocol",
            "          UDP:'udp')",
            "        srcipr = (access_list_ip_range",
            "          HOST:'host'",
            "          ip = IP_ADDRESS:'10.0.0.0')",
            "        dstipr = (access_list_ip_range",
            "          ANY:'any')",
            "        alps_dst = (port_specifier",
            "          EQ:'eq'",
            "          (port",
            "            SNMP:'snmp'))",
            "        NEWLINE:'\\n')",
            "      (extended_access_list_null_tail",
            "        num = DEC:'210'",
            "        REMARK:'remark'",
            "        (null_rest_of_line",
            "          M_REMARK_REMARK:' REMOVED'  <== mode:M_REMARK",
            "          NEWLINE:'\\n'  <== mode:M_REMARK))",
            "      (extended_access_list_tail",
            "        num = DEC:'220'",
            "        ala = (access_list_action",
            "          PERMIT:'permit')",
            "        prot = (protocol",
            "          TCP:'tcp')",
            "        srcipr = (access_list_ip_range",
            "          prefix = IP_PREFIX:'10.0.0.0/19')",
            "        dstipr = (access_list_ip_range",
            "          ANY:'any')",
            "        alps_dst = (port_specifier",
            "          EQ:'eq'",
            "          (port",
            "            SSH:'ssh'))",
            "        NEWLINE:'\\n')",
            "      (extended_access_list_tail",
            "        num = DEC:'260'",
            "        ala = (access_list_action",
            "          PERMIT:'permit')",
            "        prot = (protocol",
            "          TCP:'tcp')",
            "        srcipr = (access_list_ip_range",
            "          HOST:'host'",
            "          ip = IP_ADDRESS:'10.0.0.0')",
            "        dstipr = (access_list_ip_range",
            "          ANY:'any')",
            "        alps_dst = (port_specifier",
            "          EQ:'eq'",
            "          (port",
            "            SSH:'ssh'))",
            "        NEWLINE:'\\n')",
            "      (extended_access_list_tail",
            "        num = DEC:'270'",
            "        ala = (access_list_action",
            "          PERMIT:'permit')",
            "        prot = (protocol",
            "          TCP:'tcp')",
            "        srcipr = (access_list_ip_range",
            "          ANY:'any')",
            "        dstipr = (access_list_ip_range",
            "          ANY:'any')",
            "        alps_dst = (port_specifier",
            "          EQ:'eq'",
            "          (port",
            "            MICROSOFT_DS:'microsoft-ds')",
            "          (port",
            "            DEC:'5432'))",
            "        NEWLINE:'\\n')",
            "      (extended_access_list_tail",
            "        num = DEC:'280'",
            "        ala = (access_list_action",
            "          PERMIT:'permit')",
            "        prot = (protocol",
            "          ICMP:'icmp')",
            "        srcipr = (access_list_ip_range",
            "          ANY:'any')",
            "        dstipr = (access_list_ip_range",
            "          ANY:'any')",
            "        (extended_access_list_additional_feature",
            "          icmp_message_type = DEC:'5'",
            "          icmp_message_code = DEC:'2')",
            "        NEWLINE:'\\n')",
            "      (extended_access_list_tail",
            "        num = DEC:'290'",
            "        ala = (access_list_action",
            "          PERMIT:'permit')",
            "        prot = (protocol",
            "          ICMP:'icmp')",
            "        srcipr = (access_list_ip_range",
            "          ANY:'any')",
            "        dstipr = (access_list_ip_range",
            "          ANY:'any')",
            "        (extended_access_list_additional_feature",
            "          TIME_EXCEEDED:'time-exceeded')",
            "        NEWLINE:'\\n')",
            "      (extended_access_list_tail",
            "        num = DEC:'300'",
            "        ala = (access_list_action",
            "          PERMIT:'permit')",
            "        prot = (protocol",
            "          ICMP:'icmp')",
            "        srcipr = (access_list_ip_range",
            "          ANY:'any')",
            "        dstipr = (access_list_ip_range",
            "          ANY:'any')",
            "        (extended_access_list_additional_feature",
            "          TTL_EXCEEDED:'ttl-exceeded')",
            "        NEWLINE:'\\n')",
            "      (extended_access_list_tail",
            "        num = DEC:'410'",
            "        ala = (access_list_action",
            "          DENY:'deny')",
            "        prot = (protocol",
            "          IP:'ip')",
            "        srcipr = (access_list_ip_range",
            "          ANY:'any')",
            "        dstipr = (access_list_ip_range",
            "          ANY:'any')",
            "        (extended_access_list_additional_feature",
            "          LOG:'log')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (extended_access_list_stanza",
            "      IP:'ip'",
            "      ACCESS_LIST:'access-list'",
            "      shortname = (variable",
            "        EXTENDED:'extended')",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (extended_access_list_stanza",
            "      IP:'ip'",
            "      ACCESS_LIST:'access-list'",
            "      shortname = (variable",
            "        STANDARD:'standard')",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (extended_access_list_stanza",
            "      IP:'ip'",
            "      ACCESS_LIST:'access-list'",
            "      shortname = (variable",
            "        VARIABLE:'blah')",
            "      NEWLINE:'\\n'",
            "      (extended_access_list_tail",
            "        num = DEC:'10'",
            "        ala = (access_list_action",
            "          PERMIT:'permit')",
            "        prot = (protocol",
            "          IP:'ip')",
            "        srcipr = (access_list_ip_range",
            "          ANY:'any')",
            "        dstipr = (access_list_ip_range",
            "          ANY:'any')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (ip_prefix_list_stanza",
            "      IP:'ip'",
            "      PREFIX_LIST:'prefix-list'",
            "      name = (variable",
            "        VARIABLE:'allowprefix'  <== mode:M_Name)",
            "      (ip_prefix_list_tail",
            "        SEQ:'seq'",
            "        seqnum = DEC:'10'",
            "        action = (access_list_action",
            "          PERMIT:'permit')",
            "        prefix = IP_PREFIX:'192.0.2.0/24'",
            "        EQ:'eq'",
            "        eqpl = DEC:'24'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (ip_prefix_list_stanza",
            "      IP:'ip'",
            "      PREFIX_LIST:'prefix-list'",
            "      name = (variable",
            "        VARIABLE:'allowprefix'  <== mode:M_Name)",
            "      (ip_prefix_list_tail",
            "        seqnum = DEC:'20'",
            "        action = (access_list_action",
            "          PERMIT:'permit')",
            "        prefix = IP_PREFIX:'209.165.201.0/24'",
            "        LE:'le'",
            "        maxpl = DEC:'32'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (ip_prefix_list_stanza",
            "      PREFIX_LIST:'prefix-list'",
            "      name = (variable",
            "        VARIABLE:'allowprefix-asa'  <== mode:M_Name)",
            "      (ip_prefix_list_tail",
            "        SEQ:'seq'",
            "        seqnum = DEC:'10'",
            "        action = (access_list_action",
            "          PERMIT:'permit')",
            "        prefix = IP_PREFIX:'192.0.2.0/24'",
            "        LE:'le'",
            "        maxpl = DEC:'32'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (ip_prefix_list_stanza",
            "      PREFIX_LIST:'prefix-list'",
            "      name = (variable",
            "        VARIABLE:'allowprefix-asa'  <== mode:M_Name)",
            "      (ip_prefix_list_tail",
            "        seqnum = DEC:'20'",
            "        action = (access_list_action",
            "          PERMIT:'permit')",
            "        prefix = IP_PREFIX:'209.165.201.0/24'",
            "        LE:'le'",
            "        maxpl = DEC:'32'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        ACCESS_LIST:'access-list'",
            "        DYNAMIC_EXTENDED:'dynamic-extended'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_arp_access_list_extended",
            "      ARP:'arp'",
            "      ACCESS_LIST:'access-list'",
            "      name = (variable_permissive",
            "        VARIABLE:'unnumberedArpAcl')",
            "      NEWLINE:'\\n'",
            "      (s_arp_access_list_extended_tail",
            "        action = (access_list_action",
            "          PERMIT:'permit')",
            "        IP:'ip'",
            "        senderip = (access_list_ip_range",
            "          ANY:'any')",
            "        MAC:'mac'",
            "        sendermac = (access_list_mac_range",
            "          ANY:'any')",
            "        NEWLINE:'\\n')",
            "      (s_arp_access_list_extended_tail",
            "        action = (access_list_action",
            "          PERMIT:'permit')",
            "        IP:'ip'",
            "        senderip = (access_list_ip_range",
            "          ANY:'any')",
            "        MAC:'mac'",
            "        sendermac = (access_list_mac_range",
            "          ANY:'any')",
            "        LOG:'log'",
            "        NEWLINE:'\\n')",
            "      (s_arp_access_list_extended_tail",
            "        action = (access_list_action",
            "          PERMIT:'permit')",
            "        IP:'ip'",
            "        senderip = (access_list_ip_range",
            "          HOST:'host'",
            "          ip = IP_ADDRESS:'10.0.0.1')",
            "        MAC:'mac'",
            "        sendermac = (access_list_mac_range",
            "          HOST:'host'",
            "          address = MAC_ADDRESS_LITERAL:'0000.0000.0001')",
            "        NEWLINE:'\\n')",
            "      (s_arp_access_list_extended_tail",
            "        action = (access_list_action",
            "          PERMIT:'permit')",
            "        IP:'ip'",
            "        senderip = (access_list_ip_range",
            "          ip = IP_ADDRESS:'10.0.0.0'",
            "          wildcard = IP_ADDRESS:'0.0.0.255')",
            "        MAC:'mac'",
            "        sendermac = (access_list_mac_range",
            "          address = MAC_ADDRESS_LITERAL:'0000.0000.0001'",
            "          wildcard = MAC_ADDRESS_LITERAL:'FFFF.FFFF.0000')",
            "        NEWLINE:'\\n')",
            "      (s_arp_access_list_extended_tail",
            "        action = (access_list_action",
            "          PERMIT:'permit')",
            "        REQUEST:'request'",
            "        IP:'ip'",
            "        senderip = (access_list_ip_range",
            "          ANY:'any')",
            "        MAC:'mac'",
            "        sendermac = (access_list_mac_range",
            "          ANY:'any')",
            "        NEWLINE:'\\n')",
            "      (s_arp_access_list_extended_tail",
            "        action = (access_list_action",
            "          PERMIT:'permit')",
            "        REQUEST:'request'",
            "        IP:'ip'",
            "        senderip = (access_list_ip_range",
            "          HOST:'host'",
            "          ip = IP_ADDRESS:'10.0.0.1')",
            "        MAC:'mac'",
            "        sendermac = (access_list_mac_range",
            "          HOST:'host'",
            "          address = MAC_ADDRESS_LITERAL:'0000.0000.0001')",
            "        NEWLINE:'\\n')",
            "      (s_arp_access_list_extended_tail",
            "        action = (access_list_action",
            "          PERMIT:'permit')",
            "        RESPONSE:'response'",
            "        IP:'ip'",
            "        senderip = (access_list_ip_range",
            "          ANY:'any')",
            "        targetip = (access_list_ip_range",
            "          ANY:'any')",
            "        MAC:'mac'",
            "        sendermac = (access_list_mac_range",
            "          ANY:'any')",
            "        NEWLINE:'\\n')",
            "      (s_arp_access_list_extended_tail",
            "        action = (access_list_action",
            "          PERMIT:'permit')",
            "        RESPONSE:'response'",
            "        IP:'ip'",
            "        senderip = (access_list_ip_range",
            "          HOST:'host'",
            "          ip = IP_ADDRESS:'10.0.0.1')",
            "        targetip = (access_list_ip_range",
            "          ANY:'any')",
            "        MAC:'mac'",
            "        sendermac = (access_list_mac_range",
            "          HOST:'host'",
            "          address = MAC_ADDRESS_LITERAL:'0000.0000.0001')",
            "        NEWLINE:'\\n')",
            "      (s_arp_access_list_extended_tail",
            "        action = (access_list_action",
            "          PERMIT:'permit')",
            "        RESPONSE:'response'",
            "        IP:'ip'",
            "        senderip = (access_list_ip_range",
            "          ANY:'any')",
            "        targetip = (access_list_ip_range",
            "          ANY:'any')",
            "        MAC:'mac'",
            "        sendermac = (access_list_mac_range",
            "          ANY:'any')",
            "        targetmac = (access_list_mac_range",
            "          ANY:'any')",
            "        NEWLINE:'\\n')",
            "      (s_arp_access_list_extended_tail",
            "        action = (access_list_action",
            "          PERMIT:'permit')",
            "        RESPONSE:'response'",
            "        IP:'ip'",
            "        senderip = (access_list_ip_range",
            "          ANY:'any')",
            "        targetip = (access_list_ip_range",
            "          HOST:'host'",
            "          ip = IP_ADDRESS:'10.0.0.2')",
            "        MAC:'mac'",
            "        sendermac = (access_list_mac_range",
            "          ANY:'any')",
            "        targetmac = (access_list_mac_range",
            "          HOST:'host'",
            "          address = MAC_ADDRESS_LITERAL:'0000.0000.0002')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_arp_access_list_extended",
            "      ARP:'arp'",
            "      ACCESS_LIST:'access-list'",
            "      name = (variable_permissive",
            "        VARIABLE:'numberedArpAcl')",
            "      NEWLINE:'\\n'",
            "      (s_arp_access_list_extended_tail",
            "        num = DEC:'10'",
            "        action = (access_list_action",
            "          DENY:'deny')",
            "        IP:'ip'",
            "        senderip = (access_list_ip_range",
            "          ANY:'any')",
            "        MAC:'mac'",
            "        sendermac = (access_list_mac_range",
            "          ANY:'any')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (extended_access_list_stanza",
            "      IP:'ip'",
            "      ACCESS_LIST:'access-list'",
            "      shortname = (variable",
            "        VARIABLE:'test-codes')",
            "      NEWLINE:'\\n'",
            "      (extended_access_list_tail",
            "        num = DEC:'10'",
            "        ala = (access_list_action",
            "          PERMIT:'permit')",
            "        prot = (protocol",
            "          UDP:'udp')",
            "        srcipr = (access_list_ip_range",
            "          ANY:'any')",
            "        dstipr = (access_list_ip_range",
            "          ANY:'any')",
            "        alps_dst = (port_specifier",
            "          EQ:'eq'",
            "          (port",
            "            BFD:'bfd'))",
            "        NEWLINE:'\\n')",
            "      (extended_access_list_tail",
            "        num = DEC:'20'",
            "        ala = (access_list_action",
            "          PERMIT:'permit')",
            "        prot = (protocol",
            "          UDP:'udp')",
            "        srcipr = (access_list_ip_range",
            "          ANY:'any')",
            "        dstipr = (access_list_ip_range",
            "          ANY:'any')",
            "        alps_dst = (port_specifier",
            "          EQ:'eq'",
            "          (port",
            "            BFD_ECHO:'bfd-echo'))",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (extended_access_list_stanza",
            "      ACCESS_LIST:'access-list'",
            "      name = (variable_aclname",
            "        VARIABLE:'TEST')",
            "      EXTENDED:'extended'",
            "      (extended_access_list_tail",
            "        ala = (access_list_action",
            "          DENY:'deny')",
            "        prot = (protocol",
            "          IP:'ip')",
            "        srcipr = (access_list_ip_range",
            "          ANY:'any')",
            "        dstipr = (access_list_ip_range",
            "          ANY:'any')",
            "        (extended_access_list_additional_feature",
            "          LOG:'log'",
            "          level = DEC:'7'",
            "          INTERVAL:'interval'",
            "          secs = DEC:'600')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (extended_access_list_stanza",
            "      ACCESS_LIST:'access-list'",
            "      name = (variable_aclname",
            "        VARIABLE:'TEST')",
            "      EXTENDED:'extended'",
            "      (extended_access_list_tail",
            "        ala = (access_list_action",
            "          DENY:'deny')",
            "        prot = (protocol",
            "          IP:'ip')",
            "        srcipr = (access_list_ip_range",
            "          ANY:'any')",
            "        dstipr = (access_list_ip_range",
            "          ANY:'any')",
            "        (extended_access_list_additional_feature",
            "          LOG:'log'",
            "          DEFAULT:'default')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (extended_access_list_stanza",
            "      ACCESS_LIST:'access-list'",
            "      name = (variable_aclname",
            "        VARIABLE:'TEST')",
            "      EXTENDED:'extended'",
            "      (extended_access_list_tail",
            "        ala = (access_list_action",
            "          DENY:'deny')",
            "        prot = (protocol",
            "          IP:'ip')",
            "        srcipr = (access_list_ip_range",
            "          ANY:'any')",
            "        dstipr = (access_list_ip_range",
            "          ANY:'any')",
            "        (extended_access_list_additional_feature",
            "          LOG:'log'",
            "          DISABLE:'disable')",
            "        NEWLINE:'\\n')))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/cisco_additional_paths" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'cisco_additional_paths'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (router_bgp_stanza",
            "      ROUTER:'router'",
            "      BGP:'bgp'",
            "      procnum = (bgp_asn",
            "        asn = DEC:'1')",
            "      NEWLINE:'\\n'",
            "      (router_bgp_stanza_tail",
            "        (additional_paths_rb_stanza",
            "          BGP:'bgp'",
            "          ADDITIONAL_PATHS:'additional-paths'",
            "          INSTALL:'install'",
            "          NEWLINE:'\\n'))",
            "      (router_bgp_stanza_tail",
            "        (additional_paths_rb_stanza",
            "          BGP:'bgp'",
            "          ADDITIONAL_PATHS:'additional-paths'",
            "          SELECT:'select'",
            "          ALL:'all'",
            "          NEWLINE:'\\n'))",
            "      (router_bgp_stanza_tail",
            "        (additional_paths_rb_stanza",
            "          BGP:'bgp'",
            "          ADDITIONAL_PATHS:'additional-paths'",
            "          SEND:'send'",
            "          RECEIVE:'receive'",
            "          NEWLINE:'\\n'))",
            "      (router_bgp_stanza_tail",
            "        (neighbor_flat_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          ip = IP_ADDRESS:'1.2.3.4'  <== mode:M_NEIGHBOR",
            "          (bgp_tail",
            "            (activate_bgp_tail",
            "              ACTIVATE:'activate'",
            "              NEWLINE:'\\n'))))",
            "      (router_bgp_stanza_tail",
            "        (neighbor_flat_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          ip = IP_ADDRESS:'1.2.3.4'  <== mode:M_NEIGHBOR",
            "          (bgp_tail",
            "            (advertise_bgp_tail",
            "              ADVERTISE:'advertise'",
            "              ADDITIONAL_PATHS:'additional-paths'",
            "              ALL:'all'",
            "              NEWLINE:'\\n'))))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/cisco_authentication" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'cisco_authentication'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_authentication",
            "      AUTHENTICATION:'authentication'",
            "      (null_rest_of_line",
            "        COMMAND:'command'  <== mode:M_Authentication",
            "        VARIABLE:'bounce-port'",
            "        IGNORE:'ignore'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_authentication",
            "      AUTHENTICATION:'authentication'",
            "      (null_rest_of_line",
            "        MAC_MOVE:'mac-move'  <== mode:M_Authentication",
            "        PERMIT:'permit'",
            "        NEWLINE:'\\n')))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/cisco_bgp" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'cisco_bgp'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (ip_as_path_access_list_stanza",
            "      IP:'ip'",
            "      AS_PATH:'as-path'",
            "      ACCESS_LIST:'access-list'  <== mode:M_AsPath",
            "      name = (variable",
            "        DEC:'10'  <== mode:M_AsPathAccessList)",
            "      (ip_as_path_access_list_tail",
            "        action = (access_list_action",
            "          DENY:'deny'  <== mode:M_AsPathAccessList)",
            "        as_path_regex = RAW_TEXT:' ^65535$'  <== mode:M_Description",
            "        NEWLINE:'\\n'  <== mode:M_Description)))",
            "  (stanza",
            "    (ip_as_path_access_list_stanza",
            "      IP:'ip'",
            "      AS_PATH:'as-path'",
            "      ACCESS_LIST:'access-list'  <== mode:M_AsPath",
            "      name = (variable",
            "        DEC:'10'  <== mode:M_AsPathAccessList)",
            "      (ip_as_path_access_list_tail",
            "        action = (access_list_action",
            "          DENY:'deny'  <== mode:M_AsPathAccessList)",
            "        as_path_regex = RAW_TEXT:' _65535_'  <== mode:M_Description",
            "        NEWLINE:'\\n'  <== mode:M_Description)))",
            "  (stanza",
            "    (ip_as_path_access_list_stanza",
            "      IP:'ip'",
            "      AS_PATH:'as-path'",
            "      ACCESS_LIST:'access-list'  <== mode:M_AsPath",
            "      name = (variable",
            "        DEC:'20'  <== mode:M_AsPathAccessList)",
            "      (ip_as_path_access_list_tail",
            "        action = (access_list_action",
            "          PERMIT:'permit'  <== mode:M_AsPathAccessList)",
            "        as_path_regex = RAW_TEXT:' ^65536$'  <== mode:M_Description",
            "        NEWLINE:'\\n'  <== mode:M_Description)))",
            "  (stanza",
            "    (ip_as_path_access_list_stanza",
            "      IP:'ip'",
            "      AS_PATH:'as-path'",
            "      ACCESS_LIST:'access-list'  <== mode:M_AsPath",
            "      name = (variable",
            "        DEC:'30'  <== mode:M_AsPathAccessList)",
            "      (ip_as_path_access_list_tail",
            "        action = (access_list_action",
            "          PERMIT:'permit'  <== mode:M_AsPathAccessList)",
            "        as_path_regex = RAW_TEXT:' ^4000$'  <== mode:M_Description",
            "        NEWLINE:'\\n'  <== mode:M_Description)))",
            "  (stanza",
            "    (router_bgp_stanza",
            "      ROUTER:'router'",
            "      BGP:'bgp'",
            "      procnum = (bgp_asn",
            "        asn = DEC:'50000')",
            "      NEWLINE:'\\n'",
            "      (router_bgp_stanza_tail",
            "        (neighbor_flat_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          ip = IP_ADDRESS:'10.20.2.2'  <== mode:M_NEIGHBOR",
            "          (filter_list_bgp_tail",
            "            FILTER_LIST:'filter-list'",
            "            num = DEC:'10'",
            "            OUT:'out'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        END:'end'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (router_bgp_stanza",
            "      ROUTER:'router'",
            "      BGP:'bgp'",
            "      procnum = (bgp_asn",
            "        asn = DEC:'65538')",
            "      NEWLINE:'\\n'",
            "      (router_bgp_stanza_tail",
            "        (neighbor_flat_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          ip = IP_ADDRESS:'192.168.3.2'  <== mode:M_NEIGHBOR",
            "          (filter_list_bgp_tail",
            "            FILTER_LIST:'filter-list'",
            "            num = DEC:'20'",
            "            IN:'in'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        END:'end'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (router_bgp_stanza",
            "      ROUTER:'router'",
            "      BGP:'bgp'",
            "      procnum = (bgp_asn",
            "        asn = DEC:'65542')",
            "      NEWLINE:'\\n'",
            "      (router_bgp_stanza_tail",
            "        (neighbor_flat_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          ip = IP_ADDRESS:'192.168.4.2'  <== mode:M_NEIGHBOR",
            "          (filter_list_bgp_tail",
            "            FILTER_LIST:'filter-list'",
            "            num = DEC:'40'",
            "            IN:'in'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        END:'end'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (router_bgp_stanza",
            "      ROUTER:'router'",
            "      BGP:'bgp'",
            "      procnum = (bgp_asn",
            "        asn = DEC:'1')",
            "      NEWLINE:'\\n'",
            "      (router_bgp_stanza_tail",
            "        (bgp_tail",
            "          (null_bgp_tail",
            "            RECONNECT_INTERVAL:'reconnect-interval'",
            "            (null_rest_of_line",
            "              DEC:'30'",
            "              NEWLINE:'\\n'))))",
            "      (router_bgp_stanza_tail",
            "        (bgp_tail",
            "          (null_bgp_tail",
            "            NO:'no'",
            "            BGP:'bgp'",
            "            FAST_EXTERNAL_FALLOVER:'fast-external-fallover'",
            "            (null_rest_of_line",
            "              NEWLINE:'\\n'))))",
            "      (router_bgp_stanza_tail",
            "        (bgp_maxas_limit_rb_stanza",
            "          BGP:'bgp'",
            "          MAXAS_LIMIT:'maxas-limit'",
            "          limit = DEC:'50'",
            "          NEWLINE:'\\n'))",
            "      (router_bgp_stanza_tail",
            "        (bgp_tail",
            "          (bgp_scan_time_bgp_tail",
            "            BGP:'bgp'",
            "            SCAN_TIME:'scan-time'",
            "            secs = DEC:'5'",
            "            NEWLINE:'\\n')))",
            "      (router_bgp_stanza_tail",
            "        (bgp_tail",
            "          (null_bgp_tail",
            "            BGP:'bgp'",
            "            BESTPATH:'bestpath'",
            "            MED:'med'",
            "            (null_rest_of_line",
            "              ALWAYS:'always'",
            "              NEWLINE:'\\n'))))",
            "      (router_bgp_stanza_tail",
            "        (bgp_tail",
            "          (redistribute_connected_bgp_tail",
            "            REDISTRIBUTE:'redistribute'",
            "            CONNECTED:'connected'",
            "            ROUTE_MAP:'route-map'",
            "            map = (variable",
            "              VARIABLE:'bloop'  <== mode:M_RouteMap)",
            "            NEWLINE:'\\n')))",
            "      (router_bgp_stanza_tail",
            "        (bgp_tail",
            "          (redistribute_eigrp_bgp_tail",
            "            REDISTRIBUTE:'redistribute'",
            "            EIGRP:'eigrp'",
            "            id = DEC:'1'",
            "            (null_rest_of_line",
            "              NEWLINE:'\\n'))))",
            "      (router_bgp_stanza_tail",
            "        (bgp_tail",
            "          (redistribute_ospf_bgp_tail",
            "            REDISTRIBUTE:'redistribute'",
            "            OSPF:'ospf'",
            "            procname = (variable",
            "              VARIABLE:'abc')",
            "            NEWLINE:'\\n')))",
            "      (router_bgp_stanza_tail",
            "        (bgp_tail",
            "          (redistribute_ospf_bgp_tail",
            "            REDISTRIBUTE:'redistribute'",
            "            OSPF:'ospf'",
            "            procname = (variable",
            "              DEC:'2')",
            "            NEWLINE:'\\n')))",
            "      (router_bgp_stanza_tail",
            "        (bgp_tail",
            "          (redistribute_ospf_bgp_tail",
            "            REDISTRIBUTE:'redistribute'",
            "            OSPF:'ospf'",
            "            procname = (variable",
            "              DEC:'2')",
            "            VRF:'vrf'",
            "            vrf = (variable",
            "              VARIABLE:'vrf1')",
            "            NEWLINE:'\\n')))",
            "      (router_bgp_stanza_tail",
            "        (bgp_tail",
            "          (redistribute_static_bgp_tail",
            "            REDISTRIBUTE:'redistribute'",
            "            STATIC:'static'",
            "            METRIC:'metric'",
            "            metric = DEC:'4294967295'",
            "            ROUTE_MAP:'route-map'",
            "            map = (variable",
            "              VARIABLE:'abcdefg'  <== mode:M_RouteMap)",
            "            NEWLINE:'\\n')))",
            "      (router_bgp_stanza_tail",
            "        (bgp_tail",
            "          (redistribute_rip_bgp_tail",
            "            REDISTRIBUTE:'redistribute'",
            "            RIP:'rip'",
            "            ROUTE_MAP:'route-map'",
            "            map = (variable",
            "              VARIABLE:'blah'  <== mode:M_RouteMap)",
            "            NEWLINE:'\\n')))",
            "      (router_bgp_stanza_tail",
            "        (template_peer_policy_rb_stanza",
            "          TEMPLATE:'template'",
            "          PEER_POLICY:'peer-policy'",
            "          name = VARIABLE:'p1'",
            "          NEWLINE:'\\n'",
            "          (inherit_peer_policy_bgp_tail",
            "            INHERIT:'inherit'",
            "            PEER_POLICY:'peer-policy'",
            "            name = (variable",
            "              VARIABLE:'p2')",
            "            NEWLINE:'\\n')",
            "          (inherit_peer_policy_bgp_tail",
            "            INHERIT:'inherit'",
            "            PEER_POLICY:'peer-policy'",
            "            name = (variable",
            "              VARIABLE:'p3')",
            "            num = DEC:'10'",
            "            NEWLINE:'\\n')",
            "          EXIT_PEER_POLICY:'exit-peer-policy'",
            "          NEWLINE:'\\n'))",
            "      (router_bgp_stanza_tail",
            "        (neighbor_flat_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          ip = IP_ADDRESS:'10.0.0.1'  <== mode:M_NEIGHBOR",
            "          (bgp_tail",
            "            (null_bgp_tail",
            "              DISABLE_CONNECTED_CHECK:'disable-connected-check'",
            "              (null_rest_of_line",
            "                NEWLINE:'\\n')))))",
            "      (router_bgp_stanza_tail",
            "        (neighbor_flat_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          ip = IP_ADDRESS:'10.0.0.1'  <== mode:M_NEIGHBOR",
            "          (bgp_tail",
            "            (unsuppress_map_bgp_tail",
            "              UNSUPPRESS_MAP:'unsuppress-map'",
            "              mapname = (variable_permissive",
            "                VARIABLE:'UNSUPP-MAP')",
            "              NEWLINE:'\\n'))))",
            "      (router_bgp_stanza_tail",
            "        (neighbor_flat_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          ip = IP_ADDRESS:'10.0.0.1'  <== mode:M_NEIGHBOR",
            "          (bgp_tail",
            "            (distribute_list_bgp_tail",
            "              DISTRIBUTE_LIST:'distribute-list'",
            "              list_name = (variable",
            "                DEC:'5')",
            "              IN:'in'",
            "              NEWLINE:'\\n'))))",
            "      (router_bgp_stanza_tail",
            "        (neighbor_flat_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          ip = IP_ADDRESS:'10.0.0.1'  <== mode:M_NEIGHBOR",
            "          (bgp_tail",
            "            (distribute_list_bgp_tail",
            "              DISTRIBUTE_LIST:'distribute-list'",
            "              list_name = (variable",
            "                DEC:'5')",
            "              OUT:'out'",
            "              NEWLINE:'\\n'))))",
            "      (router_bgp_stanza_tail",
            "        (address_family_rb_stanza",
            "          (address_family_header",
            "            ADDRESS_FAMILY:'address-family'",
            "            af = (bgp_address_family",
            "              IPV6:'ipv6'",
            "              UNICAST:'unicast')",
            "            NEWLINE:'\\n')",
            "          (bgp_tail",
            "            (bgp_scan_time_bgp_tail",
            "              BGP:'bgp'",
            "              SCAN_TIME:'scan-time'",
            "              secs = DEC:'5'",
            "              NEWLINE:'\\n'))",
            "          (bgp_tail",
            "            (redistribute_ospfv3_bgp_tail",
            "              REDISTRIBUTE:'redistribute'",
            "              OSPFV3:'ospfv3'",
            "              procname = (variable",
            "                DEC:'1')",
            "              ROUTE_MAP:'route-map'",
            "              map = (variable",
            "                VARIABLE:'ospfv3_map'  <== mode:M_RouteMap)",
            "              NEWLINE:'\\n'))",
            "          (address_family_footer)))",
            "      (router_bgp_stanza_tail",
            "        (vrf_block_rb_stanza",
            "          VRF:'vrf'",
            "          name = VARIABLE:'aVrfWithInnerStatements'",
            "          NEWLINE:'\\n'",
            "          (neighbor_flat_rb_stanza",
            "            NEIGHBOR:'neighbor'",
            "            ip = IP_ADDRESS:'10.0.1.2'  <== mode:M_NEIGHBOR",
            "            (remote_as_bgp_tail",
            "              REMOTE_AS:'remote-as'",
            "              remote = (bgp_asn",
            "                asn = DEC:'65001')",
            "              NEWLINE:'\\n'))",
            "          (bgp_tail",
            "            (network_bgp_tail",
            "              NETWORK:'network'",
            "              prefix = IP_PREFIX:'192.168.1.3/11'",
            "              NEWLINE:'\\n'))",
            "          (aggregate_address_rb_stanza",
            "            AGGREGATE_ADDRESS:'aggregate-address'",
            "            prefix = IP_PREFIX:'192.168.0.0/16'",
            "            summary_only = SUMMARY_ONLY:'summary-only'",
            "            ATTRIBUTE_MAP:'attribute-map'",
            "            mapname = (variable",
            "              VARIABLE:'AGGREGATE-MAP')",
            "            NEWLINE:'\\n')",
            "          (bgp_tail",
            "            (redistribute_connected_bgp_tail",
            "              REDISTRIBUTE:'redistribute'",
            "              CONNECTED:'connected'",
            "              ROUTE_MAP:'route-map'",
            "              map = (variable",
            "                VARIABLE:'CONNECTED-TO-BGP'  <== mode:M_RouteMap)",
            "              NEWLINE:'\\n'))",
            "          (bgp_tail",
            "            (default_originate_bgp_tail",
            "              DEFAULT_ORIGINATE:'default-originate'",
            "              NEWLINE:'\\n'))))))",
            "  (stanza",
            "    (route_map_stanza",
            "      ROUTE_MAP:'route-map'",
            "      name = (variable",
            "        VARIABLE:'ospfv3_map'  <== mode:M_RouteMap)",
            "      rmt = (access_list_action",
            "        PERMIT:'permit')",
            "      num = DEC:'10'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (route_map_stanza",
            "      ROUTE_MAP:'route-map'",
            "      name = (variable",
            "        VARIABLE:'CONNECTED-TO-BGP'  <== mode:M_RouteMap)",
            "      rmt = (access_list_action",
            "        PERMIT:'permit')",
            "      num = DEC:'10'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (route_map_stanza",
            "      ROUTE_MAP:'route-map'",
            "      name = (variable",
            "        VARIABLE:'AGGREGATE-MAP'  <== mode:M_RouteMap)",
            "      rmt = (access_list_action",
            "        PERMIT:'permit')",
            "      num = DEC:'10'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (route_map_stanza",
            "      ROUTE_MAP:'route-map'",
            "      name = (variable",
            "        VARIABLE:'UNSUPP-MAP'  <== mode:M_RouteMap)",
            "      rmt = (access_list_action",
            "        PERMIT:'permit')",
            "      num = DEC:'10'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (standard_access_list_stanza",
            "      ACCESS_LIST:'access-list'",
            "      num = ACL_NUM_STANDARD:'5'",
            "      (standard_access_list_tail",
            "        ala = (access_list_action",
            "          DENY:'deny')",
            "        ipr = (access_list_ip_range",
            "          ANY:'any')",
            "        NEWLINE:'\\n\\n')))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/cisco_bgp_confederation" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'cisco_bgp_confederation'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (router_bgp_stanza",
            "      ROUTER:'router'",
            "      BGP:'bgp'",
            "      procnum = (bgp_asn",
            "        asn = DEC:'3')",
            "      NEWLINE:'\\n'",
            "      (router_bgp_stanza_tail",
            "        (bgp_tail",
            "          (null_bgp_tail",
            "            NO:'no'",
            "            SYNCHRONIZATION:'synchronization'",
            "            (null_rest_of_line",
            "              NEWLINE:'\\n'))))",
            "      (router_bgp_stanza_tail",
            "        (bgp_tail",
            "          (null_bgp_tail",
            "            BGP:'bgp'",
            "            BESTPATH:'bestpath'",
            "            AS_PATH:'as-path'",
            "            CONFED:'confed'  <== mode:M_AsPath",
            "            (null_rest_of_line",
            "              NEWLINE:'\\n'))))",
            "      (router_bgp_stanza_tail",
            "        (bgp_confederation_rb_stanza",
            "          BGP:'bgp'",
            "          CONFEDERATION:'confederation'",
            "          IDENTIFIER:'identifier'",
            "          DEC:'100'",
            "          NEWLINE:'\\n'))",
            "      (router_bgp_stanza_tail",
            "        (bgp_confederation_rb_stanza",
            "          BGP:'bgp'",
            "          CONFEDERATION:'confederation'",
            "          PEERS:'peers'",
            "          DEC:'10'",
            "          DEC:'11'",
            "          NEWLINE:'\\n'))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/cisco_cable" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'cisco_cable'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_null",
            "        ACFE:'acfe'",
            "        (null_rest_of_line",
            "          ENABLE:'enable'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_null",
            "        ADMISSION_CONTROL:'admission-control'",
            "        (null_rest_of_line",
            "          PREEMPT:'preempt'",
            "          VARIABLE:'priority-voice'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_null",
            "        CLOCK:'clock'",
            "        (null_rest_of_line",
            "          VARIABLE:'dti'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_null",
            "        DEFAULT_TOS_QOS10:'default-tos-qos10'",
            "        (null_rest_of_line",
            "          TOS_OVERWRITE:'tos-overwrite'",
            "          HEX:'0x0'",
            "          HEX:'0x0'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_null",
            "        DS_MAX_BURST:'ds-max-burst'",
            "        (null_rest_of_line",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_null",
            "        DSG:'dsg'",
            "        (null_rest_of_line",
            "          VARIABLE:'cfr'",
            "          DEC:'12345'",
            "          DEST_IP:'dest-ip'",
            "          IP_ADDRESS:'1.2.3.4'",
            "          TUNNEL:'tunnel'",
            "          DEC:'12345'",
            "          PRIORITY:'priority'",
            "          DEC:'12345'",
            "          SRC_IP:'src-ip'",
            "          IP_ADDRESS:'2.3.4.5'",
            "          VARIABLE:'in-dcd'",
            "          VARIABLE:'yes'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_null",
            "        DSG:'dsg'",
            "        (null_rest_of_line",
            "          VARIABLE:'client-list'",
            "          DEC:'12347'",
            "          VARIABLE:'id-index'",
            "          DEC:'111'",
            "          VARIABLE:'application-id'",
            "          VARIABLE:'DEF'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_null",
            "        DSG:'dsg'",
            "        (null_rest_of_line",
            "          VARIABLE:'client-list'",
            "          DEC:'12346'",
            "          VARIABLE:'id-index'",
            "          DEC:'222'",
            "          BROADCAST:'broadcast'",
            "          DEC:'12345'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_null",
            "        DSG:'dsg'",
            "        (null_rest_of_line",
            "          VARIABLE:'client-list'",
            "          DEC:'12345'",
            "          VARIABLE:'id-index'",
            "          DEC:'333'",
            "          VARIABLE:'ca-system-id'",
            "          VARIABLE:'ABC'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_null",
            "        DSG:'dsg'",
            "        (null_rest_of_line",
            "          VARIABLE:'dseh'",
            "          DISABLE:'disable'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_null",
            "        DSG:'dsg'",
            "        (null_rest_of_line",
            "          VARIABLE:'tg'",
            "          DEC:'12345'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_null",
            "        DSG:'dsg'",
            "        (null_rest_of_line",
            "          VARIABLE:'tg'",
            "          DEC:'12345'",
            "          CHANNEL:'channel'",
            "          DEC:'23456'",
            "          PRIORITY:'priority'",
            "          DEC:'34567'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_null",
            "        DSG:'dsg'",
            "        (null_rest_of_line",
            "          TIMER:'timer'",
            "          DEC:'123'",
            "          VARIABLE:'Tdsg123'",
            "          DEC:'234'",
            "          VARIABLE:'Tdsg234'",
            "          DEC:'55555'",
            "          VARIABLE:'Tdsg345'",
            "          DEC:'666'",
            "          VARIABLE:'Tdsg66'",
            "          DEC:'777'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_null",
            "        DSG:'dsg'",
            "        (null_rest_of_line",
            "          TUNNEL:'tunnel'",
            "          DEC:'12345'",
            "          VARIABLE:'mac-addr'",
            "          MAC_ADDRESS_LITERAL:'dead.beef.feed'",
            "          VARIABLE:'tg'",
            "          DEC:'12345'",
            "          VARIABLE:'clients'",
            "          DEC:'12345'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_fiber_node",
            "        FIBER_NODE:'fiber-node'",
            "        node = DEC:'1'  <== mode:M_FiberNode",
            "        NEWLINE:'\\n'",
            "        (cfn_null",
            "          DOWNSTREAM:'downstream'",
            "          (null_rest_of_line",
            "            VARIABLE:'Modular-Cable'",
            "            DEC:'1'",
            "            FORWARD_SLASH:'/'",
            "            DEC:'2'",
            "            FORWARD_SLASH:'/'",
            "            DEC:'3'",
            "            RF_CHANNEL:'rf-channel'",
            "            DEC:'0'",
            "            DASH:'-'",
            "            DEC:'100'",
            "            NEWLINE:'\\n'))",
            "        (cfn_null",
            "          UPSTREAM:'upstream'",
            "          (null_rest_of_line",
            "            VARIABLE:'Cable'",
            "            DEC:'1'",
            "            FORWARD_SLASH:'/'",
            "            DEC:'2'",
            "            VARIABLE:'connector'",
            "            DEC:'3'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_null",
            "        FLAP_LIST:'flap-list'",
            "        (null_rest_of_line",
            "          VARIABLE:'power-adjust'",
            "          THRESHOLD:'threshold'",
            "          DEC:'12345'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_null",
            "        IPV6:'ipv6'",
            "        (null_rest_of_line",
            "          VARIABLE:'pd-route'",
            "          IPV6_PREFIX:'DEAD:BEEF:CAB::/44'",
            "          VARIABLE:'Bundle1.23'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_null",
            "        IPV6:'ipv6'",
            "        (null_rest_of_line",
            "          VARIABLE:'source-verify'",
            "          VARIABLE:'leasequery-filter'",
            "          DOWNSTREAM:'downstream'",
            "          DEC:'22'",
            "          DEC:'11'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_load_balance",
            "        LOAD_BALANCE:'load-balance'",
            "        (clb_null",
            "          D20_GGRP_DEFAULT:'d20-ggrp-default'",
            "          (null_rest_of_line",
            "            DISABLE:'disable'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_load_balance",
            "        LOAD_BALANCE:'load-balance'",
            "        (clb_null",
            "          D30_GGRP_DEFAULT:'d30-ggrp-default'",
            "          (null_rest_of_line",
            "            DISABLE:'disable'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_load_balance",
            "        LOAD_BALANCE:'load-balance'",
            "        (clb_null",
            "          DOCSIS_ENABLE:'docsis-enable'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_load_balance",
            "        LOAD_BALANCE:'load-balance'",
            "        (clb_docsis_group",
            "          DOCSIS_GROUP:'docsis-group'",
            "          group = DEC:'12345'",
            "          NEWLINE:'\\n'",
            "          (clbdg_null",
            "            NO:'no'",
            "            DISABLE:'disable'",
            "            (null_rest_of_line",
            "              NEWLINE:'\\n'))",
            "          (clbdg_docsis_policy",
            "            DOCSIS_POLICY:'docsis-policy'",
            "            policy = DEC:'1'",
            "            NEWLINE:'\\n')",
            "          (clbdg_null",
            "            DOWNSTREAM:'downstream'",
            "            (null_rest_of_line",
            "              VARIABLE:'Modular-Cable'",
            "              DEC:'1'",
            "              FORWARD_SLASH:'/'",
            "              DEC:'2'",
            "              FORWARD_SLASH:'/'",
            "              DEC:'3'",
            "              RF_CHANNEL:'rf-channel'",
            "              DEC:'0'",
            "              DASH:'-'",
            "              DEC:'100'",
            "              NEWLINE:'\\n'))",
            "          (clbdg_null",
            "            INIT_TECH_LIST:'init-tech-list'",
            "            (null_rest_of_line",
            "              DEC:'12345'",
            "              NEWLINE:'\\n'))",
            "          (clbdg_null",
            "            INTERVAL:'interval'",
            "            (null_rest_of_line",
            "              DEC:'12345'",
            "              NEWLINE:'\\n'))",
            "          (clbdg_null",
            "            METHOD:'method'",
            "            (null_rest_of_line",
            "              VARIABLE:'utilization'",
            "              NEWLINE:'\\n'))",
            "          (clbdg_null",
            "            POLICY:'policy'",
            "            (null_rest_of_line",
            "              VARIABLE:'pure-ds-load'",
            "              NEWLINE:'\\n'))",
            "          (clbdg_null",
            "            RESTRICTED:'restricted'",
            "            (null_rest_of_line",
            "              NEWLINE:'\\n'))",
            "          (clbdg_null",
            "            TAG:'tag'",
            "            (null_rest_of_line",
            "              VARIABLE:'abc'",
            "              NEWLINE:'\\n'))",
            "          (clbdg_null",
            "            THRESHOLD:'threshold'",
            "            (null_rest_of_line",
            "              VARIABLE:'load'",
            "              DEC:'12345'",
            "              NEWLINE:'\\n'))",
            "          (clbdg_null",
            "            THRESHOLD:'threshold'",
            "            (null_rest_of_line",
            "              VARIABLE:'load'",
            "              MINIMUM:'minimum'",
            "              DEC:'12345'",
            "              NEWLINE:'\\n'))",
            "          (clbdg_null",
            "            UPSTREAM:'upstream'",
            "            (null_rest_of_line",
            "              VARIABLE:'Cable1/2/3'",
            "              DEC:'0'",
            "              NEWLINE:'\\n'))))))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_load_balance",
            "        LOAD_BALANCE:'load-balance'",
            "        (clb_docsis_policy",
            "          DOCSIS_POLICY:'docsis-policy'",
            "          policy = DEC:'1'",
            "          RULE:'rule'",
            "          rulenum = DEC:'1'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_load_balance",
            "        LOAD_BALANCE:'load-balance'",
            "        (clb_null",
            "          DOCSIS30_ENABLE:'docsis30-enable'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_load_balance",
            "        LOAD_BALANCE:'load-balance'",
            "        (clb_null",
            "          EXCLUDE:'exclude'",
            "          (null_rest_of_line",
            "            VARIABLE:'device-class'",
            "            DEC:'12345'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_load_balance",
            "        LOAD_BALANCE:'load-balance'",
            "        (clb_null",
            "          EXCLUDE:'exclude'",
            "          (null_rest_of_line",
            "            OUI:'oui'",
            "            M_COMMENT_NON_NEWLINE:' DE.AD.BE strict'  <== mode:M_COMMENT",
            "            NEWLINE:'\\n'  <== mode:M_COMMENT)))))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_load_balance",
            "        LOAD_BALANCE:'load-balance'",
            "        (clb_null",
            "          METHOD_UTILIZATION:'method-utilization'",
            "          (null_rest_of_line",
            "            VARIABLE:'min-threshold'",
            "            DEC:'12345'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_load_balance",
            "        LOAD_BALANCE:'load-balance'",
            "        (clb_null",
            "          MODEM:'modem'",
            "          (null_rest_of_line",
            "            VARIABLE:'max-failures'",
            "            DEC:'12345'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_load_balance",
            "        LOAD_BALANCE:'load-balance'",
            "        (clb_rule",
            "          RULE:'rule'",
            "          rulenum = DEC:'1'",
            "          (null_rest_of_line",
            "            VARIABLE:'disable-throughput-lowerbound'",
            "            VARIABLE:'us'",
            "            DEC:'12345'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_load_balance",
            "        LOAD_BALANCE:'load-balance'",
            "        (clb_rule",
            "          RULE:'rule'",
            "          rulenum = DEC:'2'",
            "          (null_rest_of_line",
            "            VARIABLE:'disable-throughput-lowerbound'",
            "            VARIABLE:'ds'",
            "            DEC:'12345'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_load_balance",
            "        LOAD_BALANCE:'load-balance'",
            "        (clb_rule",
            "          RULE:'rule'",
            "          rulenum = DEC:'3'",
            "          (null_rest_of_line",
            "            VARIABLE:'disabled'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_load_balance",
            "        LOAD_BALANCE:'load-balance'",
            "        (clb_rule",
            "          RULE:'rule'",
            "          rulenum = DEC:'4'",
            "          (null_rest_of_line",
            "            ENABLED:'enabled'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_null",
            "        LOGGING:'logging'",
            "        (null_rest_of_line",
            "          VARIABLE:'badipsource'",
            "          DEC:'12345'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_null",
            "        LOGGING:'logging'",
            "        (null_rest_of_line",
            "          VARIABLE:'downstream-index'",
            "          DEC:'12345'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_null",
            "        LOGGING:'logging'",
            "        (null_rest_of_line",
            "          VARIABLE:'ironbus'",
            "          DEC:'12345'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_null",
            "        LOGGING:'logging'",
            "        (null_rest_of_line",
            "          VARIABLE:'layer2events'",
            "          DEC:'12345'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_null",
            "        LOGGING:'logging'",
            "        (null_rest_of_line",
            "          VARIABLE:'overlapip'",
            "          DEC:'12345'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_null",
            "        METERING:'metering'",
            "        (null_rest_of_line",
            "          DESTINATION:'destination'",
            "          IP_ADDRESS:'1.2.3.4'",
            "          DEC:'12345'",
            "          DEC:'12345'",
            "          DEC:'12345'",
            "          VARIABLE:'non-secure'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_null",
            "        METERING:'metering'",
            "        (null_rest_of_line",
            "          SOURCE_INTERFACE:'source-interface'",
            "          M_Interface_PREFIX:'Loopback'  <== mode:M_Interface",
            "          DEC:'0'  <== mode:M_Interface",
            "          NEWLINE:'\\n'  <== mode:M_Interface))))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_null",
            "        MODEM:'modem'",
            "        (null_rest_of_line",
            "          VARIABLE:'max-cpe'",
            "          VARIABLE:'unlimited'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_null",
            "        MODEM:'modem'",
            "        (null_rest_of_line",
            "          VARIABLE:'v6-max-cpe-prefix'",
            "          DEC:'12345'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_null",
            "        MODEM:'modem'",
            "        (null_rest_of_line",
            "          VARIABLE:'vendor'",
            "          VARIABLE:'DE.AD.BE'",
            "          DOUBLE_QUOTE:'\"'",
            "          VARIABLE:'EF'",
            "          DOUBLE_QUOTE:'\"'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_modulation_profile_single",
            "        MODULATION_PROFILE:'modulation-profile'",
            "        DEC:'555'",
            "        VARIABLE:'a-long'",
            "        DEC:'0'",
            "        DEC:'1'",
            "        DEC:'2'",
            "        DEC:'3'",
            "        VARIABLE:'64qam'",
            "        VARIABLE:'scrambler'",
            "        DEC:'12345'",
            "        VARIABLE:'no-diff'",
            "        DEC:'12345'",
            "        VARIABLE:'shortened'",
            "        VARIABLE:'qpsk1'",
            "        DEC:'12345'",
            "        DEC:'23456'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_modulation_profile_single",
            "        MODULATION_PROFILE:'modulation-profile'",
            "        DEC:'555'",
            "        VARIABLE:'a-short'",
            "        DEC:'0'",
            "        DEC:'1'",
            "        DEC:'2'",
            "        DEC:'3'",
            "        VARIABLE:'64qam'",
            "        VARIABLE:'scrambler'",
            "        DEC:'12345'",
            "        VARIABLE:'no-diff'",
            "        DEC:'12345'",
            "        VARIABLE:'shortened'",
            "        VARIABLE:'qpsk1'",
            "        DEC:'12345'",
            "        DEC:'23456'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_modulation_profile_single",
            "        MODULATION_PROFILE:'modulation-profile'",
            "        DEC:'555'",
            "        VARIABLE:'a-ugs'",
            "        DEC:'0'",
            "        DEC:'1'",
            "        DEC:'2'",
            "        DEC:'3'",
            "        VARIABLE:'64qam'",
            "        VARIABLE:'scrambler'",
            "        DEC:'12345'",
            "        VARIABLE:'no-diff'",
            "        DEC:'12345'",
            "        VARIABLE:'shortened'",
            "        VARIABLE:'qpsk1'",
            "        DEC:'12345'",
            "        DEC:'23456'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_modulation_profile_single",
            "        MODULATION_PROFILE:'modulation-profile'",
            "        DEC:'555'",
            "        VARIABLE:'initial'",
            "        DEC:'0'",
            "        DEC:'1'",
            "        DEC:'2'",
            "        DEC:'3'",
            "        VARIABLE:'16qam'",
            "        VARIABLE:'scrambler'",
            "        DEC:'12345'",
            "        VARIABLE:'no-diff'",
            "        DEC:'12345'",
            "        VARIABLE:'fixed'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_modulation_profile_single",
            "        MODULATION_PROFILE:'modulation-profile'",
            "        DEC:'555'",
            "        VARIABLE:'long'",
            "        DEC:'0'",
            "        DEC:'1'",
            "        DEC:'2'",
            "        DEC:'3'",
            "        VARIABLE:'16qam'",
            "        VARIABLE:'scrambler'",
            "        DEC:'12345'",
            "        VARIABLE:'no-diff'",
            "        DEC:'12345'",
            "        VARIABLE:'shortened'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_modulation_profile_single",
            "        MODULATION_PROFILE:'modulation-profile'",
            "        DEC:'555'",
            "        REQUEST:'request'",
            "        DEC:'0'",
            "        DEC:'1'",
            "        DEC:'2'",
            "        DEC:'3'",
            "        VARIABLE:'16qam'",
            "        VARIABLE:'scrambler'",
            "        DEC:'12345'",
            "        VARIABLE:'no-diff'",
            "        DEC:'12345'",
            "        VARIABLE:'fixed'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_modulation_profile_single",
            "        MODULATION_PROFILE:'modulation-profile'",
            "        DEC:'555'",
            "        VARIABLE:'short'",
            "        DEC:'0'",
            "        DEC:'1'",
            "        DEC:'2'",
            "        DEC:'3'",
            "        VARIABLE:'16qam'",
            "        VARIABLE:'scrambler'",
            "        DEC:'12345'",
            "        VARIABLE:'no-diff'",
            "        DEC:'12345'",
            "        VARIABLE:'shortened'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_modulation_profile_single",
            "        MODULATION_PROFILE:'modulation-profile'",
            "        DEC:'555'",
            "        VARIABLE:'station'",
            "        DEC:'0'",
            "        DEC:'1'",
            "        DEC:'2'",
            "        DEC:'3'",
            "        VARIABLE:'16qam'",
            "        VARIABLE:'scrambler'",
            "        DEC:'12345'",
            "        VARIABLE:'no-diff'",
            "        DEC:'12345'",
            "        VARIABLE:'fixed'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_null",
            "        MULTICAST:'multicast'",
            "        (null_rest_of_line",
            "          VARIABLE:'mdf-disable'",
            "          VARIABLE:'WB-Incapable-CM'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_null",
            "        PRE_EQUALIZATION:'pre-equalization'",
            "        (null_rest_of_line",
            "          EXCLUDE:'exclude'",
            "          OUI:'oui'",
            "          M_COMMENT_NON_NEWLINE:' DE.AD.BE'  <== mode:M_COMMENT",
            "          NEWLINE:'\\n'  <== mode:M_COMMENT))))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_qos",
            "        QOS:'qos'",
            "        (cq_enforce_rule",
            "          ENFORCE_RULE:'enforce-rule'",
            "          name = (variable",
            "            VARIABLE:'fooble')",
            "          NEWLINE:'\\n'",
            "          (cqer_null",
            "            DURATION:'duration'",
            "            (null_rest_of_line",
            "              DEC:'12345'",
            "              VARIABLE:'avg-rate'",
            "              DEC:'12345'",
            "              VARIABLE:'sample-interval'",
            "              DEC:'12345'",
            "              DO:'do'",
            "              VARIABLE:'enf'",
            "              NEWLINE:'\\n'))",
            "          (cqer_null",
            "            ENABLED:'enabled'",
            "            (null_rest_of_line",
            "              NEWLINE:'\\n'))",
            "          (cqer_null",
            "            MONITORING_BASICS:'monitoring-basics'",
            "            (null_rest_of_line",
            "              VARIABLE:'legacy'",
            "              VARIABLE:'docsis11'",
            "              NEWLINE:'\\n'))",
            "          (cqer_null",
            "            PENALTY_PERIOD:'penalty-period'",
            "            (null_rest_of_line",
            "              DEC:'12345'",
            "              NEWLINE:'\\n'))",
            "          (cqer_service_class",
            "            SERVICE_CLASS:'service-class'",
            "            ENFORCED:'enforced'",
            "            name = (variable",
            "              VARIABLE:'barfoo')",
            "            NEWLINE:'\\n')",
            "          (cqer_service_class",
            "            SERVICE_CLASS:'service-class'",
            "            REGISTERED:'registered'",
            "            name = (variable",
            "              VARIABLE:'foobar')",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_cable",
            "      NO:'no'",
            "      CABLE:'cable'",
            "      (c_qos",
            "        QOS:'qos'",
            "        (cq_null",
            "          PERMISSION:'permission'",
            "          (null_rest_of_line",
            "            VARIABLE:'create'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_qos",
            "        QOS:'qos'",
            "        (cq_null",
            "          PERMISSION:'permission'",
            "          (null_rest_of_line",
            "            VARIABLE:'modems'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_cable",
            "      NO:'no'",
            "      CABLE:'cable'",
            "      (c_qos",
            "        QOS:'qos'",
            "        (cq_null",
            "          PERMISSION:'permission'",
            "          (null_rest_of_line",
            "            UPDATE:'update'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_qos",
            "        QOS:'qos'",
            "        (cq_null",
            "          PROFILE:'profile'",
            "          (null_rest_of_line",
            "            DEC:'12345'",
            "            MAX_BURST:'max-burst'",
            "            DEC:'12345'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_qos",
            "        QOS:'qos'",
            "        (cq_null",
            "          PROFILE:'profile'",
            "          (null_rest_of_line",
            "            DEC:'12345'",
            "            VARIABLE:'max-downstream'",
            "            DEC:'12345'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_qos",
            "        QOS:'qos'",
            "        (cq_null",
            "          PROFILE:'profile'",
            "          (null_rest_of_line",
            "            DEC:'12345'",
            "            VARIABLE:'max-ds-burst'",
            "            DEC:'12345'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_qos",
            "        QOS:'qos'",
            "        (cq_null",
            "          PROFILE:'profile'",
            "          (null_rest_of_line",
            "            DEC:'12345'",
            "            VARIABLE:'max-upstream'",
            "            DEC:'12345'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_service",
            "        SERVICE:'service'",
            "        (cs_null",
            "          ATTRIBUTE:'attribute'",
            "          (null_rest_of_line",
            "            VARIABLE:'ds-bonded'",
            "            VARIABLE:'downstream-type'",
            "            VARIABLE:'bonding-enabled'",
            "            VARIABLE:'enforce'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_service",
            "        SERVICE:'service'",
            "        (cs_class",
            "          CLASS:'class'",
            "          num = DEC:'1'",
            "          (csc_null",
            "            DOWNSTREAM:'downstream'",
            "            (null_rest_of_line",
            "              NEWLINE:'\\n'))))))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_service",
            "        SERVICE:'service'",
            "        (cs_class",
            "          CLASS:'class'",
            "          num = DEC:'1'",
            "          (csc_null",
            "            MAX_BURST:'max-burst'",
            "            (null_rest_of_line",
            "              DEC:'12345'",
            "              NEWLINE:'\\n'))))))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_service",
            "        SERVICE:'service'",
            "        (cs_class",
            "          CLASS:'class'",
            "          num = DEC:'1'",
            "          (csc_null",
            "            MAX_CONCAT_BURST:'max-concat-burst'",
            "            (null_rest_of_line",
            "              DEC:'12345'",
            "              NEWLINE:'\\n'))))))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_service",
            "        SERVICE:'service'",
            "        (cs_class",
            "          CLASS:'class'",
            "          num = DEC:'1'",
            "          (csc_null",
            "            MAX_RATE:'max-rate'",
            "            (null_rest_of_line",
            "              DEC:'12345'",
            "              NEWLINE:'\\n'))))))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_service",
            "        SERVICE:'service'",
            "        (cs_class",
            "          CLASS:'class'",
            "          num = DEC:'1'",
            "          (csc_null",
            "            MIN_PACKET_SIZE:'min-packet-size'",
            "            (null_rest_of_line",
            "              DEC:'1234'",
            "              NEWLINE:'\\n'))))))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_service",
            "        SERVICE:'service'",
            "        (cs_class",
            "          CLASS:'class'",
            "          num = DEC:'1'",
            "          (csc_null",
            "            MIN_RATE:'min-rate'",
            "            (null_rest_of_line",
            "              DEC:'12345'",
            "              NEWLINE:'\\n'))))))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_service",
            "        SERVICE:'service'",
            "        (cs_class",
            "          CLASS:'class'",
            "          num = DEC:'1'",
            "          (csc_name",
            "            NAME:'name'",
            "            name = (variable",
            "              VARIABLE:'foobar'  <== mode:M_Name)",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_service",
            "        SERVICE:'service'",
            "        (cs_class",
            "          CLASS:'class'",
            "          num = DEC:'1'",
            "          (csc_null",
            "            PRIORITY:'priority'",
            "            (null_rest_of_line",
            "              DEC:'12345'",
            "              NEWLINE:'\\n'))))))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_service",
            "        SERVICE:'service'",
            "        (cs_class",
            "          CLASS:'class'",
            "          num = DEC:'1'",
            "          (csc_null",
            "            REQ_TRANS_POLICY:'req-trans-policy'",
            "            (null_rest_of_line",
            "              DEC:'123'",
            "              NEWLINE:'\\n'))))))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_service",
            "        SERVICE:'service'",
            "        (cs_class",
            "          CLASS:'class'",
            "          num = DEC:'1'",
            "          (csc_null",
            "            SCHED_TYPE:'sched-type'",
            "            (null_rest_of_line",
            "              DEC:'12345'",
            "              NEWLINE:'\\n'))))))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_service",
            "        SERVICE:'service'",
            "        (cs_class",
            "          CLASS:'class'",
            "          num = DEC:'1'",
            "          (csc_null",
            "            TOS_OVERWRITE:'tos-overwrite'",
            "            (null_rest_of_line",
            "              DEC:'12345'",
            "              DEC:'12345'",
            "              NEWLINE:'\\n'))))))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_service",
            "        SERVICE:'service'",
            "        (cs_class",
            "          CLASS:'class'",
            "          num = DEC:'1'",
            "          (csc_null",
            "            UPSTREAM:'upstream'",
            "            (null_rest_of_line",
            "              NEWLINE:'\\n'))))))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_service",
            "        SERVICE:'service'",
            "        (cs_null",
            "          FLOW:'flow'",
            "          (null_rest_of_line",
            "            VARIABLE:'activity-timeout'",
            "            DEC:'12345'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_null",
            "        SNMP:'snmp'",
            "        (null_rest_of_line",
            "          VARIABLE:'iftype'",
            "          VARIABLE:'ds-phy'",
            "          DEC:'1'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_tag",
            "        TAG:'tag'",
            "        num = DEC:'1'",
            "        NEWLINE:'\\n'",
            "        (ct_null",
            "          DOCSIS_VERSION:'docsis-version'",
            "          (null_rest_of_line",
            "            VARIABLE:'docsis10'",
            "            NEWLINE:'\\n'))",
            "        (ct_name",
            "          NAME:'name'",
            "          name = (variable",
            "            VARIABLE:'d10'  <== mode:M_Name)",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_tag",
            "        TAG:'tag'",
            "        num = DEC:'2'",
            "        NEWLINE:'\\n'",
            "        (ct_null",
            "          DOCSIS_VERSION:'docsis-version'",
            "          (null_rest_of_line",
            "            VARIABLE:'docsis11'",
            "            NEWLINE:'\\n'))",
            "        (ct_name",
            "          NAME:'name'",
            "          name = (variable",
            "            VARIABLE:'d11'  <== mode:M_Name)",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_tag",
            "        TAG:'tag'",
            "        num = DEC:'3'",
            "        NEWLINE:'\\n'",
            "        (ct_null",
            "          DOCSIS_VERSION:'docsis-version'",
            "          (null_rest_of_line",
            "            VARIABLE:'docsis20'",
            "            NEWLINE:'\\n'))",
            "        (ct_null",
            "          EXCLUDE:'exclude'",
            "          (null_rest_of_line",
            "            OUI:'oui'",
            "            M_COMMENT_NON_NEWLINE:' fe.dc.ba'  <== mode:M_COMMENT",
            "            NEWLINE:'\\n'  <== mode:M_COMMENT))",
            "        (ct_name",
            "          NAME:'name'",
            "          name = (variable",
            "            VARIABLE:'d20'  <== mode:M_Name)",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_tag",
            "        TAG:'tag'",
            "        num = DEC:'4'",
            "        NEWLINE:'\\n'",
            "        (ct_null",
            "          DOCSIS_VERSION:'docsis-version'",
            "          (null_rest_of_line",
            "            VARIABLE:'docsis30'",
            "            NEWLINE:'\\n'))",
            "        (ct_name",
            "          NAME:'name'",
            "          name = (variable",
            "            VARIABLE:'d30'  <== mode:M_Name)",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_null",
            "        UTIL_INTERVAL:'util-interval'",
            "        (null_rest_of_line",
            "          DEC:'12345'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_cable",
            "      CABLE:'cable'",
            "      (c_null",
            "        WIDEBAND:'wideband'",
            "        (null_rest_of_line",
            "          VARIABLE:'auto-reset'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_controller",
            "      CONTROLLER:'controller'",
            "      iname = (interface_name",
            "        name_prefix_alpha = M_Interface_PREFIX:'Modular-Cable'  <== mode:M_Interface",
            "        DEC:'1'  <== mode:M_Interface",
            "        FORWARD_SLASH:'/'  <== mode:M_Interface",
            "        DEC:'2'  <== mode:M_Interface",
            "        FORWARD_SLASH:'/'  <== mode:M_Interface",
            "        (range",
            "          (subrange",
            "            low = DEC:'3'  <== mode:M_Interface)))",
            "      NEWLINE:'\\n'  <== mode:M_Interface",
            "      (cntlr_rf_channel",
            "        RF_CHANNEL:'rf-channel'",
            "        channel = DEC:'0'",
            "        (cntrlrrfc_null",
            "          CABLE:'cable'",
            "          (null_rest_of_line",
            "            DOWNSTREAM:'downstream'",
            "            VARIABLE:'channel-id'",
            "            DEC:'1'",
            "            NEWLINE:'\\n')))",
            "      (cntlr_rf_channel",
            "        RF_CHANNEL:'rf-channel'",
            "        channel = DEC:'0'",
            "        (cntlrrfc_depi_tunnel",
            "          DEPI_TUNNEL:'depi-tunnel'",
            "          name = (variable",
            "            VARIABLE:'depitun0')",
            "          TSID:'tsid'",
            "          tsid = DEC:'1234'",
            "          NEWLINE:'\\n'))",
            "      (cntlr_rf_channel",
            "        RF_CHANNEL:'rf-channel'",
            "        channel = DEC:'0'",
            "        (cntrlrrfc_null",
            "          FREQUENCY:'frequency'",
            "          (null_rest_of_line",
            "            DEC:'123456789'",
            "            VARIABLE:'annex'",
            "            VARIABLE:'B'",
            "            VARIABLE:'modulation'",
            "            VARIABLE:'256qam'",
            "            VARIABLE:'interleave'",
            "            DEC:'32'",
            "            NEWLINE:'\\n')))",
            "      (cntlr_rf_channel",
            "        RF_CHANNEL:'rf-channel'",
            "        channel = DEC:'0'",
            "        (cntrlrrfc_null",
            "          NETWORK_DELAY:'network-delay'",
            "          (null_rest_of_line",
            "            AUTO:'auto'",
            "            NEWLINE:'\\n')))",
            "      (cntlr_rf_channel",
            "        RF_CHANNEL:'rf-channel'",
            "        channel = DEC:'0'",
            "        (cntrlrrfc_null",
            "          RF_POWER:'rf-power'",
            "          (null_rest_of_line",
            "            FLOAT:'12.3'",
            "            NEWLINE:'\\n')))",
            "      (cntlr_rf_channel",
            "        NO:'no'",
            "        RF_CHANNEL:'rf-channel'",
            "        channel = DEC:'0'",
            "        (cntrlrrfc_null",
            "          RF_SHUTDOWN:'rf-shutdown'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        DEPI:'depi'",
            "        VARIABLE:'cin-failover'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_depi_class",
            "      DEPI_CLASS:'depi-class'",
            "      name = (variable",
            "        VARIABLE:'depiclass1')",
            "      NEWLINE:'\\n'",
            "      (dc_null",
            "        MODE:'mode'",
            "        (null_rest_of_line",
            "          VARIABLE:'mpt'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_depi_tunnel",
            "      DEPI_TUNNEL:'depi-tunnel'",
            "      name = (variable",
            "        VARIABLE:'foo1')",
            "      NEWLINE:'\\n'",
            "      (dt_null",
            "        DEST_IP:'dest-ip'",
            "        (null_rest_of_line",
            "          IP_ADDRESS:'1.2.3.4'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_depi_tunnel",
            "      DEPI_TUNNEL:'depi-tunnel'",
            "      name = (variable",
            "        VARIABLE:'bar1')",
            "      NEWLINE:'\\n'",
            "      (dt_depi_class",
            "        DEPI_CLASS:'depi-class'",
            "        name = (variable",
            "          VARIABLE:'depiclass1')",
            "        NEWLINE:'\\n')",
            "      (dt_null",
            "        DEST_IP:'dest-ip'",
            "        (null_rest_of_line",
            "          IP_ADDRESS:'1.2.3.5'",
            "          NEWLINE:'\\n'))",
            "      (dt_l2tp_class",
            "        L2TP_CLASS:'l2tp-class'",
            "        name = (variable",
            "          VARIABLE:'l2tpclass1')",
            "        NEWLINE:'\\n')",
            "      (dt_protect_tunnel",
            "        PROTECT_TUNNEL:'protect-tunnel'",
            "        name = (variable",
            "          VARIABLE:'foo1')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_interface",
            "      INTERFACE:'interface'",
            "      iname = (interface_name",
            "        name_prefix_alpha = M_Interface_PREFIX:'Cable'  <== mode:M_Interface",
            "        DEC:'1'  <== mode:M_Interface",
            "        FORWARD_SLASH:'/'  <== mode:M_Interface",
            "        DEC:'2'  <== mode:M_Interface",
            "        FORWARD_SLASH:'/'  <== mode:M_Interface",
            "        (range",
            "          (subrange",
            "            low = DEC:'3'  <== mode:M_Interface)))",
            "      NEWLINE:'\\n'  <== mode:M_Interface",
            "      (if_inner",
            "        (if_null_block",
            "          CABLE:'cable'",
            "          BUNDLE:'bundle'",
            "          DEC:'1'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          CABLE:'cable'",
            "          VARIABLE:'default-phy-burst'",
            "          DEC:'0'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          CABLE:'cable'",
            "          DOWNSTREAM:'downstream'",
            "          DSG:'dsg'",
            "          TIMER:'timer'",
            "          DEC:'1'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          CABLE:'cable'",
            "          DOWNSTREAM:'downstream'",
            "          DSG:'dsg'",
            "          VARIABLE:'tg'",
            "          DEC:'1234'",
            "          CHANNEL:'channel'",
            "          DEC:'1234'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          CABLE:'cable'",
            "          VARIABLE:'enable-trap'",
            "          VARIABLE:'cmonoff-notification'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          CABLE:'cable'",
            "          VARIABLE:'ip-init'",
            "          VARIABLE:'apm'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          NO:'no'",
            "          CABLE:'cable'",
            "          VARIABLE:'mtc-mode'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          NO:'no'",
            "          CABLE:'cable'",
            "          VARIABLE:'packet-cache'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          CABLE:'cable'",
            "          PRIVACY:'privacy'",
            "          VARIABLE:'mandatory'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          CABLE:'cable'",
            "          SHARED_SECONDARY_SECRET:'shared-secondary-secret'",
            "          INDEX:'index'",
            "          DEC:'1'",
            "          DEC:'7'",
            "          VARIABLE:'FEDCBA'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          CABLE:'cable'",
            "          SHARED_SECRET:'shared-secret'",
            "          DEC:'7'",
            "          VARIABLE:'ABCDEF'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          CABLE:'cable'",
            "          VARIABLE:'tftp-enforce'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          CABLE:'cable'",
            "          UPSTREAM:'upstream'",
            "          VARIABLE:'max-ports'",
            "          DEC:'6'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          CABLE:'cable'",
            "          UPSTREAM:'upstream'",
            "          DEC:'0'",
            "          VARIABLE:'attribute-mask'",
            "          DEC:'12345678'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          CABLE:'cable'",
            "          UPSTREAM:'upstream'",
            "          DEC:'0'",
            "          VARIABLE:'channel-width'",
            "          DEC:'1234567'",
            "          DEC:'1234567'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          CABLE:'cable'",
            "          UPSTREAM:'upstream'",
            "          DEC:'0'",
            "          VARIABLE:'connector'",
            "          DEC:'0'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          CABLE:'cable'",
            "          UPSTREAM:'upstream'",
            "          DEC:'0'",
            "          DESCRIPTION:'description'",
            "          RAW_TEXT:' bippety boppety'  <== mode:M_Description",
            "          NEWLINE:'\\n'  <== mode:M_Description))",
            "      (if_inner",
            "        (if_null_block",
            "          CABLE:'cable'",
            "          UPSTREAM:'upstream'",
            "          DEC:'0'",
            "          VARIABLE:'docsis-mode'",
            "          VARIABLE:'atdma'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          CABLE:'cable'",
            "          UPSTREAM:'upstream'",
            "          DEC:'0'",
            "          VARIABLE:'docsis-mode'",
            "          VARIABLE:'tdma'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          CABLE:'cable'",
            "          UPSTREAM:'upstream'",
            "          DEC:'0'",
            "          VARIABLE:'equalization-coefficient'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          CABLE:'cable'",
            "          UPSTREAM:'upstream'",
            "          DEC:'0'",
            "          FREQUENCY:'frequency'",
            "          DEC:'12345678'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          CABLE:'cable'",
            "          UPSTREAM:'upstream'",
            "          DEC:'0'",
            "          VARIABLE:'minislot-size'",
            "          DEC:'123'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          CABLE:'cable'",
            "          UPSTREAM:'upstream'",
            "          DEC:'0'",
            "          MODULATION_PROFILE:'modulation-profile'",
            "          DEC:'123'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          CABLE:'cable'",
            "          UPSTREAM:'upstream'",
            "          DEC:'0'",
            "          VARIABLE:'power-adjust'",
            "          CONTINUE:'continue'",
            "          DEC:'123'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          CABLE:'cable'",
            "          UPSTREAM:'upstream'",
            "          DEC:'0'",
            "          VARIABLE:'range-backoff'",
            "          DEC:'123'",
            "          DEC:'456'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          CABLE:'cable'",
            "          UPSTREAM:'upstream'",
            "          DEC:'0'",
            "          SHUTDOWN:'shutdown'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          DOWNSTREAM:'downstream'",
            "          VARIABLE:'Modular-Cable'",
            "          DEC:'1'",
            "          FORWARD_SLASH:'/'",
            "          DEC:'2'",
            "          FORWARD_SLASH:'/'",
            "          DEC:'3'",
            "          RF_CHANNEL:'rf-channel'",
            "          DEC:'0'",
            "          DASH:'-'",
            "          DEC:'3'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          NO:'no'",
            "          KEEPALIVE:'keepalive'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        PACKETCABLE:'packetcable'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        PACKETCABLE:'packetcable'",
            "        AUTHORIZE:'authorize'",
            "        VARIABLE:'vanilla-docsis-mta'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        PACKETCABLE:'packetcable'",
            "        VARIABLE:'multimedia'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_controller",
            "      CONTROLLER:'controller'",
            "      iname = (interface_name",
            "        name_prefix_alpha = M_Interface_PREFIX:'T1'  <== mode:M_Interface",
            "        DEC:'1'  <== mode:M_Interface",
            "        FORWARD_SLASH:'/'  <== mode:M_Interface",
            "        DEC:'2'  <== mode:M_Interface",
            "        FORWARD_SLASH:'/'  <== mode:M_Interface",
            "        (range",
            "          (subrange",
            "            low = DEC:'3'  <== mode:M_Interface)))",
            "      NEWLINE:'\\n'  <== mode:M_Interface",
            "      (cntlr_null",
            "        FDL:'fdl'",
            "        (null_rest_of_line",
            "          VARIABLE:'att'",
            "          NEWLINE:'\\n'))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/cisco_callhome" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'cisco_callhome'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_callhome",
            "      CALLHOME:'callhome'",
            "      NEWLINE:'\\n'",
            "      (callhome_null",
            "        DATA_PRIVACY:'data-privacy'",
            "        (null_rest_of_line",
            "          LEVEL:'level'",
            "          VARIABLE:'normal'",
            "          NEWLINE:'\\n'))",
            "      (callhome_destination_profile",
            "        DESTINATION_PROFILE:'destination-profile'",
            "        name = (variable",
            "          VARIABLE:'p')",
            "        NEWLINE:'\\n')",
            "      (callhome_destination_profile",
            "        DESTINATION_PROFILE:'destination-profile'",
            "        name = (variable",
            "          VARIABLE:'p')",
            "        (callhome_destination_profile_alert_group",
            "          ALERT_GROUP:'alert-group'",
            "          (variable",
            "            ALL:'all')",
            "          NEWLINE:'\\n'))",
            "      (callhome_destination_profile",
            "        DESTINATION_PROFILE:'destination-profile'",
            "        name = (variable",
            "          VARIABLE:'p')",
            "        (callhome_destination_profile_email_addr",
            "          EMAIL_ADDR:'email-addr'",
            "          (variable",
            "            RAW_TEXT:' fake2@example.com'  <== mode:M_Description)",
            "          NEWLINE:'\\n'  <== mode:M_Description))",
            "      (callhome_destination_profile",
            "        DESTINATION_PROFILE:'destination-profile'",
            "        name = (variable",
            "          VARIABLE:'p')",
            "        (callhome_destination_profile_format",
            "          FORMAT:'format'",
            "          SHORT_TXT:'short-txt'",
            "          NEWLINE:'\\n'))",
            "      (callhome_destination_profile",
            "        DESTINATION_PROFILE:'destination-profile'",
            "        name = (variable",
            "          VARIABLE:'p')",
            "        (callhome_destination_profile_format",
            "          FORMAT:'format'",
            "          XML:'XML'",
            "          NEWLINE:'\\n'))",
            "      (callhome_destination_profile",
            "        DESTINATION_PROFILE:'destination-profile'",
            "        name = (variable",
            "          VARIABLE:'p')",
            "        (callhome_destination_profile_message_level",
            "          MESSAGE_LEVEL:'message-level'",
            "          DEC:'3'",
            "          NEWLINE:'\\n'))",
            "      (callhome_destination_profile",
            "        DESTINATION_PROFILE:'destination-profile'",
            "        name = (variable",
            "          VARIABLE:'p')",
            "        (callhome_destination_profile_message_size",
            "          MESSAGE_SIZE:'message-size'",
            "          DEC:'5000000'",
            "          NEWLINE:'\\n'))",
            "      (callhome_destination_profile",
            "        DESTINATION_PROFILE:'destination-profile'",
            "        name = (variable",
            "          VARIABLE:'p')",
            "        (callhome_destination_profile_transport_method",
            "          TRANSPORT_METHOD:'transport-method'",
            "          (variable",
            "            EMAIL:'email')",
            "          NEWLINE:'\\n'))",
            "      (callhome_null",
            "        NO:'no'",
            "        DESTINATION_PROFILE:'destination-profile'",
            "        (null_rest_of_line",
            "          VARIABLE:'p'",
            "          TRANSPORT_METHOD:'transport-method'",
            "          HTTP:'http'",
            "          NEWLINE:'\\n'))",
            "      (callhome_diagnostic_signature",
            "        DIAGNOSTIC_SIGNATURE:'diagnostic-signature'",
            "        NEWLINE:'\\n'",
            "        (callhome_diagnostic_signature_null",
            "          ACTIVE:'active'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n'))",
            "        (callhome_diagnostic_signature_null",
            "          PROFILE:'profile'",
            "          (null_rest_of_line",
            "            VARIABLE:'foobar'",
            "            NEWLINE:'\\n')))",
            "      (callhome_null",
            "        DUPLICATE_MESSAGE:'duplicate-message'",
            "        (null_rest_of_line",
            "          VARIABLE:'throttle'",
            "          NEWLINE:'\\n'))",
            "      (callhome_email_contact",
            "        EMAIL_CONTACT:'email-contact'",
            "        (variable",
            "          RAW_TEXT:' fake@example.com'  <== mode:M_Description)",
            "        NEWLINE:'\\n'  <== mode:M_Description)",
            "      (callhome_enable",
            "        ENABLE:'enable'",
            "        NEWLINE:'\\n')",
            "      (callhome_null",
            "        NO:'no'",
            "        ENABLE:'enable'",
            "        (null_rest_of_line",
            "          NEWLINE:'\\n'))",
            "      (callhome_null",
            "        PERIODIC_INVENTORY:'periodic-inventory'",
            "        (null_rest_of_line",
            "          NOTIFICATION:'notification'",
            "          NEWLINE:'\\n'))",
            "      (callhome_null",
            "        PERIODIC_INVENTORY:'periodic-inventory'",
            "        (null_rest_of_line",
            "          NOTIFICATION:'notification'",
            "          INTERVAL:'interval'",
            "          DEC:'7'",
            "          NEWLINE:'\\n'))",
            "      (callhome_null",
            "        PERIODIC_INVENTORY:'periodic-inventory'",
            "        (null_rest_of_line",
            "          NOTIFICATION:'notification'",
            "          VARIABLE:'timeofday'",
            "          DEC:'08'",
            "          COLON:':'",
            "          DEC:'00'",
            "          NEWLINE:'\\n'))",
            "      (callhome_phone_contact",
            "        PHONE_CONTACT:'phone-contact'",
            "        (variable",
            "          RAW_TEXT:' +1-555-555-5555'  <== mode:M_Description)",
            "        NEWLINE:'\\n'  <== mode:M_Description)",
            "      (callhome_streetaddress",
            "        STREETADDRESS:'streetaddress'",
            "        (variable",
            "          RAW_TEXT:' 555 Fake St, Fakeville'  <== mode:M_Description)",
            "        NEWLINE:'\\n'  <== mode:M_Description)",
            "      (callhome_switch_priority",
            "        SWITCH_PRIORITY:'switch-priority'",
            "        DEC:'7'",
            "        NEWLINE:'\\n')",
            "      (callhome_transport",
            "        TRANSPORT:'transport'",
            "        (callhome_transport_email",
            "          EMAIL:'email'",
            "          (callhome_transport_email_smtp_server",
            "            SMTP_SERVER:'smtp-server'",
            "            IP_ADDRESS:'1.2.3.4'",
            "            PORT:'port'",
            "            p = DEC:'25'",
            "            USE_VRF:'use-vrf'",
            "            vrf = (variable",
            "              MANAGEMENT:'management')",
            "            NEWLINE:'\\n')))",
            "      (callhome_transport",
            "        TRANSPORT:'transport'",
            "        (callhome_transport_email",
            "          EMAIL:'email'",
            "          (callhome_transport_email_from",
            "            FROM:'from'",
            "            (variable",
            "              VARIABLE:'FAKE4@EXAMPLE.COM')",
            "            NEWLINE:'\\n')))",
            "      (callhome_transport",
            "        TRANSPORT:'transport'",
            "        (callhome_transport_email",
            "          EMAIL:'email'",
            "          (callhome_transport_email_reply_to",
            "            REPLY_TO:'reply-to'",
            "            (variable",
            "              VARIABLE:'fake5@example.com')",
            "            NEWLINE:'\\n')))",
            "      (callhome_null",
            "        NO:'no'",
            "        TRANSPORT:'transport'",
            "        HTTP:'http'",
            "        (null_rest_of_line",
            "          VARIABLE:'proxy'",
            "          ENABLE:'enable'",
            "          NEWLINE:'\\n'))",
            "      (callhome_null",
            "        TRANSPORT:'transport'",
            "        HTTP:'http'",
            "        (null_rest_of_line",
            "          USE_VRF:'use-vrf'",
            "          DEFAULT:'default'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_call_home",
            "      NO:'no'",
            "      CALL_HOME:'call-home'",
            "      (null_rest_of_line",
            "        VARIABLE:'reporting'",
            "        VARIABLE:'anonymous'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_call_home",
            "      CALL_HOME:'call-home'",
            "      (null_rest_of_line",
            "        VARIABLE:'reporting'",
            "        VARIABLE:'anonymous'",
            "        NEWLINE:'\\n')",
            "      (call_home_null",
            "        ALERT_GROUP:'alert-group'",
            "        (null_rest_of_line",
            "          CONFIGURATION:'configuration'",
            "          NEWLINE:'\\n'))",
            "      (call_home_null",
            "        CONTACT:'contact'",
            "        (null_rest_of_line",
            "          VARIABLE:'abcdefg'",
            "          NEWLINE:'\\n'))",
            "      (call_home_null",
            "        CONTACT_EMAIL_ADDR:'contact-email-addr'",
            "        (null_rest_of_line",
            "          VARIABLE:'a@support.ccc'",
            "          NEWLINE:'\\n'))",
            "      (call_home_null",
            "        CONTACT_NAME:'contact-name'",
            "        (null_rest_of_line",
            "          RAW_TEXT:' fewrgbefw'  <== mode:M_Description",
            "          NEWLINE:'\\n'  <== mode:M_Description))",
            "      (call_home_null",
            "        CONTRACT_ID:'contract-id'",
            "        (null_rest_of_line",
            "          DEC:'12345'",
            "          NEWLINE:'\\n'))",
            "      (call_home_null",
            "        CUSTOMER_ID:'customer-id'",
            "        (null_rest_of_line",
            "          DEC:'1235'",
            "          NEWLINE:'\\n'))",
            "      (call_home_null",
            "        MAIL_SERVER:'mail-server'",
            "        (null_rest_of_line",
            "          IP_ADDRESS:'1.2.3.4'",
            "          PRIORITY:'priority'",
            "          DEC:'1'",
            "          NEWLINE:'\\n'))",
            "      (call_home_null",
            "        MAIL_SERVER:'mail-server'",
            "        (null_rest_of_line",
            "          VARIABLE:'a.b.c'",
            "          PRIORITY:'priority'",
            "          DEC:'2'",
            "          NEWLINE:'\\n'))",
            "      (call_home_null",
            "        PHONE_NUMBER:'phone-number'",
            "        (null_rest_of_line",
            "          PLUS:'+'",
            "          DEC:'123455677'",
            "          NEWLINE:'\\n'))",
            "      (call_home_null",
            "        SENDER:'sender'",
            "        (null_rest_of_line",
            "          FROM:'from'",
            "          VARIABLE:'asfad@ggesg.gwf'",
            "          NEWLINE:'\\n'))",
            "      (call_home_null",
            "        SENDER:'sender'",
            "        (null_rest_of_line",
            "          REPLY_TO:'reply-to'",
            "          VARIABLE:'hrteg@hrtg.fewf'",
            "          NEWLINE:'\\n'))",
            "      (call_home_null",
            "        SERVICE:'service'",
            "        (null_rest_of_line",
            "          ACTIVE:'active'",
            "          NEWLINE:'\\n'))",
            "      (call_home_null",
            "        SITE_ID:'site-id'",
            "        (null_rest_of_line",
            "          VARIABLE:'rgtrfff'",
            "          NEWLINE:'\\n'))",
            "      (call_home_null",
            "        SOURCE_INTERFACE:'source-interface'",
            "        (null_rest_of_line",
            "          M_Interface_PREFIX:'Vlan'  <== mode:M_Interface",
            "          DEC:'156'  <== mode:M_Interface",
            "          NEWLINE:'\\n'  <== mode:M_Interface))",
            "      (call_home_null",
            "        SOURCE_IP_ADDRESS:'source-ip-address'",
            "        (null_rest_of_line",
            "          DOUBLE_QUOTE:'\"'",
            "          IP_ADDRESS:'1.2.3.4'",
            "          DOUBLE_QUOTE:'\"'",
            "          NEWLINE:'\\n'))",
            "      (call_home_null",
            "        STREET_ADDRESS:'street-address'",
            "        (null_rest_of_line",
            "          VARIABLE:'A'",
            "          VARIABLE:'B'",
            "          VARIABLE:'C'",
            "          VARIABLE:'D'",
            "          NEWLINE:'\\n'))",
            "      (call_home_profile",
            "        PROFILE:'profile'",
            "        (null_rest_of_line",
            "          DOUBLE_QUOTE:'\"'",
            "          VARIABLE:'mns'",
            "          DOUBLE_QUOTE:'\"'",
            "          NEWLINE:'\\n')",
            "        (call_home_profile_null",
            "          DESTINATION:'destination'",
            "          (null_rest_of_line",
            "            VARIABLE:'preferred-msg-format'",
            "            VARIABLE:'short-text'",
            "            NEWLINE:'\\n'))",
            "        (call_home_profile_null",
            "          DESTINATION:'destination'",
            "          (null_rest_of_line",
            "            ADDRESS:'address'",
            "            EMAIL:'email'",
            "            VARIABLE:'a@b.c'",
            "            NEWLINE:'\\n'))",
            "        (call_home_profile_null",
            "          NO:'no'",
            "          ACTIVE:'active'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n'))",
            "        (call_home_profile_null",
            "          NO:'no'",
            "          DESTINATION:'destination'",
            "          (null_rest_of_line",
            "            TRANSPORT_METHOD:'transport-method'",
            "            HTTP:'http'",
            "            NEWLINE:'\\n'))",
            "        (call_home_profile_null",
            "          SUBSCRIBE_TO_ALERT_GROUP:'subscribe-to-alert-group'",
            "          (null_rest_of_line",
            "            DIAGNOSTIC:'diagnostic'",
            "            SEVERITY:'severity'",
            "            VARIABLE:'minor'",
            "            NEWLINE:'\\n'))",
            "        (call_home_profile_null",
            "          SUBSCRIBE_TO_ALERT_GROUP:'subscribe-to-alert-group'",
            "          (null_rest_of_line",
            "            ENVIRONMENT:'environment'",
            "            SEVERITY:'severity'",
            "            VARIABLE:'minor'",
            "            NEWLINE:'\\n'))",
            "        (call_home_profile_null",
            "          SUBSCRIBE_TO_ALERT_GROUP:'subscribe-to-alert-group'",
            "          (null_rest_of_line",
            "            SYSLOG:'syslog'",
            "            SEVERITY:'severity'",
            "            VARIABLE:'minor'",
            "            VARIABLE:'pattern'",
            "            DOUBLE_QUOTE:'\"'",
            "            PERIOD:'.'",
            "            ASTERISK:'*'",
            "            DOUBLE_QUOTE:'\"'",
            "            CALL_HOME:'call-home'",
            "            NEWLINE:'\\n')))",
            "      (call_home_profile",
            "        PROFILE:'profile'",
            "        (null_rest_of_line",
            "          VARIABLE:'ppppppp'",
            "          NEWLINE:'\\n')",
            "        (call_home_profile_null",
            "          DESTINATION:'destination'",
            "          (null_rest_of_line",
            "            ADDRESS:'address'",
            "            HTTP:'http'",
            "            HTTPS:'https'",
            "            COLON:':'",
            "            VARIABLE:'//a.b.c/d'",
            "            NEWLINE:'\\n'))",
            "        (call_home_profile_null",
            "          DESTINATION:'destination'",
            "          (null_rest_of_line",
            "            ADDRESS:'address'",
            "            EMAIL:'email'",
            "            VARIABLE:'callhome@cisco.com'",
            "            NEWLINE:'\\n'))",
            "        (call_home_profile_null",
            "          DESTINATION:'destination'",
            "          (null_rest_of_line",
            "            TRANSPORT_METHOD:'transport-method'",
            "            HTTP:'http'",
            "            NEWLINE:'\\n'))",
            "        (call_home_profile_null",
            "          SUBSCRIBE_TO_ALERT_GROUP:'subscribe-to-alert-group'",
            "          (null_rest_of_line",
            "            DIAGNOSTIC:'diagnostic'",
            "            NEWLINE:'\\n'))",
            "        (call_home_profile_null",
            "          SUBSCRIBE_TO_ALERT_GROUP:'subscribe-to-alert-group'",
            "          (null_rest_of_line",
            "            ENVIRONMENT:'environment'",
            "            NEWLINE:'\\n'))",
            "        (call_home_profile_null",
            "          SUBSCRIBE_TO_ALERT_GROUP:'subscribe-to-alert-group'",
            "          (null_rest_of_line",
            "            VARIABLE:'inventory'",
            "            PERIODIC:'periodic'",
            "            VARIABLE:'monthly'",
            "            DEC:'27'",
            "            NEWLINE:'\\n'))",
            "        (call_home_profile_null",
            "          SUBSCRIBE_TO_ALERT_GROUP:'subscribe-to-alert-group'",
            "          (null_rest_of_line",
            "            CONFIGURATION:'configuration'",
            "            PERIODIC:'periodic'",
            "            VARIABLE:'monthly'",
            "            DEC:'27'",
            "            NEWLINE:'\\n'))",
            "        (call_home_profile_null",
            "          SUBSCRIBE_TO_ALERT_GROUP:'subscribe-to-alert-group'",
            "          (null_rest_of_line",
            "            VARIABLE:'telemetry'",
            "            PERIODIC:'periodic'",
            "            VARIABLE:'daily'",
            "            NEWLINE:'\\n')))",
            "      (call_home_null",
            "        VRF:'vrf'",
            "        (null_rest_of_line",
            "          DEFAULT:'default'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_ntp",
            "      NTP:'ntp'",
            "      (ntp_common",
            "        (ntp_distribute",
            "          DISTRIBUTE:'distribute'",
            "          NEWLINE:'\\n'))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/cisco_control_plane" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'cisco_control_plane'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_control_plane",
            "      CONTROL_PLANE:'control-plane'",
            "      NEWLINE:'\\n'",
            "      (s_control_plane_tail",
            "        (cp_service_policy",
            "          SERVICE_POLICY:'service-policy'",
            "          INPUT:'input'",
            "          name = (variable",
            "            VARIABLE:'copp-policy')",
            "          NEWLINE:'\\n'))",
            "      (s_control_plane_tail",
            "        (cp_service_policy",
            "          SERVICE_POLICY:'service-policy'",
            "          OUTPUT:'output'",
            "          name = (variable",
            "            VARIABLE:'copp-policy-out')",
            "          NEWLINE:'\\n'))",
            "      (s_control_plane_tail",
            "        (cp_null",
            "          SCALE_FACTOR:'scale-factor'",
            "          (null_rest_of_line",
            "            FLOAT:'1.00'",
            "            MODULE:'module'",
            "            DEC:'1'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_control_plane",
            "      CONTROL_PLANE:'control-plane'",
            "      SLOT:'slot'",
            "      DEC:'1'",
            "      NEWLINE:'\\n'))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/cisco_controller" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'cisco_controller'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_controller",
            "      CONTROLLER:'controller'",
            "      iname = (interface_name",
            "        name_prefix_alpha = M_Interface_PREFIX:'E1'  <== mode:M_Interface",
            "        DEC:'0'  <== mode:M_Interface",
            "        FORWARD_SLASH:'/'  <== mode:M_Interface",
            "        DEC:'0'  <== mode:M_Interface",
            "        FORWARD_SLASH:'/'  <== mode:M_Interface",
            "        (range",
            "          (subrange",
            "            low = DEC:'0'  <== mode:M_Interface)))",
            "      NEWLINE:'\\n'  <== mode:M_Interface",
            "      (cntlr_null",
            "        DESCRIPTION:'description'",
            "        (null_rest_of_line",
            "          RAW_TEXT:' blah'  <== mode:M_Description",
            "          NEWLINE:'\\n'  <== mode:M_Description))",
            "      (cntlr_null",
            "        FRAMING:'framing'",
            "        (null_rest_of_line",
            "          VARIABLE:'no-crc4'",
            "          NEWLINE:'\\n'))",
            "      (cntlr_null",
            "        LINE_TERMINATION:'line-termination'",
            "        (null_rest_of_line",
            "          VARIABLE:'75-ohm'",
            "          NEWLINE:'\\n'))",
            "      (cntlr_null",
            "        PRI_GROUP:'pri-group'",
            "        (null_rest_of_line",
            "          VARIABLE:'timeslots'",
            "          DEC:'1'",
            "          DASH:'-'",
            "          DEC:'31'",
            "          NEWLINE:'\\n'))",
            "      (cntlr_null",
            "        SHUTDOWN:'shutdown'",
            "        (null_rest_of_line",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_controller",
            "      CONTROLLER:'controller'",
            "      iname = (interface_name",
            "        name_prefix_alpha = M_Interface_PREFIX:'T1'  <== mode:M_Interface",
            "        DEC:'1'  <== mode:M_Interface",
            "        FORWARD_SLASH:'/'  <== mode:M_Interface",
            "        (range",
            "          (subrange",
            "            low = DEC:'0'  <== mode:M_Interface)))",
            "      NEWLINE:'\\n'  <== mode:M_Interface",
            "      (cntlr_null",
            "        CHANNEL_GROUP:'channel-group'",
            "        (null_rest_of_line",
            "          DEC:'0'",
            "          VARIABLE:'timeslots'",
            "          DEC:'1'",
            "          DASH:'-'",
            "          DEC:'24'",
            "          NEWLINE:'\\n'))",
            "      (cntlr_null",
            "        CLOCK:'clock'",
            "        (null_rest_of_line",
            "          SOURCE:'source'",
            "          INTERNAL:'internal'",
            "          NEWLINE:'\\n'))",
            "      (cntlr_null",
            "        FRAMING:'framing'",
            "        (null_rest_of_line",
            "          VARIABLE:'esf'",
            "          NEWLINE:'\\n'))",
            "      (cntlr_null",
            "        LINECODE:'linecode'",
            "        (null_rest_of_line",
            "          VARIABLE:'b8zs'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_controller",
            "      CONTROLLER:'controller'",
            "      iname = (interface_name",
            "        name_prefix_alpha = M_Interface_PREFIX:'dwdm'  <== mode:M_Interface",
            "        DEC:'0'  <== mode:M_Interface",
            "        FORWARD_SLASH:'/'  <== mode:M_Interface",
            "        DEC:'0'  <== mode:M_Interface",
            "        FORWARD_SLASH:'/'  <== mode:M_Interface",
            "        DEC:'2'  <== mode:M_Interface",
            "        FORWARD_SLASH:'/'  <== mode:M_Interface",
            "        (range",
            "          (subrange",
            "            low = DEC:'3'  <== mode:M_Interface)))",
            "      NEWLINE:'\\n'  <== mode:M_Interface",
            "      (cntlr_null",
            "        ADMIN_STATE:'admin-state'",
            "        (null_rest_of_line",
            "          VARIABLE:'in-service'",
            "          NEWLINE:'\\n'))",
            "      (cntlr_null",
            "        CABLELENGTH:'cablelength'",
            "        (null_rest_of_line",
            "          M_COMMENT_NON_NEWLINE:' long 0db'  <== mode:M_COMMENT",
            "          NEWLINE:'\\n'  <== mode:M_COMMENT))",
            "      (cntlr_null",
            "        DESCRIPTION:'description'",
            "        (null_rest_of_line",
            "          RAW_TEXT:' gjaio'  <== mode:M_Description",
            "          NEWLINE:'\\n'  <== mode:M_Description))",
            "      (cntlr_null",
            "        G709:'g709'",
            "        (null_rest_of_line",
            "          VARIABLE:'fec'",
            "          VARIABLE:'enhanced'",
            "          VARIABLE:'i.7'",
            "          NEWLINE:'\\n'))",
            "      (cntlr_null",
            "        PM:'pm'",
            "        (null_rest_of_line",
            "          VARIABLE:'15-min'",
            "          VARIABLE:'fec'",
            "          VARIABLE:'report'",
            "          VARIABLE:'ec-bits'",
            "          ENABLE:'enable'",
            "          NEWLINE:'\\n'))",
            "      (cntlr_null",
            "        PRI_GROUP:'pri-group'",
            "        (null_rest_of_line",
            "          VARIABLE:'timeslots'",
            "          DEC:'1'",
            "          DASH:'-'",
            "          DEC:'24'",
            "          SERVICE:'service'",
            "          MGCP:'mgcp'",
            "          NEWLINE:'\\n'))",
            "      (cntlr_null",
            "        PROACTIVE:'proactive'",
            "        (null_rest_of_line",
            "          NEWLINE:'\\n'))",
            "      (cntlr_null",
            "        WAVELENGTH:'wavelength'",
            "        (null_rest_of_line",
            "          DEC:'71'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_controller",
            "      CONTROLLER:'controller'",
            "      iname = (interface_name",
            "        name_prefix_alpha = M_Interface_PREFIX:'SONET'  <== mode:M_Interface",
            "        DEC:'5'  <== mode:M_Interface",
            "        FORWARD_SLASH:'/'  <== mode:M_Interface",
            "        (range",
            "          (subrange",
            "            low = DEC:'0'  <== mode:M_Interface)))",
            "      NEWLINE:'\\n'  <== mode:M_Interface",
            "      (cntlr_null",
            "        AIS_SHUT:'ais-shut'",
            "        (null_rest_of_line",
            "          NEWLINE:'\\n'))",
            "      (cntlr_null",
            "        ALARM_REPORT:'alarm-report'",
            "        (null_rest_of_line",
            "          VARIABLE:'lais'",
            "          NEWLINE:'\\n'))",
            "      (cntlr_null",
            "        STS_1:'sts-1'",
            "        (null_rest_of_line",
            "          DEC:'1'",
            "          SERIAL:'serial'",
            "          VARIABLE:'t3'",
            "          NEWLINE:'\\n'))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/cisco_crypto" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'cisco_crypto'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_crypto",
            "      CRYPTO:'crypto'",
            "      (crypto_ca",
            "        CA:'ca'",
            "        (cc_certificate_chain",
            "          CERTIFICATE:'certificate'",
            "          CHAIN:'chain'  <== mode:M_Certificate",
            "          name = (variable",
            "            VARIABLE:'blahblah')",
            "          NEWLINE:'\\n'",
            "          (cccc_certificate",
            "            CERTIFICATE:'certificate'",
            "            SELF_SIGNED:'self-signed'  <== mode:M_Certificate",
            "            (certificate",
            "              HEX_FRAGMENT:'01'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'56789ABC'  <== mode:M_CertificateText)",
            "            QUIT:'quit'  <== mode:M_CertificateText",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_crypto",
            "      CRYPTO:'crypto'",
            "      (crypto_ca",
            "        CA:'ca'",
            "        (cc_certificate_chain",
            "          CERTIFICATE:'certificate'",
            "          CHAIN:'chain'  <== mode:M_Certificate",
            "          name = (variable",
            "            VARIABLE:'bleepblorp')",
            "          NEWLINE:'\\n'",
            "          (cccc_certificate",
            "            CERTIFICATE:'certificate'",
            "            (certificate",
            "              HEX_FRAGMENT:'2345FEDB'  <== mode:M_Certificate",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123EF'  <== mode:M_CertificateText)",
            "            QUIT:'quit'  <== mode:M_CertificateText",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_crypto",
            "      CRYPTO:'crypto'",
            "      (crypto_ca",
            "        CA:'ca'",
            "        (cc_certificate_chain",
            "          CERTIFICATE:'certificate'",
            "          CHAIN:'chain'  <== mode:M_Certificate",
            "          name = (variable",
            "            VARIABLE:'blorpbleep')",
            "          NEWLINE:'\\n'",
            "          (cccc_certificate",
            "            CERTIFICATE:'certificate'",
            "            CA:'ca'  <== mode:M_Certificate",
            "            (certificate",
            "              HEX_FRAGMENT:'0123456789ABCDEF'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText)",
            "            QUIT:'quit'  <== mode:M_CertificateText",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_crypto",
            "      CRYPTO:'crypto'",
            "      (crypto_ca",
            "        CA:'ca'",
            "        (cc_lookup",
            "          LOOKUP:'lookup'",
            "          (null_rest_of_line",
            "            LOCAL:'local'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_crypto",
            "      CRYPTO:'crypto'",
            "      (crypto_ca",
            "        CA:'ca'",
            "        (cc_server",
            "          SERVER:'server'",
            "          NEWLINE:'\\n'",
            "          (ccs_null",
            "            CDP_URL:'cdp-url'",
            "            (null_rest_of_line",
            "              HTTP:'http'",
            "              COLON:':'",
            "              VARIABLE:'//a.b.c/ccc/ddd.crl'",
            "              NEWLINE:'\\n'))",
            "          (ccs_null",
            "            ISSUER_NAME:'issuer-name'",
            "            (null_rest_of_line",
            "              VARIABLE:'CN=a.b.c'",
            "              NEWLINE:'\\n'))",
            "          (ccs_null",
            "            SHUTDOWN:'shutdown'",
            "            (null_rest_of_line",
            "              NEWLINE:'\\n'))",
            "          (ccs_null",
            "            SMTP:'smtp'",
            "            (null_rest_of_line",
            "              VARIABLE:'from-address'",
            "              VARIABLE:'admin@boop.beep'",
            "              NEWLINE:'\\n'))))))",
            "  (stanza",
            "    (s_crypto",
            "      CRYPTO:'crypto'",
            "      (crypto_ca",
            "        CA:'ca'",
            "        (cc_trustpoint",
            "          TRUSTPOINT:'trustpoint'",
            "          name = (variable",
            "            VARIABLE:'abcdefg')",
            "          NEWLINE:'\\n'",
            "          (cctpoint_null",
            "            CRL:'crl'",
            "            (null_rest_of_line",
            "              CONFIGURE:'configure'",
            "              NEWLINE:'\\n'))",
            "          (cctpoint_null",
            "            ENROLLMENT:'enrollment'",
            "            (null_rest_of_line",
            "              SELF:'self'",
            "              NEWLINE:'\\n'))",
            "          (cctpoint_null",
            "            FQDN:'fqdn'",
            "            (null_rest_of_line",
            "              NONE:'none'",
            "              NEWLINE:'\\n'))",
            "          (cctpoint_null",
            "            KEYPAIR:'keypair'",
            "            (null_rest_of_line",
            "              VARIABLE:'grwejuifgnwrouif'",
            "              NEWLINE:'\\n'))",
            "          (cctpoint_null",
            "            SUBJECT_NAME:'subject-name'",
            "            (null_rest_of_line",
            "              VARIABLE:'cn='",
            "              DOUBLE_QUOTE:'\"'",
            "              VARIABLE:'ccccccccc'",
            "              DOUBLE_QUOTE:'\"'",
            "              VARIABLE:';ou='",
            "              DOUBLE_QUOTE:'\"'",
            "              VARIABLE:'aaaaa'",
            "              DOUBLE_QUOTE:'\"'",
            "              VARIABLE:';o='",
            "              DOUBLE_QUOTE:'\"'",
            "              VARIABLE:'bbbbbbb'",
            "              DOUBLE_QUOTE:'\"'",
            "              NEWLINE:'\\n'))",
            "          (cctpoint_null",
            "            NO:'no'",
            "            VALIDATION_USAGE:'validation-usage'",
            "            (null_rest_of_line",
            "              NEWLINE:'\\n'))))))",
            "  (stanza",
            "    (s_crypto",
            "      CRYPTO:'crypto'",
            "      (crypto_ca",
            "        CA:'ca'",
            "        (cc_trustpool",
            "          TRUSTPOOL:'trustpool'",
            "          name = (variable",
            "            POLICY:'policy')",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_crypto",
            "      CRYPTO:'crypto'",
            "      (crypto_csr_params",
            "        CSR_PARAMS:'csr-params'",
            "        name = (variable_permissive",
            "          VARIABLE:'BATFISH')",
            "        NEWLINE:'\\n'",
            "        COUNTRY:'country'",
            "        (null_rest_of_line",
            "          VARIABLE:'US'",
            "          NEWLINE:'\\n')",
            "        STATE:'state'",
            "        (null_rest_of_line",
            "          VARIABLE:'WA'",
            "          NEWLINE:'\\n')",
            "        LOCALITY:'locality'",
            "        (null_rest_of_line",
            "          VARIABLE:'Seattle'",
            "          NEWLINE:'\\n')",
            "        ORGANIZATION_NAME:'organization-name'",
            "        (null_rest_of_line",
            "          VARIABLE:'Batfish'",
            "          NEWLINE:'\\n')",
            "        ORGANIZATION_UNIT:'organization-unit'",
            "        (null_rest_of_line",
            "          VARIABLE:'Network'",
            "          VARIABLE:'Validation'",
            "          NEWLINE:'\\n')",
            "        COMMON_NAME:'common-name'",
            "        (null_rest_of_line",
            "          VARIABLE:'batfish.org'",
            "          NEWLINE:'\\n\\n'))))",
            "  (stanza",
            "    (s_crypto",
            "      CRYPTO:'crypto'",
            "      (crypto_dynamic_map",
            "        DYNAMIC_MAP:'dynamic-map'",
            "        name = (variable",
            "          VARIABLE:'asadynamicmaps')",
            "        seq_num = DEC:'65534'",
            "        (crypto_dynamic_map_null",
            "          SET:'set'",
            "          IKEV1:'ikev1'",
            "          TRANSFORM_SET:'transform-set'",
            "          VARIABLE:'ESP-3DES-MD5-trans'",
            "          VARIABLE:'ESP-3DES-SHA-TRANS'",
            "          VARIABLE:'ESP-3DES-MD5'",
            "          VARIABLE:'ESP-3DES-SHA')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_crypto",
            "      CRYPTO:'crypto'",
            "      (crypto_dynamic_map",
            "        DYNAMIC_MAP:'dynamic-map'",
            "        name = (variable",
            "          VARIABLE:'asadynamicmaps')",
            "        seq_num = DEC:'65535'",
            "        (crypto_dynamic_map_null",
            "          SET:'set'",
            "          PFS:'pfs'",
            "          GROUP1:'group1')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_crypto",
            "      CRYPTO:'crypto'",
            "      (crypto_dynamic_map",
            "        DYNAMIC_MAP:'dynamic-map'",
            "        name = (variable",
            "          VARIABLE:'asadynamicmaps')",
            "        seq_num = DEC:'65535'",
            "        (crypto_dynamic_map_null",
            "          SET:'set'",
            "          IKEV1:'ikev1'",
            "          TRANSFORM_SET:'transform-set'",
            "          VARIABLE:'ESP-3DES-MD5'",
            "          VARIABLE:'ESP-AES-128-SHA'",
            "          VARIABLE:'ESP-AES-128-MD5'",
            "          VARIABLE:'ESP-AES-192-SHA'",
            "          VARIABLE:'ESP-AES-192-MD5'",
            "          VARIABLE:'ESP-AES-256-SHA'",
            "          VARIABLE:'ESP-AES-256-MD5'",
            "          VARIABLE:'ESP-3DES-SHA'",
            "          VARIABLE:'ESP-DES-SHA'",
            "          VARIABLE:'ESP-DES-MD5')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_crypto",
            "      CRYPTO:'crypto'",
            "      (crypto_dynamic_map",
            "        DYNAMIC_MAP:'dynamic-map'",
            "        name = (variable",
            "          VARIABLE:'asadynamicmaps')",
            "        seq_num = DEC:'65535'",
            "        (crypto_dynamic_map_null",
            "          SET:'set'",
            "          SECURITY_ASSOCIATION:'security-association'",
            "          LIFETIME:'lifetime'",
            "          VARIABLE:'seconds'",
            "          DEC:'28800')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_crypto",
            "      CRYPTO:'crypto'",
            "      (crypto_dynamic_map",
            "        DYNAMIC_MAP:'dynamic-map'",
            "        name = (variable",
            "          VARIABLE:'asadynamicmaps')",
            "        seq_num = DEC:'65535'",
            "        (crypto_dynamic_map_null",
            "          SET:'set'",
            "          SECURITY_ASSOCIATION:'security-association'",
            "          LIFETIME:'lifetime'",
            "          VARIABLE:'kilobytes'",
            "          DEC:'4608000')",
            "        NEWLINE:'\\n\\n')))",
            "  (stanza",
            "    (s_crypto",
            "      CRYPTO:'crypto'",
            "      (crypto_dynamic_map",
            "        DYNAMIC_MAP:'dynamic-map'",
            "        name = (variable",
            "          VARIABLE:'mydefaultcryptomap')",
            "        seq_num = DEC:'65534'",
            "        NEWLINE:'\\n'",
            "        (cd_set",
            "          SET:'set'",
            "          (cd_set_transform_set",
            "            TRANSFORM_SET:'transform-set'",
            "            (variable",
            "              VARIABLE:'ESP-3DES-MD5-trans')",
            "            (variable",
            "              VARIABLE:'ESP-3DES-SHA-TRANS')",
            "            (variable",
            "              VARIABLE:'ESP-3DES-MD5')",
            "            (variable",
            "              VARIABLE:'ESP-3DES-SHA')",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_crypto",
            "      CRYPTO:'crypto'",
            "      (crypto_dynamic_map",
            "        DYNAMIC_MAP:'dynamic-map'",
            "        name = (variable",
            "          VARIABLE:'mydefaultcryptomap')",
            "        seq_num = DEC:'65535'",
            "        NEWLINE:'\\n'",
            "        (cd_set",
            "          SET:'set'",
            "          (cd_set_pfs",
            "            PFS:'pfs'",
            "            (dh_group",
            "              GROUP1:'group1')",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_crypto",
            "      CRYPTO:'crypto'",
            "      (crypto_dynamic_map",
            "        DYNAMIC_MAP:'dynamic-map'",
            "        name = (variable",
            "          VARIABLE:'mydefaultcryptomap')",
            "        seq_num = DEC:'65535'",
            "        NEWLINE:'\\n'",
            "        (cd_set",
            "          SET:'set'",
            "          (cd_set_transform_set",
            "            TRANSFORM_SET:'transform-set'",
            "            (variable",
            "              VARIABLE:'ESP-3DES-MD5')",
            "            (variable",
            "              VARIABLE:'ESP-AES-128-SHA')",
            "            (variable",
            "              VARIABLE:'ESP-AES-128-MD5')",
            "            (variable",
            "              VARIABLE:'ESP-AES-192-SHA')",
            "            (variable",
            "              VARIABLE:'ESP-AES-192-MD5')",
            "            (variable",
            "              VARIABLE:'ESP-AES-256-SHA')",
            "            (variable",
            "              VARIABLE:'ESP-AES-256-MD5')",
            "            (variable",
            "              VARIABLE:'ESP-3DES-SHA')",
            "            (variable",
            "              VARIABLE:'ESP-DES-SHA')",
            "            (variable",
            "              VARIABLE:'ESP-DES-MD5')",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_crypto",
            "      CRYPTO:'crypto'",
            "      (crypto_dynamic_map",
            "        DYNAMIC_MAP:'dynamic-map'",
            "        name = (variable",
            "          VARIABLE:'mydefaultcryptomap')",
            "        seq_num = DEC:'65535'",
            "        NEWLINE:'\\n'",
            "        (cd_set",
            "          SET:'set'",
            "          (cd_set_null",
            "            SECURITY_ASSOCIATION:'security-association'",
            "            (null_rest_of_line",
            "              LIFETIME:'lifetime'",
            "              VARIABLE:'seconds'",
            "              DEC:'28800'",
            "              NEWLINE:'\\n'))))))",
            "  (stanza",
            "    (s_crypto",
            "      CRYPTO:'crypto'",
            "      (crypto_dynamic_map",
            "        DYNAMIC_MAP:'dynamic-map'",
            "        name = (variable",
            "          VARIABLE:'mydefaultcryptomap')",
            "        seq_num = DEC:'65535'",
            "        NEWLINE:'\\n'",
            "        (cd_set",
            "          SET:'set'",
            "          (cd_set_null",
            "            SECURITY_ASSOCIATION:'security-association'",
            "            (null_rest_of_line",
            "              LIFETIME:'lifetime'",
            "              VARIABLE:'kilobytes'",
            "              DEC:'4608000'",
            "              NEWLINE:'\\n'))))))",
            "  (stanza",
            "    (s_crypto",
            "      CRYPTO:'crypto'",
            "      (crypto_dynamic_map",
            "        DYNAMIC_MAP:'dynamic-map'",
            "        name = (variable",
            "          VARIABLE:'mydynamicmap')",
            "        seq_num = DEC:'1'",
            "        NEWLINE:'\\n'",
            "        (cd_set",
            "          SET:'set'",
            "          (cd_set_transform_set",
            "            TRANSFORM_SET:'transform-set'",
            "            (variable",
            "              VARIABLE:'ESP-3DES-MD5')",
            "            (variable",
            "              VARIABLE:'ESP-3DES-SHA')",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_crypto",
            "      CRYPTO:'crypto'",
            "      (crypto_engine",
            "        ENGINE:'engine'",
            "        (null_rest_of_line",
            "          VARIABLE:'large-mod-accel'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_crypto",
            "      CRYPTO:'crypto'",
            "      (crypto_ca",
            "        CA:'ca'",
            "        (cc_trustpool",
            "          TRUSTPOOL:'trustpool'",
            "          name = (variable",
            "            POLICY:'policy')",
            "          NEWLINE:'\\n'",
            "          (cctpool_null",
            "            AUTO_IMPORT:'auto-import'",
            "            (null_rest_of_line",
            "              NEWLINE:'\\n'))))))",
            "  (stanza",
            "    (s_crypto",
            "      CRYPTO:'crypto'",
            "      (crypto_ikev1",
            "        IKEV1:'ikev1'",
            "        (ci1_null",
            "          AM_DISABLE:'am-disable'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_crypto",
            "      CRYPTO:'crypto'",
            "      (crypto_ikev1",
            "        IKEV1:'ikev1'",
            "        (ci1_null",
            "          ENABLE:'enable'",
            "          (null_rest_of_line",
            "            OUTSIDE:'outside'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_crypto",
            "      CRYPTO:'crypto'",
            "      (crypto_ikev1",
            "        IKEV1:'ikev1'",
            "        (ci1_null",
            "          ENABLE:'enable'",
            "          (null_rest_of_line",
            "            INSIDE:'inside'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_crypto",
            "      CRYPTO:'crypto'",
            "      (crypto_ikev1",
            "        IKEV1:'ikev1'",
            "        (ci1_null",
            "          IPSEC_OVER_TCP:'ipsec-over-tcp'",
            "          (null_rest_of_line",
            "            PORT:'port'",
            "            DEC:'12345'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_crypto",
            "      CRYPTO:'crypto'",
            "      (crypto_ikev1",
            "        IKEV1:'ikev1'",
            "        (ci1_policy",
            "          POLICY:'policy'",
            "          name = (variable",
            "            DEC:'10')",
            "          NEWLINE:'\\n'",
            "          (ci1p_null",
            "            AUTHENTICATION:'authentication'",
            "            (null_rest_of_line",
            "              PRE_SHARE:'pre-share'  <== mode:M_Authentication",
            "              NEWLINE:'\\n'))",
            "          (ci1p_null",
            "            ENCRYPTION:'encryption'",
            "            (null_rest_of_line",
            "              AES:'aes'",
            "              NEWLINE:'\\n'))",
            "          (ci1p_null",
            "            GROUP:'group'",
            "            (null_rest_of_line",
            "              DEC:'2'",
            "              NEWLINE:'\\n'))",
            "          (ci1p_null",
            "            HASH:'hash'",
            "            (null_rest_of_line",
            "              SHA:'sha'",
            "              NEWLINE:'\\n'))",
            "          (ci1p_null",
            "            LIFETIME:'lifetime'",
            "            (null_rest_of_line",
            "              DEC:'86400'",
            "              NEWLINE:'\\n'))))))",
            "  (stanza",
            "    (s_crypto",
            "      CRYPTO:'crypto'",
            "      (crypto_ikev2",
            "        IKEV2:'ikev2'",
            "        (ci2_null",
            "          ENABLE:'enable'",
            "          (null_rest_of_line",
            "            VARIABLE:'bleep'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_crypto",
            "      CRYPTO:'crypto'",
            "      (crypto_ikev2",
            "        IKEV2:'ikev2'",
            "        (ci2_keyring",
            "          KEYRING:'keyring'",
            "          name = (variable",
            "            VARIABLE:'VPN_KEY')",
            "          NEWLINE:'\\n'",
            "          (ci2k_peer",
            "            PEER:'peer'",
            "            name = (variable",
            "              VARIABLE:'bacdef')",
            "            NEWLINE:'\\n'",
            "            (ci2kp_null",
            "              ADDRESS:'address'",
            "              (null_rest_of_line",
            "                IP_ADDRESS:'1.2.3.4'",
            "                NEWLINE:'\\n'))",
            "            (ci2kp_null",
            "              PRE_SHARED_KEY:'pre-shared-key'",
            "              (null_rest_of_line",
            "                VARIABLE:'somekey'",
            "                NEWLINE:'\\n')))))))",
            "  (stanza",
            "    (s_crypto",
            "      CRYPTO:'crypto'",
            "      (crypto_ikev2",
            "        IKEV2:'ikev2'",
            "        (ci2_policy",
            "          POLICY:'policy'",
            "          name = (variable",
            "            DEC:'10')",
            "          NEWLINE:'\\n'",
            "          (ci2pol_null",
            "            ENCRYPTION:'encryption'",
            "            (null_rest_of_line",
            "              VARIABLE:'aes-256'",
            "              NEWLINE:'\\n'))",
            "          (ci2pol_null",
            "            GROUP:'group'",
            "            (null_rest_of_line",
            "              DEC:'21'",
            "              NEWLINE:'\\n'))",
            "          (ci2pol_null",
            "            INTEGRITY:'integrity'",
            "            (null_rest_of_line",
            "              SHA512:'sha512'",
            "              NEWLINE:'\\n'))",
            "          (ci2pol_null",
            "            LIFETIME:'lifetime'",
            "            (null_rest_of_line",
            "              VARIABLE:'seconds'",
            "              NONE:'none'",
            "              NEWLINE:'\\n'))",
            "          (ci2pol_null",
            "            PRF:'prf'",
            "            (null_rest_of_line",
            "              SHA512:'sha512'",
            "              NEWLINE:'\\n'))",
            "          (ci2pol_null",
            "            PROPOSAL:'proposal'",
            "            (null_rest_of_line",
            "              VARIABLE:'someproposal'",
            "              NEWLINE:'\\n'))))))",
            "  (stanza",
            "    (s_crypto",
            "      CRYPTO:'crypto'",
            "      (crypto_ikev2",
            "        IKEV2:'ikev2'",
            "        (ci2_profile",
            "          PROFILE:'profile'",
            "          name = (variable",
            "            VARIABLE:'myprofile')",
            "          NEWLINE:'\\n'",
            "          (ci2prf_null",
            "            AUTHENTICATION:'authentication'",
            "            (null_rest_of_line",
            "              VARIABLE:'local'  <== mode:M_Authentication",
            "              PRE_SHARE:'pre-share'",
            "              NEWLINE:'\\n'))",
            "          (ci2prf_null",
            "            AUTHENTICATION:'authentication'",
            "            (null_rest_of_line",
            "              VARIABLE:'remote'  <== mode:M_Authentication",
            "              PRE_SHARE:'pre-share'",
            "              NEWLINE:'\\n'))",
            "          (ci2prf_null",
            "            KEYRING:'keyring'",
            "            (null_rest_of_line",
            "              LOCAL:'local'",
            "              VARIABLE:'somekey'",
            "              NEWLINE:'\\n'))",
            "          (ci2prf_null",
            "            MATCH:'match'",
            "            (null_rest_of_line",
            "              ADDRESS:'address'",
            "              LOCAL:'local'",
            "              INTERFACE:'interface'",
            "              M_Interface_PREFIX:'Loopback'  <== mode:M_Interface",
            "              DEC:'8'  <== mode:M_Interface",
            "              NEWLINE:'\\n'  <== mode:M_Interface))",
            "          (ci2prf_null",
            "            MATCH:'match'",
            "            (null_rest_of_line",
            "              IDENTITY:'identity'",
            "              REMOTE:'remote'",
            "              ADDRESS:'address'",
            "              IP_ADDRESS:'1.2.3.4'",
            "              IP_ADDRESS:'255.255.255.255'",
            "              NEWLINE:'\\n'))",
            "          (ci2prf_null",
            "            MATCH:'match'",
            "            (null_rest_of_line",
            "              IDENTITY:'identity'",
            "              REMOTE:'remote'",
            "              ADDRESS:'address'",
            "              IP_ADDRESS:'5.6.7.8'",
            "              IP_ADDRESS:'255.255.255.255'",
            "              NEWLINE:'\\n'))))))",
            "  (stanza",
            "    (s_crypto",
            "      CRYPTO:'crypto'",
            "      (crypto_ikev2",
            "        IKEV2:'ikev2'",
            "        (ci2_proposal",
            "          PROPOSAL:'proposal'",
            "          name = (variable",
            "            VARIABLE:'VPN_PROPOSAL1')",
            "          NEWLINE:'\\n'",
            "          (ci2prp_null",
            "            ENCRYPTION:'encryption'",
            "            (null_rest_of_line",
            "              VARIABLE:'aes-cbc-256'",
            "              VARIABLE:'aes-cbc-192'",
            "              VARIABLE:'aes-cbc-128'",
            "              NEWLINE:'\\n'))",
            "          (ci2prp_null",
            "            GROUP:'group'",
            "            (null_rest_of_line",
            "              DEC:'14'",
            "              NEWLINE:'\\n'))",
            "          (ci2prp_null",
            "            INTEGRITY:'integrity'",
            "            (null_rest_of_line",
            "              SHA512:'sha512'",
            "              VARIABLE:'sha384'",
            "              VARIABLE:'sha256'",
            "              NEWLINE:'\\n'))))))",
            "  (stanza",
            "    (s_crypto",
            "      CRYPTO:'crypto'",
            "      (crypto_ikev2",
            "        IKEV2:'ikev2'",
            "        (ci2_null",
            "          REMOTE_ACCESS:'remote-access'",
            "          (null_rest_of_line",
            "            TRUSTPOINT:'trustpoint'",
            "            VARIABLE:'blahblah'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_crypto",
            "      CRYPTO:'crypto'",
            "      (crypto_ipsec",
            "        IPSEC:'ipsec'",
            "        (cip_null",
            "          DF_BIT:'df-bit'",
            "          (null_rest_of_line",
            "            CLEAR:'clear'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_crypto",
            "      CRYPTO:'crypto'",
            "      (crypto_ipsec",
            "        IPSEC:'ipsec'",
            "        (cip_null",
            "          IKEV1:'ikev1'",
            "          (null_rest_of_line",
            "            TRANSFORM_SET:'transform-set'",
            "            VARIABLE:'ESP-AES-256-MD5'",
            "            VARIABLE:'esp-aes-256'",
            "            ESP_MD5_HMAC:'esp-md5-hmac'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_crypto",
            "      CRYPTO:'crypto'",
            "      (crypto_ipsec",
            "        IPSEC:'ipsec'",
            "        (cip_ikev2",
            "          IKEV2:'ikev2'",
            "          (cipi2_ipsec_proposal",
            "            IPSEC_PROPOSAL:'ipsec-proposal'",
            "            name = (variable_permissive",
            "              VARIABLE:'ffffffffff')",
            "            NEWLINE:'\\n'",
            "            (cipi2ip_null",
            "              PROTOCOL:'protocol'",
            "              (null_rest_of_line",
            "                ESP:'esp'",
            "                ENCRYPTION:'encryption'",
            "                VARIABLE:'aes-256'",
            "                NEWLINE:'\\n'))",
            "            (cipi2ip_null",
            "              PROTOCOL:'protocol'",
            "              (null_rest_of_line",
            "                ESP:'esp'",
            "                INTEGRITY:'integrity'",
            "                VARIABLE:'sha-1'",
            "                NEWLINE:'\\n')))))))",
            "  (stanza",
            "    (s_crypto",
            "      CRYPTO:'crypto'",
            "      (crypto_ipsec",
            "        IPSEC:'ipsec'",
            "        (cip_profile",
            "          PROFILE:'profile'",
            "          name = (variable_permissive",
            "            VARIABLE:'abcdefg')",
            "          NEWLINE:'\\n'",
            "          (cipprf_set",
            "            SET:'set'",
            "            (cipprf_set_transform_set",
            "              TRANSFORM_SET:'transform-set'",
            "              (variable",
            "                VARIABLE:'hijklmnop')",
            "              NEWLINE:'\\n'))",
            "          (cipprf_set",
            "            SET:'set'",
            "            (cipprf_set_null",
            "              IKEV2_PROFILE:'ikev2-profile'",
            "              (null_rest_of_line",
            "                VARIABLE:'someprofile'",
            "                NEWLINE:'\\n')))",
            "          (cipprf_set",
            "            SET:'set'",
            "            (cipprf_set_null",
            "              SECURITY_ASSOCIATION:'security-association'",
            "              (null_rest_of_line",
            "                LIFETIME:'lifetime'",
            "                VARIABLE:'kilobytes'",
            "                DISABLE:'disable'",
            "                NEWLINE:'\\n')))",
            "          (cipprf_set",
            "            SET:'set'",
            "            (cipprf_set_isakmp_profile",
            "              ISAKMP_PROFILE:'isakmp-profile'",
            "              name = (variable",
            "                VARIABLE:'someOtherprofile')",
            "              NEWLINE:'\\n'))))))",
            "  (stanza",
            "    (s_crypto",
            "      CRYPTO:'crypto'",
            "      (crypto_ipsec",
            "        IPSEC:'ipsec'",
            "        (cip_null",
            "          NAT_TRANSPARENCY:'nat-transparency'",
            "          (null_rest_of_line",
            "            VARIABLE:'udp-encapsulation'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_crypto",
            "      CRYPTO:'crypto'",
            "      (crypto_ipsec",
            "        IPSEC:'ipsec'",
            "        (cip_null",
            "          NAT_TRANSPARENCY:'nat-transparency'",
            "          (null_rest_of_line",
            "            VARIABLE:'spi-matching'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_crypto",
            "      CRYPTO:'crypto'",
            "      (crypto_ipsec",
            "        IPSEC:'ipsec'",
            "        (cip_null",
            "          SECURITY_ASSOCIATION:'security-association'",
            "          (null_rest_of_line",
            "            VARIABLE:'pmtu-aging'",
            "            VARIABLE:'infinite'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_crypto",
            "      CRYPTO:'crypto'",
            "      (crypto_ipsec",
            "        IPSEC:'ipsec'",
            "        (cip_transform_set",
            "          TRANSFORM_SET:'transform-set'",
            "          name = (variable",
            "            VARIABLE:'ESP-3DES-MD5')",
            "          (ipsec_encryption",
            "            ESP_3DES:'esp-3des')",
            "          (ipsec_authentication",
            "            ESP_MD5_HMAC:'esp-md5-hmac')",
            "          NEWLINE:'\\n'",
            "          (cipt_mode",
            "            MODE:'mode'",
            "            TRANSPORT:'transport'",
            "            NEWLINE:'\\n')",
            "          (cipt_mode",
            "            MODE:'mode'",
            "            TUNNEL:'tunnel'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_crypto",
            "      CRYPTO:'crypto'",
            "      (crypto_ipsec",
            "        IPSEC:'ipsec'",
            "        (cip_transform_set",
            "          TRANSFORM_SET:'transform-set'",
            "          name = (variable",
            "            VARIABLE:'IPSEC_AES_256')",
            "          (ipsec_encryption",
            "            ESP_AES:'esp-aes'",
            "            strength = DEC:'256')",
            "          (ipsec_authentication",
            "            ESP_SHA_HMAC:'esp-sha-hmac')",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_crypto",
            "      CRYPTO:'crypto'",
            "      (crypto_ipsec",
            "        IPSEC:'ipsec'",
            "        (cip_transform_set",
            "          TRANSFORM_SET:'transform-set'",
            "          name = (variable",
            "            VARIABLE:'cipts1')",
            "          (ipsec_encryption",
            "            ESP_AES:'esp-aes'",
            "            strength = DEC:'256')",
            "          (ipsec_authentication",
            "            ESP_SHA256_HMAC:'esp-sha256-hmac')",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_crypto",
            "      CRYPTO:'crypto'",
            "      (crypto_ipsec",
            "        IPSEC:'ipsec'",
            "        (cip_transform_set",
            "          TRANSFORM_SET:'transform-set'",
            "          name = (variable",
            "            VARIABLE:'cipts2')",
            "          (ipsec_encryption",
            "            ESP_AES:'esp-aes'",
            "            strength = DEC:'256')",
            "          (ipsec_authentication",
            "            ESP_SHA512_HMAC:'esp-sha512-hmac')",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_crypto",
            "      CRYPTO:'crypto'",
            "      (crypto_ipsec",
            "        IPSEC:'ipsec'",
            "        (cip_transform_set",
            "          TRANSFORM_SET:'transform-set'",
            "          name = (variable",
            "            VARIABLE:'noAuthHeader')",
            "          (ipsec_encryption",
            "            ESP_AES:'esp-aes'",
            "            strength = DEC:'256')",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_crypto",
            "      CRYPTO:'crypto'",
            "      (crypto_isakmp",
            "        ISAKMP:'isakmp'",
            "        (cis_null",
            "          IDENTITY:'identity'",
            "          (null_rest_of_line",
            "            ADDRESS:'address'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_crypto",
            "      CRYPTO:'crypto'",
            "      (crypto_isakmp",
            "        ISAKMP:'isakmp'",
            "        (cis_null",
            "          INVALID_SPI_RECOVERY:'invalid-spi-recovery'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_crypto",
            "      CRYPTO:'crypto'",
            "      (crypto_isakmp",
            "        ISAKMP:'isakmp'",
            "        (cis_null",
            "          KEEPALIVE:'keepalive'",
            "          (null_rest_of_line",
            "            DEC:'10'",
            "            DEC:'3'",
            "            PERIODIC:'periodic'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_crypto",
            "      CRYPTO:'crypto'",
            "      (crypto_isakmp",
            "        ISAKMP:'isakmp'",
            "        (cis_null",
            "          KEY:'key'",
            "          (null_rest_of_line",
            "            VARIABLE:'~99a9aaa_aaaa9aa|||aaaaaaa'",
            "            ADDRESS:'address'",
            "            IP_ADDRESS:'1.2.3.4'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_crypto",
            "      CRYPTO:'crypto'",
            "      (crypto_isakmp",
            "        ISAKMP:'isakmp'",
            "        (cis_null",
            "          NAT:'nat'",
            "          (null_rest_of_line",
            "            KEEPALIVE:'keepalive'",
            "            DEC:'30'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_crypto",
            "      CRYPTO:'crypto'",
            "      (crypto_isakmp",
            "        ISAKMP:'isakmp'",
            "        (cis_policy",
            "          POLICY:'policy'",
            "          priority = DEC:'1'",
            "          NEWLINE:'\\n'",
            "          (cispol_authentication",
            "            AUTHENTICATION:'authentication'",
            "            PRE_SHARE:'pre-share'  <== mode:M_Authentication",
            "            NEWLINE:'\\n')",
            "          (cispol_encr",
            "            ENCR:'encr'",
            "            (ike_encryption",
            "              THREE_DES:'3des')",
            "            NEWLINE:'\\n')",
            "          (cispol_group",
            "            GROUP:'group'",
            "            DEC:'2'",
            "            NEWLINE:'\\n')",
            "          (cispol_hash",
            "            HASH:'hash'",
            "            MD5:'md5'",
            "            NEWLINE:'\\n')",
            "          (cispol_lifetime",
            "            LIFETIME:'lifetime'",
            "            DEC:'28800'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_crypto",
            "      CRYPTO:'crypto'",
            "      (crypto_isakmp",
            "        ISAKMP:'isakmp'",
            "        (cis_profile",
            "          PROFILE:'profile'",
            "          name = (variable",
            "            VARIABLE:'myprofile')",
            "          NEWLINE:'\\n'",
            "          (cisprf_keyring",
            "            KEYRING:'keyring'",
            "            name = (variable_permissive",
            "              VARIABLE:'VRF'",
            "              COLON:':'",
            "              VARIABLE:'MMS'",
            "              COLON:':'",
            "              VARIABLE:'RMT'",
            "              COLON:':'",
            "              VARIABLE:'UPM'",
            "              COLON:':'",
            "              DEC:'1143')",
            "            NEWLINE:'\\n')",
            "          (cisprf_match",
            "            MATCH:'match'",
            "            IDENTITY:'identity'",
            "            ADDRESS:'address'",
            "            address = IP_ADDRESS:'1.2.3.4'",
            "            mask = IP_ADDRESS:'255.255.255.255'",
            "            NEWLINE:'\\n')",
            "          (cisprf_null",
            "            REVERSE_ROUTE:'reverse-route'",
            "            (null_rest_of_line",
            "              NEWLINE:'\\n'))",
            "          (cisprf_self_identity",
            "            SELF_IDENTITY:'self-identity'",
            "            IP_ADDRESS:'2.3.4.6'",
            "            NEWLINE:'\\n')",
            "          (cisprf_null",
            "            VRF:'vrf'",
            "            (null_rest_of_line",
            "              VARIABLE:'VRF:MMS:RMT:UPM:1143'",
            "              NEWLINE:'\\n'))",
            "          (cisprf_null",
            "            KEEPALIVE:'keepalive'",
            "            (null_rest_of_line",
            "              DEC:'10'",
            "              RETRY:'retry'",
            "              DEC:'3'",
            "              NEWLINE:'\\n'))))))",
            "  (stanza",
            "    (s_crypto",
            "      CRYPTO:'crypto'",
            "      (crypto_key",
            "        KEY:'key'",
            "        (ck_null",
            "          GENERATE:'generate'",
            "          (null_rest_of_line",
            "            RSA:'rsa'",
            "            VARIABLE:'general-keys'",
            "            VARIABLE:'modulus'",
            "            DEC:'1024'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_crypto",
            "      CRYPTO:'crypto'",
            "      (crypto_key",
            "        KEY:'key'",
            "        (ck_null",
            "          PARAM:'param'",
            "          (null_rest_of_line",
            "            RSA:'rsa'",
            "            LABEL:'label'",
            "            VARIABLE:'abcdefg'",
            "            VARIABLE:'modulus'",
            "            DEC:'1024'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_crypto",
            "      CRYPTO:'crypto'",
            "      (crypto_key",
            "        KEY:'key'",
            "        (ck_pubkey_chain",
            "          PUBKEY_CHAIN:'pubkey-chain'",
            "          (null_rest_of_line",
            "            RSA:'rsa'",
            "            NEWLINE:'\\n')",
            "          (ckp_named_key",
            "            NAMED_KEY:'named-key'",
            "            name = (variable_permissive",
            "              VARIABLE:'a.example.com')",
            "            NEWLINE:'\\n'",
            "            (ckpn_null",
            "              ADDRESS:'address'",
            "              (null_rest_of_line",
            "                IP_ADDRESS:'1.2.3.4'",
            "                NEWLINE:'\\n'))",
            "            (ckpn_key_string",
            "              KEY_STRING:'key-string'",
            "              (certificate",
            "                NEWLINE:'\\n'",
            "                VARIABLE:'56789ABC'",
            "                VARIABLE:'56789ABC'",
            "                VARIABLE:'56789ABC'",
            "                VARIABLE:'56789ABC'",
            "                VARIABLE:'56789ABC'",
            "                VARIABLE:'56789ABC'",
            "                VARIABLE:'56789ABC'",
            "                VARIABLE:'56789ABC'",
            "                NEWLINE:'\\n'",
            "                VARIABLE:'56789ABC'",
            "                VARIABLE:'56789ABC'",
            "                VARIABLE:'56789ABC'",
            "                VARIABLE:'56789ABC'",
            "                VARIABLE:'56789ABC'",
            "                VARIABLE:'56789ABC'",
            "                VARIABLE:'56789ABC'",
            "                VARIABLE:'56789ABC'",
            "                NEWLINE:'\\n'",
            "                VARIABLE:'56789ABC'",
            "                VARIABLE:'56789ABC'",
            "                VARIABLE:'56789ABC'",
            "                VARIABLE:'56789ABC'",
            "                VARIABLE:'56789ABC'",
            "                VARIABLE:'56789ABC'",
            "                VARIABLE:'56789ABC'",
            "                VARIABLE:'56789ABC'",
            "                NEWLINE:'\\n'",
            "                VARIABLE:'56789ABC'",
            "                VARIABLE:'56789ABC'",
            "                VARIABLE:'56789ABC'",
            "                VARIABLE:'56789ABC'",
            "                VARIABLE:'56789ABC'",
            "                VARIABLE:'56789ABC'",
            "                VARIABLE:'56789ABC'",
            "                VARIABLE:'56789ABC'",
            "                NEWLINE:'\\n'",
            "                VARIABLE:'56789ABC'",
            "                VARIABLE:'56789ABC'",
            "                VARIABLE:'56789ABC'",
            "                VARIABLE:'56789ABC'",
            "                VARIABLE:'56789ABC'",
            "                VARIABLE:'56789ABC'",
            "                VARIABLE:'56789ABC'",
            "                VARIABLE:'56789ABC'",
            "                NEWLINE:'\\n'",
            "                VARIABLE:'56789ABC'",
            "                VARIABLE:'56789ABC'",
            "                VARIABLE:'56789ABC'",
            "                VARIABLE:'56789ABC'",
            "                VARIABLE:'56789ABC'",
            "                VARIABLE:'56789ABC'",
            "                VARIABLE:'56789ABC'",
            "                VARIABLE:'56789ABC'",
            "                NEWLINE:'\\n'",
            "                VARIABLE:'56789ABC'",
            "                VARIABLE:'56789ABC'",
            "                VARIABLE:'56789ABC'",
            "                VARIABLE:'56789ABC'",
            "                VARIABLE:'56789ABC'",
            "                VARIABLE:'56789ABC'",
            "                VARIABLE:'56789ABC'",
            "                VARIABLE:'56789ABC'",
            "                NEWLINE:'\\n'",
            "                VARIABLE:'56789ABC'",
            "                VARIABLE:'56789ABC'",
            "                VARIABLE:'56789ABC'",
            "                VARIABLE:'56789ABC'",
            "                VARIABLE:'56789ABC'",
            "                VARIABLE:'56789ABC'",
            "                VARIABLE:'56789ABC'",
            "                VARIABLE:'56789ABC'",
            "                NEWLINE:'\\n'",
            "                VARIABLE:'56789ABC'",
            "                VARIABLE:'56789ABC'",
            "                VARIABLE:'56789ABC'",
            "                VARIABLE:'56789ABC'",
            "                VARIABLE:'56789ABC'",
            "                VARIABLE:'56789ABC'",
            "                VARIABLE:'56789ABC'",
            "                VARIABLE:'56789ABC'",
            "                NEWLINE:'\\n'",
            "                VARIABLE:'56789ABC'",
            "                DEC:'0001'",
            "                NEWLINE:'\\n')",
            "              QUIT:'quit'",
            "              NEWLINE:'\\n'))))))",
            "  (stanza",
            "    (s_crypto",
            "      CRYPTO:'crypto'",
            "      (crypto_keyring",
            "        KEYRING:'keyring'",
            "        name = (variable_permissive",
            "          VARIABLE:'VRF'",
            "          COLON:':'",
            "          VARIABLE:'ABC'",
            "          COLON:':'",
            "          VARIABLE:'DEF'",
            "          COLON:':'",
            "          VARIABLE:'GHI'",
            "          COLON:':'",
            "          DEC:'1234')",
            "        NEWLINE:'\\n'",
            "        (ckr_psk",
            "          PRE_SHARED_KEY:'pre-shared-key'",
            "          ADDRESS:'address'",
            "          ip_address = IP_ADDRESS:'1.1.1.1'",
            "          KEY:'key'",
            "          (variable_permissive",
            "            VARIABLE:'9Aa9'",
            "            POUND:'#'",
            "            RAW_TEXT:'A%X9AaAAAAAa'  <== mode:M_Description)",
            "          NEWLINE:'\\n'  <== mode:M_Description))))",
            "  (stanza",
            "    (s_crypto",
            "      CRYPTO:'crypto'",
            "      (crypto_map",
            "        MAP:'map'",
            "        name = (variable",
            "          VARIABLE:'myothermap')",
            "        seq_num = DEC:'65535'",
            "        (crypto_map_tail",
            "          (crypto_map_t_ipsec_isakmp",
            "            IPSEC_ISAKMP:'ipsec-isakmp'",
            "            DYNAMIC:'dynamic'",
            "            crypto_dynamic_map_name = (variable",
            "              VARIABLE:'mydefaultcryptomap')",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_crypto",
            "      CRYPTO:'crypto'",
            "      (crypto_map",
            "        MAP:'map'",
            "        name = (variable",
            "          VARIABLE:'myothermap')",
            "        (crypto_map_null",
            "          REDUNDANCY:'redundancy'",
            "          (null_rest_of_line",
            "            VARIABLE:'replay-interval'",
            "            INBOUND:'inbound'",
            "            DEC:'1000'",
            "            VARIABLE:'outbound'",
            "            DEC:'1000'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_crypto",
            "      CRYPTO:'crypto'",
            "      (crypto_map",
            "        MAP:'map'",
            "        name = (variable",
            "          VARIABLE:'myothermap')",
            "        (crypto_map_null",
            "          INTERFACE:'interface'",
            "          (null_rest_of_line",
            "            M_Interface_PREFIX:'outside'  <== mode:M_Interface",
            "            NEWLINE:'\\n'  <== mode:M_Interface)))))",
            "  (stanza",
            "    (s_crypto",
            "      CRYPTO:'crypto'",
            "      (crypto_map",
            "        MAP:'map'",
            "        name = (variable",
            "          VARIABLE:'VPN')",
            "        seq_num = DEC:'5'",
            "        (crypto_map_tail",
            "          (crypto_map_t_ipsec_isakmp",
            "            IPSEC_ISAKMP:'ipsec-isakmp'",
            "            NEWLINE:'\\n'",
            "            (crypto_map_t_ii_match_address",
            "              MATCH:'match'",
            "              ADDRESS:'address'",
            "              name = (variable",
            "                VARIABLE:'someacl')",
            "              NEWLINE:'\\n')",
            "            (crypto_map_t_ii_set",
            "              SET:'set'",
            "              (crypto_map_t_ii_set_pfs",
            "                PFS:'pfs'",
            "                (dh_group",
            "                  GROUP14:'group14')",
            "                NEWLINE:'\\n'))",
            "            (crypto_map_t_ii_set",
            "              SET:'set'",
            "              (crypto_map_t_ii_set_peer",
            "                PEER:'peer'",
            "                address = IP_ADDRESS:'1.2.3.4'",
            "                NEWLINE:'\\n'))",
            "            (crypto_map_t_ii_set",
            "              SET:'set'",
            "              (crypto_map_t_ii_set_transform_set",
            "                TRANSFORM_SET:'transform-set'",
            "                (variable",
            "                  VARIABLE:'bleep')",
            "                NEWLINE:'\\n'))",
            "            (crypto_map_t_ii_set",
            "              SET:'set'",
            "              (crypto_map_t_ii_set_null",
            "                SECURITY_ASSOCIATION:'security-association'",
            "                (null_rest_of_line",
            "                  LIFETIME:'lifetime'",
            "                  VARIABLE:'seconds'",
            "                  DEC:'86400'",
            "                  NEWLINE:'\\n'))))))))",
            "  (stanza",
            "    (s_crypto",
            "      CRYPTO:'crypto'",
            "      (crypto_map",
            "        MAP:'map'",
            "        name = (variable",
            "          VARIABLE:'VPN')",
            "        seq_num = DEC:'10'",
            "        (crypto_map_tail",
            "          (crypto_map_t_ipsec_isakmp",
            "            IPSEC_ISAKMP:'ipsec-isakmp'",
            "            DYNAMIC:'dynamic'",
            "            crypto_dynamic_map_name = (variable",
            "              VARIABLE:'bippety')",
            "            NEWLINE:'\\n\\n')))))",
            "  (stanza",
            "    (s_crypto",
            "      CRYPTO:'crypto'",
            "      (crypto_map",
            "        MAP:'map'",
            "        name = (variable",
            "          VARIABLE:'asacryptomap')",
            "        seq_num = DEC:'10'",
            "        (crypto_map_tail",
            "          (crypto_map_t_null",
            "            MATCH:'match'",
            "            (null_rest_of_line",
            "              ADDRESS:'address'",
            "              VARIABLE:'someacl'",
            "              NEWLINE:'\\n'))))))",
            "  (stanza",
            "    (s_crypto",
            "      CRYPTO:'crypto'",
            "      (crypto_map",
            "        MAP:'map'",
            "        name = (variable",
            "          VARIABLE:'asacryptomap')",
            "        seq_num = DEC:'10'",
            "        (crypto_map_tail",
            "          (crypto_map_t_null",
            "            SET:'set'",
            "            (null_rest_of_line",
            "              PFS:'pfs'",
            "              NEWLINE:'\\n'))))))",
            "  (stanza",
            "    (s_crypto",
            "      CRYPTO:'crypto'",
            "      (crypto_map",
            "        MAP:'map'",
            "        name = (variable",
            "          VARIABLE:'asacryptomap')",
            "        seq_num = DEC:'10'",
            "        (crypto_map_tail",
            "          (crypto_map_t_null",
            "            SET:'set'",
            "            (null_rest_of_line",
            "              PEER:'peer'",
            "              IP_ADDRESS:'1.2.3.4'",
            "              NEWLINE:'\\n'))))))",
            "  (stanza",
            "    (s_crypto",
            "      CRYPTO:'crypto'",
            "      (crypto_map",
            "        MAP:'map'",
            "        name = (variable",
            "          VARIABLE:'asacryptomap')",
            "        seq_num = DEC:'10'",
            "        (crypto_map_tail",
            "          (crypto_map_t_null",
            "            SET:'set'",
            "            (null_rest_of_line",
            "              IKEV1:'ikev1'",
            "              TRANSFORM_SET:'transform-set'",
            "              VARIABLE:'bleep'",
            "              NEWLINE:'\\n'))))))",
            "  (stanza",
            "    (s_crypto",
            "      CRYPTO:'crypto'",
            "      (crypto_map",
            "        MAP:'map'",
            "        name = (variable",
            "          VARIABLE:'asacryptomap')",
            "        seq_num = DEC:'10'",
            "        (crypto_map_tail",
            "          (crypto_map_t_null",
            "            SET:'set'",
            "            (null_rest_of_line",
            "              SECURITY_ASSOCIATION:'security-association'",
            "              LIFETIME:'lifetime'",
            "              VARIABLE:'seconds'",
            "              DEC:'86400'",
            "              NEWLINE:'\\n\\n'))))))",
            "  (stanza",
            "    (s_crypto",
            "      CRYPTO:'crypto'",
            "      (crypto_map",
            "        MAP:'map'",
            "        name = (variable",
            "          VARIABLE:'VPNMAP')",
            "        seq_num = DEC:'2'",
            "        (crypto_map_tail",
            "          (crypto_map_t_ipsec_isakmp",
            "            IPSEC_ISAKMP:'ipsec-isakmp'",
            "            NEWLINE:'\\n'",
            "            (crypto_map_t_ii_null",
            "              DESCRIPTION:'description'",
            "              (null_rest_of_line",
            "                RAW_TEXT:' bippety boppety'  <== mode:M_Description",
            "                NEWLINE:'\\n'  <== mode:M_Description))",
            "            (crypto_map_t_ii_match_address",
            "              MATCH:'match'",
            "              ADDRESS:'address'",
            "              name = (variable",
            "                VARIABLE:'myvpnacl')",
            "              NEWLINE:'\\n')",
            "            (crypto_map_t_ii_null",
            "              REVERSE_ROUTE:'reverse-route'",
            "              (null_rest_of_line",
            "                NEWLINE:'\\n'))",
            "            (crypto_map_t_ii_set",
            "              SET:'set'",
            "              (crypto_map_t_ii_set_isakmp_profile",
            "                ISAKMP_PROFILE:'isakmp-profile'",
            "                name = (variable",
            "                  VARIABLE:'myisakmpprofile')",
            "                NEWLINE:'\\n'))",
            "            (crypto_map_t_ii_set",
            "              SET:'set'",
            "              (crypto_map_t_ii_set_peer",
            "                PEER:'peer'",
            "                address = IP_ADDRESS:'1.2.3.4'",
            "                NEWLINE:'\\n'))",
            "            (crypto_map_t_ii_set",
            "              SET:'set'",
            "              (crypto_map_t_ii_set_pfs",
            "                PFS:'pfs'",
            "                (dh_group",
            "                  GROUP2:'group2')",
            "                NEWLINE:'\\n'))",
            "            (crypto_map_t_ii_set",
            "              SET:'set'",
            "              (crypto_map_t_ii_set_null",
            "                SECURITY_ASSOCIATION:'security-association'",
            "                (null_rest_of_line",
            "                  LIFETIME:'lifetime'",
            "                  VARIABLE:'seconds'",
            "                  DEC:'14400'",
            "                  NEWLINE:'\\n')))",
            "            (crypto_map_t_ii_set",
            "              SET:'set'",
            "              (crypto_map_t_ii_set_transform_set",
            "                TRANSFORM_SET:'transform-set'",
            "                (variable",
            "                  VARIABLE:'mytransformset')",
            "                NEWLINE:'\\n')))))))",
            "  (stanza",
            "    (s_crypto",
            "      CRYPTO:'crypto'",
            "      (crypto_pki",
            "        PKI:'pki'",
            "        (cpki_certificate_chain",
            "          CERTIFICATE:'certificate'",
            "          CHAIN:'chain'  <== mode:M_Certificate",
            "          name = (variable_permissive",
            "            VARIABLE:'fff')",
            "          NEWLINE:'\\n'",
            "          (cpkicc_certificate",
            "            CERTIFICATE:'certificate'",
            "            (certificate",
            "              HEX_FRAGMENT:'fff'  <== mode:M_Certificate",
            "              HEX_FRAGMENT:'fffff'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'fffff'  <== mode:M_CertificateText)",
            "            QUIT:'quit'  <== mode:M_CertificateText",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_crypto",
            "      CRYPTO:'crypto'",
            "      (crypto_pki",
            "        PKI:'pki'",
            "        (cpki_certificate_chain",
            "          CERTIFICATE:'certificate'",
            "          CHAIN:'chain'  <== mode:M_Certificate",
            "          name = (variable_permissive",
            "            VARIABLE:'ggg')",
            "          NEWLINE:'\\n'",
            "          (cpkicc_certificate",
            "            CERTIFICATE:'certificate'",
            "            SELF_SIGNED:'self-signed'  <== mode:M_Certificate",
            "            (certificate",
            "              HEX_FRAGMENT:'01'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123ABCD'  <== mode:M_CertificateText",
            "              HEX_FRAGMENT:'0123EF'  <== mode:M_CertificateText)",
            "            QUIT:'quit'  <== mode:M_CertificateText",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_crypto",
            "      CRYPTO:'crypto'",
            "      (crypto_pki",
            "        PKI:'pki'",
            "        (cpki_certificate_chain",
            "          CERTIFICATE:'certificate'",
            "          CHAIN:'chain'  <== mode:M_Certificate",
            "          name = (variable_permissive",
            "            VARIABLE:'TP-self-signed-2698589343')",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_crypto",
            "      CRYPTO:'crypto'",
            "      (crypto_pki",
            "        PKI:'pki'",
            "        (cpki_null",
            "          TOKEN:'token'",
            "          (null_rest_of_line",
            "            DEFAULT:'default'",
            "            VARIABLE:'removal'",
            "            TIMEOUT:'timeout'",
            "            DEC:'0'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_crypto",
            "      CRYPTO:'crypto'",
            "      (crypto_pki",
            "        PKI:'pki'",
            "        (cpki_trustpoint",
            "          TRUSTPOINT:'trustpoint'",
            "          name = (variable_permissive",
            "            VARIABLE:'HTTPS_SS_CERT_KEYPAIR')",
            "          NEWLINE:'\\n'",
            "          (cpkit_null",
            "            ENROLLMENT:'enrollment'",
            "            (null_rest_of_line",
            "              VARIABLE:'selfsigned'",
            "              NEWLINE:'\\n'))",
            "          (cpkit_null",
            "            REVOCATION_CHECK:'revocation-check'",
            "            (null_rest_of_line",
            "              NONE:'none'",
            "              NEWLINE:'\\n'))",
            "          (cpkit_null",
            "            RSAKEYPAIR:'rsakeypair'",
            "            (null_rest_of_line",
            "              VARIABLE:'HTTPS_SS_CERT_KEYPAIR'",
            "              NEWLINE:'\\n'))",
            "          (cpkit_null",
            "            SERIAL_NUMBER:'serial-number'",
            "            (null_rest_of_line",
            "              NEWLINE:'\\n'))",
            "          (cpkit_null",
            "            SUBJECT_NAME:'subject-name'",
            "            (null_rest_of_line",
            "              VARIABLE:'cn=gawerfowefoiwejfio'",
            "              NEWLINE:'\\n'))",
            "          (cpkit_null",
            "            NO:'no'",
            "            VALIDATION_USAGE:'validation-usage'",
            "            (null_rest_of_line",
            "              NEWLINE:'\\n'))))))",
            "  (stanza",
            "    (s_crypto",
            "      CRYPTO:'crypto'",
            "      (crypto_pki",
            "        PKI:'pki'",
            "        (cpki_server",
            "          SERVER:'server'",
            "          name = (variable_permissive",
            "            VARIABLE:'CN')",
            "          NEWLINE:'\\n'",
            "          (cpkis_null",
            "            NO:'no'",
            "            DATABASE:'database'",
            "            (null_rest_of_line",
            "              ARCHIVE:'archive'",
            "              NEWLINE:'\\n'))",
            "          (cpkis_null",
            "            ISSUER_NAME:'issuer-name'",
            "            (null_rest_of_line",
            "              VARIABLE:'cn=CN'",
            "              NEWLINE:'\\n'))",
            "          (cpkis_null",
            "            GRANT:'grant'",
            "            (null_rest_of_line",
            "              AUTO:'auto'",
            "              NEWLINE:'\\n'))",
            "          (cpkis_null",
            "            CDP_URL:'cdp-url'",
            "            (null_rest_of_line",
            "              HTTP:'http'",
            "              COLON:':'",
            "              VARIABLE:'//192.168.0.1/CN.crl'",
            "              NEWLINE:'\\n'))))))",
            "  (stanza",
            "    (s_key",
            "      KEY:'key'",
            "      CHAIN:'chain'",
            "      name = (variable_permissive",
            "        VARIABLE:'mykeychain1')",
            "      NEWLINE:'\\n'",
            "      (key_key",
            "        KEY:'key'",
            "        name = (variable",
            "          DEC:'1')",
            "        NEWLINE:'\\n'",
            "        (kk_null",
            "          KEY_STRING:'key-string'",
            "          (null_rest_of_line",
            "            DEC:'7'",
            "            VARIABLE:'0023353555485A15240155'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_key",
            "      KEY:'key'",
            "      CHAIN:'chain'",
            "      name = (variable_permissive",
            "        VARIABLE:'mykeychain2')",
            "      NEWLINE:'\\n'",
            "      (key_key",
            "        KEY:'key'",
            "        name = (variable",
            "          DEC:'1')",
            "        NEWLINE:'\\n'",
            "        (kk_null",
            "          ACCEPT_LIFETIME:'accept-lifetime'",
            "          (null_rest_of_line",
            "            DEC:'00'",
            "            COLON:':'",
            "            DEC:'00'",
            "            COLON:':'",
            "            DEC:'00'",
            "            VARIABLE:'december'",
            "            DEC:'01'",
            "            DEC:'2014'",
            "            VARIABLE:'infinite'",
            "            NEWLINE:'\\n'))",
            "        (kk_null",
            "          CRYPTOGRAPHIC_ALGORITHM:'cryptographic-algorithm'",
            "          (null_rest_of_line",
            "            VARIABLE:'HMAC-MD5'",
            "            NEWLINE:'\\n'))",
            "        (kk_null",
            "          KEY_STRING:'key-string'",
            "          (null_rest_of_line",
            "            PASSWORD:'password'",
            "            VARIABLE:'0123456789ABCDEF01234567'",
            "            NEWLINE:'\\n'))",
            "        (kk_null",
            "          SEND_LIFETIME:'send-lifetime'",
            "          (null_rest_of_line",
            "            DEC:'00'",
            "            COLON:':'",
            "            DEC:'00'",
            "            COLON:':'",
            "            DEC:'00'",
            "            VARIABLE:'december'",
            "            DEC:'01'",
            "            DEC:'2014'",
            "            VARIABLE:'infinite'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_crypto",
            "      NO:'no'",
            "      CRYPTO:'crypto'",
            "      (crypto_engine",
            "        ENGINE:'engine'",
            "        (null_rest_of_line",
            "          SOFTWARE:'software'",
            "          IPSEC:'ipsec'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_crypto",
            "      NO:'no'",
            "      CRYPTO:'crypto'",
            "      (crypto_isakmp",
            "        ISAKMP:'isakmp'",
            "        (cis_null",
            "          ENABLE:'enable'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_crypto",
            "      NO:'no'",
            "      CRYPTO:'crypto'",
            "      (crypto_isakmp",
            "        ISAKMP:'isakmp'",
            "        (cis_null",
            "          NAT_TRAVERSAL:'nat-traversal'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n')))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/cisco_dhcp" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'cisco_dhcp'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_null",
            "      (null_block",
            "        DHCPRELAY:'dhcprelay'",
            "        (null_rest_of_line",
            "          SERVER:'server'",
            "          IP_ADDRESS:'1.2.3.4'",
            "          OUTSIDE:'outside'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_null",
            "      (null_block",
            "        DHCPRELAY:'dhcprelay'",
            "        (null_rest_of_line",
            "          SERVER:'server'",
            "          IP_ADDRESS:'1.2.3.5'",
            "          OUTSIDE:'outside'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_null",
            "      (null_block",
            "        DHCPRELAY:'dhcprelay'",
            "        (null_rest_of_line",
            "          ENABLE:'enable'",
            "          INSIDE:'inside'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_null",
            "      (null_block",
            "        DHCPRELAY:'dhcprelay'",
            "        (null_rest_of_line",
            "          TIMEOUT:'timeout'",
            "          DEC:'60'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_dhcp",
            "      DHCP:'dhcp'",
            "      (null_rest_of_line",
            "        IPV4:'ipv4'",
            "        NEWLINE:'\\n')",
            "      (dhcp_profile",
            "        PROFILE:'profile'",
            "        (null_rest_of_line",
            "          VARIABLE:'irnc-dhcp'",
            "          RELAY:'relay'",
            "          NEWLINE:'\\n')",
            "        (dhcp_profile_null",
            "          HELPER_ADDRESS:'helper-address'",
            "          (null_rest_of_line",
            "            VRF:'vrf'",
            "            DEFAULT:'default'",
            "            IP_ADDRESS:'137.164.55.68'",
            "            NEWLINE:'\\n'))",
            "        (dhcp_profile_null",
            "          LEASE:'lease'",
            "          (null_rest_of_line",
            "            DEC:'0'",
            "            DEC:'0'",
            "            DEC:'5'",
            "            NEWLINE:'\\n'))",
            "        (dhcp_profile_null",
            "          POOL:'pool'",
            "          (null_rest_of_line",
            "            VARIABLE:'mgmt-net'",
            "            NEWLINE:'\\n'))",
            "        (dhcp_profile_null",
            "          DNS_SERVER:'dns-server'",
            "          (null_rest_of_line",
            "            IP_ADDRESS:'130.59.31.251'",
            "            IP_ADDRESS:'130.59.31.248'",
            "            NEWLINE:'\\n'))",
            "        (dhcp_profile_null",
            "          DOMAIN_NAME:'domain-name'",
            "          (null_rest_of_line",
            "            VARIABLE:'switch.ch'",
            "            NEWLINE:'\\n'))",
            "        (dhcp_profile_null",
            "          SUBNET_MASK:'subnet-mask'",
            "          (null_rest_of_line",
            "            IP_ADDRESS:'255.255.255.240'",
            "            NEWLINE:'\\n'))",
            "        (dhcp_profile_null",
            "          DEFAULT_ROUTER:'default-router'",
            "          (null_rest_of_line",
            "            IP_ADDRESS:'13.9.2.1'",
            "            NEWLINE:'\\n')))",
            "      (dhcp_null",
            "        INTERFACE:'interface'",
            "        (null_rest_of_line",
            "          M_Interface_PREFIX:'Bundle-Ether'  <== mode:M_Interface",
            "          DEC:'4'  <== mode:M_Interface",
            "          PERIOD:'.'  <== mode:M_Interface",
            "          DEC:'12'  <== mode:M_Interface",
            "          M_Interface_PREFIX:'relay'  <== mode:M_Interface",
            "          M_Interface_PREFIX:'profile'  <== mode:M_Interface",
            "          M_Interface_PREFIX:'irnc-dhcp'  <== mode:M_Interface",
            "          NEWLINE:'\\n'  <== mode:M_Interface))",
            "      (dhcp_null",
            "        INTERFACE:'interface'",
            "        (null_rest_of_line",
            "          M_Interface_PREFIX:'Bundle-Ether'  <== mode:M_Interface",
            "          DEC:'4'  <== mode:M_Interface",
            "          PERIOD:'.'  <== mode:M_Interface",
            "          DEC:'13'  <== mode:M_Interface",
            "          M_Interface_PREFIX:'relay'  <== mode:M_Interface",
            "          M_Interface_PREFIX:'profile'  <== mode:M_Interface",
            "          M_Interface_PREFIX:'irnc-dhcp'  <== mode:M_Interface",
            "          NEWLINE:'\\n'  <== mode:M_Interface))",
            "      (dhcp_null",
            "        INTERFACE:'interface'",
            "        (null_rest_of_line",
            "          M_Interface_PREFIX:'Bundle-Ether'  <== mode:M_Interface",
            "          DEC:'1'  <== mode:M_Interface",
            "          PERIOD:'.'  <== mode:M_Interface",
            "          DEC:'1031'  <== mode:M_Interface",
            "          M_Interface_PREFIX:'relay'  <== mode:M_Interface",
            "          M_Interface_PREFIX:'profile'  <== mode:M_Interface",
            "          M_Interface_PREFIX:'irnc-dhcp'  <== mode:M_Interface",
            "          NEWLINE:'\\n'  <== mode:M_Interface))",
            "      (dhcp_null",
            "        INTERFACE:'interface'",
            "        (null_rest_of_line",
            "          M_Interface_PREFIX:'Bundle-Ether'  <== mode:M_Interface",
            "          DEC:'1'  <== mode:M_Interface",
            "          PERIOD:'.'  <== mode:M_Interface",
            "          DEC:'1032'  <== mode:M_Interface",
            "          M_Interface_PREFIX:'relay'  <== mode:M_Interface",
            "          M_Interface_PREFIX:'profile'  <== mode:M_Interface",
            "          M_Interface_PREFIX:'irnc-dhcp'  <== mode:M_Interface",
            "          NEWLINE:'\\n'  <== mode:M_Interface))))",
            "  (stanza",
            "    (s_ip_dhcp",
            "      NO:'no'",
            "      IP:'ip'",
            "      DHCP:'dhcp'",
            "      (ip_dhcp_null",
            "        PACKET:'packet'",
            "        (null_rest_of_line",
            "          VARIABLE:'strict-validation'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_ip_dhcp",
            "      IP:'ip'",
            "      DHCP:'dhcp'",
            "      (ip_dhcp_pool",
            "        POOL:'pool'",
            "        name = (variable",
            "          VARIABLE:'abcdefg')",
            "        NEWLINE:'\\n'",
            "        (ip_dhcp_pool_null",
            "          NETWORK:'network'",
            "          (null_rest_of_line",
            "            IP_ADDRESS:'1.2.3.0'",
            "            IP_ADDRESS:'255.255.255.0'",
            "            NEWLINE:'\\n'))",
            "        (ip_dhcp_pool_null",
            "          DEFAULT_ROUTER:'default-router'",
            "          (null_rest_of_line",
            "            IP_ADDRESS:'1.2.3.1'",
            "            NEWLINE:'\\n'))",
            "        (ip_dhcp_pool_null",
            "          DOMAIN_NAME:'domain-name'",
            "          (null_rest_of_line",
            "            VARIABLE:'example.com'",
            "            NEWLINE:'\\n'))",
            "        (ip_dhcp_pool_null",
            "          DNS_SERVER:'dns-server'",
            "          (null_rest_of_line",
            "            IP_ADDRESS:'2.3.4.5'",
            "            IP_ADDRESS:'3.4.5.6'",
            "            NEWLINE:'\\n'))",
            "        (ip_dhcp_pool_null",
            "          LEASE:'lease'",
            "          (null_rest_of_line",
            "            VARIABLE:'infinite'",
            "            NEWLINE:'\\n'))",
            "        (ip_dhcp_pool_null",
            "          HOST:'host'",
            "          (null_rest_of_line",
            "            IP_ADDRESS:'1.59.4.1'",
            "            IP_ADDRESS:'255.255.255.192'",
            "            NEWLINE:'\\n'))",
            "        (ip_dhcp_pool_null",
            "          CLIENT_IDENTIFIER:'client-identifier'",
            "          (null_rest_of_line",
            "            VARIABLE:'01e4.115b.e6d8.b4'",
            "            NEWLINE:'\\n'))",
            "        (ip_dhcp_pool_null",
            "          CLIENT_NAME:'client-name'",
            "          (null_rest_of_line",
            "            VARIABLE:'cetitlan-admin'",
            "            NEWLINE:'\\n'))",
            "        (ip_dhcp_pool_null",
            "          BOOTFILE:'bootfile'",
            "          (null_rest_of_line",
            "            VARIABLE:'pxelinux.0'",
            "            NEWLINE:'\\n'))",
            "        (ip_dhcp_pool_null",
            "          NEXT_SERVER:'next-server'",
            "          (null_rest_of_line",
            "            IP_ADDRESS:'136.243.111.220'",
            "            NEWLINE:'\\n'))",
            "        (ip_dhcp_pool_null",
            "          HARDWARE_ADDRESS:'hardware-address'",
            "          (null_rest_of_line",
            "            MAC_ADDRESS_LITERAL:'0025.90fc.6d00'",
            "            NEWLINE:'\\n'))",
            "        (ip_dhcp_pool_null",
            "          OPTION:'option'",
            "          (null_rest_of_line",
            "            DEC:'42'",
            "            IP:'ip'",
            "            IP_ADDRESS:'130.59.48.65'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_ip_dhcp",
            "      IP:'ip'",
            "      DHCP:'dhcp'",
            "      (ip_dhcp_relay",
            "        RELAY:'relay'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_ip_dhcp",
            "      IP:'ip'",
            "      DHCP:'dhcp'",
            "      (ip_dhcp_relay",
            "        RELAY:'relay'",
            "        (ip_dhcp_relay_null",
            "          INFORMATION:'information'",
            "          (null_rest_of_line",
            "            OPTION:'option'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_ip_dhcp",
            "      NO:'no'",
            "      IP:'ip'",
            "      DHCP:'dhcp'",
            "      (ip_dhcp_relay",
            "        RELAY:'relay'",
            "        (ip_dhcp_relay_null",
            "          INFORMATION:'information'",
            "          (null_rest_of_line",
            "            OPTION:'option'",
            "            VPN:'vpn'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_ip_dhcp",
            "      NO:'no'",
            "      IP:'ip'",
            "      DHCP:'dhcp'",
            "      (ip_dhcp_relay",
            "        RELAY:'relay'",
            "        (ip_dhcp_relay_null",
            "          SOURCE_ADDRESS:'source-address'",
            "          (null_rest_of_line",
            "            HSRP:'hsrp'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_ip_dhcp",
            "      NO:'no'",
            "      IP:'ip'",
            "      DHCP:'dhcp'",
            "      (ip_dhcp_relay",
            "        RELAY:'relay'",
            "        (ip_dhcp_relay_null",
            "          SUB_OPTION:'sub-option'",
            "          (null_rest_of_line",
            "            TYPE:'type'",
            "            VARIABLE:'cisco'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_ip_dhcp",
            "      NO:'no'",
            "      IP:'ip'",
            "      DHCP:'dhcp'",
            "      (ip_dhcp_null",
            "        SMART_RELAY:'smart-relay'",
            "        (null_rest_of_line",
            "          GLOBAL:'global'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_ip_dhcp",
            "      NO:'no'",
            "      IP:'ip'",
            "      DHCP:'dhcp'",
            "      (ip_dhcp_null",
            "        SNOOPING:'snooping'",
            "        (null_rest_of_line",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_ip_dhcp",
            "      NO:'no'",
            "      IP:'ip'",
            "      DHCP:'dhcp'",
            "      (ip_dhcp_null",
            "        SNOOPING:'snooping'",
            "        (null_rest_of_line",
            "          INFORMATION:'information'",
            "          OPTION:'option'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_ip_dhcp",
            "      IP:'ip'",
            "      DHCP:'dhcp'",
            "      (ip_dhcp_null",
            "        SNOOPING:'snooping'",
            "        (null_rest_of_line",
            "          VERIFY:'verify'",
            "          MAC_ADDRESS:'mac-address'",
            "          NEWLINE:'\\n'  <== mode:M_COMMENT))))",
            "  (stanza",
            "    (s_ip_dhcp",
            "      NO:'no'",
            "      IP:'ip'",
            "      DHCP:'dhcp'",
            "      (ip_dhcp_null",
            "        USE:'use'",
            "        (null_rest_of_line",
            "          VRF:'vrf'",
            "          CONNECTED:'connected'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_ip_dhcp",
            "      IPV6:'ipv6'",
            "      DHCP:'dhcp'",
            "      (ip_dhcp_relay",
            "        RELAY:'relay'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_ip_dhcp",
            "      NO:'no'",
            "      IPV6:'ipv6'",
            "      DHCP:'dhcp'",
            "      (ip_dhcp_relay",
            "        RELAY:'relay'",
            "        (ip_dhcp_relay_null",
            "          OPTION:'option'",
            "          (null_rest_of_line",
            "            VPN:'vpn'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_ip_dhcp",
            "      NO:'no'",
            "      IPV6:'ipv6'",
            "      DHCP:'dhcp'",
            "      (ip_dhcp_relay",
            "        RELAY:'relay'",
            "        (ip_dhcp_relay_null",
            "          OPTION:'option'",
            "          (null_rest_of_line",
            "            TYPE:'type'",
            "            VARIABLE:'cisco'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_ip_dhcp",
            "      NO:'no'",
            "      IPV6:'ipv6'",
            "      DHCP:'dhcp'",
            "      (ip_dhcp_relay",
            "        RELAY:'relay'",
            "        (ip_dhcp_relay_null",
            "          SOURCE_INTERFACE:'source-interface'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n'  <== mode:M_Interface)))))",
            "  (stanza",
            "    (s_service",
            "      SERVICE:'service'",
            "      (variable",
            "        DHCP:'dhcp')",
            "      NEWLINE:'\\n'))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/cisco_domain" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'cisco_domain'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_domain",
            "      DOMAIN:'domain'",
            "      (domain_lookup",
            "        LOOKUP:'lookup'",
            "        DISABLE:'disable'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_domain",
            "      DOMAIN:'domain'",
            "      (domain_lookup",
            "        LOOKUP:'lookup'",
            "        SOURCE_INTERFACE:'source-interface'",
            "        iname = (interface_name",
            "          name_prefix_alpha = M_Interface_PREFIX:'Loopback'  <== mode:M_Interface",
            "          (range",
            "            (subrange",
            "              low = DEC:'666'  <== mode:M_Interface)))",
            "        NEWLINE:'\\n'  <== mode:M_Interface)))",
            "  (stanza",
            "    (s_domain",
            "      DOMAIN:'domain'",
            "      (domain_name",
            "        NAME:'name'",
            "        hostname = (variable_hostname",
            "          VARIABLE:'my.domain.name'  <== mode:M_Name)",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_domain",
            "      DOMAIN:'domain'",
            "      (domain_name_server",
            "        NAME_SERVER:'name-server'",
            "        hostname = (variable_hostname",
            "          IP_ADDRESS:'2.3.4.5')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_domain",
            "      DOMAIN:'domain'",
            "      VRF:'vrf'",
            "      vrf = (variable",
            "        VARIABLE:'Management')",
            "      (domain_name",
            "        NAME:'name'",
            "        hostname = (variable_hostname",
            "          VARIABLE:'example.com'  <== mode:M_Name)",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_domain",
            "      DOMAIN:'domain'",
            "      VRF:'vrf'",
            "      vrf = (variable",
            "        VARIABLE:'Management')",
            "      (domain_name_server",
            "        NAME_SERVER:'name-server'",
            "        hostname = (variable_hostname",
            "          IP_ADDRESS:'1.2.3.4')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_domain_name",
            "      DOMAIN_NAME:'domain-name'",
            "      hostname = (variable_hostname",
            "        VARIABLE:'my.domain.name')",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_ip_domain",
            "      IP:'ip'",
            "      DOMAIN:'domain'",
            "      (ip_domain_name",
            "        NAME:'name'",
            "        hostname = (variable_hostname",
            "          VARIABLE:'my.domain.name'  <== mode:M_Name)",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_ip_domain",
            "      IP:'ip'",
            "      DOMAIN:'domain'",
            "      (ip_domain_name",
            "        NAME:'name'",
            "        hostname = (variable_hostname",
            "          VARIABLE:'vrf'  <== mode:M_Name",
            "          VARIABLE:'blip'",
            "          VARIABLE:'my.domain.name')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_ip_domain_name",
            "      IP:'ip'",
            "      DOMAIN_NAME:'domain-name'",
            "      hostname = (variable_hostname",
            "        VARIABLE:'my.domain.name')",
            "      USE_VRF:'use-vrf'",
            "      (variable",
            "        VARIABLE:'blip')",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_ip_name_server",
            "      IP:'ip'",
            "      NAME_SERVER:'name-server'",
            "      VRF:'vrf'",
            "      vrf = (variable",
            "        VARIABLE:'blip')",
            "      (ip_hostname",
            "        IP_ADDRESS:'1.2.3.4')",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_ip_name_server",
            "      IP:'ip'",
            "      NAME_SERVER:'name-server'",
            "      (ip_hostname",
            "        IP_ADDRESS:'1.2.3.4')",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_ip_name_server",
            "      IP:'ip'",
            "      NAME_SERVER:'name-server'",
            "      (ip_hostname",
            "        IP_ADDRESS:'1.2.3.4')",
            "      (ip_hostname",
            "        IP_ADDRESS:'2.3.4.5')",
            "      USE_VRF:'use-vrf'",
            "      vrf = (variable",
            "        MANAGEMENT:'management')",
            "      NEWLINE:'\\n'))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/cisco_dot11" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'cisco_dot11'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_dot11",
            "      DOT11:'dot11'",
            "      (null_rest_of_line",
            "        SSID:'ssid'",
            "        VARIABLE:'CENIC'",
            "        NEWLINE:'\\n')",
            "      (d11_null",
            "        ACCOUNTING:'accounting'",
            "        (null_rest_of_line",
            "          VARIABLE:'asdfgh'",
            "          NEWLINE:'\\n'))",
            "      (d11_null",
            "        AUTHENTICATION:'authentication'",
            "        (null_rest_of_line",
            "          VARIABLE:'open'  <== mode:M_Authentication",
            "          NEWLINE:'\\n'))",
            "      (d11_null",
            "        AUTHENTICATION:'authentication'",
            "        (null_rest_of_line",
            "          VARIABLE:'key-management'  <== mode:M_Authentication",
            "          VARIABLE:'wpa'",
            "          VERSION:'version'",
            "          DEC:'2'",
            "          NEWLINE:'\\n'))",
            "      (d11_null",
            "        GUEST_MODE:'guest-mode'",
            "        (null_rest_of_line",
            "          NEWLINE:'\\n'))",
            "      (d11_null",
            "        MAX_ASSOCIATIONS:'max-associations'",
            "        (null_rest_of_line",
            "          DEC:'5'",
            "          NEWLINE:'\\n'))",
            "      (d11_null",
            "        MBSSID:'mbssid'",
            "        (null_rest_of_line",
            "          GUEST_MODE:'guest-mode'",
            "          NEWLINE:'\\n'))",
            "      (d11_null",
            "        VLAN:'vlan'",
            "        (null_rest_of_line",
            "          DEC:'1'",
            "          NEWLINE:'\\n'))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/cisco_dot1x" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'cisco_dot1x'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_null",
            "      (null_block",
            "        DOT1X:'dot1x'",
            "        (null_rest_of_line",
            "          VARIABLE:'guest-vlan'",
            "          VARIABLE:'supplicant'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_null",
            "      (null_block",
            "        DOT1X:'dot1x'",
            "        (null_rest_of_line",
            "          VARIABLE:'supplicant'",
            "          VARIABLE:'controlled'",
            "          VARIABLE:'transient'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_null",
            "      (null_block",
            "        DOT1X:'dot1x'",
            "        (null_rest_of_line",
            "          VARIABLE:'supplicant'",
            "          VARIABLE:'force-multicast'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_null",
            "      (null_block",
            "        DOT1X:'dot1x'",
            "        (null_rest_of_line",
            "          VARIABLE:'system-auth-control'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_null",
            "      (null_block",
            "        DOT1X:'dot1x'",
            "        (null_rest_of_line",
            "          TEST:'test'",
            "          TIMEOUT:'timeout'",
            "          DEC:'30'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_null",
            "      (null_block",
            "        DOT1X:'dot1x'",
            "        (null_rest_of_line",
            "          TEST:'test'",
            "          TIMEOUT:'timeout'",
            "          DEC:'5'",
            "          NEWLINE:'\\n'))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/cisco_dscpfarm" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'cisco_dspfarm'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_dspfarm",
            "      DSPFARM:'dspfarm'",
            "      (null_rest_of_line",
            "        PROFILE:'profile'",
            "        DEC:'111'",
            "        VARIABLE:'transcode'",
            "        NEWLINE:'\\n')",
            "      (dspf_null",
            "        DESCRIPTION:'description'",
            "        (null_rest_of_line",
            "          RAW_TEXT:' transcode profile 111'  <== mode:M_Description",
            "          NEWLINE:'\\n'  <== mode:M_Description))",
            "      (dspf_null",
            "        CODEC:'codec'",
            "        (null_rest_of_line",
            "          VARIABLE:'g729abr8'",
            "          NEWLINE:'\\n'))",
            "      (dspf_null",
            "        CODEC:'codec'",
            "        (null_rest_of_line",
            "          VARIABLE:'g729ar8'",
            "          NEWLINE:'\\n'))",
            "      (dspf_null",
            "        CODEC:'codec'",
            "        (null_rest_of_line",
            "          VARIABLE:'g711alaw'",
            "          NEWLINE:'\\n'))",
            "      (dspf_null",
            "        CODEC:'codec'",
            "        (null_rest_of_line",
            "          VARIABLE:'g711ulaw'",
            "          NEWLINE:'\\n'))",
            "      (dspf_null",
            "        MAXIMUM:'maximum'",
            "        (null_rest_of_line",
            "          VARIABLE:'sessions'",
            "          DEC:'168'",
            "          NEWLINE:'\\n'))",
            "      (dspf_null",
            "        ASSOCIATE:'associate'",
            "        (null_rest_of_line",
            "          APPLICATION:'application'",
            "          VARIABLE:'SCCP'",
            "          NEWLINE:'\\n'))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/cisco_dynamic_access_policy_record" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'cisco_dynamic_access_policy_record'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_dynamic_access_policy_record",
            "      DYNAMIC_ACCESS_POLICY_RECORD:'dynamic-access-policy-record'",
            "      (null_rest_of_line",
            "        VARIABLE:'vvvvvv'",
            "        NEWLINE:'\\n')",
            "      (dapr_null",
            "        USER_MESSAGE:'user-message'",
            "        (null_rest_of_line",
            "          RAW_TEXT:' \"DISCONNECTED\"'  <== mode:M_Description",
            "          NEWLINE:'\\n'  <== mode:M_Description))",
            "      (dapr_null",
            "        ACTION:'action'",
            "        (null_rest_of_line",
            "          TERMINATE:'terminate'",
            "          NEWLINE:'\\n'))",
            "      (dapr_webvpn",
            "        WEBVPN:'webvpn'",
            "        NEWLINE:'\\n'",
            "        (daprw_null",
            "          URL_LIST:'url-list'",
            "          (null_rest_of_line",
            "            NONE:'none'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_dynamic_access_policy_record",
            "      DYNAMIC_ACCESS_POLICY_RECORD:'dynamic-access-policy-record'",
            "      (null_rest_of_line",
            "        VARIABLE:'DAP-incoming_generic'",
            "        NEWLINE:'\\n')",
            "      (dapr_webvpn",
            "        WEBVPN:'webvpn'",
            "        NEWLINE:'\\n'",
            "        (daprw_null",
            "          URL_LIST:'url-list'",
            "          (null_rest_of_line",
            "            NONE:'none'",
            "            NEWLINE:'\\n'))",
            "        (daprw_null",
            "          SVC:'svc'",
            "          (null_rest_of_line",
            "            VARIABLE:'ask'",
            "            ENABLE:'enable'",
            "            DEFAULT:'default'",
            "            SVC:'svc'",
            "            NEWLINE:'\\n'))",
            "        (daprw_null",
            "          ALWAYS_ON_VPN:'always-on-vpn'",
            "          (null_rest_of_line",
            "            VARIABLE:'profile-setting'",
            "            NEWLINE:'\\n')))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/cisco_eigrp" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'cisco_eigrp'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_object_group",
            "      OBJECT_GROUP:'object-group'",
            "      (og_ip_address",
            "        IP:'ip'  <== mode:M_ObjectGroup",
            "        ADDRESS:'address'",
            "        name = (variable_permissive",
            "          VARIABLE:'_anonymized_')",
            "        NEWLINE:'\\n'",
            "        (ogipa_ip_addresses",
            "          IP_ADDRESS:'1.1.1.1'",
            "          IP_ADDRESS:'1.1.1.0'",
            "          NEWLINE:'\\n\\n'))))",
            "  (stanza",
            "    (s_object_group",
            "      OBJECT_GROUP:'object-group'",
            "      (og_ip_address",
            "        IP:'ip'  <== mode:M_ObjectGroup",
            "        ADDRESS:'address'",
            "        name = (variable_permissive",
            "          VARIABLE:'_anonymized2_')",
            "        NEWLINE:'\\n'",
            "        (ogipa_host_info",
            "          HOST_INFO:'host-info'",
            "          IP_ADDRESS:'1.1.1.1'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_router_eigrp",
            "      (re_classic",
            "        ROUTER:'router'",
            "        EIGRP:'eigrp'",
            "        asnum = DEC:'5'",
            "        NEWLINE:'\\n'",
            "        (re_classic_tail",
            "          (rec_address_family",
            "            ADDRESS_FAMILY:'address-family'",
            "            IPV4:'ipv4'",
            "            UNICAST:'unicast'",
            "            VRF:'vrf'",
            "            vrf = (variable",
            "              DEFAULT:'default')",
            "            AUTONOMOUS_SYSTEM:'autonomous-system'",
            "            asnum = DEC:'55'",
            "            NEWLINE:'\\n'",
            "            (rec_address_family_tail",
            "              (re_autonomous_system",
            "                AUTONOMOUS_SYSTEM:'autonomous-system'",
            "                asnum = DEC:'65500'",
            "                NEWLINE:'\\n'))",
            "            (rec_address_family_tail",
            "              (rec_metric_weights",
            "                METRIC:'metric'",
            "                WEIGHTS:'weights'",
            "                tos = DEC:'0'",
            "                k1 = DEC:'1'",
            "                k2 = DEC:'2'",
            "                k3 = DEC:'3'",
            "                k4 = DEC:'4'",
            "                k5 = DEC:'5'",
            "                NEWLINE:'\\n'))",
            "            (rec_address_family_tail",
            "              (rec_address_family_null",
            "                METRIC:'metric'",
            "                MAXIMUM_HOPS:'maximum-hops'",
            "                (null_rest_of_line",
            "                  DEC:'11'",
            "                  NEWLINE:'\\n')))",
            "            (rec_address_family_tail",
            "              (re_network",
            "                NETWORK:'network'",
            "                address = IP_ADDRESS:'1.1.2.1'",
            "                NEWLINE:'\\n'))",
            "            (address_family_footer",
            "              EXIT_ADDRESS_FAMILY:'exit-address-family'",
            "              NEWLINE:'\\n')))",
            "        (re_classic_tail",
            "          (re_default_metric",
            "            DEFAULT_METRIC:'default-metric'",
            "            bw_kbps = DEC:'1'",
            "            delay_10us = DEC:'2'",
            "            reliability = DEC:'3'",
            "            eff_bw = DEC:'4'",
            "            mtu = DEC:'5'",
            "            NEWLINE:'\\n'))",
            "        (re_classic_tail",
            "          (re_eigrp_null",
            "            EIGRP:'eigrp'",
            "            EVENT_LOG_SIZE:'event-log-size'",
            "            (null_rest_of_line",
            "              DEC:'5000010'",
            "              NEWLINE:'\\n')))",
            "        (re_classic_tail",
            "          (re_eigrp_null",
            "            EIGRP:'eigrp'",
            "            LOG_NEIGHBOR_CHANGES:'log-neighbor-changes'",
            "            (null_rest_of_line",
            "              NEWLINE:'\\n')))",
            "        (re_classic_tail",
            "          (re_eigrp_null",
            "            EIGRP:'eigrp'",
            "            LOG_NEIGHBOR_WARNINGS:'log-neighbor-warnings'",
            "            (null_rest_of_line",
            "              DEC:'300'",
            "              NEWLINE:'\\n')))",
            "        (re_classic_tail",
            "          (re_eigrp_router_id",
            "            EIGRP:'eigrp'",
            "            ROUTER_ID:'router-id'",
            "            id = IP_ADDRESS:'100.1.1.1'",
            "            NEWLINE:'\\n'))",
            "        (re_classic_tail",
            "          (rec_null",
            "            METRIC:'metric'",
            "            MAXIMUM_HOPS:'maximum-hops'",
            "            (null_rest_of_line",
            "              DEC:'12'",
            "              NEWLINE:'\\n')))",
            "        (re_classic_tail",
            "          (rec_metric_weights",
            "            METRIC:'metric'",
            "            WEIGHTS:'weights'",
            "            tos = DEC:'0'",
            "            k1 = DEC:'1'",
            "            k2 = DEC:'2'",
            "            k3 = DEC:'3'",
            "            k4 = DEC:'4'",
            "            k5 = DEC:'5'",
            "            NEWLINE:'\\n'))",
            "        (re_classic_tail",
            "          (re_network",
            "            NETWORK:'network'",
            "            address = IP_ADDRESS:'1.1.1.1'",
            "            mask = IP_ADDRESS:'255.255.255.255'",
            "            NEWLINE:'\\n'))",
            "        (re_classic_tail",
            "          (re_network",
            "            NETWORK:'network'",
            "            address = IP_ADDRESS:'5.5.5.5'",
            "            NEWLINE:'\\n'))",
            "        (re_classic_tail",
            "          (rec_null",
            "            NO:'no'",
            "            AUTO_SUMMARY:'auto-summary'",
            "            (null_rest_of_line",
            "              NEWLINE:'\\n')))",
            "        (re_classic_tail",
            "          (re_passive_interface",
            "            NO:'no'",
            "            PASSIVE_INTERFACE:'passive-interface'",
            "            i = (interface_name",
            "              name_prefix_alpha = M_Interface_PREFIX:'GigabitEthernet'  <== mode:M_Interface",
            "              DEC:'1'  <== mode:M_Interface",
            "              FORWARD_SLASH:'/'  <== mode:M_Interface",
            "              DEC:'5'  <== mode:M_Interface",
            "              FORWARD_SLASH:'/'  <== mode:M_Interface",
            "              (range",
            "                (subrange",
            "                  low = DEC:'3'  <== mode:M_Interface)))",
            "            NEWLINE:'\\n'  <== mode:M_Interface))",
            "        (re_classic_tail",
            "          (re_passive_interface",
            "            NO:'no'",
            "            PASSIVE_INTERFACE:'passive-interface'",
            "            i = (interface_name",
            "              name_prefix_alpha = M_Interface_PREFIX:'GigabitEthernet'  <== mode:M_Interface",
            "              DEC:'2'  <== mode:M_Interface",
            "              FORWARD_SLASH:'/'  <== mode:M_Interface",
            "              DEC:'5'  <== mode:M_Interface",
            "              FORWARD_SLASH:'/'  <== mode:M_Interface",
            "              (range",
            "                (subrange",
            "                  low = DEC:'3'  <== mode:M_Interface)))",
            "            NEWLINE:'\\n'  <== mode:M_Interface))",
            "        (re_classic_tail",
            "          (re_passive_interface",
            "            NO:'no'",
            "            PASSIVE_INTERFACE:'passive-interface'",
            "            i = (interface_name",
            "              name_prefix_alpha = M_Interface_PREFIX:'Port-channel'  <== mode:M_Interface",
            "              (range",
            "                (subrange",
            "                  low = DEC:'34'  <== mode:M_Interface)))",
            "            NEWLINE:'\\n'  <== mode:M_Interface))",
            "        (re_classic_tail",
            "          (re_passive_interface",
            "            NO:'no'",
            "            PASSIVE_INTERFACE:'passive-interface'",
            "            i = (interface_name",
            "              name_prefix_alpha = M_Interface_PREFIX:'Port-channel'  <== mode:M_Interface",
            "              (range",
            "                (subrange",
            "                  low = DEC:'35'  <== mode:M_Interface)))",
            "            NEWLINE:'\\n'  <== mode:M_Interface))",
            "        (re_classic_tail",
            "          (rec_null",
            "            NO:'no'",
            "            TRAFFIC_SHARE:'traffic-share'",
            "            (null_rest_of_line",
            "              VARIABLE:'balanced'",
            "              NEWLINE:'\\n')))",
            "        (re_classic_tail",
            "          (rec_null",
            "            NSF:'nsf'",
            "            (null_rest_of_line",
            "              NEWLINE:'\\n')))",
            "        (re_classic_tail",
            "          (rec_null",
            "            OFFSET_LIST:'offset-list'",
            "            (null_rest_of_line",
            "              DEC:'21'",
            "              OUT:'out'",
            "              DEC:'10'",
            "              NEWLINE:'\\n')))",
            "        (re_classic_tail",
            "          (re_passive_interface_default",
            "            PASSIVE_INTERFACE:'passive-interface'",
            "            DEFAULT:'default'  <== mode:M_Interface",
            "            NEWLINE:'\\n'))",
            "        (re_classic_tail",
            "          (re_redistribute",
            "            (re_redistribute_bgp",
            "              REDISTRIBUTE:'redistribute'",
            "              BGP:'bgp'",
            "              asn = (bgp_asn",
            "                asn4b = FLOAT:'1.2')",
            "              ROUTE_MAP:'route-map'",
            "              map = (variable",
            "                VARIABLE:'BGP_TO_EIGRP'  <== mode:M_RouteMap)",
            "              NEWLINE:'\\n')))",
            "        (re_classic_tail",
            "          (re_redistribute",
            "            (re_redistribute_connected",
            "              REDISTRIBUTE:'redistribute'",
            "              CONNECTED:'connected'",
            "              ROUTE_MAP:'route-map'",
            "              map = (variable",
            "                VARIABLE:'CONNECTED_TO_EIGRP'  <== mode:M_RouteMap)",
            "              NEWLINE:'\\n')))",
            "        (re_classic_tail",
            "          (re_redistribute",
            "            (re_redistribute_eigrp",
            "              REDISTRIBUTE:'redistribute'",
            "              EIGRP:'eigrp'",
            "              asn = DEC:'3'",
            "              ROUTE_MAP:'route-map'",
            "              map = (variable",
            "                VARIABLE:'EIGRP_TO_EIGRP'  <== mode:M_RouteMap)",
            "              NEWLINE:'\\n')))",
            "        (re_classic_tail",
            "          (re_redistribute",
            "            (re_redistribute_isis",
            "              REDISTRIBUTE:'redistribute'",
            "              ISIS:'isis'",
            "              ROUTE_MAP:'route-map'",
            "              map = (variable",
            "                VARIABLE:'ISIS_TO_EIGRP'  <== mode:M_RouteMap)",
            "              NEWLINE:'\\n')))",
            "        (re_classic_tail",
            "          (re_redistribute",
            "            (re_redistribute_ospf",
            "              REDISTRIBUTE:'redistribute'",
            "              OSPF:'ospf'",
            "              proc = DEC:'4'",
            "              ROUTE_MAP:'route-map'",
            "              map = (variable",
            "                VARIABLE:'OSPF_TO_EIGRP'  <== mode:M_RouteMap)",
            "              NEWLINE:'\\n')))",
            "        (re_classic_tail",
            "          (re_redistribute",
            "            (re_redistribute_rip",
            "              REDISTRIBUTE:'redistribute'",
            "              RIP:'rip'",
            "              ROUTE_MAP:'route-map'",
            "              map = (variable",
            "                VARIABLE:'RIP_TO_EIGRP'  <== mode:M_RouteMap)",
            "              NEWLINE:'\\n')))",
            "        (re_classic_tail",
            "          (re_redistribute",
            "            (re_redistribute_static",
            "              REDISTRIBUTE:'redistribute'",
            "              STATIC:'static'",
            "              METRIC:'metric'",
            "              bw_kbps = DEC:'10000'",
            "              delay_10us = DEC:'10'",
            "              reliability = DEC:'255'",
            "              eff_bw = DEC:'1'",
            "              mtu = DEC:'1500'",
            "              ROUTE_MAP:'route-map'",
            "              map = (variable",
            "                VARIABLE:'STATIC_TO_EIGRP'  <== mode:M_RouteMap)",
            "              NEWLINE:'\\n')))",
            "        (re_classic_tail",
            "          (rec_null",
            "            TRAFFIC_SHARE:'traffic-share'",
            "            (null_rest_of_line",
            "              VARIABLE:'balanced'",
            "              NEWLINE:'\\n')))",
            "        (re_classic_tail",
            "          (rec_null",
            "            VARIANCE:'variance'",
            "            (null_rest_of_line",
            "              DEC:'4'",
            "              NEWLINE:'\\n'))))))",
            "  (stanza",
            "    (s_router_eigrp",
            "      (re_classic",
            "        ROUTER:'router'",
            "        EIGRP:'eigrp'",
            "        asnum = DEC:'6'",
            "        NEWLINE:'\\n'",
            "        (re_classic_tail",
            "          (re_default_metric",
            "            NO:'no'",
            "            DEFAULT_METRIC:'default-metric'",
            "            NEWLINE:'\\n'))",
            "        (re_classic_tail",
            "          (re_redistribute",
            "            (re_redistribute_eigrp",
            "              REDISTRIBUTE:'redistribute'",
            "              EIGRP:'eigrp'",
            "              asn = DEC:'4'",
            "              NEWLINE:'\\n'))))))",
            "  (stanza",
            "    (extended_access_list_stanza",
            "      IP:'ip'",
            "      ACCESS_LIST:'access-list'",
            "      EXTENDED:'extended'",
            "      name = (variable_aclname",
            "        VARIABLE:'bippety')",
            "      NEWLINE:'\\n'",
            "      (extended_access_list_tail",
            "        ala = (access_list_action",
            "          PERMIT:'permit')",
            "        prot = (protocol",
            "          TCP:'tcp')",
            "        srcipr = (access_list_ip_range",
            "          ip = IP_ADDRESS:'30.9.132.0'",
            "          wildcard = IP_ADDRESS:'0.0.1.255')",
            "        dstipr = (access_list_ip_range",
            "          HOST:'host'",
            "          ip = IP_ADDRESS:'1.1.1.1')",
            "        alps_dst = (port_specifier",
            "          RANGE:'range'",
            "          arg1 = (port",
            "            DEC:'48000')",
            "          arg2 = (port",
            "            DEC:'48060'))",
            "        NEWLINE:'\\n')",
            "      (extended_access_list_null_tail",
            "        REMARK:'remark'",
            "        (null_rest_of_line",
            "          M_REMARK_REMARK:' **  Blah blah'  <== mode:M_REMARK",
            "          NEWLINE:'\\n'  <== mode:M_REMARK))",
            "      (extended_access_list_tail",
            "        ala = (access_list_action",
            "          PERMIT:'permit')",
            "        prot = (protocol",
            "          TCP:'tcp')",
            "        srcipr = (access_list_ip_range",
            "          HOST:'host'",
            "          ip = IP_ADDRESS:'1.1.1.1')",
            "        dstipr = (access_list_ip_range",
            "          ANY:'any')",
            "        alps_dst = (port_specifier",
            "          EQ:'eq'",
            "          (port",
            "            DEC:'27401'))",
            "        NEWLINE:'\\n')",
            "      (extended_access_list_tail",
            "        ala = (access_list_action",
            "          PERMIT:'permit')",
            "        prot = (protocol",
            "          TCP:'tcp')",
            "        srcipr = (access_list_ip_range",
            "          ANY:'any')",
            "        dstipr = (access_list_ip_range",
            "          HOST:'host'",
            "          ip = IP_ADDRESS:'1.1.1.1')",
            "        alps_dst = (port_specifier",
            "          EQ:'eq'",
            "          (port",
            "            DEC:'65001'))",
            "        NEWLINE:'\\n')",
            "      (extended_access_list_tail",
            "        ala = (access_list_action",
            "          PERMIT:'permit')",
            "        prot = (protocol",
            "          TCP:'tcp')",
            "        srcipr = (access_list_ip_range",
            "          HOST:'host'",
            "          ip = IP_ADDRESS:'1.1.1.1')",
            "        dstipr = (access_list_ip_range",
            "          ANY:'any')",
            "        alps_dst = (port_specifier",
            "          EQ:'eq'",
            "          (port",
            "            DEC:'20000'))",
            "        NEWLINE:'\\n')",
            "      (extended_access_list_tail",
            "        ala = (access_list_action",
            "          PERMIT:'permit')",
            "        prot = (protocol",
            "          TCP:'tcp')",
            "        srcipr = (access_list_ip_range",
            "          ANY:'any')",
            "        dstipr = (access_list_ip_range",
            "          HOST:'host'",
            "          ip = IP_ADDRESS:'1.1.1.1')",
            "        alps_dst = (port_specifier",
            "          EQ:'eq'",
            "          (port",
            "            DEC:'65111'))",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_block",
            "        DEFAULT_VALUE:'default-value'",
            "        (null_rest_of_line",
            "          VARIABLE:'exec-character-bits'",
            "          DEC:'7'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_null",
            "      (null_block",
            "        DEFAULT_VALUE:'default-value'",
            "        (null_rest_of_line",
            "          VARIABLE:'special-character-bits'",
            "          DEC:'7'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_null",
            "      (null_block",
            "        DEFAULT_VALUE:'default-value'",
            "        (null_rest_of_line",
            "          VARIABLE:'data-character-bits'",
            "          DEC:'8'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_call_home",
            "      CALL_HOME:'call-home'",
            "      (null_rest_of_line",
            "        NEWLINE:'\\n')",
            "      (call_home_null",
            "        PHONE_NUMBER:'phone-number'",
            "        (null_rest_of_line",
            "          DOUBLE_QUOTE:'\"'",
            "          PLUS:'+'",
            "          DEC:'100'",
            "          DASH:'-'",
            "          DEC:'000'",
            "          DASH:'-'",
            "          DEC:'0000'",
            "          DOUBLE_QUOTE:'\"'",
            "          NEWLINE:'\\n'))",
            "      (call_home_null",
            "        STREET_ADDRESS:'street-address'",
            "        (null_rest_of_line",
            "          VARIABLE:'_anonymized_'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_null",
            "      (null_block",
            "        MODULE:'module'",
            "        (null_rest_of_line",
            "          PROVISION:'provision'",
            "          SWITCH:'switch'",
            "          DEC:'1'",
            "          NEWLINE:'\\n')",
            "        (null_inner",
            "          SLOT:'slot'",
            "          (null_rest_of_line",
            "            DEC:'1'",
            "            VARIABLE:'slot-type'",
            "            DEC:'227'",
            "            PORT_TYPE:'port-type'",
            "            DEC:'60'",
            "            VARIABLE:'number'",
            "            DEC:'8'",
            "            VARIABLE:'virtual-slot'",
            "            DEC:'17'",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          SLOT:'slot'",
            "          (null_rest_of_line",
            "            DEC:'2'",
            "            VARIABLE:'slot-type'",
            "            DEC:'227'",
            "            PORT_TYPE:'port-type'",
            "            DEC:'60'",
            "            VARIABLE:'number'",
            "            DEC:'8'",
            "            VARIABLE:'virtual-slot'",
            "            DEC:'18'",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          SLOT:'slot'",
            "          (null_rest_of_line",
            "            DEC:'3'",
            "            VARIABLE:'slot-type'",
            "            DEC:'227'",
            "            PORT_TYPE:'port-type'",
            "            DEC:'60'",
            "            VARIABLE:'number'",
            "            DEC:'8'",
            "            VARIABLE:'virtual-slot'",
            "            DEC:'19'",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          SLOT:'slot'",
            "          (null_rest_of_line",
            "            DEC:'4'",
            "            VARIABLE:'slot-type'",
            "            DEC:'227'",
            "            PORT_TYPE:'port-type'",
            "            DEC:'60'",
            "            VARIABLE:'number'",
            "            DEC:'8'",
            "            VARIABLE:'virtual-slot'",
            "            DEC:'20'",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          SLOT:'slot'",
            "          (null_rest_of_line",
            "            DEC:'5'",
            "            VARIABLE:'slot-type'",
            "            DEC:'254'",
            "            PORT_TYPE:'port-type'",
            "            DEC:'31'",
            "            VARIABLE:'number'",
            "            DEC:'2'",
            "            PORT_TYPE:'port-type'",
            "            DEC:'61'",
            "            VARIABLE:'number'",
            "            DEC:'1'",
            "            PORT_TYPE:'port-type'",
            "            DEC:'60'",
            "            VARIABLE:'number'",
            "            DEC:'2'",
            "            VARIABLE:'virtual-slot'",
            "            DEC:'21'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_null",
            "      (null_block",
            "        MODULE:'module'",
            "        (null_rest_of_line",
            "          PROVISION:'provision'",
            "          SWITCH:'switch'",
            "          DEC:'2'",
            "          NEWLINE:'\\n')",
            "        (null_inner",
            "          SLOT:'slot'",
            "          (null_rest_of_line",
            "            DEC:'1'",
            "            VARIABLE:'slot-type'",
            "            DEC:'227'",
            "            PORT_TYPE:'port-type'",
            "            DEC:'60'",
            "            VARIABLE:'number'",
            "            DEC:'8'",
            "            VARIABLE:'virtual-slot'",
            "            DEC:'33'",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          SLOT:'slot'",
            "          (null_rest_of_line",
            "            DEC:'2'",
            "            VARIABLE:'slot-type'",
            "            DEC:'227'",
            "            PORT_TYPE:'port-type'",
            "            DEC:'60'",
            "            VARIABLE:'number'",
            "            DEC:'8'",
            "            VARIABLE:'virtual-slot'",
            "            DEC:'34'",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          SLOT:'slot'",
            "          (null_rest_of_line",
            "            DEC:'3'",
            "            VARIABLE:'slot-type'",
            "            DEC:'227'",
            "            PORT_TYPE:'port-type'",
            "            DEC:'60'",
            "            VARIABLE:'number'",
            "            DEC:'8'",
            "            VARIABLE:'virtual-slot'",
            "            DEC:'35'",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          SLOT:'slot'",
            "          (null_rest_of_line",
            "            DEC:'4'",
            "            VARIABLE:'slot-type'",
            "            DEC:'227'",
            "            PORT_TYPE:'port-type'",
            "            DEC:'60'",
            "            VARIABLE:'number'",
            "            DEC:'8'",
            "            VARIABLE:'virtual-slot'",
            "            DEC:'36'",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          SLOT:'slot'",
            "          (null_rest_of_line",
            "            DEC:'5'",
            "            VARIABLE:'slot-type'",
            "            DEC:'254'",
            "            PORT_TYPE:'port-type'",
            "            DEC:'31'",
            "            VARIABLE:'number'",
            "            DEC:'2'",
            "            PORT_TYPE:'port-type'",
            "            DEC:'61'",
            "            VARIABLE:'number'",
            "            DEC:'1'",
            "            PORT_TYPE:'port-type'",
            "            DEC:'60'",
            "            VARIABLE:'number'",
            "            DEC:'2'",
            "            VARIABLE:'virtual-slot'",
            "            DEC:'37'",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          SLOT:'slot'",
            "          (null_rest_of_line",
            "            DEC:'9'",
            "            VARIABLE:'slot-type'",
            "            DEC:'156'",
            "            PORT_TYPE:'port-type'",
            "            DEC:'31'",
            "            VARIABLE:'number'",
            "            DEC:'24'",
            "            VARIABLE:'virtual-slot'",
            "            DEC:'41'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_call_home",
            "      CALL_HOME:'call-home'",
            "      (null_rest_of_line",
            "        NEWLINE:'\\n')",
            "      (call_home_null",
            "        SENDER:'sender'",
            "        (null_rest_of_line",
            "          FROM:'from'",
            "          VARIABLE:'email@email.com'",
            "          NEWLINE:'\\n'))",
            "      (call_home_null",
            "        SENDER:'sender'",
            "        (null_rest_of_line",
            "          REPLY_TO:'reply-to'",
            "          VARIABLE:'email@email.com'",
            "          NEWLINE:'\\n'))",
            "      (call_home_null",
            "        CONTACT_EMAIL_ADDR:'contact-email-addr'",
            "        (null_rest_of_line",
            "          VARIABLE:'email@email.com'",
            "          NEWLINE:'\\n'))",
            "      (call_home_null",
            "        CONTRACT_ID:'contract-id'",
            "        (null_rest_of_line",
            "          DOUBLE_QUOTE:'\"'",
            "          DEC:'8675309'",
            "          DOUBLE_QUOTE:'\"'",
            "          NEWLINE:'\\n'))",
            "      (call_home_null",
            "        SITE_ID:'site-id'",
            "        (null_rest_of_line",
            "          VARIABLE:'_anonymized_'",
            "          NEWLINE:'\\n'))",
            "      (call_home_null",
            "        ALERT_GROUP:'alert-group'",
            "        (null_rest_of_line",
            "          CONFIGURATION:'configuration'",
            "          NEWLINE:'\\n'))",
            "      (call_home_null",
            "        ALERT_GROUP:'alert-group'",
            "        (null_rest_of_line",
            "          DIAGNOSTIC:'diagnostic'",
            "          NEWLINE:'\\n'))",
            "      (call_home_null",
            "        ALERT_GROUP:'alert-group'",
            "        (null_rest_of_line",
            "          ENVIRONMENT:'environment'",
            "          NEWLINE:'\\n'))",
            "      (call_home_null",
            "        ALERT_GROUP:'alert-group'",
            "        (null_rest_of_line",
            "          VARIABLE:'inventory'",
            "          NEWLINE:'\\n'))",
            "      (call_home_null",
            "        ALERT_GROUP:'alert-group'",
            "        (null_rest_of_line",
            "          SYSLOG:'syslog'",
            "          NEWLINE:'\\n'))",
            "      (call_home_null",
            "        MAIL_SERVER:'mail-server'",
            "        (null_rest_of_line",
            "          VARIABLE:'XXXXXXXXXXXXXX'",
            "          PRIORITY:'priority'",
            "          DEC:'5'",
            "          NEWLINE:'\\n'))",
            "      (call_home_profile",
            "        PROFILE:'profile'",
            "        (null_rest_of_line",
            "          VARIABLE:'_anonymized_'",
            "          NEWLINE:'\\n')",
            "        (call_home_profile_null",
            "          ACTIVE:'active'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n'))",
            "        (call_home_profile_null",
            "          NO:'no'",
            "          DESTINATION:'destination'",
            "          (null_rest_of_line",
            "            TRANSPORT_METHOD:'transport-method'",
            "            HTTP:'http'",
            "            NEWLINE:'\\n'))",
            "        (call_home_profile_null",
            "          DESTINATION:'destination'",
            "          (null_rest_of_line",
            "            TRANSPORT_METHOD:'transport-method'",
            "            EMAIL:'email'",
            "            NEWLINE:'\\n'))",
            "        (call_home_profile_null",
            "          DESTINATION:'destination'",
            "          (null_rest_of_line",
            "            ADDRESS:'address'",
            "            EMAIL:'email'",
            "            VARIABLE:'XXXXXXXXXXXXXXXXXX'",
            "            NEWLINE:'\\n'))",
            "        (call_home_profile_null",
            "          DESTINATION:'destination'",
            "          (null_rest_of_line",
            "            ADDRESS:'address'",
            "            HTTP:'http'",
            "            VARIABLE:'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX'",
            "            NEWLINE:'\\n'))",
            "        (call_home_profile_null",
            "          SUBSCRIBE_TO_ALERT_GROUP:'subscribe-to-alert-group'",
            "          (null_rest_of_line",
            "            DIAGNOSTIC:'diagnostic'",
            "            SEVERITY:'severity'",
            "            VARIABLE:'minor'",
            "            NEWLINE:'\\n'))",
            "        (call_home_profile_null",
            "          SUBSCRIBE_TO_ALERT_GROUP:'subscribe-to-alert-group'",
            "          (null_rest_of_line",
            "            ENVIRONMENT:'environment'",
            "            SEVERITY:'severity'",
            "            VARIABLE:'minor'",
            "            NEWLINE:'\\n'))",
            "        (call_home_profile_null",
            "          SUBSCRIBE_TO_ALERT_GROUP:'subscribe-to-alert-group'",
            "          (null_rest_of_line",
            "            SYSLOG:'syslog'",
            "            SEVERITY:'severity'",
            "            VARIABLE:'major'",
            "            VARIABLE:'pattern'",
            "            DOUBLE_QUOTE:'\"'",
            "            PERIOD:'.'",
            "            ASTERISK:'*'",
            "            DOUBLE_QUOTE:'\"'",
            "            NEWLINE:'\\n'))",
            "        (call_home_profile_null",
            "          SUBSCRIBE_TO_ALERT_GROUP:'subscribe-to-alert-group'",
            "          (null_rest_of_line",
            "            CONFIGURATION:'configuration'",
            "            PERIODIC:'periodic'",
            "            VARIABLE:'monthly'",
            "            DEC:'1'",
            "            DEC:'1'",
            "            COLON:':'",
            "            DEC:'00'",
            "            NEWLINE:'\\n'))",
            "        (call_home_profile_null",
            "          SUBSCRIBE_TO_ALERT_GROUP:'subscribe-to-alert-group'",
            "          (null_rest_of_line",
            "            VARIABLE:'inventory'",
            "            PERIODIC:'periodic'",
            "            VARIABLE:'monthly'",
            "            DEC:'1'",
            "            DEC:'1'",
            "            COLON:':'",
            "            DEC:'00'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        MLS:'mls'",
            "        AGING:'aging'",
            "        VARIABLE:'fast'",
            "        TIME:'time'",
            "        DEC:'16'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        MLS:'mls'",
            "        AGING:'aging'",
            "        VARIABLE:'long'",
            "        DEC:'64'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        MLS:'mls'",
            "        AGING:'aging'",
            "        VARIABLE:'normal'",
            "        DEC:'64'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        MLS:'mls'",
            "        EXCLUDE:'exclude'",
            "        VARIABLE:'acl-deny'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        MLS:'mls'",
            "        VARIABLE:'netflow'",
            "        INTERFACE:'interface'",
            "        NEWLINE:'\\n'  <== mode:M_Interface)))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        MLS:'mls'",
            "        VARIABLE:'netflow'",
            "        VARIABLE:'usage'",
            "        NOTIFY:'notify'",
            "        DEC:'80'",
            "        DEC:'300'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        MLS:'mls'",
            "        FLOW:'flow'",
            "        IP:'ip'",
            "        VARIABLE:'interface-full'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        MLS:'mls'",
            "        VARIABLE:'nde'",
            "        SENDER:'sender'",
            "        VERSION:'version'",
            "        DEC:'5'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        MLS:'mls'",
            "        QOS:'qos'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        MLS:'mls'",
            "        RATE_LIMIT:'rate-limit'",
            "        UNICAST:'unicast'",
            "        IP:'ip'",
            "        ICMP:'icmp'",
            "        UNREACHABLE:'unreachable'",
            "        VARIABLE:'acl-drop'",
            "        DEC:'0'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        MLS:'mls'",
            "        RATE_LIMIT:'rate-limit'",
            "        CAPTURE:'capture'",
            "        DEC:'2000'",
            "        DEC:'1'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        MLS:'mls'",
            "        CEF:'cef'",
            "        ERROR:'error'",
            "        ACTION:'action'",
            "        VARIABLE:'reset'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_block",
            "        SWITCH:'switch'",
            "        (null_rest_of_line",
            "          VIRTUAL:'virtual'",
            "          DOMAIN:'domain'",
            "          DEC:'21'",
            "          NEWLINE:'\\n')",
            "        (null_inner",
            "          DUAL_ACTIVE:'dual-active'",
            "          (null_rest_of_line",
            "            VARIABLE:'detection'",
            "            PAGP:'pagp'",
            "            TRUST:'trust'",
            "            CHANNEL_GROUP:'channel-group'",
            "            DEC:'34'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (extended_access_list_stanza",
            "      IP:'ip'",
            "      ACCESS_LIST:'access-list'",
            "      EXTENDED:'extended'",
            "      name = (variable_aclname",
            "        VARIABLE:'bloop_blop')",
            "      NEWLINE:'\\n'",
            "      (extended_access_list_tail",
            "        ala = (access_list_action",
            "          PERMIT:'permit')",
            "        prot = (protocol",
            "          TCP:'tcp')",
            "        srcipr = (access_list_ip_range",
            "          ADDRGROUP:'addrgroup'",
            "          address_group = (variable",
            "            VARIABLE:'bleep_blorp'))",
            "        dstipr = (access_list_ip_range",
            "          ANY:'any')",
            "        alps_dst = (port_specifier",
            "          EQ:'eq'",
            "          (port",
            "            DEC:'13000'))",
            "        NEWLINE:'\\n\\n')))",
            "  (stanza",
            "    (s_router_eigrp",
            "      (re_named",
            "        ROUTER:'router'",
            "        EIGRP:'eigrp'",
            "        virtname = (variable",
            "          VIRTUAL:'virtual')",
            "        NEWLINE:'\\n'",
            "        (re_named_tail",
            "          (ren_address_family",
            "            ADDRESS_FAMILY:'address-family'",
            "            IPV4:'ipv4'",
            "            MULTICAST:'multicast'",
            "            VRF:'vrf'",
            "            vrf = (variable",
            "              AUTONOMOUS_SYSTEM:'autonomous-system')",
            "            AUTONOMOUS_SYSTEM:'autonomous-system'",
            "            asnum = DEC:'4'",
            "            NEWLINE:'\\n'",
            "            (ren_address_family_tail",
            "              (reaf_interface",
            "                AF_INTERFACE:'af-interface'",
            "                iname = (interface_name",
            "                  name_prefix_alpha = M_Interface_PREFIX:'Ethernet'  <== mode:M_Interface",
            "                  (range",
            "                    (subrange",
            "                      low = DEC:'0'  <== mode:M_Interface)))",
            "                NEWLINE:'\\n'  <== mode:M_Interface",
            "                (reaf_interface_tail",
            "                  (reaf_interface_null",
            "                    ADD_PATHS:'add-paths'",
            "                    (null_rest_of_line",
            "                      DEC:'4'",
            "                      NEWLINE:'\\n')))",
            "                (reaf_interface_tail",
            "                  (reaf_interface_null",
            "                    BANDWIDTH_PERCENT:'bandwidth-percent'",
            "                    (null_rest_of_line",
            "                      DEC:'75'",
            "                      NEWLINE:'\\n')))",
            "                (reaf_interface_tail",
            "                  (reaf_interface_null",
            "                    DAMPENING_CHANGE:'dampening-change'",
            "                    (null_rest_of_line",
            "                      DEC:'75'",
            "                      NEWLINE:'\\n')))",
            "                (reaf_interface_tail",
            "                  (reaf_interface_null",
            "                    DAMPENING_INTERVAL:'dampening-interval'",
            "                    (null_rest_of_line",
            "                      DEC:'45'",
            "                      NEWLINE:'\\n')))",
            "                (reaf_interface_tail",
            "                  (reaf_interface_null",
            "                    HOLD_TIME:'hold-time'",
            "                    (null_rest_of_line",
            "                      DEC:'40'",
            "                      NEWLINE:'\\n')))",
            "                (reaf_interface_tail",
            "                  (reafi_passive_interface",
            "                    PASSIVE_INTERFACE:'passive-interface'",
            "                    NEWLINE:'\\n'  <== mode:M_Interface))",
            "                EXIT_AF_INTERFACE:'exit-af-interface'",
            "                NEWLINE:'\\n'))",
            "            (ren_address_family_tail",
            "              (re_eigrp_null",
            "                EIGRP:'eigrp'",
            "                DEFAULT_ROUTE_TAG:'default-route-tag'",
            "                (null_rest_of_line",
            "                  DEC:'2'",
            "                  NEWLINE:'\\n')))",
            "            (ren_address_family_tail",
            "              (ren_address_family_null",
            "                METRIC:'metric'",
            "                RIB_SCALE:'rib-scale'",
            "                (null_rest_of_line",
            "                  DEC:'100'",
            "                  NEWLINE:'\\n')))",
            "            (ren_address_family_tail",
            "              (ren_metric_weights",
            "                METRIC:'metric'",
            "                WEIGHTS:'weights'",
            "                tos = DEC:'0'",
            "                k1 = DEC:'1'",
            "                k2 = DEC:'2'",
            "                k3 = DEC:'3'",
            "                k4 = DEC:'4'",
            "                k5 = DEC:'5'",
            "                k6 = DEC:'6'",
            "                NEWLINE:'\\n'))",
            "            (ren_address_family_tail",
            "              (re_network",
            "                NETWORK:'network'",
            "                address = IP_ADDRESS:'1.1.1.100'",
            "                NEWLINE:'\\n'))",
            "            (ren_address_family_tail",
            "              (ren_address_family_null",
            "                REMOTE_NEIGHBORS:'remote-neighbors'",
            "                (null_rest_of_line",
            "                  SOURCE:'source'",
            "                  VARIABLE:'GigabitEthernet0/0/1'",
            "                  VARIABLE:'unicast-listen'",
            "                  VARIABLE:'lisp-encap'",
            "                  DEC:'2'",
            "                  NEWLINE:'\\n')))",
            "            (ren_address_family_tail",
            "              (reaf_topology",
            "                (re_topology_base",
            "                  TOPOLOGY:'topology'",
            "                  BASE:'base'",
            "                  NEWLINE:'\\n')",
            "                (reaf_topology_tail",
            "                  (reaf_topology_null",
            "                    METRIC:'metric'",
            "                    MAXIMUM_HOPS:'maximum-hops'",
            "                    (null_rest_of_line",
            "                      DEC:'10'",
            "                      NEWLINE:'\\n')))",
            "                (reaf_topology_tail",
            "                  (reaf_topology_null",
            "                    OFFSET_LIST:'offset-list'",
            "                    (null_rest_of_line",
            "                      DEC:'21'",
            "                      OUT:'out'",
            "                      DEC:'10'",
            "                      NEWLINE:'\\n')))",
            "                (reaf_topology_tail",
            "                  (reaf_topology_null",
            "                    SUMMARY_METRIC:'summary-metric'",
            "                    (null_rest_of_line",
            "                      IP_PREFIX:'192.168.0.0/16'",
            "                      DEC:'10000'",
            "                      DEC:'10'",
            "                      DEC:'255'",
            "                      DEC:'1'",
            "                      DEC:'1500'",
            "                      DISTANCE:'distance'",
            "                      DEC:'20'",
            "                      NEWLINE:'\\n')))",
            "                (reaf_topology_tail",
            "                  (reaf_topology_null",
            "                    TRAFFIC_SHARE:'traffic-share'",
            "                    (null_rest_of_line",
            "                      VARIABLE:'balanced'",
            "                      NEWLINE:'\\n')))",
            "                (reaf_topology_tail",
            "                  (reaf_topology_null",
            "                    VARIANCE:'variance'",
            "                    (null_rest_of_line",
            "                      DEC:'4'",
            "                      NEWLINE:'\\n')))",
            "                EXIT_AF_TOPOLOGY:'exit-af-topology'",
            "                NEWLINE:'\\n'))",
            "            (ren_address_family_tail",
            "              (reaf_topology",
            "                (re_topology_name",
            "                  TOPOLOGY:'topology'",
            "                  topo_name = (variable",
            "                    VARIABLE:'VOICE')",
            "                  TID:'tid'",
            "                  topo_num = DEC:'1000'",
            "                  NEWLINE:'\\n')",
            "                (reaf_topology_tail",
            "                  (reaf_topology_null",
            "                    NO:'no'",
            "                    AUTO_SUMMARY:'auto-summary'",
            "                    (null_rest_of_line",
            "                      NEWLINE:'\\n')))",
            "                EXIT_AF_TOPOLOGY:'exit-af-topology'",
            "                NEWLINE:'\\n'))",
            "            (ren_address_family_tail",
            "              (re_passive_interface_default",
            "                PASSIVE_INTERFACE:'passive-interface'",
            "                DEFAULT:'default'  <== mode:M_Interface",
            "                NEWLINE:'\\n'))",
            "            (ren_address_family_tail",
            "              (re_passive_interface",
            "                NO:'no'",
            "                PASSIVE_INTERFACE:'passive-interface'",
            "                i = (interface_name",
            "                  name_prefix_alpha = M_Interface_PREFIX:'FastEthernet'  <== mode:M_Interface",
            "                  DEC:'0'  <== mode:M_Interface",
            "                  FORWARD_SLASH:'/'  <== mode:M_Interface",
            "                  (range",
            "                    (subrange",
            "                      low = DEC:'1'  <== mode:M_Interface)))",
            "                NEWLINE:'\\n'  <== mode:M_Interface))",
            "            (address_family_footer",
            "              EXIT_ADDRESS_FAMILY:'exit-address-family'",
            "              NEWLINE:'\\n')))",
            "        (re_named_tail",
            "          (ren_service_family",
            "            SERVICE_FAMILY:'service-family'",
            "            IPV4:'ipv4'",
            "            VRF:'vrf'",
            "            vrf = (variable",
            "              SERVICE_FAMILY:'service-family')",
            "            AUTONOMOUS_SYSTEM:'autonomous-system'",
            "            asnum = DEC:'3'",
            "            NEWLINE:'\\n'",
            "            (ren_service_family_tail",
            "              (re_eigrp_null",
            "                EIGRP:'eigrp'",
            "                LOG_NEIGHBOR_CHANGES:'log-neighbor-changes'",
            "                (null_rest_of_line",
            "                  NEWLINE:'\\n')))",
            "            (ren_service_family_tail",
            "              (ren_metric_weights",
            "                METRIC:'metric'",
            "                WEIGHTS:'weights'",
            "                tos = DEC:'0'",
            "                k1 = DEC:'1'",
            "                k2 = DEC:'2'",
            "                k3 = DEC:'3'",
            "                k4 = DEC:'4'",
            "                k5 = DEC:'5'",
            "                k6 = DEC:'6'",
            "                NEWLINE:'\\n'))",
            "            (ren_service_family_tail",
            "              (resf_interface",
            "                SF_INTERFACE:'sf-interface'",
            "                iname = (interface_name",
            "                  name_prefix_alpha = M_Interface_PREFIX:'Ethernet'  <== mode:M_Interface",
            "                  (range",
            "                    (subrange",
            "                      low = DEC:'0'  <== mode:M_Interface)))",
            "                NEWLINE:'\\n'  <== mode:M_Interface",
            "                (resf_interface_tail",
            "                  (resf_interface_null",
            "                    BANDWIDTH_PERCENT:'bandwidth-percent'",
            "                    (null_rest_of_line",
            "                      DEC:'75'",
            "                      NEWLINE:'\\n')))",
            "                (resf_interface_tail",
            "                  (resf_interface_null",
            "                    DAMPENING_CHANGE:'dampening-change'",
            "                    (null_rest_of_line",
            "                      DEC:'75'",
            "                      NEWLINE:'\\n')))",
            "                (resf_interface_tail",
            "                  (resf_interface_null",
            "                    DAMPENING_INTERVAL:'dampening-interval'",
            "                    (null_rest_of_line",
            "                      DEC:'45'",
            "                      NEWLINE:'\\n')))",
            "                (resf_interface_tail",
            "                  (resf_interface_null",
            "                    HOLD_TIME:'hold-time'",
            "                    (null_rest_of_line",
            "                      DEC:'50'",
            "                      NEWLINE:'\\n')))",
            "                EXIT_SF_INTERFACE:'exit-sf-interface'",
            "                NEWLINE:'\\n'))",
            "            (ren_service_family_tail",
            "              (resf_interface_default",
            "                SF_INTERFACE:'sf-interface'",
            "                DEFAULT:'default'  <== mode:M_Interface",
            "                NEWLINE:'\\n'",
            "                (resf_interface_tail",
            "                  (resf_interface_null",
            "                    NO:'no'",
            "                    SPLIT_HORIZON:'split-horizon'",
            "                    (null_rest_of_line",
            "                      NEWLINE:'\\n')))",
            "                EXIT_SF_INTERFACE:'exit-sf-interface'",
            "                NEWLINE:'\\n'))",
            "            (ren_service_family_tail",
            "              (resf_topology",
            "                (re_topology_base",
            "                  TOPOLOGY:'topology'",
            "                  BASE:'base'",
            "                  NEWLINE:'\\n')",
            "                (resf_topology_tail",
            "                  (resf_topology_null",
            "                    METRIC:'metric'",
            "                    MAXIMUM_HOPS:'maximum-hops'",
            "                    (null_rest_of_line",
            "                      DEC:'20'",
            "                      NEWLINE:'\\n')))))",
            "            (resf_footer",
            "              EXIT_SERVICE_FAMILY:'exit-service-family'",
            "              NEWLINE:'\\n'))))))",
            "  (stanza",
            "    (s_interface",
            "      INTERFACE:'interface'",
            "      iname = (interface_name",
            "        name_prefix_alpha = M_Interface_PREFIX:'Ethernet'  <== mode:M_Interface",
            "        (range",
            "          (subrange",
            "            low = DEC:'0'  <== mode:M_Interface)))",
            "      NEWLINE:'\\n'  <== mode:M_Interface))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/cisco_enable" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'cisco_enable'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_enable",
            "      ENABLE:'enable'",
            "      (enable_null",
            "        READ_ONLY_PASSWORD:'read-only-password'",
            "        (null_rest_of_line",
            "          VARIABLE:'aaaaaaaaaaaaaaaaaaaaaa'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_enable",
            "      ENABLE:'enable'",
            "      (enable_secret",
            "        SECRET:'secret'",
            "        (double_quoted_string",
            "          DOUBLE_QUOTE:'\"'",
            "          ASTERISK:'*'",
            "          ASTERISK:'*'",
            "          ASTERISK:'*'",
            "          DOUBLE_QUOTE:'\"')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_enable",
            "      ENABLE:'enable'",
            "      (enable_secret",
            "        SECRET:'secret'",
            "        DEC:'5'",
            "        pass = (variable_secret",
            "          DOLLAR:'$'",
            "          DEC:'1'",
            "          RP_VARIABLE:'$aaaaaaaaaaaaaaaaaaaaaaaaaaa')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_enable",
            "      ENABLE:'enable'",
            "      (enable_null",
            "        SUPER_USER_PASSWORD:'super-user-password'",
            "        (null_rest_of_line",
            "          VARIABLE:'aaaaaaaaaaaaaaaaaaaaa'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_enable",
            "      ENABLE:'enable'",
            "      (enable_null",
            "        TELNET:'telnet'",
            "        (null_rest_of_line",
            "          AUTHENTICATION:'authentication'",
            "          NEWLINE:'\\n'  <== mode:M_Authentication))))",
            "  (stanza",
            "    (s_enable",
            "      ENABLE:'enable'",
            "      (enable_null",
            "        TELNET:'telnet'",
            "        (null_rest_of_line",
            "          PASSWORD:'password'",
            "          VARIABLE:'aaaaaaaaaaaaaaaaaaaaaaaaa'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_enable",
            "      ENABLE:'enable'",
            "      (enable_password",
            "        PASSWORD:'password'",
            "        (ep_sha512",
            "          sha512pass = SHA512_PASSWORD:'$sha512$5000$98pqLCa2lpNvN6gnQl3zyQ==$QvdeF/4E4qAATT2/e64ujg=='",
            "          seed = PASSWORD_SEED:'woldj4'  <== mode:M_Seed)",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_enable",
            "      ENABLE:'enable'",
            "      (enable_password",
            "        PASSWORD:'password'",
            "        LEVEL:'level'",
            "        level = DEC:'2'",
            "        (ep_plaintext",
            "          pass = (variable",
            "            VARIABLE:'pswd2'))",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_enable",
            "      ENABLE:'enable'",
            "      (enable_password",
            "        PASSWORD:'password'",
            "        LEVEL:'level'",
            "        level = DEC:'3'",
            "        (ep_cisco_encryption",
            "          type = DEC:'5'",
            "          pass = (variable_secret",
            "            DOLLAR:'$'",
            "            DEC:'1'",
            "            RP_VARIABLE:'$i5Rkls3LoyxzS8t9'))",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_enable",
            "      ENABLE:'enable'",
            "      (enable_password",
            "        PASSWORD:'password'",
            "        (ep_cisco_encryption",
            "          pass = (variable_secret",
            "            VARIABLE:'pswd3')",
            "          LEVEL:'level'",
            "          level = DEC:'1'",
            "          ENCRYPTED:'encrypted')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_enable",
            "      ENABLE:'enable'",
            "      (enable_password",
            "        PASSWORD:'password'",
            "        (ep_cisco_encryption",
            "          pass = (variable_secret",
            "            VARIABLE:'pswd4')",
            "          PBKDF2:'pbkdf2')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_no_enable",
            "      NO:'no'",
            "      ENABLE:'enable'",
            "      PASSWORD:'password'",
            "      LEVEL:'level'",
            "      level = DEC:'4'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_no_enable",
            "      NO:'no'",
            "      ENABLE:'enable'",
            "      PASSWORD:'password'",
            "      NEWLINE:'\\n'))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/cisco_flow" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'cisco_flow'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_flow",
            "      FLOW:'flow'",
            "      RECORD:'record'",
            "      (null_rest_of_line",
            "        VARIABLE:'FLOW_RECORD_V9_1'",
            "        NEWLINE:'\\n')",
            "      (flow_null",
            "        MATCH:'match'",
            "        (null_rest_of_line",
            "          IPV4:'ipv4'",
            "          TOS:'tos'",
            "          NEWLINE:'\\n'))",
            "      (flow_null",
            "        MATCH:'match'",
            "        (null_rest_of_line",
            "          IPV4:'ipv4'",
            "          PROTOCOL:'protocol'",
            "          NEWLINE:'\\n'))",
            "      (flow_null",
            "        MATCH:'match'",
            "        (null_rest_of_line",
            "          IPV4:'ipv4'",
            "          SOURCE:'source'",
            "          ADDRESS:'address'",
            "          NEWLINE:'\\n'))",
            "      (flow_null",
            "        MATCH:'match'",
            "        (null_rest_of_line",
            "          IPV4:'ipv4'",
            "          DESTINATION:'destination'",
            "          ADDRESS:'address'",
            "          NEWLINE:'\\n'))",
            "      (flow_null",
            "        MATCH:'match'",
            "        (null_rest_of_line",
            "          TRANSPORT:'transport'",
            "          VARIABLE:'source-port'",
            "          NEWLINE:'\\n'))",
            "      (flow_null",
            "        MATCH:'match'",
            "        (null_rest_of_line",
            "          TRANSPORT:'transport'",
            "          VARIABLE:'destination-port'",
            "          NEWLINE:'\\n'))",
            "      (flow_null",
            "        MATCH:'match'",
            "        (null_rest_of_line",
            "          INTERFACE:'interface'",
            "          M_Interface_PREFIX:'input'  <== mode:M_Interface",
            "          NEWLINE:'\\n'  <== mode:M_Interface))",
            "      (flow_null",
            "        COLLECT:'collect'",
            "        (null_rest_of_line",
            "          TRANSPORT:'transport'",
            "          TCP:'tcp'",
            "          VARIABLE:'flags'",
            "          NEWLINE:'\\n'))",
            "      (flow_null",
            "        COLLECT:'collect'",
            "        (null_rest_of_line",
            "          INTERFACE:'interface'",
            "          M_Interface_PREFIX:'output'  <== mode:M_Interface",
            "          NEWLINE:'\\n'  <== mode:M_Interface))",
            "      (flow_null",
            "        COLLECT:'collect'",
            "        (null_rest_of_line",
            "          COUNTER:'counter'",
            "          BYTES:'bytes'",
            "          NEWLINE:'\\n'))",
            "      (flow_null",
            "        COLLECT:'collect'",
            "        (null_rest_of_line",
            "          COUNTER:'counter'",
            "          PACKETS:'packets'",
            "          NEWLINE:'\\n'))",
            "      (flow_null",
            "        COLLECT:'collect'",
            "        (null_rest_of_line",
            "          TIMESTAMP:'timestamp'",
            "          VARIABLE:'sys-uptime'",
            "          VARIABLE:'first'",
            "          NEWLINE:'\\n'))",
            "      (flow_null",
            "        COLLECT:'collect'",
            "        (null_rest_of_line",
            "          TIMESTAMP:'timestamp'",
            "          VARIABLE:'sys-uptime'",
            "          VARIABLE:'last'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_flow",
            "      FLOW:'flow'",
            "      EXPORTER:'exporter'",
            "      (null_rest_of_line",
            "        VARIABLE:'FLOW_EXPORTER_1'",
            "        NEWLINE:'\\n')",
            "      (flow_null",
            "        DESCRIPTION:'description'",
            "        (null_rest_of_line",
            "          RAW_TEXT:' geriogjweoifjwofwf'  <== mode:M_Description",
            "          NEWLINE:'\\n'  <== mode:M_Description))",
            "      (flow_null",
            "        DESTINATION:'destination'",
            "        (null_rest_of_line",
            "          IP_ADDRESS:'1.2.3.4'",
            "          NEWLINE:'\\n'))",
            "      (flow_null",
            "        EXPORT_PROTOCOL:'export-protocol'",
            "        (null_rest_of_line",
            "          VARIABLE:'netflow-v5'",
            "          NEWLINE:'\\n'))",
            "      (flow_null",
            "        SOURCE:'source'",
            "        (null_rest_of_line",
            "          VARIABLE:'Loopback0'",
            "          NEWLINE:'\\n'))",
            "      (flow_null",
            "        TRANSPORT:'transport'",
            "        (null_rest_of_line",
            "          UDP:'udp'",
            "          DEC:'9807'",
            "          NEWLINE:'\\n'))",
            "      (flow_version",
            "        VERSION:'version'",
            "        (null_rest_of_line",
            "          VARIABLE:'v9'",
            "          NEWLINE:'\\n')",
            "        (flowv_null",
            "          OPTIONS:'options'",
            "          (null_rest_of_line",
            "            VARIABLE:'interface-table'",
            "            TIMEOUT:'timeout'",
            "            DEC:'60'",
            "            NEWLINE:'\\n'))",
            "        (flowv_null",
            "          OPTIONS:'options'",
            "          (null_rest_of_line",
            "            VARIABLE:'sampler-table'",
            "            TIMEOUT:'timeout'",
            "            DEC:'60'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_flow",
            "      FLOW:'flow'",
            "      EXPORTER_MAP:'exporter-map'",
            "      (null_rest_of_line",
            "        VARIABLE:'bbbbbb'",
            "        NEWLINE:'\\n')",
            "      (flow_null",
            "        TRANSPORT:'transport'",
            "        (null_rest_of_line",
            "          UDP:'udp'",
            "          DEC:'9901'",
            "          NEWLINE:'\\n'))",
            "      (flow_null",
            "        SOURCE:'source'",
            "        (null_rest_of_line",
            "          VARIABLE:'Loopback0'",
            "          NEWLINE:'\\n'))",
            "      (flow_null",
            "        DESTINATION:'destination'",
            "        (null_rest_of_line",
            "          IP_ADDRESS:'1.2.3.4'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_flow",
            "      FLOW:'flow'",
            "      MONITOR:'monitor'",
            "      (null_rest_of_line",
            "        VARIABLE:'FLOW_MONITOR_1'",
            "        NEWLINE:'\\n')",
            "      (flow_null",
            "        DESCRIPTION:'description'",
            "        (null_rest_of_line",
            "          RAW_TEXT:' fdgnuij53ht8953gh'  <== mode:M_Description",
            "          NEWLINE:'\\n'  <== mode:M_Description))",
            "      (flow_null",
            "        EXPORTER:'exporter'",
            "        (null_rest_of_line",
            "          VARIABLE:'FLOW_EXPORTER_1'",
            "          NEWLINE:'\\n'))",
            "      (flow_null",
            "        CACHE:'cache'",
            "        (null_rest_of_line",
            "          TIMEOUT:'timeout'",
            "          ACTIVE:'active'",
            "          DEC:'60'",
            "          NEWLINE:'\\n'))",
            "      (flow_null",
            "        STATISTICS:'statistics'",
            "        (null_rest_of_line",
            "          PACKET:'packet'",
            "          SIZE:'size'",
            "          NEWLINE:'\\n'))",
            "      (flow_null",
            "        RECORD:'record'",
            "        (null_rest_of_line",
            "          VARIABLE:'FLOW_RECORD_V9_1'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_flow",
            "      FLOW:'flow'",
            "      MONITOR_MAP:'monitor-map'",
            "      (null_rest_of_line",
            "        VARIABLE:'ddddddddddddd'",
            "        NEWLINE:'\\n')",
            "      (flow_null",
            "        RECORD:'record'",
            "        (null_rest_of_line",
            "          IPV4:'ipv4'",
            "          NEWLINE:'\\n'))",
            "      (flow_null",
            "        EXPORTER:'exporter'",
            "        (null_rest_of_line",
            "          VARIABLE:'fffffffffff'",
            "          NEWLINE:'\\n'))",
            "      (flow_null",
            "        CACHE:'cache'",
            "        (null_rest_of_line",
            "          VARIABLE:'entries'",
            "          DEC:'1000000'",
            "          NEWLINE:'\\n'))",
            "      (flow_null",
            "        CACHE:'cache'",
            "        (null_rest_of_line",
            "          TIMEOUT:'timeout'",
            "          ACTIVE:'active'",
            "          DEC:'290'",
            "          NEWLINE:'\\n'))",
            "      (flow_null",
            "        CACHE:'cache'",
            "        (null_rest_of_line",
            "          TIMEOUT:'timeout'",
            "          INACTIVE:'inactive'",
            "          DEC:'280'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_flow",
            "      FLOW:'flow'",
            "      PLATFORM:'platform'",
            "      (null_rest_of_line",
            "        CACHE:'cache'",
            "        TIMEOUT:'timeout'",
            "        INACTIVE:'inactive'",
            "        DEC:'60'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_flow",
            "      FLOW:'flow'",
            "      HARDWARE:'hardware'",
            "      (null_rest_of_line",
            "        EXPORT:'export'",
            "        THRESHOLD:'threshold'",
            "        DEC:'70'",
            "        LINECARD:'linecard'",
            "        DEC:'90'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_flow_sampler_map",
            "      FLOW_SAMPLER_MAP:'flow-sampler-map'",
            "      (null_rest_of_line",
            "        VARIABLE:'SAMPLE'",
            "        NEWLINE:'\\n')",
            "      (fsm_mode",
            "        MODE:'mode'",
            "        RANDOM:'random'",
            "        ONE_OUT_OF:'one-out-of'",
            "        DEC:'512'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_interface",
            "      INTERFACE:'interface'",
            "      iname = (interface_name",
            "        name_prefix_alpha = M_Interface_PREFIX:'GigabitEthernet'  <== mode:M_Interface",
            "        DEC:'0'  <== mode:M_Interface",
            "        FORWARD_SLASH:'/'  <== mode:M_Interface",
            "        (range",
            "          (subrange",
            "            low = DEC:'1'  <== mode:M_Interface)))",
            "      NEWLINE:'\\n'  <== mode:M_Interface",
            "      (if_inner",
            "        (if_flow_sampler",
            "          FLOW_SAMPLER:'flow-sampler'",
            "          (variable",
            "            VARIABLE:'SAMPLE')",
            "          NEWLINE:'\\n'))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/cisco_hardware" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'cisco_hardware'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_hardware",
            "      HARDWARE:'hardware'",
            "      (null_rest_of_line",
            "        PROFILE:'profile'",
            "        TCAM:'tcam'",
            "        RESOURCE:'resource'",
            "        TEMPLATE:'template'",
            "        DEFAULT:'default'",
            "        NEWLINE:'\\n')",
            "      (hardware_null",
            "        VACL:'vacl'",
            "        (null_rest_of_line",
            "          DEC:'1024'",
            "          NEWLINE:'\\n'))",
            "      (hardware_null",
            "        IFACL:'ifacl'",
            "        (null_rest_of_line",
            "          DEC:'1152'",
            "          NEWLINE:'\\n'))",
            "      (hardware_null",
            "        QOS:'qos'",
            "        (null_rest_of_line",
            "          DEC:'448'",
            "          NEWLINE:'\\n'))",
            "      (hardware_null",
            "        RBACL:'rbacl'",
            "        (null_rest_of_line",
            "          DEC:'1152'",
            "          NEWLINE:'\\n'))",
            "      (hardware_null",
            "        SPAN:'span'",
            "        (null_rest_of_line",
            "          DEC:'64'",
            "          NEWLINE:'\\n'))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/cisco_hsrp" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'cisco_hsrp'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (router_hsrp_stanza",
            "      ROUTER:'router'",
            "      HSRP:'hsrp'",
            "      NEWLINE:'\\n'",
            "      (router_hsrp_if",
            "        INTERFACE:'interface'",
            "        (interface_name",
            "          name_prefix_alpha = M_Interface_PREFIX:'TenGigE'  <== mode:M_Interface",
            "          DEC:'0'  <== mode:M_Interface",
            "          FORWARD_SLASH:'/'  <== mode:M_Interface",
            "          DEC:'0'  <== mode:M_Interface",
            "          FORWARD_SLASH:'/'  <== mode:M_Interface",
            "          DEC:'2'  <== mode:M_Interface",
            "          FORWARD_SLASH:'/'  <== mode:M_Interface",
            "          (range",
            "            (subrange",
            "              low = DEC:'3'  <== mode:M_Interface)))",
            "        NEWLINE:'\\n'  <== mode:M_Interface",
            "        (router_hsrp_if_af",
            "          ADDRESS_FAMILY:'address-family'",
            "          IPV4:'ipv4'",
            "          NEWLINE:'\\n'",
            "          HSRP:'hsrp'",
            "          NEWLINE:'\\n'",
            "          (router_hsrp_if_af_tail",
            "            PREEMPT:'preempt'",
            "            (null_rest_of_line",
            "              NEWLINE:'\\n'))",
            "          (router_hsrp_if_af_tail",
            "            ADDRESS:'address'",
            "            (null_rest_of_line",
            "              IP_ADDRESS:'137.164.220.247'",
            "              NEWLINE:'\\n'))",
            "          (router_hsrp_if_af_tail",
            "            TRACK:'track'",
            "            OBJECT:'object'",
            "            (null_rest_of_line",
            "              DEC:'1'",
            "              DEC:'2'",
            "              NEWLINE:'\\n')))",
            "        (router_hsrp_if_af",
            "          ADDRESS_FAMILY:'address-family'",
            "          IPV6:'ipv6'",
            "          NEWLINE:'\\n'",
            "          HSRP:'hsrp'",
            "          DEC:'132'",
            "          NEWLINE:'\\n'",
            "          (router_hsrp_if_af_tail",
            "            PREEMPT:'preempt'",
            "            (null_rest_of_line",
            "              NEWLINE:'\\n'))",
            "          (router_hsrp_if_af_tail",
            "            PRIORITY:'priority'",
            "            (null_rest_of_line",
            "              DEC:'95'",
            "              NEWLINE:'\\n'))",
            "          (router_hsrp_if_af_tail",
            "            ADDRESS:'address'",
            "            (null_rest_of_line",
            "              GLOBAL:'global'",
            "              IPV6_ADDRESS:'2001:67c:13c0:132::2'",
            "              NEWLINE:'\\n'))",
            "          (router_hsrp_if_af_tail",
            "            ADDRESS:'address'",
            "            (null_rest_of_line",
            "              VARIABLE:'linklocal'",
            "              VARIABLE:'autoconfig'",
            "              VARIABLE:'legacy-compatible'",
            "              NEWLINE:'\\n'))))",
            "      (router_hsrp_if",
            "        INTERFACE:'interface'",
            "        (interface_name",
            "          name_prefix_alpha = M_Interface_PREFIX:'TenGigE'  <== mode:M_Interface",
            "          DEC:'0'  <== mode:M_Interface",
            "          FORWARD_SLASH:'/'  <== mode:M_Interface",
            "          DEC:'0'  <== mode:M_Interface",
            "          FORWARD_SLASH:'/'  <== mode:M_Interface",
            "          DEC:'2'  <== mode:M_Interface",
            "          FORWARD_SLASH:'/'  <== mode:M_Interface",
            "          (range",
            "            (subrange",
            "              low = DEC:'2'  <== mode:M_Interface)))",
            "        NEWLINE:'\\n'  <== mode:M_Interface",
            "        (router_hsrp_if_af",
            "          ADDRESS_FAMILY:'address-family'",
            "          IPV4:'ipv4'",
            "          NEWLINE:'\\n'",
            "          HSRP:'hsrp'",
            "          DEC:'1'",
            "          NEWLINE:'\\n'",
            "          (router_hsrp_if_af_tail",
            "            PREEMPT:'preempt'",
            "            (null_rest_of_line",
            "              NEWLINE:'\\n'))",
            "          (router_hsrp_if_af_tail",
            "            PRIORITY:'priority'",
            "            (null_rest_of_line",
            "              DEC:'105'",
            "              NEWLINE:'\\n'))",
            "          (router_hsrp_if_af_tail",
            "            ADDRESS:'address'",
            "            (null_rest_of_line",
            "              IP_ADDRESS:'1.2.3.4'",
            "              NEWLINE:'\\n'))",
            "          (router_hsrp_if_af_tail",
            "            TRACK:'track'",
            "            OBJECT:'object'",
            "            (null_rest_of_line",
            "              VARIABLE:'StaticOriginationRoutes'",
            "              NEWLINE:'\\n'))",
            "          (router_hsrp_if_af_tail",
            "            AUTHENTICATION:'authentication'",
            "            (null_rest_of_line",
            "              VARIABLE:'SwiMCH15'  <== mode:M_Authentication",
            "              NEWLINE:'\\n'))))))",
            "  (stanza",
            "    (s_interface",
            "      INTERFACE:'interface'",
            "      iname = (interface_name",
            "        name_prefix_alpha = M_Interface_PREFIX:'TenGigE'  <== mode:M_Interface",
            "        DEC:'0'  <== mode:M_Interface",
            "        FORWARD_SLASH:'/'  <== mode:M_Interface",
            "        DEC:'0'  <== mode:M_Interface",
            "        FORWARD_SLASH:'/'  <== mode:M_Interface",
            "        DEC:'2'  <== mode:M_Interface",
            "        FORWARD_SLASH:'/'  <== mode:M_Interface",
            "        (range",
            "          (subrange",
            "            low = DEC:'2'  <== mode:M_Interface)))",
            "      NEWLINE:'\\n'  <== mode:M_Interface",
            "      (if_inner",
            "        (if_null_block",
            "          NO:'no'",
            "          HSRP:'hsrp'",
            "          BFD:'bfd'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          HSRP:'hsrp'",
            "          DELAY:'delay'",
            "          MINIMUM:'minimum'",
            "          DEC:'0'",
            "          RELOAD:'reload'",
            "          DEC:'0'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          NO:'no'",
            "          HSRP:'hsrp'",
            "          USE_BIA:'use-bia'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_hsrp",
            "          HSRP:'hsrp'",
            "          group = DEC:'123'",
            "          NEWLINE:'\\n'",
            "          (if_hsrp_null",
            "            AUTHENTICATION:'authentication'",
            "            (null_rest_of_line",
            "              VARIABLE:'cisco'  <== mode:M_Authentication",
            "              NEWLINE:'\\n'))",
            "          (if_hsrp_null",
            "            AUTHENTICATION:'authentication'",
            "            (null_rest_of_line",
            "              TEXT:'text'  <== mode:M_Authentication",
            "              VARIABLE:'blah'",
            "              NEWLINE:'\\n'))",
            "          (if_hsrp_ip_address",
            "            IP:'ip'",
            "            ip = IP_ADDRESS:'1.2.3.4'",
            "            NEWLINE:'\\n')",
            "          (if_hsrp_null",
            "            MAC_ADDRESS:'mac-address'",
            "            (null_rest_of_line",
            "              M_COMMENT_NON_NEWLINE:' 0123.4567.89AB'  <== mode:M_COMMENT",
            "              NEWLINE:'\\n'  <== mode:M_COMMENT))",
            "          (if_hsrp_null",
            "            NAME:'name'",
            "            (null_rest_of_line",
            "              VARIABLE:'bloop'  <== mode:M_Name",
            "              NEWLINE:'\\n'))",
            "          (if_hsrp_preempt",
            "            NO:'no'",
            "            PREEMPT:'preempt'",
            "            (null_rest_of_line",
            "              NEWLINE:'\\n'))",
            "          (if_hsrp_preempt",
            "            PREEMPT:'preempt'",
            "            (null_rest_of_line",
            "              DELAY:'delay'",
            "              MINIMUM:'minimum'",
            "              DEC:'300'",
            "              RELOAD:'reload'",
            "              DEC:'300'",
            "              SYNC:'sync'",
            "              DEC:'0'",
            "              NEWLINE:'\\n'))",
            "          (if_hsrp_priority",
            "            PRIORITY:'priority'",
            "            value = DEC:'100'",
            "            (null_rest_of_line",
            "              VARIABLE:'forwarding-threshold'",
            "              VARIABLE:'lower'",
            "              DEC:'0'",
            "              VARIABLE:'upper'",
            "              DEC:'100'",
            "              NEWLINE:'\\n'))",
            "          (if_hsrp_null",
            "            TIMERS:'timers'",
            "            (null_rest_of_line",
            "              DEC:'1'",
            "              DEC:'4'",
            "              NEWLINE:'\\n'))))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/cisco_interface" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'cisco_interface'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (extended_access_list_stanza",
            "      IP:'ip'",
            "      ACCESS_LIST:'access-list'",
            "      shortname = (variable",
            "        VARIABLE:'abc')",
            "      NEWLINE:'\\n'",
            "      (extended_access_list_tail",
            "        num = DEC:'10'",
            "        ala = (access_list_action",
            "          PERMIT:'permit')",
            "        prot = (protocol",
            "          TCP:'tcp')",
            "        srcipr = (access_list_ip_range",
            "          ANY:'any')",
            "        dstipr = (access_list_ip_range",
            "          ANY:'any')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_interface",
            "      INTERFACE:'interface'",
            "      iname = (interface_name",
            "        name_prefix_alpha = M_Interface_PREFIX:'Ethernet'  <== mode:M_Interface",
            "        (range",
            "          (subrange",
            "            low = DEC:'0'  <== mode:M_Interface)))",
            "      NEWLINE:'\\n'  <== mode:M_Interface",
            "      (if_inner",
            "        (if_null_block",
            "          ANTENNA:'antenna'",
            "          VARIABLE:'gain'",
            "          DEC:'6'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          ARP:'arp'",
            "          TIMEOUT:'timeout'",
            "          DEC:'240'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          AUTHENTICATION:'authentication'",
            "          CONTROL_DIRECTION:'control-direction'  <== mode:M_Authentication",
            "          IN:'in'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_bandwidth",
            "          BANDWIDTH:'bandwidth'",
            "          DEC:'20000000'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          NO:'no'",
            "          BANDWIDTH:'bandwidth'",
            "          INHERIT:'inherit'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          BGP_POLICY:'bgp-policy'",
            "          ACCOUNTING:'accounting'",
            "          INPUT:'input'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          BRIDGE_GROUP:'bridge-group'",
            "          DEC:'1'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          BRIDGE_GROUP:'bridge-group'",
            "          DEC:'1'",
            "          VARIABLE:'block-unknown-source'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          NO:'no'",
            "          BRIDGE_GROUP:'bridge-group'",
            "          DEC:'1'",
            "          VARIABLE:'source-learning'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          BRIDGE_GROUP:'bridge-group'",
            "          DEC:'1'",
            "          VARIABLE:'subscriber-loop-control'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          BRIDGE_GROUP:'bridge-group'",
            "          DEC:'1'",
            "          VARIABLE:'spanning-disabledinterface'",
            "          VARIABLE:'Ethernet0/0'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          NO:'no'",
            "          BRIDGE_GROUP:'bridge-group'",
            "          DEC:'1'",
            "          VARIABLE:'unicast-flooding'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          CARRIER_DELAY:'carrier-delay'",
            "          MSEC:'msec'",
            "          DEC:'100'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          CDP:'cdp'",
            "          ENABLE:'enable'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          CHANNEL:'channel'",
            "          DEC:'2462'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          CHANNEL:'channel'",
            "          VARIABLE:'width'",
            "          DEC:'80'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_channel_group",
            "          CHANNEL_GROUP:'channel-group'",
            "          num = DEC:'1'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_channel_group",
            "          CHANNEL_GROUP:'channel-group'",
            "          num = DEC:'1'",
            "          MODE:'mode'",
            "          ACTIVE:'active'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_channel_group",
            "          CHANNEL_GROUP:'channel-group'",
            "          num = DEC:'1'",
            "          MODE:'mode'",
            "          AUTO:'auto'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_channel_group",
            "          CHANNEL_GROUP:'channel-group'",
            "          num = DEC:'1'",
            "          MODE:'mode'",
            "          DESIRABLE:'desirable'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_channel_group",
            "          CHANNEL_GROUP:'channel-group'",
            "          num = DEC:'1'",
            "          MODE:'mode'",
            "          DESIRABLE:'desirable'",
            "          NON_SILENT:'non-silent'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_channel_group",
            "          CHANNEL_GROUP:'channel-group'",
            "          num = DEC:'1'",
            "          MODE:'mode'",
            "          DESIRABLE:'desirable'",
            "          SILENT:'silent'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_channel_group",
            "          CHANNEL_GROUP:'channel-group'",
            "          num = DEC:'1'",
            "          MODE:'mode'",
            "          ON:'on'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_channel_group",
            "          CHANNEL_GROUP:'channel-group'",
            "          num = DEC:'1'",
            "          MODE:'mode'",
            "          PASSIVE:'passive'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_delay",
            "          DELAY:'delay'",
            "          DEC:'1'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_description",
            "          (description_line",
            "            DESCRIPTION:'description'",
            "            text = RAW_TEXT:' description-goes-here'  <== mode:M_Description",
            "            NEWLINE:'\\n'  <== mode:M_Description)))",
            "      (if_inner",
            "        (if_null_block",
            "          NO:'no'",
            "          DESCRIPTION:'description'",
            "          NEWLINE:'\\n'  <== mode:M_Description))",
            "      (if_inner",
            "        (if_null_block",
            "          DFS:'dfs'",
            "          NEWLINE:'\\n'",
            "          (if_null_inner",
            "            DIALER:'dialer'",
            "            IDLE_TIMEOUT:'idle-timeout'",
            "            DEC:'60'",
            "            NEWLINE:'\\n')",
            "          (if_null_inner",
            "            DIALER:'dialer'",
            "            VARIABLE:'in-band'",
            "            NEWLINE:'\\n')))",
            "      (if_inner",
            "        (if_null_block",
            "          DIALER_GROUP:'dialer-group'",
            "          DEC:'5'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_shutdown",
            "          DISABLE:'disable'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_shutdown",
            "          NO:'no'",
            "          DISABLE:'disable'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_single",
            "          DOT1X:'dot1x'",
            "          VARIABLE:'pae'",
            "          VARIABLE:'authenticator'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_single",
            "          DOT1X:'dot1x'",
            "          TIMEOUT:'timeout'",
            "          VARIABLE:'tx-period'",
            "          DEC:'10'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          DSL:'dsl'",
            "          VARIABLE:'operating-mode'",
            "          AUTO:'auto'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          DUPLEX:'duplex'",
            "          VARIABLE:'full'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          ENABLE:'enable'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          ENCRYPTION:'encryption'",
            "          MODE:'mode'",
            "          VARIABLE:'ciphers'",
            "          VARIABLE:'aes-ccm'",
            "          VARIABLE:'tkip'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          ETHERNET:'ethernet'",
            "          UDLD:'udld'",
            "          NEWLINE:'\\n'",
            "          (if_null_inner",
            "            MODE:'mode'",
            "            VARIABLE:'normal'",
            "            NEWLINE:'\\n')))",
            "      (if_inner",
            "        (if_null_block",
            "          FLOWCONTROL:'flowcontrol'",
            "          RECEIVE:'receive'",
            "          VARIABLE:'off'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          FLOWCONTROL:'flowcontrol'",
            "          SEND:'send'",
            "          VARIABLE:'off'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          GIG_DEFAULT:'gig-default'",
            "          VARIABLE:'neg-off'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          NO:'no'",
            "          HARDWARE:'hardware'",
            "          MULTICAST:'multicast'",
            "          VARIABLE:'hw-hash'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          NO:'no'",
            "          HARDWARE:'hardware'",
            "          VARIABLE:'vethernet'",
            "          MAC:'mac'",
            "          VARIABLE:'filtering'",
            "          VARIABLE:'per-vlan'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          HOLD_QUEUE:'hold-queue'",
            "          DEC:'2000'",
            "          IN:'in'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_ip_access_group",
            "          IP:'ip'",
            "          ACCESS_GROUP:'access-group'",
            "          name = (variable",
            "            VARIABLE:'ag1')",
            "          IN:'in'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_ip_access_group",
            "          IP:'ip'",
            "          ACCESS_GROUP:'access-group'",
            "          name = (variable",
            "            VARIABLE:'ag2')",
            "          OUT:'out'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_ip_address",
            "          IP:'ip'",
            "          ADDRESS:'address'",
            "          prefix = IP_PREFIX:'2.3.4.0/29'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_ip_address",
            "          IP:'ip'",
            "          ADDRESS:'address'",
            "          ip = IP_ADDRESS:'13.9.2.2'",
            "          subnet = IP_ADDRESS:'255.255.255.255'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_ip_address",
            "          IP:'ip'",
            "          ADDRESS:'address'",
            "          VIRTUAL:'virtual'",
            "          prefix = IP_PREFIX:'1.2.3.4/27'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_no_ip_address",
            "          NO:'no'",
            "          IP:'ip'",
            "          ADDRESS:'address'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          IP:'ip'",
            "          ARP:'arp'",
            "          VARIABLE:'gratuitous'",
            "          REQUEST:'request'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          IP:'ip'",
            "          ARP:'arp'",
            "          VARIABLE:'gratuitous'",
            "          UPDATE:'update'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          NO:'no'",
            "          IP:'ip'",
            "          ARP:'arp'",
            "          VARIABLE:'inspection'",
            "          TRUST:'trust'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          IP:'ip'",
            "          ARP:'arp'",
            "          TIMEOUT:'timeout'",
            "          DEC:'1500'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          IP:'ip'",
            "          BGP:'bgp'",
            "          FAST_EXTERNAL_FALLOVER:'fast-external-fallover'",
            "          PERMIT:'permit'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_ip_dhcp",
            "          IP:'ip'",
            "          DHCP:'dhcp'",
            "          (ifdhcp_relay",
            "            RELAY:'relay'",
            "            (ifdhcpr_address",
            "              ADDRESS:'address'",
            "              address = IP_ADDRESS:'1.2.3.4'",
            "              NEWLINE:'\\n'))))",
            "      (if_inner",
            "        (if_ip_dhcp",
            "          IP:'ip'",
            "          DHCP:'dhcp'",
            "          (ifdhcp_relay",
            "            RELAY:'relay'",
            "            (ifdhcpr_address",
            "              ADDRESS:'address'",
            "              address = IP_ADDRESS:'2.3.4.5'",
            "              NEWLINE:'\\n'))))",
            "      (if_inner",
            "        (if_ip_dhcp",
            "          NO:'no'",
            "          IP:'ip'",
            "          DHCP:'dhcp'",
            "          (ifdhcp_relay",
            "            RELAY:'relay'",
            "            (ifdhcpr_null",
            "              INFORMATION:'information'",
            "              (null_rest_of_line",
            "                TRUSTED:'trusted'",
            "                NEWLINE:'\\n')))))",
            "      (if_inner",
            "        (if_ip_dhcp",
            "          NO:'no'",
            "          IP:'ip'",
            "          DHCP:'dhcp'",
            "          (ifdhcp_relay",
            "            RELAY:'relay'",
            "            (ifdhcpr_null",
            "              SUBNET_BROADCAST:'subnet-broadcast'",
            "              (null_rest_of_line",
            "                NEWLINE:'\\n')))))",
            "      (if_inner",
            "        (if_ip_dhcp",
            "          NO:'no'",
            "          IP:'ip'",
            "          DHCP:'dhcp'",
            "          (ifdhcp_null",
            "            SMART_RELAY:'smart-relay'",
            "            (null_rest_of_line",
            "              NEWLINE:'\\n'))))",
            "      (if_inner",
            "        (if_ip_dhcp",
            "          IP:'ip'",
            "          DHCP:'dhcp'",
            "          (ifdhcp_null",
            "            SNOOPING:'snooping'",
            "            (null_rest_of_line",
            "              LIMIT:'limit'",
            "              VARIABLE:'rate'",
            "              DEC:'10'",
            "              NEWLINE:'\\n'))))",
            "      (if_inner",
            "        (if_ip_dhcp",
            "          IP:'ip'",
            "          DHCP:'dhcp'",
            "          (ifdhcp_null",
            "            SNOOPING:'snooping'",
            "            (null_rest_of_line",
            "              TRUST:'trust'",
            "              NEWLINE:'\\n'))))",
            "      (if_inner",
            "        (if_ip_dhcp",
            "          NO:'no'",
            "          IP:'ip'",
            "          DHCP:'dhcp'",
            "          (ifdhcp_null",
            "            SNOOPING:'snooping'",
            "            (null_rest_of_line",
            "              TRUST:'trust'",
            "              NEWLINE:'\\n'))))",
            "      (if_inner",
            "        (if_ip_flow_monitor",
            "          IP:'ip'",
            "          FLOW:'flow'",
            "          MONITOR:'monitor'",
            "          name = (variable",
            "            VARIABLE:'some-flow-mon')",
            "          OUTPUT:'output'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_ip_helper_address",
            "          IP:'ip'",
            "          HELPER_ADDRESS:'helper-address'",
            "          address = IP_ADDRESS:'172.16.0.1'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_ip_helper_address",
            "          IP:'ip'",
            "          HELPER_ADDRESS:'helper-address'",
            "          address = IP_ADDRESS:'172.17.0.1'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_ip_igmp",
            "          IP:'ip'",
            "          IGMP:'igmp'",
            "          (ifigmp_access_group",
            "            ACCESS_GROUP:'access-group'",
            "            name = (variable",
            "              DEC:'1')",
            "            NEWLINE:'\\n')))",
            "      (if_inner",
            "        (if_ip_igmp",
            "          IP:'ip'",
            "          IGMP:'igmp'",
            "          (ifigmp_null",
            "            GROUP_TIMEOUT:'group-timeout'",
            "            (null_rest_of_line",
            "              DEC:'260'",
            "              NEWLINE:'\\n'))))",
            "      (if_inner",
            "        (if_ip_igmp",
            "          IP:'ip'",
            "          IGMP:'igmp'",
            "          (ifigmp_host_proxy",
            "            HOST_PROXY:'host-proxy'",
            "            (ifigmphp_access_list",
            "              ACCESS_LIST:'access-list'",
            "              name = (variable",
            "                VARIABLE:'hpaccesslist')",
            "              NEWLINE:'\\n'))))",
            "      (if_inner",
            "        (if_ip_igmp",
            "          IP:'ip'",
            "          IGMP:'igmp'",
            "          (ifigmp_null",
            "            JOIN_GROUP:'join-group'",
            "            (null_rest_of_line",
            "              IP_ADDRESS:'10.0.0.1'",
            "              NEWLINE:'\\n'))))",
            "      (if_inner",
            "        (if_ip_igmp",
            "          IP:'ip'",
            "          IGMP:'igmp'",
            "          (ifigmp_null",
            "            JOIN_GROUP:'join-group'",
            "            (null_rest_of_line",
            "              IP_ADDRESS:'10.0.0.1'",
            "              SOURCE:'source'",
            "              IP_ADDRESS:'10.0.0.2'",
            "              NEWLINE:'\\n'))))",
            "      (if_inner",
            "        (if_ip_igmp",
            "          IP:'ip'",
            "          IGMP:'igmp'",
            "          (ifigmp_null",
            "            LAST_MEMBER_QUERY_RESPONSE_TIME:'last-member-query-response-time'",
            "            (null_rest_of_line",
            "              DEC:'1'",
            "              NEWLINE:'\\n'))))",
            "      (if_inner",
            "        (if_ip_igmp",
            "          IP:'ip'",
            "          IGMP:'igmp'",
            "          (ifigmp_null",
            "            QUERY_INTERVAL:'query-interval'",
            "            (null_rest_of_line",
            "              DEC:'125'",
            "              NEWLINE:'\\n'))))",
            "      (if_inner",
            "        (if_ip_igmp",
            "          IP:'ip'",
            "          IGMP:'igmp'",
            "          (ifigmp_null",
            "            QUERY_MAX_RESPONSE_TIME:'query-max-response-time'",
            "            (null_rest_of_line",
            "              DEC:'10'",
            "              NEWLINE:'\\n'))))",
            "      (if_inner",
            "        (if_ip_igmp",
            "          IP:'ip'",
            "          IGMP:'igmp'",
            "          (ifigmp_null",
            "            QUERY_TIMEOUT:'query-timeout'",
            "            (null_rest_of_line",
            "              DEC:'255'",
            "              NEWLINE:'\\n'))))",
            "      (if_inner",
            "        (if_ip_igmp",
            "          IP:'ip'",
            "          IGMP:'igmp'",
            "          (ifigmp_null",
            "            ROBUSTNESS_VARIABLE:'robustness-variable'",
            "            (null_rest_of_line",
            "              DEC:'2'",
            "              NEWLINE:'\\n'))))",
            "      (if_inner",
            "        (if_null_block",
            "          IP:'ip'",
            "          MULTICAST:'multicast'",
            "          BOUNDARY:'boundary'",
            "          DEC:'1'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_ip_nat_destination",
            "          IP:'ip'",
            "          NAT:'nat'",
            "          DESTINATION:'destination'",
            "          STATIC:'static'",
            "          IP_ADDRESS:'1.2.3.4'",
            "          ACCESS_LIST:'access-list'",
            "          acl = (variable",
            "            VARIABLE:'mynatacl')",
            "          IP_ADDRESS:'2.3.4.5'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_ip_nat_inside",
            "          IP:'ip'",
            "          NAT:'nat'",
            "          INSIDE:'inside'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_ip_nat_outside",
            "          IP:'ip'",
            "          NAT:'nat'",
            "          OUTSIDE:'outside'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_ip_nat_source",
            "          IP:'ip'",
            "          NAT:'nat'",
            "          SOURCE:'source'",
            "          DYNAMIC:'dynamic'",
            "          ACCESS_LIST:'access-list'",
            "          acl = (variable",
            "            VARIABLE:'def')",
            "          OVERLOAD:'overload'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_ip_nat_source",
            "          IP:'ip'",
            "          NAT:'nat'",
            "          SOURCE:'source'",
            "          DYNAMIC:'dynamic'",
            "          ACCESS_LIST:'access-list'",
            "          acl = (variable",
            "            VARIABLE:'abc')",
            "          POOL:'pool'",
            "          pool = (variable",
            "            VARIABLE:'beeble')",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_ip_nbar",
            "          IP:'ip'",
            "          NBAR:'nbar'",
            "          PROTOCOL_DISCOVERY:'protocol-discovery'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          IP:'ip'",
            "          NHRP:'nhrp'",
            "          MAP:'map'",
            "          IP_ADDRESS:'130.59.254.2'",
            "          IP_ADDRESS:'130.59.32.21'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_ip_ospf_area",
            "          IP:'ip'",
            "          OSPF:'ospf'",
            "          procname = (variable",
            "            DEC:'1')",
            "          AREA:'area'",
            "          area = DEC:'0'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_ip_ospf_cost",
            "          IP:'ip'",
            "          OSPF:'ospf'",
            "          COST:'cost'",
            "          cost = DEC:'1'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_ip_ospf_dead_interval",
            "          IP:'ip'",
            "          OSPF:'ospf'",
            "          DEAD_INTERVAL:'dead-interval'",
            "          seconds = DEC:'40'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          IP:'ip'",
            "          OSPF:'ospf'",
            "          DEMAND_CIRCUIT:'demand-circuit'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_ip_ospf_hello_interval",
            "          IP:'ip'",
            "          OSPF:'ospf'",
            "          HELLO_INTERVAL:'hello-interval'",
            "          seconds = DEC:'10'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          IP:'ip'",
            "          OSPF:'ospf'",
            "          MESSAGE_DIGEST_KEY:'message-digest-key'",
            "          DEC:'20'",
            "          MD5:'md5'",
            "          DEC:'7'",
            "          VARIABLE:'0123456789ABCDEF012345'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_ip_ospf_passive_interface",
            "          IP:'ip'",
            "          OSPF:'ospf'",
            "          PASSIVE_INTERFACE:'passive-interface'",
            "          NEWLINE:'\\n'  <== mode:M_Interface))",
            "      (if_inner",
            "        (if_null_block",
            "          IP:'ip'",
            "          OSPF:'ospf'",
            "          PRIORITY:'priority'",
            "          DEC:'1'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          IP:'ip'",
            "          OSPF:'ospf'",
            "          RETRANSMIT_INTERVAL:'retransmit-interval'",
            "          DEC:'5'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          IP:'ip'",
            "          OSPF:'ospf'",
            "          TRANSMIT_DELAY:'transmit-delay'",
            "          DEC:'1'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_ip_passive_interface_eigrp",
            "          IP:'ip'",
            "          PASSIVE_INTERFACE:'passive-interface'",
            "          EIGRP:'eigrp'  <== mode:M_Interface",
            "          tag = DEC:'15'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_ip_passive_interface_eigrp",
            "          NO:'no'",
            "          IP:'ip'",
            "          PASSIVE_INTERFACE:'passive-interface'",
            "          EIGRP:'eigrp'  <== mode:M_Interface",
            "          tag = DEC:'15'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          IP:'ip'",
            "          PIM:'pim'",
            "          DENSE_MODE:'dense-mode'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          IP:'ip'",
            "          PIM:'pim'",
            "          DR_PRIORITY:'dr-priority'",
            "          DEC:'1'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          IP:'ip'",
            "          PIM:'pim'",
            "          HELLO_INTERVAL:'hello-interval'",
            "          DEC:'30000'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          IP:'ip'",
            "          PIM:'pim'",
            "          SPARSE_DENSE_MODE:'sparse-dense-mode'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          IP:'ip'",
            "          PIM:'pim'",
            "          SPARSE_MODE:'sparse-mode'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_ip_proxy_arp",
            "          IP:'ip'",
            "          PROXY_ARP:'proxy-arp'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_ip_proxy_arp",
            "          DEFAULT:'default'",
            "          IP:'ip'",
            "          PROXY_ARP:'proxy-arp'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_ip_proxy_arp",
            "          NO:'no'",
            "          IP:'ip'",
            "          PROXY_ARP:'proxy-arp'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          NO:'no'",
            "          IP:'ip'",
            "          REDIRECTS:'redirects'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          NO:'no'",
            "          IP:'ip'",
            "          ROUTE_CACHE:'route-cache'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_ip_router_isis",
            "          IP:'ip'",
            "          ROUTER:'router'",
            "          ISIS:'isis'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n')))",
            "      (if_inner",
            "        (if_ip_router_isis",
            "          IP:'ip'",
            "          ROUTER:'router'",
            "          ISIS:'isis'",
            "          (null_rest_of_line",
            "            VARIABLE:'xxxxx'",
            "            NEWLINE:'\\n')))",
            "      (if_inner",
            "        (if_ip_router_ospf_area",
            "          IP:'ip'",
            "          ROUTER:'router'",
            "          OSPF:'ospf'",
            "          procname = (variable",
            "            DEC:'1')",
            "          AREA:'area'",
            "          area = IP_ADDRESS:'0.1.2.3'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_ip_rtp",
            "          IP:'ip'",
            "          RTP:'rtp'",
            "          HEADER_COMPRESSION:'header-compression'",
            "          IPHC_FORMAT:'iphc-format'",
            "          PERIODIC_REFRESH:'periodic-refresh'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          IP:'ip'",
            "          SAP:'sap'",
            "          LISTEN:'listen'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_ip_sticky_arp",
            "          IP:'ip'",
            "          STICKY_ARP:'sticky-arp'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_ip_sticky_arp",
            "          NO:'no'",
            "          IP:'ip'",
            "          STICKY_ARP:'sticky-arp'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_ip_sticky_arp",
            "          IP:'ip'",
            "          STICKY_ARP:'sticky-arp'",
            "          IGNORE:'ignore'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_ip_summary_address",
            "          IP:'ip'",
            "          SUMMARY_ADDRESS:'summary-address'",
            "          EIGRP:'eigrp'",
            "          asn = DEC:'11'",
            "          addr = IP_ADDRESS:'10.1.2.3'",
            "          netmask = IP_ADDRESS:'255.255.255.255'",
            "          LEAK_MAP:'leak-map'",
            "          mapname = (variable",
            "            VARIABLE:'eigrp-leak-map')",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_single",
            "          IP:'ip'",
            "          TRAFFIC_EXPORT:'traffic-export'",
            "          APPLY:'apply'",
            "          VARIABLE:'some-traffix-export'",
            "          SIZE:'size'",
            "          DEC:'10000000'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          NO:'no'",
            "          IP:'ip'",
            "          UNREACHABLES:'unreachables'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          NO:'no'",
            "          IP:'ip'",
            "          VERIFY:'verify'",
            "          SOURCE:'source'",
            "          VARIABLE:'dhcp-snooping-vlan'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_ip_verify",
            "          IP:'ip'",
            "          VERIFY:'verify'",
            "          UNICAST:'unicast'",
            "          SOURCE:'source'",
            "          REACHABLE_VIA:'reachable-via'",
            "          RX:'rx'",
            "          acl = DEC:'167'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_ip_virtual_router",
            "          IP:'ip'",
            "          VIRTUAL_ROUTER:'virtual-router'",
            "          ADDRESS:'address'",
            "          address = IP_ADDRESS:'2.3.4.1'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_ip_vrf_autoclassify",
            "          IP:'ip'",
            "          VRF:'vrf'",
            "          AUTOCLASSIFY:'autoclassify'",
            "          SOURCE:'source'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_ip_vrf_forwarding",
            "          IP:'ip'",
            "          VRF:'vrf'",
            "          FORWARDING:'forwarding'",
            "          vrf = (variable",
            "            VARIABLE:'U_VRF')",
            "          DOWNSTREAM:'downstream'",
            "          vrf_down = (variable",
            "            VARIABLE:'D_VRF')",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_ip_vrf_receive",
            "          IP:'ip'",
            "          VRF:'vrf'",
            "          RECEIVE:'receive'",
            "          vrf = (variable",
            "            VARIABLE:'R_VRF')",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_ip_vrf_select",
            "          IP:'ip'",
            "          VRF:'vrf'",
            "          SELECT:'select'",
            "          SOURCE:'source'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_ip_vrf_sitemap",
            "          IP:'ip'",
            "          VRF:'vrf'",
            "          SITEMAP:'sitemap'",
            "          map = (variable",
            "            VARIABLE:'SITEMAP')",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          IP:'ip'",
            "          WCCP:'wccp'",
            "          DEC:'61'",
            "          REDIRECT:'redirect'",
            "          IN:'in'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_ip_access_group",
            "          IPV4:'ipv4'",
            "          ACCESS_GROUP:'access-group'",
            "          name = (variable",
            "            VARIABLE:'310-systems')",
            "          EGRESS:'egress'",
            "          HARDWARE_COUNT:'hardware-count'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_ip_address",
            "          IPV4:'ipv4'",
            "          ADDRESS:'address'",
            "          ip = IP_ADDRESS:'1.2.3.4'",
            "          subnet = IP_ADDRESS:'255.255.255.252'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          IPV4:'ipv4'",
            "          ICMP:'icmp'",
            "          UNREACHABLES:'unreachables'",
            "          DISABLE:'disable'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          IPV4:'ipv4'",
            "          POINT_TO_POINT:'point-to-point'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          IPV4:'ipv4'",
            "          UNNUMBERED:'unnumbered'",
            "          VARIABLE:'Loopback100'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          IPV6:'ipv6'",
            "          ADDRESS:'address'",
            "          IPV6_PREFIX:'2001:60:0:C00::B/128'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          IPV6:'ipv6'",
            "          ADDRESS:'address'",
            "          IPV6_PREFIX:'2222::1/64'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_ipv6",
            "          IPV6:'ipv6'",
            "          (if_ipv6_inner",
            "            (if_ipv6_enable",
            "              ENABLE:'enable'",
            "              NEWLINE:'\\n'))))",
            "      (if_inner",
            "        (if_null_block",
            "          IPV6:'ipv6'",
            "          ICMP:'icmp'",
            "          UNREACHABLES:'unreachables'",
            "          DISABLE:'disable'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          IPV6:'ipv6'",
            "          OSPF:'ospf'",
            "          DEC:'1'",
            "          AREA:'area'",
            "          DEC:'0'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          IPV6:'ipv6'",
            "          ROUTER:'router'",
            "          ISIS:'isis'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_isis_network",
            "          ISIS:'isis'",
            "          NETWORK:'network'",
            "          POINT_TO_POINT:'point-to-point'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_isis_metric",
            "          ISIS:'isis'",
            "          METRIC:'metric'",
            "          metric = DEC:'12345'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          L2_FILTER:'l2-filter'",
            "          VARIABLE:'bridge-group-acl'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          L2TRANSPORT:'l2transport'",
            "          NEWLINE:'\\n'",
            "          (if_null_inner",
            "            PROPAGATE:'propagate'",
            "            VARIABLE:'remote-status'",
            "            NEWLINE:'\\n')))",
            "      (if_inner",
            "        (if_null_block",
            "          LACP:'lacp'",
            "          VARIABLE:'fast-select-hot-standby'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          LACP:'lacp'",
            "          VARIABLE:'graceful-convergence'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          LACP:'lacp'",
            "          VARIABLE:'max-bundle'",
            "          DEC:'32'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          LACP:'lacp'",
            "          VARIABLE:'min-links'",
            "          DEC:'1'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_single",
            "          MAB:'mab'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          MPLS:'mpls'",
            "          IP:'ip'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          NO:'no'",
            "          LACP:'lacp'",
            "          VARIABLE:'suspend-individual'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          NO:'no'",
            "          LLDP:'lldp'",
            "          RECEIVE:'receive'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          NO:'no'",
            "          LLDP:'lldp'",
            "          TRANSMIT:'transmit'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_load_interval",
            "          LOAD_INTERVAL:'load-interval'",
            "          li = DEC:'30'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          LOAD_INTERVAL:'load-interval'",
            "          COUNTER:'counter'",
            "          DEC:'1'",
            "          DEC:'30'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          NO:'no'",
            "          LOAD_INTERVAL:'load-interval'",
            "          COUNTER:'counter'",
            "          DEC:'3'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          LOGGING:'logging'",
            "          EVENT:'event'",
            "          PORT:'port'",
            "          VARIABLE:'link-status'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          LOGGING:'logging'",
            "          EVENT:'event'",
            "          PORT:'port'",
            "          VARIABLE:'trunk-status'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          NO:'no'",
            "          MANAGEMENT:'management'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          MEDIUM:'medium'",
            "          BROADCAST:'broadcast'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_mtu",
            "          MTU:'mtu'",
            "          mtu_size = DEC:'1500'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          NO:'no'",
            "          NEGOTIATE:'negotiate'",
            "          AUTO:'auto'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          NV:'nv'",
            "          NEWLINE:'\\n'",
            "          (if_null_inner",
            "            SATELLITE_FABRIC_LINK:'satellite-fabric-link'",
            "            SATELLITE:'satellite'",
            "            DEC:'100'",
            "            NEWLINE:'\\n')",
            "          (if_null_inner",
            "            REMOTE_PORTS:'remote-ports'",
            "            VARIABLE:'GigabitEthernet'",
            "            DEC:'0'",
            "            FORWARD_SLASH:'/'",
            "            DEC:'0'",
            "            FORWARD_SLASH:'/'",
            "            DEC:'0'",
            "            DASH:'-'",
            "            DEC:'43'",
            "            NEWLINE:'\\n')))",
            "      (if_inner",
            "        (if_null_block",
            "          NTP:'ntp'",
            "          MULTICAST:'multicast'",
            "          KEY:'key'",
            "          DEC:'12'",
            "          TTL:'ttl'",
            "          DEC:'1'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          NO:'no'",
            "          OSPFV3:'ospfv3'",
            "          PASSIVE_INTERFACE:'passive-interface'",
            "          NEWLINE:'\\n'  <== mode:M_Interface))",
            "      (if_inner",
            "        (if_null_block",
            "          OSPFV3:'ospfv3'",
            "          NETWORK:'network'",
            "          POINT_TO_POINT:'point-to-point'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          PACKET:'packet'",
            "          VARIABLE:'latency'",
            "          THRESHOLD:'threshold'",
            "          DEC:'536870904'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          PEAKDETECT:'peakdetect'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          PLATFORM:'platform'",
            "          QOS:'qos'",
            "          TRUST:'trust'",
            "          NONE:'none'",
            "          REMARK:'remark'",
            "          NEWLINE:'\\n'  <== mode:M_REMARK))",
            "      (if_inner",
            "        (if_port_security",
            "          PORT:'port'",
            "          SECURITY:'security'",
            "          NEWLINE:'\\n'",
            "          (if_port_security_null",
            "            AGE:'age'",
            "            (null_rest_of_line",
            "              DEC:'2'",
            "              NEWLINE:'\\n'))",
            "          (if_port_security_null",
            "            ENABLE:'enable'",
            "            (null_rest_of_line",
            "              NEWLINE:'\\n'))",
            "          (if_port_security_null",
            "            MAXIMUM:'maximum'",
            "            (null_rest_of_line",
            "              DEC:'100'",
            "              NEWLINE:'\\n'))",
            "          (if_port_security_null",
            "            SECURE_MAC_ADDRESS:'secure-mac-address'",
            "            (null_rest_of_line",
            "              MAC_ADDRESS_LITERAL:'8618.88f2.eae1'",
            "              VLAN:'vlan'",
            "              DEC:'428'",
            "              AUTO:'auto'",
            "              NEWLINE:'\\n'))",
            "          (if_port_security_null",
            "            VIOLATION:'violation'",
            "            (null_rest_of_line",
            "              RESTRICT:'restrict'",
            "              NEWLINE:'\\n'))))",
            "      (if_inner",
            "        (if_null_block",
            "          NO:'no'",
            "          PORT_CHANNEL:'port-channel'",
            "          PORT:'port'",
            "          VARIABLE:'load-defer'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          PORT_TYPE:'port-type'",
            "          VARIABLE:'nni'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          PRIORITY_FLOW_CONTROL:'priority-flow-control'",
            "          MODE:'mode'",
            "          AUTO:'auto'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_private_vlan",
            "          PRIVATE_VLAN:'private-vlan'",
            "          MAPPING:'mapping'",
            "          (null_rest_of_line",
            "            DEC:'1001'",
            "            NEWLINE:'\\n')))",
            "      (if_inner",
            "        (if_private_vlan",
            "          PRIVATE_VLAN:'private-vlan'",
            "          MAPPING:'mapping'",
            "          ADD:'add'",
            "          (null_rest_of_line",
            "            DEC:'1002'",
            "            NEWLINE:'\\n')))",
            "      (if_inner",
            "        (if_private_vlan",
            "          PRIVATE_VLAN:'private-vlan'",
            "          MAPPING:'mapping'",
            "          REMOVE:'remove'",
            "          (null_rest_of_line",
            "            DEC:'1001'",
            "            NEWLINE:'\\n')))",
            "      (if_inner",
            "        (if_null_block",
            "          PVC:'pvc'",
            "          DEC:'8'",
            "          FORWARD_SLASH:'/'",
            "          DEC:'35'",
            "          NEWLINE:'\\n'",
            "          (if_null_inner",
            "            DIALER:'dialer'",
            "            VARIABLE:'pool-member'",
            "            DEC:'1'",
            "            NEWLINE:'\\n')",
            "          (if_null_inner",
            "            ENCAPSULATION:'encapsulation'",
            "            VARIABLE:'aal5snap'",
            "            NEWLINE:'\\n')",
            "          (if_null_inner",
            "            PROTOCOL:'protocol'",
            "            PPP:'ppp'",
            "            DIALER:'dialer'",
            "            NEWLINE:'\\n')))",
            "      (if_inner",
            "        (if_null_block",
            "          QUEUE_MONITOR:'queue-monitor'",
            "          LENGTH:'length'",
            "          VARIABLE:'thresholds'",
            "          DEC:'12'",
            "          DEC:'1'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_single",
            "          REDUNDANCY:'redundancy'",
            "          VARIABLE:'rii'",
            "          DEC:'1'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_single",
            "          REDUNDANCY:'redundancy'",
            "          GROUP:'group'",
            "          DEC:'1'",
            "          IP:'ip'",
            "          IP_ADDRESS:'1.2.3.4'",
            "          VARIABLE:'exclusive'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_routing_dynamic",
            "          ROUTING:'routing'",
            "          DYNAMIC:'dynamic'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_no_routing_dynamic",
            "          NO:'no'",
            "          ROUTING:'routing'",
            "          DYNAMIC:'dynamic'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_service_instance",
            "          SERVICE:'service'",
            "          INSTANCE:'instance'",
            "          id = DEC:'1'",
            "          ETHERNET:'ethernet'",
            "          NEWLINE:'\\n'",
            "          (if_si_inner",
            "            (if_si_bridge_domain",
            "              BRIDGE_DOMAIN:'bridge-domain'",
            "              id = DEC:'710'",
            "              NEWLINE:'\\n'))",
            "          (if_si_inner",
            "            (if_si_encapsulation",
            "              ENCAPSULATION:'encapsulation'",
            "              (null_rest_of_line",
            "                DEFAULT:'default'",
            "                NEWLINE:'\\n')))",
            "          (if_si_inner",
            "            (if_si_l2protocol",
            "              L2PROTOCOL:'l2protocol'",
            "              TUNNEL:'tunnel'",
            "              NEWLINE:'\\n'))",
            "          (if_si_inner",
            "            (if_si_service_policy",
            "              SERVICE_POLICY:'service-policy'",
            "              INPUT:'input'",
            "              policy_map = (variable",
            "                VARIABLE:'limit-access-to-1Gbps')",
            "              NEWLINE:'\\n'))",
            "          (if_si_inner",
            "            (if_si_service_policy",
            "              SERVICE_POLICY:'service-policy'",
            "              OUTPUT:'output'",
            "              policy_map = (variable",
            "                VARIABLE:'limit-access-to-1Gbps')",
            "              NEWLINE:'\\n'))",
            "          (if_si_inner",
            "            (if_si_rewrite",
            "              REWRITE:'rewrite'",
            "              (null_rest_of_line",
            "                INGRESS:'ingress'",
            "                TAG:'tag'",
            "                VARIABLE:'pop'",
            "                DEC:'1'",
            "                SYMMETRIC:'symmetric'",
            "                NEWLINE:'\\n')))))",
            "      (if_inner",
            "        (if_null_block",
            "          SHAPE:'shape'",
            "          VARIABLE:'rate'",
            "          DEC:'2000000'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_shutdown",
            "          SHUTDOWN:'shutdown'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_shutdown",
            "          NO:'no'",
            "          SHUTDOWN:'shutdown'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_shutdown",
            "          NO:'no'",
            "          SHUTDOWN:'shutdown'",
            "          LAN:'lan'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          SNMP:'snmp'",
            "          TRAP:'trap'",
            "          VARIABLE:'link-status'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_spanning_tree",
            "          NO:'no'",
            "          SPANNING_TREE:'spanning-tree'",
            "          (if_st_null",
            "            BPDUFILTER:'bpdufilter'",
            "            (null_rest_of_line",
            "              NEWLINE:'\\n'))))",
            "      (if_inner",
            "        (if_spanning_tree",
            "          NO:'no'",
            "          SPANNING_TREE:'spanning-tree'",
            "          (if_st_null",
            "            BPDUGUARD:'bpduguard'",
            "            (null_rest_of_line",
            "              NEWLINE:'\\n'))))",
            "      (if_inner",
            "        (if_spanning_tree",
            "          NO:'no'",
            "          SPANNING_TREE:'spanning-tree'",
            "          (if_st_null",
            "            BPDUGUARD:'bpduguard'",
            "            (null_rest_of_line",
            "              NV:'nv'",
            "              NEWLINE:'\\n'))))",
            "      (if_inner",
            "        (if_spanning_tree",
            "          SPANNING_TREE:'spanning-tree'",
            "          (if_st_null",
            "            BPDUFILTER:'bpdufilter'",
            "            (null_rest_of_line",
            "              DISABLE:'disable'",
            "              NEWLINE:'\\n'))))",
            "      (if_inner",
            "        (if_spanning_tree",
            "          SPANNING_TREE:'spanning-tree'",
            "          (if_st_null",
            "            BPDUGUARD:'bpduguard'",
            "            (null_rest_of_line",
            "              ENABLE:'enable'",
            "              NEWLINE:'\\n'))))",
            "      (if_inner",
            "        (if_spanning_tree",
            "          SPANNING_TREE:'spanning-tree'",
            "          (if_st_null",
            "            BPDUGUARD:'bpduguard'",
            "            (null_rest_of_line",
            "              DISABLE:'disable'",
            "              NEWLINE:'\\n'))))",
            "      (if_inner",
            "        (if_spanning_tree",
            "          SPANNING_TREE:'spanning-tree'",
            "          (if_st_null",
            "            BPDUFILTER:'bpdufilter'",
            "            (null_rest_of_line",
            "              ENABLE:'enable'",
            "              NEWLINE:'\\n'))))",
            "      (if_inner",
            "        (if_spanning_tree",
            "          SPANNING_TREE:'spanning-tree'",
            "          (if_st_null",
            "            COST:'cost'",
            "            (null_rest_of_line",
            "              AUTO:'auto'",
            "              NEWLINE:'\\n'))))",
            "      (if_inner",
            "        (if_spanning_tree",
            "          SPANNING_TREE:'spanning-tree'",
            "          (if_st_null",
            "            GUARD:'guard'",
            "            (null_rest_of_line",
            "              VARIABLE:'loop'",
            "              NEWLINE:'\\n'))))",
            "      (if_inner",
            "        (if_spanning_tree",
            "          SPANNING_TREE:'spanning-tree'",
            "          (if_st_null",
            "            GUARD:'guard'",
            "            (null_rest_of_line",
            "              NONE:'none'",
            "              NEWLINE:'\\n'))))",
            "      (if_inner",
            "        (if_spanning_tree",
            "          SPANNING_TREE:'spanning-tree'",
            "          (if_st_null",
            "            GUARD:'guard'",
            "            (null_rest_of_line",
            "              ROOT:'root'",
            "              NEWLINE:'\\n'))))",
            "      (if_inner",
            "        (if_spanning_tree",
            "          SPANNING_TREE:'spanning-tree'",
            "          (if_st_null",
            "            LINK_TYPE:'link-type'",
            "            (null_rest_of_line",
            "              AUTO:'auto'",
            "              NEWLINE:'\\n'))))",
            "      (if_inner",
            "        (if_spanning_tree",
            "          SPANNING_TREE:'spanning-tree'",
            "          (if_st_null",
            "            MST:'mst'",
            "            (null_rest_of_line",
            "              DEC:'0'",
            "              DASH:'-'",
            "              DEC:'1'",
            "              PORT_PRIORITY:'port-priority'",
            "              DEC:'64'",
            "              NEWLINE:'\\n'))))",
            "      (if_inner",
            "        (if_spanning_tree",
            "          SPANNING_TREE:'spanning-tree'",
            "          (if_st_null",
            "            MST:'mst'",
            "            (null_rest_of_line",
            "              VARIABLE:'pre-standard'",
            "              NEWLINE:'\\n'))))",
            "      (if_inner",
            "        (if_spanning_tree",
            "          SPANNING_TREE:'spanning-tree'",
            "          (if_st_null",
            "            PORT:'port'",
            "            (null_rest_of_line",
            "              TYPE:'type'",
            "              VARIABLE:'normal'",
            "              NEWLINE:'\\n'))))",
            "      (if_inner",
            "        (if_spanning_tree",
            "          SPANNING_TREE:'spanning-tree'",
            "          (if_st_null",
            "            PORT:'port'",
            "            (null_rest_of_line",
            "              TYPE:'type'",
            "              VARIABLE:'normal'",
            "              NEWLINE:'\\n'))))",
            "      (if_inner",
            "        (if_spanning_tree",
            "          SPANNING_TREE:'spanning-tree'",
            "          (if_st_null",
            "            PORT_PRIORITY:'port-priority'",
            "            (null_rest_of_line",
            "              DEC:'128'",
            "              NEWLINE:'\\n'))))",
            "      (if_inner",
            "        (if_spanning_tree",
            "          SPANNING_TREE:'spanning-tree'",
            "          (if_st_portfast",
            "            PORTFAST:'portfast'",
            "            NEWLINE:'\\n')))",
            "      (if_inner",
            "        (if_spanning_tree",
            "          SPANNING_TREE:'spanning-tree'",
            "          (if_st_portfast",
            "            PORTFAST:'portfast'",
            "            disable = DISABLE:'disable'",
            "            NEWLINE:'\\n')))",
            "      (if_inner",
            "        (if_spanning_tree",
            "          SPANNING_TREE:'spanning-tree'",
            "          (if_st_portfast",
            "            PORTFAST:'portfast'",
            "            edge = EDGE:'edge'",
            "            NEWLINE:'\\n')))",
            "      (if_inner",
            "        (if_spanning_tree",
            "          SPANNING_TREE:'spanning-tree'",
            "          (if_st_portfast",
            "            PORTFAST:'portfast'",
            "            edge = EDGE:'edge'",
            "            trunk = TRUNK:'trunk'",
            "            NEWLINE:'\\n')))",
            "      (if_inner",
            "        (if_spanning_tree",
            "          SPANNING_TREE:'spanning-tree'",
            "          (if_st_portfast",
            "            PORTFAST:'portfast'",
            "            network = NETWORK:'network'",
            "            NEWLINE:'\\n')))",
            "      (if_inner",
            "        (if_spanning_tree",
            "          SPANNING_TREE:'spanning-tree'",
            "          (if_st_portfast",
            "            PORTFAST:'portfast'",
            "            trunk = TRUNK:'trunk'",
            "            NEWLINE:'\\n')))",
            "      (if_inner",
            "        (if_spanning_tree",
            "          SPANNING_TREE:'spanning-tree'",
            "          (if_st_null",
            "            PRIORITY:'priority'",
            "            (null_rest_of_line",
            "              DEC:'1'",
            "              NEWLINE:'\\n'))))",
            "      (if_inner",
            "        (if_spanning_tree",
            "          SPANNING_TREE:'spanning-tree'",
            "          (if_st_null",
            "            PROTECT:'protect'",
            "            (null_rest_of_line",
            "              NEWLINE:'\\n'))))",
            "      (if_inner",
            "        (if_spanning_tree",
            "          SPANNING_TREE:'spanning-tree'",
            "          (if_st_null",
            "            VLAN:'vlan'",
            "            (null_rest_of_line",
            "              DEC:'888'",
            "              COST:'cost'",
            "              DEC:'8'",
            "              NEWLINE:'\\n'))))",
            "      (if_inner",
            "        (if_speed_ios_dot11radio",
            "          SPEED:'speed'",
            "          BASIC_6_0:'basic-6.0'",
            "          FLOAT:'9.0'",
            "          FLOAT:'12.0'",
            "          FLOAT:'18.0'",
            "          FLOAT:'24.0'",
            "          FLOAT:'36.0'",
            "          FLOAT:'48.0'",
            "          FLOAT:'54.0'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          SSID:'ssid'",
            "          VARIABLE:'blah'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          STATION_ROLE:'station-role'",
            "          ROOT:'root'",
            "          VARIABLE:'access-point'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          STBC:'stbc'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          NO:'no'",
            "          STORM_CONTROL:'storm-control'",
            "          ACTION:'action'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          STORM_CONTROL:'storm-control'",
            "          BROADCAST:'broadcast'",
            "          LEVEL:'level'",
            "          DEC:'100'",
            "          PERIOD:'.'",
            "          DEC:'00'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          STORM_CONTROL:'storm-control'",
            "          MULTICAST:'multicast'",
            "          LEVEL:'level'",
            "          DEC:'100'",
            "          PERIOD:'.'",
            "          DEC:'00'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          STORM_CONTROL:'storm-control'",
            "          UNICAST:'unicast'",
            "          LEVEL:'level'",
            "          DEC:'100'",
            "          PERIOD:'.'",
            "          DEC:'00'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_switchport",
            "          SWITCHPORT:'switchport'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          SWITCHPORT:'switchport'",
            "          BACKUP:'backup'",
            "          INTERFACE:'interface'",
            "          M_Interface_PREFIX:'Gi'  <== mode:M_Interface",
            "          DEC:'1'  <== mode:M_Interface",
            "          FORWARD_SLASH:'/'  <== mode:M_Interface",
            "          DEC:'0'  <== mode:M_Interface",
            "          NEWLINE:'\\n'  <== mode:M_Interface))",
            "      (if_inner",
            "        (if_null_block",
            "          SWITCHPORT:'switchport'",
            "          BACKUP:'backup'",
            "          INTERFACE:'interface'",
            "          M_Interface_PREFIX:'Gi'  <== mode:M_Interface",
            "          DEC:'1'  <== mode:M_Interface",
            "          FORWARD_SLASH:'/'  <== mode:M_Interface",
            "          DEC:'0'  <== mode:M_Interface",
            "          M_Interface_PREFIX:'preemption'  <== mode:M_Interface",
            "          M_Interface_PREFIX:'delay'  <== mode:M_Interface",
            "          DEC:'120'  <== mode:M_Interface",
            "          NEWLINE:'\\n'  <== mode:M_Interface))",
            "      (if_inner",
            "        (if_null_block",
            "          SWITCHPORT:'switchport'",
            "          BACKUP:'backup'",
            "          INTERFACE:'interface'",
            "          M_Interface_PREFIX:'Gi'  <== mode:M_Interface",
            "          DEC:'1'  <== mode:M_Interface",
            "          FORWARD_SLASH:'/'  <== mode:M_Interface",
            "          DEC:'0'  <== mode:M_Interface",
            "          M_Interface_PREFIX:'preemption'  <== mode:M_Interface",
            "          M_Interface_PREFIX:'mode'  <== mode:M_Interface",
            "          M_Interface_PREFIX:'forced'  <== mode:M_Interface",
            "          NEWLINE:'\\n'  <== mode:M_Interface))",
            "      (if_inner",
            "        (if_null_block",
            "          NO:'no'",
            "          SWITCHPORT:'switchport'",
            "          BLOCK:'block'",
            "          UNICAST:'unicast'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          NO:'no'",
            "          SWITCHPORT:'switchport'",
            "          BLOCK:'block'",
            "          MULTICAST:'multicast'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_single",
            "          SWITCHPORT:'switchport'",
            "          CAPTURE:'capture'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          NO:'no'",
            "          SWITCHPORT:'switchport'",
            "          DOT1Q:'dot1q'",
            "          VARIABLE:'ethertype'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_switchport_mode",
            "          SWITCHPORT:'switchport'",
            "          MODE:'mode'",
            "          TRUNK:'trunk'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          NO:'no'",
            "          SWITCHPORT:'switchport'",
            "          MONITOR:'monitor'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          NO:'no'",
            "          SWITCHPORT:'switchport'",
            "          PRIORITY:'priority'",
            "          EXTEND:'extend'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_switchport_trunk_native",
            "          SWITCHPORT:'switchport'",
            "          TRUNK:'trunk'",
            "          NATIVE:'native'",
            "          VLAN:'vlan'",
            "          vlan = DEC:'6'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          SWITCHPORT:'switchport'",
            "          TRUNK:'trunk'",
            "          PRUNING:'pruning'",
            "          VLAN:'vlan'",
            "          DEC:'2'",
            "          DASH:'-'",
            "          DEC:'3'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          TRANSCEIVER:'transceiver'",
            "          PERMIT:'permit'",
            "          VARIABLE:'pid'",
            "          ALL:'all'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          TRANSPORT_MODE:'transport-mode'",
            "          VARIABLE:'otn'",
            "          VARIABLE:'bit-transparent'",
            "          VARIABLE:'opu2e'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          TX_QUEUE:'tx-queue'",
            "          DEC:'0'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          BANDWIDTH:'bandwidth'",
            "          PERCENT_LITERAL:'percent'",
            "          DEC:'51'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          TX_QUEUE:'tx-queue'",
            "          DEC:'1'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          BANDWIDTH:'bandwidth'",
            "          PERCENT_LITERAL:'percent'",
            "          DEC:'49'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          TX_QUEUE:'tx-queue'",
            "          DEC:'2'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          BANDWIDTH:'bandwidth'",
            "          GUARANTEED:'guaranteed'",
            "          DEC:'100000'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          XCONNECT:'xconnect'",
            "          IP_ADDRESS:'1.2.3.4'",
            "          DEC:'649'",
            "          ENCAPSULATION:'encapsulation'",
            "          MPLS:'mpls'",
            "          NEWLINE:'\\n'",
            "          (if_null_inner",
            "            BACKUP:'backup'",
            "            PEER:'peer'",
            "            IP_ADDRESS:'13.5.25.3'",
            "            DEC:'707'",
            "            NEWLINE:'\\n')))",
            "      (if_inner",
            "        (if_null_block",
            "          REMOTE:'remote'",
            "          VARIABLE:'circuit'",
            "          ID:'id'",
            "          DEC:'649'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          VTP:'vtp'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_zone_member",
            "          ZONE_MEMBER:'zone-member'",
            "          name = (variable_permissive",
            "            VARIABLE:'t1')",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_zone_member",
            "          ZONE_MEMBER:'zone-member'",
            "          SECURITY:'security'",
            "          name = (variable_permissive",
            "            VARIABLE:'z1')",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_interface",
            "      INTERFACE:'interface'",
            "      iname = (interface_name",
            "        name_prefix_alpha = M_Interface_PREFIX:'Async'  <== mode:M_Interface",
            "        (range",
            "          (subrange",
            "            low = DEC:'1'  <== mode:M_Interface)))",
            "      NEWLINE:'\\n'  <== mode:M_Interface))",
            "  (stanza",
            "    (s_interface",
            "      INTERFACE:'interface'",
            "      iname = (interface_name",
            "        name_prefix_alpha = M_Interface_PREFIX:'Cable'  <== mode:M_Interface",
            "        DEC:'1'  <== mode:M_Interface",
            "        FORWARD_SLASH:'/'  <== mode:M_Interface",
            "        DEC:'2'  <== mode:M_Interface",
            "        FORWARD_SLASH:'/'  <== mode:M_Interface",
            "        DEC:'3'  <== mode:M_Interface",
            "        COLON:':'  <== mode:M_Interface",
            "        (range",
            "          (subrange",
            "            low = DEC:'4'  <== mode:M_Interface)))",
            "      NEWLINE:'\\n'  <== mode:M_Interface))",
            "  (stanza",
            "    (s_interface",
            "      INTERFACE:'interface'",
            "      iname = (interface_name",
            "        name_prefix_alpha = M_Interface_PREFIX:'Crypto-Engine'  <== mode:M_Interface",
            "        DEC:'1'  <== mode:M_Interface",
            "        FORWARD_SLASH:'/'  <== mode:M_Interface",
            "        DEC:'2'  <== mode:M_Interface",
            "        FORWARD_SLASH:'/'  <== mode:M_Interface",
            "        (range",
            "          (subrange",
            "            low = DEC:'3'  <== mode:M_Interface)))",
            "      NEWLINE:'\\n'  <== mode:M_Interface))",
            "  (stanza",
            "    (s_interface",
            "      INTERFACE:'interface'",
            "      iname = (interface_name",
            "        name_prefix_alpha = M_Interface_PREFIX:'Dot11Radio'  <== mode:M_Interface",
            "        (range",
            "          (subrange",
            "            low = DEC:'0'  <== mode:M_Interface)))",
            "      NEWLINE:'\\n'  <== mode:M_Interface))",
            "  (stanza",
            "    (s_interface",
            "      INTERFACE:'interface'",
            "      iname = (interface_name",
            "        name_prefix_alpha = M_Interface_PREFIX:'ethernet'  <== mode:M_Interface",
            "        DEC:'1'  <== mode:M_Interface",
            "        FORWARD_SLASH:'/'  <== mode:M_Interface",
            "        (range",
            "          (subrange",
            "            low = DEC:'11'  <== mode:M_Interface)))",
            "      NEWLINE:'\\n'  <== mode:M_Interface))",
            "  (stanza",
            "    (s_interface",
            "      INTERFACE:'interface'",
            "      iname = (interface_name",
            "        name_prefix_alpha = M_Interface_PREFIX:'GigabitEthernet'  <== mode:M_Interface",
            "        DEC:'0'  <== mode:M_Interface",
            "        FORWARD_SLASH:'/'  <== mode:M_Interface",
            "        (range",
            "          (subrange",
            "            low = DEC:'0'  <== mode:M_Interface)))",
            "      NEWLINE:'\\n'  <== mode:M_Interface",
            "      (if_inner",
            "        (if_nameif",
            "          NAMEIF:'nameif'",
            "          name = (variable",
            "            INSIDE:'inside')",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_security_level",
            "          SECURITY_LEVEL:'security-level'",
            "          level = DEC:'100'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_ip_address",
            "          IP:'ip'",
            "          ADDRESS:'address'",
            "          ip = IP_ADDRESS:'192.168.0.1'",
            "          subnet = IP_ADDRESS:'255.255.255.0'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_ip_ospf_cost",
            "          OSPF:'ospf'",
            "          COST:'cost'",
            "          cost = DEC:'60'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_interface",
            "      INTERFACE:'interface'",
            "      iname = (interface_name",
            "        name_prefix_alpha = M_Interface_PREFIX:'Loopback'  <== mode:M_Interface",
            "        (range",
            "          (subrange",
            "            low = DEC:'0'  <== mode:M_Interface)))",
            "      NEWLINE:'\\n'  <== mode:M_Interface",
            "      (if_inner",
            "        (if_no_nameif",
            "          NO:'no'",
            "          NAMEIF:'nameif'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_no_security_level",
            "          NO:'no'",
            "          SECURITY_LEVEL:'security-level'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_no_ip_address",
            "          NO:'no'",
            "          IP:'ip'",
            "          ADDRESS:'address'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_interface",
            "      INTERFACE:'interface'",
            "      iname = (interface_name",
            "        name_prefix_alpha = M_Interface_PREFIX:'Modular-Cable'  <== mode:M_Interface",
            "        DEC:'1'  <== mode:M_Interface",
            "        FORWARD_SLASH:'/'  <== mode:M_Interface",
            "        DEC:'2'  <== mode:M_Interface",
            "        FORWARD_SLASH:'/'  <== mode:M_Interface",
            "        DEC:'3'  <== mode:M_Interface",
            "        COLON:':'  <== mode:M_Interface",
            "        (range",
            "          (subrange",
            "            low = DEC:'4'  <== mode:M_Interface)))",
            "      NEWLINE:'\\n'  <== mode:M_Interface))",
            "  (stanza",
            "    (s_interface",
            "      INTERFACE:'interface'",
            "      iname = (interface_name",
            "        name_prefix_alpha = M_Interface_PREFIX:'Null'  <== mode:M_Interface",
            "        (range",
            "          (subrange",
            "            low = DEC:'0'  <== mode:M_Interface)))",
            "      NEWLINE:'\\n'  <== mode:M_Interface))",
            "  (stanza",
            "    (s_interface",
            "      INTERFACE:'interface'",
            "      iname = (interface_name",
            "        name_prefix_alpha = M_Interface_PREFIX:'tunnel-ip'  <== mode:M_Interface",
            "        (range",
            "          (subrange",
            "            low = DEC:'6'  <== mode:M_Interface)))",
            "      NEWLINE:'\\n'  <== mode:M_Interface))",
            "  (stanza",
            "    (s_interface",
            "      INTERFACE:'interface'",
            "      iname = (interface_name",
            "        name_prefix_alpha = M_Interface_PREFIX:'tunnel'  <== mode:M_Interface",
            "        (range",
            "          (subrange",
            "            low = DEC:'0'  <== mode:M_Interface)))",
            "      NEWLINE:'\\n'  <== mode:M_Interface",
            "      (if_inner",
            "        (if_tunnel",
            "          TUNNEL:'tunnel'",
            "          (iftunnel_bandwidth",
            "            BANDWIDTH:'bandwidth'",
            "            RECEIVE:'receive'",
            "            DEC:'1000000'",
            "            NEWLINE:'\\n')))",
            "      (if_inner",
            "        (if_tunnel",
            "          TUNNEL:'tunnel'",
            "          (iftunnel_bandwidth",
            "            BANDWIDTH:'bandwidth'",
            "            TRANSMIT:'transmit'",
            "            DEC:'1000000'",
            "            NEWLINE:'\\n')))",
            "      (if_inner",
            "        (if_tunnel",
            "          TUNNEL:'tunnel'",
            "          (iftunnel_destination",
            "            DESTINATION:'destination'",
            "            IP_ADDRESS:'3.4.5.6'",
            "            NEWLINE:'\\n')))",
            "      (if_inner",
            "        (if_tunnel",
            "          TUNNEL:'tunnel'",
            "          (iftunnel_key",
            "            KEY:'key'",
            "            keynum = DEC:'123'",
            "            NEWLINE:'\\n')))",
            "      (if_inner",
            "        (if_tunnel",
            "          TUNNEL:'tunnel'",
            "          (iftunnel_mode",
            "            MODE:'mode'",
            "            GRE:'gre'",
            "            IPV4:'ipv4'",
            "            NEWLINE:'\\n')))",
            "      (if_inner",
            "        (if_tunnel",
            "          TUNNEL:'tunnel'",
            "          (iftunnel_mode",
            "            MODE:'mode'",
            "            GRE:'gre'",
            "            MULTIPOINT:'multipoint'",
            "            NEWLINE:'\\n')))",
            "      (if_inner",
            "        (if_tunnel",
            "          TUNNEL:'tunnel'",
            "          (iftunnel_path_mtu_discovery",
            "            PATH_MTU_DISCOVERY:'path-mtu-discovery'",
            "            NEWLINE:'\\n')))",
            "      (if_inner",
            "        (if_tunnel",
            "          TUNNEL:'tunnel'",
            "          (iftunnel_source",
            "            SOURCE:'source'",
            "            IP_ADDRESS:'2.3.4.5'",
            "            NEWLINE:'\\n')))",
            "      (if_inner",
            "        (if_tunnel",
            "          TUNNEL:'tunnel'",
            "          (iftunnel_source",
            "            SOURCE:'source'",
            "            (interface_name",
            "              VARIABLE:'Cellular0')",
            "            NEWLINE:'\\n')))",
            "      (if_inner",
            "        (if_tunnel",
            "          TUNNEL:'tunnel'",
            "          (iftunnel_source",
            "            SOURCE:'source'",
            "            (interface_name",
            "              VARIABLE:'Ethernet0')",
            "            NEWLINE:'\\n')))",
            "      (if_inner",
            "        (if_tunnel",
            "          TUNNEL:'tunnel'",
            "          (iftunnel_source",
            "            SOURCE:'source'",
            "            DYNAMIC:'dynamic'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_interface",
            "      INTERFACE:'interface'",
            "      iname = (interface_name",
            "        name_prefix_alpha = M_Interface_PREFIX:'Vlan'  <== mode:M_Interface",
            "        (range",
            "          (subrange",
            "            low = DEC:'111'  <== mode:M_Interface)))",
            "      NEWLINE:'\\n'  <== mode:M_Interface))",
            "  (stanza",
            "    (s_eos_vxlan_interface",
            "      INTERFACE:'interface'",
            "      iname = (eos_vxlan_interface_name",
            "        VXLAN:'Vxlan'  <== mode:M_Interface",
            "        DEC:'1'  <== mode:M_Interface)",
            "      NEWLINE:'\\n'  <== mode:M_Interface",
            "      (eos_vxlan_if_inner",
            "        VXLAN:'vxlan'",
            "        (eos_vxif_vxlan_source_interface",
            "          SOURCE_INTERFACE:'source-interface'",
            "          iface = (interface_name",
            "            name_prefix_alpha = M_Interface_PREFIX:'Loopback'  <== mode:M_Interface",
            "            (range",
            "              (subrange",
            "                low = DEC:'1'  <== mode:M_Interface)))",
            "          NEWLINE:'\\n'  <== mode:M_Interface))",
            "      (eos_vxlan_if_inner",
            "        VXLAN:'vxlan'",
            "        (eos_vxif_vxlan_udp_port",
            "          UDP_PORT:'udp-port'",
            "          num = DEC:'1234'",
            "          NEWLINE:'\\n'))",
            "      (eos_vxlan_if_inner",
            "        VXLAN:'vxlan'",
            "        (eos_vxif_vxlan_vlan",
            "          VLAN:'vlan'",
            "          num = DEC:'123'",
            "          (eos_vxif_vxlan_vlan_vni",
            "            VNI:'vni'",
            "            num = DEC:'456'",
            "            NEWLINE:'\\n')))",
            "      (eos_vxlan_if_inner",
            "        VXLAN:'vxlan'",
            "        (eos_vxif_vxlan_vlan",
            "          VLAN:'vlan'",
            "          num = DEC:'123'",
            "          (eos_vxif_vxlan_flood",
            "            FLOOD:'flood'",
            "            VTEP:'vtep'",
            "            IP_ADDRESS:'1.0.0.1'",
            "            IP_ADDRESS:'2.0.0.1'",
            "            IP_ADDRESS:'3.0.0.1'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_interface",
            "      INTERFACE:'interface'",
            "      iname = (interface_name",
            "        name_prefix_alpha = M_Interface_PREFIX:'vlan'  <== mode:M_Interface",
            "        (range",
            "          (subrange",
            "            low = DEC:'1'  <== mode:M_Interface)))",
            "      NEWLINE:'\\n'  <== mode:M_Interface))",
            "  (stanza",
            "    (s_interface",
            "      INTERFACE:'interface'",
            "      iname = (interface_name",
            "        name_prefix_alpha = M_Interface_PREFIX:'vlan'  <== mode:M_Interface",
            "        (range",
            "          (subrange",
            "            low = DEC:'2'  <== mode:M_Interface)))",
            "      NEWLINE:'\\n'  <== mode:M_Interface))",
            "  (stanza",
            "    (s_interface",
            "      INTERFACE:'interface'",
            "      iname = (interface_name",
            "        name_prefix_alpha = M_Interface_PREFIX:'vlan'  <== mode:M_Interface",
            "        (range",
            "          (subrange",
            "            low = DEC:'3'  <== mode:M_Interface)))",
            "      NEWLINE:'\\n'  <== mode:M_Interface))",
            "  (stanza",
            "    (s_interface",
            "      INTERFACE:'interface'",
            "      iname = (interface_name",
            "        name_prefix_alpha = M_Interface_PREFIX:'vlan'  <== mode:M_Interface",
            "        (range",
            "          (subrange",
            "            low = DEC:'1005'  <== mode:M_Interface)))",
            "      NEWLINE:'\\n'  <== mode:M_Interface))",
            "  (stanza",
            "    (s_interface",
            "      INTERFACE:'interface'",
            "      iname = (interface_name",
            "        name_prefix_alpha = M_Interface_PREFIX:'vlan'  <== mode:M_Interface",
            "        (range",
            "          (subrange",
            "            low = DEC:'1006'  <== mode:M_Interface)))",
            "      NEWLINE:'\\n'  <== mode:M_Interface))",
            "  (stanza",
            "    (s_interface",
            "      INTERFACE:'interface'",
            "      iname = (interface_name",
            "        name_prefix_alpha = M_Interface_PREFIX:'vlan'  <== mode:M_Interface",
            "        (range",
            "          (subrange",
            "            low = DEC:'1234'  <== mode:M_Interface)))",
            "      NEWLINE:'\\n'  <== mode:M_Interface))",
            "  (stanza",
            "    (s_interface",
            "      INTERFACE:'interface'",
            "      iname = (interface_name",
            "        name_prefix_alpha = M_Interface_PREFIX:'vlan'  <== mode:M_Interface",
            "        (range",
            "          (subrange",
            "            low = DEC:'4094'  <== mode:M_Interface)))",
            "      NEWLINE:'\\n'  <== mode:M_Interface))",
            "  (stanza",
            "    (s_interface",
            "      INTERFACE:'interface'",
            "      iname = (interface_name",
            "        name_prefix_alpha = M_Interface_PREFIX:'Wideband-Cable'  <== mode:M_Interface",
            "        DEC:'1'  <== mode:M_Interface",
            "        FORWARD_SLASH:'/'  <== mode:M_Interface",
            "        DEC:'2'  <== mode:M_Interface",
            "        FORWARD_SLASH:'/'  <== mode:M_Interface",
            "        DEC:'3'  <== mode:M_Interface",
            "        COLON:':'  <== mode:M_Interface",
            "        (range",
            "          (subrange",
            "            low = DEC:'4'  <== mode:M_Interface)))",
            "      NEWLINE:'\\n'  <== mode:M_Interface))",
            "  (stanza",
            "    (s_interface",
            "      INTERFACE:'interface'",
            "      iname = (interface_name",
            "        name_prefix_alpha = M_Interface_PREFIX:'ethernet'  <== mode:M_Interface",
            "        DEC:'1'  <== mode:M_Interface",
            "        FORWARD_SLASH:'/'  <== mode:M_Interface",
            "        (range",
            "          (subrange",
            "            low = DEC:'12'  <== mode:M_Interface)))",
            "      NEWLINE:'\\n'  <== mode:M_Interface",
            "      (if_inner",
            "        (if_switchport_access",
            "          SWITCHPORT:'switchport'",
            "          ACCESS:'access'",
            "          VLAN:'vlan'",
            "          vlan = DEC:'3'",
            "          NEWLINE:'\\n'))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/cisco_ios_neighbor" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'cisco_ios_neighbor'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (router_bgp_stanza",
            "      ROUTER:'router'",
            "      BGP:'bgp'",
            "      procnum = (bgp_asn",
            "        asn = DEC:'12076')",
            "      NEWLINE:'\\n'",
            "      (router_bgp_stanza_tail",
            "        (router_id_rb_stanza",
            "          BGP:'bgp'",
            "          (router_id_bgp_tail",
            "            ROUTER_ID:'router-id'",
            "            routerid = IP_ADDRESS:'207.46.160.15'",
            "            NEWLINE:'\\n')))",
            "      (router_bgp_stanza_tail",
            "        (peer_group_creation_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          name = VARIABLE:'8075-CORE'  <== mode:M_NEIGHBOR",
            "          PEER_GROUP:'peer-group'",
            "          NEWLINE:'\\n'  <== mode:M_NEIGHBOR))",
            "      (router_bgp_stanza_tail",
            "        (peer_group_creation_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          name = VARIABLE:'LEAF'  <== mode:M_NEIGHBOR",
            "          PEER_GROUP:'peer-group'",
            "          NEWLINE:'\\n'  <== mode:M_NEIGHBOR))",
            "      (router_bgp_stanza_tail",
            "        (bgp_listen_range_rb_stanza",
            "          BGP:'bgp'",
            "          LISTEN:'listen'",
            "          RANGE:'range'",
            "          IP_PREFIX:'10.10.20.0/24'",
            "          PEER_GROUP:'peer-group'",
            "          name = (variable",
            "            VARIABLE:'LEAF'  <== mode:M_NEIGHBOR)",
            "          NEWLINE:'\\n'))",
            "      (router_bgp_stanza_tail",
            "        (neighbor_flat_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          peergroup = VARIABLE:'LEAF'  <== mode:M_NEIGHBOR",
            "          (remote_as_bgp_tail",
            "            REMOTE_AS:'remote-as'",
            "            remote = (bgp_asn",
            "              asn = DEC:'65001')",
            "            ALTERNATE_AS:'alternate-as'",
            "            (bgp_asn",
            "              asn = DEC:'65002')",
            "            (bgp_asn",
            "              asn = DEC:'65003')",
            "            (bgp_asn",
            "              asn = DEC:'65004')",
            "            (bgp_asn",
            "              asn = DEC:'65005')",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        END:'end'",
            "        NEWLINE:'\\n\\n')))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/cisco_ip" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'cisco_ip'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_null",
            "      (null_block",
            "        IP:'ip'",
            "        ADJACENCY:'adjacency'",
            "        (null_rest_of_line",
            "          ROUTE:'route'",
            "          DISTANCE:'distance'",
            "          DEC:'250'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_null",
            "      (null_block",
            "        IP:'ip'",
            "        ADJMGR:'adjmgr'",
            "        (null_rest_of_line",
            "          INTERNAL:'internal'",
            "          EVENT_HISTORY:'event-history'",
            "          SNMP:'snmp'",
            "          SIZE:'size'",
            "          SMALL:'small'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_ip_nbar",
            "      IP:'ip'",
            "      NBAR:'nbar'",
            "      CUSTOM:'custom'",
            "      (null_rest_of_line",
            "        VARIABLE:'app_sales1'",
            "        DEC:'5'",
            "        VARIABLE:'ascii'",
            "        VARIABLE:'SALES'",
            "        SOURCE:'source'",
            "        TCP:'tcp'",
            "        DEC:'4567'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_ip_ssh",
            "      IP:'ip'",
            "      SSH:'ssh'",
            "      (ip_ssh_null",
            "        LOGGING:'logging'",
            "        (null_rest_of_line",
            "          EVENTS:'events'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_ip_ssh",
            "      IP:'ip'",
            "      SSH:'ssh'",
            "      (ip_ssh_null",
            "        MAXSTARTUPS:'maxstartups'",
            "        (null_rest_of_line",
            "          DEC:'42'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_ip_ssh",
            "      IP:'ip'",
            "      SSH:'ssh'",
            "      (ip_ssh_null",
            "        TIME_OUT:'time-out'",
            "        (null_rest_of_line",
            "          DEC:'60'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_ip_ssh",
            "      IP:'ip'",
            "      SSH:'ssh'",
            "      (ip_ssh_version",
            "        VERSION:'version'",
            "        version = DEC:'2'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_ip_wccp",
            "      IP:'ip'",
            "      WCCP:'wccp'",
            "      (wccp_id",
            "        id = DEC:'1'",
            "        REDIRECT_LIST:'redirect-list'",
            "        redirect_list = (variable",
            "          VARIABLE:'wccp-redir')",
            "        GROUP_LIST:'group-list'",
            "        group_list = (variable",
            "          VARIABLE:'wccp-cachelist')",
            "        PASSWORD:'password'",
            "        DEC:'7'",
            "        password = (variable",
            "          VARIABLE:'0123456789ABCD')",
            "        NEWLINE:'\\n')))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/cisco_ip_nat" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'cisco_ip_nat'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_ip_nat",
            "      (ip_nat_pool_range",
            "        IP:'ip'",
            "        NAT:'nat'",
            "        POOL:'pool'",
            "        name = (variable",
            "          VARIABLE:'abc')",
            "        PREFIX_LENGTH:'prefix-length'",
            "        prefix_length = DEC:'32'",
            "        NEWLINE:'\\n'",
            "        RANGE:'range'",
            "        first = IP_ADDRESS:'10.1.2.3'",
            "        last = IP_ADDRESS:'10.1.2.4'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_ip_nat",
            "      (ip_nat_pool",
            "        IP:'ip'",
            "        NAT:'nat'",
            "        POOL:'pool'",
            "        name = (variable",
            "          VARIABLE:'example-1-dynamic-nat-pool')",
            "        first = IP_ADDRESS:'192.168.0.128'",
            "        last = IP_ADDRESS:'192.168.0.254'",
            "        PREFIX_LENGTH:'prefix-length'",
            "        prefix_length = DEC:'24'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_ip_nat",
            "      (ip_nat_pool",
            "        IP:'ip'",
            "        NAT:'nat'",
            "        POOL:'pool'",
            "        name = (variable",
            "          VARIABLE:'example-2-dynamic-nat-pool')",
            "        first = IP_ADDRESS:'192.168.0.128'",
            "        last = IP_ADDRESS:'192.168.0.254'",
            "        NETMASK:'netmask'",
            "        mask = IP_ADDRESS:'255.255.255.0'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_ip_nat",
            "      (ip_nat_source",
            "        IP:'ip'",
            "        NAT:'nat'",
            "        OUTSIDE:'outside'",
            "        SOURCE:'source'",
            "        STATIC:'static'",
            "        local = IP_ADDRESS:'6.6.6.6'",
            "        global = IP_ADDRESS:'7.7.7.7'",
            "        ADD_ROUTE:'add-route'",
            "        NO_ALIAS:'no-alias'",
            "        NEWLINE:'\\n')))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/cisco_ip_route" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'cisco_ip_route'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (ip_route_stanza",
            "      IP:'ip'",
            "      ROUTE:'route'",
            "      (ip_route_tail",
            "        prefix = IP_PREFIX:'1.2.3.4/32'",
            "        nexthopip = IP_ADDRESS:'2.3.4.5'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (ip_route_stanza",
            "      IP:'ip'",
            "      ROUTE:'route'",
            "      (ip_route_tail",
            "        address = IP_ADDRESS:'1.2.37.104'",
            "        mask = IP_ADDRESS:'255.255.255.248'",
            "        nexthopint = (interface_name",
            "          VARIABLE:'GigabitEthernet3/0/0.212')",
            "        TAG:'tag'",
            "        tag = DEC:'32361'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (ip_route_stanza",
            "      IP:'ip'",
            "      ROUTE:'route'",
            "      (ip_route_tail",
            "        address = IP_ADDRESS:'1.2.39.17'",
            "        mask = IP_ADDRESS:'255.255.255.255'",
            "        nexthopint = (interface_name",
            "          VARIABLE:'Serial5/0'",
            "          COLON:':'",
            "          DEC:'2')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (ip_route_stanza",
            "      IP:'ip'",
            "      ROUTE:'route'",
            "      (ip_route_tail",
            "        address = IP_ADDRESS:'1.2.39.22'",
            "        mask = IP_ADDRESS:'255.255.255.255'",
            "        nexthopip = IP_ADDRESS:'1.2.32.39'",
            "        distance = DEC:'210'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (ip_route_stanza",
            "      IP:'ip'",
            "      ROUTE:'route'",
            "      (ip_route_tail",
            "        address = IP_ADDRESS:'1.2.39.32'",
            "        mask = IP_ADDRESS:'255.255.255.255'",
            "        nexthopint = (interface_name",
            "          VARIABLE:'Serial5/1'",
            "          COLON:':'",
            "          DEC:'5')",
            "        nexthopip = IP_ADDRESS:'1.2.32.59'",
            "        distance = DEC:'240'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (ip_route_stanza",
            "      IP:'ip'",
            "      ROUTE:'route'",
            "      (ip_route_tail",
            "        address = IP_ADDRESS:'1.2.39.69'",
            "        mask = IP_ADDRESS:'255.255.255.255'",
            "        nexthopint = (interface_name",
            "          VARIABLE:'POS5/3'",
            "          COLON:':'",
            "          DEC:'10')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (ip_route_stanza",
            "      IP:'ip'",
            "      ROUTE:'route'",
            "      (ip_route_tail",
            "        address = IP_ADDRESS:'0.0.0.0'",
            "        mask = IP_ADDRESS:'0.0.0.0'",
            "        nexthopint = (interface_name",
            "          (variable_interface_name",
            "            LOOPBACK:'loopback')",
            "          DEC:'66')",
            "        distance = DEC:'100'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (ip_route_stanza",
            "      IP:'ip'",
            "      ROUTE:'route'",
            "      (ip_route_tail",
            "        address = IP_ADDRESS:'0.0.0.0'",
            "        mask = IP_ADDRESS:'0.0.0.0'",
            "        nexthopint = (interface_name",
            "          VARIABLE:'loopback99')",
            "        distance = DEC:'150'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (ip_route_stanza",
            "      IP:'ip'",
            "      ROUTE:'route'",
            "      (ip_route_tail",
            "        address = IP_ADDRESS:'0.0.0.0'",
            "        mask = IP_ADDRESS:'0.0.0.0'",
            "        nexthopint = (interface_name",
            "          (variable_interface_name",
            "            DIALER:'dialer')",
            "          DEC:'1')",
            "        distance = DEC:'250'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (ip_route_stanza",
            "      IP:'ip'",
            "      ROUTE:'route'",
            "      (ip_route_tail",
            "        address = IP_ADDRESS:'0.0.0.0'",
            "        mask = IP_ADDRESS:'0.0.0.0'",
            "        nexthopint = (interface_name",
            "          VARIABLE:'Dialer2')",
            "        distance = DEC:'300'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (ip_route_stanza",
            "      IP:'ip'",
            "      ROUTE:'route'",
            "      (ip_route_tail",
            "        address = IP_ADDRESS:'1.2.3.0'",
            "        mask = IP_ADDRESS:'255.255.255.128'",
            "        nexthopip = IP_ADDRESS:'2.3.4.5'",
            "        distance = DEC:'10'",
            "        NAME:'name'",
            "        (variable",
            "          VARIABLE:'bippety'  <== mode:M_Name)",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (ip_route_stanza",
            "      IP:'ip'",
            "      ROUTE:'route'",
            "      VRF:'vrf'",
            "      vrf = (variable",
            "        VARIABLE:'myvrf')",
            "      (ip_route_tail",
            "        address = IP_ADDRESS:'0.0.0.0'",
            "        mask = IP_ADDRESS:'0.0.0.0'",
            "        nexthopip = IP_ADDRESS:'5.6.7.8'",
            "        GLOBAL:'global'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (ip_route_stanza",
            "      IP:'ip'",
            "      ROUTE:'route'",
            "      VRF:'vrf'",
            "      vrf = (variable",
            "        VARIABLE:'myvrf')",
            "      (ip_route_tail",
            "        address = IP_ADDRESS:'0.0.0.0'",
            "        mask = IP_ADDRESS:'0.0.0.0'",
            "        nexthopip = IP_ADDRESS:'5.6.7.8'",
            "        GLOBAL:'global'",
            "        distance = DEC:'100'",
            "        NAME:'name'",
            "        (variable",
            "          VARIABLE:'boppety'  <== mode:M_Name)",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        IPV6:'ipv6'",
            "        ROUTE:'route'",
            "        IPV6_PREFIX:'::/0'",
            "        LOOPBACK:'loopback'",
            "        DEC:'66'",
            "        DEC:'100'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        IPV6:'ipv6'",
            "        ROUTE:'route'",
            "        IPV6_PREFIX:'::/0'",
            "        VARIABLE:'loopback99'",
            "        DEC:'150'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        IPV6:'ipv6'",
            "        ROUTE:'route'",
            "        IPV6_PREFIX:'::/0'",
            "        DIALER:'dialer'",
            "        DEC:'1'",
            "        DEC:'250'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        IPV6:'ipv6'",
            "        ROUTE:'route'",
            "        IPV6_PREFIX:'::/0'",
            "        VARIABLE:'Dialer2'",
            "        DEC:'300'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        END:'end'",
            "        NEWLINE:'\\n\\n')))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/cisco_ipsla" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'cisco_ipsla'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_ipsla",
            "      IPSLA:'ipsla'",
            "      (null_rest_of_line",
            "        NEWLINE:'\\n')",
            "      (ispla_operation",
            "        OPERATION:'operation'",
            "        (null_rest_of_line",
            "          DEC:'2'",
            "          NEWLINE:'\\n')",
            "        (ipslao_type",
            "          TYPE:'type'",
            "          (null_rest_of_line",
            "            ICMP:'icmp'",
            "            ECHO:'echo'",
            "            NEWLINE:'\\n')",
            "          (ipslaot_null",
            "            TIMEOUT:'timeout'",
            "            (null_rest_of_line",
            "              DEC:'1000'",
            "              NEWLINE:'\\n'))",
            "          (ipslaot_null",
            "            SOURCE:'source'",
            "            (null_rest_of_line",
            "              ADDRESS:'address'",
            "              IPV6_ADDRESS:'abcd:abcd::118:9a41:51'",
            "              NEWLINE:'\\n'))",
            "          (ipslaot_null",
            "            DESTINATION:'destination'",
            "            (null_rest_of_line",
            "              ADDRESS:'address'",
            "              IPV6_ADDRESS:'abcd:abcd::118:9a41:a1'",
            "              NEWLINE:'\\n'))",
            "          (ipslaot_null",
            "            FREQUENCY:'frequency'",
            "            (null_rest_of_line",
            "              DEC:'60'",
            "              NEWLINE:'\\n'))))",
            "      (ispla_operation",
            "        OPERATION:'operation'",
            "        (null_rest_of_line",
            "          DEC:'3'",
            "          NEWLINE:'\\n')",
            "        (ipslao_type",
            "          TYPE:'type'",
            "          (null_rest_of_line",
            "            ICMP:'icmp'",
            "            ECHO:'echo'",
            "            NEWLINE:'\\n')",
            "          (ipslaot_null",
            "            SOURCE:'source'",
            "            (null_rest_of_line",
            "              ADDRESS:'address'",
            "              IPV6_ADDRESS:'abcd:abcd::118:9a41:51'",
            "              NEWLINE:'\\n'))",
            "          (ipslaot_null",
            "            DESTINATION:'destination'",
            "            (null_rest_of_line",
            "              ADDRESS:'address'",
            "              IPV6_ADDRESS:'abcd:abcd::118:9a41:80'",
            "              NEWLINE:'\\n'))",
            "          (ipslaot_null",
            "            FREQUENCY:'frequency'",
            "            (null_rest_of_line",
            "              DEC:'60'",
            "              NEWLINE:'\\n'))))",
            "      (ipsla_reaction",
            "        REACTION:'reaction'",
            "        (null_rest_of_line",
            "          OPERATION:'operation'",
            "          DEC:'2'",
            "          NEWLINE:'\\n')",
            "        (ipslar_react",
            "          REACT:'react'",
            "          (null_rest_of_line",
            "            TIMEOUT:'timeout'",
            "            NEWLINE:'\\n')",
            "          (ispalrr_null",
            "            ACTION:'action'",
            "            (null_rest_of_line",
            "              TRIGGER:'trigger'",
            "              NEWLINE:'\\n'))",
            "          (ispalrr_null",
            "            THRESHOLD:'threshold'",
            "            (null_rest_of_line",
            "              TYPE:'type'",
            "              VARIABLE:'consecutive'",
            "              DEC:'3'",
            "              NEWLINE:'\\n'))))",
            "      (ipsla_reaction",
            "        REACTION:'reaction'",
            "        (null_rest_of_line",
            "          OPERATION:'operation'",
            "          DEC:'3'",
            "          NEWLINE:'\\n')",
            "        (ipslar_react",
            "          REACT:'react'",
            "          (null_rest_of_line",
            "            TIMEOUT:'timeout'",
            "            NEWLINE:'\\n')",
            "          (ispalrr_null",
            "            ACTION:'action'",
            "            (null_rest_of_line",
            "              TRIGGER:'trigger'",
            "              NEWLINE:'\\n'))",
            "          (ispalrr_null",
            "            THRESHOLD:'threshold'",
            "            (null_rest_of_line",
            "              TYPE:'type'",
            "              VARIABLE:'consecutive'",
            "              DEC:'3'",
            "              NEWLINE:'\\n'))))",
            "      (ipsla_schedule",
            "        SCHEDULE:'schedule'",
            "        (null_rest_of_line",
            "          OPERATION:'operation'",
            "          DEC:'2'",
            "          NEWLINE:'\\n')",
            "        (ipslas_null",
            "          START_TIME:'start-time'",
            "          (null_rest_of_line",
            "            VARIABLE:'now'",
            "            NEWLINE:'\\n'))",
            "        (ipslas_null",
            "          LIFE:'life'",
            "          (null_rest_of_line",
            "            VARIABLE:'forever'",
            "            NEWLINE:'\\n')))",
            "      (ipsla_schedule",
            "        SCHEDULE:'schedule'",
            "        (null_rest_of_line",
            "          OPERATION:'operation'",
            "          DEC:'3'",
            "          NEWLINE:'\\n')",
            "        (ipslas_null",
            "          START_TIME:'start-time'",
            "          (null_rest_of_line",
            "            VARIABLE:'now'",
            "            NEWLINE:'\\n'))",
            "        (ipslas_null",
            "          LIFE:'life'",
            "          (null_rest_of_line",
            "            VARIABLE:'forever'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_ipsla",
            "      IPSLA:'ipsla'",
            "      (null_rest_of_line",
            "        NEWLINE:'\\n')",
            "      (ispla_operation",
            "        OPERATION:'operation'",
            "        (null_rest_of_line",
            "          DEC:'1'",
            "          NEWLINE:'\\n')",
            "        (ipslao_type",
            "          TYPE:'type'",
            "          (null_rest_of_line",
            "            ICMP:'icmp'",
            "            ECHO:'echo'",
            "            NEWLINE:'\\n')",
            "          (ipslaot_null",
            "            DESTINATION:'destination'",
            "            (null_rest_of_line",
            "              ADDRESS:'address'",
            "              IP_ADDRESS:'1.2.4.41'",
            "              NEWLINE:'\\n'))",
            "          (ipslaot_null",
            "            FREQUENCY:'frequency'",
            "            (null_rest_of_line",
            "              DEC:'300'",
            "              NEWLINE:'\\n'))))",
            "      (ispla_operation",
            "        OPERATION:'operation'",
            "        (null_rest_of_line",
            "          DEC:'20'",
            "          NEWLINE:'\\n')",
            "        (ipslao_type",
            "          TYPE:'type'",
            "          (null_rest_of_line",
            "            ICMP:'icmp'",
            "            ECHO:'echo'",
            "            NEWLINE:'\\n')",
            "          (ipslaot_null",
            "            DESTINATION:'destination'",
            "            (null_rest_of_line",
            "              ADDRESS:'address'",
            "              IP_ADDRESS:'208.75.11.249'",
            "              NEWLINE:'\\n'))",
            "          (ipslaot_null",
            "            FREQUENCY:'frequency'",
            "            (null_rest_of_line",
            "              DEC:'300'",
            "              NEWLINE:'\\n'))))",
            "      (ispla_operation",
            "        OPERATION:'operation'",
            "        (null_rest_of_line",
            "          DEC:'30'",
            "          NEWLINE:'\\n')",
            "        (ipslao_type",
            "          TYPE:'type'",
            "          (null_rest_of_line",
            "            ICMP:'icmp'",
            "            ECHO:'echo'",
            "            NEWLINE:'\\n')",
            "          (ipslaot_null",
            "            DESTINATION:'destination'",
            "            (null_rest_of_line",
            "              ADDRESS:'address'",
            "              IP_ADDRESS:'64.47.43.158'",
            "              NEWLINE:'\\n'))",
            "          (ipslaot_null",
            "            FREQUENCY:'frequency'",
            "            (null_rest_of_line",
            "              DEC:'300'",
            "              NEWLINE:'\\n'))))",
            "      (ispla_operation",
            "        OPERATION:'operation'",
            "        (null_rest_of_line",
            "          DEC:'40'",
            "          NEWLINE:'\\n')",
            "        (ipslao_type",
            "          TYPE:'type'",
            "          (null_rest_of_line",
            "            ICMP:'icmp'",
            "            ECHO:'echo'",
            "            NEWLINE:'\\n')",
            "          (ipslaot_null",
            "            DESTINATION:'destination'",
            "            (null_rest_of_line",
            "              ADDRESS:'address'",
            "              IP_ADDRESS:'4.30.61.109'",
            "              NEWLINE:'\\n'))",
            "          (ipslaot_null",
            "            FREQUENCY:'frequency'",
            "            (null_rest_of_line",
            "              DEC:'300'",
            "              NEWLINE:'\\n'))))",
            "      (ispla_operation",
            "        OPERATION:'operation'",
            "        (null_rest_of_line",
            "          DEC:'1000'",
            "          NEWLINE:'\\n')",
            "        (ipslao_type",
            "          TYPE:'type'",
            "          (null_rest_of_line",
            "            UDP:'udp'",
            "            VARIABLE:'jitter'",
            "            NEWLINE:'\\n')",
            "          (ipslaot_null",
            "            SOURCE:'source'",
            "            (null_rest_of_line",
            "              ADDRESS:'address'",
            "              IP_ADDRESS:'1.2.4.40'",
            "              NEWLINE:'\\n'))",
            "          (ipslaot_null",
            "            DESTINATION:'destination'",
            "            (null_rest_of_line",
            "              ADDRESS:'address'",
            "              IP_ADDRESS:'1.2.4.41'",
            "              NEWLINE:'\\n'))",
            "          (ipslaot_statistics",
            "            STATISTICS:'statistics'",
            "            (null_rest_of_line",
            "              VARIABLE:'hourly'",
            "              NEWLINE:'\\n')",
            "            (ipslaots_null",
            "              BUCKETS:'buckets'",
            "              (null_rest_of_line",
            "                DEC:'24'",
            "                NEWLINE:'\\n')))",
            "          (ipslaot_null",
            "            TOS:'tos'",
            "            (null_rest_of_line",
            "              DEC:'184'",
            "              NEWLINE:'\\n'))",
            "          (ipslaot_null",
            "            DESTINATION:'destination'",
            "            (null_rest_of_line",
            "              PORT:'port'",
            "              DEC:'16500'",
            "              NEWLINE:'\\n'))",
            "          (ipslaot_null",
            "            FREQUENCY:'frequency'",
            "            (null_rest_of_line",
            "              DEC:'10'",
            "              NEWLINE:'\\n'))",
            "          (ipslaot_statistics",
            "            STATISTICS:'statistics'",
            "            (null_rest_of_line",
            "              INTERVAL:'interval'",
            "              DEC:'3600'",
            "              NEWLINE:'\\n'))",
            "          (ipslaot_null",
            "            VERIFY_DATA:'verify-data'",
            "            (null_rest_of_line",
            "              NEWLINE:'\\n'))))",
            "      (ipsla_schedule",
            "        SCHEDULE:'schedule'",
            "        (null_rest_of_line",
            "          OPERATION:'operation'",
            "          DEC:'1'",
            "          NEWLINE:'\\n')",
            "        (ipslas_null",
            "          START_TIME:'start-time'",
            "          (null_rest_of_line",
            "            VARIABLE:'now'",
            "            NEWLINE:'\\n'))",
            "        (ipslas_null",
            "          LIFE:'life'",
            "          (null_rest_of_line",
            "            VARIABLE:'forever'",
            "            NEWLINE:'\\n')))",
            "      (ipsla_schedule",
            "        SCHEDULE:'schedule'",
            "        (null_rest_of_line",
            "          OPERATION:'operation'",
            "          DEC:'20'",
            "          NEWLINE:'\\n')",
            "        (ipslas_null",
            "          START_TIME:'start-time'",
            "          (null_rest_of_line",
            "            VARIABLE:'now'",
            "            NEWLINE:'\\n'))",
            "        (ipslas_null",
            "          LIFE:'life'",
            "          (null_rest_of_line",
            "            VARIABLE:'forever'",
            "            NEWLINE:'\\n')))",
            "      (ipsla_schedule",
            "        SCHEDULE:'schedule'",
            "        (null_rest_of_line",
            "          OPERATION:'operation'",
            "          DEC:'30'",
            "          NEWLINE:'\\n')",
            "        (ipslas_null",
            "          START_TIME:'start-time'",
            "          (null_rest_of_line",
            "            VARIABLE:'now'",
            "            NEWLINE:'\\n'))",
            "        (ipslas_null",
            "          LIFE:'life'",
            "          (null_rest_of_line",
            "            VARIABLE:'forever'",
            "            NEWLINE:'\\n')))",
            "      (ipsla_schedule",
            "        SCHEDULE:'schedule'",
            "        (null_rest_of_line",
            "          OPERATION:'operation'",
            "          DEC:'40'",
            "          NEWLINE:'\\n')",
            "        (ipslas_null",
            "          START_TIME:'start-time'",
            "          (null_rest_of_line",
            "            VARIABLE:'now'",
            "            NEWLINE:'\\n'))",
            "        (ipslas_null",
            "          LIFE:'life'",
            "          (null_rest_of_line",
            "            VARIABLE:'forever'",
            "            NEWLINE:'\\n')))",
            "      (ipsla_schedule",
            "        SCHEDULE:'schedule'",
            "        (null_rest_of_line",
            "          OPERATION:'operation'",
            "          DEC:'1000'",
            "          NEWLINE:'\\n')",
            "        (ipslas_null",
            "          START_TIME:'start-time'",
            "          (null_rest_of_line",
            "            VARIABLE:'now'",
            "            NEWLINE:'\\n'))",
            "        (ipslas_null",
            "          LIFE:'life'",
            "          (null_rest_of_line",
            "            VARIABLE:'forever'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_ipsla",
            "      IPSLA:'ipsla'",
            "      (null_rest_of_line",
            "        NEWLINE:'\\n')",
            "      (ispla_operation",
            "        OPERATION:'operation'",
            "        (null_rest_of_line",
            "          DEC:'2'",
            "          NEWLINE:'\\n')",
            "        (ipslao_type",
            "          TYPE:'type'",
            "          (null_rest_of_line",
            "            ICMP:'icmp'",
            "            ECHO:'echo'",
            "            NEWLINE:'\\n')",
            "          (ipslaot_null",
            "            SOURCE:'source'",
            "            (null_rest_of_line",
            "              ADDRESS:'address'",
            "              IPV6_ADDRESS:'2607:0000::118:9a41:40'",
            "              NEWLINE:'\\n'))",
            "          (ipslaot_null",
            "            DESTINATION:'destination'",
            "            (null_rest_of_line",
            "              ADDRESS:'address'",
            "              IPV6_ADDRESS:'2607:0000::118:9a41:80'",
            "              NEWLINE:'\\n'))",
            "          (ipslaot_null",
            "            FREQUENCY:'frequency'",
            "            (null_rest_of_line",
            "              DEC:'60'",
            "              NEWLINE:'\\n'))))",
            "      (ispla_operation",
            "        OPERATION:'operation'",
            "        (null_rest_of_line",
            "          DEC:'3'",
            "          NEWLINE:'\\n')",
            "        (ipslao_type",
            "          TYPE:'type'",
            "          (null_rest_of_line",
            "            ICMP:'icmp'",
            "            ECHO:'echo'",
            "            NEWLINE:'\\n')",
            "          (ipslaot_null",
            "            SOURCE:'source'",
            "            (null_rest_of_line",
            "              ADDRESS:'address'",
            "              IPV6_ADDRESS:'abcd:abcd::118:9a41:40'",
            "              NEWLINE:'\\n'))",
            "          (ipslaot_null",
            "            DESTINATION:'destination'",
            "            (null_rest_of_line",
            "              ADDRESS:'address'",
            "              IPV6_ADDRESS:'2607:0000::118:9a41:b1'",
            "              NEWLINE:'\\n'))",
            "          (ipslaot_null",
            "            FREQUENCY:'frequency'",
            "            (null_rest_of_line",
            "              DEC:'60'",
            "              NEWLINE:'\\n'))))",
            "      (ispla_operation",
            "        OPERATION:'operation'",
            "        (null_rest_of_line",
            "          DEC:'4'",
            "          NEWLINE:'\\n')",
            "        (ipslao_type",
            "          TYPE:'type'",
            "          (null_rest_of_line",
            "            ICMP:'icmp'",
            "            ECHO:'echo'",
            "            NEWLINE:'\\n')",
            "          (ipslaot_null",
            "            SOURCE:'source'",
            "            (null_rest_of_line",
            "              ADDRESS:'address'",
            "              IP_ADDRESS:'1.2.20.77'",
            "              NEWLINE:'\\n'))",
            "          (ipslaot_null",
            "            DESTINATION:'destination'",
            "            (null_rest_of_line",
            "              ADDRESS:'address'",
            "              IP_ADDRESS:'1.2.20.78'",
            "              NEWLINE:'\\n'))",
            "          (ipslaot_null",
            "            FREQUENCY:'frequency'",
            "            (null_rest_of_line",
            "              DEC:'10'",
            "              NEWLINE:'\\n'))))",
            "      (ispla_operation",
            "        OPERATION:'operation'",
            "        (null_rest_of_line",
            "          DEC:'5'",
            "          NEWLINE:'\\n')",
            "        (ipslao_type",
            "          TYPE:'type'",
            "          (null_rest_of_line",
            "            ICMP:'icmp'",
            "            ECHO:'echo'",
            "            NEWLINE:'\\n')",
            "          (ipslaot_null",
            "            SOURCE:'source'",
            "            (null_rest_of_line",
            "              ADDRESS:'address'",
            "              IP_ADDRESS:'1.2.20.77'",
            "              NEWLINE:'\\n'))",
            "          (ipslaot_null",
            "            DESTINATION:'destination'",
            "            (null_rest_of_line",
            "              ADDRESS:'address'",
            "              IP_ADDRESS:'1.2.20.74'",
            "              NEWLINE:'\\n'))",
            "          (ipslaot_null",
            "            FREQUENCY:'frequency'",
            "            (null_rest_of_line",
            "              DEC:'10'",
            "              NEWLINE:'\\n'))))",
            "      (ipsla_reaction",
            "        REACTION:'reaction'",
            "        (null_rest_of_line",
            "          OPERATION:'operation'",
            "          DEC:'2'",
            "          NEWLINE:'\\n')",
            "        (ipslar_react",
            "          REACT:'react'",
            "          (null_rest_of_line",
            "            TIMEOUT:'timeout'",
            "            NEWLINE:'\\n')",
            "          (ispalrr_null",
            "            ACTION:'action'",
            "            (null_rest_of_line",
            "              TRIGGER:'trigger'",
            "              NEWLINE:'\\n'))",
            "          (ispalrr_null",
            "            THRESHOLD:'threshold'",
            "            (null_rest_of_line",
            "              TYPE:'type'",
            "              VARIABLE:'consecutive'",
            "              DEC:'3'",
            "              NEWLINE:'\\n'))))",
            "      (ipsla_reaction",
            "        REACTION:'reaction'",
            "        (null_rest_of_line",
            "          OPERATION:'operation'",
            "          DEC:'3'",
            "          NEWLINE:'\\n')",
            "        (ipslar_react",
            "          REACT:'react'",
            "          (null_rest_of_line",
            "            TIMEOUT:'timeout'",
            "            NEWLINE:'\\n')",
            "          (ispalrr_null",
            "            ACTION:'action'",
            "            (null_rest_of_line",
            "              TRIGGER:'trigger'",
            "              NEWLINE:'\\n'))",
            "          (ispalrr_null",
            "            THRESHOLD:'threshold'",
            "            (null_rest_of_line",
            "              TYPE:'type'",
            "              VARIABLE:'consecutive'",
            "              DEC:'3'",
            "              NEWLINE:'\\n'))))",
            "      (ipsla_reaction",
            "        REACTION:'reaction'",
            "        (null_rest_of_line",
            "          OPERATION:'operation'",
            "          DEC:'4'",
            "          NEWLINE:'\\n')",
            "        (ipslar_react",
            "          REACT:'react'",
            "          (null_rest_of_line",
            "            TIMEOUT:'timeout'",
            "            NEWLINE:'\\n')",
            "          (ispalrr_null",
            "            ACTION:'action'",
            "            (null_rest_of_line",
            "              TRIGGER:'trigger'",
            "              NEWLINE:'\\n'))",
            "          (ispalrr_null",
            "            THRESHOLD:'threshold'",
            "            (null_rest_of_line",
            "              TYPE:'type'",
            "              VARIABLE:'consecutive'",
            "              DEC:'3'",
            "              NEWLINE:'\\n'))))",
            "      (ipsla_reaction",
            "        REACTION:'reaction'",
            "        (null_rest_of_line",
            "          OPERATION:'operation'",
            "          DEC:'5'",
            "          NEWLINE:'\\n')",
            "        (ipslar_react",
            "          REACT:'react'",
            "          (null_rest_of_line",
            "            TIMEOUT:'timeout'",
            "            NEWLINE:'\\n')",
            "          (ispalrr_null",
            "            ACTION:'action'",
            "            (null_rest_of_line",
            "              TRIGGER:'trigger'",
            "              NEWLINE:'\\n'))",
            "          (ispalrr_null",
            "            THRESHOLD:'threshold'",
            "            (null_rest_of_line",
            "              TYPE:'type'",
            "              VARIABLE:'consecutive'",
            "              DEC:'3'",
            "              NEWLINE:'\\n'))))",
            "      (ipsla_schedule",
            "        SCHEDULE:'schedule'",
            "        (null_rest_of_line",
            "          OPERATION:'operation'",
            "          DEC:'2'",
            "          NEWLINE:'\\n')",
            "        (ipslas_null",
            "          START_TIME:'start-time'",
            "          (null_rest_of_line",
            "            VARIABLE:'now'",
            "            NEWLINE:'\\n'))",
            "        (ipslas_null",
            "          LIFE:'life'",
            "          (null_rest_of_line",
            "            VARIABLE:'forever'",
            "            NEWLINE:'\\n')))",
            "      (ipsla_schedule",
            "        SCHEDULE:'schedule'",
            "        (null_rest_of_line",
            "          OPERATION:'operation'",
            "          DEC:'3'",
            "          NEWLINE:'\\n')",
            "        (ipslas_null",
            "          START_TIME:'start-time'",
            "          (null_rest_of_line",
            "            VARIABLE:'now'",
            "            NEWLINE:'\\n'))",
            "        (ipslas_null",
            "          LIFE:'life'",
            "          (null_rest_of_line",
            "            VARIABLE:'forever'",
            "            NEWLINE:'\\n')))",
            "      (ipsla_schedule",
            "        SCHEDULE:'schedule'",
            "        (null_rest_of_line",
            "          OPERATION:'operation'",
            "          DEC:'4'",
            "          NEWLINE:'\\n')",
            "        (ipslas_null",
            "          START_TIME:'start-time'",
            "          (null_rest_of_line",
            "            VARIABLE:'now'",
            "            NEWLINE:'\\n'))",
            "        (ipslas_null",
            "          LIFE:'life'",
            "          (null_rest_of_line",
            "            VARIABLE:'forever'",
            "            NEWLINE:'\\n')))",
            "      (ipsla_schedule",
            "        SCHEDULE:'schedule'",
            "        (null_rest_of_line",
            "          OPERATION:'operation'",
            "          DEC:'5'",
            "          NEWLINE:'\\n')",
            "        (ipslas_null",
            "          START_TIME:'start-time'",
            "          (null_rest_of_line",
            "            VARIABLE:'now'",
            "            NEWLINE:'\\n'))",
            "        (ipslas_null",
            "          LIFE:'life'",
            "          (null_rest_of_line",
            "            VARIABLE:'forever'",
            "            NEWLINE:'\\n')))",
            "      (ipsla_responder",
            "        RESPONDER:'responder'",
            "        (null_rest_of_line",
            "          NEWLINE:'\\n')",
            "        (ipslarp_null",
            "          TYPE:'type'",
            "          (null_rest_of_line",
            "            UDP:'udp'",
            "            IPV4:'ipv4'",
            "            ADDRESS:'address'",
            "            IP_ADDRESS:'1.2.4.41'",
            "            PORT:'port'",
            "            DEC:'12345'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_ip_sla",
            "      IP:'ip'",
            "      SLA:'sla'",
            "      (null_rest_of_line",
            "        DEC:'10'",
            "        NEWLINE:'\\n')",
            "      (ip_sla_null",
            "        ICMP_ECHO:'icmp-echo'",
            "        (null_rest_of_line",
            "          IP_ADDRESS:'1.2.3.4'",
            "          SOURCE_INTERFACE:'source-interface'",
            "          M_Interface_PREFIX:'GigabitEthernet'  <== mode:M_Interface",
            "          DEC:'0'  <== mode:M_Interface",
            "          FORWARD_SLASH:'/'  <== mode:M_Interface",
            "          DEC:'0'  <== mode:M_Interface",
            "          FORWARD_SLASH:'/'  <== mode:M_Interface",
            "          DEC:'3'  <== mode:M_Interface",
            "          NEWLINE:'\\n'  <== mode:M_Interface))",
            "      (ip_sla_null",
            "        PATH_ECHO:'path-echo'",
            "        (null_rest_of_line",
            "          IP_ADDRESS:'1.2.3.4'",
            "          VARIABLE:'source-ip'",
            "          IP_ADDRESS:'2.3.4.5'",
            "          NEWLINE:'\\n'))",
            "      (ip_sla_null",
            "        REQUEST_DATA_SIZE:'request-data-size'",
            "        (null_rest_of_line",
            "          DEC:'64'",
            "          NEWLINE:'\\n'))",
            "      (ip_sla_null",
            "        FREQUENCY:'frequency'",
            "        (null_rest_of_line",
            "          DEC:'600'",
            "          NEWLINE:'\\n'))",
            "      (ip_sla_null",
            "        OWNER:'owner'",
            "        (null_rest_of_line",
            "          VARIABLE:'SOME_OWNER'",
            "          NEWLINE:'\\n'))",
            "      (ip_sla_null",
            "        TOS:'tos'",
            "        (null_rest_of_line",
            "          DEC:'184'",
            "          NEWLINE:'\\n'))",
            "      (ip_sla_null",
            "        TAG:'tag'",
            "        (null_rest_of_line",
            "          VARIABLE:'edfwrgth'",
            "          NEWLINE:'\\n'))",
            "      (ip_sla_null",
            "        HISTORY:'history'",
            "        (null_rest_of_line",
            "          VARIABLE:'hours-of-statistics-kept'",
            "          DEC:'4'",
            "          NEWLINE:'\\n'))",
            "      (ip_sla_null",
            "        PATHS_OF_STATISTICS_KEPT:'paths-of-statistics-kept'",
            "        (null_rest_of_line",
            "          DEC:'3'",
            "          NEWLINE:'\\n'))",
            "      (ip_sla_null",
            "        HOPS_OF_STATISTICS_KEPT:'hops-of-statistics-kept'",
            "        (null_rest_of_line",
            "          DEC:'30'",
            "          NEWLINE:'\\n'))",
            "      (ip_sla_null",
            "        HISTORY:'history'",
            "        (null_rest_of_line",
            "          VARIABLE:'distributions-of-statistics-kept'",
            "          DEC:'5'",
            "          NEWLINE:'\\n'))",
            "      (ip_sla_null",
            "        HISTORY:'history'",
            "        (null_rest_of_line",
            "          VARIABLE:'statistics-distribution-interval'",
            "          DEC:'10'",
            "          NEWLINE:'\\n'))",
            "      (ip_sla_null",
            "        HISTORY:'history'",
            "        (null_rest_of_line",
            "          VARIABLE:'lives-kept'",
            "          DEC:'2'",
            "          NEWLINE:'\\n'))",
            "      (ip_sla_null",
            "        HISTORY:'history'",
            "        (null_rest_of_line",
            "          VARIABLE:'buckets-kept'",
            "          DEC:'25'",
            "          NEWLINE:'\\n'))",
            "      (ip_sla_null",
            "        SAMPLES_OF_HISTORY_KEPT:'samples-of-history-kept'",
            "        (null_rest_of_line",
            "          DEC:'10'",
            "          NEWLINE:'\\n'))",
            "      (ip_sla_null",
            "        HISTORY:'history'",
            "        (null_rest_of_line",
            "          FILTER:'filter'",
            "          VARIABLE:'failures'",
            "          NEWLINE:'\\n'))",
            "      (ip_sla_null",
            "        UDP_JITTER:'udp-jitter'",
            "        (null_rest_of_line",
            "          IP_ADDRESS:'130.59.38.105'",
            "          DEC:'5000'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_ip_sla",
            "      IP:'ip'",
            "      SLA:'sla'",
            "      (null_rest_of_line",
            "        TIMEOUT:'timeout'",
            "        DEC:'100'",
            "        NEWLINE:'\\n')))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/cisco_ipv6" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'cisco_ipv6'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_null",
            "      (null_block",
            "        IPV6:'ipv6'",
            "        ADJACENCY:'adjacency'",
            "        (null_rest_of_line",
            "          ROUTE:'route'",
            "          DISTANCE:'distance'",
            "          DEC:'250'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_null",
            "      (null_block",
            "        IPV6:'ipv6'",
            "        ADJACENCY_STALE_TIMER:'adjacency-stale-timer'",
            "        (null_rest_of_line",
            "          DEC:'1380'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_null",
            "      (null_block",
            "        IPV6:'ipv6'",
            "        ICMP:'icmp'",
            "        (null_rest_of_line",
            "          INTERNAL:'internal'",
            "          EVENT_HISTORY:'event-history'",
            "          VARIABLE:'ipv6-sync-event'",
            "          SIZE:'size'",
            "          SMALL:'small'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        IPV6:'ipv6'",
            "        ND:'nd'",
            "        VARIABLE:'fast-path'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        IPV6:'ipv6'",
            "        ND:'nd'",
            "        VARIABLE:'off-list'",
            "        TIMEOUT:'timeout'",
            "        DEC:'180'",
            "        NEWLINE:'\\n')))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/cisco_ipv6_access_list" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'cisco_ipv6_access_list'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (extended_ipv6_access_list_stanza",
            "      IPV6:'ipv6'",
            "      ACCESS_LIST:'access-list'",
            "      name = (variable_permissive",
            "        VARIABLE:'RT404888-XO')",
            "      NEWLINE:'\\n'",
            "      (extended_ipv6_access_list_tail",
            "        ala = (access_list_action",
            "          PERMIT:'permit')",
            "        prot = (protocol",
            "          IPV6:'ipv6')",
            "        srcipr = (access_list_ip6_range",
            "          HOST:'host'",
            "          ipv6 = IPV6_ADDRESS:'2610:18:10:1000::15')",
            "        dstipr = (access_list_ip6_range",
            "          ANY:'any')",
            "        NEWLINE:'\\n')",
            "      (extended_ipv6_access_list_tail",
            "        ala = (access_list_action",
            "          PERMIT:'permit')",
            "        prot = (protocol",
            "          IPV6:'ipv6')",
            "        srcipr = (access_list_ip6_range",
            "          ipv6_prefix = IPV6_PREFIX:'fe80::/64')",
            "        dstipr = (access_list_ip6_range",
            "          ipv6_prefix = IPV6_PREFIX:'fe80::/64')",
            "        NEWLINE:'\\n')",
            "      (extended_ipv6_access_list_tail",
            "        ala = (access_list_action",
            "          PERMIT:'permit')",
            "        prot = (protocol",
            "          IPV6:'ipv6')",
            "        srcipr = (access_list_ip6_range",
            "          ipv6_prefix = IPV6_PREFIX:'fe80::/64')",
            "        dstipr = (access_list_ip6_range",
            "          ipv6_prefix = IPV6_PREFIX:'ff02::/64')",
            "        NEWLINE:'\\n')",
            "      (extended_ipv6_access_list_tail",
            "        ala = (access_list_action",
            "          PERMIT:'permit')",
            "        prot = (protocol",
            "          IPV6:'ipv6')",
            "        srcipr = (access_list_ip6_range",
            "          ipv6_prefix = IPV6_PREFIX:'fe80::/64')",
            "        dstipr = (access_list_ip6_range",
            "          HOST:'host'",
            "          ipv6 = IPV6_ADDRESS:'2610:18:10:1000::15')",
            "        NEWLINE:'\\n')",
            "      (extended_ipv6_access_list_tail",
            "        ala = (access_list_action",
            "          DENY:'deny')",
            "        prot = (protocol",
            "          ICMPV6:'icmpv6')",
            "        srcipr = (access_list_ip6_range",
            "          ANY:'any')",
            "        dstipr = (access_list_ip6_range",
            "          ANY:'any')",
            "        (extended_access_list_additional_feature",
            "          ROUTER:'router')",
            "        (extended_access_list_additional_feature",
            "          HOPLIMIT:'hoplimit')",
            "        NEWLINE:'\\n')",
            "      (extended_ipv6_access_list_tail",
            "        ala = (access_list_action",
            "          DENY:'deny')",
            "        prot = (protocol",
            "          ICMPV6:'icmpv6')",
            "        srcipr = (access_list_ip6_range",
            "          ANY:'any')",
            "        dstipr = (access_list_ip6_range",
            "          ANY:'any')",
            "        (extended_access_list_additional_feature",
            "          ROUTER:'router')",
            "        NEWLINE:'\\n')",
            "      (extended_ipv6_access_list_tail",
            "        ala = (access_list_action",
            "          DENY:'deny')",
            "        prot = (protocol",
            "          ICMPV6:'icmpv6')",
            "        srcipr = (access_list_ip6_range",
            "          ANY:'any')",
            "        dstipr = (access_list_ip6_range",
            "          ANY:'any')",
            "        (extended_access_list_additional_feature",
            "          ND:'nd')",
            "        NEWLINE:'\\n')",
            "      (extended_ipv6_access_list_tail",
            "        ala = (access_list_action",
            "          DENY:'deny')",
            "        prot = (protocol",
            "          ICMPV6:'icmpv6')",
            "        srcipr = (access_list_ip6_range",
            "          ANY:'any')",
            "        dstipr = (access_list_ip6_range",
            "          ANY:'any')",
            "        (extended_access_list_additional_feature",
            "          ND:'nd')",
            "        NEWLINE:'\\n')",
            "      (extended_ipv6_access_list_tail",
            "        ala = (access_list_action",
            "          DENY:'deny')",
            "        prot = (protocol",
            "          ICMPV6:'icmpv6')",
            "        srcipr = (access_list_ip6_range",
            "          ANY:'any')",
            "        dstipr = (access_list_ip6_range",
            "          ANY:'any')",
            "        (extended_access_list_additional_feature",
            "          icmp_message_type = DEC:'141')",
            "        NEWLINE:'\\n')",
            "      (extended_ipv6_access_list_tail",
            "        ala = (access_list_action",
            "          DENY:'deny')",
            "        prot = (protocol",
            "          ICMPV6:'icmpv6')",
            "        srcipr = (access_list_ip6_range",
            "          ANY:'any')",
            "        dstipr = (access_list_ip6_range",
            "          ANY:'any')",
            "        (extended_access_list_additional_feature",
            "          icmp_message_type = DEC:'142')",
            "        NEWLINE:'\\n')",
            "      (extended_ipv6_access_list_tail",
            "        ala = (access_list_action",
            "          DENY:'deny')",
            "        prot = (protocol",
            "          ICMPV6:'icmpv6')",
            "        srcipr = (access_list_ip6_range",
            "          ANY:'any')",
            "        dstipr = (access_list_ip6_range",
            "          ANY:'any')",
            "        (extended_access_list_additional_feature",
            "          NEIGHBOR:'neighbor')",
            "        NEWLINE:'\\n'  <== mode:M_NEIGHBOR)",
            "      (extended_ipv6_access_list_tail",
            "        ala = (access_list_action",
            "          PERMIT:'permit')",
            "        prot = (protocol",
            "          IPV6:'ipv6')",
            "        srcipr = (access_list_ip6_range",
            "          ANY:'any')",
            "        dstipr = (access_list_ip6_range",
            "          ANY:'any')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (extended_ipv6_access_list_stanza",
            "      IPV6:'ipv6'",
            "      ACCESS_LIST:'access-list'",
            "      name = (variable_permissive",
            "        VARIABLE:'abcdefg')",
            "      NEWLINE:'\\n'",
            "      (extended_ipv6_access_list_tail",
            "        num = DEC:'10'",
            "        ala = (access_list_action",
            "          PERMIT:'permit')",
            "        prot = (protocol",
            "          ICMP:'icmp')",
            "        srcipr = (access_list_ip6_range",
            "          ANY:'any')",
            "        dstipr = (access_list_ip6_range",
            "          ANY:'any')",
            "        (extended_access_list_additional_feature",
            "          MLD_QUERY:'mld-query')",
            "        NEWLINE:'\\n')",
            "      (extended_ipv6_access_list_tail",
            "        num = DEC:'20'",
            "        ala = (access_list_action",
            "          PERMIT:'permit')",
            "        prot = (protocol",
            "          ICMP:'icmp')",
            "        srcipr = (access_list_ip6_range",
            "          ANY:'any')",
            "        dstipr = (access_list_ip6_range",
            "          ANY:'any')",
            "        (extended_access_list_additional_feature",
            "          MLD_REPORT:'mld-report')",
            "        NEWLINE:'\\n')",
            "      (extended_ipv6_access_list_tail",
            "        num = DEC:'30'",
            "        ala = (access_list_action",
            "          PERMIT:'permit')",
            "        prot = (protocol",
            "          ICMP:'icmp')",
            "        srcipr = (access_list_ip6_range",
            "          ANY:'any')",
            "        dstipr = (access_list_ip6_range",
            "          ANY:'any')",
            "        (extended_access_list_additional_feature",
            "          MLD_REDUCTION:'mld-reduction')",
            "        NEWLINE:'\\n')",
            "      (extended_ipv6_access_list_tail",
            "        num = DEC:'40'",
            "        ala = (access_list_action",
            "          PERMIT:'permit')",
            "        prot = (protocol",
            "          ICMP:'icmp')",
            "        srcipr = (access_list_ip6_range",
            "          ANY:'any')",
            "        dstipr = (access_list_ip6_range",
            "          ANY:'any')",
            "        (extended_access_list_additional_feature",
            "          MLDV2:'mldv2')",
            "        NEWLINE:'\\n\\n')))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/cisco_isis" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'cisco_isis'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_interface",
            "      INTERFACE:'interface'",
            "      iname = (interface_name",
            "        name_prefix_alpha = M_Interface_PREFIX:'GigabitEthernet'  <== mode:M_Interface",
            "        DEC:'0'  <== mode:M_Interface",
            "        FORWARD_SLASH:'/'  <== mode:M_Interface",
            "        (range",
            "          (subrange",
            "            low = DEC:'1'  <== mode:M_Interface)))",
            "      NEWLINE:'\\n'  <== mode:M_Interface))",
            "  (stanza",
            "    (s_interface",
            "      INTERFACE:'interface'",
            "      iname = (interface_name",
            "        name_prefix_alpha = M_Interface_PREFIX:'Serial'  <== mode:M_Interface",
            "        DEC:'4'  <== mode:M_Interface",
            "        FORWARD_SLASH:'/'  <== mode:M_Interface",
            "        (range",
            "          (subrange",
            "            low = DEC:'0'  <== mode:M_Interface)))",
            "      NEWLINE:'\\n'  <== mode:M_Interface))",
            "  (stanza",
            "    (s_interface",
            "      INTERFACE:'interface'",
            "      iname = (interface_name",
            "        name_prefix_alpha = M_Interface_PREFIX:'HundredGigE'  <== mode:M_Interface",
            "        DEC:'0'  <== mode:M_Interface",
            "        FORWARD_SLASH:'/'  <== mode:M_Interface",
            "        DEC:'0'  <== mode:M_Interface",
            "        FORWARD_SLASH:'/'  <== mode:M_Interface",
            "        DEC:'0'  <== mode:M_Interface",
            "        FORWARD_SLASH:'/'  <== mode:M_Interface",
            "        DEC:'0'  <== mode:M_Interface",
            "        PERIOD:'.'  <== mode:M_Interface",
            "        (range",
            "          (subrange",
            "            low = DEC:'2302'  <== mode:M_Interface)))",
            "      NEWLINE:'\\n'  <== mode:M_Interface))",
            "  (stanza",
            "    (s_interface",
            "      INTERFACE:'interface'",
            "      iname = (interface_name",
            "        name_prefix_alpha = M_Interface_PREFIX:'GigabitEthernet'  <== mode:M_Interface",
            "        DEC:'0'  <== mode:M_Interface",
            "        FORWARD_SLASH:'/'  <== mode:M_Interface",
            "        DEC:'0'  <== mode:M_Interface",
            "        FORWARD_SLASH:'/'  <== mode:M_Interface",
            "        (range",
            "          (subrange",
            "            low = DEC:'1'  <== mode:M_Interface)))",
            "      NEWLINE:'\\n'  <== mode:M_Interface",
            "      (if_inner",
            "        (if_isis_hello_interval",
            "          ISIS:'isis'",
            "          HELLO_INTERVAL:'hello-interval'",
            "          DEC:'3'",
            "          LEVEL_2:'level-2'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          PORT_NAME:'port-name'",
            "          BRACKET_LEFT:'['",
            "          VARIABLE:'bb-rive1'",
            "          BRACKET_RIGHT:']'",
            "          VARIABLE:'SAC-HPR2'",
            "          COLON:':'",
            "          VARIABLE:'RIVE1CA51O-1/13'",
            "          COLON:':'",
            "          VARIABLE:'CLR-1046'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          ENABLE:'enable'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_load_interval",
            "          LOAD_INTERVAL:'load-interval'",
            "          li = DEC:'30'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          NO:'no'",
            "          CDP:'cdp'",
            "          ENABLE:'enable'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          ROUTE_ONLY:'route-only'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_bfd",
            "          BFD:'bfd'",
            "          (if_bfd_interval",
            "            INTERVAL:'interval'",
            "            DEC:'500'",
            "            MIN_RX:'min-rx'",
            "            tx_ms = DEC:'500'",
            "            MULTIPLIER:'multiplier'",
            "            mult = DEC:'3'",
            "            NEWLINE:'\\n')))",
            "      (if_inner",
            "        (if_ip_router_isis",
            "          IP:'ip'",
            "          ROUTER:'router'",
            "          ISIS:'isis'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n')))",
            "      (if_inner",
            "        (if_ip_address",
            "          IP:'ip'",
            "          ADDRESS:'address'",
            "          prefix = IP_PREFIX:'137.164.25.57/30'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          IP:'ip'",
            "          PIM_SPARSE:'pim-sparse'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          IP:'ip'",
            "          PIM:'pim'",
            "          BORDER:'border'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          IP:'ip'",
            "          MULTICAST_BOUNDARY:'multicast-boundary'",
            "          DEC:'82'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          IP:'ip'",
            "          MTU:'mtu'",
            "          DEC:'9180'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          IPV6:'ipv6'",
            "          ADDRESS:'address'",
            "          IPV6_PREFIX:'2607:f380::108:9a41:9391/122'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_ipv6",
            "          IPV6:'ipv6'",
            "          (if_ipv6_inner",
            "            (if_ipv6_enable",
            "              ENABLE:'enable'",
            "              NEWLINE:'\\n'))))",
            "      (if_inner",
            "        (if_null_block",
            "          IPV6:'ipv6'",
            "          MTU:'mtu'",
            "          DEC:'9180'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          IPV6:'ipv6'",
            "          ROUTER:'router'",
            "          ISIS:'isis'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          IPV6:'ipv6'",
            "          PIM_SPARSE:'pim-sparse'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_isis_circuit_type",
            "          ISIS:'isis'",
            "          CIRCUIT_TYPE:'circuit-type'",
            "          LEVEL_2:'level-2'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_isis_hello_interval",
            "          ISIS:'isis'",
            "          HELLO_INTERVAL:'hello-interval'",
            "          DEC:'3'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_isis_metric",
            "          ISIS:'isis'",
            "          IPV6:'ipv6'",
            "          METRIC:'metric'",
            "          metric = DEC:'15'",
            "          LEVEL_2:'level-2'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_isis_metric",
            "          ISIS:'isis'",
            "          METRIC:'metric'",
            "          metric = DEC:'15'",
            "          LEVEL_2:'level-2'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          ISIS:'isis'",
            "          POINT_TO_POINT:'point-to-point'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          GIG_DEFAULT:'gig-default'",
            "          VARIABLE:'neg-off'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          SFLOW:'sflow'",
            "          FORWARDING:'forwarding'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (router_isis_stanza",
            "      ROUTER:'router'",
            "      ISIS:'isis'",
            "      NEWLINE:'\\n'",
            "      (is_stanza",
            "        (common_is_stanza",
            "          (net_is_stanza",
            "            NET:'net'",
            "            ISO_ADDRESS:'49.2153.1371.6401.7008.00'  <== mode:M_ISO_Address",
            "            NEWLINE:'\\n')))",
            "      (is_stanza",
            "        (common_is_stanza",
            "          (net_is_stanza",
            "            NET:'net'",
            "            ISO_ADDRESS:'49.2152.1371.6403.9016.1371.6403.9016.00'  <== mode:M_ISO_Address",
            "            NEWLINE:'\\n')))",
            "      (is_stanza",
            "        (common_is_stanza",
            "          (null_is_stanza",
            "            AREA_PASSWORD:'area-password'",
            "            (null_rest_of_line",
            "              VARIABLE:'abcdefg'",
            "              NEWLINE:'\\n'))))",
            "      (is_stanza",
            "        (common_is_stanza",
            "          (null_is_stanza",
            "            AUTHENTICATION:'authentication'",
            "            (null_rest_of_line",
            "              VARIABLE:'send-only'  <== mode:M_Authentication",
            "              NEWLINE:'\\n'))))",
            "      (is_stanza",
            "        (common_is_stanza",
            "          (null_is_stanza",
            "            BFD:'bfd'",
            "            (null_rest_of_line",
            "              VARIABLE:'all-interfaces'",
            "              NEWLINE:'\\n'))))",
            "      (is_stanza",
            "        (common_is_stanza",
            "          (null_is_stanza",
            "            NO:'no'",
            "            HELLO:'hello'",
            "            (null_rest_of_line",
            "              VARIABLE:'padding'",
            "              NEWLINE:'\\n'))))",
            "      (is_stanza",
            "        (common_is_stanza",
            "          (null_is_stanza",
            "            NSF:'nsf'",
            "            (null_rest_of_line",
            "              VARIABLE:'cisco'",
            "              NEWLINE:'\\n'))))",
            "      (is_stanza",
            "        (common_is_stanza",
            "          (null_is_stanza",
            "            NSF:'nsf'",
            "            (null_rest_of_line",
            "              INTERFACE:'interface'",
            "              M_Interface_PREFIX:'wait'  <== mode:M_Interface",
            "              DEC:'123'  <== mode:M_Interface",
            "              NEWLINE:'\\n'  <== mode:M_Interface))))",
            "      (is_stanza",
            "        (common_is_stanza",
            "          (null_is_stanza",
            "            NSF:'nsf'",
            "            (null_rest_of_line",
            "              INTERVAL:'interval'",
            "              DEC:'123'",
            "              NEWLINE:'\\n'))))",
            "      (is_stanza",
            "        (common_is_stanza",
            "          (is_type_is_stanza",
            "            IS_TYPE:'is-type'",
            "            LEVEL_2:'level-2'",
            "            NEWLINE:'\\n')))",
            "      (is_stanza",
            "        (common_is_stanza",
            "          (is_type_is_stanza",
            "            IS_TYPE:'is-type'",
            "            LEVEL_2_ONLY:'level-2-only'",
            "            NEWLINE:'\\n')))",
            "      (is_stanza",
            "        (common_is_stanza",
            "          (null_is_stanza",
            "            LOG:'log'",
            "            (null_rest_of_line",
            "              ADJACENCY:'adjacency'",
            "              NEWLINE:'\\n'))))",
            "      (is_stanza",
            "        (common_is_stanza",
            "          (null_is_stanza",
            "            LOG_ADJACENCY_CHANGES:'log-adjacency-changes'",
            "            (null_rest_of_line",
            "              ALL:'all'",
            "              NEWLINE:'\\n'))))",
            "      (is_stanza",
            "        (common_is_stanza",
            "          (null_is_stanza",
            "            LSP_GEN_INTERVAL:'lsp-gen-interval'",
            "            (null_rest_of_line",
            "              DEC:'2'",
            "              DEC:'1'",
            "              DEC:'3'",
            "              NEWLINE:'\\n'))))",
            "      (is_stanza",
            "        (common_is_stanza",
            "          (null_is_stanza",
            "            LSP_REFRESH_INTERVAL:'lsp-refresh-interval'",
            "            (null_rest_of_line",
            "              DEC:'12345'",
            "              NEWLINE:'\\n'))))",
            "      (is_stanza",
            "        (common_is_stanza",
            "          (null_is_stanza",
            "            MAX_LSP_LIFETIME:'max-lsp-lifetime'",
            "            (null_rest_of_line",
            "              DEC:'12345'",
            "              NEWLINE:'\\n'))))",
            "      (is_stanza",
            "        (common_is_stanza",
            "          (metric_style_is_stanza",
            "            METRIC_STYLE:'metric-style'",
            "            WIDE:'wide'",
            "            NEWLINE:'\\n')))",
            "      (is_stanza",
            "        (common_is_stanza",
            "          (passive_interface_default_is_stanza",
            "            PASSIVE_INTERFACE:'passive-interface'",
            "            DEFAULT:'default'  <== mode:M_Interface",
            "            NEWLINE:'\\n')))",
            "      (is_stanza",
            "        (common_is_stanza",
            "          (passive_interface_is_stanza",
            "            PASSIVE_INTERFACE:'passive-interface'",
            "            name = (interface_name",
            "              name_prefix_alpha = M_Interface_PREFIX:'GigabitEthernet'  <== mode:M_Interface",
            "              DEC:'0'  <== mode:M_Interface",
            "              FORWARD_SLASH:'/'  <== mode:M_Interface",
            "              (range",
            "                (subrange",
            "                  low = DEC:'0'  <== mode:M_Interface)))",
            "            NEWLINE:'\\n'  <== mode:M_Interface)))",
            "      (is_stanza",
            "        (common_is_stanza",
            "          (passive_interface_is_stanza",
            "            NO:'no'",
            "            PASSIVE_INTERFACE:'passive-interface'",
            "            name = (interface_name",
            "              name_prefix_alpha = M_Interface_PREFIX:'GigabitEthernet'  <== mode:M_Interface",
            "              DEC:'0'  <== mode:M_Interface",
            "              FORWARD_SLASH:'/'  <== mode:M_Interface",
            "              (range",
            "                (subrange",
            "                  low = DEC:'1'  <== mode:M_Interface)))",
            "            NEWLINE:'\\n'  <== mode:M_Interface)))",
            "      (is_stanza",
            "        (common_is_stanza",
            "          (passive_interface_is_stanza",
            "            NO:'no'",
            "            PASSIVE_INTERFACE:'passive-interface'",
            "            name = (interface_name",
            "              name_prefix_alpha = M_Interface_PREFIX:'Serial'  <== mode:M_Interface",
            "              DEC:'4'  <== mode:M_Interface",
            "              FORWARD_SLASH:'/'  <== mode:M_Interface",
            "              (range",
            "                (subrange",
            "                  low = DEC:'0'  <== mode:M_Interface)))",
            "            NEWLINE:'\\n'  <== mode:M_Interface)))",
            "      (is_stanza",
            "        (common_is_stanza",
            "          (null_is_stanza",
            "            PRC_INTERVAL:'prc-interval'",
            "            (null_rest_of_line",
            "              DEC:'2'",
            "              DEC:'1'",
            "              DEC:'3'",
            "              NEWLINE:'\\n'))))",
            "      (is_stanza",
            "        (common_is_stanza",
            "          (redistribute_eigrp_is_stanza_null",
            "            REDISTRIBUTE:'redistribute'",
            "            EIGRP:'eigrp'",
            "            DEC:'1234'",
            "            ROUTE_MAP:'route-map'",
            "            map = VARIABLE:'redist-eigrp-isis'  <== mode:M_RouteMap",
            "            LEVEL_1_2:'level-1-2'",
            "            NEWLINE:'\\n')))",
            "      (is_stanza",
            "        (common_is_stanza",
            "          (redistribute_static_is_stanza",
            "            REDISTRIBUTE:'redistribute'",
            "            STATIC:'static'",
            "            CLNS:'clns'",
            "            ROUTE_MAP:'route-map'",
            "            map = VARIABLE:'static-to-bgp'  <== mode:M_RouteMap",
            "            NEWLINE:'\\n')))",
            "      (is_stanza",
            "        (common_is_stanza",
            "          (null_is_stanza",
            "            SET_OVERLOAD_BIT:'set-overload-bit'",
            "            (null_rest_of_line",
            "              ON_STARTUP:'on-startup'",
            "              DEC:'123'",
            "              NEWLINE:'\\n'))))",
            "      (is_stanza",
            "        (common_is_stanza",
            "          (null_is_stanza",
            "            SPF_INTERVAL:'spf-interval'",
            "            (null_rest_of_line",
            "              DEC:'2'",
            "              DEC:'1'",
            "              DEC:'3'",
            "              NEWLINE:'\\n'))))",
            "      (is_stanza",
            "        (address_family_is_stanza",
            "          ADDRESS_FAMILY:'address-family'",
            "          IPV4:'ipv4'",
            "          UNICAST:'unicast'",
            "          NEWLINE:'\\n'",
            "          (isaf_stanza",
            "            (common_is_stanza",
            "              (metric_style_is_stanza",
            "                METRIC_STYLE:'metric-style'",
            "                WIDE:'wide'",
            "                NEWLINE:'\\n')))",
            "          (isaf_stanza",
            "            (common_is_stanza",
            "              (redistribute_connected_is_stanza",
            "                REDISTRIBUTE:'redistribute'",
            "                CONNECTED:'connected'",
            "                ROUTE_MAP:'route-map'",
            "                map = VARIABLE:'connected-to-isis'  <== mode:M_RouteMap",
            "                NEWLINE:'\\n')))",
            "          (address_family_footer",
            "            EXIT_ADDRESS_FAMILY:'exit-address-family'",
            "            NEWLINE:'\\n')))",
            "      (is_stanza",
            "        (address_family_is_stanza",
            "          ADDRESS_FAMILY:'address-family'",
            "          IPV6:'ipv6'",
            "          UNICAST:'unicast'",
            "          NEWLINE:'\\n'",
            "          (isaf_stanza",
            "            (common_is_stanza",
            "              (redistribute_connected_is_stanza",
            "                REDISTRIBUTE:'redistribute'",
            "                CONNECTED:'connected'",
            "                ROUTE_MAP:'route-map'",
            "                map = VARIABLE:'connected-to-isis-v6'  <== mode:M_RouteMap",
            "                NEWLINE:'\\n')))",
            "          (isaf_stanza",
            "            (common_is_stanza",
            "              (null_is_stanza",
            "                ADJACENCY_CHECK:'adjacency-check'",
            "                (null_rest_of_line",
            "                  DISABLE:'disable'",
            "                  NEWLINE:'\\n'))))",
            "          (address_family_footer",
            "            EXIT_ADDRESS_FAMILY:'exit-address-family'",
            "            NEWLINE:'\\n')))",
            "      (is_stanza",
            "        (interface_is_stanza",
            "          INTERFACE:'interface'",
            "          iname = (interface_name",
            "            name_prefix_alpha = M_Interface_PREFIX:'HundredGigE'  <== mode:M_Interface",
            "            DEC:'0'  <== mode:M_Interface",
            "            FORWARD_SLASH:'/'  <== mode:M_Interface",
            "            DEC:'0'  <== mode:M_Interface",
            "            FORWARD_SLASH:'/'  <== mode:M_Interface",
            "            DEC:'0'  <== mode:M_Interface",
            "            FORWARD_SLASH:'/'  <== mode:M_Interface",
            "            DEC:'0'  <== mode:M_Interface",
            "            PERIOD:'.'  <== mode:M_Interface",
            "            (range",
            "              (subrange",
            "                low = DEC:'2302'  <== mode:M_Interface)))",
            "          NEWLINE:'\\n'  <== mode:M_Interface",
            "          (iis_stanza",
            "            (common_iis_stanza",
            "              (null_iis_stanza",
            "                BFD:'bfd'",
            "                (null_rest_of_line",
            "                  FAST_DETECT:'fast-detect'",
            "                  IPV4:'ipv4'",
            "                  NEWLINE:'\\n'))))",
            "          (iis_stanza",
            "            (common_iis_stanza",
            "              (null_iis_stanza",
            "                BFD:'bfd'",
            "                (null_rest_of_line",
            "                  MINIMUM_INTERVAL:'minimum-interval'",
            "                  DEC:'300'",
            "                  NEWLINE:'\\n'))))",
            "          (iis_stanza",
            "            (common_iis_stanza",
            "              (null_iis_stanza",
            "                BFD:'bfd'",
            "                (null_rest_of_line",
            "                  MULTIPLIER:'multiplier'",
            "                  DEC:'3'",
            "                  NEWLINE:'\\n'))))",
            "          (iis_stanza",
            "            (common_iis_stanza",
            "              (circuit_type_iis_stanza",
            "                CIRCUIT_TYPE:'circuit-type'",
            "                LEVEL_2_ONLY:'level-2-only'",
            "                NEWLINE:'\\n')))",
            "          (iis_stanza",
            "            (common_iis_stanza",
            "              (null_iis_stanza",
            "                HELLO_INTERVAL:'hello-interval'",
            "                (null_rest_of_line",
            "                  DEC:'3'",
            "                  NEWLINE:'\\n'))))",
            "          (iis_stanza",
            "            (common_iis_stanza",
            "              (null_iis_stanza",
            "                HELLO_MULTIPLIER:'hello-multiplier'",
            "                (null_rest_of_line",
            "                  DEC:'6'",
            "                  NEWLINE:'\\n'))))",
            "          (iis_stanza",
            "            (common_iis_stanza",
            "              (null_iis_stanza",
            "                HELLO_PADDING:'hello-padding'",
            "                (null_rest_of_line",
            "                  DISABLE:'disable'",
            "                  NEWLINE:'\\n'))))",
            "          (iis_stanza",
            "            (common_iis_stanza",
            "              (null_iis_stanza",
            "                POINT_TO_POINT:'point-to-point'",
            "                (null_rest_of_line",
            "                  NEWLINE:'\\n'))))",
            "          (iis_stanza",
            "            (common_iis_stanza",
            "              (suppressed_iis_stanza",
            "                SUPPRESSED:'suppressed'",
            "                NEWLINE:'\\n')))",
            "          (iis_stanza",
            "            (address_family_iis_stanza",
            "              ADDRESS_FAMILY:'address-family'",
            "              IPV4:'ipv4'",
            "              UNICAST:'unicast'",
            "              NEWLINE:'\\n'",
            "              (common_iis_stanza",
            "                (metric_iis_stanza",
            "                  METRIC:'metric'",
            "                  DEC:'99999'",
            "                  LEVEL:'level'",
            "                  DEC:'2'",
            "                  NEWLINE:'\\n'))))",
            "          (iis_stanza",
            "            (address_family_iis_stanza",
            "              ADDRESS_FAMILY:'address-family'",
            "              IPV6:'ipv6'",
            "              UNICAST:'unicast'",
            "              NEWLINE:'\\n'))))",
            "      (is_stanza",
            "        (common_is_stanza",
            "          (null_is_stanza",
            "            ADJACENCY_CHECK:'adjacency-check'",
            "            (null_rest_of_line",
            "              DISABLE:'disable'",
            "              NEWLINE:'\\n'))))",
            "      (is_stanza",
            "        (common_is_stanza",
            "          (metric_is_stanza",
            "            METRIC:'metric'",
            "            DEC:'99999'",
            "            NEWLINE:'\\n')))",
            "      (is_stanza",
            "        (address_family_is_stanza",
            "          ADDRESS_FAMILY:'address-family'",
            "          IPV6:'ipv6'",
            "          NEWLINE:'\\n'",
            "          (address_family_footer",
            "            EXIT_ADDRESS_FAMILY:'exit-address-family'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (router_isis_stanza",
            "      ROUTER:'router'",
            "      ISIS:'isis'",
            "      name = (variable",
            "        VARIABLE:'xyz')",
            "      NEWLINE:'\\n'",
            "      (is_stanza",
            "        (common_is_stanza",
            "          (null_is_stanza",
            "            FAST_FLOOD:'fast-flood'",
            "            (null_rest_of_line",
            "              DEC:'10'",
            "              NEWLINE:'\\n'))))",
            "      (is_stanza",
            "        (common_is_stanza",
            "          (null_is_stanza",
            "            IGNORE_ATTACHED_BIT:'ignore-attached-bit'",
            "            (null_rest_of_line",
            "              NEWLINE:'\\n'))))",
            "      (is_stanza",
            "        (common_is_stanza",
            "          (null_is_stanza",
            "            LOG_ADJACENCY_CHANGES:'log-adjacency-changes'",
            "            (null_rest_of_line",
            "              NEWLINE:'\\n'))))",
            "      (is_stanza",
            "        (common_is_stanza",
            "          (null_is_stanza",
            "            LSP_GEN_INTERVAL:'lsp-gen-interval'",
            "            (null_rest_of_line",
            "              DEC:'5'",
            "              DEC:'1'",
            "              DEC:'20'",
            "              NEWLINE:'\\n'))))",
            "      (is_stanza",
            "        (common_is_stanza",
            "          (null_is_stanza",
            "            LSP_REFRESH_INTERVAL:'lsp-refresh-interval'",
            "            (null_rest_of_line",
            "              DEC:'65000'",
            "              NEWLINE:'\\n'))))",
            "      (is_stanza",
            "        (common_is_stanza",
            "          (null_is_stanza",
            "            MAX_LSP_LIFETIME:'max-lsp-lifetime'",
            "            (null_rest_of_line",
            "              DEC:'65535'",
            "              NEWLINE:'\\n'))))",
            "      (is_stanza",
            "        (common_is_stanza",
            "          (metric_is_stanza",
            "            METRIC:'metric'",
            "            DEC:'12345'",
            "            NEWLINE:'\\n')))",
            "      (is_stanza",
            "        (common_is_stanza",
            "          (metric_style_is_stanza",
            "            METRIC_STYLE:'metric-style'",
            "            WIDE:'wide'",
            "            NEWLINE:'\\n')))",
            "      (is_stanza",
            "        (common_is_stanza",
            "          (net_is_stanza",
            "            NET:'net'",
            "            ISO_ADDRESS:'12.1234.1234.1234.1234.12'  <== mode:M_ISO_Address",
            "            NEWLINE:'\\n')))",
            "      (is_stanza",
            "        (common_is_stanza",
            "          (passive_interface_is_stanza",
            "            PASSIVE_INTERFACE:'passive-interface'",
            "            name = (interface_name",
            "              name_prefix_alpha = M_Interface_PREFIX:'Loopback'  <== mode:M_Interface",
            "              (range",
            "                (subrange",
            "                  low = DEC:'0'  <== mode:M_Interface)))",
            "            NEWLINE:'\\n'  <== mode:M_Interface)))",
            "      (is_stanza",
            "        (common_is_stanza",
            "          (null_is_stanza",
            "            PRC_INTERVAL:'prc-interval'",
            "            (null_rest_of_line",
            "              DEC:'5'",
            "              DEC:'1'",
            "              DEC:'20'",
            "              NEWLINE:'\\n'))))",
            "      (is_stanza",
            "        (common_is_stanza",
            "          (null_is_stanza",
            "            SPF_INTERVAL:'spf-interval'",
            "            (null_rest_of_line",
            "              DEC:'5'",
            "              DEC:'1'",
            "              DEC:'20'",
            "              NEWLINE:'\\n'))))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/cisco_l2tp" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'cisco_l2tp'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_l2tp_class",
            "      L2TP_CLASS:'l2tp-class'",
            "      name = (variable",
            "        VARIABLE:'foobar')",
            "      NEWLINE:'\\n'",
            "      (l2tpc_null",
            "        AUTHENTICATION:'authentication'",
            "        (null_rest_of_line",
            "          NEWLINE:'\\n'  <== mode:M_Authentication))",
            "      (l2tpc_null",
            "        COOKIE:'cookie'",
            "        (null_rest_of_line",
            "          SIZE:'size'",
            "          DEC:'4'",
            "          NEWLINE:'\\n'))",
            "      (l2tpc_null",
            "        DEFAULT:'default'",
            "        AUTHENTICATION:'authentication'",
            "        (null_rest_of_line",
            "          NEWLINE:'\\n'  <== mode:M_Authentication))",
            "      (l2tpc_null",
            "        HELLO:'hello'",
            "        (null_rest_of_line",
            "          DEC:'5'",
            "          NEWLINE:'\\n'))",
            "      (l2tpc_null",
            "        HIDDEN_LITERAL:'hidden'",
            "        (null_rest_of_line",
            "          NEWLINE:'\\n'))",
            "      (l2tpc_null",
            "        HOSTNAME:'hostname'",
            "        (null_rest_of_line",
            "          VARIABLE:'abc.example.com'",
            "          NEWLINE:'\\n'))",
            "      (l2tpc_null",
            "        PASSWORD:'password'",
            "        (null_rest_of_line",
            "          DEC:'0'",
            "          VARIABLE:'abcdefg'",
            "          NEWLINE:'\\n'))",
            "      (l2tpc_null",
            "        RECEIVE_WINDOW:'receive-window'",
            "        (null_rest_of_line",
            "          DEC:'123'",
            "          NEWLINE:'\\n'))",
            "      (l2tpc_null",
            "        RETRANSMIT:'retransmit'",
            "        (null_rest_of_line",
            "          VARIABLE:'initial'",
            "          RETRIES:'retries'",
            "          DEC:'5'",
            "          NEWLINE:'\\n'))",
            "      (l2tpc_null",
            "        RETRANSMIT:'retransmit'",
            "        (null_rest_of_line",
            "          VARIABLE:'initial'",
            "          TIMEOUT:'timeout'",
            "          VARIABLE:'max'",
            "          DEC:'8'",
            "          NEWLINE:'\\n'))",
            "      (l2tpc_null",
            "        RETRANSMIT:'retransmit'",
            "        (null_rest_of_line",
            "          VARIABLE:'initial'",
            "          TIMEOUT:'timeout'",
            "          VARIABLE:'min'",
            "          DEC:'1'",
            "          NEWLINE:'\\n'))",
            "      (l2tpc_null",
            "        RETRANSMIT:'retransmit'",
            "        (null_rest_of_line",
            "          RETRIES:'retries'",
            "          DEC:'5'",
            "          NEWLINE:'\\n'))",
            "      (l2tpc_null",
            "        RETRANSMIT:'retransmit'",
            "        (null_rest_of_line",
            "          TIMEOUT:'timeout'",
            "          VARIABLE:'max'",
            "          DEC:'8'",
            "          NEWLINE:'\\n'))",
            "      (l2tpc_null",
            "        RETRANSMIT:'retransmit'",
            "        (null_rest_of_line",
            "          TIMEOUT:'timeout'",
            "          VARIABLE:'min'",
            "          DEC:'1'",
            "          NEWLINE:'\\n'))",
            "      (l2tpc_null",
            "        TIMEOUT:'timeout'",
            "        (null_rest_of_line",
            "          SETUP:'setup'",
            "          DEC:'123'",
            "          NEWLINE:'\\n'))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/cisco_line" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'cisco_line'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_line",
            "      LINE:'line'",
            "      (line_type",
            "        VTY:'vty')",
            "      first = DEC:'0'",
            "      last = DEC:'15'",
            "      NEWLINE:'\\n'",
            "      (l_null",
            "        SESSION_TIMEOUT:'session-timeout'",
            "        (null_rest_of_line",
            "          DEC:'15'",
            "          NEWLINE:'\\n'))",
            "      (l_access_class",
            "        ACCESS_CLASS:'access-class'",
            "        name = (variable",
            "          DEC:'40')",
            "        IN:'in'",
            "        NEWLINE:'\\n')",
            "      (l_null",
            "        LOGOUT_WARNING:'logout-warning'",
            "        (null_rest_of_line",
            "          DEC:'20'",
            "          NEWLINE:'\\n'))",
            "      (l_null",
            "        ESCAPE_CHARACTER:'escape-character'",
            "        (null_rest_of_line",
            "          HEX:'0x61'",
            "          NEWLINE:'\\n'))",
            "      (l_exec_timeout",
            "        EXEC_TIMEOUT:'exec-timeout'",
            "        minutes = DEC:'15'",
            "        seconds = DEC:'0'",
            "        NEWLINE:'\\n')",
            "      (l_login",
            "        LOGIN:'login'",
            "        (l_login_authentication",
            "          AUTHENTICATION:'authentication'",
            "          name = (variable",
            "            VARIABLE:'blah'  <== mode:M_Authentication)",
            "          NEWLINE:'\\n'))",
            "      (l_null",
            "        TIMEOUT:'timeout'",
            "        (null_rest_of_line",
            "          LOGIN:'login'",
            "          RESPONSE:'response'",
            "          DEC:'120'",
            "          NEWLINE:'\\n'))",
            "      (l_vacant_message",
            "        VACANT_MESSAGE:'vacant-message'",
            "        ESCAPE_C:'^C'  <== mode:M_VacantMessageText",
            "        M_MOTD_C_MOTD:'\\n    Unauthorized access prohibited\\n'  <== mode:M_MOTD_C",
            "        ESCAPE_C:'^C'  <== mode:M_MOTD_C",
            "        NEWLINE:'\\n')",
            "      (l_null",
            "        NO:'no'",
            "        VACANT_MESSAGE:'vacant-message'",
            "        (null_rest_of_line",
            "          NEWLINE:'\\n'  <== mode:M_VacantMessageText))",
            "      (l_null",
            "        SPEED:'speed'",
            "        (null_rest_of_line",
            "          DEC:'38400'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_line",
            "      LINE:'line'",
            "      (line_type",
            "        CONSOLE:'console')",
            "      NEWLINE:'\\n'",
            "      (l_exec_timeout",
            "        EXEC_TIMEOUT:'exec-timeout'",
            "        minutes = DEC:'15'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_line",
            "      LINE:'line'",
            "      (line_type",
            "        VTY:'vty')",
            "      NEWLINE:'\\n'",
            "      (l_null",
            "        SESSION_LIMIT:'session-limit'",
            "        (null_rest_of_line",
            "          DEC:'64'",
            "          NEWLINE:'\\n'))",
            "      (l_access_class",
            "        ACCESS_CLASS:'access-class'",
            "        name = (variable",
            "          VARIABLE:'vty-acl')",
            "        IN:'in'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_line",
            "      LINE:'line'",
            "      (line_type)",
            "      slot1 = DEC:'0'",
            "      FORWARD_SLASH:'/'",
            "      port1 = DEC:'0'",
            "      FORWARD_SLASH:'/'",
            "      first = DEC:'0'",
            "      slot2 = DEC:'0'",
            "      FORWARD_SLASH:'/'",
            "      port2 = DEC:'0'",
            "      FORWARD_SLASH:'/'",
            "      last = DEC:'15'",
            "      NEWLINE:'\\n'",
            "      (l_null",
            "        SESSION_TIMEOUT:'session-timeout'",
            "        (null_rest_of_line",
            "          DEC:'60'",
            "          NEWLINE:'\\n'))",
            "      (l_access_class",
            "        ACCESS_CLASS:'access-class'",
            "        name = (variable",
            "          DEC:'40')",
            "        IN:'in'",
            "        NEWLINE:'\\n')",
            "      (l_login",
            "        LOGIN:'login'",
            "        (l_login_authentication",
            "          AUTHENTICATION:'authentication'",
            "          name = (variable",
            "            VARIABLE:'SecurID'  <== mode:M_Authentication)",
            "          NEWLINE:'\\n'))",
            "      (l_null",
            "        NO:'no'",
            "        EXEC:'exec'",
            "        (null_rest_of_line",
            "          NEWLINE:'\\n'))",
            "      (l_transport",
            "        TRANSPORT:'transport'",
            "        PREFERRED:'preferred'",
            "        (variable",
            "          NONE:'none')",
            "        NEWLINE:'\\n')",
            "      (l_transport",
            "        TRANSPORT:'transport'",
            "        INPUT:'input'",
            "        (variable",
            "          TELNET:'telnet')",
            "        NEWLINE:'\\n')",
            "      (l_transport",
            "        TRANSPORT:'transport'",
            "        OUTPUT:'output'",
            "        (variable",
            "          NONE:'none')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_line",
            "      LINE:'line'",
            "      (line_type)",
            "      first = DEC:'35'",
            "      last = DEC:'48'",
            "      NEWLINE:'\\n'",
            "      (l_null",
            "        SESSION_TIMEOUT:'session-timeout'",
            "        (null_rest_of_line",
            "          DEC:'540'",
            "          NEWLINE:'\\n'))",
            "      (l_null",
            "        LOCATION:'location'",
            "        (null_rest_of_line",
            "          M_COMMENT_NON_NEWLINE:' Covel Opt81 Network'  <== mode:M_COMMENT",
            "          NEWLINE:'\\n'  <== mode:M_COMMENT))",
            "      (l_null",
            "        ABSOLUTE_TIMEOUT:'absolute-timeout'",
            "        (null_rest_of_line",
            "          DEC:'540'",
            "          NEWLINE:'\\n'))",
            "      (l_null",
            "        SESSION_DISCONNECT_WARNING:'session-disconnect-warning'",
            "        (null_rest_of_line",
            "          M_COMMENT_NON_NEWLINE:' 30 message You will be disconnected in 30 seconds'  <== mode:M_COMMENT",
            "          NEWLINE:'\\n'  <== mode:M_COMMENT))",
            "      (l_null",
            "        MODEM:'modem'",
            "        (null_rest_of_line",
            "          VARIABLE:'Host'",
            "          NEWLINE:'\\n'))",
            "      (l_null",
            "        TERMINAL_TYPE:'terminal-type'",
            "        (null_rest_of_line",
            "          VARIABLE:'vt100'",
            "          NEWLINE:'\\n'))",
            "      (l_null",
            "        NO:'no'",
            "        EXEC:'exec'",
            "        (null_rest_of_line",
            "          NEWLINE:'\\n'))",
            "      (l_transport",
            "        TRANSPORT:'transport'",
            "        INPUT:'input'",
            "        (variable",
            "          ALL:'all')",
            "        NEWLINE:'\\n')",
            "      (l_null",
            "        DATABITS:'databits'",
            "        (null_rest_of_line",
            "          DEC:'7'",
            "          NEWLINE:'\\n'))",
            "      (l_null",
            "        STOPBITS:'stopbits'",
            "        (null_rest_of_line",
            "          DEC:'1'",
            "          NEWLINE:'\\n'))",
            "      (l_null",
            "        FLOWCONTROL:'flowcontrol'",
            "        (null_rest_of_line",
            "          HARDWARE:'hardware'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_line",
            "      LINE:'line'",
            "      (line_type)",
            "      first = DEC:'2'",
            "      NEWLINE:'\\n'",
            "      (l_null",
            "        NO:'no'",
            "        ACTIVATION_CHARACTER:'activation-character'",
            "        (null_rest_of_line",
            "          NEWLINE:'\\n'))",
            "      (l_login",
            "        LOGIN:'login'",
            "        (l_login_local",
            "          LOCAL:'local'",
            "          NEWLINE:'\\n'))",
            "      (l_transport",
            "        TRANSPORT:'transport'",
            "        INPUT:'input'",
            "        (variable",
            "          SSH:'ssh')",
            "        (variable",
            "          TELNET:'telnet')",
            "        NEWLINE:'\\n')",
            "      (l_null",
            "        PRIVILEGE:'privilege'",
            "        (null_rest_of_line",
            "          LEVEL:'level'",
            "          DEC:'15'",
            "          NEWLINE:'\\n'))",
            "      (l_null",
            "        NO:'no'",
            "        EXEC:'exec'",
            "        (null_rest_of_line",
            "          NEWLINE:'\\n'))",
            "      (l_exec_timeout",
            "        EXEC_TIMEOUT:'exec-timeout'",
            "        minutes = DEC:'0'",
            "        seconds = DEC:'15'",
            "        NEWLINE:'\\n')",
            "      (l_exec_timeout",
            "        EXEC_TIMEOUT:'exec-timeout'",
            "        minutes = DEC:'1'",
            "        NEWLINE:'\\n')",
            "      (l_null",
            "        LOCATION:'location'",
            "        (null_rest_of_line",
            "          M_COMMENT_NON_NEWLINE:' The end of the world'  <== mode:M_COMMENT",
            "          NEWLINE:'\\n'  <== mode:M_COMMENT))",
            "      (l_script",
            "        SCRIPT:'script'",
            "        DIALER:'dialer'",
            "        (variable",
            "          VARIABLE:'EVDO')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_line",
            "      LINE:'line'",
            "      (line_type",
            "        VTY:'vty')",
            "      first = DEC:'0'",
            "      last = DEC:'4'",
            "      NEWLINE:'\\n'",
            "      (l_access_class",
            "        ACCESS_CLASS:'access-class'",
            "        name = (variable",
            "          DEC:'99')",
            "        IN:'in'",
            "        NEWLINE:'\\n')",
            "      (l_accounting",
            "        ACCOUNTING:'accounting'",
            "        COMMANDS:'commands'",
            "        DEFAULT:'default'",
            "        NEWLINE:'\\n')",
            "      (l_exec_timeout",
            "        EXEC_TIMEOUT:'exec-timeout'",
            "        minutes = DEC:'60'",
            "        seconds = DEC:'0'",
            "        NEWLINE:'\\n')",
            "      (l_null",
            "        PASSWORD:'password'",
            "        (null_rest_of_line",
            "          VARIABLE:'xxx'",
            "          NEWLINE:'\\n'))",
            "      (l_null",
            "        LOGGING:'logging'",
            "        (null_rest_of_line",
            "          SYNCHRONOUS:'synchronous'",
            "          NEWLINE:'\\n'))",
            "      (l_access_class",
            "        IPV6:'ipv6'",
            "        ACCESS_CLASS:'access-class'",
            "        name = (variable",
            "          VARIABLE:'ipv6-vty-acl')",
            "        IN:'in'",
            "        NEWLINE:'\\n')",
            "      (l_null",
            "        RXSPEED:'rxspeed'",
            "        (null_rest_of_line",
            "          DEC:'300'",
            "          NEWLINE:'\\n'))",
            "      (l_transport",
            "        TRANSPORT:'transport'",
            "        PREFERRED:'preferred'",
            "        (variable",
            "          NONE:'none')",
            "        NEWLINE:'\\n')",
            "      (l_null",
            "        TXSPEED:'txspeed'",
            "        (null_rest_of_line",
            "          DEC:'500'",
            "          NEWLINE:'\\n'))",
            "      (l_null",
            "        NOTIFY:'notify'",
            "        (null_rest_of_line",
            "          NEWLINE:'\\n'))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/cisco_logging" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'cisco_logging'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_address",
            "          hostname = IP_ADDRESS:'1.2.3.4'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_address",
            "          hostname = IPV6_ADDRESS:'dead:beef::1'",
            "          VRF:'vrf'",
            "          vrf = (variable",
            "            DEFAULT:'default')",
            "          SEVERITY:'severity'",
            "          severity = (variable",
            "            VARIABLE:'info')",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_address",
            "          hostname = IPV6_ADDRESS:'dead:beef::1'",
            "          VRF:'vrf'",
            "          vrf = (variable",
            "            DEFAULT:'default')",
            "          SEVERITY:'severity'",
            "          severity = (variable",
            "            VARIABLE:'info')",
            "          PORT:'port'",
            "          DEFAULT:'default'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_null",
            "          ALARM:'alarm'",
            "          (null_rest_of_line",
            "            INFORMATIONAL:'informational'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_archive",
            "          ARCHIVE:'archive'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n')",
            "          (logging_archive_null",
            "            DEVICE:'device'",
            "            (null_rest_of_line",
            "              VARIABLE:'harddisk'",
            "              NEWLINE:'\\n'))",
            "          (logging_archive_null",
            "            FREQUENCY:'frequency'",
            "            (null_rest_of_line",
            "              VARIABLE:'daily'",
            "              NEWLINE:'\\n'))",
            "          (logging_archive_null",
            "            ARCHIVE_LENGTH:'archive-length'",
            "            (null_rest_of_line",
            "              DEC:'25'",
            "              NEWLINE:'\\n'))))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_null",
            "          ASDM:'asdm'",
            "          (null_rest_of_line",
            "            ERRORS:'errors'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_null",
            "          ASDM_BUFFER_SIZE:'asdm-buffer-size'",
            "          (null_rest_of_line",
            "            DEC:'512'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_null",
            "          BUFFER_SIZE:'buffer-size'",
            "          (null_rest_of_line",
            "            DEC:'100000'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_buffered",
            "          BUFFERED:'buffered'",
            "          size = DEC:'5'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_buffered",
            "          BUFFERED:'buffered'",
            "          size = DEC:'5000'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_buffered",
            "          BUFFERED:'buffered'",
            "          size = DEC:'5000'",
            "          (logging_severity",
            "            DEC:'5')",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_buffered",
            "          BUFFERED:'buffered'",
            "          size = DEC:'5000'",
            "          (logging_severity",
            "            ALERTS:'alerts')",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_buffered",
            "          BUFFERED:'buffered'",
            "          DISCRIMINATOR:'discriminator'",
            "          descr = (variable",
            "            VARIABLE:'MPLS-NOL')",
            "          size = DEC:'32000'",
            "          (logging_severity",
            "            NOTIFICATIONS:'notifications')",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_buffered",
            "          BUFFERED:'buffered'",
            "          (logging_severity",
            "            WARNINGS:'warnings')",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_null",
            "          CMTS:'cmts'",
            "          (null_rest_of_line",
            "            VARIABLE:'ipc-cable'",
            "            VARIABLE:'log-level'",
            "            ERRORS:'errors'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_null",
            "          CMTS:'cmts'",
            "          (null_rest_of_line",
            "            VARIABLE:'sea'",
            "            VARIABLE:'syslog-level'",
            "            ERRORS:'errors'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_console",
            "          CONSOLE:'console'",
            "          (logging_severity",
            "            WARNINGS:'warnings')",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_console",
            "          CONSOLE:'console'",
            "          DISABLE:'disable'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_console",
            "          CONSOLE:'console'",
            "          (logging_severity",
            "            DEC:'3')",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_null",
            "          COUNT:'count'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_null",
            "          DEBUG_TRACE:'debug-trace'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_device_id",
            "          DEVICE_ID:'device-id'",
            "          CLUSTER_ID:'cluster-id'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_device_id",
            "          DEVICE_ID:'device-id'",
            "          CONTEXT_NAME:'context-name'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_device_id",
            "          DEVICE_ID:'device-id'",
            "          HOSTNAME:'hostname'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_device_id",
            "          DEVICE_ID:'device-id'",
            "          IPADDRESS:'ipaddress'",
            "          (variable",
            "            INSIDE:'inside')",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_device_id",
            "          DEVICE_ID:'device-id'",
            "          STRING:'string'",
            "          (variable",
            "            VARIABLE:'ident_string')",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_null",
            "          DISCRIMINATOR:'discriminator'",
            "          (null_rest_of_line",
            "            VARIABLE:'AFLSEC'",
            "            SEVERITY:'severity'",
            "            VARIABLE:'drops'",
            "            DEC:'6'",
            "            VARIABLE:'msg-body'",
            "            VARIABLE:'drops'",
            "            VARIABLE:'AFLSEC'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_null",
            "          DISCRIMINATOR:'discriminator'",
            "          (null_rest_of_line",
            "            VARIABLE:'MPLS-NOL'",
            "            VARIABLE:'mnemonics'",
            "            VARIABLE:'drops'",
            "            VARIABLE:'NOLFDSB'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_enable",
            "          ENABLE:'enable'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_null",
            "          ESM:'esm'",
            "          (null_rest_of_line",
            "            CONFIG:'config'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_null",
            "          EVENT:'event'",
            "          (null_rest_of_line",
            "            VARIABLE:'link-status'",
            "            DEFAULT:'default'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_null",
            "          EVENTS:'events'",
            "          (null_rest_of_line",
            "            VARIABLE:'link-status'",
            "            VARIABLE:'software-interfaces'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_null",
            "          FACILITY:'facility'",
            "          (null_rest_of_line",
            "            VARIABLE:'local0'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_null",
            "          HISTORY:'history'",
            "          (null_rest_of_line",
            "            INFORMATIONAL:'informational'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_address",
            "          hostname = IP_ADDRESS:'1.2.3.4'",
            "          VRF:'vrf'",
            "          vrf = (variable",
            "            DEFAULT:'default')",
            "          SEVERITY:'severity'",
            "          severity = (variable",
            "            VARIABLE:'info')",
            "          PORT:'port'",
            "          DEFAULT:'default'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_address",
            "          hostname = IPV6_ADDRESS:'dead:beef::1'",
            "          VRF:'vrf'",
            "          vrf = (variable",
            "            DEFAULT:'default')",
            "          SEVERITY:'severity'",
            "          severity = (variable",
            "            VARIABLE:'info')",
            "          PORT:'port'",
            "          DEFAULT:'default'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_host",
            "          HOST:'host'",
            "          iname = (variable",
            "            MGMT:'mgmt')",
            "          hostname = (variable",
            "            IP_ADDRESS:'10.246.131.130')",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_host",
            "          HOST:'host'",
            "          hostname = (variable",
            "            IP_ADDRESS:'10.246.131.130')",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_host",
            "          HOST:'host'",
            "          hostname = (variable",
            "            IP_ADDRESS:'10.246.131.138')",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_host",
            "          HOST:'host'",
            "          hostname = (variable",
            "            IP_ADDRESS:'1.1.1.1')",
            "          TRANSPORT:'transport'",
            "          UDP:'udp'",
            "          PORT:'port'",
            "          DEC:'12345'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_host",
            "          HOST:'host'",
            "          hostname = (variable",
            "            IP_ADDRESS:'1.2.3.4')",
            "          VRF:'vrf'",
            "          vrf = (variable",
            "            VARIABLE:'mgmtVrf')",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_host",
            "          HOST:'host'",
            "          hostname = (variable",
            "            IP_ADDRESS:'1.2.3.4')",
            "          VRF:'vrf'",
            "          vrf = (variable",
            "            VARIABLE:'mgmtVrf')",
            "          PORT:'port'",
            "          DEFAULT:'default'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_host",
            "          HOST:'host'",
            "          hostname = (variable",
            "            IP_ADDRESS:'1.2.3.4')",
            "          VRF:'vrf'",
            "          vrf = (variable",
            "            VARIABLE:'mgmtVrf')",
            "          PORT:'port'",
            "          DEC:'514'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_host",
            "          HOST:'host'",
            "          iname = (variable",
            "            IPV4:'ipv4')",
            "          hostname = (variable",
            "            IP_ADDRESS:'1.2.3.4')",
            "          DISCRIMINATOR:'discriminator'",
            "          descr = (variable",
            "            VARIABLE:'MPLS-NOL')",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_host",
            "          HOST:'host'",
            "          iname = (variable",
            "            IPV6:'ipv6')",
            "          hostname = (variable",
            "            IPV6_ADDRESS:'dead:beef::1')",
            "          DISCRIMINATOR:'discriminator'",
            "          descr = (variable",
            "            VARIABLE:'MPLS-NOL')",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_null",
            "          IP:'ip'",
            "          (null_rest_of_line",
            "            ACCESS_LIST:'access-list'",
            "            CACHE:'cache'",
            "            VARIABLE:'entries'",
            "            DEC:'5000'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_null",
            "          IP:'ip'",
            "          (null_rest_of_line",
            "            ACCESS_LIST:'access-list'",
            "            CACHE:'cache'",
            "            INTERVAL:'interval'",
            "            ACL_NUM_STANDARD:'5'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_null",
            "          IP:'ip'",
            "          (null_rest_of_line",
            "            ACCESS_LIST:'access-list'",
            "            CACHE:'cache'",
            "            THRESHOLD:'threshold'",
            "            ACL_NUM_OTHER:'50000'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_null",
            "          LEVEL:'level'",
            "          (null_rest_of_line",
            "            ACLLOG:'acllog'",
            "            DEC:'3'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_null",
            "          LEVEL:'level'",
            "          (null_rest_of_line",
            "            ACLLOG:'acllog'",
            "            DEC:'6'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_message",
            "          MESSAGE:'message'",
            "          syslog_id = DEC:'1222444'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_message",
            "          MESSAGE:'message'",
            "          syslog_id = DEC:'1233334'",
            "          LEVEL:'level'",
            "          level = (variable",
            "            DEC:'1')",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_message",
            "          MESSAGE:'message'",
            "          syslog_id = DEC:'1233334'",
            "          STANDBY:'standby'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_message",
            "          MESSAGE:'message'",
            "          syslog_id = DEC:'1111234'",
            "          LEVEL:'level'",
            "          level = (variable",
            "            EMERGENCIES:'emergencies')",
            "          STANDBY:'standby'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_null",
            "          MONITOR:'monitor'",
            "          (null_rest_of_line",
            "            ERRORS:'errors'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_null",
            "          LINECARD:'linecard'",
            "          (null_rest_of_line",
            "            INFORMATIONAL:'informational'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_null",
            "          LOGFILE:'logfile'",
            "          (null_rest_of_line",
            "            VARIABLE:'aclfile'",
            "            DEC:'3'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_null",
            "          MESSAGE_COUNTER:'message-counter'",
            "          (null_rest_of_line",
            "            SYSLOG:'syslog'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_null",
            "          ORIGIN_ID:'origin-id'",
            "          (null_rest_of_line",
            "            HOSTNAME:'hostname'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_null",
            "          ORIGIN_ID:'origin-id'",
            "          (null_rest_of_line",
            "            IP:'ip'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_null",
            "          ORIGIN_ID:'origin-id'",
            "          (null_rest_of_line",
            "            IPV6:'ipv6'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_null",
            "          ORIGIN_ID:'origin-id'",
            "          (null_rest_of_line",
            "            STRING:'string'",
            "            VARIABLE:'my_origin'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_null",
            "          ORIGIN_ID:'origin-id'",
            "          (null_rest_of_line",
            "            STRING:'string'",
            "            DOUBLE_QUOTE:'\"'",
            "            VARIABLE:'my'",
            "            ORIGIN:'origin'",
            "            DOUBLE_QUOTE:'\"'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_null",
            "          PERMIT_HOSTDOWN:'permit-hostdown'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_queue",
            "          QUEUE:'queue'",
            "          size = DEC:'0'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_null",
            "          QUEUE_LIMIT:'queue-limit'",
            "          (null_rest_of_line",
            "            DEC:'100'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_null",
            "          RATE_LIMIT:'rate-limit'",
            "          (null_rest_of_line",
            "            DEC:'100'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_null",
            "          RATE_LIMIT:'rate-limit'",
            "          (null_rest_of_line",
            "            CONSOLE:'console'",
            "            DEC:'9'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_null",
            "          RATE_LIMIT:'rate-limit'",
            "          (null_rest_of_line",
            "            CONSOLE:'console'",
            "            DEC:'10'",
            "            EXCEPT:'except'",
            "            ERRORS:'errors'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_null",
            "          SEQUENCE_NUMS:'sequence-nums'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_server",
            "          SERVER:'server'",
            "          hostname = IP_ADDRESS:'1.2.3.4'",
            "          (null_rest_of_line",
            "            DEC:'6'",
            "            USE_VRF:'use-vrf'",
            "            DEFAULT:'default'",
            "            FACILITY:'facility'",
            "            VARIABLE:'local0'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_server",
            "          SERVER:'server'",
            "          hostname = IP_ADDRESS:'1.2.3.4'",
            "          (null_rest_of_line",
            "            DEC:'6'",
            "            USE_VRF:'use-vrf'",
            "            MANAGEMENT:'management'",
            "            FACILITY:'facility'",
            "            VARIABLE:'local0'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_null",
            "          SERVER_ARP:'server-arp'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_null",
            "          SNMP_AUTHFAIL:'snmp-authfail'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_source_interface",
            "          SOURCE_INTERFACE:'source-interface'",
            "          (interface_name",
            "            name_prefix_alpha = M_Interface_PREFIX:'FastEthernet'  <== mode:M_Interface",
            "            (range",
            "              (subrange",
            "                low = DEC:'1'  <== mode:M_Interface)))",
            "          VRF:'vrf'  <== mode:M_Interface",
            "          vrf = (variable",
            "            VARIABLE:'mgmtVrf')",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_source_interface",
            "          SOURCE_INTERFACE:'source-interface'",
            "          (interface_name",
            "            name_prefix_alpha = M_Interface_PREFIX:'loopback'  <== mode:M_Interface",
            "            (range",
            "              (subrange",
            "                low = DEC:'0'  <== mode:M_Interface)))",
            "          NEWLINE:'\\n'  <== mode:M_Interface))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_source_interface",
            "          SOURCE_INTERFACE:'source-interface'",
            "          (interface_name",
            "            name_prefix_alpha = M_Interface_PREFIX:'Loopback'  <== mode:M_Interface",
            "            (range",
            "              (subrange",
            "                low = DEC:'0'  <== mode:M_Interface)))",
            "          NEWLINE:'\\n'  <== mode:M_Interface))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_source_interface",
            "          SOURCE_INTERFACE:'source-interface'",
            "          (interface_name",
            "            name_prefix_alpha = M_Interface_PREFIX:'mgmt'  <== mode:M_Interface",
            "            (range",
            "              (subrange",
            "                low = DEC:'0'  <== mode:M_Interface)))",
            "          NEWLINE:'\\n'  <== mode:M_Interface))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_source_interface",
            "          SOURCE_INTERFACE:'source-interface'",
            "          (interface_name",
            "            name_prefix_alpha = M_Interface_PREFIX:'Vlan'  <== mode:M_Interface",
            "            (range",
            "              (subrange",
            "                low = DEC:'1'  <== mode:M_Interface)))",
            "          NEWLINE:'\\n'  <== mode:M_Interface))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_suppress",
            "          SUPPRESS:'suppress'",
            "          (null_rest_of_line",
            "            RULE:'rule'",
            "            VARIABLE:'ABC'",
            "            NEWLINE:'\\n')",
            "          (logging_suppress_null",
            "            ALARM:'alarm'",
            "            (null_rest_of_line",
            "              VARIABLE:'PLATFORM'",
            "              VARIABLE:'ABC'",
            "              VARIABLE:'MESSAGE_FAILED'",
            "              NEWLINE:'\\n'))",
            "          (logging_suppress_null",
            "            ALL_ALARMS:'all-alarms'",
            "            (null_rest_of_line",
            "              NEWLINE:'\\n'))))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_suppress",
            "          SUPPRESS:'suppress'",
            "          (null_rest_of_line",
            "            APPLY:'apply'",
            "            RULE:'rule'",
            "            VARIABLE:'BCD'",
            "            NEWLINE:'\\n')",
            "          (logging_suppress_null",
            "            ALL_OF_ROUTER:'all-of-router'",
            "            (null_rest_of_line",
            "              NEWLINE:'\\n'))))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_null",
            "          TIMESTAMP:'timestamp'",
            "          (null_rest_of_line",
            "            VARIABLE:'milliseconds'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_trap",
            "          TRAP:'trap'",
            "          (logging_severity",
            "            ERRORS:'errors')",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_trap",
            "          TRAP:'trap'",
            "          (logging_severity",
            "            DEC:'6')",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_null",
            "          USERINFO:'userinfo'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_vrf",
            "        VRF:'vrf'",
            "        vrf = (variable",
            "          MGMT:'mgmt')",
            "        (logging_common",
            "          (logging_host",
            "            HOST:'host'",
            "            hostname = (variable",
            "              IP_ADDRESS:'11.2.3.4')",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_vrf",
            "        VRF:'vrf'",
            "        vrf = (variable",
            "          MGMT:'mgmt')",
            "        (logging_common",
            "          (logging_source_interface",
            "            SOURCE_INTERFACE:'source-interface'",
            "            (interface_name",
            "              name_prefix_alpha = M_Interface_PREFIX:'Management'  <== mode:M_Interface",
            "              (range",
            "                (subrange",
            "                  low = DEC:'0'  <== mode:M_Interface)))",
            "            NEWLINE:'\\n'  <== mode:M_Interface)))))",
            "  (stanza",
            "    (s_logging",
            "      NO:'no'",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_console",
            "          CONSOLE:'console'",
            "          NEWLINE:'\\n'))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/cisco_mac_acl" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'cisco_mac_acl'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_mac_access_list",
            "      ACCESS_LIST:'access-list'",
            "      num = ACL_NUM_MAC:'700'",
            "      action = (access_list_action",
            "        PERMIT:'permit')",
            "      address = MAC_ADDRESS_LITERAL:'0000.0000.0000'",
            "      wildcard = MAC_ADDRESS_LITERAL:'ffff.ffff.ffff'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_mac_access_list_extended",
            "      ACCESS_LIST:'access-list'",
            "      num = ACL_NUM_EXTENDED_MAC:'1199'",
            "      (s_mac_access_list_extended_tail",
            "        action = (access_list_action",
            "          PERMIT:'permit')",
            "        src = (access_list_mac_range",
            "          address = MAC_ADDRESS_LITERAL:'0000.0000.0000'",
            "          wildcard = MAC_ADDRESS_LITERAL:'ffff.ffff.ffff')",
            "        dst = (access_list_mac_range",
            "          address = MAC_ADDRESS_LITERAL:'0000.0000.0000'",
            "          wildcard = MAC_ADDRESS_LITERAL:'ffff.ffff.ffff')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_mac_access_list_extended",
            "      MAC:'mac'",
            "      ACCESS_LIST:'access-list'",
            "      name = (variable_permissive",
            "        VARIABLE:'copp-system-p-acl-mac-cdp-udld-vtp')",
            "      NEWLINE:'\\n'",
            "      (s_mac_access_list_extended_tail",
            "        num = DEC:'10'",
            "        action = (access_list_action",
            "          PERMIT:'permit')",
            "        src = (access_list_mac_range",
            "          ANY:'any')",
            "        dst = (access_list_mac_range",
            "          address = MAC_ADDRESS_LITERAL:'0100.0ccc.cccc'",
            "          wildcard = MAC_ADDRESS_LITERAL:'0000.0000.0000')",
            "        NEWLINE:'\\n')))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/cisco_misc" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'cisco_misc'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_null",
            "      (null_block",
            "        NO_L4R_SHIM:'No l4r_shim'",
            "        (null_rest_of_line",
            "          VARIABLE:'subsystem'",
            "          IS:'is'",
            "          VARIABLE:'included'",
            "          IN:'in'",
            "          VARIABLE:'this'",
            "          VARIABLE:'platform.'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_ap",
            "      AP:'ap'",
            "      (ap_null",
            "        GROUP:'group'",
            "        (null_rest_of_line",
            "          VARIABLE:'default-group'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_null",
            "      (null_block",
            "        APPLETALK:'appletalk'",
            "        (null_rest_of_line",
            "          ROUTING:'routing'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_archive",
            "      ARCHIVE:'archive'",
            "      (null_rest_of_line",
            "        NEWLINE:'\\n')",
            "      (archive_log",
            "        LOG:'log'",
            "        (null_rest_of_line",
            "          CONFIG:'config'",
            "          NEWLINE:'\\n')",
            "        (al_null",
            "          HIDEKEYS:'hidekeys'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n'))",
            "        (al_null",
            "          LOGGING:'logging'",
            "          (null_rest_of_line",
            "            ENABLE:'enable'",
            "            NEWLINE:'\\n'))",
            "        (al_null",
            "          LOGGING:'logging'",
            "          (null_rest_of_line",
            "            SIZE:'size'",
            "            DEC:'200'",
            "            NEWLINE:'\\n'))",
            "        (al_null",
            "          NOTIFY:'notify'",
            "          (null_rest_of_line",
            "            SYSLOG:'syslog'",
            "            VARIABLE:'contenttype'",
            "            VARIABLE:'plaintext'",
            "            NEWLINE:'\\n')))",
            "      (archive_null",
            "        MAXIMUM:'maximum'",
            "        (null_rest_of_line",
            "          DEC:'14'",
            "          NEWLINE:'\\n'))",
            "      (archive_null",
            "        PATH:'path'",
            "        (null_rest_of_line",
            "          FLASH:'flash'",
            "          COLON:':'",
            "          VARIABLE:'myconfig'",
            "          NEWLINE:'\\n'))",
            "      (archive_null",
            "        PATH:'path'",
            "        (null_rest_of_line",
            "          TFTP:'tftp'",
            "          COLON:':'",
            "          FORWARD_SLASH:'/'",
            "          FORWARD_SLASH:'/'",
            "          IP_ADDRESS:'172.16.1.10'",
            "          FORWARD_SLASH:'/'",
            "          NEWLINE:'\\n'))",
            "      (archive_null",
            "        WRITE_MEMORY:'write-memory'",
            "        (null_rest_of_line",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_null",
            "      (null_block",
            "        NO:'no'",
            "        BLOGGERD:'bloggerd'",
            "        (null_rest_of_line",
            "          VARIABLE:'log-dump'",
            "          ALL:'all'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_null",
            "      (null_block",
            "        BLOGGERD:'bloggerd'",
            "        (null_rest_of_line",
            "          VARIABLE:'log-throttle'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_null",
            "      (null_block",
            "        NO:'no'",
            "        BLOGGERD:'bloggerd'",
            "        (null_rest_of_line",
            "          VARIABLE:'log-transfer'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        BRIDGE_DOMAIN:'bridge-domain'",
            "        DEC:'707'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_block",
            "        BSD_CLIENT:'bsd-client'",
            "        (null_rest_of_line",
            "          SERVER:'server'",
            "          URL:'url'",
            "          HTTPS:'https'",
            "          COLON:':'",
            "          VARIABLE:'//cloudsso.cisco.com/as/token.oauth2'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_null",
            "      (null_block",
            "        BUFFERS:'buffers'",
            "        (null_rest_of_line",
            "          SMALL:'small'",
            "          PERMANENT:'permanent'",
            "          DEC:'60'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_cluster",
            "      CLUSTER:'cluster'",
            "      ENABLE:'enable'",
            "      (null_rest_of_line",
            "        VARIABLE:'ts'",
            "        DEC:'0'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_cluster",
            "      CLUSTER:'cluster'",
            "      RUN:'run'",
            "      (null_rest_of_line",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_block",
            "        COAP:'coap'",
            "        (null_rest_of_line",
            "          HTTP:'http'",
            "          ENABLE:'enable'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        CONFIG_REGISTER:'config-register'",
            "        HEX:'0x2102'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_configure",
            "      CONFIGURE:'configure'",
            "      (configure_maintenance",
            "        MAINTENANCE:'maintenance'",
            "        (null_rest_of_line",
            "          PROFILE:'profile'",
            "          VARIABLE:'normal-mode'",
            "          NEWLINE:'\\n')",
            "        (configure_maintenance_router",
            "          ROUTER:'router'",
            "          (null_rest_of_line",
            "            OSPF:'ospf'",
            "            DEC:'1'",
            "            NEWLINE:'\\n')",
            "          (configure_maintenance_router_null",
            "            NO:'no'",
            "            ISOLATE:'isolate'",
            "            (null_rest_of_line",
            "              NEWLINE:'\\n')))",
            "        (configure_maintenance_router",
            "          ROUTER:'router'",
            "          (null_rest_of_line",
            "            BGP:'bgp'",
            "            DEC:'12345'",
            "            NEWLINE:'\\n')",
            "          (configure_maintenance_router_null",
            "            NO:'no'",
            "            ISOLATE:'isolate'",
            "            (null_rest_of_line",
            "              NEWLINE:'\\n')))",
            "        (configure_maintenance_null",
            "          NO:'no'",
            "          IP:'ip'",
            "          (null_rest_of_line",
            "            PIM:'pim'",
            "            ISOLATE:'isolate'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_configure",
            "      CONFIGURE:'configure'",
            "      (configure_maintenance",
            "        MAINTENANCE:'maintenance'",
            "        (null_rest_of_line",
            "          PROFILE:'profile'",
            "          VARIABLE:'maintenance-mode'",
            "          NEWLINE:'\\n')",
            "        (configure_maintenance_null",
            "          IP:'ip'",
            "          (null_rest_of_line",
            "            PIM:'pim'",
            "            ISOLATE:'isolate'",
            "            NEWLINE:'\\n'))",
            "        (configure_maintenance_router",
            "          ROUTER:'router'",
            "          (null_rest_of_line",
            "            BGP:'bgp'",
            "            DEC:'65601'",
            "            NEWLINE:'\\n')",
            "          (configure_maintenance_router_null",
            "            ISOLATE:'isolate'",
            "            (null_rest_of_line",
            "              NEWLINE:'\\n')))",
            "        (configure_maintenance_router",
            "          ROUTER:'router'",
            "          (null_rest_of_line",
            "            OSPF:'ospf'",
            "            DEC:'1'",
            "            NEWLINE:'\\n')",
            "          (configure_maintenance_router_null",
            "            ISOLATE:'isolate'",
            "            (null_rest_of_line",
            "              NEWLINE:'\\n'))))))",
            "  (stanza",
            "    (s_configure",
            "      CONFIGURE:'configure'",
            "      (configure_null",
            "        (null_rest_of_line",
            "          TERMINAL:'terminal'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_cops",
            "      COPS:'cops'",
            "      (cops_listener",
            "        LISTENER:'listener'",
            "        (copsl_access_list",
            "          ACCESS_LIST:'access-list'",
            "          name = (variable_permissive",
            "            VARIABLE:'cops-acl')",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_cos_queue_group",
            "      COS_QUEUE_GROUP:'cos-queue-group'",
            "      (null_rest_of_line",
            "        VARIABLE:'queuemap-red'",
            "        NEWLINE:'\\n')",
            "      (cqg_null",
            "        PRECEDENCE:'precedence'",
            "        (null_rest_of_line",
            "          DEC:'0'",
            "          RANDOM_DETECT_LABEL:'random-detect-label'",
            "          DEC:'0'",
            "          NEWLINE:'\\n'))",
            "      (cqg_null",
            "        QUEUE:'queue'",
            "        (null_rest_of_line",
            "          VARIABLE:'low-latency'",
            "          VARIABLE:'strict-priority'",
            "          NEWLINE:'\\n'))",
            "      (cqg_null",
            "        RANDOM_DETECT_LABEL:'random-detect-label'",
            "        (null_rest_of_line",
            "          DEC:'0'",
            "          DEC:'1498'",
            "          DEC:'9690'",
            "          DEC:'1'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_ctl_file",
            "      CTL_FILE:'ctl-file'",
            "      (null_rest_of_line",
            "        VARIABLE:'ctl_phoneproxy_file'",
            "        NEWLINE:'\\n')",
            "      (ctlf_null",
            "        RECORD_ENTRY:'record-entry'",
            "        (null_rest_of_line",
            "          VARIABLE:'cucm-tftp'",
            "          TRUSTPOINT:'trustpoint'",
            "          VARIABLE:'phoneproxy_trustpoint2'",
            "          ADDRESS:'address'",
            "          IP_ADDRESS:'169.232.59.5'",
            "          NEWLINE:'\\n'))",
            "      (ctlf_null",
            "        NO:'no'",
            "        SHUTDOWN:'shutdown'",
            "        (null_rest_of_line",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_null",
            "      (null_block",
            "        DEVICE:'device'",
            "        (null_rest_of_line",
            "          VARIABLE:'classifier'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_dialer",
            "      DIALER:'dialer'",
            "      (dialer_null",
            "        WATCH_LIST:'watch-list'",
            "        (null_rest_of_line",
            "          DEC:'76'",
            "          IP:'ip'",
            "          IP_ADDRESS:'1.2.3.128'",
            "          IP_ADDRESS:'255.255.255.192'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        DOWNLINK:'downlink'",
            "        DELAY:'delay'",
            "        DISABLE:'disable'",
            "        TIMEOUT:'timeout'",
            "        DEC:'20'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_block",
            "        NO:'no'",
            "        DUAL_MODE_DEFAULT_VLAN:'dual-mode-default-vlan'",
            "        (null_rest_of_line",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        NO:'no'",
            "        ENVIRONMENT_MONITOR:'environment-monitor'",
            "        SHUTDOWN:'shutdown'",
            "        VARIABLE:'temperature'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        EPM:'epm'",
            "        LOGGING:'logging'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_block",
            "        ETHERNET:'ethernet'",
            "        (null_rest_of_line",
            "          VARIABLE:'lmi'",
            "          VARIABLE:'ce'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_event",
            "      EVENT:'event'",
            "      (null_rest_of_line",
            "        MANAGER:'manager'",
            "        VARIABLE:'applet'",
            "        VARIABLE:'Interface_Load'",
            "        NEWLINE:'\\n')",
            "      (event_null",
            "        ACTION:'action'",
            "        (null_rest_of_line",
            "          FLOAT:'1.0'",
            "          SYSLOG:'syslog'",
            "          VARIABLE:'msg'",
            "          DOUBLE_QUOTE:'\"'",
            "          VARIABLE:'Interface'",
            "          VARIABLE:'Status'",
            "          VARIABLE:'Saved'",
            "          DASH:'-'",
            "          VARIABLE:'Check'",
            "          VARIABLE:'disk1'",
            "          COLON:':'",
            "          VARIABLE:'1.txt'",
            "          DOUBLE_QUOTE:'\"'",
            "          NEWLINE:'\\n'))",
            "      (event_null",
            "        ACTION:'action'",
            "        (null_rest_of_line",
            "          FLOAT:'1.0'",
            "          SYSLOG:'syslog'",
            "          PRIORITY:'priority'",
            "          INFORMATIONAL:'informational'",
            "          VARIABLE:'msg'",
            "          DOUBLE_QUOTE:'\"'",
            "          RP_VARIABLE:'$_cli_msg'",
            "          DOUBLE_QUOTE:'\"'",
            "          NEWLINE:'\\n'))",
            "      (event_null",
            "        ACTION:'action'",
            "        (null_rest_of_line",
            "          FLOAT:'2.0'",
            "          CLI:'cli'",
            "          COMMAND:'command'",
            "          QUOTED_TEXT:'\"enable\"'  <== mode:M_Command",
            "          NEWLINE:'\\n'  <== mode:M_Command))",
            "      (event_null",
            "        ACTION:'action'",
            "        (null_rest_of_line",
            "          FLOAT:'3.0'",
            "          CLI:'cli'",
            "          COMMAND:'command'",
            "          QUOTED_TEXT:'\"show clock | append disk1:1.txt\"'  <== mode:M_Command",
            "          NEWLINE:'\\n'  <== mode:M_Command))",
            "      (event_null",
            "        ACTION:'action'",
            "        (null_rest_of_line",
            "          FLOAT:'4.0'",
            "          CLI:'cli'",
            "          COMMAND:'command'",
            "          QUOTED_TEXT:'\"show interface GigabitEthernet2/15 | append disk1:1.txt\"'  <== mode:M_Command",
            "          NEWLINE:'\\n'  <== mode:M_Command))",
            "      (event_null",
            "        EVENT:'event'",
            "        (null_rest_of_line",
            "          CLI:'cli'",
            "          VARIABLE:'pattern'",
            "          DOUBLE_QUOTE:'\"'",
            "          PERIOD:'.'",
            "          ASTERISK:'*'",
            "          DOUBLE_QUOTE:'\"'",
            "          SYNC:'sync'",
            "          NO:'no'",
            "          VARIABLE:'skip'",
            "          NO:'no'",
            "          NEWLINE:'\\n'))",
            "      (event_null",
            "        EVENT:'event'",
            "        (null_rest_of_line",
            "          TIMER:'timer'",
            "          VARIABLE:'cron'",
            "          NAME:'name'",
            "          VARIABLE:'Runat4'  <== mode:M_Name",
            "          VARIABLE:'cron-entry'",
            "          DOUBLE_QUOTE:'\"'",
            "          ASTERISK:'*'",
            "          FORWARD_SLASH:'/'",
            "          DEC:'1'",
            "          DEC:'20'",
            "          DEC:'19'",
            "          DEC:'5'",
            "          ASTERISK:'*'",
            "          DOUBLE_QUOTE:'\"'",
            "          NEWLINE:'\\n'))",
            "      (event_null",
            "        SET:'set'",
            "        (null_rest_of_line",
            "          FLOAT:'2.0'",
            "          VARIABLE:'_exit_status'",
            "          DEC:'1'",
            "          NEWLINE:'\\n'))",
            "      (event_null",
            "        EVENT:'event'",
            "        (null_rest_of_line",
            "          MANAGER:'manager'",
            "          VARIABLE:'applet'",
            "          VARIABLE:'URLFilter_bw_safeguard'",
            "          NEWLINE:'\\n'))",
            "      (event_null",
            "        ACTION:'action'",
            "        (null_rest_of_line",
            "          DEC:'1'",
            "          SYSLOG:'syslog'",
            "          VARIABLE:'msg'",
            "          DOUBLE_QUOTE:'\"'",
            "          VARIABLE:'Traffic'",
            "          VARIABLE:'rate'",
            "          VARIABLE:'to'",
            "          VARIABLE:'URLFilter'",
            "          VARIABLE:'pepper'",
            "          VARIABLE:'has'",
            "          VARIABLE:'exceeded'",
            "          VARIABLE:'100Mbit/s'",
            "          VARIABLE:'over'",
            "          DEC:'2'",
            "          VARIABLE:'minutes'",
            "          COMMA:','",
            "          VARIABLE:'shutting'",
            "          VARIABLE:'down'",
            "          VARIABLE:'Tunnel'",
            "          VARIABLE:'Interface...'",
            "          DOUBLE_QUOTE:'\"'",
            "          NEWLINE:'\\n'))",
            "      (event_null",
            "        ACTION:'action'",
            "        (null_rest_of_line",
            "          DEC:'2'",
            "          CLI:'cli'",
            "          COMMAND:'command'",
            "          QUOTED_TEXT:'\"enable\"'  <== mode:M_Command",
            "          NEWLINE:'\\n'  <== mode:M_Command))",
            "      (event_null",
            "        ACTION:'action'",
            "        (null_rest_of_line",
            "          DEC:'3'",
            "          CLI:'cli'",
            "          COMMAND:'command'",
            "          QUOTED_TEXT:'\"config t\"'  <== mode:M_Command",
            "          NEWLINE:'\\n'  <== mode:M_Command))",
            "      (event_null",
            "        ACTION:'action'",
            "        (null_rest_of_line",
            "          DEC:'4'",
            "          CLI:'cli'",
            "          COMMAND:'command'",
            "          QUOTED_TEXT:'\"interface Tu9\"'  <== mode:M_Command",
            "          NEWLINE:'\\n'  <== mode:M_Command))",
            "      (event_null",
            "        ACTION:'action'",
            "        (null_rest_of_line",
            "          DEC:'5'",
            "          CLI:'cli'",
            "          COMMAND:'command'",
            "          QUOTED_TEXT:'\"shutdown\"'  <== mode:M_Command",
            "          NEWLINE:'\\n'  <== mode:M_Command))",
            "      (event_null",
            "        ACTION:'action'",
            "        (null_rest_of_line",
            "          DEC:'6'",
            "          SYSLOG:'syslog'",
            "          VARIABLE:'msg'",
            "          DOUBLE_QUOTE:'\"'",
            "          VARIABLE:'Interface'",
            "          VARIABLE:'Tunnel9'",
            "          VARIABLE:'to'",
            "          VARIABLE:'URLfilter'",
            "          VARIABLE:'pepper'",
            "          VARIABLE:'has'",
            "          VARIABLE:'been'",
            "          VARIABLE:'shutdown.'",
            "          VARIABLE:'It'",
            "          VARIABLE:'needs'",
            "          VARIABLE:'to'",
            "          VARIABLE:'be'",
            "          VARIABLE:'manually'",
            "          VARIABLE:'unshut.'",
            "          DOUBLE_QUOTE:'\"'",
            "          NEWLINE:'\\n'))",
            "      (event_null",
            "        ACTION:'action'",
            "        (null_rest_of_line",
            "          DEC:'7'",
            "          SYSLOG:'syslog'",
            "          VARIABLE:'msg'",
            "          DOUBLE_QUOTE:'\"'",
            "          VARIABLE:'Interface'",
            "          VARIABLE:'\\'",
            "          DOUBLE_QUOTE:'\"'",
            "          VARIABLE:'Tunnel9\\'",
            "          DOUBLE_QUOTE:'\"'",
            "          VARIABLE:'to'",
            "          VARIABLE:'URLfilter'",
            "          VARIABLE:'pepper'",
            "          VARIABLE:'has'",
            "          VARIABLE:'been'",
            "          VARIABLE:'shutdown.'",
            "          VARIABLE:'It'",
            "          VARIABLE:'needs'",
            "          VARIABLE:'to'",
            "          VARIABLE:'be'",
            "          VARIABLE:'manually'",
            "          VARIABLE:'unshut.'",
            "          DOUBLE_QUOTE:'\"'",
            "          NEWLINE:'\\n'))",
            "      (event_null",
            "        ACTION:'action'",
            "        (null_rest_of_line",
            "          DEC:'8'",
            "          SYSLOG:'syslog'",
            "          VARIABLE:'msg'",
            "          DOUBLE_QUOTE:'\"'",
            "          DOUBLE_QUOTE:'\"'",
            "          NEWLINE:'\\n'))",
            "      (event_null",
            "        EVENT:'event'",
            "        (null_rest_of_line",
            "          INTERFACE:'interface'",
            "          M_Interface_PREFIX:'name'  <== mode:M_Interface",
            "          M_Interface_PREFIX:'Tunnel'  <== mode:M_Interface",
            "          DEC:'9'  <== mode:M_Interface",
            "          M_Interface_PREFIX:'parameter'  <== mode:M_Interface",
            "          M_Interface_PREFIX:'transmit_rate_bps'  <== mode:M_Interface",
            "          M_Interface_PREFIX:'entry-op'  <== mode:M_Interface",
            "          M_Interface_PREFIX:'ge'  <== mode:M_Interface",
            "          M_Interface_PREFIX:'entry-val'  <== mode:M_Interface",
            "          DEC:'100000000'  <== mode:M_Interface",
            "          M_Interface_PREFIX:'entry-type'  <== mode:M_Interface",
            "          M_Interface_PREFIX:'rate'  <== mode:M_Interface",
            "          M_Interface_PREFIX:'average-factor'  <== mode:M_Interface",
            "          DEC:'2'  <== mode:M_Interface",
            "          M_Interface_PREFIX:'poll-interval'  <== mode:M_Interface",
            "          DEC:'60'  <== mode:M_Interface",
            "          NEWLINE:'\\n'  <== mode:M_Interface))))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        EXCEPTION:'exception'",
            "        CRASHINFO:'crashinfo'",
            "        VARIABLE:'maximum-files'",
            "        DEC:'1'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_block",
            "        EXCEPTION_SLAVE:'exception-slave'",
            "        (null_rest_of_line",
            "          VARIABLE:'core-file'",
            "          VARIABLE:'C2960-WM3-core'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        EXCEPTION:'exception'",
            "        MEMORY:'memory'",
            "        IGNORE:'ignore'",
            "        VARIABLE:'overflow'",
            "        VARIABLE:'io'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        EXCEPTION:'exception'",
            "        MEMORY:'memory'",
            "        IGNORE:'ignore'",
            "        VARIABLE:'overflow'",
            "        VARIABLE:'processor'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        FABRIC_MODE:'fabric-mode'",
            "        VARIABLE:'40G'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_block",
            "        NO:'no'",
            "        FABRICPATH:'fabricpath'",
            "        (null_rest_of_line",
            "          MODE:'mode'",
            "          VARIABLE:'transit'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_null",
            "      (null_block",
            "        FEX:'fex'",
            "        (null_rest_of_line",
            "          DEC:'111'",
            "          NEWLINE:'\\n')",
            "        (description_line",
            "          DESCRIPTION:'description'",
            "          text = RAW_TEXT:' \"HOOBOO\"'  <== mode:M_Description",
            "          NEWLINE:'\\n'  <== mode:M_Description)",
            "        (null_inner",
            "          PINNING:'pinning'",
            "          (null_rest_of_line",
            "            VARIABLE:'max-links'",
            "            DEC:'1'",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          TYPE:'type'",
            "          (null_rest_of_line",
            "            VARIABLE:'N2232TM-E'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_gatekeeper",
            "      GATEKEEPER:'gatekeeper'",
            "      NEWLINE:'\\n'",
            "      (gk_null",
            "        GW_TYPE_PREFIX:'gw-type-prefix'",
            "        (null_rest_of_line",
            "          DEC:'88'",
            "          ASTERISK:'*'",
            "          NEWLINE:'\\n'))",
            "      (gk_null",
            "        LRQ:'lrq'",
            "        (null_rest_of_line",
            "          VARIABLE:'forward-queries'",
            "          VARIABLE:'add-hop-count'",
            "          NEWLINE:'\\n'))",
            "      (gk_null",
            "        NO:'no'",
            "        SHUTDOWN:'shutdown'",
            "        (null_rest_of_line",
            "          NEWLINE:'\\n'))",
            "      (gk_null",
            "        ZONE:'zone'",
            "        (null_rest_of_line",
            "          LOCAL:'local'",
            "          VARIABLE:'SVL-GK.cenic.net'",
            "          VARIABLE:'cenic.net'",
            "          VARIABLE:'invia'",
            "          VARIABLE:'SVL-GK.cenic.net'",
            "          VARIABLE:'outvia'",
            "          VARIABLE:'SVL-GK.cenic.net'",
            "          NEWLINE:'\\n'))",
            "      (gk_null",
            "        ZONE:'zone'",
            "        (null_rest_of_line",
            "          REMOTE:'remote'",
            "          VARIABLE:'LAX-GK.cenic.net'",
            "          VARIABLE:'cenic.net'",
            "          IP_ADDRESS:'137.164.29.2'",
            "          DEC:'1719'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_global_port_security",
            "      GLOBAL_PORT_SECURITY:'global-port-security'",
            "      NEWLINE:'\\n'",
            "      (gpsec_null",
            "        AGE:'age'",
            "        (null_rest_of_line",
            "          DEC:'2'",
            "          NEWLINE:'\\n'))",
            "      (gpsec_null",
            "        DELETE_DYNAMIC_LEARN:'delete-dynamic-learn'",
            "        (null_rest_of_line",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_hardware",
            "      HARDWARE:'hardware'",
            "      (null_rest_of_line",
            "        IP:'ip'",
            "        VARIABLE:'glean'",
            "        VARIABLE:'throttle'",
            "        MAXIMUM:'maximum'",
            "        DEC:'1000'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_block",
            "        HPM:'hpm'",
            "        (null_rest_of_line",
            "          VARIABLE:'topN'",
            "          ENABLE:'enable'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_null",
            "      (null_block",
            "        IP:'ip'",
            "        FLOW_AGGREGATION:'flow-aggregation'",
            "        (null_rest_of_line",
            "          CACHE:'cache'",
            "          VARIABLE:'source-prefix'",
            "          NEWLINE:'\\n')",
            "        (null_inner",
            "          ENABLED:'enabled'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_null",
            "      (null_block",
            "        IP:'ip'",
            "        INSPECT:'inspect'",
            "        (null_rest_of_line",
            "          VARIABLE:'WAAS'",
            "          VARIABLE:'flush-timeout'",
            "          DEC:'10'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_null",
            "      (null_block",
            "        IP:'ip'",
            "        INTERNAL:'internal'",
            "        (null_rest_of_line",
            "          EVENT_HISTORY:'event-history'",
            "          VARIABLE:'static-rt'",
            "          SIZE:'size'",
            "          SMALL:'small'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        IP:'ip'",
            "        MFWD:'mfwd'",
            "        EVENT_HISTORY:'event-history'",
            "        PACKET:'packet'",
            "        SIZE:'size'",
            "        SMALL:'small'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        IP:'ip'",
            "        OSPF:'ospf'",
            "        NAME_LOOKUP:'name-lookup'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        IP:'ip'",
            "        SPD:'spd'",
            "        QUEUE:'queue'",
            "        VARIABLE:'max-threshold'",
            "        DEC:'123'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        IP:'ip'",
            "        SPD:'spd'",
            "        QUEUE:'queue'",
            "        VARIABLE:'min-threshold'",
            "        DEC:'123'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_ipc",
            "      IPC:'ipc'",
            "      (null_rest_of_line",
            "        ZONE:'zone'",
            "        DEFAULT:'default'",
            "        NEWLINE:'\\n')",
            "      (ipc_association",
            "        ASSOCIATION:'association'",
            "        (null_rest_of_line",
            "          DEC:'1'",
            "          NEWLINE:'\\n')",
            "        (ipca_null",
            "          NO:'no'",
            "          SHUTDOWN:'shutdown'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n'))",
            "        (ipca_null",
            "          PROTOCOL:'protocol'",
            "          (null_rest_of_line",
            "            SCTP:'sctp'",
            "            NEWLINE:'\\n'))",
            "        (ipca_null",
            "          LOCAL_PORT:'local-port'",
            "          (null_rest_of_line",
            "            DEC:'5000'",
            "            NEWLINE:'\\n'))",
            "        (ipca_null",
            "          ASSOC_RETRANSMIT:'assoc-retransmit'",
            "          (null_rest_of_line",
            "            DEC:'5'",
            "            NEWLINE:'\\n'))",
            "        (ipca_null",
            "          LOCAL_IP:'local-ip'",
            "          (null_rest_of_line",
            "            IP_ADDRESS:'1.2.3.4'",
            "            NEWLINE:'\\n'))",
            "        (ipca_null",
            "          PATH_RETRANSMIT:'path-retransmit'",
            "          (null_rest_of_line",
            "            DEC:'5'",
            "            NEWLINE:'\\n'))",
            "        (ipca_null",
            "          RETRANSMIT_TIMEOUT:'retransmit-timeout'",
            "          (null_rest_of_line",
            "            DEC:'300'",
            "            DEC:'10000'",
            "            NEWLINE:'\\n'))",
            "        (ipca_null",
            "          REMOTE_PORT:'remote-port'",
            "          (null_rest_of_line",
            "            DEC:'5000'",
            "            NEWLINE:'\\n'))",
            "        (ipca_null",
            "          REMOTE_IP:'remote-ip'",
            "          (null_rest_of_line",
            "            IP_ADDRESS:'5.6.7.8'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_null",
            "      (null_block",
            "        IPV6:'ipv6'",
            "        ENABLE_ACL_CAM_SHARING:'enable-acl-cam-sharing'",
            "        (null_rest_of_line",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_null",
            "      (null_block",
            "        IPV6:'ipv6'",
            "        GLOBAL_MTU:'global-mtu'",
            "        (null_rest_of_line",
            "          DEC:'1500'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_null",
            "      (null_block",
            "        KEYSTORE:'keystore'",
            "        (null_rest_of_line",
            "          TYPE:'type'",
            "          DEFAULT:'default'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_l2",
            "      L2:'l2'",
            "      (null_rest_of_line",
            "        VFI:'vfi'",
            "        VARIABLE:'foobar'",
            "        VARIABLE:'manual'",
            "        NEWLINE:'\\n')",
            "      (l2_null",
            "        BRIDGE_DOMAIN:'bridge-domain'",
            "        (null_rest_of_line",
            "          DEC:'709'",
            "          NEWLINE:'\\n'))",
            "      (l2_null",
            "        MTU:'mtu'",
            "        (null_rest_of_line",
            "          DEC:'9014'",
            "          NEWLINE:'\\n'))",
            "      (l2_null",
            "        NEIGHBOR:'neighbor'",
            "        (null_rest_of_line",
            "          IP_ADDRESS:'1.2.3.4'  <== mode:M_NEIGHBOR",
            "          ENCAPSULATION:'encapsulation'",
            "          MPLS:'mpls'",
            "          NEWLINE:'\\n'))",
            "      (l2_null",
            "        NEIGHBOR:'neighbor'",
            "        (null_rest_of_line",
            "          IP_ADDRESS:'2.3.4.5'  <== mode:M_NEIGHBOR",
            "          ENCAPSULATION:'encapsulation'",
            "          MPLS:'mpls'",
            "          NEWLINE:'\\n'))",
            "      (l2_null",
            "        VPN:'vpn'",
            "        (null_rest_of_line",
            "          ID:'id'",
            "          DEC:'706'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        L2PROTOCOL:'l2protocol'",
            "        TUNNEL:'tunnel'",
            "        COS:'cos'",
            "        DEC:'5'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_block",
            "        LAG:'lag'",
            "        (null_rest_of_line",
            "          DOUBLE_QUOTE:'\"'",
            "          BRACKET_LEFT:'['",
            "          VARIABLE:'aa'",
            "          BRACKET_RIGHT:']'",
            "          VARIABLE:'-1X10-PNI-TO-ME'",
            "          DOUBLE_QUOTE:'\"'",
            "          DYNAMIC:'dynamic'",
            "          ID:'id'",
            "          DEC:'1'",
            "          NEWLINE:'\\n')",
            "        (null_inner",
            "          DEPLOY:'deploy'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          LACP_TIMEOUT:'lacp-timeout'",
            "          (null_rest_of_line",
            "            VARIABLE:'short'",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          PHYSICAL_PORT:'physical-port'",
            "          (null_rest_of_line",
            "            DEC:'1'",
            "            FORWARD_SLASH:'/'",
            "            DEC:'4'",
            "            TUNABLE_OPTIC:'tunable-optic'",
            "            VARIABLE:'sfpp'",
            "            CHANNEL:'channel'",
            "            DEC:'71'",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          PORT_NAME:'port-name'",
            "          (null_rest_of_line",
            "            DOUBLE_QUOTE:'\"'",
            "            VARIABLE:'Peering'",
            "            COLON:':'",
            "            BRACKET_LEFT:'['",
            "            VARIABLE:'aa'",
            "            BRACKET_RIGHT:']'",
            "            VARIABLE:'Me'",
            "            VARIABLE:'PNI'",
            "            VARIABLE:'CLR-6692'",
            "            DOUBLE_QUOTE:'\"'",
            "            ETHERNET:'ethernet'",
            "            DEC:'1'",
            "            FORWARD_SLASH:'/'",
            "            DEC:'1'",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          PORTS:'ports'",
            "          (null_rest_of_line",
            "            ETHERNET:'ethernet'",
            "            DEC:'1'",
            "            FORWARD_SLASH:'/'",
            "            DEC:'1'",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          PRIMARY_PORT:'primary-port'",
            "          (null_rest_of_line",
            "            DEC:'1'",
            "            FORWARD_SLASH:'/'",
            "            DEC:'1'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_license",
            "      NO:'no'",
            "      LICENSE:'license'",
            "      (null_rest_of_line",
            "        VARIABLE:'grace-period'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        NO:'no'",
            "        LLDP:'lldp'",
            "        RUN:'run'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_block",
            "        LOAD_BALANCE:'load-balance'",
            "        (null_rest_of_line",
            "          VARIABLE:'policies'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_null",
            "      (null_block",
            "        LOAD_BALANCE:'load-balance'",
            "        (null_rest_of_line",
            "          VARIABLE:'fm6000'",
            "          PROFILE:'profile'",
            "          VARIABLE:'LoadBalance_Profile1_5tuple'",
            "          NEWLINE:'\\n')",
            "        (null_inner",
            "          DISTRIBUTION:'distribution'",
            "          (null_rest_of_line",
            "            VARIABLE:'symmetric-hash'",
            "            VARIABLE:'mac-ip'",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          FIELDS:'fields'",
            "          (null_rest_of_line",
            "            IP:'ip'",
            "            PROTOCOL:'protocol'",
            "            VARIABLE:'dst-ip'",
            "            VARIABLE:'dst-port'",
            "            SRC_IP:'src-ip'",
            "            VARIABLE:'src-port'",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          NO:'no'",
            "          FIELDS:'fields'",
            "          (null_rest_of_line",
            "            MAC:'mac'",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          HASH:'hash'",
            "          SYMMETRIC:'symmetric'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        LOAD_INTERVAL:'load-interval'",
            "        DEFAULT:'default'",
            "        DEC:'5'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        LOCALE:'locale'",
            "        VARIABLE:'CH'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_lpts",
            "      LPTS:'lpts'",
            "      (null_rest_of_line",
            "        VARIABLE:'pifib'",
            "        HARDWARE:'hardware'",
            "        POLICE:'police'",
            "        NEWLINE:'\\n')",
            "      (lpts_null",
            "        FLOW:'flow'",
            "        (null_rest_of_line",
            "          SNMP:'snmp'",
            "          VARIABLE:'rate'",
            "          DEC:'500'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        MAC:'mac'",
            "        ADDRESS_TABLE:'address-table'",
            "        VARIABLE:'aging-time'",
            "        DEC:'1800'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_block",
            "        MANAGEMENT_ACCESS:'management-access'",
            "        (null_rest_of_line",
            "          INSIDE:'inside'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_map_class",
            "      MAP_CLASS:'map-class'",
            "      (null_rest_of_line",
            "        DIALER:'dialer'",
            "        VARIABLE:'swiRZ2'",
            "        NEWLINE:'\\n')",
            "      (map_class_null",
            "        DIALER:'dialer'",
            "        (null_rest_of_line",
            "          VARIABLE:'fast-idle'",
            "          DEC:'5'",
            "          NEWLINE:'\\n'))",
            "      (map_class_null",
            "        DIALER:'dialer'",
            "        (null_rest_of_line",
            "          IDLE_TIMEOUT:'idle-timeout'",
            "          DEC:'360'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_media_termination",
            "      MEDIA_TERMINATION:'media-termination'",
            "      (null_rest_of_line",
            "        VARIABLE:'mymta'",
            "        NEWLINE:'\\n')",
            "      (mt_null",
            "        ADDRESS:'address'",
            "        (null_rest_of_line",
            "          IP_ADDRESS:'2.3.4.5'",
            "          INTERFACE:'interface'",
            "          M_Interface_PREFIX:'inside'  <== mode:M_Interface",
            "          NEWLINE:'\\n'  <== mode:M_Interface))",
            "      (mt_null",
            "        ADDRESS:'address'",
            "        (null_rest_of_line",
            "          IP_ADDRESS:'3.4.4.6'",
            "          INTERFACE:'interface'",
            "          M_Interface_PREFIX:'outside'  <== mode:M_Interface",
            "          NEWLINE:'\\n'  <== mode:M_Interface))))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        MEMORY:'memory'",
            "        VARIABLE:'reserve'",
            "        CRITICAL:'critical'",
            "        DEC:'8192'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        MIRROR:'mirror'",
            "        LOCATION:'location'",
            "        M_COMMENT_NON_NEWLINE:' 0/RSP0/CPU0 disk0:disk1:'  <== mode:M_COMMENT",
            "        NEWLINE:'\\n'  <== mode:M_COMMENT)))",
            "  (stanza",
            "    (s_null",
            "      (null_block",
            "        NO:'no'",
            "        MONITOR_INTERFACE:'monitor-interface'",
            "        (null_rest_of_line",
            "          SERVICE_MODULE:'service-module'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_null",
            "      (null_block",
            "        NO:'no'",
            "        MPLS:'mpls'",
            "        STRIP:'strip'",
            "        (null_rest_of_line",
            "          NEWLINE:'\\n')",
            "        (null_inner",
            "          NO:'no'",
            "          TIMEOUT:'timeout'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_name",
            "      NAME:'name'",
            "      (variable",
            "        VARIABLE:'1.2.3.4'  <== mode:M_Name)",
            "      (variable",
            "        HELLO:'hello')",
            "      (null_rest_of_line",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_nv",
            "      NV:'nv'",
            "      NEWLINE:'\\n'",
            "      (nv_satellite",
            "        SATELLITE:'satellite'",
            "        (null_rest_of_line",
            "          DEC:'100'",
            "          NEWLINE:'\\n')",
            "        (nvs_null",
            "          DESCRIPTION:'description'",
            "          (null_rest_of_line",
            "            RAW_TEXT:' LA2/180/RR0202'  <== mode:M_Description",
            "            NEWLINE:'\\n'  <== mode:M_Description))",
            "        (nvs_null",
            "          IP:'ip'",
            "          (null_rest_of_line",
            "            ADDRESS:'address'",
            "            IP_ADDRESS:'10.0.0.2'",
            "            NEWLINE:'\\n'))",
            "        (nvs_null",
            "          SERIAL_NUMBER:'serial-number'",
            "          (null_rest_of_line",
            "            VARIABLE:'CAT1840U2EE'",
            "            NEWLINE:'\\n'))",
            "        (nvs_null",
            "          TYPE:'type'",
            "          (null_rest_of_line",
            "            VARIABLE:'asr9000v'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_object_group",
            "      OBJECT_GROUP:'object-group'",
            "      (og_service",
            "        SERVICE:'service'  <== mode:M_ObjectGroup",
            "        name = (variable_group_id",
            "          VARIABLE:'SVCGRP-ICMP')",
            "        NEWLINE:'\\n'",
            "        (ogs_service_object",
            "          SERVICE_OBJECT:'service-object'",
            "          (service_specifier",
            "            (service_specifier_icmp",
            "              ICMP:'icmp'",
            "              (icmp_object_type",
            "                ECHO:'echo')))",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        NO:'no'",
            "        ONEP:'onep'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_block",
            "        PASSWORD_POLICY:'password-policy'",
            "        (null_rest_of_line",
            "          VARIABLE:'minimum-length'",
            "          DEC:'7'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_phone_proxy",
            "      PHONE_PROXY:'phone-proxy'",
            "      (null_rest_of_line",
            "        VARIABLE:'ASA-phone-proxy'",
            "        NEWLINE:'\\n')",
            "      (phone_proxy_null",
            "        CIPC:'cipc'",
            "        (null_rest_of_line",
            "          VARIABLE:'security-mode'",
            "          VARIABLE:'authenticated'",
            "          NEWLINE:'\\n'))",
            "      (phone_proxy_null",
            "        MEDIA_TERMINATION:'media-termination'",
            "        (null_rest_of_line",
            "          VARIABLE:'mymta'",
            "          NEWLINE:'\\n'))",
            "      (phone_proxy_null",
            "        TFTP_SERVER:'tftp-server'",
            "        (null_rest_of_line",
            "          ADDRESS:'address'",
            "          IP_ADDRESS:'1.2.3.4'",
            "          INTERFACE:'interface'",
            "          M_Interface_PREFIX:'inside'  <== mode:M_Interface",
            "          NEWLINE:'\\n'  <== mode:M_Interface))",
            "      (phone_proxy_null",
            "        TLS_PROXY:'tls-proxy'",
            "        (null_rest_of_line",
            "          VARIABLE:'ASA-tls-proxy'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        POAP:'poap'",
            "        VARIABLE:'transit'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_policy_map",
            "      POLICY_MAP:'policy-map'",
            "      TYPE:'type'",
            "      (variable",
            "        INSPECT:'inspect')",
            "      (variable",
            "        DNS:'dns')",
            "      (variable",
            "        VARIABLE:'preset_dns_map')",
            "      NEWLINE:'\\n'",
            "      (pm_parameters",
            "        PARAMETERS:'parameters'",
            "        NEWLINE:'\\n'",
            "        (pmp_null",
            "          ID_MISMATCH:'id-mismatch'",
            "          (null_rest_of_line",
            "            ACTION:'action'",
            "            LOG:'log'",
            "            NEWLINE:'\\n'))",
            "        (pmp_null",
            "          ID_RANDOMIZATION:'id-randomization'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n'))",
            "        (pmp_null",
            "          MESSAGE_LENGTH:'message-length'",
            "          (null_rest_of_line",
            "            MAXIMUM:'maximum'",
            "            DEC:'512'",
            "            NEWLINE:'\\n'))",
            "        (pmp_null",
            "          MESSAGE_LENGTH:'message-length'",
            "          (null_rest_of_line",
            "            MAXIMUM:'maximum'",
            "            CLIENT:'client'",
            "            AUTO:'auto'",
            "            NEWLINE:'\\n'))",
            "        (pmp_null",
            "          NO:'no'",
            "          TCP_INSPECTION:'tcp-inspection'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_policy_map",
            "      POLICY_MAP:'policy-map'",
            "      (variable_policy_map_header",
            "        VARIABLE:'global_policy')",
            "      NEWLINE:'\\n'",
            "      (pm_class",
            "        CLASS:'class'",
            "        name = (variable_permissive",
            "          VARIABLE:'inspection_default')",
            "        NEWLINE:'\\n'",
            "        (pmc_null",
            "          INSPECT:'inspect'",
            "          (null_rest_of_line",
            "            DNS:'dns'",
            "            VARIABLE:'preset_dns_map'",
            "            NEWLINE:'\\n'))",
            "        (pmc_null",
            "          INSPECT:'inspect'",
            "          (null_rest_of_line",
            "            VARIABLE:'esmtp'",
            "            NEWLINE:'\\n'))",
            "        (pmc_null",
            "          INSPECT:'inspect'",
            "          (null_rest_of_line",
            "            FTP:'ftp'",
            "            NEWLINE:'\\n'))",
            "        (pmc_null",
            "          INSPECT:'inspect'",
            "          (null_rest_of_line",
            "            VARIABLE:'ip-options'",
            "            NEWLINE:'\\n'))",
            "        (pmc_null",
            "          INSPECT:'inspect'",
            "          (null_rest_of_line",
            "            H323:'h323'",
            "            H225:'h225'",
            "            NEWLINE:'\\n'))",
            "        (pmc_null",
            "          INSPECT:'inspect'",
            "          (null_rest_of_line",
            "            H323:'h323'",
            "            VARIABLE:'ras'",
            "            NEWLINE:'\\n'))",
            "        (pmc_null",
            "          INSPECT:'inspect'",
            "          (null_rest_of_line",
            "            HTTP:'http'",
            "            VARIABLE:'ucla_http_inspect'",
            "            NEWLINE:'\\n'))",
            "        (pmc_null",
            "          INSPECT:'inspect'",
            "          (null_rest_of_line",
            "            VARIABLE:'netbios'",
            "            NEWLINE:'\\n'))",
            "        (pmc_null",
            "          INSPECT:'inspect'",
            "          (null_rest_of_line",
            "            SNMP:'snmp'",
            "            NEWLINE:'\\n'))",
            "        (pmc_null",
            "          INSPECT:'inspect'",
            "          (null_rest_of_line",
            "            TFTP:'tftp'",
            "            NEWLINE:'\\n')))",
            "      (pm_class",
            "        CLASS:'class'",
            "        name = (variable_permissive",
            "          VARIABLE:'ICMP-cmap')",
            "        NEWLINE:'\\n'",
            "        (pmc_null",
            "          INSPECT:'inspect'",
            "          (null_rest_of_line",
            "            ICMP:'icmp'",
            "            NEWLINE:'\\n')))",
            "      (pm_class",
            "        CLASS:'class'",
            "        name = (variable_permissive",
            "          VARIABLE:'TCP-cmap')",
            "        NEWLINE:'\\n'",
            "        (pmc_null",
            "          SET:'set'",
            "          (null_rest_of_line",
            "            CONNECTION:'connection'",
            "            VARIABLE:'advanced-options'",
            "            VARIABLE:'tcp-state-bypass'",
            "            NEWLINE:'\\n')))",
            "      (pm_class",
            "        CLASS:'class'",
            "        name = (variable_permissive",
            "          CLASS_DEFAULT:'class-default')",
            "        NEWLINE:'\\n'",
            "        (pmc_null",
            "          USER_STATISTICS:'user-statistics'",
            "          (null_rest_of_line",
            "            ACCOUNTING:'accounting'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_policy_map",
            "      POLICY_MAP:'policy-map'",
            "      TYPE:'type'",
            "      (variable",
            "        INSPECT:'inspect')",
            "      (variable",
            "        HTTP:'http')",
            "      (variable",
            "        VARIABLE:'ucla_http_inspect')",
            "      NEWLINE:'\\n'",
            "      (pm_parameters",
            "        PARAMETERS:'parameters'",
            "        NEWLINE:'\\n'",
            "        (pmp_null",
            "          PROTOCOL_VIOLATION:'protocol-violation'",
            "          (null_rest_of_line",
            "            ACTION:'action'",
            "            VARIABLE:'drop-connection'",
            "            LOG:'log'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_null",
            "      (null_block",
            "        POOL:'pool'",
            "        (null_rest_of_line",
            "          VRF:'vrf'",
            "          DEFAULT:'default'",
            "          IPV4:'ipv4'",
            "          VARIABLE:'mgmt-net'",
            "          NEWLINE:'\\n')",
            "        (null_inner",
            "          ADDRESS_RANGE:'address-range'",
            "          (null_rest_of_line",
            "            IP_ADDRESS:'130.59.60.189'",
            "            IP_ADDRESS:'130.59.60.190'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_null",
            "      (null_block",
            "        PORT_PROFILE:'port-profile'",
            "        (null_rest_of_line",
            "          DEFAULT:'default'",
            "          VARIABLE:'max-ports'",
            "          DEC:'512'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_null",
            "      (null_block",
            "        PSEUDOWIRE_CLASS:'pseudowire-class'",
            "        (null_rest_of_line",
            "          VARIABLE:'atom-eth-iw'",
            "          NEWLINE:'\\n')",
            "        (null_inner",
            "          CONTROL_WORD:'control-word'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          ENCAPSULATION:'encapsulation'",
            "          (null_rest_of_line",
            "            MPLS:'mpls'",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          INTERWORKING:'interworking'",
            "          (null_rest_of_line",
            "            ETHERNET:'ethernet'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_null",
            "      (null_block",
            "        POWER_MGR:'power-mgr'",
            "        (null_rest_of_line",
            "          DISABLE:'disable'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_process_max_time",
            "      PROCESS_MAX_TIME:'process-max-time'",
            "      DEC:'23'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_qos_mapping",
            "      QOS_MAPPING:'qos-mapping'",
            "      NEWLINE:'\\n'",
            "      (qm_null",
            "        DSCP:'dscp'",
            "        (null_rest_of_line",
            "          VARIABLE:'decode-map'",
            "          VARIABLE:'BBone_Std'",
            "          NEWLINE:'\\n'))",
            "      (qm_null",
            "        DSCP_VALUE:'dscp-value'",
            "        (null_rest_of_line",
            "          DEC:'2'",
            "          DEC:'3'",
            "          DEC:'4'",
            "          DEC:'5'",
            "          DEC:'6'",
            "          DEC:'7'",
            "          DEC:'8'",
            "          DEC:'9'",
            "          VARIABLE:'to'",
            "          PRIORITY:'priority'",
            "          DEC:'0'",
            "          VARIABLE:'drop-precedence'",
            "          DEC:'0'",
            "          NEWLINE:'\\n'))",
            "      (qm_null",
            "        PCP:'pcp'",
            "        (null_rest_of_line",
            "          VARIABLE:'decode-map'",
            "          VARIABLE:'BBone_Std'",
            "          NEWLINE:'\\n'))",
            "      (qm_null",
            "        PCP_VALUE:'pcp-value'",
            "        (null_rest_of_line",
            "          DEC:'3'",
            "          DEC:'4'",
            "          DEC:'7'",
            "          VARIABLE:'to'",
            "          PRIORITY:'priority'",
            "          DEC:'0'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_null",
            "      (null_block",
            "        RP:'rp'",
            "        (null_rest_of_line",
            "          VARIABLE:'mgmtethernet'",
            "          FORWARDING:'forwarding'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_null",
            "      (null_block",
            "        RX_COS_SLOT:'rx-cos-slot'",
            "        (null_rest_of_line",
            "          ALL:'all'",
            "          VARIABLE:'queuemap-red'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_null",
            "      (null_block",
            "        SAP:'sap'",
            "        (null_rest_of_line",
            "          CACHE_TIMEOUT:'cache-timeout'",
            "          DEC:'30'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        NO:'no'",
            "        SCHEDULE:'schedule'",
            "        VARIABLE:'tech-support'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_block",
            "        SENSOR:'sensor'",
            "        (null_rest_of_line",
            "          VARIABLE:'fanspeed-control'",
            "          VARIABLE:'off'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_service_policy_global",
            "      SERVICE_POLICY:'service-policy'",
            "      name = (variable",
            "        VARIABLE:'global_policy')",
            "      GLOBAL:'global'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_null",
            "      (null_block",
            "        SLOT_TABLE_COS:'slot-table-cos'",
            "        (null_rest_of_line",
            "          VARIABLE:'queuemap-red'",
            "          NEWLINE:'\\n')",
            "        (null_inner",
            "          DESTINATION_SLOT:'destination-slot'",
            "          (null_rest_of_line",
            "            ALL:'all'",
            "            VARIABLE:'queuemap-red'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_sntp",
            "      SNTP:'sntp'",
            "      (sntp_server",
            "        SERVER:'server'",
            "        hostname = (variable",
            "          IP_ADDRESS:'1.2.3.4')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        SOFTWARE:'software'",
            "        AUTO_UPGRADE:'auto-upgrade'",
            "        ENABLE:'enable'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_tap",
            "      TAP:'tap'",
            "      (null_rest_of_line",
            "        VARIABLE:'aggregation'",
            "        NEWLINE:'\\n')",
            "      (tap_null",
            "        MODE:'mode'",
            "        (null_rest_of_line",
            "          VARIABLE:'exclusive'",
            "          NEWLINE:'\\n'))",
            "      (tap_null",
            "        MODE:'mode'",
            "        (null_rest_of_line",
            "          VARIABLE:'exclusive'",
            "          VARIABLE:'no-errdisable'",
            "          VARIABLE:'Ethernet1'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        TFTP_SERVER:'tftp-server'",
            "        VARIABLE:'disk0'",
            "        COLON:':'",
            "        VARIABLE:'abcdefg.bin'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_block",
            "        TIME_RANGE:'time-range'",
            "        (null_rest_of_line",
            "          VARIABLE:'ACCTIME-247'",
            "          NEWLINE:'\\n')",
            "        (null_inner",
            "          PERIODIC:'periodic'",
            "          (null_rest_of_line",
            "            VARIABLE:'daily'",
            "            DEC:'0'",
            "            COLON:':'",
            "            DEC:'00'",
            "            VARIABLE:'to'",
            "            DEC:'23'",
            "            COLON:':'",
            "            DEC:'59'",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          TIMEOUT:'timeout'",
            "          (null_rest_of_line",
            "            XLATE:'xlate'",
            "            DEC:'3'",
            "            COLON:':'",
            "            DEC:'00'",
            "            COLON:':'",
            "            DEC:'00'",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          TIMEOUT:'timeout'",
            "          (null_rest_of_line",
            "            PAT_XLATE:'pat-xlate'",
            "            DEC:'0'",
            "            COLON:':'",
            "            DEC:'00'",
            "            COLON:':'",
            "            DEC:'30'",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          TIMEOUT:'timeout'",
            "          (null_rest_of_line",
            "            CONN:'conn'",
            "            DEC:'1'",
            "            COLON:':'",
            "            DEC:'00'",
            "            COLON:':'",
            "            DEC:'00'",
            "            HALF_CLOSED:'half-closed'",
            "            DEC:'0'",
            "            COLON:':'",
            "            DEC:'10'",
            "            COLON:':'",
            "            DEC:'00'",
            "            UDP:'udp'",
            "            DEC:'0'",
            "            COLON:':'",
            "            DEC:'02'",
            "            COLON:':'",
            "            DEC:'00'",
            "            SCTP:'sctp'",
            "            DEC:'0'",
            "            COLON:':'",
            "            DEC:'02'",
            "            COLON:':'",
            "            DEC:'00'",
            "            ICMP:'icmp'",
            "            DEC:'0'",
            "            COLON:':'",
            "            DEC:'00'",
            "            COLON:':'",
            "            DEC:'02'",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          TIMEOUT:'timeout'",
            "          (null_rest_of_line",
            "            HALF_CLOSED:'half-closed'",
            "            DEC:'0'",
            "            COLON:':'",
            "            DEC:'10'",
            "            COLON:':'",
            "            DEC:'00'",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          TIMEOUT:'timeout'",
            "          (null_rest_of_line",
            "            ICMP:'icmp'",
            "            DEC:'0'",
            "            COLON:':'",
            "            DEC:'00'",
            "            COLON:':'",
            "            DEC:'02'",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          TIMEOUT:'timeout'",
            "          (null_rest_of_line",
            "            ICMP_ERROR:'icmp-error'",
            "            DEC:'0'",
            "            COLON:':'",
            "            DEC:'00'",
            "            COLON:':'",
            "            DEC:'02'",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          TIMEOUT:'timeout'",
            "          (null_rest_of_line",
            "            SUNRPC:'sunrpc'",
            "            DEC:'0'",
            "            COLON:':'",
            "            DEC:'10'",
            "            COLON:':'",
            "            DEC:'00'",
            "            H323:'h323'",
            "            DEC:'0'",
            "            COLON:':'",
            "            DEC:'05'",
            "            COLON:':'",
            "            DEC:'00'",
            "            H225:'h225'",
            "            DEC:'1'",
            "            COLON:':'",
            "            DEC:'00'",
            "            COLON:':'",
            "            DEC:'00'",
            "            MGCP:'mgcp'",
            "            DEC:'0'",
            "            COLON:':'",
            "            DEC:'05'",
            "            COLON:':'",
            "            DEC:'00'",
            "            MGCP_PAT:'mgcp-pat'",
            "            DEC:'0'",
            "            COLON:':'",
            "            DEC:'05'",
            "            COLON:':'",
            "            DEC:'00'",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          TIMEOUT:'timeout'",
            "          (null_rest_of_line",
            "            SIP:'sip'",
            "            DEC:'0'",
            "            COLON:':'",
            "            DEC:'30'",
            "            COLON:':'",
            "            DEC:'00'",
            "            SIP_MEDIA:'sip_media'",
            "            DEC:'0'",
            "            COLON:':'",
            "            DEC:'02'",
            "            COLON:':'",
            "            DEC:'00'",
            "            SIP_INVITE:'sip-invite'",
            "            DEC:'0'",
            "            COLON:':'",
            "            DEC:'03'",
            "            COLON:':'",
            "            DEC:'00'",
            "            SIP_DISCONNECT:'sip-disconnect'",
            "            DEC:'0'",
            "            COLON:':'",
            "            DEC:'02'",
            "            COLON:':'",
            "            DEC:'00'",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          TIMEOUT:'timeout'",
            "          (null_rest_of_line",
            "            SIP_PROVISIONAL_MEDIA:'sip-provisional-media'",
            "            DEC:'0'",
            "            COLON:':'",
            "            DEC:'02'",
            "            COLON:':'",
            "            DEC:'00'",
            "            UAUTH:'uauth'",
            "            DEC:'0'",
            "            COLON:':'",
            "            DEC:'05'",
            "            COLON:':'",
            "            DEC:'00'",
            "            VARIABLE:'absolute'",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          TIMEOUT:'timeout'",
            "          (null_rest_of_line",
            "            TCP_PROXY_REASSEMBLY:'tcp-proxy-reassembly'",
            "            DEC:'0'",
            "            COLON:':'",
            "            DEC:'01'",
            "            COLON:':'",
            "            DEC:'00'",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          TIMEOUT:'timeout'",
            "          (null_rest_of_line",
            "            FLOATING_CONN:'floating-conn'",
            "            DEC:'0'",
            "            COLON:':'",
            "            DEC:'00'",
            "            COLON:':'",
            "            DEC:'00'",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          TIMEOUT:'timeout'",
            "          (null_rest_of_line",
            "            CONN_HOLDDOWN:'conn-holddown'",
            "            DEC:'0'",
            "            COLON:':'",
            "            DEC:'00'",
            "            COLON:':'",
            "            DEC:'15'",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          TIMEOUT:'timeout'",
            "          (null_rest_of_line",
            "            IGP:'igp'",
            "            STALE_ROUTE:'stale-route'",
            "            DEC:'0'",
            "            COLON:':'",
            "            DEC:'01'",
            "            COLON:':'",
            "            DEC:'10'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_null",
            "      (null_block",
            "        TLS_PROXY:'tls-proxy'",
            "        (null_rest_of_line",
            "          VARIABLE:'ASA-tls-proxy'",
            "          NEWLINE:'\\n')",
            "        (null_inner",
            "          SERVER:'server'",
            "          (null_rest_of_line",
            "            VARIABLE:'trust-point'",
            "            VARIABLE:'_internal_PP_ctl_phoneproxy_file'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_null",
            "      (null_block",
            "        TRANSCEIVER:'transceiver'",
            "        (null_rest_of_line",
            "          VARIABLE:'qsfp'",
            "          VARIABLE:'default-mode'",
            "          VARIABLE:'4x10G'",
            "          NEWLINE:'\\n')",
            "        (null_inner",
            "          TUNNEL_GROUP:'tunnel-group'",
            "          (null_rest_of_line",
            "            IP_ADDRESS:'1.2.3.4'",
            "            VARIABLE:'ipsec-attributes'",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          PEER_ID_VALIDATE:'peer-id-validate'",
            "          (null_rest_of_line",
            "            VARIABLE:'nocheck'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        USING:'Using'",
            "        DEC:'12345'",
            "        OUT:'out'",
            "        VARIABLE:'of'",
            "        DEC:'5678'",
            "        BYTES:'bytes'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_block",
            "        VIRTUAL_SERVICE:'virtual-service'",
            "        (null_rest_of_line",
            "          NEWLINE:'\\n')",
            "        (null_inner",
            "          SIGNING:'signing'",
            "          (null_rest_of_line",
            "            LEVEL:'level'",
            "            VARIABLE:'cisco'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        VLAN:'vlan'",
            "        IFDESCR:'ifdescr'",
            "        DETAIL:'detail'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_vpc",
            "      VPC:'vpc'",
            "      (null_rest_of_line",
            "        DOMAIN:'domain'",
            "        DEC:'32'",
            "        NEWLINE:'\\n')",
            "      (vpc_null",
            "        AUTO_RECOVERY:'auto-recovery'",
            "        (null_rest_of_line",
            "          NEWLINE:'\\n'))",
            "      (vpc_null",
            "        DELAY:'delay'",
            "        (null_rest_of_line",
            "          VARIABLE:'restore'",
            "          DEC:'150'",
            "          NEWLINE:'\\n'))",
            "      (vpc_null",
            "        NO:'no'",
            "        DUAL_ACTIVE:'dual-active'",
            "        (null_rest_of_line",
            "          EXCLUDE:'exclude'",
            "          VARIABLE:'interface-vlan'",
            "          NEWLINE:'\\n'))",
            "      (vpc_null",
            "        GRACEFUL:'graceful'",
            "        (null_rest_of_line",
            "          VARIABLE:'consistency-check'",
            "          NEWLINE:'\\n'))",
            "      (vpc_null",
            "        IP:'ip'",
            "        (null_rest_of_line",
            "          ARP:'arp'",
            "          VARIABLE:'synchronize'",
            "          NEWLINE:'\\n'))",
            "      (vpc_null",
            "        PEER_CONFIG_CHECK_BYPASS:'peer-config-check-bypass'",
            "        (null_rest_of_line",
            "          NEWLINE:'\\n'))",
            "      (vpc_null",
            "        PEER_GATEWAY:'peer-gateway'",
            "        (null_rest_of_line",
            "          NEWLINE:'\\n'))",
            "      (vpc_null",
            "        PEER_KEEPALIVE:'peer-keepalive'",
            "        (null_rest_of_line",
            "          DESTINATION:'destination'",
            "          IP_ADDRESS:'1.2.3.4'",
            "          SOURCE:'source'",
            "          IP_ADDRESS:'1.2.3.5'",
            "          NEWLINE:'\\n'))",
            "      (vpc_null",
            "        PEER_SWITCH:'peer-switch'",
            "        (null_rest_of_line",
            "          NEWLINE:'\\n'))",
            "      (vpc_null",
            "        ROLE:'role'",
            "        (null_rest_of_line",
            "          PRIORITY:'priority'",
            "          DEC:'8192'",
            "          NEWLINE:'\\n'))",
            "      (vpc_null",
            "        SYSTEM_PRIORITY:'system-priority'",
            "        (null_rest_of_line",
            "          DEC:'4096'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        NO:'no'",
            "        VSTACK:'vstack'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        WRR_QUEUE:'wrr-queue'",
            "        VARIABLE:'cos-map'",
            "        DEC:'0'",
            "        DEC:'0'",
            "        DEC:'1'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        WRR:'wrr'",
            "        VARIABLE:'unicast-bandwidth'",
            "        DEC:'50'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_xconnect_logging",
            "      XCONNECT:'xconnect'",
            "      LOGGING:'logging'",
            "      (null_rest_of_line",
            "        PSEUDOWIRE:'pseudowire'",
            "        VARIABLE:'status'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_block",
            "        XDR:'xdr'",
            "        (null_rest_of_line",
            "          MULTICAST_GROUP:'multicast-group'",
            "          INTERNAL:'internal'",
            "          VARIABLE:'issu-slots-split'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_null",
            "      (null_block",
            "        XDR:'xdr'",
            "        (null_rest_of_line",
            "          MULTICAST_GROUP:'multicast-group'",
            "          MODE:'mode'",
            "          VARIABLE:'individual'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_null",
            "      (null_block",
            "        XML:'xml'",
            "        (null_rest_of_line",
            "          VARIABLE:'agent'",
            "          TTY:'tty'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_null",
            "      (null_block",
            "        CRYPTOCHECKSUM:'Cryptochecksum'",
            "        (null_rest_of_line",
            "          COLON:':'",
            "          VARIABLE:'8a138d9f7c12c6cb1180f831d7a5bc9f'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        END:'end'",
            "        NEWLINE:'\\n')))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/cisco_monitor" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'cisco_monitor'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_monitor",
            "      MONITOR:'monitor'",
            "      (null_rest_of_line",
            "        SESSION:'session'",
            "        DEC:'1'",
            "        TYPE:'type'",
            "        VARIABLE:'erspan-source'",
            "        NEWLINE:'\\n')",
            "      (monitor_null",
            "        BUFFER_SIZE:'buffer-size'",
            "        (null_rest_of_line",
            "          DEC:'12345'",
            "          NEWLINE:'\\n'))",
            "      (monitor_null",
            "        DESCRIPTION:'description'",
            "        (null_rest_of_line",
            "          RAW_TEXT:' ntp debugging'  <== mode:M_Description",
            "          NEWLINE:'\\n'  <== mode:M_Description))",
            "      (monitor_destination",
            "        DESTINATION:'destination'",
            "        (null_rest_of_line",
            "          NEWLINE:'\\n')",
            "        (monitor_destination_null",
            "          ERSPAN_ID:'erspan-id'",
            "          (null_rest_of_line",
            "            DEC:'1'",
            "            NEWLINE:'\\n'))",
            "        (monitor_destination_null",
            "          IP:'ip'",
            "          (null_rest_of_line",
            "            ADDRESS:'address'",
            "            IP_ADDRESS:'1.2.3.4'",
            "            NEWLINE:'\\n'))",
            "        (monitor_destination_null",
            "          MTU:'mtu'",
            "          (null_rest_of_line",
            "            DEC:'1464'",
            "            NEWLINE:'\\n'))",
            "        (monitor_destination_null",
            "          ORIGIN:'origin'",
            "          (null_rest_of_line",
            "            IP:'ip'",
            "            ADDRESS:'address'",
            "            IP_ADDRESS:'2.3.4.5'",
            "            NEWLINE:'\\n')))",
            "      (monitor_destination",
            "        DESTINATION:'destination'",
            "        (null_rest_of_line",
            "          INTERFACE:'interface'",
            "          M_Interface_PREFIX:'Gi'  <== mode:M_Interface",
            "          DEC:'1'  <== mode:M_Interface",
            "          FORWARD_SLASH:'/'  <== mode:M_Interface",
            "          DEC:'3'  <== mode:M_Interface",
            "          NEWLINE:'\\n'  <== mode:M_Interface))",
            "      (monitor_null",
            "        SHUTDOWN:'shutdown'",
            "        (null_rest_of_line",
            "          NEWLINE:'\\n'))",
            "      (monitor_null",
            "        SOURCE:'source'",
            "        (null_rest_of_line",
            "          VARIABLE:'cpu'",
            "          RP:'rp'",
            "          NEWLINE:'\\n'))",
            "      (monitor_null",
            "        SOURCE:'source'",
            "        (null_rest_of_line",
            "          INTERFACE:'interface'",
            "          M_Interface_PREFIX:'Gi'  <== mode:M_Interface",
            "          DEC:'1'  <== mode:M_Interface",
            "          FORWARD_SLASH:'/'  <== mode:M_Interface",
            "          DEC:'2'  <== mode:M_Interface",
            "          NEWLINE:'\\n'  <== mode:M_Interface))))",
            "  (stanza",
            "    (s_monitor_session",
            "      MONITOR_SESSION:'monitor-session'",
            "      (null_rest_of_line",
            "        VARIABLE:'RSPAN'",
            "        ETHERNET:'ethernet'",
            "        NEWLINE:'\\n')",
            "      (monitor_session_null",
            "        DESTINATION:'destination'",
            "        (null_rest_of_line",
            "          PSEUDOWIRE:'pseudowire'",
            "          NEWLINE:'\\n'))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/cisco_mpls" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'cisco_mpls'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_mpls_label_range",
            "      MPLS:'mpls'",
            "      LABEL:'label'",
            "      RANGE:'range'",
            "      DEC:'16'",
            "      DEC:'262143'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_mpls_ldp",
            "      MPLS:'mpls'",
            "      LDP:'ldp'",
            "      NEWLINE:'\\n'",
            "      (mldp_address_family",
            "        ADDRESS_FAMILY:'address-family'",
            "        IPV4:'ipv4'",
            "        NEWLINE:'\\n'",
            "        (mldpaf_null",
            "          DISCOVERY:'discovery'",
            "          (null_rest_of_line",
            "            VARIABLE:'targeted-hello'",
            "            VARIABLE:'accept'",
            "            NEWLINE:'\\n'))",
            "        (mldpaf_label",
            "          LABEL:'label'",
            "          NEWLINE:'\\n'",
            "          (mldpafl_local",
            "            LOCAL:'local'",
            "            NEWLINE:'\\n'",
            "            (mldpafll_null",
            "              ALLOCATE:'allocate'",
            "              (null_rest_of_line",
            "                FOR:'for'",
            "                VARIABLE:'host-routes'",
            "                NEWLINE:'\\n'))",
            "            (mldpafll_advertise",
            "              ADVERTISE:'advertise'",
            "              NEWLINE:'\\n'",
            "              (mldpaflla_null",
            "                (null_rest_of_line",
            "                  DISABLE:'disable'",
            "                  NEWLINE:'\\n'))",
            "              (mldpaflla_null",
            "                (null_rest_of_line",
            "                  FOR:'for'",
            "                  VARIABLE:'mpls-ldp'",
            "                  NEWLINE:'\\n'))",
            "              (mldpaflla_null",
            "                (null_rest_of_line",
            "                  EXPLICIT_NULL:'explicit-null'",
            "                  FOR:'for'",
            "                  VARIABLE:'mpls-ldp'",
            "                  NEWLINE:'\\n'))",
            "              (mldpaflla_null",
            "                (null_rest_of_line",
            "                  IGP:'igp'",
            "                  SYNC:'sync'",
            "                  DELAY:'delay'",
            "                  VARIABLE:'on-session-up'",
            "                  DEC:'60'",
            "                  NEWLINE:'\\n'))",
            "              (mldpaflla_null",
            "                (null_rest_of_line",
            "                  INTERFACE:'interface'",
            "                  M_Interface_PREFIX:'TenGigE'  <== mode:M_Interface",
            "                  DEC:'0'  <== mode:M_Interface",
            "                  FORWARD_SLASH:'/'  <== mode:M_Interface",
            "                  DEC:'0'  <== mode:M_Interface",
            "                  FORWARD_SLASH:'/'  <== mode:M_Interface",
            "                  DEC:'2'  <== mode:M_Interface",
            "                  FORWARD_SLASH:'/'  <== mode:M_Interface",
            "                  DEC:'0'  <== mode:M_Interface",
            "                  NEWLINE:'\\n'  <== mode:M_Interface))",
            "              (mldpaflla_null",
            "                (null_rest_of_line",
            "                  LOG:'log'",
            "                  NEWLINE:'\\n'))",
            "              (mldpaflla_null",
            "                (null_rest_of_line",
            "                  ADJACENCY:'adjacency'",
            "                  NEWLINE:'\\n'))",
            "              (mldpaflla_null",
            "                (null_rest_of_line",
            "                  NEIGHBOR:'neighbor'",
            "                  NEWLINE:'\\n'  <== mode:M_NEIGHBOR))",
            "              (mldpaflla_null",
            "                (null_rest_of_line",
            "                  NSR:'nsr'",
            "                  NEWLINE:'\\n'))",
            "              (mldpaflla_null",
            "                (null_rest_of_line",
            "                  SESSION_PROTECTION:'session-protection'",
            "                  NEWLINE:'\\n'))",
            "              (mldpaflla_null",
            "                (null_rest_of_line",
            "                  NEIGHBOR:'neighbor'",
            "                  NEWLINE:'\\n'  <== mode:M_NEIGHBOR))",
            "              (mldpaflla_null",
            "                (null_rest_of_line",
            "                  PASSWORD:'password'",
            "                  ENCRYPTED:'encrypted'",
            "                  DEC:'12345'",
            "                  NEWLINE:'\\n'))",
            "              (mldpaflla_null",
            "                (null_rest_of_line",
            "                  NSR:'nsr'",
            "                  NEWLINE:'\\n'))",
            "              (mldpaflla_null",
            "                (null_rest_of_line",
            "                  ROUTER_ID:'router-id'",
            "                  IP_ADDRESS:'1.2.3.4'",
            "                  NEWLINE:'\\n'))",
            "              (mldpaflla_null",
            "                (null_rest_of_line",
            "                  SESSION:'session'",
            "                  PROTECTION:'protection'",
            "                  NEWLINE:'\\n'))",
            "              (mldpaflla_null",
            "                (null_rest_of_line",
            "                  MPLS:'mpls'",
            "                  LDP:'ldp'",
            "                  SESSION:'session'",
            "                  PROTECTION:'protection'",
            "                  NEWLINE:'\\n'))",
            "              (mldpaflla_null",
            "                (null_rest_of_line",
            "                  MPLS:'mpls'",
            "                  TRAFFIC_ENG:'traffic-eng'",
            "                  NEWLINE:'\\n'))",
            "              (mldpaflla_null",
            "                (null_rest_of_line",
            "                  AFFINITY_MAP:'affinity-map'",
            "                  VARIABLE:'bippety'",
            "                  VARIABLE:'bit-position'",
            "                  DEC:'1'",
            "                  NEWLINE:'\\n'))",
            "              (mldpaflla_null",
            "                (null_rest_of_line",
            "                  ATTRIBUTE_SET:'attribute-set'",
            "                  VARIABLE:'auto-backup'",
            "                  VARIABLE:'boo'",
            "                  NEWLINE:'\\n'))",
            "              (mldpaflla_null",
            "                (null_rest_of_line",
            "                  AFFINITY:'affinity'",
            "                  INCLUDE:'include'",
            "                  VARIABLE:'bippety'",
            "                  NEWLINE:'\\n'))",
            "              (mldpaflla_null",
            "                (null_rest_of_line",
            "                  AUTO_TUNNEL:'auto-tunnel'",
            "                  BACKUP:'backup'",
            "                  NEWLINE:'\\n'))",
            "              (mldpaflla_null",
            "                (null_rest_of_line",
            "                  TUNNEL_ID:'tunnel-id'",
            "                  VARIABLE:'min'",
            "                  DEC:'10000'",
            "                  VARIABLE:'max'",
            "                  DEC:'11000'",
            "                  NEWLINE:'\\n'))",
            "              (mldpaflla_null",
            "                (null_rest_of_line",
            "                  INTERFACE:'interface'",
            "                  M_Interface_PREFIX:'Bundle-Ether'  <== mode:M_Interface",
            "                  DEC:'1'  <== mode:M_Interface",
            "                  NEWLINE:'\\n'  <== mode:M_Interface))",
            "              (mldpaflla_null",
            "                (null_rest_of_line",
            "                  ATTRIBUTE_NAMES:'attribute-names'",
            "                  VARIABLE:'bippety'",
            "                  VARIABLE:'boppety'",
            "                  NEWLINE:'\\n'))",
            "              (mldpaflla_null",
            "                (null_rest_of_line",
            "                  AUTO_TUNNEL:'auto-tunnel'",
            "                  BACKUP:'backup'",
            "                  NEWLINE:'\\n'))",
            "              (mldpaflla_null",
            "                (null_rest_of_line",
            "                  ATTRIBUTE_SET:'attribute-set'",
            "                  VARIABLE:'boo'",
            "                  NEWLINE:'\\n'))",
            "              (mldpaflla_null",
            "                (null_rest_of_line",
            "                  NHOP_ONLY:'nhop-only'",
            "                  NEWLINE:'\\n'))",
            "              (mldpaflla_null",
            "                (null_rest_of_line",
            "                  EXCLUDE:'exclude'",
            "                  SRLG:'srlg'",
            "                  PREFERRED:'preferred'",
            "                  NEWLINE:'\\n'))",
            "              (mldpaflla_null",
            "                (null_rest_of_line",
            "                  LOGGING:'logging'",
            "                  EVENTS:'events'",
            "                  VARIABLE:'frr-protection'",
            "                  NEWLINE:'\\n'))",
            "              (mldpaflla_null",
            "                (null_rest_of_line",
            "                  LOGGING:'logging'",
            "                  EVENTS:'events'",
            "                  VARIABLE:'issu'",
            "                  NEWLINE:'\\n'))",
            "              (mldpaflla_null",
            "                (null_rest_of_line",
            "                  LOGGING:'logging'",
            "                  EVENTS:'events'",
            "                  NSR:'nsr'",
            "                  NEWLINE:'\\n'))",
            "              (mldpaflla_null",
            "                (null_rest_of_line",
            "                  REOPTIMIZE:'reoptimize'",
            "                  DEC:'900'",
            "                  NEWLINE:'\\n'))",
            "              (mldpaflla_null",
            "                (null_rest_of_line",
            "                  REOPTIMIZE:'reoptimize'",
            "                  TIMERS:'timers'",
            "                  DELAY:'delay'",
            "                  VARIABLE:'after-frr'",
            "                  DEC:'50'",
            "                  NEWLINE:'\\n'))",
            "              (mldpaflla_null",
            "                (null_rest_of_line",
            "                  REOPTIMIZE:'reoptimize'",
            "                  TIMERS:'timers'",
            "                  DELAY:'delay'",
            "                  CLEANUP:'cleanup'",
            "                  DEC:'60'",
            "                  NEWLINE:'\\n'))))))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/cisco_multicast" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'cisco_multicast'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_null",
            "      (null_block",
            "        IPV4:'ipv4'",
            "        ROUTING:'routing'",
            "        (null_rest_of_line",
            "          MULTICAST:'multicast'",
            "          VARIABLE:'holddown'",
            "          DEC:'210'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_null",
            "      (null_block",
            "        IPV6:'ipv6'",
            "        ROUTING:'routing'",
            "        (null_rest_of_line",
            "          MULTICAST:'multicast'",
            "          VARIABLE:'holddown'",
            "          DEC:'210'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (multicast_routing_stanza",
            "      MULTICAST_ROUTING:'multicast-routing'",
            "      NEWLINE:'\\n'",
            "      (address_family_multicast_stanza",
            "        ADDRESS_FAMILY:'address-family'",
            "        IPV4:'ipv4'",
            "        NEWLINE:'\\n'",
            "        (address_family_multicast_tail",
            "          (null_af_multicast_tail",
            "            NSF:'nsf'",
            "            NEWLINE:'\\n')",
            "          MULTIPATH:'multipath'",
            "          NEWLINE:'\\n'",
            "          INTERFACE:'interface'",
            "          ALL:'all'  <== mode:M_Interface",
            "          ENABLE:'enable'",
            "          NEWLINE:'\\n'",
            "          (interface_multicast_stanza",
            "            INTERFACE:'interface'",
            "            (interface_name",
            "              name_prefix_alpha = M_Interface_PREFIX:'GigabitEthernet'  <== mode:M_Interface",
            "              DEC:'0'  <== mode:M_Interface",
            "              FORWARD_SLASH:'/'  <== mode:M_Interface",
            "              DEC:'2'  <== mode:M_Interface",
            "              FORWARD_SLASH:'/'  <== mode:M_Interface",
            "              DEC:'1'  <== mode:M_Interface",
            "              FORWARD_SLASH:'/'  <== mode:M_Interface",
            "              DEC:'18'  <== mode:M_Interface",
            "              PERIOD:'.'  <== mode:M_Interface",
            "              (range",
            "                (subrange",
            "                  low = DEC:'705'  <== mode:M_Interface)))",
            "            NEWLINE:'\\n'  <== mode:M_Interface",
            "            (interface_multicast_tail",
            "              BOUNDARY:'boundary'",
            "              (null_rest_of_line",
            "                MCAST_BOUNDARY:'mcast-boundary'",
            "                NEWLINE:'\\n')))",
            "          (null_af_multicast_tail",
            "            NSF:'nsf'",
            "            NEWLINE:'\\n')",
            "          MULTIPATH:'multipath'",
            "          NEWLINE:'\\n'",
            "          INTERFACE:'interface'",
            "          ALL:'all'  <== mode:M_Interface",
            "          ENABLE:'enable'",
            "          NEWLINE:'\\n'))",
            "      (address_family_multicast_stanza",
            "        ADDRESS_FAMILY:'address-family'",
            "        IPV6:'ipv6'",
            "        NEWLINE:'\\n'",
            "        (address_family_multicast_tail",
            "          (interface_multicast_stanza",
            "            INTERFACE:'interface'",
            "            (interface_name",
            "              name_prefix_alpha = M_Interface_PREFIX:'Bundle-Ether'  <== mode:M_Interface",
            "              DEC:'3'  <== mode:M_Interface",
            "              PERIOD:'.'  <== mode:M_Interface",
            "              (range",
            "                (subrange",
            "                  low = DEC:'6'  <== mode:M_Interface)))",
            "            NEWLINE:'\\n'  <== mode:M_Interface",
            "            (interface_multicast_tail",
            "              DISABLE:'disable'",
            "              (null_rest_of_line",
            "                NEWLINE:'\\n')))",
            "          (null_af_multicast_tail",
            "            NSF:'nsf'",
            "            NEWLINE:'\\n')",
            "          INTERFACE:'interface'",
            "          ALL:'all'  <== mode:M_Interface",
            "          ENABLE:'enable'",
            "          NEWLINE:'\\n'))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/cisco_noipns" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'no_ip_name_server'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        NO:'no'",
            "        IP:'ip'",
            "        NAME_SERVER:'name-server'",
            "        NEWLINE:'\\n')))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/cisco_nomaskreply" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'no_mask_reply'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_interface",
            "      INTERFACE:'interface'",
            "      iname = (interface_name",
            "        name_prefix_alpha = M_Interface_PREFIX:'GigabitEthernet'  <== mode:M_Interface",
            "        (range",
            "          (subrange",
            "            low = DEC:'1'  <== mode:M_Interface)))",
            "      NEWLINE:'\\n'  <== mode:M_Interface",
            "      (if_inner",
            "        (if_ip_address",
            "          IP:'ip'",
            "          ADDRESS:'address'",
            "          ip = IP_ADDRESS:'10.10.10.1'",
            "          subnet = IP_ADDRESS:'255.255.255.0'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          NO:'no'",
            "          IP:'ip'",
            "          MASK_REPLY:'mask-reply'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_shutdown",
            "          NO:'no'",
            "          SHUTDOWN:'shutdown'",
            "          NEWLINE:'\\n\\n\\n'))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/cisco_nosnmp" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'no_snmp_server'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        NO:'no'",
            "        IP:'ip'",
            "        NAME_SERVER:'name-server'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        NO:'no'",
            "        SNMP_SERVER:'snmp-server'",
            "        NEWLINE:'\\n')))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/cisco_ntp" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'cisco_ntp'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_ntp",
            "      NTP:'ntp'",
            "      (ntp_common",
            "        (ntp_access_group",
            "          ACCESS_GROUP:'access-group'",
            "          PEER:'peer'",
            "          name = (variable",
            "            VARIABLE:'ntp-peer-group')",
            "          KOD:'kod'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_ntp",
            "      NTP:'ntp'",
            "      (ntp_common",
            "        (ntp_server",
            "          SERVER:'server'",
            "          VRF:'vrf'",
            "          vrf = (variable",
            "            VARIABLE:'some-vrf')",
            "          hostname = (variable",
            "            IP_ADDRESS:'1.2.3.4')",
            "          SOURCE:'source'",
            "          src_interface = (interface_name",
            "            (variable_interface_name",
            "              LOOPBACK:'loopback')",
            "            DEC:'0')",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_ntp",
            "      NTP:'ntp'",
            "      (ntp_common",
            "        (ntp_server",
            "          SERVER:'server'",
            "          VRF:'vrf'",
            "          vrf = (variable",
            "            VARIABLE:'some-vrf')",
            "          hostname = (variable",
            "            IP_ADDRESS:'2.3.4.5')",
            "          SOURCE:'source'",
            "          src_interface = (interface_name",
            "            VARIABLE:'loopback1')",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_ntp",
            "      NTP:'ntp'",
            "      (ntp_common",
            "        (ntp_source_interface",
            "          SOURCE_INTERFACE:'source-interface'",
            "          iname = (interface_name",
            "            name_prefix_alpha = M_Interface_PREFIX:'loopback'  <== mode:M_Interface",
            "            (range",
            "              (subrange",
            "                low = DEC:'0'  <== mode:M_Interface)))",
            "          NEWLINE:'\\n'  <== mode:M_Interface))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/cisco_nxos" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'cisco_nxos'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_feature",
            "      FEATURE:'feature'",
            "      (variable",
            "        BFD:'bfd')",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_feature",
            "      FEATURE:'feature'",
            "      (variable",
            "        BGP:'bgp')",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (extended_access_list_stanza",
            "      IP:'ip'",
            "      ACCESS_LIST:'access-list'",
            "      shortname = (variable",
            "        VARIABLE:'copp-system-acl-icmp')",
            "      NEWLINE:'\\n'",
            "      (extended_access_list_tail",
            "        num = DEC:'10'",
            "        ala = (access_list_action",
            "          PERMIT:'permit')",
            "        prot = (protocol",
            "          ICMP:'icmp')",
            "        srcipr = (access_list_ip_range",
            "          ANY:'any')",
            "        dstipr = (access_list_ip_range",
            "          ANY:'any')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_class_map",
            "      CLASS_MAP:'class-map'",
            "      TYPE:'type'",
            "      CONTROL_PLANE:'control-plane'",
            "      MATCH_ANY:'match-any'",
            "      name = (variable",
            "        VARIABLE:'copp-icmp')",
            "      NEWLINE:'\\n'",
            "      (cm_match",
            "        MATCH:'match'",
            "        (cmm_access_group",
            "          ACCESS_GROUP:'access-group'",
            "          NAME:'name'",
            "          name = (variable",
            "            VARIABLE:'copp-system-acl-icmp'  <== mode:M_Name)",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_interface",
            "      INTERFACE:'interface'",
            "      iname = (interface_name",
            "        name_prefix_alpha = M_Interface_PREFIX:'ethernet'  <== mode:M_Interface",
            "        DEC:'2'  <== mode:M_Interface",
            "        FORWARD_SLASH:'/'  <== mode:M_Interface",
            "        (range",
            "          (subrange",
            "            low = DEC:'1'  <== mode:M_Interface)))",
            "      NEWLINE:'\\n'  <== mode:M_Interface",
            "      (if_inner",
            "        (if_bfd",
            "          BFD:'bfd'",
            "          (if_bfd_authentication",
            "            AUTHENTICATION:'authentication'",
            "            KEYED_SHA1:'keyed-sha1'  <== mode:M_Authentication",
            "            KEYID:'keyid'",
            "            id = DEC:'1'",
            "            KEY:'key'",
            "            ascii_key = (variable",
            "              VARIABLE:'cisco123')",
            "            NEWLINE:'\\n')))",
            "      (if_inner",
            "        (if_bfd",
            "          BFD:'bfd'",
            "          (if_bfd_authentication",
            "            AUTHENTICATION:'authentication'",
            "            KEYED_SHA1:'Keyed-SHA1'  <== mode:M_Authentication",
            "            KEYID:'keyid'",
            "            id = DEC:'1'",
            "            HEX_KEY:'hex-key'",
            "            hex_key = (variable",
            "              VARIABLE:'0abcdefg')",
            "            NEWLINE:'\\n')))",
            "      (if_inner",
            "        (if_bfd",
            "          BFD:'bfd'",
            "          (if_bfd_echo",
            "            ECHO:'echo'",
            "            NEWLINE:'\\n')))",
            "      (if_inner",
            "        (if_bfd",
            "          BFD:'bfd'",
            "          (if_bfd_echo_rx_interval",
            "            ECHO_RX_INTERVAL:'echo-rx-interval'",
            "            ms = DEC:'40'",
            "            NEWLINE:'\\n')))",
            "      (if_inner",
            "        (if_bfd",
            "          BFD:'bfd'",
            "          (if_bfd_interval",
            "            INTERVAL:'interval'",
            "            DEC:'50'",
            "            MIN_RX_VAR:'min_rx'",
            "            tx_ms = DEC:'50'",
            "            MULTIPLIER:'multiplier'",
            "            mult = DEC:'3'",
            "            NEWLINE:'\\n')))",
            "      (if_inner",
            "        (if_bfd",
            "          BFD:'bfd'",
            "          (if_bfd_neighbor",
            "            NEIGHBOR:'neighbor'",
            "            SRC_IP:'src-ip'  <== mode:M_NEIGHBOR",
            "            src_ip = IP_ADDRESS:'1.2.3.4'",
            "            DEST_IP:'dest-ip'",
            "            dst_ip = IP_ADDRESS:'2.3.4.5'",
            "            NEWLINE:'\\n')))",
            "      (if_inner",
            "        (if_bfd",
            "          BFD:'bfd'",
            "          (if_bfd_optimize",
            "            OPTIMIZE:'optimize'",
            "            SUBINTERFACE:'subinterface'",
            "            NEWLINE:'\\n')))",
            "      (if_inner",
            "        (if_no_bfd",
            "          NO:'no'",
            "          BFD:'bfd'",
            "          AUTHENTICATION:'authentication'",
            "          NEWLINE:'\\n'  <== mode:M_Authentication))",
            "      (if_inner",
            "        (if_no_bfd",
            "          NO:'no'",
            "          BFD:'bfd'",
            "          ECHO:'echo'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_no_bfd",
            "          NO:'no'",
            "          BFD:'bfd'",
            "          ECHO_RX_INTERVAL:'echo-rx-interval'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_no_bfd",
            "          NO:'no'",
            "          BFD:'bfd'",
            "          INTERVAL:'interval'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_no_bfd",
            "          NO:'no'",
            "          BFD:'bfd'",
            "          NEIGHBOR:'neighbor'",
            "          SRC_IP:'src-ip'  <== mode:M_NEIGHBOR",
            "          src_ip = IP_ADDRESS:'1.2.3.4'",
            "          DEST_IP:'dest-ip'",
            "          dst_ip = IP_ADDRESS:'2.3.4.5'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_no_bfd",
            "          NO:'no'",
            "          BFD:'bfd'",
            "          OPTIMIZE:'optimize'",
            "          SUBINTERFACE:'subinterface'",
            "          NEWLINE:'\\n\\n'))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/cisco_nxos_bgp" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'cisco_nxos_bgp'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_feature",
            "      FEATURE:'feature'",
            "      (variable",
            "        BGP:'bgp')",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (route_map_stanza",
            "      ROUTE_MAP:'route-map'",
            "      name = (variable",
            "        VARIABLE:'MATCH_ASN'  <== mode:M_RouteMap)",
            "      rmt = (access_list_action",
            "        PERMIT:'permit')",
            "      num = DEC:'10'",
            "      NEWLINE:'\\n'",
            "      (rm_stanza",
            "        (match_rm_stanza",
            "          (match_as_number_rm_stanza",
            "            MATCH:'match'",
            "            AS_NUMBER:'as-number'",
            "            num = DEC:'123'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (router_bgp_stanza",
            "      ROUTER:'router'",
            "      BGP:'bgp'",
            "      procnum = (bgp_asn",
            "        asn = DEC:'1')",
            "      NEWLINE:'\\n'",
            "      (router_bgp_nxos_toplevel",
            "        (rbnx_proc_vrf_common",
            "          (rbnx_neighbor",
            "            NEIGHBOR:'neighbor'",
            "            prefix = IP_PREFIX:'123.123.123.0/24'  <== mode:M_NEIGHBOR",
            "            REMOTE_AS:'remote-as'",
            "            ROUTE_MAP:'route-map'",
            "            mapname = (variable",
            "              VARIABLE:'MATCH_ASN'  <== mode:M_RouteMap)",
            "            NEWLINE:'\\n')))",
            "      (router_bgp_nxos_toplevel",
            "        (rbnx_proc_vrf_common",
            "          (rbnx_log_neighbor_changes",
            "            LOG_NEIGHBOR_CHANGES:'log-neighbor-changes'",
            "            NEWLINE:'\\n')))",
            "      (router_bgp_nxos_toplevel",
            "        (rbnx_event_history",
            "          EVENT_HISTORY:'event-history'",
            "          PERIODIC:'periodic'",
            "          NEWLINE:'\\n'))",
            "      (router_bgp_nxos_toplevel",
            "        (rbnx_event_history",
            "          EVENT_HISTORY:'event-history'",
            "          EVENTS:'events'",
            "          NEWLINE:'\\n'))",
            "      (router_bgp_nxos_toplevel",
            "        (rbnx_event_history",
            "          EVENT_HISTORY:'event-history'",
            "          CLI:'cli'",
            "          NEWLINE:'\\n'))",
            "      (router_bgp_nxos_toplevel",
            "        (rbnx_proc_vrf_common",
            "          (rbnx_reconnect_interval",
            "            RECONNECT_INTERVAL:'reconnect-interval'",
            "            secs = DEC:'30'",
            "            NEWLINE:'\\n')))",
            "      (router_bgp_nxos_toplevel",
            "        (rbnx_proc_vrf_common",
            "          (rbnx_graceful_restart",
            "            GRACEFUL_RESTART:'graceful-restart'",
            "            NEWLINE:'\\n')))",
            "      (router_bgp_nxos_toplevel",
            "        (rbnx_proc_vrf_common",
            "          (rbnx_graceful_restart",
            "            GRACEFUL_RESTART:'graceful-restart'",
            "            RESTART_TIME:'restart-time'",
            "            restart_secs = DEC:'120'",
            "            NEWLINE:'\\n')))",
            "      (router_bgp_nxos_toplevel",
            "        (rbnx_proc_vrf_common",
            "          (rbnx_graceful_restart",
            "            GRACEFUL_RESTART:'graceful-restart'",
            "            STALEPATH_TIME:'stalepath-time'",
            "            stalepath_secs = DEC:'300'",
            "            NEWLINE:'\\n')))",
            "      (router_bgp_nxos_toplevel",
            "        (rbnx_proc_vrf_common",
            "          (rbnx_address_family",
            "            ADDRESS_FAMILY:'address-family'",
            "            first = IPV4:'ipv4'",
            "            second = UNICAST:'unicast'",
            "            NEWLINE:'\\n')))",
            "      (router_bgp_nxos_toplevel",
            "        (rbnx_proc_vrf_common",
            "          (rbnx_address_family",
            "            ADDRESS_FAMILY:'address-family'",
            "            first = IPV6:'ipv6'",
            "            second = UNICAST:'unicast'",
            "            NEWLINE:'\\n'",
            "            (rbnx_af_inner",
            "              (rbnx_af_aggregate_address",
            "                AGGREGATE_ADDRESS:'aggregate-address'",
            "                prefix6 = IPV6_PREFIX:'fe80::/10'",
            "                (rbnx_af_aa_tail",
            "                  ADVERTISE_MAP:'advertise-map'",
            "                  mapname = (variable",
            "                    VARIABLE:'AGG6_MAP'))",
            "                NEWLINE:'\\n'))",
            "            (rbnx_af_inner",
            "              (rbnx_af_network",
            "                NETWORK:'network'",
            "                prefix6 = IPV6_PREFIX:'fe80::/120'",
            "                NEWLINE:'\\n')))))",
            "      (router_bgp_nxos_toplevel",
            "        (rbnx_proc_vrf_common",
            "          (rbnx_neighbor",
            "            NEIGHBOR:'neighbor'",
            "            ip = IP_ADDRESS:'2.2.2.2'  <== mode:M_NEIGHBOR",
            "            REMOTE_AS:'remote-as'",
            "            (bgp_asn",
            "              asn = DEC:'6600')",
            "            NEWLINE:'\\n'",
            "            (rbnx_n_inner",
            "              (rbnx_n_common",
            "                (rbnx_n_local_as",
            "                  LOCAL_AS:'local-as'",
            "                  (bgp_asn",
            "                    asn = DEC:'65500')",
            "                  NO_PREPEND:'no-prepend'",
            "                  REPLACE_AS:'replace-as'",
            "                  NEWLINE:'\\n')))",
            "            (rbnx_n_inner",
            "              (rbnx_n_common",
            "                (rbnx_n_no_shutdown",
            "                  NO:'no'",
            "                  SHUTDOWN:'shutdown'",
            "                  NEWLINE:'\\n')))",
            "            (rbnx_n_inner",
            "              (rbnx_n_common",
            "                (rbnx_n_timers",
            "                  TIMERS:'timers'",
            "                  keepalive_secs = DEC:'1'",
            "                  holdtime_secs = DEC:'3'",
            "                  NEWLINE:'\\n')))",
            "            (rbnx_n_inner",
            "              (rbnx_n_address_family",
            "                ADDRESS_FAMILY:'address-family'",
            "                first = IPV4:'ipv4'",
            "                second = UNICAST:'unicast'",
            "                NEWLINE:'\\n'",
            "                (rbnx_n_af_inner",
            "                  (rbnx_n_af_soft_reconfiguration",
            "                    SOFT_RECONFIGURATION:'soft-reconfiguration'",
            "                    INBOUND:'inbound'",
            "                    ALWAYS:'always'",
            "                    NEWLINE:'\\n')))))))",
            "      (router_bgp_nxos_toplevel",
            "        (rbnx_proc_vrf_common",
            "          (rbnx_neighbor",
            "            NEIGHBOR:'neighbor'",
            "            ip = IP_ADDRESS:'3.3.3.3'  <== mode:M_NEIGHBOR",
            "            REMOTE_AS:'remote-as'",
            "            (bgp_asn",
            "              asn = DEC:'4123456789')",
            "            NEWLINE:'\\n')))",
            "      (router_bgp_nxos_toplevel",
            "        (rbnx_proc_vrf_common",
            "          (rbnx_neighbor",
            "            NEIGHBOR:'neighbor'",
            "            ip = IP_ADDRESS:'4.4.4.4'  <== mode:M_NEIGHBOR",
            "            REMOTE_AS:'remote-as'",
            "            (bgp_asn",
            "              asn4b = FLOAT:'12.345')",
            "            NEWLINE:'\\n')))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/cisco_opsfv3" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'cisco_ospfv3'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_interface",
            "      INTERFACE:'interface'",
            "      iname = (interface_name",
            "        name_prefix_alpha = M_Interface_PREFIX:'ethernet'  <== mode:M_Interface",
            "        DEC:'0'  <== mode:M_Interface",
            "        FORWARD_SLASH:'/'  <== mode:M_Interface",
            "        (range",
            "          (subrange",
            "            low = DEC:'0'  <== mode:M_Interface)))",
            "      NEWLINE:'\\n'  <== mode:M_Interface",
            "      (if_inner",
            "        (if_ip_address",
            "          IP:'ip'",
            "          ADDRESS:'address'",
            "          ip = IP_ADDRESS:'2.2.2.0'",
            "          subnet = IP_ADDRESS:'255.255.255.0'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_ip_router_ospf_area",
            "          IP:'ip'",
            "          ROUTER:'router'",
            "          OSPF:'ospf'",
            "          procname = (variable",
            "            DEC:'1')",
            "          AREA:'area'",
            "          area = IP_ADDRESS:'0.0.0.0'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_ip_ospf_shutdown",
            "          IP:'ip'",
            "          OSPF:'ospf'",
            "          SHUTDOWN:'shutdown'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          OSPFV3:'ospfv3'",
            "          NAME_LOOKUP:'name-lookup'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_router_ospfv3",
            "      ROUTER:'router'",
            "      OSPFV3:'ospfv3'",
            "      procname = (variable",
            "        DEC:'1')",
            "      NEWLINE:'\\n'",
            "      (rov3_address_family",
            "        ADDRESS_FAMILY:'address-family'",
            "        IPV6:'ipv6'",
            "        UNICAST:'unicast'",
            "        NEWLINE:'\\n'",
            "        (rov3_common",
            "          (rov3_null",
            "            REDISTRIBUTE:'redistribute'",
            "            (null_rest_of_line",
            "              DIRECT:'direct'",
            "              ROUTE_MAP:'route-map'",
            "              VARIABLE:'DIRECT_OSPF'  <== mode:M_RouteMap",
            "              NEWLINE:'\\n')))",
            "        (rov3_common",
            "          (rov3_null",
            "            TIMERS:'timers'",
            "            (null_rest_of_line",
            "              VARIABLE:'throttle'",
            "              VARIABLE:'spf'",
            "              DEC:'200'",
            "              DEC:'1000'",
            "              DEC:'5000'",
            "              NEWLINE:'\\n')))",
            "        (rov3_common",
            "          (rov3_null",
            "            DISTANCE:'distance'",
            "            (null_rest_of_line",
            "              DEC:'110'",
            "              NEWLINE:'\\n')))",
            "        (rov3_common",
            "          (rov3_null",
            "            MAXIMUM_PATHS:'maximum-paths'",
            "            (null_rest_of_line",
            "              DEC:'8'",
            "              NEWLINE:'\\n'))))",
            "      (rov3_address_family",
            "        ADDRESS_FAMILY:'address-family'",
            "        IPV6:'ipv6'",
            "        NEWLINE:'\\n'",
            "        EXIT_ADDRESS_FAMILY:'exit-address-family'",
            "        NEWLINE:'\\n')",
            "      (rov3_common",
            "        (rov3_null",
            "          AUTO_COST:'auto-cost'",
            "          (null_rest_of_line",
            "            REFERENCE_BANDWIDTH:'reference-bandwidth'",
            "            DEC:'40'",
            "            GBPS:'Gbps'",
            "            NEWLINE:'\\n')))",
            "      (rov3_common",
            "        (rov3_null",
            "          DISCARD_ROUTE:'discard-route'",
            "          (null_rest_of_line",
            "            EXTERNAL:'external'",
            "            NEWLINE:'\\n')))",
            "      (rov3_common",
            "        (rov3_null",
            "          DISCARD_ROUTE:'discard-route'",
            "          (null_rest_of_line",
            "            INTERNAL:'internal'",
            "            NEWLINE:'\\n')))",
            "      (rov3_common",
            "        (rov3_null",
            "          GRACEFUL_RESTART:'graceful-restart'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n')))",
            "      (rov3_common",
            "        (rov3_null",
            "          GRACEFUL_RESTART:'graceful-restart'",
            "          (null_rest_of_line",
            "            VARIABLE:'grace-period'",
            "            DEC:'180'",
            "            NEWLINE:'\\n')))",
            "      (rov3_common",
            "        (rov3_null",
            "          LOG_ADJACENCY_CHANGES:'log-adjacency-changes'",
            "          (null_rest_of_line",
            "            DETAIL:'detail'",
            "            NEWLINE:'\\n')))",
            "      (rov3_common",
            "        (rov3_null",
            "          MAX_METRIC:'max-metric'",
            "          (null_rest_of_line",
            "            ROUTER_LSA:'router-lsa'",
            "            ON_STARTUP:'on-startup'",
            "            DEC:'600'",
            "            NEWLINE:'\\n')))",
            "      (rov3_common",
            "        (rov3_null",
            "          MAXIMUM_PATHS:'maximum-paths'",
            "          (null_rest_of_line",
            "            DEC:'16'",
            "            NEWLINE:'\\n')))",
            "      (rov3_common",
            "        (rov3_null",
            "          OSPFV3:'ospfv3'",
            "          (null_rest_of_line",
            "            EVENT_HISTORY:'event-history'",
            "            HELLO:'hello'",
            "            SIZE:'size'",
            "            SMALL:'small'",
            "            NEWLINE:'\\n')))",
            "      (rov3_common",
            "        (rov3_null",
            "          OSPFV3:'ospfv3'",
            "          (null_rest_of_line",
            "            EVENT_HISTORY:'event-history'",
            "            VARIABLE:'redistribution'",
            "            SIZE:'size'",
            "            SMALL:'small'",
            "            NEWLINE:'\\n')))",
            "      (rov3_common",
            "        (rov3_null",
            "          OSPFV3:'ospfv3'",
            "          (null_rest_of_line",
            "            EVENT_HISTORY:'event-history'",
            "            VARIABLE:'spf'",
            "            SIZE:'size'",
            "            SMALL:'small'",
            "            NEWLINE:'\\n')))",
            "      (rov3_common",
            "        (rov3_null",
            "          OSPFV3:'ospfv3'",
            "          (null_rest_of_line",
            "            EVENT_HISTORY:'event-history'",
            "            VARIABLE:'lsa'",
            "            SIZE:'size'",
            "            SMALL:'small'",
            "            NEWLINE:'\\n')))",
            "      (rov3_common",
            "        (rov3_null",
            "          OSPFV3:'ospfv3'",
            "          (null_rest_of_line",
            "            EVENT_HISTORY:'event-history'",
            "            VARIABLE:'flooding'",
            "            SIZE:'size'",
            "            SMALL:'small'",
            "            NEWLINE:'\\n')))",
            "      (rov3_common",
            "        (rov3_null",
            "          OSPFV3:'ospfv3'",
            "          (null_rest_of_line",
            "            EVENT_HISTORY:'event-history'",
            "            VARIABLE:'ha'",
            "            SIZE:'size'",
            "            SMALL:'small'",
            "            NEWLINE:'\\n')))",
            "      (rov3_common",
            "        (rov3_null",
            "          OSPFV3:'ospfv3'",
            "          (null_rest_of_line",
            "            EVENT_HISTORY:'event-history'",
            "            EVENT:'event'",
            "            SIZE:'size'",
            "            SMALL:'small'",
            "            NEWLINE:'\\n')))",
            "      (rov3_common",
            "        (rov3_null",
            "          OSPFV3:'ospfv3'",
            "          (null_rest_of_line",
            "            EVENT_HISTORY:'event-history'",
            "            ADJACENCY:'adjacency'",
            "            SIZE:'size'",
            "            SMALL:'small'",
            "            NEWLINE:'\\n')))",
            "      (rov3_common",
            "        (rov3_null",
            "          OSPFV3:'ospfv3'",
            "          (null_rest_of_line",
            "            EVENT_HISTORY:'event-history'",
            "            CLI:'cli'",
            "            SIZE:'size'",
            "            MEDIUM:'medium'",
            "            NEWLINE:'\\n')))",
            "      (rov3_common",
            "        (rov3_null",
            "          ROUTER_ID:'router-id'",
            "          (null_rest_of_line",
            "            IP_ADDRESS:'2.3.4.5'",
            "            NEWLINE:'\\n')))",
            "      (rov3_common",
            "        (rov3_null",
            "          TIMERS:'timers'",
            "          (null_rest_of_line",
            "            VARIABLE:'lsa-arrival'",
            "            DEC:'1000'",
            "            NEWLINE:'\\n')))",
            "      (rov3_common",
            "        (rov3_null",
            "          TIMERS:'timers'",
            "          (null_rest_of_line",
            "            VARIABLE:'throttle'",
            "            VARIABLE:'lsa'",
            "            DEC:'0'",
            "            DEC:'50'",
            "            DEC:'5000'",
            "            NEWLINE:'\\n')))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/cisco_ospf" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'cisco_ospf'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_interface",
            "      INTERFACE:'interface'",
            "      iname = (interface_name",
            "        name_prefix_alpha = M_Interface_PREFIX:'loopback'  <== mode:M_Interface",
            "        (range",
            "          (subrange",
            "            low = DEC:'0'  <== mode:M_Interface)))",
            "      NEWLINE:'\\n'  <== mode:M_Interface",
            "      (if_inner",
            "        (if_ip_address",
            "          IP:'ip'",
            "          ADDRESS:'address'",
            "          ip = IP_ADDRESS:'1.1.1.1'",
            "          subnet = IP_ADDRESS:'255.255.255.255'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_interface",
            "      INTERFACE:'interface'",
            "      iname = (interface_name",
            "        name_prefix_alpha = M_Interface_PREFIX:'ethernet'  <== mode:M_Interface",
            "        DEC:'0'  <== mode:M_Interface",
            "        FORWARD_SLASH:'/'  <== mode:M_Interface",
            "        (range",
            "          (subrange",
            "            low = DEC:'0'  <== mode:M_Interface)))",
            "      NEWLINE:'\\n'  <== mode:M_Interface",
            "      (if_inner",
            "        (if_ip_address",
            "          IP:'ip'",
            "          ADDRESS:'address'",
            "          ip = IP_ADDRESS:'2.2.2.0'",
            "          subnet = IP_ADDRESS:'255.255.255.0'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_ip_router_ospf_area",
            "          IP:'ip'",
            "          ROUTER:'router'",
            "          OSPF:'ospf'",
            "          procname = (variable",
            "            DEC:'1')",
            "          AREA:'area'",
            "          area = IP_ADDRESS:'0.0.0.0'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_ip_ospf_shutdown",
            "          IP:'ip'",
            "          OSPF:'ospf'",
            "          SHUTDOWN:'shutdown'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_interface",
            "      INTERFACE:'interface'",
            "      iname = (interface_name",
            "        name_prefix_alpha = M_Interface_PREFIX:'ethernet'  <== mode:M_Interface",
            "        DEC:'0'  <== mode:M_Interface",
            "        FORWARD_SLASH:'/'  <== mode:M_Interface",
            "        (range",
            "          (subrange",
            "            low = DEC:'0'  <== mode:M_Interface)))",
            "      NEWLINE:'\\n'  <== mode:M_Interface",
            "      (if_inner",
            "        (if_ip_address",
            "          IP:'ip'",
            "          ADDRESS:'address'",
            "          ip = IP_ADDRESS:'3.3.3.0'",
            "          subnet = IP_ADDRESS:'255.255.255.0'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_ip_ospf_area",
            "          IP:'ip'",
            "          OSPF:'ospf'",
            "          procname = (variable",
            "            DEC:'1')",
            "          AREA:'area'",
            "          area = DEC:'0'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_ip_ospf_passive_interface",
            "          NO:'no'",
            "          IP:'ip'",
            "          OSPF:'ospf'",
            "          PASSIVE_INTERFACE:'passive-interface'",
            "          NEWLINE:'\\n'  <== mode:M_Interface))))",
            "  (stanza",
            "    (s_interface",
            "      INTERFACE:'interface'",
            "      iname = (interface_name",
            "        name_prefix_alpha = M_Interface_PREFIX:'ethernet'  <== mode:M_Interface",
            "        DEC:'1'  <== mode:M_Interface",
            "        FORWARD_SLASH:'/'  <== mode:M_Interface",
            "        (range",
            "          (subrange",
            "            low = DEC:'0'  <== mode:M_Interface)))",
            "      NEWLINE:'\\n'  <== mode:M_Interface",
            "      (if_inner",
            "        (if_ip_address",
            "          IP:'ip'",
            "          ADDRESS:'address'",
            "          ip = IP_ADDRESS:'4.4.4.0'",
            "          subnet = IP_ADDRESS:'255.255.255.0'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_ip_ospf_area",
            "          IP:'ip'",
            "          OSPF:'ospf'",
            "          procname = (variable",
            "            VARIABLE:'abcdefg')",
            "          AREA:'area'",
            "          area = DEC:'0'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_ip_ospf_passive_interface",
            "          NO:'no'",
            "          IP:'ip'",
            "          OSPF:'ospf'",
            "          PASSIVE_INTERFACE:'passive-interface'",
            "          NEWLINE:'\\n'  <== mode:M_Interface))))",
            "  (stanza",
            "    (s_router_ospf",
            "      ROUTER:'router'",
            "      OSPF:'ospf'",
            "      name = (variable",
            "        DEC:'1')",
            "      NEWLINE:'\\n'",
            "      (ro_address_family",
            "        ADDRESS_FAMILY:'address-family'",
            "        IPV4:'ipv4'",
            "        NEWLINE:'\\n'",
            "        (ro_common",
            "          (ro_null",
            "            AREA:'area'",
            "            (variable",
            "              IP_ADDRESS:'0.0.0.0')",
            "            AUTHENTICATION:'authentication'",
            "            (null_rest_of_line",
            "              MESSAGE_DIGEST:'message-digest'  <== mode:M_Authentication",
            "              NEWLINE:'\\n'))))",
            "      (ro_area_default_cost",
            "        AREA:'area'",
            "        area_ip = IP_ADDRESS:'0.0.0.0'",
            "        DEFAULT_COST:'default-cost'",
            "        cost = DEC:'5'",
            "        NEWLINE:'\\n')",
            "      (ro_area_filterlist",
            "        AREA:'area'",
            "        area_ip = IP_ADDRESS:'0.0.0.0'",
            "        FILTER_LIST:'filter-list'",
            "        PREFIX:'prefix'",
            "        list = (variable",
            "          VARIABLE:'filterName')",
            "        IN:'in'",
            "        NEWLINE:'\\n')",
            "      (ro_area_filterlist",
            "        AREA:'area'",
            "        area_ip = IP_ADDRESS:'0.0.0.0'",
            "        FILTER_LIST:'filter-list'",
            "        PREFIX:'prefix'",
            "        list = (variable",
            "          VARIABLE:'filterName')",
            "        OUT:'out'",
            "        NEWLINE:'\\n')",
            "      (ro_area_nssa",
            "        AREA:'area'",
            "        area_ip = IP_ADDRESS:'0.0.0.0'",
            "        NSSA:'nssa'",
            "        NEWLINE:'\\n')",
            "      (ro_area_nssa",
            "        AREA:'area'",
            "        area_ip = IP_ADDRESS:'0.0.0.0'",
            "        NSSA:'nssa'",
            "        default_information_originate = DEFAULT_INFORMATION_ORIGINATE:'default-information-originate'",
            "        NEWLINE:'\\n')",
            "      (ro_area_nssa",
            "        AREA:'area'",
            "        area_ip = IP_ADDRESS:'0.0.0.0'",
            "        NSSA:'nssa'",
            "        default_information_originate = DEFAULT_INFORMATION_ORIGINATE:'default-information-originate'",
            "        METRIC:'metric'",
            "        metric = DEC:'5'",
            "        NEWLINE:'\\n')",
            "      (ro_area_nssa",
            "        AREA:'area'",
            "        area_ip = IP_ADDRESS:'0.0.0.0'",
            "        NSSA:'nssa'",
            "        default_information_originate = DEFAULT_INFORMATION_ORIGINATE:'default-information-originate'",
            "        METRIC_TYPE:'metric-type'",
            "        metric_type = DEC:'1'",
            "        NEWLINE:'\\n')",
            "      (ro_area_nssa",
            "        AREA:'area'",
            "        area_ip = IP_ADDRESS:'0.0.0.0'",
            "        NSSA:'nssa'",
            "        no_redistribution = NO_REDISTRIBUTION:'no-redistribution'",
            "        NEWLINE:'\\n')",
            "      (ro_area_nssa",
            "        AREA:'area'",
            "        area_ip = IP_ADDRESS:'0.0.0.0'",
            "        NSSA:'nssa'",
            "        no_redistribution = NO_REDISTRIBUTION:'no-redistribution'",
            "        no_summary = NO_SUMMARY:'no-summary'",
            "        NEWLINE:'\\n')",
            "      (ro_area_nssa",
            "        AREA:'area'",
            "        area_ip = IP_ADDRESS:'0.0.0.0'",
            "        NSSA:'nssa'",
            "        no_redistribution = NO_REDISTRIBUTION:'no-redistribution'",
            "        default_information_originate = DEFAULT_INFORMATION_ORIGINATE:'default-information-originate'",
            "        no_summary = NO_SUMMARY:'no-summary'",
            "        NEWLINE:'\\n')",
            "      (ro_area_nssa",
            "        AREA:'area'",
            "        area_ip = IP_ADDRESS:'0.0.0.0'",
            "        NSSA:'nssa'",
            "        no_summary = NO_SUMMARY:'no-summary'",
            "        NEWLINE:'\\n')",
            "      (ro_area_range",
            "        AREA:'area'",
            "        area_ip = IP_ADDRESS:'0.0.0.0'",
            "        RANGE:'range'",
            "        area_prefix = IP_PREFIX:'1.2.3.0/24'",
            "        NEWLINE:'\\n')",
            "      (ro_area_range",
            "        AREA:'area'",
            "        area_ip = IP_ADDRESS:'0.0.0.0'",
            "        RANGE:'range'",
            "        area_prefix = IP_PREFIX:'1.2.3.0/24'",
            "        COST:'cost'",
            "        cost = DEC:'17'",
            "        NEWLINE:'\\n')",
            "      (ro_area_range",
            "        AREA:'area'",
            "        IP_ADDRESS:'0.0.0.0'",
            "        RANGE:'range'",
            "        area_ip = IP_ADDRESS:'1.2.3.0'",
            "        area_subnet = IP_ADDRESS:'255.255.255.0'",
            "        NEWLINE:'\\n')",
            "      (ro_area_range",
            "        AREA:'area'",
            "        IP_ADDRESS:'0.0.0.0'",
            "        RANGE:'range'",
            "        area_ip = IP_ADDRESS:'1.2.3.0'",
            "        area_subnet = IP_ADDRESS:'255.255.255.0'",
            "        ADVERTISE:'advertise'",
            "        NEWLINE:'\\n')",
            "      (ro_area_range",
            "        AREA:'area'",
            "        IP_ADDRESS:'0.0.0.0'",
            "        RANGE:'range'",
            "        area_ip = IP_ADDRESS:'1.2.3.0'",
            "        area_subnet = IP_ADDRESS:'255.255.255.0'",
            "        ADVERTISE:'advertise'",
            "        COST:'cost'",
            "        cost = DEC:'10'",
            "        NEWLINE:'\\n')",
            "      (ro_area_range",
            "        AREA:'area'",
            "        IP_ADDRESS:'0.0.0.0'",
            "        RANGE:'range'",
            "        area_ip = IP_ADDRESS:'1.2.3.0'",
            "        area_subnet = IP_ADDRESS:'255.255.255.0'",
            "        COST:'cost'",
            "        cost = DEC:'10'",
            "        NEWLINE:'\\n')",
            "      (ro_area_range",
            "        AREA:'area'",
            "        IP_ADDRESS:'0.0.0.0'",
            "        RANGE:'range'",
            "        area_ip = IP_ADDRESS:'1.2.3.0'",
            "        area_subnet = IP_ADDRESS:'255.255.255.0'",
            "        NOT_ADVERTISE:'not-advertise'",
            "        NEWLINE:'\\n')",
            "      (ro_auto_cost",
            "        AUTO_COST:'auto-cost'",
            "        REFERENCE_BANDWIDTH:'reference-bandwidth'",
            "        DEC:'40'",
            "        GBPS:'Gbps'",
            "        NEWLINE:'\\n')",
            "      (ro_common",
            "        (ro_null",
            "          CAPABILITY:'capability'",
            "          (null_rest_of_line",
            "            VARIABLE:'lls'",
            "            NEWLINE:'\\n')))",
            "      (ro_common",
            "        (ro_null",
            "          CAPABILITY:'capability'",
            "          (null_rest_of_line",
            "            VARIABLE:'transit'",
            "            NEWLINE:'\\n')))",
            "      (ro_common",
            "        (ro_null",
            "          CAPABILITY:'capability'",
            "          (null_rest_of_line",
            "            VARIABLE:'vrf-lite'",
            "            NEWLINE:'\\n')))",
            "      (ro_default_information",
            "        DEFAULT_INFORMATION:'default-information'",
            "        ORIGINATE:'originate'",
            "        ALWAYS:'always'",
            "        METRIC:'metric'",
            "        metric = DEC:'10'",
            "        METRIC_TYPE:'metric-type'",
            "        metric_type = DEC:'1'",
            "        ROUTE_MAP:'route-map'",
            "        map = VARIABLE:'DEFAULT_ORIGINATE_OSPF'  <== mode:M_RouteMap",
            "        NEWLINE:'\\n')",
            "      (ro_default_metric",
            "        DEFAULT_METRIC:'default-metric'",
            "        metric = DEC:'11'",
            "        NEWLINE:'\\n')",
            "      (ro_common",
            "        (ro_null",
            "          DISCARD_ROUTE:'discard-route'",
            "          (null_rest_of_line",
            "            EXTERNAL:'external'",
            "            NEWLINE:'\\n')))",
            "      (ro_common",
            "        (ro_null",
            "          DISCARD_ROUTE:'discard-route'",
            "          (null_rest_of_line",
            "            INTERNAL:'internal'",
            "            NEWLINE:'\\n')))",
            "      (ro_distance",
            "        DISTANCE:'distance'",
            "        value = DEC:'110'",
            "        NEWLINE:'\\n')",
            "      (ro_distribute_list",
            "        DISTRIBUTE_LIST:'distribute-list'",
            "        name = (variable_distribute_list",
            "          VARIABLE:'aclin')",
            "        IN:'in'",
            "        NEWLINE:'\\n')",
            "      (ro_distribute_list",
            "        DISTRIBUTE_LIST:'distribute-list'",
            "        name = (variable_distribute_list",
            "          VARIABLE:'aclin')",
            "        IN:'in'",
            "        iname = (interface_name",
            "          VARIABLE:'ethernet0/0')",
            "        NEWLINE:'\\n')",
            "      (ro_distribute_list",
            "        DISTRIBUTE_LIST:'distribute-list'",
            "        name = (variable_distribute_list",
            "          VARIABLE:'aclout')",
            "        OUT:'out'",
            "        NEWLINE:'\\n')",
            "      (ro_distribute_list",
            "        DISTRIBUTE_LIST:'distribute-list'",
            "        PREFIX:'prefix'",
            "        name = (variable_distribute_list",
            "          VARIABLE:'plin')",
            "        IN:'in'",
            "        NEWLINE:'\\n')",
            "      (ro_distribute_list",
            "        DISTRIBUTE_LIST:'distribute-list'",
            "        PREFIX:'prefix'",
            "        name = (variable_distribute_list",
            "          VARIABLE:'plout')",
            "        OUT:'out'",
            "        NEWLINE:'\\n')",
            "      (ro_distribute_list",
            "        DISTRIBUTE_LIST:'distribute-list'",
            "        ROUTE_MAP:'route-map'",
            "        name = (variable_distribute_list",
            "          VARIABLE:'rmin'  <== mode:M_RouteMap)",
            "        IN:'in'",
            "        NEWLINE:'\\n')",
            "      (ro_distribute_list",
            "        DISTRIBUTE_LIST:'distribute-list'",
            "        ROUTE_MAP:'route-map'",
            "        name = (variable_distribute_list",
            "          VARIABLE:'rmout'  <== mode:M_RouteMap)",
            "        OUT:'out'",
            "        NEWLINE:'\\n')",
            "      (ro_common",
            "        (ro_null",
            "          GRACEFUL_RESTART:'graceful-restart'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n')))",
            "      (ro_common",
            "        (ro_null",
            "          GRACEFUL_RESTART:'graceful-restart'",
            "          (null_rest_of_line",
            "            VARIABLE:'grace-period'",
            "            DEC:'180'",
            "            NEWLINE:'\\n')))",
            "      (ro_common",
            "        (ro_null",
            "          IP:'ip'",
            "          OSPF:'ospf'",
            "          EVENT_HISTORY:'event-history'",
            "          (null_rest_of_line",
            "            HELLO:'hello'",
            "            SIZE:'size'",
            "            SMALL:'small'",
            "            NEWLINE:'\\n')))",
            "      (ro_common",
            "        (ro_null",
            "          ISPF:'ispf'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n')))",
            "      (ro_common",
            "        (ro_null",
            "          LOG_ADJACENCY_CHANGES:'log-adjacency-changes'",
            "          (null_rest_of_line",
            "            DETAIL:'detail'",
            "            NEWLINE:'\\n')))",
            "      (ro_common",
            "        (ro_null",
            "          LOG_ADJ_CHANGES:'log-adj-changes'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n')))",
            "      (ro_maximum_paths",
            "        MAXIMUM_PATHS:'maximum-paths'",
            "        DEC:'32'",
            "        NEWLINE:'\\n')",
            "      (roi_priority",
            "        PRIORITY:'priority'",
            "        DEC:'10'",
            "        NEWLINE:'\\n')",
            "      (ro_redistribute_connected",
            "        REDISTRIBUTE:'redistribute'",
            "        DIRECT:'direct'",
            "        ROUTE_MAP:'route-map'",
            "        map = VARIABLE:'DIRECT_OSPF'  <== mode:M_RouteMap",
            "        NEWLINE:'\\n')",
            "      (ro_redistribute_eigrp",
            "        REDISTRIBUTE:'redistribute'",
            "        EIGRP:'eigrp'",
            "        tag = DEC:'5'",
            "        METRIC:'metric'",
            "        metric = DEC:'6'",
            "        ROUTE_MAP:'route-map'",
            "        map = (variable",
            "          VARIABLE:'eigrp-ospf-route-map'  <== mode:M_RouteMap)",
            "        NEWLINE:'\\n')",
            "      (ro_redistribute_ospf_null",
            "        REDISTRIBUTE:'redistribute'",
            "        OSPF:'ospf'",
            "        (null_rest_of_line",
            "          DEC:'2'",
            "          MATCH:'match'",
            "          INTERNAL:'internal'",
            "          NEWLINE:'\\n'))",
            "      (ro_router_id",
            "        ROUTER_ID:'router-id'",
            "        ip = IP_ADDRESS:'1.2.3.4'",
            "        NEWLINE:'\\n')",
            "      (ro_common",
            "        (ro_null",
            "          FAST_REROUTE:'fast-reroute'",
            "          (null_rest_of_line",
            "            VARIABLE:'per-prefix'",
            "            NEWLINE:'\\n')))",
            "      (ro_common",
            "        (ro_null",
            "          SNMP:'snmp'",
            "          (null_rest_of_line",
            "            CONTEXT:'context'",
            "            VARIABLE:'ospf1'",
            "            NEWLINE:'\\n')))",
            "      (ro_common",
            "        (ro_null",
            "          TIMERS:'timers'",
            "          (null_rest_of_line",
            "            VARIABLE:'lsa-arrival'",
            "            DEC:'1000'",
            "            NEWLINE:'\\n')))",
            "      (ro_common",
            "        (ro_null",
            "          TIMERS:'timers'",
            "          (null_rest_of_line",
            "            VARIABLE:'throttle'",
            "            VARIABLE:'lsa'",
            "            DEC:'0'",
            "            DEC:'50'",
            "            DEC:'5000'",
            "            NEWLINE:'\\n')))",
            "      (ro_common",
            "        (ro_null",
            "          TIMERS:'timers'",
            "          (null_rest_of_line",
            "            VARIABLE:'throttle'",
            "            VARIABLE:'spf'",
            "            DEC:'50'",
            "            DEC:'50'",
            "            DEC:'5000'",
            "            NEWLINE:'\\n')))",
            "      (ro_area",
            "        AREA:'area'",
            "        area_int = DEC:'0'",
            "        NEWLINE:'\\n'",
            "        (roa_cost",
            "          COST:'cost'",
            "          cost = DEC:'2500'",
            "          NEWLINE:'\\n')",
            "        (roa_network_null",
            "          NETWORK:'network'",
            "          POINT_TO_POINT:'point-to-point'",
            "          NEWLINE:'\\n')",
            "        (ro_common",
            "          (ro_null",
            "            DEAD_INTERVAL:'dead-interval'",
            "            (null_rest_of_line",
            "              DEC:'6'",
            "              NEWLINE:'\\n')))",
            "        (ro_common",
            "          (ro_null",
            "            HELLO_INTERVAL:'hello-interval'",
            "            (null_rest_of_line",
            "              DEC:'2'",
            "              NEWLINE:'\\n'))))",
            "      (ro_area_filterlist",
            "        AREA:'area'",
            "        area_int = DEC:'0'",
            "        FILTER_LIST:'filter-list'",
            "        PREFIX:'prefix'",
            "        list = (variable",
            "          VARIABLE:'INFILTER')",
            "        IN:'in'",
            "        NEWLINE:'\\n')",
            "      (ro_area_filterlist",
            "        AREA:'area'",
            "        area_int = DEC:'0'",
            "        FILTER_LIST:'filter-list'",
            "        PREFIX:'prefix'",
            "        list = (variable",
            "          VARIABLE:'OUTFILTER')",
            "        OUT:'out'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_block",
            "        OSPF:'ospf'",
            "        NAME_LOOKUP:'name-lookup'",
            "        (null_rest_of_line",
            "          NEWLINE:'\\n\\n'))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/cisco_ospf_ipv6" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'cisco_ospf_ipv6'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_interface",
            "      INTERFACE:'interface'",
            "      iname = (interface_name",
            "        name_prefix_alpha = M_Interface_PREFIX:'ethernet'  <== mode:M_Interface",
            "        DEC:'0'  <== mode:M_Interface",
            "        FORWARD_SLASH:'/'  <== mode:M_Interface",
            "        (range",
            "          (subrange",
            "            low = DEC:'0'  <== mode:M_Interface)))",
            "      NEWLINE:'\\n'  <== mode:M_Interface",
            "      (if_inner",
            "        (if_ip_address",
            "          IP:'ip'",
            "          ADDRESS:'address'",
            "          ip = IP_ADDRESS:'2.2.2.0'",
            "          subnet = IP_ADDRESS:'255.255.255.0'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_ip_router_ospf_area",
            "          IP:'ip'",
            "          ROUTER:'router'",
            "          OSPF:'ospf'",
            "          procname = (variable",
            "            DEC:'1')",
            "          AREA:'area'",
            "          area = IP_ADDRESS:'0.0.0.0'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_ip_ospf_shutdown",
            "          IP:'ip'",
            "          OSPF:'ospf'",
            "          SHUTDOWN:'shutdown'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_ipv6_router_ospf",
            "      IPV6:'ipv6'",
            "      ROUTER:'router'",
            "      OSPF:'ospf'",
            "      procname = (variable",
            "        DEC:'1')",
            "      NEWLINE:'\\n'",
            "      (ro6_router_id",
            "        ROUTER_ID:'router-id'",
            "        (null_rest_of_line",
            "          IP_ADDRESS:'1.2.3.4'",
            "          NEWLINE:'\\n'))",
            "      (ro6_log_adjacency_changes",
            "        LOG_ADJACENCY_CHANGES:'log-adjacency-changes'",
            "        NEWLINE:'\\n')",
            "      (ro6_log_adjacency_changes",
            "        LOG_ADJACENCY_CHANGES:'log-adjacency-changes'",
            "        DETAIL:'detail'",
            "        NEWLINE:'\\n')",
            "      (ro6_distribute_list",
            "        DISTRIBUTE_LIST:'distribute-list'",
            "        PREFIX_LIST:'prefix-list'",
            "        name = (variable_distribute_list",
            "          VARIABLE:'SWITCHLAN'  <== mode:M_Name)",
            "        IN:'in'",
            "        NEWLINE:'\\n')",
            "      (ro6_distribute_list",
            "        DISTRIBUTE_LIST:'distribute-list'",
            "        PREFIX_LIST:'prefix-list'",
            "        name = (variable_distribute_list",
            "          VARIABLE:'SWITCHLAN-OUT'  <== mode:M_Name)",
            "        OUT:'out'",
            "        iname = (interface_name",
            "          VARIABLE:'Ethernet0/0')",
            "        NEWLINE:'\\n')",
            "      (ro6_passive_interface",
            "        PASSIVE_INTERFACE:'passive-interface'",
            "        (null_rest_of_line",
            "          DEFAULT:'default'  <== mode:M_Interface",
            "          NEWLINE:'\\n'))",
            "      (ro6_null",
            "        TIMERS:'timers'",
            "        (null_rest_of_line",
            "          VARIABLE:'throttle'",
            "          VARIABLE:'lsa'",
            "          DEC:'0'",
            "          DEC:'50'",
            "          DEC:'5000'",
            "          NEWLINE:'\\n'))",
            "      (ro6_null",
            "        TIMERS:'timers'",
            "        (null_rest_of_line",
            "          VARIABLE:'throttle'",
            "          VARIABLE:'spf'",
            "          DEC:'50'",
            "          DEC:'50'",
            "          DEC:'5000'",
            "          NEWLINE:'\\n'))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/cisco_ospf_multi_process" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'cisco_ospf_multi_process'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_interface",
            "      INTERFACE:'interface'",
            "      iname = (interface_name",
            "        name_prefix_alpha = M_Interface_PREFIX:'ethernet'  <== mode:M_Interface",
            "        DEC:'0'  <== mode:M_Interface",
            "        FORWARD_SLASH:'/'  <== mode:M_Interface",
            "        (range",
            "          (subrange",
            "            low = DEC:'0'  <== mode:M_Interface)))",
            "      NEWLINE:'\\n'  <== mode:M_Interface",
            "      (if_inner",
            "        (if_ip_address",
            "          IP:'ip'",
            "          ADDRESS:'address'",
            "          ip = IP_ADDRESS:'2.2.2.0'",
            "          subnet = IP_ADDRESS:'255.255.255.0'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_ip_router_ospf_area",
            "          IP:'ip'",
            "          ROUTER:'router'",
            "          OSPF:'ospf'",
            "          procname = (variable",
            "            DEC:'1')",
            "          AREA:'area'",
            "          area = IP_ADDRESS:'0.0.0.0'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_interface",
            "      INTERFACE:'interface'",
            "      iname = (interface_name",
            "        name_prefix_alpha = M_Interface_PREFIX:'ethernet'  <== mode:M_Interface",
            "        DEC:'1'  <== mode:M_Interface",
            "        FORWARD_SLASH:'/'  <== mode:M_Interface",
            "        (range",
            "          (subrange",
            "            low = DEC:'0'  <== mode:M_Interface)))",
            "      NEWLINE:'\\n'  <== mode:M_Interface",
            "      (if_inner",
            "        (if_ip_address",
            "          IP:'ip'",
            "          ADDRESS:'address'",
            "          ip = IP_ADDRESS:'3.3.3.0'",
            "          subnet = IP_ADDRESS:'255.255.255.0'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_ip_router_ospf_area",
            "          IP:'ip'",
            "          ROUTER:'router'",
            "          OSPF:'ospf'",
            "          procname = (variable",
            "            VARIABLE:'ignored')",
            "          AREA:'area'",
            "          area = IP_ADDRESS:'0.0.0.0'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_interface",
            "      INTERFACE:'interface'",
            "      iname = (interface_name",
            "        name_prefix_alpha = M_Interface_PREFIX:'loopback'  <== mode:M_Interface",
            "        (range",
            "          (subrange",
            "            low = DEC:'0'  <== mode:M_Interface)))",
            "      NEWLINE:'\\n'  <== mode:M_Interface",
            "      (if_inner",
            "        (if_ip_address",
            "          IP:'ip'",
            "          ADDRESS:'address'",
            "          ip = IP_ADDRESS:'1.1.1.1'",
            "          subnet = IP_ADDRESS:'255.255.255.255'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_router_ospf",
            "      ROUTER:'router'",
            "      OSPF:'ospf'",
            "      name = (variable",
            "        VARIABLE:'ignored')",
            "      NEWLINE:'\\n'",
            "      (ro_area_range",
            "        AREA:'area'",
            "        area_int = DEC:'1'",
            "        RANGE:'range'",
            "        area_ip = IP_ADDRESS:'3.3.3.0'",
            "        area_subnet = IP_ADDRESS:'255.255.255.0'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_router_ospf",
            "      ROUTER:'router'",
            "      OSPF:'ospf'",
            "      name = (variable",
            "        DEC:'1')",
            "      NEWLINE:'\\n'",
            "      (ro_address_family",
            "        ADDRESS_FAMILY:'address-family'",
            "        IPV4:'ipv4'",
            "        NEWLINE:'\\n'",
            "        (ro_common",
            "          (ro_null",
            "            AREA:'area'",
            "            (variable",
            "              IP_ADDRESS:'0.0.0.0')",
            "            AUTHENTICATION:'authentication'",
            "            (null_rest_of_line",
            "              MESSAGE_DIGEST:'message-digest'  <== mode:M_Authentication",
            "              NEWLINE:'\\n'))))",
            "      (ro_area_default_cost",
            "        AREA:'area'",
            "        area_ip = IP_ADDRESS:'0.0.0.0'",
            "        DEFAULT_COST:'default-cost'",
            "        cost = DEC:'5'",
            "        NEWLINE:'\\n')",
            "      (ro_area_filterlist",
            "        AREA:'area'",
            "        area_ip = IP_ADDRESS:'0.0.0.0'",
            "        FILTER_LIST:'filter-list'",
            "        PREFIX:'prefix'",
            "        list = (variable",
            "          VARIABLE:'filterName')",
            "        IN:'in'",
            "        NEWLINE:'\\n')",
            "      (ro_area_filterlist",
            "        AREA:'area'",
            "        area_ip = IP_ADDRESS:'0.0.0.0'",
            "        FILTER_LIST:'filter-list'",
            "        PREFIX:'prefix'",
            "        list = (variable",
            "          VARIABLE:'filterName')",
            "        OUT:'out'",
            "        NEWLINE:'\\n')",
            "      (ro_area_nssa",
            "        AREA:'area'",
            "        area_ip = IP_ADDRESS:'0.0.0.0'",
            "        NSSA:'nssa'",
            "        NEWLINE:'\\n')",
            "      (ro_area_nssa",
            "        AREA:'area'",
            "        area_ip = IP_ADDRESS:'0.0.0.0'",
            "        NSSA:'nssa'",
            "        default_information_originate = DEFAULT_INFORMATION_ORIGINATE:'default-information-originate'",
            "        NEWLINE:'\\n')",
            "      (ro_area_nssa",
            "        AREA:'area'",
            "        area_ip = IP_ADDRESS:'0.0.0.0'",
            "        NSSA:'nssa'",
            "        default_information_originate = DEFAULT_INFORMATION_ORIGINATE:'default-information-originate'",
            "        METRIC:'metric'",
            "        metric = DEC:'5'",
            "        NEWLINE:'\\n')",
            "      (ro_area_nssa",
            "        AREA:'area'",
            "        area_ip = IP_ADDRESS:'0.0.0.0'",
            "        NSSA:'nssa'",
            "        default_information_originate = DEFAULT_INFORMATION_ORIGINATE:'default-information-originate'",
            "        METRIC_TYPE:'metric-type'",
            "        metric_type = DEC:'1'",
            "        NEWLINE:'\\n')",
            "      (ro_area_nssa",
            "        AREA:'area'",
            "        area_ip = IP_ADDRESS:'0.0.0.0'",
            "        NSSA:'nssa'",
            "        no_redistribution = NO_REDISTRIBUTION:'no-redistribution'",
            "        NEWLINE:'\\n')",
            "      (ro_area_nssa",
            "        AREA:'area'",
            "        area_ip = IP_ADDRESS:'0.0.0.0'",
            "        NSSA:'nssa'",
            "        no_redistribution = NO_REDISTRIBUTION:'no-redistribution'",
            "        no_summary = NO_SUMMARY:'no-summary'",
            "        NEWLINE:'\\n')",
            "      (ro_area_nssa",
            "        AREA:'area'",
            "        area_ip = IP_ADDRESS:'0.0.0.0'",
            "        NSSA:'nssa'",
            "        no_redistribution = NO_REDISTRIBUTION:'no-redistribution'",
            "        default_information_originate = DEFAULT_INFORMATION_ORIGINATE:'default-information-originate'",
            "        no_summary = NO_SUMMARY:'no-summary'",
            "        NEWLINE:'\\n')",
            "      (ro_area_nssa",
            "        AREA:'area'",
            "        area_ip = IP_ADDRESS:'0.0.0.0'",
            "        NSSA:'nssa'",
            "        no_summary = NO_SUMMARY:'no-summary'",
            "        NEWLINE:'\\n')",
            "      (ro_area_range",
            "        AREA:'area'",
            "        area_ip = IP_ADDRESS:'0.0.0.0'",
            "        RANGE:'range'",
            "        area_prefix = IP_PREFIX:'1.2.3.0/24'",
            "        NEWLINE:'\\n')",
            "      (ro_area_range",
            "        AREA:'area'",
            "        area_ip = IP_ADDRESS:'0.0.0.0'",
            "        RANGE:'range'",
            "        area_prefix = IP_PREFIX:'1.2.3.0/24'",
            "        COST:'cost'",
            "        cost = DEC:'17'",
            "        NEWLINE:'\\n')",
            "      (ro_area_range",
            "        AREA:'area'",
            "        IP_ADDRESS:'0.0.0.0'",
            "        RANGE:'range'",
            "        area_ip = IP_ADDRESS:'1.2.3.0'",
            "        area_subnet = IP_ADDRESS:'255.255.255.0'",
            "        NEWLINE:'\\n')",
            "      (ro_area_range",
            "        AREA:'area'",
            "        IP_ADDRESS:'0.0.0.0'",
            "        RANGE:'range'",
            "        area_ip = IP_ADDRESS:'1.2.3.0'",
            "        area_subnet = IP_ADDRESS:'255.255.255.0'",
            "        ADVERTISE:'advertise'",
            "        NEWLINE:'\\n')",
            "      (ro_area_range",
            "        AREA:'area'",
            "        IP_ADDRESS:'0.0.0.0'",
            "        RANGE:'range'",
            "        area_ip = IP_ADDRESS:'1.2.3.0'",
            "        area_subnet = IP_ADDRESS:'255.255.255.0'",
            "        ADVERTISE:'advertise'",
            "        COST:'cost'",
            "        cost = DEC:'10'",
            "        NEWLINE:'\\n')",
            "      (ro_area_range",
            "        AREA:'area'",
            "        IP_ADDRESS:'0.0.0.0'",
            "        RANGE:'range'",
            "        area_ip = IP_ADDRESS:'1.2.3.0'",
            "        area_subnet = IP_ADDRESS:'255.255.255.0'",
            "        COST:'cost'",
            "        cost = DEC:'10'",
            "        NEWLINE:'\\n')",
            "      (ro_area_range",
            "        AREA:'area'",
            "        IP_ADDRESS:'0.0.0.0'",
            "        RANGE:'range'",
            "        area_ip = IP_ADDRESS:'1.2.3.0'",
            "        area_subnet = IP_ADDRESS:'255.255.255.0'",
            "        NOT_ADVERTISE:'not-advertise'",
            "        NEWLINE:'\\n')",
            "      (ro_passive_interface",
            "        PASSIVE_INTERFACE:'passive-interface'",
            "        i = (interface_name",
            "          name_prefix_alpha = M_Interface_PREFIX:'loopback'  <== mode:M_Interface",
            "          (range",
            "            (subrange",
            "              low = DEC:'0'  <== mode:M_Interface)))",
            "        NEWLINE:'\\n'  <== mode:M_Interface)))",
            "  (stanza",
            "    (s_router_ospf",
            "      ROUTER:'router'",
            "      OSPF:'ospf'",
            "      name = (variable",
            "        VARIABLE:'abcdefg')",
            "      NEWLINE:'\\n'",
            "      (ro_passive_interface_default",
            "        PASSIVE_INTERFACE:'passive-interface'",
            "        DEFAULT:'default'  <== mode:M_Interface",
            "        NEWLINE:'\\n')",
            "      (ro_common",
            "        (ro_null",
            "          TIMERS:'timers'",
            "          (null_rest_of_line",
            "            VARIABLE:'throttle'",
            "            VARIABLE:'lsa'",
            "            DEC:'0'",
            "            DEC:'50'",
            "            DEC:'5000'",
            "            NEWLINE:'\\n')))",
            "      (ro_common",
            "        (ro_null",
            "          TIMERS:'timers'",
            "          (null_rest_of_line",
            "            VARIABLE:'throttle'",
            "            VARIABLE:'spf'",
            "            DEC:'50'",
            "            DEC:'50'",
            "            DEC:'5000'",
            "            NEWLINE:'\\n')))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/cisco_pim" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'cisco_pim'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_ip_pim",
            "      IP:'ip'",
            "      PIM:'pim'",
            "      (ip_pim_tail",
            "        (pim_null",
            "          BIDIR_RP_LIMIT:'bidir-rp-limit'",
            "          (null_rest_of_line",
            "            DEC:'6'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_ip_pim",
            "      IP:'ip'",
            "      PIM:'pim'",
            "      (ip_pim_tail",
            "        (pim_null",
            "          EVENT_HISTORY:'event-history'",
            "          (null_rest_of_line",
            "            HELLO:'hello'",
            "            SIZE:'size'",
            "            SMALL:'small'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_ip_pim",
            "      IP:'ip'",
            "      PIM:'pim'",
            "      (ip_pim_tail",
            "        (pim_null",
            "          MTU:'mtu'",
            "          (null_rest_of_line",
            "            DEC:'1500'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_ip_pim",
            "      IP:'ip'",
            "      PIM:'pim'",
            "      (ip_pim_tail",
            "        (pim_rp_address",
            "          RP_ADDRESS:'rp-address'",
            "          IP_ADDRESS:'1.2.3.4'",
            "          ACCESS_LIST:'access-list'",
            "          name = (variable",
            "            VARIABLE:'foobar')",
            "          OVERRIDE:'override'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_ip_pim",
            "      IP:'ip'",
            "      PIM:'pim'",
            "      (ip_pim_tail",
            "        (pim_rp_address",
            "          RP_ADDRESS:'rp-address'",
            "          IP_ADDRESS:'1.2.3.4'",
            "          (variable",
            "            ROUTE_MAP:'route-map')",
            "          name = (variable",
            "            VARIABLE:'foobarmap'  <== mode:M_RouteMap)",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_ip_pim",
            "      IP:'ip'",
            "      PIM:'pim'",
            "      (ip_pim_tail",
            "        (pim_null",
            "          SG_EXPIRY_TIMER:'sg-expiry-timer'",
            "          (null_rest_of_line",
            "            DEC:'180'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_ip_pim",
            "      IP:'ip'",
            "      PIM:'pim'",
            "      (ip_pim_tail",
            "        (pim_ssm",
            "          SSM:'ssm'",
            "          RANGE:'range'",
            "          name = (variable",
            "            IP_PREFIX:'232.0.0.0/8')",
            "          NEWLINE:'\\n'))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/cisco_platform" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'cisco_platform'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_null",
            "      (null_block",
            "        PLATFORM:'platform'",
            "        (null_rest_of_line",
            "          VARIABLE:'trident'",
            "          VARIABLE:'mmu'",
            "          QUEUE:'queue'",
            "          PROFILE:'profile'",
            "          VARIABLE:'StorageProfile'",
            "          NEWLINE:'\\n')",
            "        (null_inner",
            "          INGRESS:'ingress'",
            "          (null_rest_of_line",
            "            THRESHOLD:'threshold'",
            "            DEC:'1'",
            "            FORWARD_SLASH:'/'",
            "            DEC:'16'",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          EGRESS:'egress'",
            "          (null_rest_of_line",
            "            UNICAST:'unicast'",
            "            QUEUE:'queue'",
            "            DEC:'3'",
            "            THRESHOLD:'threshold'",
            "            DEC:'8'",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          EGRESS:'egress'",
            "          (null_rest_of_line",
            "            UNICAST:'unicast'",
            "            QUEUE:'queue'",
            "            DEC:'4'",
            "            THRESHOLD:'threshold'",
            "            DEC:'8'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_null",
            "      (null_block",
            "        PLATFORM:'platform'",
            "        (null_rest_of_line",
            "          VARIABLE:'trident'",
            "          VARIABLE:'mmu'",
            "          QUEUE:'queue'",
            "          PROFILE:'profile'",
            "          VARIABLE:'StorageProfile'",
            "          APPLY:'apply'",
            "          NEWLINE:'\\n'))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/cisco_privilege" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'cisco_privilege'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_privilege",
            "      PRIVILEGE:'privilege'",
            "      CLEAR:'clear'",
            "      (null_rest_of_line",
            "        LEVEL:'level'",
            "        DEC:'3'",
            "        MODE:'mode'",
            "        EXEC:'exec'",
            "        COMMAND:'command'",
            "        VARIABLE:'dns-hosts'  <== mode:M_Command",
            "        NEWLINE:'\\n'  <== mode:M_Command)))",
            "  (stanza",
            "    (s_privilege",
            "      PRIVILEGE:'privilege'",
            "      CMD:'cmd'",
            "      (null_rest_of_line",
            "        LEVEL:'level'",
            "        DEC:'5'",
            "        MODE:'mode'",
            "        EXEC:'exec'",
            "        COMMAND:'command'",
            "        VARIABLE:'export'  <== mode:M_Command",
            "        NEWLINE:'\\n'  <== mode:M_Command)))",
            "  (stanza",
            "    (s_privilege",
            "      PRIVILEGE:'privilege'",
            "      CONFIGURE:'configure'",
            "      (null_rest_of_line",
            "        LEVEL:'level'",
            "        DEC:'15'",
            "        INTERFACE:'interface'",
            "        NEWLINE:'\\n'  <== mode:M_Interface)))",
            "  (stanza",
            "    (s_privilege",
            "      PRIVILEGE:'privilege'",
            "      CONFIGURE:'configure'",
            "      (null_rest_of_line",
            "        LEVEL:'level'",
            "        DEC:'3'",
            "        ROUTER:'router'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_privilege",
            "      PRIVILEGE:'privilege'",
            "      CONFIGURE:'configure'",
            "      (null_rest_of_line",
            "        LEVEL:'level'",
            "        DEC:'3'",
            "        VARIABLE:'inter'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_privilege",
            "      PRIVILEGE:'privilege'",
            "      CONFIGURE:'configure'",
            "      (null_rest_of_line",
            "        LEVEL:'level'",
            "        DEC:'3'",
            "        HOSTNAME:'hostname'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_privilege",
            "      PRIVILEGE:'privilege'",
            "      EXEC:'exec'",
            "      (null_rest_of_line",
            "        LEVEL:'level'",
            "        DEC:'3'",
            "        SHOW:'show'",
            "        VARIABLE:'startup-config'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_privilege",
            "      PRIVILEGE:'privilege'",
            "      EXEC:'exec'",
            "      (null_rest_of_line",
            "        LEVEL:'level'",
            "        DEC:'3'",
            "        SHOW:'show'",
            "        VARIABLE:'running-config'",
            "        VIEW:'view'",
            "        VARIABLE:'full'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_privilege",
            "      PRIVILEGE:'privilege'",
            "      EXEC:'exec'",
            "      (null_rest_of_line",
            "        LEVEL:'level'",
            "        DEC:'15'",
            "        VARIABLE:'write'",
            "        MEMORY:'memory'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_privilege",
            "      PRIVILEGE:'privilege'",
            "      EXEC:'exec'",
            "      (null_rest_of_line",
            "        LEVEL:'level'",
            "        DEC:'15'",
            "        VARIABLE:'write'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_privilege",
            "      PRIVILEGE:'privilege'",
            "      EXEC:'exec'",
            "      (null_rest_of_line",
            "        LEVEL:'level'",
            "        DEC:'15'",
            "        CONFIGURE:'configure'",
            "        TERMINAL:'terminal'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_privilege",
            "      PRIVILEGE:'privilege'",
            "      EXEC:'exec'",
            "      (null_rest_of_line",
            "        LEVEL:'level'",
            "        DEC:'15'",
            "        CONFIGURE:'configure'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_privilege",
            "      PRIVILEGE:'privilege'",
            "      INTERFACE:'interface'",
            "      (null_rest_of_line",
            "        M_Interface_PREFIX:'level'  <== mode:M_Interface",
            "        DEC:'3'  <== mode:M_Interface",
            "        IP:'ip'  <== mode:M_Interface",
            "        ADDRESS:'address'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_privilege",
            "      PRIVILEGE:'privilege'",
            "      INTERFACE:'interface'",
            "      (null_rest_of_line",
            "        M_Interface_PREFIX:'level'  <== mode:M_Interface",
            "        DEC:'15'  <== mode:M_Interface",
            "        M_Interface_PREFIX:'switchport'  <== mode:M_Interface",
            "        NEWLINE:'\\n'  <== mode:M_Interface)))",
            "  (stanza",
            "    (s_privilege",
            "      PRIVILEGE:'privilege'",
            "      IPENACL:'ipenacl'",
            "      (null_rest_of_line",
            "        LEVEL:'level'",
            "        DEC:'3'",
            "        PERMIT:'permit'",
            "        IP:'ip'",
            "        ANY:'any'",
            "        ANY:'any'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_privilege",
            "      PRIVILEGE:'privilege'",
            "      ROUTER:'router'",
            "      (null_rest_of_line",
            "        LEVEL:'level'",
            "        DEC:'3'",
            "        NETWORK:'network'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_privilege",
            "      PRIVILEGE:'privilege'",
            "      SHOW:'show'",
            "      (null_rest_of_line",
            "        LEVEL:'level'",
            "        DEC:'5'",
            "        MODE:'mode'",
            "        EXEC:'exec'",
            "        COMMAND:'command'",
            "        VARIABLE:'import'  <== mode:M_Command",
            "        NEWLINE:'\\n'  <== mode:M_Command)))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/cisco_qos" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'cisco_qos'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_class_map",
            "      CLASS_MAP:'class-map'",
            "      TYPE:'type'",
            "      CONTROL:'control'",
            "      SUBSCRIBER:'subscriber'",
            "      MATCH_NONE:'match-none'",
            "      name = (variable",
            "        VARIABLE:'ABC')",
            "      NEWLINE:'\\n'",
            "      (cm_match",
            "        MATCH:'match'",
            "        (cmm_result_type",
            "          RESULT_TYPE:'result-type'",
            "          (variable",
            "            VARIABLE:'aaa-timeout')",
            "          NEWLINE:'\\n'))",
            "      (cm_match",
            "        MATCH:'match'",
            "        (cmm_authorization_status",
            "          AUTHORIZATION_STATUS:'authorization-status'",
            "          AUTHORIZED:'authorized'",
            "          NEWLINE:'\\n'))",
            "      (cm_match",
            "        MATCH:'match'",
            "        (cmm_method",
            "          METHOD:'method'",
            "          DOT1X:'dot1x'",
            "          NEWLINE:'\\n'))",
            "      (cm_match",
            "        MATCH:'match'",
            "        (cmm_activated_service_template",
            "          ACTIVATED_SERVICE_TEMPLATE:'activated-service-template'",
            "          name = (variable",
            "            VARIABLE:'DEF')",
            "          NEWLINE:'\\n'))",
            "      (cm_match",
            "        MATCH:'match'",
            "        (cmm_service_template",
            "          SERVICE_TEMPLATE:'service-template'",
            "          name = (variable",
            "            VARIABLE:'GHI')",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_class_map",
            "      CLASS_MAP:'class-map'",
            "      TYPE:'type'",
            "      NETWORK_QOS:'network-qos'",
            "      MATCH_ANY:'match-any'",
            "      name = (variable",
            "        VARIABLE:'bippety')",
            "      NEWLINE:'\\n'",
            "      DESCRIPTION:'description'",
            "      RAW_TEXT:' dum dee dum'  <== mode:M_Description",
            "      NEWLINE:'\\n'  <== mode:M_Description",
            "      (cm_match",
            "        MATCH:'match'",
            "        (cmm_cos",
            "          COS:'cos'",
            "          (range",
            "            (subrange",
            "              low = DEC:'0')",
            "            COMMA:','",
            "            (subrange",
            "              low = DEC:'5'",
            "              DASH:'-'",
            "              high = DEC:'7'))",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_class_map",
            "      CLASS_MAP:'class-map'",
            "      TYPE:'type'",
            "      NETWORK_QOS:'network-qos'",
            "      MATCH_ANY:'match-any'",
            "      name = (variable",
            "        VARIABLE:'boppety')",
            "      NEWLINE:'\\n'",
            "      (cm_match",
            "        MATCH:'match'",
            "        (cmm_cos",
            "          COS:'cos'",
            "          (range",
            "            (subrange",
            "              low = DEC:'1'",
            "              DASH:'-'",
            "              high = DEC:'2')",
            "            COMMA:','",
            "            (subrange",
            "              low = DEC:'4'))",
            "          NEWLINE:'\\n'))",
            "      (cm_match",
            "        MATCH:'match'",
            "        (cmm_protocol",
            "          PROTOCOL:'protocol'",
            "          (null_rest_of_line",
            "            FCOE:'fcoe'",
            "            MPLS:'mpls'",
            "            NEWLINE:'\\n')))",
            "      (cm_match",
            "        MATCH:'match'",
            "        (cmm_protocol",
            "          PROTOCOL:'protocol'",
            "          (null_rest_of_line",
            "            FCOE:'fcoe'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_class_map",
            "      CLASS_MAP:'class-map'",
            "      TYPE:'type'",
            "      PBR:'pbr'",
            "      MATCH_ANY:'match-any'",
            "      name = (variable",
            "        VARIABLE:'boop')",
            "      NEWLINE:'\\n'",
            "      (cm_match",
            "        num = DEC:'10'",
            "        MATCH:'match'",
            "        (cmm_access_group",
            "          IP:'ip'",
            "          ACCESS_GROUP:'access-group'",
            "          name = (variable",
            "            VARIABLE:'boop')",
            "          NEWLINE:'\\n'))",
            "      (cm_match",
            "        num = DEC:'20'",
            "        MATCH:'match'",
            "        (cmm_access_list",
            "          ACCESS_LIST:'access-list'",
            "          name = (variable",
            "            VARIABLE:'boop2')",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_class_map",
            "      CLASS_MAP:'class-map'",
            "      MATCH_ANY:'match-any'",
            "      name = (variable",
            "        VARIABLE:'cos_all')",
            "      NEWLINE:'\\n'",
            "      (cm_match",
            "        MATCH:'match'",
            "        (cmm_class_map",
            "          CLASS_MAP:'class-map'",
            "          name = (variable",
            "            VARIABLE:'blip')",
            "          NEWLINE:'\\n'))",
            "      (cm_match",
            "        MATCH:'match'",
            "        (cmm_cos",
            "          COS:'cos'",
            "          DEC:'0'",
            "          DEC:'1'",
            "          DEC:'2'",
            "          DEC:'3'",
            "          DEC:'4'",
            "          DEC:'5'",
            "          DEC:'6'",
            "          DEC:'7'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_object_group",
            "      OBJECT_GROUP:'object-group'",
            "      (og_ip_address",
            "        IP:'ip'  <== mode:M_ObjectGroup",
            "        ADDRESS:'address'",
            "        name = (variable_permissive",
            "          VARIABLE:'BIPPETY')",
            "        NEWLINE:'\\n'",
            "        (ogipa_ip_addresses",
            "          num = DEC:'10'",
            "          IP_PREFIX:'1.2.3.0/24'",
            "          NEWLINE:'\\n')",
            "        (ogipa_ip_addresses",
            "          num = DEC:'20'",
            "          IP_PREFIX:'2.3.4.0/24'",
            "          NEWLINE:'\\n')",
            "        (ogipa_ip_addresses",
            "          num = DEC:'30'",
            "          HOST:'host'",
            "          IP_ADDRESS:'3.4.5.6'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_object",
            "      OBJECT:'object'",
            "      (o_network",
            "        NETWORK:'network'",
            "        name = (variable_permissive",
            "          VARIABLE:'obj_any')",
            "        NEWLINE:'\\n'",
            "        (on_subnet",
            "          SUBNET:'subnet'",
            "          address = IP_ADDRESS:'0.0.0.0'",
            "          mask = IP_ADDRESS:'0.0.0.0'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_object_group",
            "      OBJECT_GROUP:'object-group'",
            "      (og_network",
            "        NETWORK:'network'  <== mode:M_ObjectGroup",
            "        name = (variable_permissive",
            "          IP_ADDRESS:'1.2.3.4'",
            "          DASH:'-'",
            "          DEC:'24')",
            "        NEWLINE:'\\n'",
            "        (ogn_network_object",
            "          NETWORK_OBJECT:'network-object'",
            "          wildcard_address = IP_ADDRESS:'1.2.3.4'",
            "          wildcard_mask = IP_ADDRESS:'255.255.255.0'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_object_group",
            "      OBJECT_GROUP:'object-group'",
            "      (og_network",
            "        NETWORK:'network'  <== mode:M_ObjectGroup",
            "        name = (variable_permissive",
            "          VARIABLE:'dns_servers')",
            "        NEWLINE:'\\n'",
            "        (ogn_description",
            "          (description_line",
            "            DESCRIPTION:'description'",
            "            text = RAW_TEXT:' External DNS Servers'  <== mode:M_Description",
            "            NEWLINE:'\\n'  <== mode:M_Description))",
            "        (ogn_network_object",
            "          NETWORK_OBJECT:'network-object'",
            "          HOST:'host'",
            "          address = IP_ADDRESS:'1.2.2.1'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_object_group",
            "      OBJECT_GROUP:'object-group'",
            "      (og_network",
            "        NETWORK:'network'  <== mode:M_ObjectGroup",
            "        name = (variable_permissive",
            "          VARIABLE:'ntp_servers')",
            "        NEWLINE:'\\n'",
            "        (ogn_description",
            "          (description_line",
            "            DESCRIPTION:'description'",
            "            text = RAW_TEXT:' External NTP Servers'  <== mode:M_Description",
            "            NEWLINE:'\\n'  <== mode:M_Description))",
            "        (ogn_network_object",
            "          NETWORK_OBJECT:'network-object'",
            "          HOST:'host'",
            "          address = IP_ADDRESS:'1.1.1.1'",
            "          NEWLINE:'\\n')",
            "        (ogn_network_object",
            "          NETWORK_OBJECT:'network-object'",
            "          wildcard_address = IP_ADDRESS:'1.1.1.1'",
            "          wildcard_mask = IP_ADDRESS:'255.255.255.255'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_policy_map_ios",
            "      POLICY_MAP:'policy-map'",
            "      TYPE:'type'",
            "      (pm_ios_inspect",
            "        INSPECT:'inspect'",
            "        name = (variable_permissive",
            "          VARIABLE:'pminspect')",
            "        NEWLINE:'\\n'",
            "        (pm_iosi_class_type_inspect",
            "          CLASS:'class'",
            "          TYPE:'type'",
            "          INSPECT:'inspect'",
            "          name = (variable",
            "            VARIABLE:'cinspect')",
            "          NEWLINE:'\\n'",
            "          (pm_iosict_inspect",
            "            INSPECT:'inspect'",
            "            NEWLINE:'\\n'))",
            "        (pm_iosi_class_default",
            "          CLASS:'class'",
            "          CLASS_DEFAULT:'class-default'",
            "          NEWLINE:'\\n'",
            "          (pi_iosicd_drop",
            "            DROP:'drop'",
            "            LOG:'log'",
            "            NEWLINE:'\\n')",
            "          (pi_iosicd_pass",
            "            PASS:'pass'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_policy_map",
            "      POLICY_MAP:'policy-map'",
            "      TYPE:'type'",
            "      NETWORK_QOS:'network-qos'",
            "      mapname = (variable",
            "        VARIABLE:'default-ploosh-policy')",
            "      NEWLINE:'\\n'",
            "      (pm_null",
            "        DESCRIPTION:'description'",
            "        (null_rest_of_line",
            "          RAW_TEXT:' gawff'  <== mode:M_Description",
            "          NEWLINE:'\\n'  <== mode:M_Description))",
            "      (pm_class",
            "        CLASS:'class'",
            "        TYPE:'type'",
            "        NETWORK_QOS:'network-qos'",
            "        name = (variable_permissive",
            "          VARIABLE:'bippetyboo-drop')",
            "        NEWLINE:'\\n'",
            "        (pmc_null",
            "          BANDWIDTH:'bandwidth'",
            "          (null_rest_of_line",
            "            VARIABLE:'remaining'",
            "            PERCENT_LITERAL:'percent'",
            "            DEC:'10'",
            "            NEWLINE:'\\n'))",
            "        (pmc_null",
            "          QUEUE_LIMIT:'queue-limit'",
            "          (null_rest_of_line",
            "            DSCP:'dscp'",
            "            CS2:'cs2'",
            "            PERCENT_LITERAL:'percent'",
            "            DEC:'80'",
            "            NEWLINE:'\\n'))",
            "        (pmc_null",
            "          QUEUE_LIMIT:'queue-limit'",
            "          (null_rest_of_line",
            "            DSCP:'dscp'",
            "            CS3:'cs3'",
            "            PERCENT_LITERAL:'percent'",
            "            DEC:'90'",
            "            NEWLINE:'\\n'))",
            "        (pmc_null",
            "          QUEUE_LIMIT:'queue-limit'",
            "          (null_rest_of_line",
            "            DSCP:'dscp'",
            "            CS6:'cs6'",
            "            PERCENT_LITERAL:'percent'",
            "            DEC:'100'",
            "            NEWLINE:'\\n'))",
            "        (pmc_null",
            "          QUEUE_LIMIT:'queue-limit'",
            "          (null_rest_of_line",
            "            DSCP:'dscp'",
            "            CS7:'cs7'",
            "            PERCENT_LITERAL:'percent'",
            "            DEC:'100'",
            "            NEWLINE:'\\n'))",
            "        (pmc_null",
            "          QUEUE_BUFFERS:'queue-buffers'",
            "          (null_rest_of_line",
            "            VARIABLE:'ratio'",
            "            DEC:'10'",
            "            NEWLINE:'\\n'))",
            "        (pmc_null",
            "          NO:'no'",
            "          PAUSE:'pause'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n'))",
            "        (pmc_null",
            "          CONGESTION_CONTROL:'congestion-control'",
            "          (null_rest_of_line",
            "            VARIABLE:'tail-drop'",
            "            NEWLINE:'\\n'))",
            "        (pmc_null",
            "          NO:'no'",
            "          CONGESTION_CONTROL:'congestion-control'",
            "          (null_rest_of_line",
            "            RANDOM_DETECT:'random-detect'",
            "            NEWLINE:'\\n'))",
            "        (pmc_null",
            "          SHAPE:'shape'",
            "          (null_rest_of_line",
            "            KBPS:'kbps'",
            "            DEC:'5000000'",
            "            NEWLINE:'\\n'))",
            "        (pmc_null",
            "          MTU:'mtu'",
            "          (null_rest_of_line",
            "            DEC:'1500'",
            "            NEWLINE:'\\n')))",
            "      (pm_class",
            "        CLASS:'class'",
            "        TYPE:'type'",
            "        NETWORK_QOS:'network-qos'",
            "        name = (variable_permissive",
            "          VARIABLE:'bippetyboo-ndrop-fcoe')",
            "        NEWLINE:'\\n'",
            "        (pmc_null",
            "          PAUSE:'pause'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n'))",
            "        (pmc_null",
            "          NO:'no'",
            "          CONGESTION_CONTROL:'congestion-control'",
            "          (null_rest_of_line",
            "            RANDOM_DETECT:'random-detect'",
            "            NEWLINE:'\\n'))",
            "        (pmc_null",
            "          MTU:'mtu'",
            "          (null_rest_of_line",
            "            DEC:'2112'",
            "            NEWLINE:'\\n')))",
            "      (pm_class",
            "        CLASS:'class'",
            "        TYPE:'type'",
            "        NETWORK_QOS:'network-qos'",
            "        name = (variable_permissive",
            "          VARIABLE:'bippetyboo-ndrop')",
            "        NEWLINE:'\\n'",
            "        (pmc_null",
            "          PAUSE:'pause'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n'))",
            "        (pmc_null",
            "          NO:'no'",
            "          CONGESTION_CONTROL:'congestion-control'",
            "          (null_rest_of_line",
            "            RANDOM_DETECT:'random-detect'",
            "            NEWLINE:'\\n'))",
            "        (pmc_null",
            "          MTU:'mtu'",
            "          (null_rest_of_line",
            "            DEC:'2112'",
            "            NEWLINE:'\\n')))",
            "      (pm_end_policy_map",
            "        END_POLICY_MAP:'end-policy-map'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_policy_map",
            "      POLICY_MAP:'policy-map'",
            "      TYPE:'type'",
            "      CONTROL_PLANE:'control-plane'",
            "      mapname = (variable",
            "        VARIABLE:'feefoo')",
            "      NEWLINE:'\\n'",
            "      (pm_class",
            "        CLASS:'class'",
            "        name = (variable_permissive",
            "          VARIABLE:'fffoooddd')",
            "        NEWLINE:'\\n'",
            "        (pmc_null",
            "          SET:'set'",
            "          (null_rest_of_line",
            "            COS:'cos'",
            "            DEC:'7'",
            "            NEWLINE:'\\n'))",
            "        (pmc_service_policy",
            "          SERVICE_POLICY:'service-policy'",
            "          name = (variable",
            "            VARIABLE:'prioritize_backbone')",
            "          NEWLINE:'\\n')",
            "        (pmc_null",
            "          TRUST:'trust'",
            "          (null_rest_of_line",
            "            DSCP:'dscp'",
            "            NEWLINE:'\\n'))",
            "        (pmc_police",
            "          POLICE:'police'",
            "          (null_rest_of_line",
            "            CIR:'cir'",
            "            DEC:'36000'",
            "            KBPS:'kbps'",
            "            VARIABLE:'bc'",
            "            DEC:'250'",
            "            VARIABLE:'ms'",
            "            VARIABLE:'conform'",
            "            TRANSMIT:'transmit'",
            "            VARIABLE:'violate'",
            "            DROP:'drop'",
            "            NEWLINE:'\\n')",
            "          (pmcp_null",
            "            CONFORM_ACTION:'conform-action'",
            "            (null_rest_of_line",
            "              TRANSMIT:'transmit'",
            "              NEWLINE:'\\n'))",
            "          (pmcp_null",
            "            EXCEED_ACTION:'exceed-action'",
            "            (null_rest_of_line",
            "              VARIABLE:'set-dscp-transmit'",
            "              DSCP:'dscp'",
            "              VARIABLE:'table'",
            "              VARIABLE:'policed-dscp'",
            "              NEWLINE:'\\n'))",
            "          (pmcp_null",
            "            VIOLATE_ACTION:'violate-action'",
            "            (null_rest_of_line",
            "              DROP:'drop'",
            "              NEWLINE:'\\n'))))))",
            "  (stanza",
            "    (s_policy_map",
            "      POLICY_MAP:'policy-map'",
            "      TYPE:'type'",
            "      NETWORK_QOS:'network-qos'",
            "      mapname = (variable",
            "        VARIABLE:'default-foob-policy')",
            "      NEWLINE:'\\n'",
            "      (pm_class",
            "        CLASS:'class'",
            "        TYPE:'type'",
            "        NETWORK_QOS:'network-qos'",
            "        name = (variable_permissive",
            "          VARIABLE:'c-foob-drop')",
            "        NEWLINE:'\\n'",
            "        (pmc_null",
            "          RANDOM_DETECT:'random-detect'",
            "          (null_rest_of_line",
            "            AGGREGATE:'aggregate'",
            "            VARIABLE:'minimum-thresh'",
            "            DEC:'1024'",
            "            VARIABLE:'maximum-thresh'",
            "            DEC:'2048'",
            "            VARIABLE:'mark-prob'",
            "            DEC:'10'",
            "            NEWLINE:'\\n'))",
            "        (pmc_null",
            "          FAIR_QUEUE:'fair-queue'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n'))",
            "        (pmc_null",
            "          RANDOM_DETECT:'random-detect'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n'))",
            "        (pmc_null",
            "          NO:'no'",
            "          PAUSE:'pause'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n'))",
            "        (pmc_null",
            "          CONGESTION_CONTROL:'congestion-control'",
            "          (null_rest_of_line",
            "            VARIABLE:'tail-drop'",
            "            NEWLINE:'\\n'))",
            "        (pmc_null",
            "          NO:'no'",
            "          CONGESTION_CONTROL:'congestion-control'",
            "          (null_rest_of_line",
            "            RANDOM_DETECT:'random-detect'",
            "            NEWLINE:'\\n'))",
            "        (pmc_null",
            "          MTU:'mtu'",
            "          (null_rest_of_line",
            "            DEC:'1500'",
            "            NEWLINE:'\\n')))",
            "      (pm_class",
            "        CLASS:'class'",
            "        TYPE:'type'",
            "        NETWORK_QOS:'network-qos'",
            "        name = (variable_permissive",
            "          VARIABLE:'c-foob-ndrop-fcoe')",
            "        NEWLINE:'\\n'",
            "        (pmc_null",
            "          PAUSE:'pause'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n'))",
            "        (pmc_null",
            "          NO:'no'",
            "          CONGESTION_CONTROL:'congestion-control'",
            "          (null_rest_of_line",
            "            RANDOM_DETECT:'random-detect'",
            "            NEWLINE:'\\n'))",
            "        (pmc_null",
            "          MTU:'mtu'",
            "          (null_rest_of_line",
            "            DEC:'2112'",
            "            NEWLINE:'\\n')))",
            "      (pm_class",
            "        CLASS:'class'",
            "        TYPE:'type'",
            "        NETWORK_QOS:'network-qos'",
            "        name = (variable_permissive",
            "          VARIABLE:'c-foob-ndrop')",
            "        NEWLINE:'\\n'",
            "        (pmc_null",
            "          PAUSE:'pause'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n'))",
            "        (pmc_null",
            "          NO:'no'",
            "          CONGESTION_CONTROL:'congestion-control'",
            "          (null_rest_of_line",
            "            RANDOM_DETECT:'random-detect'",
            "            NEWLINE:'\\n'))",
            "        (pmc_null",
            "          MTU:'mtu'",
            "          (null_rest_of_line",
            "            DEC:'2112'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_policy_map",
            "      POLICY_MAP:'policy-map'",
            "      TYPE:'type'",
            "      PBR:'pbr'",
            "      mapname = (variable",
            "        VARIABLE:'blorf')",
            "      NEWLINE:'\\n'",
            "      (pm_class",
            "        num = DEC:'10'",
            "        CLASS:'class'",
            "        name = (variable_permissive",
            "          VARIABLE:'blerf')",
            "        NEWLINE:'\\n'",
            "        (pmc_null",
            "          SET:'set'",
            "          (null_rest_of_line",
            "            NEXTHOP:'nexthop'",
            "            IP_ADDRESS:'1.2.3.4'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_policy_map",
            "      POLICY_MAP:'policy-map'",
            "      TYPE:'type'",
            "      QUEUEING:'queueing'",
            "      mapname = (variable",
            "        VARIABLE:'qqqqq')",
            "      NEWLINE:'\\n'",
            "      (pm_class",
            "        CLASS:'class'",
            "        TYPE:'type'",
            "        QUEUING:'queuing'",
            "        name = (variable_permissive",
            "          VARIABLE:'bleefee')",
            "        NEWLINE:'\\n'",
            "        (pmc_null",
            "          PRIORITY:'priority'",
            "          (null_rest_of_line",
            "            LEVEL:'level'",
            "            DEC:'1'",
            "            NEWLINE:'\\n'))",
            "        (pmc_null",
            "          BANDWIDTH:'bandwidth'",
            "          (null_rest_of_line",
            "            VARIABLE:'remaining'",
            "            PERCENT_LITERAL:'percent'",
            "            DEC:'14'",
            "            NEWLINE:'\\n'))",
            "        (pmc_null",
            "          DBL:'dbl'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_policy_map",
            "      POLICY_MAP:'policy-map'",
            "      TYPE:'type'",
            "      QUEUING:'queuing'",
            "      mapname = (variable",
            "        VARIABLE:'qqqqq2')",
            "      NEWLINE:'\\n'",
            "      (pm_class",
            "        CLASS:'class'",
            "        TYPE:'type'",
            "        QUEUING:'queuing'",
            "        name = (variable_permissive",
            "          VARIABLE:'bleefee2')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_policy_map",
            "      POLICY_MAP:'policy-map'",
            "      TYPE:'type'",
            "      NETWORK_QOS:'network-qos'",
            "      mapname = (variable",
            "        VARIABLE:'default-bleeb-policy')",
            "      NEWLINE:'\\n'",
            "      (pm_class",
            "        CLASS:'class'",
            "        TYPE:'type'",
            "        NETWORK_QOS:'network-qos'",
            "        name = (variable_permissive",
            "          VARIABLE:'c-bleeb-drop')",
            "        NEWLINE:'\\n'",
            "        (pmc_null",
            "          NO:'no'",
            "          PAUSE:'pause'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n'))",
            "        (pmc_null",
            "          CONGESTION_CONTROL:'congestion-control'",
            "          (null_rest_of_line",
            "            VARIABLE:'tail-drop'",
            "            NEWLINE:'\\n'))",
            "        (pmc_null",
            "          NO:'no'",
            "          CONGESTION_CONTROL:'congestion-control'",
            "          (null_rest_of_line",
            "            RANDOM_DETECT:'random-detect'",
            "            NEWLINE:'\\n'))",
            "        (pmc_null",
            "          MTU:'mtu'",
            "          (null_rest_of_line",
            "            DEC:'1500'",
            "            NEWLINE:'\\n')))",
            "      (pm_class",
            "        CLASS:'class'",
            "        TYPE:'type'",
            "        NETWORK_QOS:'network-qos'",
            "        name = (variable_permissive",
            "          VARIABLE:'c-bleeb-ndrop-fcoe')",
            "        NEWLINE:'\\n'",
            "        (pmc_null",
            "          PAUSE:'pause'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n'))",
            "        (pmc_null",
            "          NO:'no'",
            "          CONGESTION_CONTROL:'congestion-control'",
            "          (null_rest_of_line",
            "            RANDOM_DETECT:'random-detect'",
            "            NEWLINE:'\\n'))",
            "        (pmc_null",
            "          MTU:'mtu'",
            "          (null_rest_of_line",
            "            DEC:'2112'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_policy_map",
            "      POLICY_MAP:'policy-map'",
            "      TYPE:'type'",
            "      NETWORK_QOS:'network-qos'",
            "      mapname = (variable",
            "        VARIABLE:'default-fleep-policy')",
            "      NEWLINE:'\\n'",
            "      (pm_class",
            "        CLASS:'class'",
            "        TYPE:'type'",
            "        NETWORK_QOS:'network-qos'",
            "        name = (variable_permissive",
            "          VARIABLE:'floop')",
            "        NEWLINE:'\\n'",
            "        (pmc_null",
            "          NO:'no'",
            "          PAUSE:'pause'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n'))",
            "        (pmc_null",
            "          CONGESTION_CONTROL:'congestion-control'",
            "          (null_rest_of_line",
            "            VARIABLE:'tail-drop'",
            "            NEWLINE:'\\n'))",
            "        (pmc_null",
            "          NO:'no'",
            "          CONGESTION_CONTROL:'congestion-control'",
            "          (null_rest_of_line",
            "            RANDOM_DETECT:'random-detect'",
            "            NEWLINE:'\\n'))",
            "        (pmc_null",
            "          MTU:'mtu'",
            "          (null_rest_of_line",
            "            DEC:'1500'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_policy_map",
            "      POLICY_MAP:'policy-map'",
            "      TYPE:'type'",
            "      (variable",
            "        CONTROL:'control')",
            "      (variable",
            "        SUBSCRIBER:'subscriber')",
            "      (variable",
            "        VARIABLE:'my-bogus-policy')",
            "      NEWLINE:'\\n'",
            "      (pm_event",
            "        EVENT:'event'",
            "        (null_rest_of_line",
            "          VARIABLE:'session-started'",
            "          MATCH_ALL:'match-all'",
            "          NEWLINE:'\\n')",
            "        (pm_event_class",
            "          DEC:'10'",
            "          CLASS:'class'",
            "          ALWAYS:'always'",
            "          DO_UNTIL_FAILURE:'do-until-failure'",
            "          NEWLINE:'\\n'",
            "          DEC:'20'",
            "          AUTHENTICATE:'authenticate'",
            "          (null_rest_of_line",
            "            VARIABLE:'using'",
            "            DOT1X:'dot1x'",
            "            PRIORITY:'priority'",
            "            DEC:'10'",
            "            NEWLINE:'\\n')))",
            "      (pm_event",
            "        EVENT:'event'",
            "        (null_rest_of_line",
            "          VARIABLE:'authentication-failure'",
            "          VARIABLE:'match-first'",
            "          NEWLINE:'\\n')",
            "        (pm_event_class",
            "          DEC:'5'",
            "          CLASS:'class'",
            "          classname = (variable",
            "            VARIABLE:'MY_CLASS_1')",
            "          DO_UNTIL_FAILURE:'do-until-failure'",
            "          NEWLINE:'\\n'",
            "          DEC:'10'",
            "          ACTIVATE:'activate'",
            "          SERVICE_TEMPLATE:'service-template'",
            "          stname = (variable",
            "            VARIABLE:'my_TEMPLATE_NAME')",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n'))",
            "        (pm_event_class",
            "          DEC:'10'",
            "          CLASS:'class'",
            "          classname = (variable",
            "            VARIABLE:'MY_CLASS_2')",
            "          DO_UNTIL_FAILURE:'do-until-failure'",
            "          NEWLINE:'\\n'",
            "          DEC:'10'",
            "          PAUSE:'pause'",
            "          (null_rest_of_line",
            "            REAUTHENTICATION:'reauthentication'",
            "            NEWLINE:'\\n')",
            "          DEC:'20'",
            "          AUTHORIZE:'authorize'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n')",
            "          DEC:'30'",
            "          TERMINATE:'terminate'",
            "          (null_rest_of_line",
            "            DOT1X:'dot1x'",
            "            NEWLINE:'\\n')",
            "          DEC:'40'",
            "          AUTHENTICATE:'authenticate'",
            "          (null_rest_of_line",
            "            VARIABLE:'using'",
            "            MAB:'mab'",
            "            PRIORITY:'priority'",
            "            DEC:'10'",
            "            NEWLINE:'\\n')",
            "          DEC:'50'",
            "          AUTHENTICATION_RESTART:'authentication-restart'",
            "          (null_rest_of_line",
            "            DEC:'60'",
            "            NEWLINE:'\\n')",
            "          DEC:'60'",
            "          TERMINATE:'terminate'",
            "          (null_rest_of_line",
            "            MAB:'mab'",
            "            NEWLINE:'\\n')",
            "          DEC:'70'",
            "          AUTHENTICATION_RESTART:'authentication-restart'",
            "          (null_rest_of_line",
            "            DEC:'60'",
            "            NEWLINE:'\\n')",
            "          DEC:'80'",
            "          CLEAR_SESSION:'clear-session'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n')",
            "          DEC:'90'",
            "          RESUME:'resume'",
            "          (null_rest_of_line",
            "            REAUTHENTICATION:'reauthentication'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_service_template",
            "      SERVICE_TEMPLATE:'service-template'",
            "      name = (variable",
            "        VARIABLE:'template_name')",
            "      NEWLINE:'\\n'",
            "      (st_access_group",
            "        ACCESS_GROUP:'access-group'",
            "        name = (variable",
            "          VARIABLE:'ACL_NAME')",
            "        NEWLINE:'\\n')",
            "      (st_description",
            "        DESCRIPTION:'description'",
            "        (null_rest_of_line",
            "          RAW_TEXT:' Service template for Fail open mode'  <== mode:M_Description",
            "          NEWLINE:'\\n'  <== mode:M_Description))",
            "      (st_inactivity_timer",
            "        INACTIVITY_TIMER:'inactivity-timer'",
            "        DEC:'3600'",
            "        NEWLINE:'\\n')",
            "      (st_linksec",
            "        LINKSEC:'linksec'",
            "        POLICY:'policy'",
            "        MUST_SECURE:'must-secure'",
            "        NEWLINE:'\\n')",
            "      (st_linksec",
            "        LINKSEC:'linksec'",
            "        POLICY:'policy'",
            "        SHOULD_SECURE:'should-secure'",
            "        NEWLINE:'\\n')",
            "      (st_vlan",
            "        VLAN:'vlan'",
            "        DEC:'313'",
            "        NEWLINE:'\\n')",
            "      (st_voice_vlan",
            "        VOICE:'voice'",
            "        VLAN:'vlan'",
            "        NEWLINE:'\\n')",
            "      (st_tag",
            "        TAG:'tag'",
            "        name = (variable",
            "          VARIABLE:'USER_DEFINED_TAG')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_table_map",
            "      TABLE_MAP:'table-map'",
            "      name = (variable",
            "        VARIABLE:'tablemap1')",
            "      NEWLINE:'\\n'",
            "      (table_map_null",
            "        DEFAULT:'default'",
            "        (null_rest_of_line",
            "          COPY:'copy'",
            "          NEWLINE:'\\n'))",
            "      (table_map_null",
            "        FROM:'from'",
            "        (null_rest_of_line",
            "          DEC:'10'",
            "          COMMA:','",
            "          DEC:'12'",
            "          VARIABLE:'to'",
            "          DEC:'14'",
            "          NEWLINE:'\\n'))",
            "      (table_map_null",
            "        MAP:'map'",
            "        (null_rest_of_line",
            "          FROM:'from'",
            "          DEC:'0'",
            "          VARIABLE:'to'",
            "          DEC:'8'",
            "          NEWLINE:'\\n'))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/cisco_queue_monitor" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'cisco_queue_monitor'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_queue_monitor",
            "      QUEUE_MONITOR:'queue-monitor'",
            "      (qm_length",
            "        LENGTH:'length'",
            "        (null_rest_of_line",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_queue_monitor",
            "      QUEUE_MONITOR:'queue-monitor'",
            "      (qm_length",
            "        LENGTH:'length'",
            "        (null_rest_of_line",
            "          VARIABLE:'global-buffer'",
            "          VARIABLE:'thresholds'",
            "          DEC:'16384'",
            "          DEC:'512'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_queue_monitor",
            "      QUEUE_MONITOR:'queue-monitor'",
            "      (qm_length",
            "        LENGTH:'length'",
            "        (null_rest_of_line",
            "          VARIABLE:'global-buffer'",
            "          LOG:'log'",
            "          DEC:'60'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_queue_monitor",
            "      QUEUE_MONITOR:'queue-monitor'",
            "      (qm_length",
            "        LENGTH:'length'",
            "        (null_rest_of_line",
            "          LOG:'log'",
            "          DEC:'60'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_queue_monitor",
            "      QUEUE_MONITOR:'queue-monitor'",
            "      (qm_length",
            "        LENGTH:'length'",
            "        (null_rest_of_line",
            "          VARIABLE:'update-interval'",
            "          DEC:'5000000'",
            "          NEWLINE:'\\n'))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/cisco_redundancy" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'cisco_redundancy'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_redundancy",
            "      REDUNDANCY:'redundancy'",
            "      (null_rest_of_line",
            "        VARIABLE:'inter-device'",
            "        NEWLINE:'\\n')",
            "      (redundancy_null",
            "        SCHEME:'scheme'",
            "        (null_rest_of_line",
            "          STANDBY:'standby'",
            "          VARIABLE:'HSRP'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_redundancy",
            "      REDUNDANCY:'redundancy'",
            "      (null_rest_of_line",
            "        NEWLINE:'\\n')",
            "      (redundancy_null",
            "        KEEPALIVE_ENABLE:'keepalive-enable'",
            "        (null_rest_of_line",
            "          NEWLINE:'\\n'))",
            "      (redundancy_linecard_group",
            "        LINECARD_GROUP:'linecard-group'",
            "        (null_rest_of_line",
            "          DEC:'1'",
            "          CABLE:'cable'",
            "          NEWLINE:'\\n')",
            "        (rlcg_null",
            "          MEMBER:'member'",
            "          (null_rest_of_line",
            "            VARIABLE:'subslot'",
            "            DEC:'3'",
            "            FORWARD_SLASH:'/'",
            "            DEC:'4'",
            "            PROTECT:'protect'",
            "            NEWLINE:'\\n'))",
            "        (rlcg_null",
            "          NO:'no'",
            "          MEMBER:'member'",
            "          (null_rest_of_line",
            "            VARIABLE:'subslot'",
            "            DEC:'6'",
            "            FORWARD_SLASH:'/'",
            "            DEC:'7'",
            "            PROTECT:'protect'",
            "            CONFIG:'config'",
            "            NEWLINE:'\\n'))",
            "        (rlcg_null",
            "          MEMBER:'member'",
            "          (null_rest_of_line",
            "            VARIABLE:'subslot'",
            "            DEC:'1'",
            "            FORWARD_SLASH:'/'",
            "            DEC:'2'",
            "            VARIABLE:'working'",
            "            NEWLINE:'\\n'))",
            "        (rlcg_null",
            "          MODE:'mode'",
            "          (null_rest_of_line",
            "            VARIABLE:'sso'",
            "            NEWLINE:'\\n'))",
            "        (rlcg_null",
            "          NO:'no'",
            "          REVERTIVE:'revertive'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n'))",
            "        (rlcg_null",
            "          RF_SWITCH:'rf-switch'",
            "          (null_rest_of_line",
            "            VARIABLE:'snmp-community'",
            "            VARIABLE:'abcdefg'",
            "            NEWLINE:'\\n')))",
            "      (redundancy_main_cpu",
            "        MAIN_CPU:'main-cpu'",
            "        (null_rest_of_line",
            "          NEWLINE:'\\n')",
            "        (redundancy_main_cpu_null",
            "          AUTO_SYNC:'auto-sync'",
            "          (null_rest_of_line",
            "            VARIABLE:'running-config'",
            "            NEWLINE:'\\n')))",
            "      (redundancy_null",
            "        MODE:'mode'",
            "        (null_rest_of_line",
            "          VARIABLE:'sso'",
            "          NEWLINE:'\\n'))",
            "      (redundancy_null",
            "        NOTIFICATION_TIMER:'notification-timer'",
            "        (null_rest_of_line",
            "          DEC:'60000'",
            "          NEWLINE:'\\n'))",
            "      (redundancy_null",
            "        PROTOCOL:'protocol'",
            "        (null_rest_of_line",
            "          NEWLINE:'\\n'))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/cisco_rip" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'cisco_rip'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_router_rip",
            "      ROUTER:'router'",
            "      RIP:'rip'",
            "      NEWLINE:'\\n'",
            "      (rr_null",
            "        NO:'no'",
            "        AUTO_SUMMARY:'auto-summary'",
            "        (null_rest_of_line",
            "          NEWLINE:'\\n'))",
            "      (rr_default_information",
            "        DEFAULT_INFORMATION:'default-information'",
            "        ORIGINATE:'originate'",
            "        NEWLINE:'\\n')",
            "      (rr_default_information",
            "        DEFAULT_INFORMATION:'default-information'",
            "        ORIGINATE:'originate'",
            "        ON_PASSIVE:'on-passive'",
            "        NEWLINE:'\\n')",
            "      (rr_default_information",
            "        DEFAULT_INFORMATION:'default-information'",
            "        ORIGINATE:'originate'",
            "        ROUTE_MAP:'route-map'",
            "        map = (variable",
            "          VARIABLE:'mapName'  <== mode:M_RouteMap)",
            "        NEWLINE:'\\n')",
            "      (rr_default_metric",
            "        DEFAULT_METRIC:'default-metric'",
            "        metric = DEC:'1'",
            "        NEWLINE:'\\n')",
            "      (rr_distribute_list",
            "        DISTRIBUTE_LIST:'distribute-list'",
            "        acl = (variable",
            "          VARIABLE:'some-ACL')",
            "        IN:'in'",
            "        NEWLINE:'\\n')",
            "      (rr_distribute_list",
            "        DISTRIBUTE_LIST:'distribute-list'",
            "        acl = (variable",
            "          VARIABLE:'some-ACL')",
            "        IN:'in'",
            "        i = (interface_name",
            "          VARIABLE:'Ethernet0')",
            "        NEWLINE:'\\n')",
            "      (rr_distribute_list",
            "        DISTRIBUTE_LIST:'distribute-list'",
            "        acl = (variable",
            "          VARIABLE:'some-ACL')",
            "        OUT:'out'",
            "        NEWLINE:'\\n')",
            "      (rr_distribute_list",
            "        DISTRIBUTE_LIST:'distribute-list'",
            "        acl = (variable",
            "          VARIABLE:'some-ACL')",
            "        OUT:'out'",
            "        i = (interface_name",
            "          VARIABLE:'Ethernet0')",
            "        NEWLINE:'\\n')",
            "      (rr_network",
            "        NETWORK:'network'",
            "        network = IP_ADDRESS:'1.2.3.0'",
            "        NEWLINE:'\\n')",
            "      (rr_passive_interface",
            "        PASSIVE_INTERFACE:'passive-interface'",
            "        iname = (interface_name",
            "          (variable_interface_name",
            "            DEFAULT:'default'  <== mode:M_Interface))",
            "        NEWLINE:'\\n')",
            "      (rr_passive_interface",
            "        NO:'no'",
            "        PASSIVE_INTERFACE:'passive-interface'",
            "        iname = (interface_name",
            "          name_prefix_alpha = M_Interface_PREFIX:'Bundle'  <== mode:M_Interface",
            "          DEC:'1'  <== mode:M_Interface",
            "          PERIOD:'.'  <== mode:M_Interface",
            "          (range",
            "            (subrange",
            "              low = DEC:'23'  <== mode:M_Interface)))",
            "        NEWLINE:'\\n'  <== mode:M_Interface)",
            "      (rr_null",
            "        TIMERS:'timers'",
            "        (null_rest_of_line",
            "          VARIABLE:'basic'",
            "          DEC:'10'",
            "          DEC:'20'",
            "          DEC:'30'",
            "          DEC:'40'",
            "          NEWLINE:'\\n'))",
            "      (rr_null",
            "        VERSION:'version'",
            "        (null_rest_of_line",
            "          DEC:'2'",
            "          NEWLINE:'\\n'))",
            "      (rr_distance",
            "        DISTANCE:'distance'",
            "        distance = DEC:'12'",
            "        NEWLINE:'\\n')",
            "      (rr_distance",
            "        DISTANCE:'distance'",
            "        distance = DEC:'123'",
            "        prefix = IP_ADDRESS:'1.1.1.1'",
            "        mask = IP_ADDRESS:'0.0.0.0'",
            "        NEWLINE:'\\n')))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/cisco_role" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'cisco_role'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_role",
            "      ROLE:'role'",
            "      (null_rest_of_line",
            "        NAME:'name'",
            "        VARIABLE:'default-role'  <== mode:M_Name",
            "        NEWLINE:'\\n')",
            "      (role_null",
            "        DESCRIPTION:'description'",
            "        (null_rest_of_line",
            "          RAW_TEXT:' bbbb'  <== mode:M_Description",
            "          NEWLINE:'\\n'  <== mode:M_Description))",
            "      (role_null",
            "        RULE:'rule'",
            "        (null_rest_of_line",
            "          DEC:'5'",
            "          PERMIT:'permit'",
            "          COMMAND:'command'",
            "          VARIABLE:'show'  <== mode:M_Command",
            "          VARIABLE:'feature'  <== mode:M_Command",
            "          VARIABLE:'environment'  <== mode:M_Command",
            "          NEWLINE:'\\n'  <== mode:M_Command))",
            "      (role_null",
            "        RULE:'rule'",
            "        (null_rest_of_line",
            "          DEC:'4'",
            "          PERMIT:'permit'",
            "          COMMAND:'command'",
            "          VARIABLE:'show'  <== mode:M_Command",
            "          VARIABLE:'feature'  <== mode:M_Command",
            "          VARIABLE:'hardware'  <== mode:M_Command",
            "          NEWLINE:'\\n'  <== mode:M_Command))))",
            "  (stanza",
            "    (s_role",
            "      ROLE:'role'",
            "      (null_rest_of_line",
            "        NAME:'name'",
            "        VARIABLE:'tier1-ro'  <== mode:M_Name",
            "        NEWLINE:'\\n')",
            "      (role_null",
            "        RULE:'rule'",
            "        (null_rest_of_line",
            "          DEC:'2'",
            "          PERMIT:'permit'",
            "          COMMAND:'command'",
            "          VARIABLE:'ping'  <== mode:M_Command",
            "          VARIABLE:'*'  <== mode:M_Command",
            "          NEWLINE:'\\n'  <== mode:M_Command))",
            "      (role_null",
            "        RULE:'rule'",
            "        (null_rest_of_line",
            "          DEC:'1'",
            "          PERMIT:'permit'",
            "          VARIABLE:'read'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_role",
            "      ROLE:'role'",
            "      (null_rest_of_line",
            "        NAME:'name'",
            "        VARIABLE:'tier1-rw'  <== mode:M_Name",
            "        NEWLINE:'\\n')",
            "      (role_null",
            "        RULE:'rule'",
            "        (null_rest_of_line",
            "          DEC:'2'",
            "          PERMIT:'permit'",
            "          COMMAND:'command'",
            "          VARIABLE:'ping'  <== mode:M_Command",
            "          VARIABLE:'*'  <== mode:M_Command",
            "          NEWLINE:'\\n'  <== mode:M_Command))",
            "      (role_null",
            "        RULE:'rule'",
            "        (null_rest_of_line",
            "          DEC:'1'",
            "          PERMIT:'permit'",
            "          VARIABLE:'read'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        END:'end'",
            "        NEWLINE:'\\n')))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/cisco_route_map" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'cisco_route_map'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (ip_as_path_access_list_stanza",
            "      IP:'ip'",
            "      AS_PATH:'as-path'",
            "      ACCESS_LIST:'access-list'  <== mode:M_AsPath",
            "      name = (variable",
            "        VARIABLE:'AS_PATH_ACL1'  <== mode:M_AsPathAccessList)",
            "      (ip_as_path_access_list_tail",
            "        action = (access_list_action",
            "          DENY:'deny'  <== mode:M_AsPathAccessList)",
            "        as_path_regex = RAW_TEXT:' ^65535$'  <== mode:M_Description",
            "        NEWLINE:'\\n'  <== mode:M_Description)))",
            "  (stanza",
            "    (ip_as_path_access_list_stanza",
            "      IP:'ip'",
            "      AS_PATH:'as-path'",
            "      ACCESS_LIST:'access-list'  <== mode:M_AsPath",
            "      name = (variable",
            "        VARIABLE:'AS_PATH_ACL1'  <== mode:M_AsPathAccessList)",
            "      (ip_as_path_access_list_tail",
            "        action = (access_list_action",
            "          DENY:'deny'  <== mode:M_AsPathAccessList)",
            "        as_path_regex = RAW_TEXT:' _65535_'  <== mode:M_Description",
            "        NEWLINE:'\\n'  <== mode:M_Description)))",
            "  (stanza",
            "    (ip_as_path_access_list_stanza",
            "      IP:'ip'",
            "      AS_PATH:'as-path'",
            "      ACCESS_LIST:'access-list'  <== mode:M_AsPath",
            "      name = (variable",
            "        VARIABLE:'AS_PATH_ACL2'  <== mode:M_AsPathAccessList)",
            "      (ip_as_path_access_list_tail",
            "        action = (access_list_action",
            "          PERMIT:'permit'  <== mode:M_AsPathAccessList)",
            "        as_path_regex = RAW_TEXT:' ^65536$'  <== mode:M_Description",
            "        NEWLINE:'\\n'  <== mode:M_Description)))",
            "  (stanza",
            "    (ip_as_path_access_list_stanza",
            "      IP:'ip'",
            "      AS_PATH:'as-path'",
            "      ACCESS_LIST:'access-list'  <== mode:M_AsPath",
            "      name = (variable",
            "        VARIABLE:'AS_PATH_ACL_UNUSED'  <== mode:M_AsPathAccessList)",
            "      (ip_as_path_access_list_tail",
            "        action = (access_list_action",
            "          PERMIT:'permit'  <== mode:M_AsPathAccessList)",
            "        as_path_regex = RAW_TEXT:' ^4000$'  <== mode:M_Description",
            "        NEWLINE:'\\n'  <== mode:M_Description)))",
            "  (stanza",
            "    (route_map_stanza",
            "      ROUTE_MAP:'route-map'",
            "      name = (variable",
            "        VARIABLE:'connected-to-bgp'  <== mode:M_RouteMap)",
            "      rmt = (access_list_action",
            "        PERMIT:'permit')",
            "      num = DEC:'10'",
            "      NEWLINE:'\\n'",
            "      (rm_stanza",
            "        (match_rm_stanza",
            "          (match_ip_prefix_list_rm_stanza",
            "            MATCH:'match'",
            "            IP:'ip'",
            "            ADDRESS:'address'",
            "            PREFIX_LIST:'prefix-list'",
            "            (variable",
            "              VARIABLE:'hpr-connector-subnets'  <== mode:M_Words)",
            "            NEWLINE:'\\n'  <== mode:M_Words)))",
            "      (rm_stanza",
            "        (set_rm_stanza",
            "          (set_origin_rm_stanza",
            "            SET:'set'",
            "            ORIGIN:'origin'",
            "            (origin_expr_literal",
            "              IGP:'igp')",
            "            NEWLINE:'\\n')))",
            "      (rm_stanza",
            "        (set_rm_stanza",
            "          (set_metric_rm_stanza",
            "            SET:'set'",
            "            METRIC:'metric'",
            "            metric = (int_expr",
            "              DASH:'-'",
            "              DEC:'1')",
            "            NEWLINE:'\\n')))",
            "      (rm_stanza",
            "        (set_rm_stanza",
            "          (set_community_rm_stanza",
            "            SET:'set'",
            "            COMMUNITY:'community'",
            "            (community",
            "              STANDARD_COMMUNITY:'2153:65515')",
            "            (community",
            "              STANDARD_COMMUNITY:'2153:65535')",
            "            NEWLINE:'\\n')))",
            "      (rm_stanza",
            "        (set_rm_stanza",
            "          (set_nlri_rm_stanza_null",
            "            SET:'set'",
            "            NLRI:'nlri'",
            "            UNICAST:'unicast'",
            "            MULTICAST:'multicast'",
            "            NEWLINE:'\\n')))",
            "      (rm_stanza",
            "        (set_rm_stanza",
            "          (set_traffic_index_rm_stanza_null",
            "            SET:'set'",
            "            TRAFFIC_INDEX:'traffic-index'",
            "            index = DEC:'1'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (route_map_stanza",
            "      ROUTE_MAP:'route-map'",
            "      name = (variable",
            "        VARIABLE:'to_svl-hub-router'  <== mode:M_RouteMap)",
            "      rmt = (access_list_action",
            "        PERMIT:'permit')",
            "      num = DEC:'100'",
            "      NEWLINE:'\\n'",
            "      (rm_stanza",
            "        (set_rm_stanza",
            "          (set_metric_rm_stanza",
            "            SET:'set'",
            "            METRIC:'metric'",
            "            metric = (int_expr",
            "              PLUS:'+'",
            "              DEC:'5')",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (route_map_stanza",
            "      ROUTE_MAP:'route-map'",
            "      name = (variable",
            "        VARIABLE:'ijfw$%^&****(((([]grr'  <== mode:M_RouteMap)",
            "      rmt = (access_list_action",
            "        PERMIT:'permit')",
            "      num = DEC:'10'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (route_map_stanza",
            "      ROUTE_MAP:'route-map'",
            "      name = (variable",
            "        VARIABLE:'MSDP-SA-RP-FILTER'  <== mode:M_RouteMap)",
            "      rmt = (access_list_action",
            "        DENY:'deny')",
            "      num = DEC:'10'",
            "      NEWLINE:'\\n'",
            "      (rm_stanza",
            "        (match_rm_stanza",
            "          (match_ip_route_source_rm_stanza",
            "            MATCH:'match'",
            "            IP:'ip'",
            "            ROUTE_SOURCE:'route-source'",
            "            src = DEC:'124'",
            "            NEWLINE:'\\n')))",
            "      (rm_stanza",
            "        (match_rm_stanza",
            "          (match_ip_access_list_rm_stanza",
            "            MATCH:'match'",
            "            IP:'ip'",
            "            ADDRESS:'address'",
            "            (variable_access_list",
            "              TEST:'test')",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (route_map_stanza",
            "      ROUTE_MAP:'route-map'",
            "      name = (variable",
            "        VARIABLE:'next-hop-null'  <== mode:M_RouteMap)",
            "      rmt = (access_list_action",
            "        DENY:'deny')",
            "      num = DEC:'15'",
            "      NEWLINE:'\\n'",
            "      (rm_stanza",
            "        (match_rm_stanza",
            "          (match_ip_next_hop_rm_stanza_null",
            "            MATCH:'match'",
            "            IP:'ip'",
            "            NEXT_HOP:'next-hop'",
            "            NULL:'null'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (route_map_stanza",
            "      ROUTE_MAP:'route-map'",
            "      name = (variable",
            "        VARIABLE:'mgmt'  <== mode:M_RouteMap)",
            "      rmt = (access_list_action",
            "        PERMIT:'permit')",
            "      num = DEC:'10'",
            "      NEWLINE:'\\n'",
            "      (rm_stanza",
            "        (match_rm_stanza",
            "          (match_route_type_rm_stanza",
            "            MATCH:'match'",
            "            ROUTE_TYPE:'route-type'",
            "            (variable",
            "              INTERNAL:'internal')",
            "            NEWLINE:'\\n')))",
            "      (rm_stanza",
            "        (match_rm_stanza",
            "          (match_source_protocol_rm_stanza",
            "            MATCH:'match'",
            "            SOURCE_PROTOCOL:'source-protocol'",
            "            (variable",
            "              OSPF:'ospf')",
            "            asn = DEC:'1'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (route_map_stanza",
            "      ROUTE_MAP:'route-map'",
            "      name = (variable",
            "        VARIABLE:'beeble'  <== mode:M_RouteMap)",
            "      rmt = (access_list_action",
            "        PERMIT:'permit')",
            "      num = DEC:'5'",
            "      NEWLINE:'\\n'",
            "      (rm_stanza",
            "        (match_rm_stanza",
            "          (match_ip_prefix_list_rm_stanza",
            "            MATCH:'match'",
            "            IP:'ip'",
            "            ADDRESS:'address'",
            "            PREFIX_LIST:'prefix-list'",
            "            (variable",
            "              VARIABLE:'bobble'  <== mode:M_Words)",
            "            NEWLINE:'\\n'  <== mode:M_Words)))",
            "      (rm_stanza",
            "        (continue_rm_stanza",
            "          CONTINUE:'continue'",
            "          NEWLINE:'\\n'))",
            "      (rm_stanza",
            "        (set_rm_stanza",
            "          (set_community_additive_rm_stanza",
            "            SET:'set'",
            "            COMMUNITY:'community'",
            "            (community",
            "              NO_EXPORT:'no-export')",
            "            ADDITIVE:'additive'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (route_map_stanza",
            "      ROUTE_MAP:'route-map'",
            "      name = (variable",
            "        VARIABLE:'beeble'  <== mode:M_RouteMap)",
            "      rmt = (access_list_action",
            "        PERMIT:'permit')",
            "      num = DEC:'10'",
            "      NEWLINE:'\\n'",
            "      (rm_stanza",
            "        (match_rm_stanza",
            "          (match_source_protocol_rm_stanza",
            "            MATCH:'match'",
            "            SOURCE_PROTOCOL:'source-protocol'",
            "            (variable",
            "              STATIC:'static')",
            "            NEWLINE:'\\n')))",
            "      (rm_stanza",
            "        (set_rm_stanza",
            "          (set_metric_rm_stanza",
            "            SET:'set'",
            "            METRIC:'metric'",
            "            metric = (int_expr",
            "              DEC:'0')",
            "            NEWLINE:'\\n')))",
            "      (rm_stanza",
            "        (set_rm_stanza",
            "          (set_local_preference_rm_stanza",
            "            SET:'set'",
            "            LOCAL_PREFERENCE:'local-preference'",
            "            pref = (int_expr",
            "              DEC:'100')",
            "            NEWLINE:'\\n')))",
            "      (rm_stanza",
            "        (set_rm_stanza",
            "          (set_ip_default_nexthop_stanza",
            "            SET:'set'",
            "            IP:'ip'",
            "            DEFAULT:'default'",
            "            NEXT_HOP:'next-hop'",
            "            nhip = IP_ADDRESS:'10.0.0.1'",
            "            NEWLINE:'\\n')))",
            "      (rm_stanza",
            "        (set_rm_stanza",
            "          (set_weight_rm_stanza",
            "            SET:'set'",
            "            WEIGHT:'weight'",
            "            weight = DEC:'20'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (route_map_stanza",
            "      ROUTE_MAP:'route-map'",
            "      name = (variable",
            "        VARIABLE:'multicaststuff'  <== mode:M_RouteMap)",
            "      rmt = (access_list_action",
            "        PERMIT:'permit')",
            "      num = DEC:'10'",
            "      NEWLINE:'\\n'",
            "      (rm_stanza",
            "        (match_rm_stanza",
            "          (match_ip_multicast_rm_stanza",
            "            MATCH:'match'",
            "            IP:'ip'",
            "            MULTICAST:'multicast'",
            "            (null_rest_of_line",
            "              GROUP:'group'",
            "              IP_PREFIX:'239.128.128.0/20'",
            "              NEWLINE:'\\n'))))))",
            "  (stanza",
            "    (route_map_stanza",
            "      ROUTE_MAP:'route-map'",
            "      name = (variable",
            "        VARIABLE:'MAP_NAME1'  <== mode:M_RouteMap)",
            "      rmt = (access_list_action",
            "        PERMIT:'permit')",
            "      num = DEC:'10'",
            "      NEWLINE:'\\n'",
            "      (rm_stanza",
            "        (match_rm_stanza",
            "          (match_as_path_access_list_rm_stanza",
            "            MATCH:'match'",
            "            AS_PATH:'as-path'",
            "            (variable",
            "              VARIABLE:'AS_PATH_ACL1'  <== mode:M_AsPath)",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (route_map_stanza",
            "      ROUTE_MAP:'route-map'",
            "      name = (variable",
            "        VARIABLE:'MAP_NAME2'  <== mode:M_RouteMap)",
            "      rmt = (access_list_action",
            "        PERMIT:'permit')",
            "      num = DEC:'20'",
            "      NEWLINE:'\\n'",
            "      (rm_stanza",
            "        (match_rm_stanza",
            "          (match_as_path_access_list_rm_stanza",
            "            MATCH:'match'",
            "            AS_PATH:'as-path'",
            "            (variable",
            "              VARIABLE:'AS_PATH_ACL2'  <== mode:M_AsPath)",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (route_map_stanza",
            "      ROUTE_MAP:'route-map'",
            "      name = (variable",
            "        VARIABLE:'MAP_NAME2'  <== mode:M_RouteMap)",
            "      rmt = (access_list_action",
            "        PERMIT:'permit')",
            "      num = DEC:'20'",
            "      NEWLINE:'\\n'",
            "      (rm_stanza",
            "        (match_rm_stanza",
            "          (match_as_path_access_list_rm_stanza",
            "            MATCH:'match'",
            "            AS_PATH:'as-path'",
            "            (variable",
            "              VARIABLE:'AS_PATH_UNDEF'  <== mode:M_AsPath)",
            "            NEWLINE:'\\n')))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/cisco_sccp" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'cisco_sccp'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_sccp",
            "      SCCP:'sccp'",
            "      (null_rest_of_line",
            "        LOCAL:'local'",
            "        VARIABLE:'FastEthernet0/0'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_sccp",
            "      SCCP:'sccp'",
            "      (null_rest_of_line",
            "        CCM:'ccm'",
            "        IP_ADDRESS:'1.2.3.4'",
            "        IDENTIFIER:'identifier'",
            "        DEC:'2'",
            "        VERSION:'version'",
            "        FLOAT:'7.0'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_sccp",
            "      SCCP:'sccp'",
            "      (null_rest_of_line",
            "        CCM:'ccm'",
            "        IP_ADDRESS:'2.3.4.5'",
            "        IDENTIFIER:'identifier'",
            "        DEC:'1'",
            "        VERSION:'version'",
            "        FLOAT:'7.0'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_sccp",
            "      SCCP:'sccp'",
            "      (null_rest_of_line",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_sccp",
            "      SCCP:'sccp'",
            "      (null_rest_of_line",
            "        CCM:'ccm'",
            "        GROUP:'group'",
            "        DEC:'1'",
            "        NEWLINE:'\\n')",
            "      (sccp_null",
            "        DESCRIPTION:'description'",
            "        (null_rest_of_line",
            "          RAW_TEXT:' egrhwofiwjgrij'  <== mode:M_Description",
            "          NEWLINE:'\\n'  <== mode:M_Description))",
            "      (sccp_null",
            "        BIND:'bind'",
            "        (null_rest_of_line",
            "          INTERFACE:'interface'",
            "          M_Interface_PREFIX:'FastEthernet'  <== mode:M_Interface",
            "          DEC:'0'  <== mode:M_Interface",
            "          FORWARD_SLASH:'/'  <== mode:M_Interface",
            "          DEC:'0'  <== mode:M_Interface",
            "          NEWLINE:'\\n'  <== mode:M_Interface))",
            "      (sccp_null",
            "        ASSOCIATE:'associate'",
            "        (null_rest_of_line",
            "          CCM:'ccm'",
            "          DEC:'1'",
            "          PRIORITY:'priority'",
            "          DEC:'1'",
            "          NEWLINE:'\\n'))",
            "      (sccp_null",
            "        ASSOCIATE:'associate'",
            "        (null_rest_of_line",
            "          CCM:'ccm'",
            "          DEC:'2'",
            "          PRIORITY:'priority'",
            "          DEC:'2'",
            "          NEWLINE:'\\n'))",
            "      (sccp_null",
            "        SWITCHBACK:'switchback'",
            "        (null_rest_of_line",
            "          METHOD:'method'",
            "          GRACEFUL:'graceful'",
            "          NEWLINE:'\\n'))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/cisco_snmp" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'cisco_snmp'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_null",
            "        AAA_USER:'aaa-user'",
            "        (null_rest_of_line",
            "          CACHE_TIMEOUT:'cache-timeout'",
            "          DEC:'3600'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_community",
            "        COMMUNITY:'community'  <== mode:M_SnmpServerCommunity",
            "        name = (variable_community_name",
            "          VARIABLE:'dummycommunity'  <== mode:M_SnmpServerCommunity)",
            "        (ssc_group",
            "          GROUP:'group'",
            "          name = (variable",
            "            VARIABLE:'network-operator')",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_community",
            "        COMMUNITY:'community'  <== mode:M_SnmpServerCommunity",
            "        name = (variable_community_name",
            "          VARIABLE:'dummycommunity'  <== mode:M_SnmpServerCommunity)",
            "        (ssc_access_control",
            "          readonly = RO:'RO'",
            "          acl4 = (variable_snmp",
            "            VARIABLE:'snmp-acl')",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_community",
            "        COMMUNITY:'community'  <== mode:M_SnmpServerCommunity",
            "        name = (variable_community_name",
            "          VARIABLE:'dummycommunity'  <== mode:M_SnmpServerCommunity)",
            "        (ssc_access_control",
            "          readwrite = RW:'RW'",
            "          acl4 = (variable_snmp",
            "            DEC:'2')",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_community",
            "        COMMUNITY:'community'  <== mode:M_SnmpServerCommunity",
            "        name = (variable_community_name",
            "          VARIABLE:'dummy+dummy'  <== mode:M_SnmpServerCommunity)",
            "        (ssc_access_control",
            "          readonly = RO:'RO'",
            "          acl4 = (variable_snmp",
            "            DEC:'1')",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_community",
            "        COMMUNITY:'community'  <== mode:M_SnmpServerCommunity",
            "        name = (variable_community_name",
            "          VARIABLE:'dummy@dummy'  <== mode:M_SnmpServerCommunity)",
            "        (ssc_access_control",
            "          readwrite = RW:'RW'",
            "          acl4 = (variable_snmp",
            "            DEC:'2')",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_community",
            "        COMMUNITY:'community'  <== mode:M_SnmpServerCommunity",
            "        name = (variable_community_name",
            "          VARIABLE:'dummycommunity'  <== mode:M_SnmpServerCommunity)",
            "        (ssc_use_ipv4_acl",
            "          USE_ACL:'use-acl'",
            "          name = (variable",
            "            VARIABLE:'snmp-acl')",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_community",
            "        COMMUNITY:'community'  <== mode:M_SnmpServerCommunity",
            "        name = (variable_community_name",
            "          VARIABLE:'dummycommunity'  <== mode:M_SnmpServerCommunity)",
            "        (ssc_use_ipv4_acl",
            "          USE_ACL:'use-acl'",
            "          name = (variable",
            "            VARIABLE:'snmp-arpa-acl')",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_community",
            "        COMMUNITY:'community'  <== mode:M_SnmpServerCommunity",
            "        name = (variable_community_name",
            "          VARIABLE:'dummyconnunity'  <== mode:M_SnmpServerCommunity)",
            "        (ssc_access_control",
            "          readonly = RO:'RO'",
            "          SYSTEMOWNER:'SystemOwner'",
            "          IPV4:'IPv4'",
            "          acl4 = (variable_snmp",
            "            VARIABLE:'dummyacl')",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_community",
            "        COMMUNITY:'community'  <== mode:M_SnmpServerCommunity",
            "        name = (variable_community_name",
            "          VARIABLE:'dummycommunity'  <== mode:M_SnmpServerCommunity)",
            "        (ssc_access_control",
            "          readonly = RO:'RO'",
            "          SYSTEMOWNER:'SystemOwner'",
            "          acl4 = (variable_snmp",
            "            VARIABLE:'customer-snmp')",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_community",
            "        COMMUNITY:'community'  <== mode:M_SnmpServerCommunity",
            "        name = (variable_community_name",
            "          VARIABLE:'dummycommunity'  <== mode:M_SnmpServerCommunity)",
            "        (ssc_access_control",
            "          VIEW:'view'",
            "          view = (variable_snmp",
            "            VARIABLE:'everything')",
            "          readonly = RO:'RO'",
            "          IPV6:'ipv6'",
            "          acl6 = (variable_snmp",
            "            VARIABLE:'dummyacl')",
            "          DEC:'21'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_community",
            "        COMMUNITY:'community'  <== mode:M_SnmpServerCommunity",
            "        name = (variable_community_name",
            "          VARIABLE:'dummycommunity'  <== mode:M_SnmpServerCommunity)",
            "        (ssc_access_control",
            "          readonly = RO:'RO'",
            "          SYSTEMOWNER:'SystemOwner'",
            "          IPV4:'IPv4'",
            "          acl4 = (variable_snmp",
            "            VARIABLE:'to-VTY')",
            "          IPV6:'IPv6'",
            "          acl6 = (variable_snmp",
            "            VARIABLE:'to-VTY')",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_null",
            "        COMMUNITY_MAP:'community-map'",
            "        (null_rest_of_line",
            "          VARIABLE:'dummycommunity'  <== mode:M_Name",
            "          CONTEXT:'context'",
            "          VARIABLE:'ospf1'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_null",
            "        CHASSIS_ID:'chassis-id'",
            "        (null_rest_of_line",
            "          VARIABLE:'FOC1743N1BE'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_null",
            "        CONTACT:'contact'",
            "        (null_rest_of_line",
            "          VARIABLE:'CENIC'",
            "          VARIABLE:'Core'",
            "          VARIABLE:'Engineering'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_null",
            "        CONTEXT:'context'",
            "        (null_rest_of_line",
            "          VARIABLE:'ospf1'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_enable_mib_null",
            "        ENABLE:'enable'",
            "        MIB:'mib'",
            "        (variable",
            "          VARIABLE:'np-qos-stat')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_enable_traps",
            "        ENABLE:'enable'",
            "        TRAPS:'traps'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_enable_traps",
            "        ENABLE:'enable'",
            "        TRAPS:'traps'",
            "        snmp_trap_type = (variable",
            "          AAA:'aaa')",
            "        (variable",
            "          VARIABLE:'server-state-change')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_enable_traps",
            "        ENABLE:'enable'",
            "        TRAPS:'traps'",
            "        snmp_trap_type = (variable",
            "          BGP:'bgp')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_enable_traps",
            "        ENABLE:'enable'",
            "        TRAPS:'traps'",
            "        snmp_trap_type = (variable",
            "          BRIDGE:'bridge')",
            "        (variable",
            "          VARIABLE:'newroot')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_enable_traps",
            "        ENABLE:'enable'",
            "        TRAPS:'traps'",
            "        snmp_trap_type = (variable",
            "          BRIDGE:'bridge')",
            "        (variable",
            "          VARIABLE:'newroot')",
            "        (variable",
            "          VARIABLE:'topologychange')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_enable_traps",
            "        ENABLE:'enable'",
            "        TRAPS:'traps'",
            "        snmp_trap_type = (variable",
            "          BRIDGE:'bridge')",
            "        (variable",
            "          VARIABLE:'topologychange')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_enable_traps",
            "        ENABLE:'enable'",
            "        TRAPS:'traps'",
            "        snmp_trap_type = (variable",
            "          CALLHOME:'callhome')",
            "        (variable",
            "          VARIABLE:'event-notify')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_enable_traps",
            "        ENABLE:'enable'",
            "        TRAPS:'traps'",
            "        snmp_trap_type = (variable",
            "          CALLHOME:'callhome')",
            "        (variable",
            "          VARIABLE:'smtp-send-fail')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_enable_traps",
            "        ENABLE:'enable'",
            "        TRAPS:'traps'",
            "        snmp_trap_type = (variable",
            "          CFS:'cfs')",
            "        (variable",
            "          VARIABLE:'merge-failure')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_enable_traps",
            "        ENABLE:'enable'",
            "        TRAPS:'traps'",
            "        snmp_trap_type = (variable",
            "          CFS:'cfs')",
            "        (variable",
            "          VARIABLE:'state-change-notif')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_enable_traps",
            "        ENABLE:'enable'",
            "        TRAPS:'traps'",
            "        snmp_trap_type = (variable",
            "          CONFIG:'config')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_enable_traps",
            "        ENABLE:'enable'",
            "        TRAPS:'traps'",
            "        snmp_trap_type = (variable",
            "          CONFIG:'config')",
            "        (variable",
            "          VARIABLE:'ccmCLIRunningConfigChanged')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_enable_traps",
            "        ENABLE:'enable'",
            "        TRAPS:'traps'",
            "        snmp_trap_type = (variable",
            "          VARIABLE:'cpu')",
            "        (variable",
            "          THRESHOLD:'threshold')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_enable_traps",
            "        ENABLE:'enable'",
            "        TRAPS:'traps'",
            "        snmp_trap_type = (variable",
            "          VARIABLE:'entity')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_enable_traps",
            "        ENABLE:'enable'",
            "        TRAPS:'traps'",
            "        snmp_trap_type = (variable",
            "          VARIABLE:'envmon')",
            "        (variable",
            "          FAN:'fan')",
            "        (variable",
            "          SHUTDOWN:'shutdown')",
            "        (variable",
            "          VARIABLE:'supply')",
            "        (variable",
            "          VARIABLE:'temperature')",
            "        (variable",
            "          VARIABLE:'status')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_enable_traps",
            "        ENABLE:'enable'",
            "        TRAPS:'traps'",
            "        snmp_trap_type = (variable",
            "          VARIABLE:'feature-control')",
            "        (variable",
            "          VARIABLE:'ciscoFeatOpStatusChange')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_enable_traps",
            "        ENABLE:'enable'",
            "        TRAPS:'traps'",
            "        snmp_trap_type = (variable",
            "          VARIABLE:'feature-control')",
            "        (variable",
            "          VARIABLE:'FeatureOpStatusChange')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_enable_traps",
            "        ENABLE:'enable'",
            "        TRAPS:'traps'",
            "        snmp_trap_type = (variable",
            "          FLASH:'flash')",
            "        (variable",
            "          VARIABLE:'insertion')",
            "        (variable",
            "          VARIABLE:'removal')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_enable_traps",
            "        ENABLE:'enable'",
            "        TRAPS:'traps'",
            "        snmp_trap_type = (variable",
            "          VARIABLE:'fru-ctrl')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_enable_traps",
            "        ENABLE:'enable'",
            "        TRAPS:'traps'",
            "        snmp_trap_type = (variable",
            "          IPSLA:'ipsla')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_enable_traps",
            "        ENABLE:'enable'",
            "        TRAPS:'traps'",
            "        snmp_trap_type = (variable",
            "          LINK:'link')",
            "        (variable",
            "          VARIABLE:'cisco-xcvr-mon-status-chg')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_enable_traps",
            "        ENABLE:'enable'",
            "        TRAPS:'traps'",
            "        snmp_trap_type = (variable",
            "          VARIABLE:'poe')",
            "        (variable",
            "          POLICE:'police')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_enable_traps",
            "        ENABLE:'enable'",
            "        TRAPS:'traps'",
            "        snmp_trap_type = (variable",
            "          VARIABLE:'poe')",
            "        (variable",
            "          VARIABLE:'portonoff')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_enable_traps",
            "        ENABLE:'enable'",
            "        TRAPS:'traps'",
            "        snmp_trap_type = (variable",
            "          VARIABLE:'poe')",
            "        (variable",
            "          VARIABLE:'pwrusageoff')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_enable_traps",
            "        ENABLE:'enable'",
            "        TRAPS:'traps'",
            "        snmp_trap_type = (variable",
            "          VARIABLE:'poe')",
            "        (variable",
            "          VARIABLE:'pwrusageon')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_enable_traps",
            "        ENABLE:'enable'",
            "        TRAPS:'traps'",
            "        snmp_trap_type = (variable",
            "          RF:'rf')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_enable_traps",
            "        ENABLE:'enable'",
            "        TRAPS:'traps'",
            "        snmp_trap_type = (variable",
            "          SNMP:'snmp')",
            "        (variable",
            "          AUTHENTICATION:'authentication')",
            "        NEWLINE:'\\n'  <== mode:M_Authentication)))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_enable_traps",
            "        ENABLE:'enable'",
            "        TRAPS:'traps'",
            "        snmp_trap_type = (variable",
            "          SNMP:'snmp')",
            "        (variable",
            "          AUTHENTICATION:'authentication')",
            "        (variable",
            "          VARIABLE:'linkdown'  <== mode:M_Authentication)",
            "        (variable",
            "          VARIABLE:'linkup')",
            "        (variable",
            "          VARIABLE:'coldstart')",
            "        (variable",
            "          VARIABLE:'warmstart')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_enable_traps",
            "        ENABLE:'enable'",
            "        TRAPS:'traps'",
            "        snmp_trap_type = (variable",
            "          VARIABLE:'stpx')",
            "        (variable",
            "          VARIABLE:'inconsistency')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_enable_traps",
            "        ENABLE:'enable'",
            "        TRAPS:'traps'",
            "        snmp_trap_type = (variable",
            "          VARIABLE:'stpx')",
            "        (variable",
            "          VARIABLE:'inconsistency')",
            "        (variable",
            "          VARIABLE:'root-inconsistency')",
            "        (variable",
            "          VARIABLE:'loop-inconsistency')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_enable_traps",
            "        ENABLE:'enable'",
            "        TRAPS:'traps'",
            "        snmp_trap_type = (variable",
            "          VARIABLE:'stpx')",
            "        (variable",
            "          VARIABLE:'loop-inconsistency')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_enable_traps",
            "        ENABLE:'enable'",
            "        TRAPS:'traps'",
            "        snmp_trap_type = (variable",
            "          VARIABLE:'stpx')",
            "        (variable",
            "          VARIABLE:'root-inconsistency')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_enable_traps",
            "        ENABLE:'enable'",
            "        TRAPS:'traps'",
            "        snmp_trap_type = (variable",
            "          SYSLOG:'syslog')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_enable_traps",
            "        ENABLE:'enable'",
            "        TRAPS:'traps'",
            "        snmp_trap_type = (variable",
            "          VARIABLE:'sysmgr')",
            "        (variable",
            "          VARIABLE:'cseFailSwCoreNotifyExtended')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_enable_traps",
            "        ENABLE:'enable'",
            "        TRAPS:'traps'",
            "        snmp_trap_type = (variable",
            "          TTY:'tty')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_enable_traps",
            "        ENABLE:'enable'",
            "        TRAPS:'traps'",
            "        snmp_trap_type = (variable",
            "          UPGRADE:'upgrade')",
            "        (variable",
            "          VARIABLE:'UpgradeJobStatusNotify')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_enable_traps",
            "        ENABLE:'enable'",
            "        TRAPS:'traps'",
            "        snmp_trap_type = (variable",
            "          UPGRADE:'upgrade')",
            "        (variable",
            "          VARIABLE:'UpgradeOpNotifyOnCompletion')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_enable_traps",
            "        ENABLE:'enable'",
            "        TRAPS:'traps'",
            "        snmp_trap_type = (variable",
            "          VARIABLE:'vlancreate')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_enable_traps",
            "        ENABLE:'enable'",
            "        TRAPS:'traps'",
            "        snmp_trap_type = (variable",
            "          VARIABLE:'vlandelete')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_enable_traps",
            "        ENABLE:'enable'",
            "        TRAPS:'traps'",
            "        snmp_trap_type = (variable",
            "          VARIABLE:'vlan-membership')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_enable_traps",
            "        ENABLE:'enable'",
            "        TRAPS:'traps'",
            "        snmp_trap_type = (variable",
            "          VTP:'vtp')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_enable_traps",
            "        ENABLE:'enable'",
            "        TRAPS:'traps'",
            "        snmp_trap_type = (variable",
            "          VTP:'vtp')",
            "        (variable",
            "          VARIABLE:'notifs')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_enable_traps",
            "        ENABLE:'enable'",
            "        TRAPS:'traps'",
            "        snmp_trap_type = (variable",
            "          VTP:'vtp')",
            "        (variable",
            "          VARIABLE:'vlancreate')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_enable_traps",
            "        ENABLE:'enable'",
            "        TRAPS:'traps'",
            "        snmp_trap_type = (variable",
            "          VTP:'vtp')",
            "        (variable",
            "          VARIABLE:'vlandelete')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_null",
            "        ENGINEID:'engineID'",
            "        (null_rest_of_line",
            "          M_COMMENT_NON_NEWLINE:' local 000000090200000652D6C000'  <== mode:M_COMMENT",
            "          NEWLINE:'\\n'  <== mode:M_COMMENT))))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_file_transfer",
            "        FILE_TRANSFER:'file-transfer'",
            "        ACCESS_GROUP:'access-group'",
            "        acl = (variable",
            "          DEC:'8')",
            "        PROTOCOL:'protocol'",
            "        (snmp_file_transfer_protocol",
            "          TFTP:'tftp')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_null",
            "        GROUP:'group'",
            "        (null_rest_of_line",
            "          VARIABLE:'cenic-nms'",
            "          VARIABLE:'v2c'",
            "          IPV4:'IPv4'",
            "          AUTH:'auth'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_host",
            "        HOST:'host'",
            "        ip4 = IP_ADDRESS:'10.1.2.3'",
            "        comm_or_username = (variable_snmp_host",
            "          VARIABLE:'xyx')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_host",
            "        HOST:'host'",
            "        ip4 = IP_ADDRESS:'10.1.2.3'",
            "        (ss_host_use_vrf",
            "          USE_VRF:'use-vrf'",
            "          vrf = (variable",
            "            MANAGEMENT:'management'))",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_host",
            "        HOST:'host'",
            "        ip4 = IP_ADDRESS:'10.1.2.3'",
            "        (ss_host_version",
            "          VERSION:'version'",
            "          version = (variable_snmp_host",
            "            VARIABLE:'2c'))",
            "        comm_or_username = (variable_snmp_host",
            "          VARIABLE:'dummycommunity')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_host",
            "        HOST:'host'",
            "        ip4 = IP_ADDRESS:'10.1.2.3'",
            "        (ss_host_use_vrf",
            "          VRF:'vrf'",
            "          vrf = (variable",
            "            VARIABLE:'mangement'))",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_host",
            "        HOST:'host'",
            "        ip4 = IP_ADDRESS:'10.1.2.3'",
            "        (ss_host_informs",
            "          INFORMS:'informs')",
            "        (ss_host_version",
            "          VERSION:'version'",
            "          version = (variable_snmp_host",
            "            VARIABLE:'2c'))",
            "        comm_or_username = (variable_snmp_host",
            "          VARIABLE:'dummycommunity')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_null",
            "        IFINDEX:'ifindex'",
            "        (null_rest_of_line",
            "          VARIABLE:'persist'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_null",
            "        IFMIB:'ifmib'",
            "        (null_rest_of_line",
            "          VARIABLE:'stats'",
            "          CACHE:'cache'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_null",
            "        LOCATION:'location'",
            "        (null_rest_of_line",
            "          M_COMMENT_NON_NEWLINE:' UC Santa Cruz 4900M'  <== mode:M_COMMENT",
            "          NEWLINE:'\\n'  <== mode:M_COMMENT))))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_null",
            "        LOGGING:'logging'",
            "        (null_rest_of_line",
            "          THRESHOLD:'threshold'",
            "          VARIABLE:'oid-processing'",
            "          DEC:'1000'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_null",
            "        MANAGER:'manager'",
            "        (null_rest_of_line",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_null",
            "        MAX_IFINDEX_PER_MODULE:'max-ifindex-per-module'",
            "        (null_rest_of_line",
            "          DEC:'40'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_mib",
            "        MIB:'mib'",
            "        COMMUNITY_MAP:'community-map'",
            "        community_string = (variable",
            "          VARIABLE:'my_acl_for_public'  <== mode:M_Name)",
            "        CONTEXT:'context'",
            "        context_name = (variable",
            "          VARIABLE:'public1')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_mib",
            "        MIB:'mib'",
            "        COMMUNITY_MAP:'community-map'",
            "        community_string = (variable",
            "          VARIABLE:'community#1234'  <== mode:M_Name)",
            "        CONTEXT:'context'",
            "        context_name = (variable",
            "          VARIABLE:'public1')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_null",
            "        OVERLOAD_CONTROL:'overload-control'",
            "        (null_rest_of_line",
            "          DEC:'0'",
            "          DEC:'0'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_null",
            "        PACKETSIZE:'packetsize'",
            "        (null_rest_of_line",
            "          DEC:'512'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_null",
            "        PRIORITY:'priority'",
            "        (null_rest_of_line",
            "          HIGH:'high'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_null",
            "        PROTOCOL:'protocol'",
            "        (null_rest_of_line",
            "          ENABLE:'enable'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_null",
            "        QUEUE_LENGTH:'queue-length'",
            "        (null_rest_of_line",
            "          DEC:'1000'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_source_interface",
            "        SOURCE_INTERFACE:'source-interface'",
            "        TRAP:'trap'  <== mode:M_Interface",
            "        iname = (interface_name",
            "          name_prefix_alpha = M_Interface_PREFIX:'loopback'  <== mode:M_Interface",
            "          (range",
            "            (subrange",
            "              low = DEC:'0'  <== mode:M_Interface)))",
            "        NEWLINE:'\\n'  <== mode:M_Interface)))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_source_interface",
            "        SOURCE_INTERFACE:'source-interface'",
            "        TRAP:'trap'  <== mode:M_Interface",
            "        iname = (interface_name",
            "          name_prefix_alpha = M_Interface_PREFIX:'mgmt'  <== mode:M_Interface",
            "          (range",
            "            (subrange",
            "              low = DEC:'0'  <== mode:M_Interface)))",
            "        NEWLINE:'\\n'  <== mode:M_Interface)))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_source_interface",
            "        SOURCE_INTERFACE:'source-interface'",
            "        TRAP:'trap'  <== mode:M_Interface",
            "        iname = (interface_name",
            "          name_prefix_alpha = M_Interface_PREFIX:'Vlan'  <== mode:M_Interface",
            "          (range",
            "            (subrange",
            "              low = DEC:'1'  <== mode:M_Interface)))",
            "        NEWLINE:'\\n'  <== mode:M_Interface)))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_null",
            "        SYSTEM_SHUTDOWN:'system-shutdown'",
            "        (null_rest_of_line",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_null",
            "        TCP_SESSION:'tcp-session'",
            "        (null_rest_of_line",
            "          AUTH:'auth'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_tftp_server_list",
            "        TFTP_SERVER_LIST:'tftp-server-list'",
            "        name = (variable",
            "          DEC:'8')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_null",
            "        TRAP:'trap'",
            "        (null_rest_of_line",
            "          LINK:'link'",
            "          VARIABLE:'ietf'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_trap_source",
            "        TRAP_SOURCE:'trap-source'",
            "        iname = (interface_name",
            "          name_prefix_alpha = M_Interface_PREFIX:'Loopback'  <== mode:M_Interface",
            "          (range",
            "            (subrange",
            "              low = DEC:'0'  <== mode:M_Interface)))",
            "        NEWLINE:'\\n'  <== mode:M_Interface)))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_trap_source",
            "        TRAP_SOURCE:'trap-source'",
            "        IPV4:'IPv4'  <== mode:M_Interface",
            "        iname = (interface_name",
            "          name_prefix_alpha = M_Interface_PREFIX:'Loopback'  <== mode:M_Interface",
            "          (range",
            "            (subrange",
            "              low = DEC:'0'  <== mode:M_Interface)))",
            "        NEWLINE:'\\n'  <== mode:M_Interface)))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_null",
            "        TRAP_TIMEOUT:'trap-timeout'",
            "        (null_rest_of_line",
            "          DEC:'10'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_null",
            "        TRAPS:'traps'",
            "        (null_rest_of_line",
            "          SNMP:'snmp'",
            "          VARIABLE:'linkup'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_null",
            "        USER:'user'",
            "        (null_rest_of_line",
            "          ADMIN:'admin'",
            "          VARIABLE:'network-admin'",
            "          AUTH:'auth'",
            "          MD5:'md5'",
            "          VARIABLE:'dummypassword'",
            "          PRIV:'priv'",
            "          VARIABLE:'dummyprivacypassword'",
            "          VARIABLE:'localizedkey'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_null",
            "        VIEW:'view'",
            "        (null_rest_of_line",
            "          VARIABLE:'NOROUTES'",
            "          VARIABLE:'mib-2'",
            "          VARIABLE:'included'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_null",
            "        VIEW:'view'",
            "        (null_rest_of_line",
            "          VARIABLE:'NOROUTES'",
            "          VARIABLE:'lsystem'",
            "          VARIABLE:'included'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_snmp_server",
            "      SNMP_SERVER:'snmp-server'",
            "      (ss_null",
            "        VRF:'vrf'",
            "        (null_rest_of_line",
            "          VARIABLE:'Management'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        NO:'no'",
            "        SNMP_SERVER:'snmp-server'",
            "        AAA:'aaa'",
            "        VARIABLE:'exclusive-behavior'",
            "        ENABLE:'enable'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        NO:'no'",
            "        SNMP_SERVER:'snmp-server'",
            "        ENABLE:'enable'",
            "        TRAPS:'traps'",
            "        CALLHOME:'callhome'",
            "        VARIABLE:'event-notify'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        NO:'no'",
            "        SNMP_SERVER:'snmp-server'",
            "        GLOBALENFORCEPRIV:'globalEnforcePriv'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        NO:'no'",
            "        SNMP_SERVER:'snmp-server'",
            "        LOCATION:'location'",
            "        NEWLINE:'\\n'  <== mode:M_COMMENT)))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        NO:'no'",
            "        SNMP_SERVER:'snmp-server'",
            "        CONTACT:'contact'",
            "        NEWLINE:'\\n')))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/cisco_spanning_tree" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'cisco_spanning_tree'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_spanning_tree",
            "      SPANNING_TREE:'spanning-tree'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_spanning_tree",
            "      SPANNING_TREE:'spanning-tree'",
            "      (spanning_tree_null",
            "        BACKBONEFAST:'backbonefast'",
            "        (null_rest_of_line",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_spanning_tree",
            "      SPANNING_TREE:'spanning-tree'",
            "      (spanning_tree_null",
            "        BPDUFILTER:'bpdufilter'",
            "        (null_rest_of_line",
            "          DISABLE:'disable'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_spanning_tree",
            "      SPANNING_TREE:'spanning-tree'",
            "      (spanning_tree_null",
            "        BPDUFILTER:'bpdufilter'",
            "        (null_rest_of_line",
            "          ENABLE:'enable'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_spanning_tree",
            "      SPANNING_TREE:'spanning-tree'",
            "      (spanning_tree_null",
            "        BRIDGE:'bridge'",
            "        (null_rest_of_line",
            "          VARIABLE:'assurance'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_spanning_tree",
            "      SPANNING_TREE:'spanning-tree'",
            "      (spanning_tree_null",
            "        COST:'cost'",
            "        (null_rest_of_line",
            "          DEC:'10'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_spanning_tree",
            "      SPANNING_TREE:'spanning-tree'",
            "      (spanning_tree_null",
            "        ETHERCHANNEL:'etherchannel'",
            "        (null_rest_of_line",
            "          GUARD:'guard'",
            "          VARIABLE:'misconfig'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_spanning_tree",
            "      SPANNING_TREE:'spanning-tree'",
            "      (spanning_tree_null",
            "        EXTEND:'extend'",
            "        (null_rest_of_line",
            "          VARIABLE:'system-id'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_spanning_tree",
            "      SPANNING_TREE:'spanning-tree'",
            "      (spanning_tree_null",
            "        FCOE:'fcoe'",
            "        (null_rest_of_line",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_spanning_tree",
            "      SPANNING_TREE:'spanning-tree'",
            "      (spanning_tree_null",
            "        GUARD:'guard'",
            "        (null_rest_of_line",
            "          VARIABLE:'loop'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_spanning_tree",
            "      SPANNING_TREE:'spanning-tree'",
            "      (spanning_tree_null",
            "        GUARD:'guard'",
            "        (null_rest_of_line",
            "          NONE:'none'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_spanning_tree",
            "      SPANNING_TREE:'spanning-tree'",
            "      (spanning_tree_null",
            "        GUARD:'guard'",
            "        (null_rest_of_line",
            "          ROOT:'root'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_spanning_tree",
            "      SPANNING_TREE:'spanning-tree'",
            "      (spanning_tree_null",
            "        LOGGING:'logging'",
            "        (null_rest_of_line",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_spanning_tree",
            "      SPANNING_TREE:'spanning-tree'",
            "      (spanning_tree_null",
            "        LOOPGUARD:'loopguard'",
            "        (null_rest_of_line",
            "          DEFAULT:'default'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_spanning_tree",
            "      SPANNING_TREE:'spanning-tree'",
            "      (spanning_tree_null",
            "        MODE:'mode'",
            "        (null_rest_of_line",
            "          VARIABLE:'rapid-pvst'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_spanning_tree",
            "      SPANNING_TREE:'spanning-tree'",
            "      (spanning_tree_null",
            "        PATHCOST:'pathcost'",
            "        (null_rest_of_line",
            "          METHOD:'method'",
            "          VARIABLE:'short'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_spanning_tree",
            "      SPANNING_TREE:'spanning-tree'",
            "      (spanning_tree_null",
            "        PORT:'port'",
            "        (null_rest_of_line",
            "          TYPE:'type'",
            "          EDGE:'edge'",
            "          DEFAULT:'default'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_spanning_tree",
            "      SPANNING_TREE:'spanning-tree'",
            "      (spanning_tree_portfast",
            "        PORTFAST:'portfast'",
            "        edge = EDGE:'edge'",
            "        bpduguard = BPDUGUARD:'bpduguard'",
            "        defaultLiteral = DEFAULT:'default'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_spanning_tree",
            "      SPANNING_TREE:'spanning-tree'",
            "      (spanning_tree_null",
            "        UPLINKFAST:'uplinkfast'",
            "        (null_rest_of_line",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_spanning_tree",
            "      SPANNING_TREE:'spanning-tree'",
            "      (spanning_tree_null",
            "        VLAN:'vlan'",
            "        (null_rest_of_line",
            "          DEC:'100'",
            "          COST:'cost'",
            "          DEC:'10'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_spanning_tree",
            "      SPANNING_TREE:'spanning-tree'",
            "      (spanning_tree_null",
            "        VLAN:'vlan'",
            "        (null_rest_of_line",
            "          DEC:'100'",
            "          PRIORITY:'priority'",
            "          DEC:'4096'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_spanning_tree",
            "      NO:'no'",
            "      SPANNING_TREE:'spanning-tree'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_spanning_tree",
            "      NO:'no'",
            "      SPANNING_TREE:'spanning-tree'",
            "      (spanning_tree_null",
            "        DISPUTE:'dispute'",
            "        (null_rest_of_line",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_spanning_tree",
            "      NO:'no'",
            "      SPANNING_TREE:'spanning-tree'",
            "      (spanning_tree_null",
            "        OPTIMIZE:'optimize'",
            "        (null_rest_of_line",
            "          VARIABLE:'bpdu'",
            "          VARIABLE:'transmission'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_spanning_tree",
            "      SPANNING_TREE:'spanning-tree'",
            "      (spanning_tree_mst",
            "        MST:'mst'",
            "        (null_rest_of_line",
            "          CONFIGURATION:'configuration'",
            "          NEWLINE:'\\n')",
            "        (spanning_tree_mst_null",
            "          NAME:'name'",
            "          (null_rest_of_line",
            "            VARIABLE:'test-setup-rz'  <== mode:M_Name",
            "            NEWLINE:'\\n'))",
            "        (spanning_tree_mst_null",
            "          REVISION:'revision'",
            "          (null_rest_of_line",
            "            DEC:'10'",
            "            NEWLINE:'\\n'))",
            "        (spanning_tree_mst_null",
            "          INSTANCE:'instance'",
            "          (null_rest_of_line",
            "            DEC:'1'",
            "            VLAN:'vlan'",
            "            DEC:'300'",
            "            NEWLINE:'\\n'))",
            "        (spanning_tree_mst_null",
            "          INSTANCE:'instance'",
            "          (null_rest_of_line",
            "            DEC:'2'",
            "            VLAN:'vlan'",
            "            DEC:'501'",
            "            DASH:'-'",
            "            DEC:'502'",
            "            COMMA:','",
            "            DEC:'512'",
            "            COMMA:','",
            "            DEC:'703'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_spanning_tree",
            "      SPANNING_TREE:'spanning-tree'",
            "      (spanning_tree_mst",
            "        MST:'mst'",
            "        (null_rest_of_line",
            "          CONFIGURATION:'configuration'",
            "          NEWLINE:'\\n')",
            "        (spanning_tree_mst_null",
            "          NAME:'name'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n'  <== mode:M_Name))",
            "        (spanning_tree_mst_null",
            "          REVISION:'revision'",
            "          (null_rest_of_line",
            "            DEC:'10'",
            "            NEWLINE:'\\n'))",
            "        (spanning_tree_mst_null",
            "          INSTANCE:'instance'",
            "          (null_rest_of_line",
            "            DEC:'1'",
            "            VLAN:'vlan'",
            "            DEC:'300'",
            "            NEWLINE:'\\n'))",
            "        (spanning_tree_mst_null",
            "          INSTANCE:'instance'",
            "          (null_rest_of_line",
            "            DEC:'2'",
            "            VLAN:'vlan'",
            "            DEC:'501'",
            "            DASH:'-'",
            "            DEC:'502'",
            "            COMMA:','",
            "            DEC:'512'",
            "            COMMA:','",
            "            DEC:'703'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_spanning_tree",
            "      SPANNING_TREE:'spanning-tree'",
            "      (spanning_tree_mst",
            "        MST:'mst'",
            "        (null_rest_of_line",
            "          DEC:'2'",
            "          PRIORITY:'priority'",
            "          DEC:'24576'",
            "          NEWLINE:'\\n'))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/cisco_ssh" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'cisco_ssh'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_ip_ssh",
            "      IP:'ip'",
            "      SSH:'ssh'",
            "      (ip_ssh_null",
            "        AUTHENTICATION_RETRIES:'authentication-retries'",
            "        (null_rest_of_line",
            "          DEC:'3'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_ip_ssh",
            "      IP:'ip'",
            "      SSH:'ssh'",
            "      (ip_ssh_null",
            "        CLIENT:'client'",
            "        (null_rest_of_line",
            "          SOURCE_INTERFACE:'source-interface'",
            "          M_Interface_PREFIX:'Loopback'  <== mode:M_Interface",
            "          DEC:'0'  <== mode:M_Interface",
            "          NEWLINE:'\\n'  <== mode:M_Interface))))",
            "  (stanza",
            "    (s_ip_ssh",
            "      IP:'ip'",
            "      SSH:'ssh'",
            "      (ip_ssh_null",
            "        PORT:'port'",
            "        (null_rest_of_line",
            "          DEC:'2041'",
            "          ROTARY:'rotary'",
            "          DEC:'1'",
            "          DEC:'3'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_ip_ssh",
            "      IP:'ip'",
            "      SSH:'ssh'",
            "      (ip_ssh_pubkey_chain",
            "        PUBKEY_CHAIN:'pubkey-chain'",
            "        NEWLINE:'\\n'",
            "        USERNAME:'username'",
            "        (null_rest_of_line",
            "          VARIABLE:'alice'",
            "          NEWLINE:'\\n')",
            "        KEY_HASH:'key-hash'",
            "        (null_rest_of_line",
            "          VARIABLE:'ssh-rsa'",
            "          VARIABLE:'AAAAAAAAAA'",
            "          VARIABLE:'alice@alice'",
            "          NEWLINE:'\\n')",
            "        USERNAME:'username'",
            "        (null_rest_of_line",
            "          VARIABLE:'bob'",
            "          NEWLINE:'\\n')",
            "        KEY_HASH:'key-hash'",
            "        (null_rest_of_line",
            "          VARIABLE:'ssh-rsa'",
            "          VARIABLE:'BBBBBBBBBB'",
            "          VARIABLE:'bob'",
            "          NEWLINE:'\\n')",
            "        QUIT:'quit'",
            "        (null_rest_of_line",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_ip_ssh",
            "      IP:'ip'",
            "      SSH:'ssh'",
            "      (ip_ssh_null",
            "        SOURCE_INTERFACE:'source-interface'",
            "        (null_rest_of_line",
            "          M_Interface_PREFIX:'Vlan'  <== mode:M_Interface",
            "          DEC:'10'  <== mode:M_Interface",
            "          NEWLINE:'\\n'  <== mode:M_Interface))))",
            "  (stanza",
            "    (s_ip_ssh",
            "      IP:'ip'",
            "      SSH:'ssh'",
            "      (ip_ssh_version",
            "        VERSION:'version'",
            "        version = DEC:'1'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_ip_ssh",
            "      IP:'ip'",
            "      SSH:'ssh'",
            "      (ip_ssh_version",
            "        VERSION:'version'",
            "        version = DEC:'2'",
            "        NEWLINE:'\\n')))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/cisco_stcapp" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'cisco_stcapp'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_stcapp",
            "      STCAPP:'stcapp'",
            "      (null_rest_of_line",
            "        CCM_GROUP:'ccm-group'",
            "        DEC:'1'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_stcapp",
            "      STCAPP:'stcapp'",
            "      (null_rest_of_line",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_stcapp",
            "      STCAPP:'stcapp'",
            "      (null_rest_of_line",
            "        FEATURE:'feature'",
            "        VARIABLE:'access-code'",
            "        NEWLINE:'\\n')",
            "      PREFIX:'prefix'",
            "      (null_rest_of_line",
            "        ASTERISK:'*'",
            "        NEWLINE:'\\n')",
            "      CALL:'call'",
            "      (null_rest_of_line",
            "        FORWARD:'forward'",
            "        ALL:'all'",
            "        ASTERISK:'*'",
            "        DEC:'42'",
            "        NEWLINE:'\\n')",
            "      CALL:'call'",
            "      (null_rest_of_line",
            "        FORWARD:'forward'",
            "        VARIABLE:'cancel'",
            "        ASTERISK:'*'",
            "        DEC:'43'",
            "        NEWLINE:'\\n')",
            "      PICKUP:'pickup'",
            "      (null_rest_of_line",
            "        GROUP:'group'",
            "        ASTERISK:'*'",
            "        DEC:'9'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_stcapp",
            "      STCAPP:'stcapp'",
            "      (null_rest_of_line",
            "        SUPPLEMENTARY_SERVICES:'supplementary-services'",
            "        NEWLINE:'\\n')",
            "      PORT:'port'",
            "      (null_rest_of_line",
            "        DEC:'2'",
            "        FORWARD_SLASH:'/'",
            "        DEC:'0'",
            "        NEWLINE:'\\n')",
            "      FALLBACK_DN:'fallback-dn'",
            "      (null_rest_of_line",
            "        DEC:'1234567890'",
            "        NEWLINE:'\\n')",
            "      PORT:'port'",
            "      (null_rest_of_line",
            "        DEC:'2'",
            "        FORWARD_SLASH:'/'",
            "        DEC:'1'",
            "        NEWLINE:'\\n')",
            "      FALLBACK_DN:'fallback-dn'",
            "      (null_rest_of_line",
            "        DEC:'1234567890'",
            "        NEWLINE:'\\n')",
            "      PORT:'port'",
            "      (null_rest_of_line",
            "        DEC:'2'",
            "        FORWARD_SLASH:'/'",
            "        DEC:'2'",
            "        NEWLINE:'\\n')",
            "      FALLBACK_DN:'fallback-dn'",
            "      (null_rest_of_line",
            "        DEC:'1234567890'",
            "        NEWLINE:'\\n')",
            "      PORT:'port'",
            "      (null_rest_of_line",
            "        DEC:'2'",
            "        FORWARD_SLASH:'/'",
            "        DEC:'3'",
            "        NEWLINE:'\\n')",
            "      FALLBACK_DN:'fallback-dn'",
            "      (null_rest_of_line",
            "        DEC:'1234567890'",
            "        NEWLINE:'\\n')",
            "      PORT:'port'",
            "      (null_rest_of_line",
            "        DEC:'2'",
            "        FORWARD_SLASH:'/'",
            "        DEC:'4'",
            "        NEWLINE:'\\n')",
            "      FALLBACK_DN:'fallback-dn'",
            "      (null_rest_of_line",
            "        DEC:'1234567890'",
            "        NEWLINE:'\\n')",
            "      PORT:'port'",
            "      (null_rest_of_line",
            "        DEC:'2'",
            "        FORWARD_SLASH:'/'",
            "        DEC:'5'",
            "        NEWLINE:'\\n')",
            "      FALLBACK_DN:'fallback-dn'",
            "      (null_rest_of_line",
            "        DEC:'1234567890'",
            "        NEWLINE:'\\n')",
            "      PORT:'port'",
            "      (null_rest_of_line",
            "        DEC:'2'",
            "        FORWARD_SLASH:'/'",
            "        DEC:'6'",
            "        NEWLINE:'\\n')",
            "      FALLBACK_DN:'fallback-dn'",
            "      (null_rest_of_line",
            "        DEC:'1234567890'",
            "        NEWLINE:'\\n')",
            "      PORT:'port'",
            "      (null_rest_of_line",
            "        DEC:'2'",
            "        FORWARD_SLASH:'/'",
            "        DEC:'7'",
            "        NEWLINE:'\\n')",
            "      FALLBACK_DN:'fallback-dn'",
            "      (null_rest_of_line",
            "        DEC:'1234567890'",
            "        NEWLINE:'\\n')",
            "      PORT:'port'",
            "      (null_rest_of_line",
            "        DEC:'2'",
            "        FORWARD_SLASH:'/'",
            "        DEC:'8'",
            "        NEWLINE:'\\n')",
            "      FALLBACK_DN:'fallback-dn'",
            "      (null_rest_of_line",
            "        DEC:'1234567890'",
            "        NEWLINE:'\\n')",
            "      PORT:'port'",
            "      (null_rest_of_line",
            "        DEC:'2'",
            "        FORWARD_SLASH:'/'",
            "        DEC:'9'",
            "        NEWLINE:'\\n')",
            "      FALLBACK_DN:'fallback-dn'",
            "      (null_rest_of_line",
            "        DEC:'1234567890'",
            "        NEWLINE:'\\n')",
            "      PORT:'port'",
            "      (null_rest_of_line",
            "        DEC:'2'",
            "        FORWARD_SLASH:'/'",
            "        DEC:'10'",
            "        NEWLINE:'\\n')",
            "      FALLBACK_DN:'fallback-dn'",
            "      (null_rest_of_line",
            "        DEC:'1234567890'",
            "        NEWLINE:'\\n')",
            "      PORT:'port'",
            "      (null_rest_of_line",
            "        DEC:'2'",
            "        FORWARD_SLASH:'/'",
            "        DEC:'11'",
            "        NEWLINE:'\\n')",
            "      FALLBACK_DN:'fallback-dn'",
            "      (null_rest_of_line",
            "        DEC:'1234567890'",
            "        NEWLINE:'\\n')",
            "      PORT:'port'",
            "      (null_rest_of_line",
            "        DEC:'2'",
            "        FORWARD_SLASH:'/'",
            "        DEC:'12'",
            "        NEWLINE:'\\n')",
            "      FALLBACK_DN:'fallback-dn'",
            "      (null_rest_of_line",
            "        DEC:'1234567890'",
            "        NEWLINE:'\\n')",
            "      PORT:'port'",
            "      (null_rest_of_line",
            "        DEC:'2'",
            "        FORWARD_SLASH:'/'",
            "        DEC:'13'",
            "        NEWLINE:'\\n')",
            "      FALLBACK_DN:'fallback-dn'",
            "      (null_rest_of_line",
            "        DEC:'1234567890'",
            "        NEWLINE:'\\n')",
            "      PORT:'port'",
            "      (null_rest_of_line",
            "        DEC:'2'",
            "        FORWARD_SLASH:'/'",
            "        DEC:'14'",
            "        NEWLINE:'\\n')",
            "      FALLBACK_DN:'fallback-dn'",
            "      (null_rest_of_line",
            "        DEC:'1234567890'",
            "        NEWLINE:'\\n')",
            "      PORT:'port'",
            "      (null_rest_of_line",
            "        DEC:'2'",
            "        FORWARD_SLASH:'/'",
            "        DEC:'15'",
            "        NEWLINE:'\\n')",
            "      FALLBACK_DN:'fallback-dn'",
            "      (null_rest_of_line",
            "        DEC:'1234567890'",
            "        NEWLINE:'\\n')",
            "      PORT:'port'",
            "      (null_rest_of_line",
            "        DEC:'2'",
            "        FORWARD_SLASH:'/'",
            "        DEC:'16'",
            "        NEWLINE:'\\n')",
            "      FALLBACK_DN:'fallback-dn'",
            "      (null_rest_of_line",
            "        DEC:'1234567890'",
            "        NEWLINE:'\\n')",
            "      PORT:'port'",
            "      (null_rest_of_line",
            "        DEC:'2'",
            "        FORWARD_SLASH:'/'",
            "        DEC:'17'",
            "        NEWLINE:'\\n')",
            "      FALLBACK_DN:'fallback-dn'",
            "      (null_rest_of_line",
            "        DEC:'1234567890'",
            "        NEWLINE:'\\n')",
            "      CPTONE:'cptone'",
            "      (null_rest_of_line",
            "        VARIABLE:'call-waiting'",
            "        VARIABLE:'repetition'",
            "        INTERVAL:'interval'",
            "        DEC:'6'",
            "        NEWLINE:'\\n\\n')))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/cisco_style_acl1" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (extended_access_list_stanza",
            "      IP:'ip'",
            "      ACCESS_LIST:'access-list'",
            "      EXTENDED:'extended'",
            "      name = (variable_aclname",
            "        VARIABLE:'blah')",
            "      NEWLINE:'\\n'",
            "      (extended_access_list_tail",
            "        ala = (access_list_action",
            "          PERMIT:'permit')",
            "        prot = (protocol",
            "          IP:'ip')",
            "        srcipr = (access_list_ip_range",
            "          ANY:'any')",
            "        dstipr = (access_list_ip_range",
            "          ANY:'any')",
            "        NEWLINE:'\\n\\n')))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/cisco_style_acl2" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (standard_access_list_stanza",
            "      ACCESS_LIST:'access-list'",
            "      num = ACL_NUM_STANDARD:'1'",
            "      (standard_access_list_tail",
            "        ala = (access_list_action",
            "          PERMIT:'permit')",
            "        ipr = (access_list_ip_range",
            "          ANY:'any')",
            "        NEWLINE:'\\n\\n')))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/cisco_system" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'cisco_system'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_system",
            "      NO:'no'",
            "      SYSTEM:'system'",
            "      (system_null",
            "        ADMIN_VDC:'admin-vdc'",
            "        (null_rest_of_line",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_system",
            "      NO:'no'",
            "      SYSTEM:'system'",
            "      (system_null",
            "        AUTO_UPGRADE:'auto-upgrade'",
            "        (null_rest_of_line",
            "          VARIABLE:'epld'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_system",
            "      SYSTEM:'system'",
            "      (system_default",
            "        DEFAULT:'default'",
            "        (sd_null",
            "          DCE_MODE:'dce-mode'",
            "          (null_rest_of_line",
            "            EDGE:'edge'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_system",
            "      SYSTEM:'system'",
            "      (system_default",
            "        DEFAULT:'default'",
            "        (sd_null",
            "          DCE_MODE:'dce-mode'",
            "          (null_rest_of_line",
            "            VARIABLE:'off'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_system",
            "      SYSTEM:'system'",
            "      (system_default",
            "        DEFAULT:'default'",
            "        (sd_null",
            "          INTERFACE:'interface'",
            "          (null_rest_of_line",
            "            DEC:'40'  <== mode:M_Interface",
            "            M_Interface_PREFIX:'g'  <== mode:M_Interface",
            "            M_Interface_PREFIX:'auto-negotiation'  <== mode:M_Interface",
            "            NEWLINE:'\\n'  <== mode:M_Interface)))))",
            "  (stanza",
            "    (s_system",
            "      SYSTEM:'system'",
            "      (system_default",
            "        DEFAULT:'default'",
            "        (sd_null",
            "          INTERFACE:'interface'",
            "          (null_rest_of_line",
            "            M_Interface_PREFIX:'congestion'  <== mode:M_Interface",
            "            M_Interface_PREFIX:'mode'  <== mode:M_Interface",
            "            M_Interface_PREFIX:'core'  <== mode:M_Interface",
            "            NEWLINE:'\\n'  <== mode:M_Interface)))))",
            "  (stanza",
            "    (s_system",
            "      SYSTEM:'system'",
            "      (system_default",
            "        DEFAULT:'default'",
            "        (sd_null",
            "          INTERFACE:'interface'",
            "          (null_rest_of_line",
            "            M_Interface_PREFIX:'congestion'  <== mode:M_Interface",
            "            M_Interface_PREFIX:'mode'  <== mode:M_Interface",
            "            M_Interface_PREFIX:'edge'  <== mode:M_Interface",
            "            NEWLINE:'\\n'  <== mode:M_Interface)))))",
            "  (stanza",
            "    (s_system",
            "      SYSTEM:'system'",
            "      (system_default",
            "        DEFAULT:'default'",
            "        (sd_null",
            "          INTERFACE:'interface'",
            "          (null_rest_of_line",
            "            M_Interface_PREFIX:'pause'  <== mode:M_Interface",
            "            M_Interface_PREFIX:'mode'  <== mode:M_Interface",
            "            M_Interface_PREFIX:'core'  <== mode:M_Interface",
            "            NEWLINE:'\\n'  <== mode:M_Interface)))))",
            "  (stanza",
            "    (s_system",
            "      SYSTEM:'system'",
            "      (system_default",
            "        DEFAULT:'default'",
            "        (sd_null",
            "          INTERFACE:'interface'",
            "          (null_rest_of_line",
            "            M_Interface_PREFIX:'pause'  <== mode:M_Interface",
            "            M_Interface_PREFIX:'mode'  <== mode:M_Interface",
            "            M_Interface_PREFIX:'edge'  <== mode:M_Interface",
            "            NEWLINE:'\\n'  <== mode:M_Interface)))))",
            "  (stanza",
            "    (s_system",
            "      NO:'no'",
            "      SYSTEM:'system'",
            "      (system_default",
            "        DEFAULT:'default'",
            "        (sd_null",
            "          INTERFACE:'interface'",
            "          (null_rest_of_line",
            "            M_Interface_PREFIX:'slow-speed'  <== mode:M_Interface",
            "            M_Interface_PREFIX:'mode'  <== mode:M_Interface",
            "            M_Interface_PREFIX:'core'  <== mode:M_Interface",
            "            NEWLINE:'\\n'  <== mode:M_Interface)))))",
            "  (stanza",
            "    (s_system",
            "      NO:'no'",
            "      SYSTEM:'system'",
            "      (system_default",
            "        DEFAULT:'default'",
            "        (sd_null",
            "          INTERFACE:'interface'",
            "          (null_rest_of_line",
            "            M_Interface_PREFIX:'slow-speed'  <== mode:M_Interface",
            "            M_Interface_PREFIX:'mode'  <== mode:M_Interface",
            "            M_Interface_PREFIX:'edge'  <== mode:M_Interface",
            "            NEWLINE:'\\n'  <== mode:M_Interface)))))",
            "  (stanza",
            "    (s_system",
            "      NO:'no'",
            "      SYSTEM:'system'",
            "      (system_default",
            "        DEFAULT:'default'",
            "        (sd_null",
            "          LINK_FAIL:'link-fail'",
            "          (null_rest_of_line",
            "            VARIABLE:'laser-on'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_system",
            "      SYSTEM:'system'",
            "      (system_default",
            "        DEFAULT:'default'",
            "        (sd_switchport",
            "          SWITCHPORT:'switchport'",
            "          (sd_switchport_blank",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_system",
            "      NO:'no'",
            "      SYSTEM:'system'",
            "      (system_default",
            "        DEFAULT:'default'",
            "        (sd_switchport",
            "          SWITCHPORT:'switchport'",
            "          (sd_switchport_null",
            "            FABRICPATH:'fabricpath'",
            "            (null_rest_of_line",
            "              NEWLINE:'\\n'))))))",
            "  (stanza",
            "    (s_system",
            "      NO:'no'",
            "      SYSTEM:'system'",
            "      (system_default",
            "        DEFAULT:'default'",
            "        (sd_switchport",
            "          SWITCHPORT:'switchport'",
            "          (sd_switchport_null",
            "            MONITOR:'monitor'",
            "            (null_rest_of_line",
            "              EXCLUDE:'exclude'",
            "              VARIABLE:'header'",
            "              NEWLINE:'\\n'))))))",
            "  (stanza",
            "    (s_system",
            "      SYSTEM:'system'",
            "      (system_default",
            "        DEFAULT:'default'",
            "        (sd_switchport",
            "          SWITCHPORT:'switchport'",
            "          (sd_switchport_shutdown",
            "            SHUTDOWN:'shutdown'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_system",
            "      SYSTEM:'system'",
            "      (system_null",
            "        FABRIC:'fabric'",
            "        (null_rest_of_line",
            "          NEWLINE:'\\n'))",
            "      (s_system_inner",
            "        (s_system_service_policy",
            "          SERVICE_POLICY:'service-policy'",
            "          TYPE:'type'",
            "          QUEUING:'queuing'",
            "          INPUT:'input'",
            "          policy_map = (variable",
            "            VARIABLE:'POLICY')",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_system",
            "      SYSTEM:'system'",
            "      (system_null",
            "        FABRIC_MODE:'fabric-mode'",
            "        (null_rest_of_line",
            "          VARIABLE:'full-rate'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_system",
            "      SYSTEM:'system'",
            "      (system_null",
            "        FLOWCONTROL:'flowcontrol'",
            "        (null_rest_of_line",
            "          VARIABLE:'bus'",
            "          AUTO:'auto'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_system",
            "      SYSTEM:'system'",
            "      (system_null",
            "        JUMBOMTU:'jumbomtu'",
            "        (null_rest_of_line",
            "          DEC:'9100'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_system",
            "      SYSTEM:'system'",
            "      (system_null",
            "        MODULE_TYPE:'module-type'",
            "        (null_rest_of_line",
            "          VARIABLE:'m1'",
            "          VARIABLE:'f1'",
            "          VARIABLE:'m1xl'",
            "          VARIABLE:'f2'",
            "          VARIABLE:'m2xl'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_system",
            "      SYSTEM:'system'",
            "      (system_null",
            "        MTU:'mtu'",
            "        (null_rest_of_line",
            "          DEC:'9000'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_system",
            "      SYSTEM:'system'",
            "      (system_null",
            "        MTU:'mtu'",
            "        (null_rest_of_line",
            "          ROUTING:'routing'",
            "          DEC:'1500'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_system",
            "      SYSTEM:'system'",
            "      (system_qos",
            "        QOS:'qos'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_system",
            "      SYSTEM:'system'",
            "      (system_null",
            "        ROUTING:'routing'",
            "        (null_rest_of_line",
            "          VARIABLE:'hierarchical'",
            "          VARIABLE:'max-mode'",
            "          VARIABLE:'l3'",
            "          VARIABLE:'64b-alpm'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_system",
            "      SYSTEM:'system'",
            "      (system_null",
            "        ROUTING:'routing'",
            "        (null_rest_of_line",
            "          VARIABLE:'max-mode'",
            "          VARIABLE:'l3'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_system",
            "      SYSTEM:'system'",
            "      (system_null",
            "        URPF:'urpf'",
            "        (null_rest_of_line",
            "          DISABLE:'disable'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_system",
            "      SYSTEM:'system'",
            "      (system_null",
            "        VLAN:'vlan'",
            "        (null_rest_of_line",
            "          DEC:'1025'",
            "          VARIABLE:'reserve'",
            "          NEWLINE:'\\n'))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/cisco_tacacs" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'cisco_tacacs'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_feature",
            "      FEATURE:'feature'",
            "      (variable",
            "        TACACS_PLUS:'tacacs+')",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        NO:'no'",
            "        IP:'ip'",
            "        TACACS:'tacacs'",
            "        SOURCE_INTERFACE:'source-interface'",
            "        NEWLINE:'\\n'  <== mode:M_Interface)))",
            "  (stanza",
            "    (s_ip_tacacs_source_interface",
            "      IP:'ip'",
            "      TACACS:'tacacs'",
            "      SOURCE_INTERFACE:'source-interface'",
            "      iname = (interface_name",
            "        name_prefix_alpha = M_Interface_PREFIX:'loopback'  <== mode:M_Interface",
            "        (range",
            "          (subrange",
            "            low = DEC:'0'  <== mode:M_Interface)))",
            "      NEWLINE:'\\n'  <== mode:M_Interface))",
            "  (stanza",
            "    (s_ip_tacacs_source_interface",
            "      IP:'ip'",
            "      TACACS:'tacacs'",
            "      SOURCE_INTERFACE:'source-interface'",
            "      iname = (interface_name",
            "        name_prefix_alpha = M_Interface_PREFIX:'Loopback'  <== mode:M_Interface",
            "        (range",
            "          (subrange",
            "            low = DEC:'0'  <== mode:M_Interface)))",
            "      NEWLINE:'\\n'  <== mode:M_Interface))",
            "  (stanza",
            "    (s_tacacs_server",
            "      NO:'no'",
            "      TACACS_SERVER:'tacacs-server'",
            "      (ts_common",
            "        (ts_null",
            "          DIRECTED_REQUEST:'directed-request'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_tacacs",
            "      TACACS:'tacacs'",
            "      (t_server",
            "        SERVER:'server'",
            "        hostname = (variable_hostname",
            "          IP_ADDRESS:'1.2.3.4')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_tacacs",
            "      TACACS:'tacacs'",
            "      (t_server",
            "        SERVER:'server'",
            "        hostname = (variable_hostname",
            "          VARIABLE:'example.com')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_tacacs",
            "      TACACS:'tacacs'",
            "      (t_server",
            "        SERVER:'server'",
            "        hostname = (variable_hostname",
            "          VARIABLE:'EACACS')",
            "        NEWLINE:'\\n'",
            "        (t_server_address",
            "          ADDRESS:'address'",
            "          IPV4:'ipv4'",
            "          IP_ADDRESS:'1.2.3.4'",
            "          NEWLINE:'\\n')",
            "        (t_server_null",
            "          SINGLE_CONNECTION:'single-connection'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_tacacs_server",
            "      TACACS_SERVER:'tacacs-server'",
            "      (ts_common",
            "        (ts_null",
            "          DEADTIME:'deadtime'",
            "          (null_rest_of_line",
            "            DEC:'0'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_tacacs_server",
            "      TACACS_SERVER:'tacacs-server'",
            "      (ts_common",
            "        (ts_null",
            "          DIRECTED_REQUEST:'directed-request'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_tacacs_server",
            "      TACACS_SERVER:'tacacs-server'",
            "      (ts_host",
            "        HOST:'host'",
            "        hostname = IP_ADDRESS:'1.2.3.4'",
            "        (null_rest_of_line",
            "          KEY:'key'",
            "          DEC:'7'",
            "          DOUBLE_QUOTE:'\"'",
            "          HELLO:'hello'",
            "          DOUBLE_QUOTE:'\"'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_tacacs_server",
            "      TACACS_SERVER:'tacacs-server'",
            "      (ts_host",
            "        HOST:'host'",
            "        hostname = IP_ADDRESS:'1.2.3.4'",
            "        (null_rest_of_line",
            "          KEY:'key'",
            "          DEC:'7'",
            "          DOUBLE_QUOTE:'\"'",
            "          HELLO:'hello'",
            "          DOUBLE_QUOTE:'\"'",
            "          PORT:'port'",
            "          DEC:'49'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_tacacs_server",
            "      TACACS_SERVER:'tacacs-server'",
            "      (ts_host",
            "        HOST:'host'",
            "        hostname = IP_ADDRESS:'1.2.3.4'",
            "        (null_rest_of_line",
            "          PORT:'port'",
            "          DEC:'49'",
            "          NEWLINE:'\\n')",
            "        (t_key",
            "          KEY:'key'",
            "          DEC:'0'",
            "          (variable_permissive",
            "            HELLO:'hello')",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_tacacs_server",
            "      TACACS_SERVER:'tacacs-server'",
            "      (ts_host",
            "        HOST:'host'",
            "        hostname = IP_ADDRESS:'1.2.3.4'",
            "        (null_rest_of_line",
            "          SINGLE_CONNECTION:'single-connection'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_tacacs_server",
            "      TACACS_SERVER:'tacacs-server'",
            "      (ts_host",
            "        HOST:'host'",
            "        hostname = IP_ADDRESS:'1.2.3.4'",
            "        (null_rest_of_line",
            "          TEST:'test'",
            "          USERNAME:'username'",
            "          TEST:'test'",
            "          PASSWORD:'password'",
            "          TEST:'test'",
            "          VARIABLE:'idle-time'",
            "          DEC:'0'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_tacacs_server",
            "      TACACS_SERVER:'tacacs-server'",
            "      (ts_common",
            "        (ts_null",
            "          KEY:'key'",
            "          (null_rest_of_line",
            "            DEC:'7'",
            "            VARIABLE:'00112233445566778899AABBCCDD'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_tacacs_server",
            "      TACACS_SERVER:'tacacs-server'",
            "      (ts_common",
            "        (ts_null",
            "          RETRANSMIT:'retransmit'",
            "          (null_rest_of_line",
            "            DEC:'5'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_tacacs_server",
            "      TACACS_SERVER:'tacacs-server'",
            "      (ts_common",
            "        (ts_null",
            "          TEST:'test'",
            "          (null_rest_of_line",
            "            USERNAME:'username'",
            "            TEST:'test'",
            "            PASSWORD:'password'",
            "            TEST:'test'",
            "            VARIABLE:'idle-time'",
            "            DEC:'0'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_tacacs_server",
            "      TACACS_SERVER:'tacacs-server'",
            "      (ts_common",
            "        (ts_null",
            "          TIMEOUT:'timeout'",
            "          (null_rest_of_line",
            "            DEC:'5'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_tacacs",
            "      TACACS:'tacacs'",
            "      (t_source_interface",
            "        SOURCE_INTERFACE:'source-interface'",
            "        iname = (interface_name",
            "          name_prefix_alpha = M_Interface_PREFIX:'Loopback'  <== mode:M_Interface",
            "          (range",
            "            (subrange",
            "              low = DEC:'0'  <== mode:M_Interface)))",
            "        VRF:'vrf'  <== mode:M_Interface",
            "        name = (variable",
            "          DEFAULT:'default')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_tacacs",
            "      TACACS:'tacacs'",
            "      (t_server",
            "        SERVER:'server'",
            "        hostname = (variable_hostname",
            "          VARIABLE:'1.example.com')",
            "        NEWLINE:'\\n'",
            "        (t_key",
            "          KEY:'key'",
            "          DEC:'7'",
            "          (variable_permissive",
            "            VARIABLE:'0123456789ABCDEF012345')",
            "          NEWLINE:'\\n')",
            "        (t_server_address",
            "          ADDRESS:'address'",
            "          IPV4:'ipv4'",
            "          IP_ADDRESS:'1.2.3.4'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_tacacs",
            "      TACACS:'tacacs'",
            "      (t_server",
            "        SERVER:'server'",
            "        hostname = (variable_hostname",
            "          VARIABLE:'2.example.com')",
            "        NEWLINE:'\\n'",
            "        (t_server_address",
            "          ADDRESS:'address'",
            "          IPV4:'ipv4'",
            "          IP_ADDRESS:'1.2.3.5'",
            "          NEWLINE:'\\n')",
            "        (t_key",
            "          KEY:'key'",
            "          DEC:'7'",
            "          (variable_permissive",
            "            VARIABLE:'0123456789ABCDEF012346')",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_tacacs",
            "      TACACS:'tacacs'",
            "      (t_server",
            "        SERVER:'server'",
            "        hostname = (variable_hostname",
            "          VARIABLE:'3.example.com')",
            "        NEWLINE:'\\n'",
            "        (t_server_address",
            "          ADDRESS:'address'",
            "          IPV6:'ipv6'",
            "          IPV6_ADDRESS:'dead:beef::1'",
            "          NEWLINE:'\\n')",
            "        (t_key",
            "          KEY:'key'",
            "          DEC:'7'",
            "          (variable_permissive",
            "            VARIABLE:'0123456789ABCDEF012347')",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_tacacs",
            "      TACACS:'tacacs'",
            "      (t_server",
            "        SERVER:'server'",
            "        hostname = (variable_hostname",
            "          VARIABLE:'4.example.com')",
            "        NEWLINE:'\\n'",
            "        (t_server_address",
            "          ADDRESS:'address'",
            "          IPV4:'ipv4'",
            "          IP_ADDRESS:'1.2.3.6'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_tacacs",
            "      TACACS:'tacacs'",
            "      (t_server",
            "        SERVER:'server'",
            "        hostname = (variable_hostname",
            "          VARIABLE:'5.example.com')",
            "        NEWLINE:'\\n'",
            "        (t_server_address",
            "          ADDRESS:'address'",
            "          IPV6:'ipv6'",
            "          IPV6_ADDRESS:'dead:beef::2'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_tacacs",
            "      TACACS:'tacacs'",
            "      (t_server",
            "        SERVER:'server'",
            "        hostname = (variable_hostname",
            "          VARIABLE:'6.example.com')",
            "        NEWLINE:'\\n'",
            "        (t_key",
            "          KEY:'key'",
            "          DEC:'7'",
            "          (variable_permissive",
            "            DEC:'010203040506070809')",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_tacacs",
            "      TACACS:'tacacs'",
            "      (t_server",
            "        SERVER:'server'",
            "        hostname = (variable_hostname",
            "          VARIABLE:'7.example.com')",
            "        NEWLINE:'\\n'",
            "        (t_key",
            "          KEY:'key'",
            "          DEC:'0'",
            "          (variable_permissive",
            "            VARIABLE:'abcd1234')",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_tacacs",
            "      TACACS:'tacacs'",
            "      (t_server",
            "        SERVER:'server'",
            "        hostname = (variable_hostname",
            "          VARIABLE:'8.example.com')",
            "        NEWLINE:'\\n'",
            "        (t_key",
            "          KEY:'key'",
            "          (variable_permissive",
            "            HELLO:'hello'",
            "            COMMA:','",
            "            VARIABLE:'world')",
            "          NEWLINE:'\\n')",
            "        (t_server_null",
            "          TIMEOUT:'timeout'",
            "          (null_rest_of_line",
            "            DEC:'5'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_tacacs_server",
            "      TACACS_SERVER:'tacacs-server'",
            "      (ts_host",
            "        HOST:'host'",
            "        hostname = IP_ADDRESS:'1.2.3.4'",
            "        (null_rest_of_line",
            "          PORT:'port'",
            "          DEC:'123'",
            "          NEWLINE:'\\n')",
            "        (t_key",
            "          KEY:'key'",
            "          DEC:'7'",
            "          (variable_permissive",
            "            VARIABLE:'0123456789ABCD')",
            "          NEWLINE:'\\n'))",
            "      (ts_common",
            "        (ts_null",
            "          TIMEOUT:'timeout'",
            "          (null_rest_of_line",
            "            DEC:'3'",
            "            NEWLINE:'\\n')))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/cisco_track" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'cisco_track'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_track",
            "      TRACK:'track'",
            "      name = (variable",
            "        DEC:'1')",
            "      (track_interface",
            "        INTERFACE:'interface'",
            "        (interface_name",
            "          name_prefix_alpha = M_Interface_PREFIX:'GigabitEthernet'  <== mode:M_Interface",
            "          DEC:'0'  <== mode:M_Interface",
            "          FORWARD_SLASH:'/'  <== mode:M_Interface",
            "          (range",
            "            (subrange",
            "              low = DEC:'0'  <== mode:M_Interface)))",
            "        LINE_PROTOCOL:'line-protocol'  <== mode:M_Interface",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_track",
            "      TRACK:'track'",
            "      name = (variable",
            "        DEC:'2')",
            "      (track_interface",
            "        INTERFACE:'interface'",
            "        (interface_name",
            "          name_prefix_alpha = M_Interface_PREFIX:'GigabitEthernet'  <== mode:M_Interface",
            "          DEC:'0'  <== mode:M_Interface",
            "          FORWARD_SLASH:'/'  <== mode:M_Interface",
            "          (range",
            "            (subrange",
            "              low = DEC:'1'  <== mode:M_Interface)))",
            "        LINE_PROTOCOL:'line-protocol'  <== mode:M_Interface",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_track",
            "      TRACK:'track'",
            "      name = (variable",
            "        DEC:'3')",
            "      (track_list",
            "        LIST:'list'",
            "        (null_rest_of_line",
            "          VARIABLE:'boolean'",
            "          AND:'and'",
            "          NEWLINE:'\\n')",
            "        (track_list_null",
            "          OBJECT:'object'",
            "          (null_rest_of_line",
            "            DEC:'1'",
            "            NEWLINE:'\\n'))",
            "        (track_list_null",
            "          OBJECT:'object'",
            "          (null_rest_of_line",
            "            DEC:'2'",
            "            NEWLINE:'\\n'))",
            "        (track_list_null",
            "          DELAY:'delay'",
            "          (null_rest_of_line",
            "            VARIABLE:'up'",
            "            DEC:'10'",
            "            NEWLINE:'\\n'))",
            "        (track_list_null",
            "          DELAY:'delay'",
            "          (null_rest_of_line",
            "            VARIABLE:'down'",
            "            DEC:'10'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_track",
            "      TRACK:'track'",
            "      name = (variable",
            "        VARIABLE:'IPv6Loopback')",
            "      (track_block",
            "        NEWLINE:'\\n'",
            "        (track_block_null",
            "          TYPE:'type'",
            "          (null_rest_of_line",
            "            LIST:'list'",
            "            VARIABLE:'boolean'",
            "            OR:'or'",
            "            NEWLINE:'\\n')",
            "          (track_block_type_null",
            "            OBJECT:'object'",
            "            (null_rest_of_line",
            "              VARIABLE:'PrimaryRouter'",
            "              NEWLINE:'\\n'))",
            "          (track_block_type_null",
            "            OBJECT:'object'",
            "            (null_rest_of_line",
            "              VARIABLE:'SecondaryRouter'",
            "              NEWLINE:'\\n'))))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/cisco_username" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'cisco_username'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_username",
            "      USERNAME:'username'",
            "      user = (variable",
            "        ADMIN:'admin')",
            "      (u",
            "        (u_password",
            "          PASSWORD:'password'",
            "          (up_cisco",
            "            DEC:'5'",
            "            (up_cisco_tail",
            "              pass = (variable_secret",
            "                VARIABLE:'SOMEPASSWORD1')))))",
            "      (u",
            "        (u_role",
            "          ROLE:'role'",
            "          role = (variable",
            "            VARIABLE:'network-admin')))",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_username",
            "      USERNAME:'username'",
            "      user = (variable",
            "        VARIABLE:'demo')",
            "      (u",
            "        (u_privilege",
            "          PRIVILEGE:'privilege'",
            "          privilege = (variable",
            "            DEC:'15')))",
            "      (u",
            "        (u_nohangup",
            "          NOHANGUP:'nohangup'))",
            "      (u",
            "        (u_password",
            "          PASSWORD:'password'",
            "          (up_cisco",
            "            DEC:'0'",
            "            (up_cisco_tail",
            "              pass = (variable_secret",
            "                VARIABLE:'demo')))))",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_username",
            "      USERNAME:'username'",
            "      user = (variable",
            "        NETWORK:'network')",
            "      (u",
            "        (u_password",
            "          PASSWORD:'password'",
            "          (up_cisco",
            "            DEC:'5'",
            "            (up_cisco_tail",
            "              pass = (variable_secret",
            "                VARIABLE:'SOMEPASSWORD2')))))",
            "      (u",
            "        (u_role",
            "          ROLE:'role'",
            "          role = (variable",
            "            VARIABLE:'network-operator')))",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_username",
            "      USERNAME:'username'",
            "      user = (variable",
            "        NETWORK:'network')",
            "      (u",
            "        (u_passphrase",
            "          PASSPHRASE:'passphrase'",
            "          LIFETIME:'lifetime'",
            "          lifetime = DEC:'12345'",
            "          WARNTIME:'warntime'",
            "          warntime = DEC:'123'",
            "          GRACETIME:'gracetime'",
            "          gracetime = DEC:'12'))",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_username",
            "      USERNAME:'username'",
            "      user = (variable",
            "        NETWORK:'network')",
            "      (u",
            "        (u_role",
            "          ROLE:'role'",
            "          role = (variable",
            "            VARIABLE:'network-admin')))",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_username",
            "      USERNAME:'username'",
            "      user = (variable",
            "        SHA:'sha')",
            "      (u",
            "        (u_privilege",
            "          PRIVILEGE:'privilege'",
            "          privilege = (variable",
            "            DEC:'15')))",
            "      (u",
            "        (u_password",
            "          SECRET:'secret'",
            "          (up_arista_md5",
            "            DEC:'5'",
            "            pass = MD5_ARISTA:'$1$pdQG$60trnJU5CpHjXSffvKXzd.')))",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_username",
            "      USERNAME:'username'",
            "      user = (variable",
            "        VARIABLE:'user1')",
            "      (u",
            "        (u_password",
            "          PASSWORD:'password'",
            "          (up_cisco",
            "            (up_cisco_tail",
            "              pass = (variable_secret",
            "                VARIABLE:'blah')))))",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_username",
            "      USERNAME:'username'",
            "      user = (variable",
            "        VARIABLE:'user2')",
            "      (u",
            "        (u_password",
            "          NOPASSWORD:'nopassword'))",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_username",
            "      USERNAME:'username'",
            "      user = (variable",
            "        VARIABLE:'asa-user1')",
            "      (u",
            "        (u_password",
            "          PASSWORD:'password'",
            "          (up_cisco",
            "            (up_cisco_tail",
            "              pass = (variable_secret",
            "                VARIABLE:'PASSWORD1')))))",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_username",
            "      USERNAME:'username'",
            "      user = (variable",
            "        VARIABLE:'asa-user2')",
            "      (u",
            "        (u_password",
            "          PASSWORD:'password'",
            "          (up_cisco",
            "            (up_cisco_tail",
            "              pass = (variable_secret",
            "                VARIABLE:'PASSWORD2')",
            "              ENCRYPTED:'encrypted'))))",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_username",
            "      USERNAME:'username'",
            "      user = (variable",
            "        VARIABLE:'asa-user3')",
            "      (u",
            "        (u_password",
            "          PASSWORD:'password'",
            "          (up_cisco",
            "            (up_cisco_tail",
            "              pass = (variable_secret",
            "                VARIABLE:'PASSWORD3')",
            "              MSCHAP:'mschap'))))",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_username",
            "      USERNAME:'username'",
            "      user = (variable",
            "        VARIABLE:'asa-user4')",
            "      (u",
            "        (u_password",
            "          PASSWORD:'password'",
            "          (up_cisco",
            "            (up_cisco_tail",
            "              pass = (variable_secret",
            "                VARIABLE:'PASSWORD4')",
            "              NT_ENCRYPTED:'nt-encrypted'))))",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_username",
            "      USERNAME:'username'",
            "      user = (variable",
            "        VARIABLE:'asa-user5')",
            "      (u",
            "        (u_password",
            "          PASSWORD:'password'",
            "          (up_cisco",
            "            (up_cisco_tail",
            "              pass = (variable_secret",
            "                VARIABLE:'PASSWORD5')",
            "              PBKDF2:'pbkdf2'))))",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_username",
            "      USERNAME:'username'",
            "      user = (variable",
            "        VARIABLE:'asa-user1')",
            "      (u",
            "        (u_password",
            "          PASSWORD:'password'",
            "          (up_cisco",
            "            (up_cisco_tail",
            "              pass = (variable_secret",
            "                VARIABLE:'PASSWORD6')",
            "              ENCRYPTED:'encrypted'))))",
            "      (u",
            "        (u_privilege",
            "          PRIVILEGE:'privilege'",
            "          privilege = (variable",
            "            DEC:'0')))",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_username",
            "      USERNAME:'username'",
            "      user = (variable",
            "        VARIABLE:'abc')",
            "      NEWLINE:'\\n'",
            "      (u",
            "        (u_role",
            "          GROUP:'group'",
            "          role = (variable",
            "            VARIABLE:'def')))",
            "      NEWLINE:'\\n'",
            "      (u",
            "        (u_password",
            "          SECRET:'secret'",
            "          (up_arista_md5",
            "            DEC:'5'",
            "            pass = MD5_ARISTA:'$1$aaaa$bbbbbbbbbbbbbbbbbbbbbb')))",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_username_attributes",
            "      USERNAME:'username'",
            "      user = (variable",
            "        VARIABLE:'rancid')",
            "      ATTRIBUTES:'attributes'",
            "      NEWLINE:'\\n'",
            "      (ua_null",
            "        VPN_GROUP_POLICY:'vpn-group-policy'",
            "        (null_rest_of_line",
            "          VARIABLE:'GroupPolicy_NOC-VPN'",
            "          NEWLINE:'\\n'))",
            "      (ua_null",
            "        GROUP_LOCK:'group-lock'",
            "        (null_rest_of_line",
            "          VARIABLE:'value'",
            "          VARIABLE:'NOC-VPN'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_username",
            "      USERNAME:'username'",
            "      user = (variable",
            "        VARIABLE:'bob1')",
            "      (u",
            "        (u_password",
            "          PASSWORD:'password'",
            "          (up_cisco",
            "            DEC:'1'",
            "            (up_cisco_tail",
            "              pass = (variable_secret",
            "                DEC:'1234')))))",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_username",
            "      USERNAME:'username'",
            "      user = (variable",
            "        VARIABLE:'bob2')",
            "      (u",
            "        (u_privilege",
            "          PRIVILEGE:'privilege'",
            "          privilege = (variable",
            "            DEC:'1')))",
            "      (u",
            "        (u_password",
            "          PASSWORD:'password'",
            "          (up_cisco",
            "            DEC:'1'",
            "            (up_cisco_tail",
            "              pass = (variable_secret",
            "                DEC:'1234')))))",
            "      NEWLINE:'\\n\\n'))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/cisco_username_without_password" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'cisco_username_without_password'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_username",
            "      USERNAME:'username'",
            "      user = (variable",
            "        VARIABLE:'foobar')",
            "      (u",
            "        (u_role",
            "          ROLE:'role'",
            "          role = (variable",
            "            VARIABLE:'bloop')))",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_username",
            "      USERNAME:'username'",
            "      user = (variable",
            "        VARIABLE:'barfoo')",
            "      (u",
            "        (u_password",
            "          PASSWORD:'password'",
            "          (up_cisco",
            "            DEC:'1'",
            "            (up_cisco_tail",
            "              pass = (variable_secret",
            "                VARIABLE:'blah')))))",
            "      (u",
            "        (u_role",
            "          ROLE:'role'",
            "          role = (variable",
            "            VARIABLE:'bloop')))",
            "      NEWLINE:'\\n'))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/cisco_vdc" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'cisco_vdc'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_null",
            "      (null_block",
            "        VDC:'vdc'",
            "        (null_rest_of_line",
            "          VARIABLE:'combined-hostname'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_null",
            "      (null_block",
            "        VDC:'vdc'",
            "        (null_rest_of_line",
            "          VARIABLE:'cisco_vdc'",
            "          ID:'id'",
            "          DEC:'1'",
            "          NEWLINE:'\\n')",
            "        (null_inner",
            "          LIMIT_RESOURCE:'limit-resource'",
            "          (null_rest_of_line",
            "            MODULE_TYPE:'module-type'",
            "            VARIABLE:'f3'",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          CPU_SHARE:'cpu-share'",
            "          (null_rest_of_line",
            "            DEC:'5'",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          HA_POLICY:'ha-policy'",
            "          (null_rest_of_line",
            "            VARIABLE:'single-sup'",
            "            RELOAD:'reload'",
            "            VARIABLE:'dual-sup'",
            "            VARIABLE:'switchover'",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          ALLOCATE:'allocate'",
            "          (null_rest_of_line",
            "            INTERFACE:'interface'",
            "            M_Interface_PREFIX:'Ethernet'  <== mode:M_Interface",
            "            DEC:'1'  <== mode:M_Interface",
            "            FORWARD_SLASH:'/'  <== mode:M_Interface",
            "            DEC:'1'  <== mode:M_Interface",
            "            DASH:'-'  <== mode:M_Interface",
            "            DEC:'24'  <== mode:M_Interface",
            "            NEWLINE:'\\n'  <== mode:M_Interface))",
            "        (null_inner",
            "          ALLOCATE:'allocate'",
            "          (null_rest_of_line",
            "            INTERFACE:'interface'",
            "            M_Interface_PREFIX:'Ethernet'  <== mode:M_Interface",
            "            DEC:'2'  <== mode:M_Interface",
            "            FORWARD_SLASH:'/'  <== mode:M_Interface",
            "            DEC:'1'  <== mode:M_Interface",
            "            DASH:'-'  <== mode:M_Interface",
            "            DEC:'24'  <== mode:M_Interface",
            "            NEWLINE:'\\n'  <== mode:M_Interface))",
            "        (null_inner",
            "          LIMIT_RESOURCE:'limit-resource'",
            "          (null_rest_of_line",
            "            VLAN:'vlan'",
            "            MINIMUM:'minimum'",
            "            DEC:'16'",
            "            MAXIMUM:'maximum'",
            "            DEC:'4094'",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          LIMIT_RESOURCE:'limit-resource'",
            "          (null_rest_of_line",
            "            VARIABLE:'monitor-session-erspan-dst'",
            "            MINIMUM:'minimum'",
            "            DEC:'0'",
            "            MAXIMUM:'maximum'",
            "            DEC:'23'",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          LIMIT_RESOURCE:'limit-resource'",
            "          (null_rest_of_line",
            "            VRF:'vrf'",
            "            MINIMUM:'minimum'",
            "            DEC:'2'",
            "            MAXIMUM:'maximum'",
            "            DEC:'4096'",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          LIMIT_RESOURCE:'limit-resource'",
            "          (null_rest_of_line",
            "            PORT_CHANNEL:'port-channel'",
            "            MINIMUM:'minimum'",
            "            DEC:'0'",
            "            MAXIMUM:'maximum'",
            "            DEC:'768'",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          LIMIT_RESOURCE:'limit-resource'",
            "          (null_rest_of_line",
            "            VARIABLE:'u4route-mem'",
            "            MINIMUM:'minimum'",
            "            DEC:'96'",
            "            MAXIMUM:'maximum'",
            "            DEC:'96'",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          LIMIT_RESOURCE:'limit-resource'",
            "          (null_rest_of_line",
            "            VARIABLE:'u6route-mem'",
            "            MINIMUM:'minimum'",
            "            DEC:'24'",
            "            MAXIMUM:'maximum'",
            "            DEC:'24'",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          LIMIT_RESOURCE:'limit-resource'",
            "          (null_rest_of_line",
            "            VARIABLE:'m4route-mem'",
            "            MINIMUM:'minimum'",
            "            DEC:'58'",
            "            MAXIMUM:'maximum'",
            "            DEC:'58'",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          LIMIT_RESOURCE:'limit-resource'",
            "          (null_rest_of_line",
            "            VARIABLE:'m6route-mem'",
            "            MINIMUM:'minimum'",
            "            DEC:'8'",
            "            MAXIMUM:'maximum'",
            "            DEC:'8'",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          LIMIT_RESOURCE:'limit-resource'",
            "          (null_rest_of_line",
            "            VARIABLE:'monitor-session-inband-src'",
            "            MINIMUM:'minimum'",
            "            DEC:'0'",
            "            MAXIMUM:'maximum'",
            "            DEC:'1'",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          LIMIT_RESOURCE:'limit-resource'",
            "          (null_rest_of_line",
            "            VARIABLE:'anycast_bundleid'",
            "            MINIMUM:'minimum'",
            "            DEC:'0'",
            "            MAXIMUM:'maximum'",
            "            DEC:'16'",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          LIMIT_RESOURCE:'limit-resource'",
            "          (null_rest_of_line",
            "            VARIABLE:'monitor-session-extended'",
            "            MINIMUM:'minimum'",
            "            DEC:'0'",
            "            MAXIMUM:'maximum'",
            "            DEC:'16'",
            "            NEWLINE:'\\n\\n\\n')))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/cisco_vlan" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'cisco_vlan'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_vlan_cisco",
            "      NO:'no'",
            "      VLAN:'vlan'",
            "      DEC:'1'",
            "      (null_rest_of_line",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_vlan_cisco",
            "      VLAN:'vlan'",
            "      DEC:'2'",
            "      (null_rest_of_line",
            "        NEWLINE:'\\n')",
            "      (vlan_null",
            "        NAME:'name'",
            "        (null_rest_of_line",
            "          VARIABLE:'myfavoritevlan'  <== mode:M_Name",
            "          NEWLINE:'\\n'))",
            "      (vlan_null",
            "        TRUNK:'trunk'",
            "        (null_rest_of_line",
            "          GROUP:'group'",
            "          VARIABLE:'elephants'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_vlan_cisco",
            "      VLAN:'vlan'",
            "      DEC:'396'",
            "      (null_rest_of_line",
            "        NAME:'name'",
            "        VARIABLE:'grgrgrgrgr'  <== mode:M_Name",
            "        NEWLINE:'\\n')",
            "      (vlan_null",
            "        MTU:'mtu'",
            "        (null_rest_of_line",
            "          DEC:'5000'",
            "          NEWLINE:'\\n'))",
            "      (vlan_null",
            "        TAGGED:'tagged'",
            "        (null_rest_of_line",
            "          VARIABLE:'ethe'",
            "          DEC:'1'",
            "          FORWARD_SLASH:'/'",
            "          DEC:'2'",
            "          NEWLINE:'\\n'))",
            "      (vlan_null",
            "        TB_VLAN1:'tb-vlan1'",
            "        (null_rest_of_line",
            "          DEC:'1002'",
            "          NEWLINE:'\\n'))",
            "      (vlan_null",
            "        TB_VLAN2:'tb-vlan2'",
            "        (null_rest_of_line",
            "          DEC:'1003'",
            "          NEWLINE:'\\n'))",
            "      (vlan_null",
            "        STATE:'state'",
            "        (null_rest_of_line",
            "          ACTIVE:'active'",
            "          NEWLINE:'\\n'))",
            "      (vlan_null",
            "        PRIORITY:'priority'",
            "        (null_rest_of_line",
            "          DEC:'2'",
            "          NEWLINE:'\\n'))",
            "      (vlan_null",
            "        BRIDGE:'bridge'",
            "        (null_rest_of_line",
            "          DEC:'1'",
            "          NEWLINE:'\\n'))",
            "      (vlan_null",
            "        STP:'stp'",
            "        (null_rest_of_line",
            "          TYPE:'type'",
            "          VARIABLE:'ieee'",
            "          NEWLINE:'\\n'))",
            "      (vlan_null",
            "        PRIORITY:'priority'",
            "        (null_rest_of_line",
            "          FORCE:'force'",
            "          NEWLINE:'\\n'))",
            "      (vlan_null",
            "        ROUTER_INTERFACE:'router-interface'",
            "        (null_rest_of_line",
            "          VARIABLE:'ve'",
            "          DEC:'396'",
            "          NEWLINE:'\\n'))",
            "      (vlan_null",
            "        SHUTDOWN:'shutdown'",
            "        (null_rest_of_line",
            "          NEWLINE:'\\n'))",
            "      (vlan_null",
            "        NO:'no'",
            "        SPANNING_TREE:'spanning-tree'",
            "        (null_rest_of_line",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_null",
            "      (null_block",
            "        VLAN:'vlan'",
            "        DOT1Q:'dot1Q'",
            "        (null_rest_of_line",
            "          TAG:'tag'",
            "          NATIVE:'native'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_null",
            "      (null_block",
            "        NO:'no'",
            "        VLAN:'vlan'",
            "        DOT1Q:'dot1Q'",
            "        (null_rest_of_line",
            "          TAG:'tag'",
            "          NATIVE:'native'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_vlan_cisco",
            "      VLAN:'vlan'",
            "      DEC:'1054'",
            "      (null_rest_of_line",
            "        NAME:'name'",
            "        VARIABLE:'fuiwehguiowhgoiuw'  <== mode:M_Name",
            "        NEWLINE:'\\n')",
            "      (vlan_null",
            "        NAME:'name'",
            "        (null_rest_of_line",
            "          VARIABLE:'SysEng.Fusion'  <== mode:M_Name",
            "          NEWLINE:'\\n'))",
            "      (vlan_null",
            "        BACKUPCRF:'backupcrf'",
            "        (null_rest_of_line",
            "          ENABLE:'enable'",
            "          NEWLINE:'\\n'))",
            "      (vlan_null",
            "        MEDIA:'media'",
            "        (null_rest_of_line",
            "          VARIABLE:'fddi'",
            "          NEWLINE:'\\n'))",
            "      (vlan_null",
            "        PARENT:'parent'",
            "        (null_rest_of_line",
            "          DEC:'1005'",
            "          NEWLINE:'\\n'))",
            "      (vlan_null",
            "        PRIVATE_VLAN:'private-vlan'",
            "        (null_rest_of_line",
            "          COMMUNITY:'community'",
            "          NEWLINE:'\\n'))",
            "      (vlan_null",
            "        REMOTE_SPAN:'remote-span'",
            "        (null_rest_of_line",
            "          NEWLINE:'\\n'))",
            "      (vlan_null",
            "        TAGGED:'tagged'",
            "        (null_rest_of_line",
            "          VARIABLE:'ethe'",
            "          DEC:'5'",
            "          FORWARD_SLASH:'/'",
            "          DEC:'1'",
            "          NEWLINE:'\\n'))",
            "      (vlan_null",
            "        TAGGED:'tagged'",
            "        (null_rest_of_line",
            "          VARIABLE:'ethe'",
            "          DEC:'15'",
            "          FORWARD_SLASH:'/'",
            "          DEC:'2'",
            "          NEWLINE:'\\n'))",
            "      (vlan_null",
            "        NO:'no'",
            "        UNTAGGED:'untagged'",
            "        (null_rest_of_line",
            "          VARIABLE:'e'",
            "          DEC:'1'",
            "          FORWARD_SLASH:'/'",
            "          DEC:'1'",
            "          VARIABLE:'e'",
            "          DEC:'5'",
            "          FORWARD_SLASH:'/'",
            "          DEC:'2'",
            "          VARIABLE:'to'",
            "          DEC:'5'",
            "          FORWARD_SLASH:'/'",
            "          DEC:'7'",
            "          VARIABLE:'e'",
            "          DEC:'6'",
            "          FORWARD_SLASH:'/'",
            "          DEC:'1'",
            "          VARIABLE:'to'",
            "          DEC:'6'",
            "          FORWARD_SLASH:'/'",
            "          DEC:'2'",
            "          NEWLINE:'\\n'))",
            "      (vlan_null",
            "        NO:'no'",
            "        MULTICAST:'multicast'",
            "        (null_rest_of_line",
            "          PASSIVE:'passive'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_null",
            "      (null_block",
            "        TRANSPARENT_HW_FLOODING:'transparent-hw-flooding'",
            "        (null_rest_of_line",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_vlan_cisco",
            "      VLAN:'vlan'",
            "      ACCESS_MAP:'access-map'",
            "      (null_rest_of_line",
            "        VARIABLE:'aaaaaaaaaaaaaa'",
            "        NEWLINE:'\\n')",
            "      (vlan_null",
            "        MATCH:'match'",
            "        (null_rest_of_line",
            "          IP:'ip'",
            "          ADDRESS:'address'",
            "          VARIABLE:'bbbbbbbbbbb'",
            "          NEWLINE:'\\n'))",
            "      (vlan_null",
            "        ACTION:'action'",
            "        (null_rest_of_line",
            "          FORWARD:'forward'",
            "          NEWLINE:'\\n'))",
            "      (vlan_null",
            "        STATISTICS:'statistics'",
            "        (null_rest_of_line",
            "          VARIABLE:'per-entry'",
            "          NEWLINE:'\\n'))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/cisco_voice" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'cisco_voice'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_application",
            "      APPLICATION:'application'",
            "      NEWLINE:'\\n'",
            "      SERVICE:'service'",
            "      name = (variable",
            "        VARIABLE:'dsapp')",
            "      (null_rest_of_line",
            "        NEWLINE:'\\n')",
            "      PARAM:'param'",
            "      (null_rest_of_line",
            "        VARIABLE:'disc-toggle-time'",
            "        DEC:'15'",
            "        NEWLINE:'\\n')",
            "      PARAM:'param'",
            "      (null_rest_of_line",
            "        VARIABLE:'callWaiting'",
            "        VARIABLE:'TRUE'",
            "        NEWLINE:'\\n')",
            "      PARAM:'param'",
            "      (null_rest_of_line",
            "        VARIABLE:'callConference'",
            "        VARIABLE:'TRUE'",
            "        NEWLINE:'\\n')",
            "      PARAM:'param'",
            "      (null_rest_of_line",
            "        VARIABLE:'blind-xfer-wait-time'",
            "        DEC:'10'",
            "        NEWLINE:'\\n')",
            "      PARAM:'param'",
            "      (null_rest_of_line",
            "        VARIABLE:'callTransfer'",
            "        VARIABLE:'TRUE'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_application",
            "      APPLICATION:'application'",
            "      NEWLINE:'\\n'",
            "      SERVICE:'service'",
            "      (variable",
            "        VARIABLE:'something')",
            "      (null_rest_of_line",
            "        HTTP:'http'",
            "        COLON:':'",
            "        VARIABLE:'//some.url/some.page'",
            "        NEWLINE:'\\n')",
            "      GLOBAL:'global'",
            "      NEWLINE:'\\n'",
            "      SERVICE:'service'",
            "      name = (variable",
            "        VARIABLE:'alternate')",
            "      (null_rest_of_line",
            "        VARIABLE:'Default'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_call_manager_fallback",
            "      CALL_MANAGER_FALLBACK:'call-manager-fallback'",
            "      NEWLINE:'\\n'",
            "      (cmf_null",
            "        LIMIT_DN:'limit-dn'",
            "        (null_rest_of_line",
            "          DEC:'7960'",
            "          DEC:'2'",
            "          NEWLINE:'\\n'))",
            "      (cmf_null",
            "        IP:'ip'",
            "        (null_rest_of_line",
            "          SOURCE_ADDRESS:'source-address'",
            "          IP_ADDRESS:'10.48.80.9'",
            "          PORT:'port'",
            "          DEC:'2000'",
            "          NEWLINE:'\\n'))",
            "      (cmf_null",
            "        MAX_EPHONES:'max-ephones'",
            "        (null_rest_of_line",
            "          DEC:'10'",
            "          NEWLINE:'\\n'))",
            "      (cmf_null",
            "        MAX_DN:'max-dn'",
            "        (null_rest_of_line",
            "          DEC:'32'",
            "          NEWLINE:'\\n'))",
            "      (cmf_null",
            "        DIALPLAN_PATTERN:'dialplan-pattern'",
            "        (null_rest_of_line",
            "          DEC:'1'",
            "          DEC:'704'",
            "          PERIOD:'.'",
            "          PERIOD:'.'",
            "          PERIOD:'.'",
            "          PERIOD:'.'",
            "          VARIABLE:'extension-length'",
            "          DEC:'4'",
            "          NEWLINE:'\\n'))",
            "      (cmf_null",
            "        KEEPALIVE:'keepalive'",
            "        (null_rest_of_line",
            "          DEC:'20'",
            "          NEWLINE:'\\n'))",
            "      (cmf_null",
            "        DEFAULT_DESTINATION:'default-destination'",
            "        (null_rest_of_line",
            "          DEC:'5002'",
            "          NEWLINE:'\\n'))",
            "      (cmf_null",
            "        ALIAS:'alias'",
            "        (null_rest_of_line",
            "          VARIABLE:'1'  <== mode:M_Alias",
            "          DEC:'5003'",
            "          VARIABLE:'to'",
            "          DEC:'5002'",
            "          NEWLINE:'\\n'))",
            "      (cmf_null",
            "        CALL_FORWARD:'call-forward'",
            "        (null_rest_of_line",
            "          VARIABLE:'busy'",
            "          DEC:'5002'",
            "          NEWLINE:'\\n'))",
            "      (cmf_null",
            "        CALL_FORWARD:'call-forward'",
            "        (null_rest_of_line",
            "          VARIABLE:'noan'",
            "          DEC:'5002'",
            "          TIMEOUT:'timeout'",
            "          DEC:'12'",
            "          NEWLINE:'\\n'))",
            "      (cmf_null",
            "        TIME_FORMAT:'time-format'",
            "        (null_rest_of_line",
            "          DEC:'24'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        DIAL_CONTROL_MIB:'dial-control-mib'",
            "        VARIABLE:'retain-timer'",
            "        DEC:'1440'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        DIAL_CONTROL_MIB:'dial-control-mib'",
            "        VARIABLE:'max-size'",
            "        DEC:'1200'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_dial_peer",
            "      DIAL_PEER:'dial-peer'",
            "      (null_rest_of_line",
            "        VOICE:'voice'",
            "        DEC:'1'",
            "        VOIP:'voip'",
            "        NEWLINE:'\\n')",
            "      CALL_BLOCK:'call-block'",
            "      (null_rest_of_line",
            "        TRANSLATION_PROFILE:'translation-profile'",
            "        INCOMING:'incoming'",
            "        VARIABLE:'blocked'",
            "        NEWLINE:'\\n')",
            "      CODEC:'codec'",
            "      (null_rest_of_line",
            "        VARIABLE:'g711ulaw'",
            "        NEWLINE:'\\n')",
            "      CODEC:'codec'",
            "      (null_rest_of_line",
            "        VARIABLE:'transparent'",
            "        NEWLINE:'\\n')",
            "      DESCRIPTION:'description'",
            "      (null_rest_of_line",
            "        RAW_TEXT:' oigjaiowfjiofjweiofjowe'  <== mode:M_Description",
            "        NEWLINE:'\\n'  <== mode:M_Description)",
            "      DESTINATION_PATTERN:'destination-pattern'",
            "      (null_rest_of_line",
            "        VARIABLE:'.T'",
            "        NEWLINE:'\\n')",
            "      DIRECT_INWARD_DIAL:'direct-inward-dial'",
            "      (null_rest_of_line",
            "        NEWLINE:'\\n')",
            "      DTMF_RELAY:'dtmf-relay'",
            "      (null_rest_of_line",
            "        VARIABLE:'rtp-nte'",
            "        NEWLINE:'\\n')",
            "      FAX:'fax'",
            "      (null_rest_of_line",
            "        PROTOCOL:'protocol'",
            "        VARIABLE:'t38'",
            "        VERSION:'version'",
            "        DEC:'0'",
            "        VARIABLE:'ls-redundancy'",
            "        DEC:'0'",
            "        VARIABLE:'hs-redundancy'",
            "        DEC:'0'",
            "        FALLBACK:'fallback'",
            "        NONE:'none'",
            "        NEWLINE:'\\n')",
            "      FORWARD_DIGITS:'forward-digits'",
            "      (null_rest_of_line",
            "        ALL:'all'",
            "        NEWLINE:'\\n')",
            "      INCOMING:'incoming'",
            "      (null_rest_of_line",
            "        VARIABLE:'called-number'",
            "        VARIABLE:'+12223334444.T'",
            "        NEWLINE:'\\n')",
            "      INCOMING:'incoming'",
            "      (null_rest_of_line",
            "        VARIABLE:'from-vide'",
            "        NEWLINE:'\\n')",
            "      IP:'ip'",
            "      QOS:'qos'",
            "      (null_rest_of_line",
            "        DSCP:'dscp'",
            "        CS3:'cs3'",
            "        SIGNALING:'signaling'",
            "        NEWLINE:'\\n')",
            "      MEDIA:'media'",
            "      (null_rest_of_line",
            "        VARIABLE:'flow-around'",
            "        NEWLINE:'\\n')",
            "      PREFERENCE:'preference'",
            "      (null_rest_of_line",
            "        DEC:'1'",
            "        NEWLINE:'\\n')",
            "      PREFIX:'prefix'",
            "      (null_rest_of_line",
            "        DEC:'08'",
            "        NEWLINE:'\\n')",
            "      PROGRESS_IND:'progress_ind'",
            "      (null_rest_of_line",
            "        SETUP:'setup'",
            "        ENABLE:'enable'",
            "        DEC:'3'",
            "        NEWLINE:'\\n')",
            "      SESSION:'session'",
            "      (null_rest_of_line",
            "        PROTOCOL:'protocol'",
            "        VARIABLE:'sipv2'",
            "        NEWLINE:'\\n')",
            "      SESSION:'session'",
            "      (null_rest_of_line",
            "        VARIABLE:'target'",
            "        IPV4:'ipv4'",
            "        COLON:':'",
            "        IP_ADDRESS:'1.2.3.4'",
            "        NEWLINE:'\\n')",
            "      SESSION:'session'",
            "      (null_rest_of_line",
            "        VARIABLE:'target'",
            "        VARIABLE:'ras'",
            "        NEWLINE:'\\n')",
            "      SESSION:'session'",
            "      (null_rest_of_line",
            "        TRANSPORT:'transport'",
            "        UDP:'udp'",
            "        NEWLINE:'\\n')",
            "      SHUTDOWN:'shutdown'",
            "      (null_rest_of_line",
            "        NEWLINE:'\\n')",
            "      SIGNALING:'signaling'",
            "      (null_rest_of_line",
            "        FORWARD:'forward'",
            "        VARIABLE:'unconditional'",
            "        NEWLINE:'\\n')",
            "      TRANSLATION_PROFILE:'translation-profile'",
            "      (null_rest_of_line",
            "        NEWLINE:'\\n')",
            "      TRANSLATION_PROFILE:'translation-profile'",
            "      (null_rest_of_line",
            "        INCOMING:'incoming'",
            "        VARIABLE:'from-vide'",
            "        NEWLINE:'\\n')",
            "      NO:'no'",
            "      VAD:'vad'",
            "      (null_rest_of_line",
            "        NEWLINE:'\\n')",
            "      VOICE_CLASS:'voice-class'",
            "      (null_rest_of_line",
            "        CODEC:'codec'",
            "        DEC:'2'",
            "        NEWLINE:'\\n')",
            "      VOICE_CLASS:'voice-class'",
            "      (null_rest_of_line",
            "        SIP:'sip'",
            "        VARIABLE:'options-keepalive'",
            "        NEWLINE:'\\n')",
            "      VOICE_CLASS:'voice-class'",
            "      (null_rest_of_line",
            "        SIP:'sip'",
            "        BIND:'bind'",
            "        CONTROL:'control'",
            "        SOURCE_INTERFACE:'source-interface'",
            "        M_Interface_PREFIX:'GigabitEthernet'  <== mode:M_Interface",
            "        DEC:'0'  <== mode:M_Interface",
            "        FORWARD_SLASH:'/'  <== mode:M_Interface",
            "        DEC:'1'  <== mode:M_Interface",
            "        NEWLINE:'\\n'  <== mode:M_Interface)",
            "      VOICE_CLASS:'voice-class'",
            "      (null_rest_of_line",
            "        SIP:'sip'",
            "        BIND:'bind'",
            "        MEDIA:'media'",
            "        SOURCE_INTERFACE:'source-interface'",
            "        M_Interface_PREFIX:'GigabitEthernet'  <== mode:M_Interface",
            "        DEC:'0'  <== mode:M_Interface",
            "        FORWARD_SLASH:'/'  <== mode:M_Interface",
            "        DEC:'1'  <== mode:M_Interface",
            "        NEWLINE:'\\n'  <== mode:M_Interface)))",
            "  (stanza",
            "    (s_sip_ua",
            "      SIP_UA:'sip-ua'",
            "      NEWLINE:'\\n'",
            "      (sip_ua_null",
            "        CONNECTION_REUSE:'connection-reuse'",
            "        (null_rest_of_line",
            "          NEWLINE:'\\n'))",
            "      (sip_ua_null",
            "        RETRY:'retry'",
            "        (null_rest_of_line",
            "          VARIABLE:'bye'",
            "          DEC:'2'",
            "          NEWLINE:'\\n'))",
            "      (sip_ua_null",
            "        RETRY:'retry'",
            "        (null_rest_of_line",
            "          VARIABLE:'cancel'",
            "          DEC:'2'",
            "          NEWLINE:'\\n'))",
            "      (sip_ua_null",
            "        RETRY:'retry'",
            "        (null_rest_of_line",
            "          VARIABLE:'invite'",
            "          DEC:'2'",
            "          NEWLINE:'\\n'))",
            "      (sip_ua_null",
            "        SET:'set'",
            "        (null_rest_of_line",
            "          VARIABLE:'pstn-cause'",
            "          DEC:'1'",
            "          VARIABLE:'sip-status'",
            "          DEC:'503'",
            "          NEWLINE:'\\n'))",
            "      (sip_ua_null",
            "        SET:'set'",
            "        (null_rest_of_line",
            "          VARIABLE:'pstn-cause'",
            "          DEC:'102'",
            "          VARIABLE:'sip-status'",
            "          DEC:'503'",
            "          NEWLINE:'\\n'))",
            "      (sip_ua_null",
            "        SIP_SERVER:'sip-server'",
            "        (null_rest_of_line",
            "          DNS:'dns'",
            "          COLON:':'",
            "          VARIABLE:'abc.example.com'",
            "          NEWLINE:'\\n'))",
            "      (sip_ua_null",
            "        TIMERS:'timers'",
            "        (null_rest_of_line",
            "          VARIABLE:'trying'",
            "          DEC:'150'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_voice",
            "      VOICE:'voice'",
            "      (voice_null",
            "        CALL:'call'",
            "        (null_rest_of_line",
            "          VARIABLE:'convert-discpi-to-prog'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_voice",
            "      VOICE:'voice'",
            "      (voice_null",
            "        CALL:'call'",
            "        (null_rest_of_line",
            "          VARIABLE:'disc-pi-off'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_voice",
            "      VOICE:'voice'",
            "      (voice_null",
            "        CALL:'call'",
            "        (null_rest_of_line",
            "          VARIABLE:'send-alert'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_voice",
            "      VOICE:'voice'",
            "      (voice_class",
            "        CLASS:'class'",
            "        (voice_class_codec",
            "          CODEC:'codec'",
            "          (null_rest_of_line",
            "            DEC:'1'",
            "            NEWLINE:'\\n')",
            "          (voice_class_codec_null",
            "            CODEC:'codec'",
            "            (null_rest_of_line",
            "              PREFERENCE:'preference'",
            "              DEC:'1'",
            "              VARIABLE:'g729r8'",
            "              NEWLINE:'\\n'))",
            "          (voice_class_codec_null",
            "            CODEC:'codec'",
            "            (null_rest_of_line",
            "              PREFERENCE:'preference'",
            "              DEC:'2'",
            "              VARIABLE:'g711alaw'",
            "              NEWLINE:'\\n'))))))",
            "  (stanza",
            "    (s_voice",
            "      VOICE:'voice'",
            "      (voice_class",
            "        CLASS:'class'",
            "        (voice_class_dpg",
            "          DPG:'dpg'",
            "          (null_rest_of_line",
            "            DEC:'181'",
            "            NEWLINE:'\\n')",
            "          (voice_class_dpg_null",
            "            DESCRIPTION:'description'",
            "            (null_rest_of_line",
            "              RAW_TEXT:' Boston Destination'  <== mode:M_Description",
            "              NEWLINE:'\\n'  <== mode:M_Description))",
            "          (voice_class_dpg_null",
            "            DIAL_PEER:'dial-peer'",
            "            (null_rest_of_line",
            "              DEC:'123'",
            "              PREFERENCE:'preference'",
            "              DEC:'1'",
            "              NEWLINE:'\\n'))))))",
            "  (stanza",
            "    (s_voice",
            "      VOICE:'voice'",
            "      (voice_class",
            "        CLASS:'class'",
            "        (voice_class_e164",
            "          E164_PATTERN_MAP:'e164-pattern-map'",
            "          (null_rest_of_line",
            "            DEC:'1111'",
            "            NEWLINE:'\\n')",
            "          (voice_class_e164_null",
            "            DESCRIPTION:'description'",
            "            (null_rest_of_line",
            "              RAW_TEXT:' It has 1 entry'  <== mode:M_Description",
            "              NEWLINE:'\\n'  <== mode:M_Description))",
            "          (voice_class_e164_null",
            "            E164:'e164'",
            "            (null_rest_of_line",
            "              DEC:'5557123'",
            "              NEWLINE:'\\n'))))))",
            "  (stanza",
            "    (s_voice",
            "      VOICE:'voice'",
            "      (voice_class",
            "        CLASS:'class'",
            "        (voice_class_server_group",
            "          SERVER_GROUP:'server-group'",
            "          (null_rest_of_line",
            "            DEC:'171'",
            "            NEWLINE:'\\n')",
            "          (voice_class_server_group_null",
            "            DESCRIPTION:'description'",
            "            (null_rest_of_line",
            "              RAW_TEXT:' It has 1 entry'  <== mode:M_Description",
            "              NEWLINE:'\\n'  <== mode:M_Description))",
            "          (voice_class_server_group_null",
            "            IPV4:'ipv4'",
            "            (null_rest_of_line",
            "              IP_ADDRESS:'10.1.1.1'",
            "              PREFERENCE:'preference'",
            "              DEC:'3'",
            "              NEWLINE:'\\n'))))))",
            "  (stanza",
            "    (s_voice",
            "      VOICE:'voice'",
            "      (voice_class",
            "        CLASS:'class'",
            "        (voice_class_uri",
            "          URI:'uri'",
            "          (null_rest_of_line",
            "            VARIABLE:'ab200'",
            "            SIP:'sip'",
            "            NEWLINE:'\\n')",
            "          HOST:'host'",
            "          (null_rest_of_line",
            "            IPV4:'ipv4'",
            "            COLON:':'",
            "            IP_ADDRESS:'10.0.0.0'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_voice",
            "      VOICE:'voice'",
            "      (voice_class",
            "        CLASS:'class'",
            "        (voice_class_uri",
            "          URI:'uri'",
            "          (null_rest_of_line",
            "            VARIABLE:'ab201'",
            "            SIP:'sip'",
            "            NEWLINE:'\\n')",
            "          HOST:'host'",
            "          (null_rest_of_line",
            "            VARIABLE:'server1'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_voice",
            "      VOICE:'voice'",
            "      (voice_class",
            "        CLASS:'class'",
            "        (voice_class_h323",
            "          H323:'h323'",
            "          (null_rest_of_line",
            "            DEC:'10'",
            "            NEWLINE:'\\n')",
            "          (voice_class_h323_null",
            "            CALL:'call'",
            "            (null_rest_of_line",
            "              VARIABLE:'preserve'",
            "              NEWLINE:'\\n'))",
            "          (voice_class_h323_null",
            "            H225:'h225'",
            "            (null_rest_of_line",
            "              TIMEOUT:'timeout'",
            "              TCP:'tcp'",
            "              VARIABLE:'establish'",
            "              DEC:'2'",
            "              NEWLINE:'\\n'))",
            "          (voice_class_h323_null",
            "            TELEPHONY_SERVICE:'telephony-service'",
            "            (null_rest_of_line",
            "              VARIABLE:'ccm-compatible'",
            "              NEWLINE:'\\n'))))))",
            "  (stanza",
            "    (s_voice",
            "      VOICE:'voice'",
            "      (voice_class",
            "        CLASS:'class'",
            "        (voice_class_sip_profiles",
            "          SIP_PROFILES:'sip-profiles'",
            "          (null_rest_of_line",
            "            DEC:'1'",
            "            NEWLINE:'\\n')",
            "          (voice_class_sip_profiles_null",
            "            REQUEST:'request'",
            "            (null_rest_of_line",
            "              VARIABLE:'ANY'",
            "              VARIABLE:'sip-header'",
            "              VARIABLE:'From'",
            "              VARIABLE:'modify'",
            "              DOUBLE_QUOTE:'\"'",
            "              AAA:'aaa'",
            "              DOUBLE_QUOTE:'\"'",
            "              DOUBLE_QUOTE:'\"'",
            "              VARIABLE:'bbb'",
            "              DOUBLE_QUOTE:'\"'",
            "              NEWLINE:'\\n'))",
            "          (voice_class_sip_profiles_null",
            "            REQUEST:'request'",
            "            (null_rest_of_line",
            "              VARIABLE:'ANY'",
            "              VARIABLE:'sip-header'",
            "              VARIABLE:'P-Asserted-Identity'",
            "              VARIABLE:'modify'",
            "              DOUBLE_QUOTE:'\"'",
            "              AAA:'aaa'",
            "              DOUBLE_QUOTE:'\"'",
            "              DOUBLE_QUOTE:'\"'",
            "              VARIABLE:'bbb'",
            "              DOUBLE_QUOTE:'\"'",
            "              NEWLINE:'\\n'))",
            "          (voice_class_sip_profiles_null",
            "            REQUEST:'request'",
            "            (null_rest_of_line",
            "              VARIABLE:'ANY'",
            "              VARIABLE:'sip-header'",
            "              VARIABLE:'Remote-Party-ID'",
            "              VARIABLE:'modify'",
            "              DOUBLE_QUOTE:'\"'",
            "              AAA:'aaa'",
            "              DOUBLE_QUOTE:'\"'",
            "              DOUBLE_QUOTE:'\"'",
            "              VARIABLE:'bbb'",
            "              DOUBLE_QUOTE:'\"'",
            "              NEWLINE:'\\n'))))))",
            "  (stanza",
            "    (s_voice",
            "      NO:'no'",
            "      VOICE:'voice'",
            "      (voice_null",
            "        HUNT:'hunt'",
            "        (null_rest_of_line",
            "          VARIABLE:'invalid-number'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_voice",
            "      NO:'no'",
            "      VOICE:'voice'",
            "      (voice_null",
            "        HUNT:'hunt'",
            "        (null_rest_of_line",
            "          VARIABLE:'unassigned-number'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_voice",
            "      VOICE:'voice'",
            "      (voice_null",
            "        IEC:'iec'",
            "        (null_rest_of_line",
            "          SYSLOG:'syslog'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_voice",
            "      VOICE:'voice'",
            "      (voice_null",
            "        RTP:'rtp'",
            "        (null_rest_of_line",
            "          VARIABLE:'send-recv'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_voice",
            "      VOICE:'voice'",
            "      (voice_service",
            "        SERVICE:'service'",
            "        (voice_service_voip",
            "          VOIP:'voip'",
            "          NEWLINE:'\\n'",
            "          (voice_service_voip_null",
            "            ADDRESS_HIDING:'address-hiding'",
            "            (null_rest_of_line",
            "              NEWLINE:'\\n'))",
            "          (voice_service_voip_null",
            "            ALLOW_CONNECTIONS:'allow-connections'",
            "            (null_rest_of_line",
            "              H323:'h323'",
            "              VARIABLE:'to'",
            "              H323:'h323'",
            "              NEWLINE:'\\n'))",
            "          (voice_service_voip_null",
            "            ALLOW_CONNECTIONS:'allow-connections'",
            "            (null_rest_of_line",
            "              SIP:'sip'",
            "              VARIABLE:'to'",
            "              SIP:'sip'",
            "              NEWLINE:'\\n'))",
            "          (voice_service_voip_null",
            "            FAX:'fax'",
            "            (null_rest_of_line",
            "              PROTOCOL:'protocol'",
            "              VARIABLE:'cisco'",
            "              NEWLINE:'\\n'))",
            "          (voice_service_voip_null",
            "            FAX:'fax'",
            "            (null_rest_of_line",
            "              PROTOCOL:'protocol'",
            "              VARIABLE:'t38'",
            "              VERSION:'version'",
            "              DEC:'0'",
            "              VARIABLE:'ls-redundancy'",
            "              DEC:'0'",
            "              VARIABLE:'hs-redundancy'",
            "              DEC:'0'",
            "              FALLBACK:'fallback'",
            "              NONE:'none'",
            "              NEWLINE:'\\n'))",
            "          (voice_service_voip_h323",
            "            H323:'h323'",
            "            NEWLINE:'\\n'",
            "            (voice_service_voip_h323_null",
            "              CALL:'call'",
            "              (null_rest_of_line",
            "                VARIABLE:'preserve'",
            "                NEWLINE:'\\n'))",
            "            (voice_service_voip_h323_null",
            "              H225:'h225'",
            "              (null_rest_of_line",
            "                VARIABLE:'id-passthru'",
            "                NEWLINE:'\\n')))",
            "          (voice_service_voip_ip_address_trusted_list",
            "            IP:'ip'",
            "            ADDRESS:'address'",
            "            TRUSTED:'trusted'",
            "            LIST:'list'",
            "            NEWLINE:'\\n'",
            "            (voice_service_voip_ip_address_trusted_list_null",
            "              IPV4:'ipv4'",
            "              (null_rest_of_line",
            "                IP_ADDRESS:'1.2.3.4'",
            "                IP_ADDRESS:'255.255.255.255'",
            "                NEWLINE:'\\n'))",
            "            (voice_service_voip_ip_address_trusted_list_null",
            "              IPV4:'ipv4'",
            "              (null_rest_of_line",
            "                IP_ADDRESS:'2.3.4.5'",
            "                IP_ADDRESS:'255.255.255.255'",
            "                NEWLINE:'\\n')))",
            "          (voice_service_voip_null",
            "            MEDIA:'media'",
            "            (null_rest_of_line",
            "              VARIABLE:'bulk-stats'",
            "              NEWLINE:'\\n'))",
            "          (voice_service_voip_null",
            "            MODE:'mode'",
            "            (null_rest_of_line",
            "              VARIABLE:'border-element'",
            "              LICENSE:'license'",
            "              VARIABLE:'capacity'",
            "              DEC:'200'",
            "              NEWLINE:'\\n'))",
            "          (voice_service_voip_null",
            "            MODEM:'modem'",
            "            (null_rest_of_line",
            "              VARIABLE:'passthrough'",
            "              VARIABLE:'nse'",
            "              CODEC:'codec'",
            "              VARIABLE:'g711ulaw'",
            "              NEWLINE:'\\n'))",
            "          (voice_service_voip_null",
            "            REDUNDANCY_GROUP:'redundancy-group'",
            "            (null_rest_of_line",
            "              DEC:'1'",
            "              NEWLINE:'\\n'))",
            "          (voice_service_voip_null",
            "            RTP_PORT:'rtp-port'",
            "            (null_rest_of_line",
            "              RANGE:'range'",
            "              DEC:'16384'",
            "              DEC:'32768'",
            "              NEWLINE:'\\n'))",
            "          (voice_service_voip_null",
            "            SHUTDOWN:'shutdown'",
            "            (null_rest_of_line",
            "              NEWLINE:'\\n'))",
            "          (voice_service_voip_sip",
            "            SIP:'sip'",
            "            NEWLINE:'\\n'",
            "            (voice_service_voip_sip_null",
            "              BIND:'bind'",
            "              (null_rest_of_line",
            "                CONTROL:'control'",
            "                SOURCE_INTERFACE:'source-interface'",
            "                M_Interface_PREFIX:'Loopback'  <== mode:M_Interface",
            "                DEC:'0'  <== mode:M_Interface",
            "                NEWLINE:'\\n'  <== mode:M_Interface))",
            "            (voice_service_voip_sip_null",
            "              BIND:'bind'",
            "              (null_rest_of_line",
            "                MEDIA:'media'",
            "                SOURCE_INTERFACE:'source-interface'",
            "                M_Interface_PREFIX:'Loopback'  <== mode:M_Interface",
            "                DEC:'0'  <== mode:M_Interface",
            "                NEWLINE:'\\n'  <== mode:M_Interface))",
            "            (voice_service_voip_sip_null",
            "              EARLY_OFFER:'early-offer'",
            "              (null_rest_of_line",
            "                FORCED:'forced'",
            "                NEWLINE:'\\n'))",
            "            (voice_service_voip_sip_null",
            "              ERROR_PASSTHRU:'error-passthru'",
            "              (null_rest_of_line",
            "                NEWLINE:'\\n'))",
            "            (voice_service_voip_sip_null",
            "              G729:'g729'",
            "              (null_rest_of_line",
            "                VARIABLE:'annexb-all'",
            "                NEWLINE:'\\n'))",
            "            (voice_service_voip_sip_null",
            "              HEADER_PASSING:'header-passing'",
            "              (null_rest_of_line",
            "                NEWLINE:'\\n'))",
            "            (voice_service_voip_sip_null",
            "              LISTEN_PORT:'listen-port'",
            "              (null_rest_of_line",
            "                VARIABLE:'secure'",
            "                DEC:'5678'",
            "                NEWLINE:'\\n'))",
            "            (voice_service_voip_sip_null",
            "              LISTEN_PORT:'listen-port'",
            "              (null_rest_of_line",
            "                VARIABLE:'non-secure'",
            "                DEC:'1234'",
            "                NEWLINE:'\\n'))",
            "            (voice_service_voip_sip_null",
            "              MIDCALL_SIGNALING:'midcall-signaling'",
            "              (null_rest_of_line",
            "                BLOCK:'block'",
            "                NEWLINE:'\\n'))",
            "            (voice_service_voip_sip_null",
            "              SIP_PROFILES:'sip-profiles'",
            "              (null_rest_of_line",
            "                DEC:'1'",
            "                NEWLINE:'\\n'))",
            "            (voice_service_voip_sip_null",
            "              TRANSPORT:'transport'",
            "              (null_rest_of_line",
            "                SWITCH:'switch'",
            "                UDP:'udp'",
            "                TCP:'tcp'",
            "                NEWLINE:'\\n')))",
            "          (voice_service_voip_null",
            "            SUPPLEMENTARY_SERVICE:'supplementary-service'",
            "            (null_rest_of_line",
            "              VARIABLE:'h450.12'",
            "              NEWLINE:'\\n'))))))",
            "  (stanza",
            "    (s_voice",
            "      VOICE:'voice'",
            "      (voice_translation_profile",
            "        TRANSLATION_PROFILE:'translation-profile'",
            "        (null_rest_of_line",
            "          VARIABLE:'foobarbaz'",
            "          NEWLINE:'\\n')",
            "        (voice_translation_profile_null",
            "          TRANSLATE:'translate'",
            "          (null_rest_of_line",
            "            VARIABLE:'called'",
            "            DEC:'12'",
            "            NEWLINE:'\\n'))",
            "        (voice_translation_profile_null",
            "          TRANSLATE:'translate'",
            "          (null_rest_of_line",
            "            VARIABLE:'calling'",
            "            DEC:'11'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_voice",
            "      VOICE:'voice'",
            "      (voice_translation_rule",
            "        TRANSLATION_RULE:'translation-rule'",
            "        (null_rest_of_line",
            "          DEC:'1'",
            "          NEWLINE:'\\n')",
            "        (voice_translation_rule_null",
            "          RULE:'rule'",
            "          (null_rest_of_line",
            "            DEC:'1'",
            "            VARIABLE:'/^0011649\\'",
            "            PAREN_LEFT:'('",
            "            PERIOD:'.'",
            "            ASTERISK:'*'",
            "            VARIABLE:'\\'",
            "            PAREN_RIGHT:')'",
            "            REGEX:'/ /'",
            "            VARIABLE:'\\100/'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_voice_card",
            "      VOICE_CARD:'voice-card'",
            "      (null_rest_of_line",
            "        DEC:'0'",
            "        FORWARD_SLASH:'/'",
            "        DEC:'2'",
            "        NEWLINE:'\\n')",
            "      (vc_null",
            "        CODEC:'codec'",
            "        (null_rest_of_line",
            "          VARIABLE:'complexity'",
            "          HIGH:'high'",
            "          NEWLINE:'\\n'))",
            "      (vc_null",
            "        DSP:'dsp'",
            "        (null_rest_of_line",
            "          VARIABLE:'services'",
            "          DSPFARM:'dspfarm'",
            "          NEWLINE:'\\n'))",
            "      (vc_null",
            "        DSPFARM:'dspfarm'",
            "        (null_rest_of_line",
            "          NEWLINE:'\\n'))",
            "      (vc_null",
            "        NO:'no'",
            "        WATCHDOG:'watchdog'",
            "        (null_rest_of_line",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_voice_port",
            "      VOICE_PORT:'voice-port'",
            "      (null_rest_of_line",
            "        DEC:'0'",
            "        FORWARD_SLASH:'/'",
            "        DEC:'0'",
            "        FORWARD_SLASH:'/'",
            "        DEC:'0'",
            "        COLON:':'",
            "        DEC:'23'",
            "        NEWLINE:'\\n')",
            "      (vp_null",
            "        CALLER_ID:'caller-id'",
            "        (null_rest_of_line",
            "          ENABLE:'enable'",
            "          NEWLINE:'\\n'))",
            "      (vp_null",
            "        CONNECTION:'connection'",
            "        (null_rest_of_line",
            "          VARIABLE:'plar'",
            "          DEC:'1601'",
            "          NEWLINE:'\\n'))",
            "      (vp_null",
            "        CPTONE:'cptone'",
            "        (null_rest_of_line",
            "          VARIABLE:'GB'",
            "          NEWLINE:'\\n'))",
            "      (vp_null",
            "        DESCRIPTION:'description'",
            "        (null_rest_of_line",
            "          RAW_TEXT:' giuahwefuiowjh'  <== mode:M_Description",
            "          NEWLINE:'\\n'  <== mode:M_Description))",
            "      (vp_null",
            "        ECHO_CANCEL:'echo-cancel'",
            "        (null_rest_of_line",
            "          VARIABLE:'coverage'",
            "          DEC:'64'",
            "          NEWLINE:'\\n'))",
            "      (vp_null",
            "        SHUTDOWN:'shutdown'",
            "        (null_rest_of_line",
            "          NEWLINE:'\\n'))",
            "      (vp_null",
            "        SIGNAL:'signal'",
            "        (null_rest_of_line",
            "          VARIABLE:'cama'",
            "          VARIABLE:'KP-0-NXX-XXXX-ST'",
            "          NEWLINE:'\\n'))",
            "      (vp_null",
            "        TIMEOUTS:'timeouts'",
            "        (null_rest_of_line",
            "          VARIABLE:'ringing'",
            "          INFINITY:'infinity'",
            "          NEWLINE:'\\n'))",
            "      (vp_null",
            "        TIMING:'timing'",
            "        (null_rest_of_line",
            "          VARIABLE:'hookflash-out'",
            "          DEC:'50'",
            "          NEWLINE:'\\n'))",
            "      (vp_null",
            "        TIMING:'timing'",
            "        (null_rest_of_line",
            "          VARIABLE:'guard-out'",
            "          DEC:'1000'",
            "          NEWLINE:'\\n'))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/cisco_vpdn" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'cisco_vpdn'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        VPDN:'vpdn'",
            "        ENABLE:'enable'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_vpdn_group",
            "      VPDN_GROUP:'vpdn-group'",
            "      (null_rest_of_line",
            "        DEC:'1'",
            "        NEWLINE:'\\n')",
            "      (vpdng_accept_dialin",
            "        ACCEPT_DIALIN:'accept-dialin'",
            "        (null_rest_of_line",
            "          NEWLINE:'\\n')",
            "        (vpdnga_null",
            "          PROTOCOL:'protocol'",
            "          (null_rest_of_line",
            "            L2TP:'l2tp'",
            "            NEWLINE:'\\n'))",
            "        (vpdnga_null",
            "          VIRTUAL_TEMPLATE:'virtual-template'",
            "          (null_rest_of_line",
            "            DEC:'1'",
            "            NEWLINE:'\\n')))",
            "      (vpdng_null",
            "        NO:'no'",
            "        L2TP:'l2tp'",
            "        (null_rest_of_line",
            "          TUNNEL:'tunnel'",
            "          AUTHENTICATION:'authentication'",
            "          NEWLINE:'\\n'  <== mode:M_Authentication))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/cisco_vpn" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'cisco_vpn'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_vpn",
            "      VPN:'vpn'",
            "      (null_rest_of_line",
            "        LOAD_BALANCING:'load-balancing'",
            "        NEWLINE:'\\n')",
            "      (vpn_null",
            "        REDIRECT_FQDN:'redirect-fqdn'",
            "        (null_rest_of_line",
            "          ENABLE:'enable'",
            "          NEWLINE:'\\n'))",
            "      (vpn_null",
            "        PRIORITY:'priority'",
            "        (null_rest_of_line",
            "          DEC:'9'",
            "          NEWLINE:'\\n'))",
            "      (vpn_null",
            "        CLUSTER:'cluster'",
            "        (null_rest_of_line",
            "          IP:'ip'",
            "          ADDRESS:'address'",
            "          IP_ADDRESS:'1.2.3.4'",
            "          NEWLINE:'\\n'))",
            "      (vpn_null",
            "        CLUSTER:'cluster'",
            "        (null_rest_of_line",
            "          ENCRYPTION:'encryption'",
            "          NEWLINE:'\\n'))",
            "      (vpn_null",
            "        PARTICIPATE:'participate'",
            "        (null_rest_of_line",
            "          NEWLINE:'\\n'))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/cisco_vrf" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'cisco_vrf'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_vrf_context",
            "      VRF:'vrf'",
            "      CONTEXT:'context'",
            "      name = (variable",
            "        MANAGEMENT:'management')",
            "      NEWLINE:'\\n'",
            "      (vrfc_address_family",
            "        ADDRESS_FAMILY:'address-family'",
            "        IPV4:'ipv4'",
            "        UNICAST:'unicast'",
            "        NEWLINE:'\\n')",
            "      (vrfc_address_family",
            "        ADDRESS_FAMILY:'address-family'",
            "        IPV6:'ipv6'",
            "        UNICAST:'unicast'",
            "        NEWLINE:'\\n')",
            "      (vrfc_null",
            "        IP:'ip'",
            "        PIM:'pim'",
            "        (null_rest_of_line",
            "          BIDIR_RP_LIMIT:'bidir-rp-limit'",
            "          DEC:'6'",
            "          NEWLINE:'\\n'))",
            "      (vrfc_null",
            "        IP:'ip'",
            "        PIM:'pim'",
            "        (null_rest_of_line",
            "          SG_EXPIRY_TIMER:'sg-expiry-timer'",
            "          DEC:'180'",
            "          NEWLINE:'\\n'))",
            "      (vrfc_ip_route",
            "        IP:'ip'",
            "        ROUTE:'route'",
            "        (ip_route_tail",
            "          prefix = IP_PREFIX:'0.0.0.0/0'",
            "          nexthopip = IP_ADDRESS:'1.2.3.4'",
            "          NEWLINE:'\\n'))",
            "      (vrfc_null",
            "        MDT:'mdt'",
            "        (null_rest_of_line",
            "          VARIABLE:'enforce-bgp-mdt-safi'",
            "          NEWLINE:'\\n'))",
            "      (vrfc_null",
            "        MDT:'mdt'",
            "        (null_rest_of_line",
            "          MTU:'mtu'",
            "          DEC:'1376'",
            "          NEWLINE:'\\n'))",
            "      (vrfc_null",
            "        MDT:'mdt'",
            "        (null_rest_of_line",
            "          PIM:'pim'",
            "          HELLO_INTERVAL:'hello-interval'",
            "          DEC:'30000'",
            "          NEWLINE:'\\n'))",
            "      (vrfc_null",
            "        MDT:'mdt'",
            "        (null_rest_of_line",
            "          PIM:'pim'",
            "          VARIABLE:'jp-interval'",
            "          DEC:'60'",
            "          NEWLINE:'\\n'))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/cisco_vrrp" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'cisco_vrrp'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_interface",
            "      INTERFACE:'interface'",
            "      iname = (interface_name",
            "        name_prefix_alpha = M_Interface_PREFIX:'Ethernet'  <== mode:M_Interface",
            "        (range",
            "          (subrange",
            "            low = DEC:'0'  <== mode:M_Interface)))",
            "      NEWLINE:'\\n'  <== mode:M_Interface",
            "      (if_inner",
            "        (if_ip_address",
            "          IP:'ip'",
            "          ADDRESS:'address'",
            "          prefix = IP_PREFIX:'1.0.0.0/24'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_vrrp",
            "          VRRP:'vrrp'",
            "          groupnum = DEC:'123'",
            "          (ifvrrp_authentication",
            "            AUTHENTICATION:'authentication'",
            "            TEXT:'text'  <== mode:M_Authentication",
            "            text = (variable_permissive",
            "              VARIABLE:'bleep')",
            "            NEWLINE:'\\n')))",
            "      (if_inner",
            "        (if_vrrp",
            "          VRRP:'vrrp'",
            "          groupnum = DEC:'123'",
            "          (ifvrrp_description",
            "            (description_line",
            "              DESCRIPTION:'description'",
            "              text = RAW_TEXT:' 123desc'  <== mode:M_Description",
            "              NEWLINE:'\\n'  <== mode:M_Description))))",
            "      (if_inner",
            "        (if_vrrp",
            "          VRRP:'vrrp'",
            "          groupnum = DEC:'123'",
            "          (ifvrrp_ip",
            "            IP:'ip'",
            "            ip = IP_ADDRESS:'1.0.0.1'",
            "            NEWLINE:'\\n')))",
            "      (if_inner",
            "        (if_vrrp",
            "          VRRP:'vrrp'",
            "          groupnum = DEC:'1234'",
            "          (ifvrrp_ipv6",
            "            IPV6:'ipv6'",
            "            ip = IPV6_ADDRESS:'::1'",
            "            NEWLINE:'\\n')))",
            "      (if_inner",
            "        (if_vrrpno",
            "          NO:'no'",
            "          VRRP:'vrrp'",
            "          groupnum = DEC:'123'",
            "          (ifvrrpno_preempt",
            "            PREEMPT:'preempt'",
            "            NEWLINE:'\\n')))",
            "      (if_inner",
            "        (if_vrrp",
            "          VRRP:'vrrp'",
            "          groupnum = DEC:'123'",
            "          (ifvrrp_preempt",
            "            PREEMPT:'preempt'",
            "            DELAY:'delay'",
            "            MINIMUM:'minimum'",
            "            DEC:'222'",
            "            NEWLINE:'\\n')))",
            "      (if_inner",
            "        (if_vrrp",
            "          VRRP:'vrrp'",
            "          groupnum = DEC:'123'",
            "          (ifvrrp_preempt",
            "            PREEMPT:'preempt'",
            "            DELAY:'delay'",
            "            RELOAD:'reload'",
            "            DEC:'222'",
            "            NEWLINE:'\\n')))",
            "      (if_inner",
            "        (if_vrrp",
            "          VRRP:'vrrp'",
            "          groupnum = DEC:'123'",
            "          (ifvrrp_priority",
            "            PRIORITY:'priority'",
            "            priority = DEC:'234'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_router_vrrp",
            "      ROUTER:'router'",
            "      VRRP:'vrrp'",
            "      NEWLINE:'\\n'",
            "      (vrrp_interface",
            "        INTERFACE:'interface'",
            "        iface = (interface_name",
            "          name_prefix_alpha = M_Interface_PREFIX:'GigabitEthernet'  <== mode:M_Interface",
            "          DEC:'0'  <== mode:M_Interface",
            "          FORWARD_SLASH:'/'  <== mode:M_Interface",
            "          DEC:'0'  <== mode:M_Interface",
            "          FORWARD_SLASH:'/'  <== mode:M_Interface",
            "          DEC:'0'  <== mode:M_Interface",
            "          FORWARD_SLASH:'/'  <== mode:M_Interface",
            "          (range",
            "            (subrange",
            "              low = DEC:'19'  <== mode:M_Interface)))",
            "        NEWLINE:'\\n'  <== mode:M_Interface",
            "        (vi_address_family",
            "          ADDRESS_FAMILY:'address-family'",
            "          IPV4:'ipv4'",
            "          NEWLINE:'\\n'",
            "          (viaf_vrrp",
            "            VRRP:'vrrp'",
            "            groupnum = DEC:'1'",
            "            NEWLINE:'\\n'",
            "            (viafv_priority",
            "              PRIORITY:'priority'",
            "              priority = DEC:'90'",
            "              NEWLINE:'\\n')",
            "            (viafv_address",
            "              ADDRESS:'address'",
            "              address = IP_ADDRESS:'130.59.54.193'",
            "              NEWLINE:'\\n'))))))",
            "  (stanza",
            "    (s_router_vrrp",
            "      ROUTER:'router'",
            "      VRRP:'vrrp'",
            "      NEWLINE:'\\n'",
            "      (vrrp_interface",
            "        INTERFACE:'interface'",
            "        iface = (interface_name",
            "          name_prefix_alpha = M_Interface_PREFIX:'MgmtEth'  <== mode:M_Interface",
            "          DEC:'0'  <== mode:M_Interface",
            "          FORWARD_SLASH:'/'  <== mode:M_Interface",
            "          M_Interface_PREFIX:'RSP'  <== mode:M_Interface",
            "          DEC:'0'  <== mode:M_Interface",
            "          FORWARD_SLASH:'/'  <== mode:M_Interface",
            "          M_Interface_PREFIX:'CPU'  <== mode:M_Interface",
            "          DEC:'0'  <== mode:M_Interface",
            "          FORWARD_SLASH:'/'  <== mode:M_Interface",
            "          (range",
            "            (subrange",
            "              low = DEC:'0'  <== mode:M_Interface)))",
            "        NEWLINE:'\\n'  <== mode:M_Interface)",
            "      (vrrp_interface",
            "        INTERFACE:'interface'",
            "        iface = (interface_name",
            "          name_prefix_alpha = M_Interface_PREFIX:'MgmtEth'  <== mode:M_Interface",
            "          DEC:'0'  <== mode:M_Interface",
            "          FORWARD_SLASH:'/'  <== mode:M_Interface",
            "          M_Interface_PREFIX:'RSP'  <== mode:M_Interface",
            "          DEC:'1'  <== mode:M_Interface",
            "          FORWARD_SLASH:'/'  <== mode:M_Interface",
            "          M_Interface_PREFIX:'CPU'  <== mode:M_Interface",
            "          DEC:'0'  <== mode:M_Interface",
            "          FORWARD_SLASH:'/'  <== mode:M_Interface",
            "          (range",
            "            (subrange",
            "              low = DEC:'0'  <== mode:M_Interface)))",
            "        NEWLINE:'\\n'  <== mode:M_Interface",
            "        (vi_address_family",
            "          ADDRESS_FAMILY:'address-family'",
            "          IPV4:'ipv4'",
            "          NEWLINE:'\\n'",
            "          (viaf_vrrp",
            "            VRRP:'vrrp'",
            "            groupnum = DEC:'1'",
            "            NEWLINE:'\\n'",
            "            (viafv_priority",
            "              PRIORITY:'priority'",
            "              priority = DEC:'90'",
            "              NEWLINE:'\\n')",
            "            (viafv_address",
            "              ADDRESS:'address'",
            "              address = IP_ADDRESS:'130.59.51.65'",
            "              NEWLINE:'\\n'))))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/cisco_webvpn" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'cisco_webvpn'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_null",
            "      (null_block",
            "        GROUP_POLICY:'group-policy'",
            "        (null_rest_of_line",
            "          VARIABLE:'GroupPolicy_NOC-VPN'",
            "          ATTRIBUTES:'attributes'",
            "          NEWLINE:'\\n')",
            "        (null_inner",
            "          BANNER:'banner'",
            "          VALUE:'value'  <== mode:M_Banner",
            "          (null_rest_of_line",
            "            RAW_TEXT:' ** AUTHORIZED ACCESS ONLY **'  <== mode:M_Description",
            "            NEWLINE:'\\n'  <== mode:M_Description))",
            "        (null_inner",
            "          BANNER:'banner'",
            "          NONE:'none'  <== mode:M_Banner",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n'  <== mode:M_Banner))",
            "        (null_inner",
            "          WINS_SERVER:'wins-server'",
            "          (null_rest_of_line",
            "            NONE:'none'",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          DNS_SERVER:'dns-server'",
            "          (null_rest_of_line",
            "            VARIABLE:'value'",
            "            IP_ADDRESS:'1.2.3.4'",
            "            IP_ADDRESS:'2.3.4.5'",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          VPN_SIMULTANEOUS_LOGINS:'vpn-simultaneous-logins'",
            "          (null_rest_of_line",
            "            DEC:'2'",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          VPN_IDLE_TIMEOUT:'vpn-idle-timeout'",
            "          (null_rest_of_line",
            "            DEC:'30'",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          VPN_SESSION_TIMEOUT:'vpn-session-timeout'",
            "          (null_rest_of_line",
            "            DEC:'240'",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          VPN_TUNNEL_PROTOCOL:'vpn-tunnel-protocol'",
            "          (null_rest_of_line",
            "            VARIABLE:'ssl-client'",
            "            VARIABLE:'ssl-clientless'",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          GROUP_LOCK:'group-lock'",
            "          (null_rest_of_line",
            "            VARIABLE:'value'",
            "            VARIABLE:'NOC-VPN'",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          SPLIT_TUNNEL_POLICY:'split-tunnel-policy'",
            "          (null_rest_of_line",
            "            VARIABLE:'tunnelspecified'",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          SPLIT_TUNNEL_NETWORK_LIST:'split-tunnel-network-list'",
            "          (null_rest_of_line",
            "            VARIABLE:'value'",
            "            VARIABLE:'ACL-NET-stunnel'",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          DEFAULT_DOMAIN:'default-domain'",
            "          (null_rest_of_line",
            "            NONE:'none'",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          MSIE_PROXY:'msie-proxy'",
            "          (null_rest_of_line",
            "            METHOD:'method'",
            "            VARIABLE:'no-proxy'",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          MSIE_PROXY:'msie-proxy'",
            "          (null_rest_of_line",
            "            VARIABLE:'lockdown'",
            "            ENABLE:'enable'",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          ADDRESS_POOLS:'address-pools'",
            "          (null_rest_of_line",
            "            VARIABLE:'value'",
            "            VARIABLE:'LOCAL-VPN-POOL'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_webvpn",
            "      WEBVPN:'webvpn'",
            "      (null_rest_of_line",
            "        NEWLINE:'\\n')",
            "      (webvpn_null",
            "        ANYCONNECT:'anyconnect'",
            "        (null_rest_of_line",
            "          VARIABLE:'profiles'",
            "          VARIABLE:'value'",
            "          VARIABLE:'NOC-VPN_client_profile'",
            "          TYPE:'type'",
            "          USER:'user'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_webvpn",
            "      WEBVPN:'webvpn'",
            "      (null_rest_of_line",
            "        NEWLINE:'\\n')",
            "      (webvpn_null",
            "        ANYCONNECT:'anyconnect'",
            "        (null_rest_of_line",
            "          VARIABLE:'image'",
            "          VARIABLE:'disk0'",
            "          COLON:':'",
            "          VARIABLE:'/anyconnect-win-4.2.03013-k9.pkg'",
            "          DEC:'1'",
            "          NEWLINE:'\\n'))",
            "      (webvpn_null",
            "        ANYCONNECT:'anyconnect'",
            "        (null_rest_of_line",
            "          VARIABLE:'image'",
            "          VARIABLE:'disk0'",
            "          COLON:':'",
            "          VARIABLE:'/anyconnect-macosx-i386-4.2.03013-k9.pkg'",
            "          DEC:'2'",
            "          NEWLINE:'\\n'))",
            "      (webvpn_null",
            "        ANYCONNECT:'anyconnect'",
            "        (null_rest_of_line",
            "          VARIABLE:'image'",
            "          VARIABLE:'disk0'",
            "          COLON:':'",
            "          VARIABLE:'/anyconnect-linux-64-4.2.03013-k9.pkg'",
            "          DEC:'3'",
            "          NEWLINE:'\\n'))",
            "      (webvpn_null",
            "        ANYCONNECT:'anyconnect'",
            "        (null_rest_of_line",
            "          VARIABLE:'image'",
            "          VARIABLE:'disk0'",
            "          COLON:':'",
            "          VARIABLE:'/anyconnect-linux-3.1.14018-k9.pkg'",
            "          DEC:'4'",
            "          NEWLINE:'\\n'))",
            "      (webvpn_null",
            "        ANYCONNECT:'anyconnect'",
            "        (null_rest_of_line",
            "          VARIABLE:'profiles'",
            "          VARIABLE:'bac'",
            "          VARIABLE:'disk0'",
            "          COLON:':'",
            "          VARIABLE:'/eeeeeeee.xml'",
            "          NEWLINE:'\\n'))",
            "      (webvpn_null",
            "        ANYCONNECT:'anyconnect'",
            "        (null_rest_of_line",
            "          VARIABLE:'profiles'",
            "          VARIABLE:'defe'",
            "          VARIABLE:'disk0'",
            "          COLON:':'",
            "          VARIABLE:'/ddddddd.xml'",
            "          NEWLINE:'\\n'))",
            "      (webvpn_null",
            "        ANYCONNECT:'anyconnect'",
            "        (null_rest_of_line",
            "          VARIABLE:'profiles'",
            "          VARIABLE:'htefegr'",
            "          VARIABLE:'disk0'",
            "          COLON:':'",
            "          VARIABLE:'/cccccccccc.xml'",
            "          NEWLINE:'\\n'))",
            "      (webvpn_null",
            "        ANYCONNECT:'anyconnect'",
            "        (null_rest_of_line",
            "          VARIABLE:'profiles'",
            "          VARIABLE:'gg456h5tg'",
            "          VARIABLE:'disk0'",
            "          COLON:':'",
            "          VARIABLE:'/bbbbb.xml'",
            "          NEWLINE:'\\n'))",
            "      (webvpn_null",
            "        ANYCONNECT:'anyconnect'",
            "        (null_rest_of_line",
            "          VARIABLE:'profiles'",
            "          VARIABLE:'efregth56yh5gr'",
            "          VARIABLE:'disk0'",
            "          COLON:':'",
            "          VARIABLE:'/aaaa.xml'",
            "          NEWLINE:'\\n'))",
            "      (webvpn_null",
            "        ANYCONNECT:'anyconnect'",
            "        (null_rest_of_line",
            "          ENABLE:'enable'",
            "          NEWLINE:'\\n'))",
            "      (webvpn_null",
            "        ANYCONNECT_ESSENTIALS:'anyconnect-essentials'",
            "        (null_rest_of_line",
            "          NEWLINE:'\\n'))",
            "      (webvpn_null",
            "        CACHE:'cache'",
            "        (null_rest_of_line",
            "          NEWLINE:'\\n'))",
            "      (webvpn_null",
            "        DISABLE:'disable'",
            "        (null_rest_of_line",
            "          NEWLINE:'\\n'))",
            "      (webvpn_null",
            "        CSD:'csd'",
            "        (null_rest_of_line",
            "          VARIABLE:'image'",
            "          VARIABLE:'disk0'",
            "          COLON:':'",
            "          VARIABLE:'/csd_3.6.6234-k9.pkg'",
            "          NEWLINE:'\\n'))",
            "      (webvpn_null",
            "        CSD:'csd'",
            "        (null_rest_of_line",
            "          VARIABLE:'hostscan'",
            "          VARIABLE:'image'",
            "          VARIABLE:'disk0'",
            "          COLON:':'",
            "          VARIABLE:'/hostscan_3.1.04063-k9.pkg'",
            "          NEWLINE:'\\n'))",
            "      (webvpn_null",
            "        CSD:'csd'",
            "        (null_rest_of_line",
            "          ENABLE:'enable'",
            "          NEWLINE:'\\n'))",
            "      (webvpn_null",
            "        ENABLE:'enable'",
            "        (null_rest_of_line",
            "          OUTSIDE:'outside'",
            "          NEWLINE:'\\n'))",
            "      (webvpn_null",
            "        ERROR_RECOVERY:'error-recovery'",
            "        (null_rest_of_line",
            "          DISABLE:'disable'",
            "          NEWLINE:'\\n'))",
            "      (webvpn_null",
            "        KEEPOUT:'keepout'",
            "        (null_rest_of_line",
            "          DOUBLE_QUOTE:'\"'",
            "          VARIABLE:'Clientless'",
            "          VARIABLE:'Service'",
            "          VARIABLE:'Not'",
            "          VARIABLE:'Available'",
            "          DOUBLE_QUOTE:'\"'",
            "          NEWLINE:'\\n'))",
            "      (webvpn_null",
            "        TUNNEL_GROUP_LIST:'tunnel-group-list'",
            "        (null_rest_of_line",
            "          ENABLE:'enable'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_tunnel_group",
            "      TUNNEL_GROUP:'tunnel-group'",
            "      (null_rest_of_line",
            "        VARIABLE:'DefaultRAGroup'",
            "        VARIABLE:'general-attributes'",
            "        NEWLINE:'\\n')",
            "      (tg_null",
            "        ACCOUNTING_SERVER_GROUP:'accounting-server-group'",
            "        (null_rest_of_line",
            "          VARIABLE:'aaaaaaaa'",
            "          NEWLINE:'\\n'))",
            "      (tg_null",
            "        ADDRESS_POOL:'address-pool'",
            "        (null_rest_of_line",
            "          VARIABLE:'bbbbbbb'",
            "          NEWLINE:'\\n'))",
            "      (tg_null",
            "        AUTHENTICATION_SERVER_GROUP:'authentication-server-group'",
            "        (null_rest_of_line",
            "          VARIABLE:'Duo-RADIUS'",
            "          NEWLINE:'\\n'))",
            "      (tg_null",
            "        DEFAULT_GROUP_POLICY:'default-group-policy'",
            "        (null_rest_of_line",
            "          VARIABLE:'ccccccccc'",
            "          NEWLINE:'\\n'))",
            "      (tg_null",
            "        IPV6_ADDRESS_POOL:'ipv6-address-pool'",
            "        (null_rest_of_line",
            "          VARIABLE:'dddddddddddddd'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_tunnel_group",
            "      TUNNEL_GROUP:'tunnel-group'",
            "      (null_rest_of_line",
            "        VARIABLE:'DefaultRAGroup'",
            "        VARIABLE:'ipsec-attributes'",
            "        NEWLINE:'\\n')",
            "      (tg_null",
            "        ISAKMP:'isakmp'",
            "        (null_rest_of_line",
            "          KEEPALIVE:'keepalive'",
            "          THRESHOLD:'threshold'",
            "          DEC:'3600'",
            "          RETRY:'retry'",
            "          DEC:'2'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_tunnel_group",
            "      TUNNEL_GROUP:'tunnel-group'",
            "      (null_rest_of_line",
            "        VARIABLE:'DefaultRAGroup'",
            "        VARIABLE:'ppp-attributes'",
            "        NEWLINE:'\\n')",
            "      (tg_null",
            "        AUTHENTICATION:'authentication'",
            "        (null_rest_of_line",
            "          VARIABLE:'ms-chap-v2'  <== mode:M_Authentication",
            "          NEWLINE:'\\n'))",
            "      (tg_null",
            "        AUTHENTICATION:'authentication'",
            "        (null_rest_of_line",
            "          VARIABLE:'pap'  <== mode:M_Authentication",
            "          NEWLINE:'\\n'))",
            "      (tg_null",
            "        NO:'no'",
            "        AUTHENTICATION:'authentication'",
            "        (null_rest_of_line",
            "          VARIABLE:'chap'  <== mode:M_Authentication",
            "          NEWLINE:'\\n'))",
            "      (tg_null",
            "        NO:'no'",
            "        AUTHENTICATION:'authentication'",
            "        (null_rest_of_line",
            "          VARIABLE:'ms-chap-v1'  <== mode:M_Authentication",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_null",
            "      (null_block",
            "        TUNNEL_GROUP:'tunnel-group'",
            "        (null_rest_of_line",
            "          VARIABLE:'eeeeeeeeee'",
            "          TYPE:'type'",
            "          REMOTE_ACCESS:'remote-access'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_tunnel_group",
            "      TUNNEL_GROUP:'tunnel-group'",
            "      (null_rest_of_line",
            "        VARIABLE:'ffffffffff'",
            "        VARIABLE:'webvpn-attributes'",
            "        NEWLINE:'\\n')",
            "      (tg_null",
            "        GROUP_URL:'group-url'",
            "        (null_rest_of_line",
            "          HTTPS:'https'",
            "          COLON:':'",
            "          VARIABLE:'//example.com'",
            "          ENABLE:'enable'",
            "          NEWLINE:'\\n'))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/cisco_wsma" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'cisco_wsma'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_wsma",
            "      WSMA:'wsma'",
            "      (null_rest_of_line",
            "        VARIABLE:'agent'",
            "        NOTIFY:'notify'",
            "        NEWLINE:'\\n')",
            "      (wsma_null",
            "        PROFILE:'profile'",
            "        (null_rest_of_line",
            "          VARIABLE:'httplistener'",
            "          NEWLINE:'\\n'))",
            "      (wsma_null",
            "        PROFILE:'profile'",
            "        (null_rest_of_line",
            "          VARIABLE:'httpslistener'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_wsma",
            "      WSMA:'wsma'",
            "      (null_rest_of_line",
            "        PROFILE:'profile'",
            "        LISTENER:'listener'",
            "        VARIABLE:'httplistener'",
            "        NEWLINE:'\\n')",
            "      (wsma_null",
            "        TRANSPORT:'transport'",
            "        (null_rest_of_line",
            "          HTTP:'http'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_wsma",
            "      WSMA:'wsma'",
            "      (null_rest_of_line",
            "        VARIABLE:'agent'",
            "        VARIABLE:'filesys'",
            "        NEWLINE:'\\n')",
            "      (wsma_null",
            "        PROFILE:'profile'",
            "        (null_rest_of_line",
            "          VARIABLE:'httplistener'",
            "          NEWLINE:'\\n'))",
            "      (wsma_null",
            "        PROFILE:'profile'",
            "        (null_rest_of_line",
            "          VARIABLE:'httpslistener'",
            "          NEWLINE:'\\n'))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/cisco_zone" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'cisco-zone'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_zone_pair",
            "      ZONE_PAIR:'zone-pair'",
            "      SECURITY:'security'",
            "      name = (variable",
            "        VARIABLE:'zp1')",
            "      SOURCE:'source'",
            "      source = (variable",
            "        VARIABLE:'z1')",
            "      DESTINATION:'destination'",
            "      destination = (variable",
            "        VARIABLE:'z2')",
            "      NEWLINE:'\\n'",
            "      (zp_service_policy_inspect",
            "        SERVICE_POLICY:'service-policy'",
            "        TYPE:'type'",
            "        INSPECT:'inspect'",
            "        name = (variable_permissive",
            "          VARIABLE:'p1')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_zone",
            "      ZONE:'zone'",
            "      SECURITY:'security'",
            "      name = (variable_permissive",
            "        VARIABLE:'z1')",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_zone",
            "      ZONE:'zone'",
            "      SECURITY:'security'",
            "      name = (variable_permissive",
            "        VARIABLE:'z2')",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_zone",
            "      ZONE:'zone'",
            "      name = (variable_permissive",
            "        VARIABLE:'t1')",
            "      NEWLINE:'\\n'))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/colon_in_vrf" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'colon_in_vrf'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (router_bgp_stanza",
            "      ROUTER:'router'",
            "      BGP:'bgp'",
            "      procnum = (bgp_asn",
            "        asn = DEC:'22')",
            "      NEWLINE:'\\n'",
            "      (router_bgp_stanza_tail",
            "        (address_family_rb_stanza",
            "          (address_family_header",
            "            ADDRESS_FAMILY:'address-family'",
            "            af = (bgp_address_family",
            "              IPV4:'ipv4'",
            "              VRF:'vrf'",
            "              vrf_name = VARIABLE:'VRF:MMS:RMT:PBI:145')",
            "            NEWLINE:'\\n')",
            "          (bgp_tail",
            "            (redistribute_connected_bgp_tail",
            "              REDISTRIBUTE:'redistribute'",
            "              CONNECTED:'connected'",
            "              ROUTE_MAP:'route-map'",
            "              map = (variable",
            "                VARIABLE:'RMT_PBI'  <== mode:M_RouteMap)",
            "              NEWLINE:'\\n'))",
            "          (bgp_tail",
            "            (null_bgp_tail",
            "              NO:'no'",
            "              SYNCHRONIZATION:'synchronization'",
            "              (null_rest_of_line",
            "                NEWLINE:'\\n')))",
            "          (address_family_footer",
            "            EXIT_ADDRESS_FAMILY:'exit-address-family'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        END:'end'",
            "        NEWLINE:'\\n\\n')))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/community_list_named" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'community_list_named'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (ip_prefix_list_stanza",
            "      IP:'ip'",
            "      PREFIX_LIST:'prefix-list'",
            "      name = (variable",
            "        VARIABLE:'PFX_LIST'  <== mode:M_Name)",
            "      (ip_prefix_list_tail",
            "        SEQ:'seq'",
            "        seqnum = DEC:'10'",
            "        action = (access_list_action",
            "          PERMIT:'permit')",
            "        prefix = IP_PREFIX:'10.0.0.0/15'",
            "        LE:'le'",
            "        maxpl = DEC:'32'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (ip_community_list_standard_stanza",
            "      IP:'ip'",
            "      COMMUNITY_LIST:'community-list'",
            "      STANDARD:'standard'",
            "      name = (variable",
            "        VARIABLE:'COMM_LIST_NAME')",
            "      (ip_community_list_standard_tail",
            "        ala = (access_list_action",
            "          PERMIT:'permit')",
            "        (community",
            "          STANDARD_COMMUNITY:'75:42')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (route_map_stanza",
            "      ROUTE_MAP:'route-map'",
            "      name = (variable",
            "        VARIABLE:'TO_NEIGHBOR'  <== mode:M_RouteMap)",
            "      rmt = (access_list_action",
            "        PERMIT:'permit')",
            "      num = DEC:'30'",
            "      NEWLINE:'\\n'",
            "      (rm_stanza",
            "        (match_rm_stanza",
            "          (match_ip_prefix_list_rm_stanza",
            "            MATCH:'match'",
            "            IP:'ip'",
            "            ADDRESS:'address'",
            "            PREFIX_LIST:'prefix-list'",
            "            (variable",
            "              VARIABLE:'PFX_LIST'  <== mode:M_Words)",
            "            NEWLINE:'\\n'  <== mode:M_Words)))",
            "      (rm_stanza",
            "        (set_rm_stanza",
            "          (set_community_list_additive_rm_stanza",
            "            SET:'set'",
            "            COMMUNITY:'community'",
            "            COMMUNITY_LIST:'community-list'",
            "            (variable",
            "              VARIABLE:'COMM_LIST_NAME')",
            "            ADDITIVE:'additive'",
            "            NEWLINE:'\\n')))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/community_name_numbers" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'community-name-numbers'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (ip_community_list_standard_stanza",
            "      IP:'ip'",
            "      COMMUNITY_LIST:'community-list'",
            "      STANDARD:'standard'",
            "      name = (variable",
            "        VARIABLE:'9999-RRR')",
            "      (ip_community_list_standard_tail",
            "        ala = (access_list_action",
            "          PERMIT:'permit')",
            "        (community",
            "          STANDARD_COMMUNITY:'9999:8888')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (route_map_stanza",
            "      ROUTE_MAP:'route-map'",
            "      name = (variable",
            "        VARIABLE:'AAA1-BBB-CCC'  <== mode:M_RouteMap)",
            "      rmt = (access_list_action",
            "        PERMIT:'permit')",
            "      num = DEC:'100'",
            "      NEWLINE:'\\n'",
            "      (rm_stanza",
            "        (match_rm_stanza",
            "          (match_community_list_rm_stanza",
            "            MATCH:'match'",
            "            COMMUNITY:'community'",
            "            (variable",
            "              VARIABLE:'9999-RRR')",
            "            NEWLINE:'\\n')))",
            "      (rm_stanza",
            "        (set_rm_stanza",
            "          (set_community_rm_stanza",
            "            SET:'set'",
            "            COMMUNITY:'community'",
            "            (community",
            "              NO_ADVERTISE:'no-advertise')",
            "            NEWLINE:'\\n')))",
            "      (rm_stanza",
            "        (set_rm_stanza",
            "          (set_mpls_label_rm_stanza",
            "            SET:'set'",
            "            MPLS_LABEL:'mpls-label'",
            "            NEWLINE:'\\n')))",
            "      (rm_stanza",
            "        (set_rm_stanza",
            "          (set_ipv6_rm_stanza",
            "            SET:'set'",
            "            IPV6:'ipv6'",
            "            (null_rest_of_line",
            "              NEXT_HOP:'next-hop'",
            "              IPV6_ADDRESS:'::FFFF:1.2.3.4'",
            "              NEWLINE:'\\n'))))))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        END:'end'",
            "        NEWLINE:'\\n\\n')))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/community_name_numbers_dos" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'community-name-numbers_dos'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (ip_community_list_standard_stanza",
            "      IP:'ip'",
            "      COMMUNITY_LIST:'community-list'",
            "      STANDARD:'standard'",
            "      name = (variable",
            "        VARIABLE:'9999-RRR')",
            "      (ip_community_list_standard_tail",
            "        ala = (access_list_action",
            "          PERMIT:'permit')",
            "        (community",
            "          STANDARD_COMMUNITY:'9999:8888')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (route_map_stanza",
            "      ROUTE_MAP:'route-map'",
            "      name = (variable",
            "        VARIABLE:'AAA1-BBB-CCC'  <== mode:M_RouteMap)",
            "      rmt = (access_list_action",
            "        PERMIT:'permit')",
            "      num = DEC:'100'",
            "      NEWLINE:'\\n'",
            "      (rm_stanza",
            "        (match_rm_stanza",
            "          (match_community_list_rm_stanza",
            "            MATCH:'match'",
            "            COMMUNITY:'community'",
            "            (variable",
            "              VARIABLE:'9999-RRR')",
            "            NEWLINE:'\\n')))",
            "      (rm_stanza",
            "        (set_rm_stanza",
            "          (set_community_rm_stanza",
            "            SET:'set'",
            "            COMMUNITY:'community'",
            "            (community",
            "              NO_ADVERTISE:'no-advertise')",
            "            NEWLINE:'\\n')))",
            "      (rm_stanza",
            "        (set_rm_stanza",
            "          (set_mpls_label_rm_stanza",
            "            SET:'set'",
            "            MPLS_LABEL:'mpls-label'",
            "            NEWLINE:'\\n')))",
            "      (rm_stanza",
            "        (set_rm_stanza",
            "          (set_ipv6_rm_stanza",
            "            SET:'set'",
            "            IPV6:'ipv6'",
            "            (null_rest_of_line",
            "              NEXT_HOP:'next-hop'",
            "              IPV6_ADDRESS:'::FFFF:1.2.3.4'",
            "              NEWLINE:'\\n'))))))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        END:'end'",
            "        NEWLINE:'\\n\\n')))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/community_set" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'community_set'",
            "      NEWLINE:'\\n\\n'))",
            "  (stanza",
            "    (community_set_stanza",
            "      COMMUNITY_SET:'community-set'",
            "      name = (variable",
            "        VARIABLE:'foo')",
            "      NEWLINE:'\\n'",
            "      (community_set_elem_list)",
            "      END_SET:'end-set'",
            "      NEWLINE:'\\n\\n'))",
            "  (stanza",
            "    (community_set_stanza",
            "      COMMUNITY_SET:'community-set'",
            "      name = (variable",
            "        DEC:'190')",
            "      NEWLINE:'\\n'",
            "      (community_set_elem_list",
            "        (community_set_elem",
            "          prefix = (community_set_elem_half",
            "            value = DEC:'2152')",
            "          COLON:':'",
            "          suffix = (community_set_elem_half",
            "            BRACKET_LEFT:'['",
            "            first = DEC:'65501'",
            "            PERIOD:'.'",
            "            PERIOD:'.'",
            "            last = DEC:'65517'",
            "            BRACKET_RIGHT:']'))",
            "        COMMA:','",
            "        NEWLINE:'\\n'",
            "        (community_set_elem",
            "          prefix = (community_set_elem_half",
            "            BRACKET_LEFT:'['",
            "            first = DEC:'2150'",
            "            PERIOD:'.'",
            "            PERIOD:'.'",
            "            last = DEC:'2153'",
            "            BRACKET_RIGHT:']')",
            "          COLON:':'",
            "          suffix = (community_set_elem_half",
            "            ASTERISK:'*'))",
            "        NEWLINE:'\\n')",
            "      END_SET:'end-set'",
            "      NEWLINE:'\\n'))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/cumulus_nclu" : {
          "sentences" : [
            "(cumulus_nclu_configuration",
            "  (statement",
            "    (s_null",
            "      NET:'net'",
            "      (null_rest_of_line",
            "        DEL:'del'",
            "        WORD:'all'",
            "        NEWLINE:'\\n')))",
            "  (statement",
            "    (s_net_add",
            "      NET:'net'",
            "      ADD:'add'",
            "      (a_hostname",
            "        HOSTNAME:'hostname'",
            "        hostname = (word",
            "          WORD:'cumulus_nclu')",
            "        NEWLINE:'\\n')))",
            "  (statement",
            "    (s_net_add",
            "      NET:'net'",
            "      ADD:'add'",
            "      (a_bgp",
            "        BGP:'bgp'",
            "        (b_common",
            "          (b_autonomous_system",
            "            AUTONOMOUS_SYSTEM:'autonomous-system'",
            "            as = (uint32",
            "              d = DEC:'65500')",
            "            NEWLINE:'\\n')))))",
            "  (statement",
            "    (s_net_add",
            "      NET:'net'",
            "      ADD:'add'",
            "      (a_bgp",
            "        BGP:'bgp'",
            "        (b_common",
            "          (b_ipv4_unicast",
            "            IPV4:'ipv4'",
            "            UNICAST:'unicast'",
            "            (bi4_network",
            "              NETWORK:'network'",
            "              network = (ip_prefix",
            "                IP_PREFIX:'192.0.2.1/32')",
            "              NEWLINE:'\\n'))))))",
            "  (statement",
            "    (s_net_add",
            "      NET:'net'",
            "      ADD:'add'",
            "      (a_bgp",
            "        BGP:'bgp'",
            "        (b_common",
            "          (b_ipv4_unicast",
            "            IPV4:'ipv4'",
            "            UNICAST:'unicast'",
            "            (bi4_redistribute_connected",
            "              REDISTRIBUTE:'redistribute'",
            "              CONNECTED:'connected'",
            "              ROUTE_MAP:'route-map'",
            "              rm = (word",
            "                NUMBERED_WORD:'rm1')",
            "              NEWLINE:'\\n'))))))",
            "  (statement",
            "    (s_net_add",
            "      NET:'net'",
            "      ADD:'add'",
            "      (a_bgp",
            "        BGP:'bgp'",
            "        (b_common",
            "          (b_l2vpn",
            "            L2VPN:'l2vpn'",
            "            EVPN:'evpn'",
            "            (ble_advertise_all_vni",
            "              ADVERTISE_ALL_VNI:'advertise-all-vni'",
            "              NEWLINE:'\\n'))))))",
            "  (statement",
            "    (s_net_add",
            "      NET:'net'",
            "      ADD:'add'",
            "      (a_bgp",
            "        BGP:'bgp'",
            "        (b_common",
            "          (b_l2vpn",
            "            L2VPN:'l2vpn'",
            "            EVPN:'evpn'",
            "            (ble_advertise_default_gw",
            "              ADVERTISE_DEFAULT_GW:'advertise-default-gw'",
            "              NEWLINE:'\\n'))))))",
            "  (statement",
            "    (s_net_add",
            "      NET:'net'",
            "      ADD:'add'",
            "      (a_bgp",
            "        BGP:'bgp'",
            "        (b_common",
            "          (b_l2vpn",
            "            L2VPN:'l2vpn'",
            "            EVPN:'evpn'",
            "            (ble_advertise_ipv4_unicast",
            "              ADVERTISE:'advertise'",
            "              IPV4:'ipv4'",
            "              UNICAST:'unicast'",
            "              NEWLINE:'\\n'))))))",
            "  (statement",
            "    (s_net_add",
            "      NET:'net'",
            "      ADD:'add'",
            "      (a_bgp",
            "        BGP:'bgp'",
            "        (b_common",
            "          (b_l2vpn",
            "            L2VPN:'l2vpn'",
            "            EVPN:'evpn'",
            "            (ble_neighbor",
            "              NEIGHBOR:'neighbor'",
            "              name = (word",
            "                NUMBERED_WORD:'swp1')",
            "              (blen_activate",
            "                ACTIVATE:'activate'",
            "                NEWLINE:'\\n')))))))",
            "  (statement",
            "    (s_net_add",
            "      NET:'net'",
            "      ADD:'add'",
            "      (a_bgp",
            "        BGP:'bgp'",
            "        (b_common",
            "          (b_neighbor",
            "            NEIGHBOR:'neighbor'",
            "            name = (word",
            "              NUMBERED_WORD:'swp1')",
            "            (bn_interface",
            "              INTERFACE:'interface'",
            "              (bni_remote_as_external",
            "                REMOTE_AS:'remote-as'",
            "                EXTERNAL:'external'",
            "                NEWLINE:'\\n')))))))",
            "  (statement",
            "    (s_net_add",
            "      NET:'net'",
            "      ADD:'add'",
            "      (a_bgp",
            "        BGP:'bgp'",
            "        (b_common",
            "          (b_router_id",
            "            ROUTER_ID:'router-id'",
            "            id = (ip_address",
            "              IP_ADDRESS:'192.0.2.2')",
            "            NEWLINE:'\\n')))))",
            "  (statement",
            "    (s_net_add",
            "      NET:'net'",
            "      ADD:'add'",
            "      (a_bgp",
            "        BGP:'bgp'",
            "        (b_vrf",
            "          VRF:'vrf'",
            "          name = (word",
            "            NUMBERED_WORD:'vrf1')",
            "          (b_common",
            "            (b_autonomous_system",
            "              AUTONOMOUS_SYSTEM:'autonomous-system'",
            "              as = (uint32",
            "                d = DEC:'65501')",
            "              NEWLINE:'\\n'))))))",
            "  (statement",
            "    (s_net_add",
            "      NET:'net'",
            "      ADD:'add'",
            "      (a_bgp",
            "        BGP:'bgp'",
            "        (b_vrf",
            "          VRF:'vrf'",
            "          name = (word",
            "            NUMBERED_WORD:'vrf1')",
            "          (b_common",
            "            (b_ipv4_unicast",
            "              IPV4:'ipv4'",
            "              UNICAST:'unicast'",
            "              (bi4_redistribute_connected",
            "                REDISTRIBUTE:'redistribute'",
            "                CONNECTED:'connected'",
            "                NEWLINE:'\\n')))))))",
            "  (statement",
            "    (s_net_add",
            "      NET:'net'",
            "      ADD:'add'",
            "      (a_bgp",
            "        BGP:'bgp'",
            "        (b_vrf",
            "          VRF:'vrf'",
            "          name = (word",
            "            NUMBERED_WORD:'vrf1')",
            "          (b_common",
            "            (b_ipv4_unicast",
            "              IPV4:'ipv4'",
            "              UNICAST:'unicast'",
            "              (bi4_redistribute_static",
            "                REDISTRIBUTE:'redistribute'",
            "                STATIC:'static'",
            "                NEWLINE:'\\n')))))))",
            "  (statement",
            "    (s_net_add",
            "      NET:'net'",
            "      ADD:'add'",
            "      (a_bgp",
            "        BGP:'bgp'",
            "        (b_vrf",
            "          VRF:'vrf'",
            "          name = (word",
            "            NUMBERED_WORD:'vrf1')",
            "          (b_common",
            "            (b_l2vpn",
            "              L2VPN:'l2vpn'",
            "              EVPN:'evpn'",
            "              (ble_advertise_ipv4_unicast",
            "                ADVERTISE:'advertise'",
            "                IPV4:'ipv4'",
            "                UNICAST:'unicast'",
            "                NEWLINE:'\\n')))))))",
            "  (statement",
            "    (s_net_add",
            "      NET:'net'",
            "      ADD:'add'",
            "      (a_bgp",
            "        BGP:'bgp'",
            "        (b_vrf",
            "          VRF:'vrf'",
            "          name = (word",
            "            NUMBERED_WORD:'vrf1')",
            "          (b_common",
            "            (b_router_id",
            "              ROUTER_ID:'router-id'",
            "              id = (ip_address",
            "                IP_ADDRESS:'192.0.2.3')",
            "              NEWLINE:'\\n'))))))",
            "  (statement",
            "    (s_net_add",
            "      NET:'net'",
            "      ADD:'add'",
            "      (a_bond",
            "        BOND:'bond'",
            "        name = (word",
            "          NUMBERED_WORD:'bond1')",
            "        (bond_bond",
            "          BOND:'bond'",
            "          (bobo_slaves",
            "            SLAVES:'slaves'",
            "            slaves = (glob",
            "              (glob_range_set",
            "                base_word = (numbered_word",
            "                  NUMBERED_WORD:'swp1'))",
            "              COMMA:','",
            "              (glob_range_set",
            "                base_word = (numbered_word",
            "                  NUMBERED_WORD:'swp2')",
            "                DASH:'-'",
            "                first_interval_end = (uint16",
            "                  d = DEC:'4')",
            "                COMMA:','",
            "                other_numeric_ranges = (range_set",
            "                  (range",
            "                    low = (uint16",
            "                      d = DEC:'5'))))",
            "              COMMA:','",
            "              (glob_range_set",
            "                base_word = (numbered_word",
            "                  NUMBERED_WORD:'swp6')",
            "                COMMA:','",
            "                other_numeric_ranges = (range_set",
            "                  (range",
            "                    low = (uint16",
            "                      d = DEC:'7')",
            "                    DASH:'-'",
            "                    high = (uint16",
            "                      d = DEC:'8')))))",
            "            NEWLINE:'\\n')))))",
            "  (statement",
            "    (s_net_add",
            "      NET:'net'",
            "      ADD:'add'",
            "      (a_bond",
            "        BOND:'bond'",
            "        name = (word",
            "          NUMBERED_WORD:'bond1')",
            "        (bond_bridge",
            "          BRIDGE:'bridge'",
            "          (bob_access",
            "            ACCESS:'access'",
            "            vlan = (vlan_id",
            "              v = DEC:'2')",
            "            NEWLINE:'\\n')))))",
            "  (statement",
            "    (s_net_add",
            "      NET:'net'",
            "      ADD:'add'",
            "      (a_bond",
            "        BOND:'bond'",
            "        name = (word",
            "          NUMBERED_WORD:'bond2')",
            "        (bond_bridge",
            "          BRIDGE:'bridge'",
            "          (bob_pvid",
            "            PVID:'pvid'",
            "            id = (vlan_id",
            "              v = DEC:'1')",
            "            NEWLINE:'\\n')))))",
            "  (statement",
            "    (s_net_add",
            "      NET:'net'",
            "      ADD:'add'",
            "      (a_bond",
            "        BOND:'bond'",
            "        name = (word",
            "          NUMBERED_WORD:'bond2')",
            "        (bond_bridge",
            "          BRIDGE:'bridge'",
            "          (bob_vids",
            "            VIDS:'vids'",
            "            vlans = (vlan_range_set",
            "              (vlan_range",
            "                low = (vlan_id",
            "                  v = DEC:'3'))",
            "              COMMA:','",
            "              (vlan_range",
            "                low = (vlan_id",
            "                  v = DEC:'4')",
            "                DASH:'-'",
            "                high = (vlan_id",
            "                  v = DEC:'5')))",
            "            NEWLINE:'\\n')))))",
            "  (statement",
            "    (s_net_add",
            "      NET:'net'",
            "      ADD:'add'",
            "      (a_bond",
            "        BOND:'bond'",
            "        name = (word",
            "          NUMBERED_WORD:'bond1')",
            "        (bond_clag_id",
            "          CLAG:'clag'",
            "          ID:'id'",
            "          id = (uint16",
            "            d = DEC:'1')",
            "          NEWLINE:'\\n'))))",
            "  (statement",
            "    (s_net_add",
            "      NET:'net'",
            "      ADD:'add'",
            "      (a_bridge",
            "        BRIDGE:'bridge'",
            "        (bridge_bridge",
            "          BRIDGE:'bridge'",
            "          (brbr_ports",
            "            PORTS:'ports'",
            "            ports = (glob",
            "              (glob_range_set",
            "                base_word = (numbered_word",
            "                  NUMBERED_WORD:'bond1'))",
            "              COMMA:','",
            "              (glob_range_set",
            "                base_word = (numbered_word",
            "                  NUMBERED_WORD:'swp1'))",
            "              COMMA:','",
            "              (glob_range_set",
            "                base_word = (numbered_word",
            "                  NUMBERED_WORD:'vni10001')))",
            "            NEWLINE:'\\n')))))",
            "  (statement",
            "    (s_net_add",
            "      NET:'net'",
            "      ADD:'add'",
            "      (a_bridge",
            "        BRIDGE:'bridge'",
            "        (bridge_bridge",
            "          BRIDGE:'bridge'",
            "          (brbr_pvid",
            "            PVID:'pvid'",
            "            pvid = (vlan_id",
            "              v = DEC:'2')",
            "            NEWLINE:'\\n')))))",
            "  (statement",
            "    (s_net_add",
            "      NET:'net'",
            "      ADD:'add'",
            "      (a_bridge",
            "        BRIDGE:'bridge'",
            "        (bridge_bridge",
            "          BRIDGE:'bridge'",
            "          (brbr_vids",
            "            VIDS:'vids'",
            "            ids = (range_set",
            "              (range",
            "                low = (uint16",
            "                  d = DEC:'1'))",
            "              COMMA:','",
            "              (range",
            "                low = (uint16",
            "                  d = DEC:'2')",
            "                DASH:'-'",
            "                high = (uint16",
            "                  d = DEC:'3')))",
            "            NEWLINE:'\\n')))))",
            "  (statement",
            "    (s_net_add",
            "      NET:'net'",
            "      ADD:'add'",
            "      (a_bridge",
            "        BRIDGE:'bridge'",
            "        (bridge_bridge",
            "          BRIDGE:'bridge'",
            "          (brbr_vlan_aware",
            "            VLAN_AWARE:'vlan-aware'",
            "            NEWLINE:'\\n')))))",
            "  (statement",
            "    (s_net_add",
            "      NET:'net'",
            "      ADD:'add'",
            "      (a_dns",
            "        DNS:'dns'",
            "        (dns_nameserver",
            "          NAMESERVER:'nameserver'",
            "          (dn4",
            "            IPV4:'ipv4'",
            "            address = (ip_address",
            "              IP_ADDRESS:'192.0.2.3')",
            "            NEWLINE:'\\n')))))",
            "  (statement",
            "    (s_net_add",
            "      NET:'net'",
            "      ADD:'add'",
            "      (a_dns",
            "        DNS:'dns'",
            "        (dns_nameserver",
            "          NAMESERVER:'nameserver'",
            "          (dn6",
            "            IPV6:'ipv6'",
            "            address6 = (ipv6_address",
            "              IPV6_ADDRESS:'dead:beef::1')",
            "            NEWLINE:'\\n')))))",
            "  (statement",
            "    (s_net_add",
            "      NET:'net'",
            "      ADD:'add'",
            "      (a_dot1x",
            "        DOT1X:'dot1x'",
            "        (null_rest_of_line",
            "          WORD:'eap-reauth-period'",
            "          DEC:'0'",
            "          NEWLINE:'\\n'))))",
            "  (statement",
            "    (s_net_add",
            "      NET:'net'",
            "      ADD:'add'",
            "      (a_dot1x",
            "        DOT1X:'dot1x'",
            "        (null_rest_of_line",
            "          WORD:'mab-activation-delay'",
            "          DEC:'30'",
            "          NEWLINE:'\\n'))))",
            "  (statement",
            "    (s_net_add",
            "      NET:'net'",
            "      ADD:'add'",
            "      (a_dot1x",
            "        DOT1X:'dot1x'",
            "        (null_rest_of_line",
            "          WORD:'radius'",
            "          WORD:'accounting-port'",
            "          DEC:'1234'",
            "          NEWLINE:'\\n'))))",
            "  (statement",
            "    (s_net_add",
            "      NET:'net'",
            "      ADD:'add'",
            "      (a_dot1x",
            "        DOT1X:'dot1x'",
            "        (null_rest_of_line",
            "          WORD:'radius'",
            "          WORD:'authentication-port'",
            "          DEC:'2345'",
            "          NEWLINE:'\\n'))))",
            "  (statement",
            "    (s_net_add",
            "      NET:'net'",
            "      ADD:'add'",
            "      (a_interface",
            "        INTERFACE:'interface'",
            "        interfaces = (glob",
            "          (glob_range_set",
            "            base_word = (numbered_word",
            "              NUMBERED_WORD:'bond1.4094')))",
            "        (i_clag",
            "          CLAG:'clag'",
            "          (ic_backup_ip",
            "            BACKUP_IP:'backup-ip'",
            "            backup_ip = (ip_address",
            "              IP_ADDRESS:'192.0.2.4')",
            "            VRF:'vrf'",
            "            vrf = (word",
            "              WORD:'mgmt')",
            "            NEWLINE:'\\n')))))",
            "  (statement",
            "    (s_net_add",
            "      NET:'net'",
            "      ADD:'add'",
            "      (a_interface",
            "        INTERFACE:'interface'",
            "        interfaces = (glob",
            "          (glob_range_set",
            "            base_word = (numbered_word",
            "              NUMBERED_WORD:'bond1.4094')))",
            "        (i_clag",
            "          CLAG:'clag'",
            "          (ic_peer_ip",
            "            PEER_IP:'peer-ip'",
            "            peer_ip = (ip_address",
            "              IP_ADDRESS:'192.0.2.5')",
            "            NEWLINE:'\\n')))))",
            "  (statement",
            "    (s_net_add",
            "      NET:'net'",
            "      ADD:'add'",
            "      (a_interface",
            "        INTERFACE:'interface'",
            "        interfaces = (glob",
            "          (glob_range_set",
            "            base_word = (numbered_word",
            "              NUMBERED_WORD:'bond1.4094')))",
            "        (i_clag",
            "          CLAG:'clag'",
            "          (ic_priority",
            "            PRIORITY:'priority'",
            "            priority = (uint16",
            "              d = DEC:'1000')",
            "            NEWLINE:'\\n')))))",
            "  (statement",
            "    (s_net_add",
            "      NET:'net'",
            "      ADD:'add'",
            "      (a_interface",
            "        INTERFACE:'interface'",
            "        interfaces = (glob",
            "          (glob_range_set",
            "            base_word = (numbered_word",
            "              NUMBERED_WORD:'bond1.4094')))",
            "        (i_clag",
            "          CLAG:'clag'",
            "          (ic_sys_mac",
            "            SYS_MAC:'sys-mac'",
            "            mac = (mac_address",
            "              MAC_ADDRESS:'00:11:22:33:44:55')",
            "            NEWLINE:'\\n')))))",
            "  (statement",
            "    (s_net_add",
            "      NET:'net'",
            "      ADD:'add'",
            "      (a_interface",
            "        INTERFACE:'interface'",
            "        interfaces = (glob",
            "          (glob_range_set",
            "            base_word = (numbered_word",
            "              NUMBERED_WORD:'bond1.4094')))",
            "        (i_ip_address",
            "          IP:'ip'",
            "          ADDRESS:'address'",
            "          address = (interface_address",
            "            IP_PREFIX:'192.0.2.6/24')",
            "          NEWLINE:'\\n'))))",
            "  (statement",
            "    (s_net_add",
            "      NET:'net'",
            "      ADD:'add'",
            "      (a_interface",
            "        INTERFACE:'interface'",
            "        interfaces = (glob",
            "          (glob_range_set",
            "            base_word = (numbered_word",
            "              NUMBERED_WORD:'eth0')))",
            "        (i_vrf",
            "          VRF:'vrf'",
            "          name = (word",
            "            WORD:'mgmt')",
            "          NEWLINE:'\\n'))))",
            "  (statement",
            "    (s_net_add",
            "      NET:'net'",
            "      ADD:'add'",
            "      (a_interface",
            "        INTERFACE:'interface'",
            "        interfaces = (glob",
            "          (glob_range_set",
            "            base_word = (numbered_word",
            "              NUMBERED_WORD:'swp1')))",
            "        (i_bridge",
            "          BRIDGE:'bridge'",
            "          (ib_access",
            "            ACCESS:'access'",
            "            vlan = (vlan_id",
            "              v = DEC:'3')",
            "            NEWLINE:'\\n')))))",
            "  (statement",
            "    (s_net_add",
            "      NET:'net'",
            "      ADD:'add'",
            "      (a_interface",
            "        INTERFACE:'interface'",
            "        interfaces = (glob",
            "          (glob_range_set",
            "            base_word = (numbered_word",
            "              NUMBERED_WORD:'swp2')))",
            "        (i_bridge",
            "          BRIDGE:'bridge'",
            "          (ib_pvid",
            "            PVID:'pvid'",
            "            id = (vlan_id",
            "              v = DEC:'4')",
            "            NEWLINE:'\\n')))))",
            "  (statement",
            "    (s_net_add",
            "      NET:'net'",
            "      ADD:'add'",
            "      (a_interface",
            "        INTERFACE:'interface'",
            "        interfaces = (glob",
            "          (glob_range_set",
            "            base_word = (numbered_word",
            "              NUMBERED_WORD:'swp2')))",
            "        (i_bridge",
            "          BRIDGE:'bridge'",
            "          (ib_vids",
            "            VIDS:'vids'",
            "            vlans = (vlan_range_set",
            "              (vlan_range",
            "                low = (vlan_id",
            "                  v = DEC:'5')",
            "                DASH:'-'",
            "                high = (vlan_id",
            "                  v = DEC:'6')))",
            "            NEWLINE:'\\n')))))",
            "  (statement",
            "    (s_net_add",
            "      NET:'net'",
            "      ADD:'add'",
            "      (a_interface",
            "        INTERFACE:'interface'",
            "        interfaces = (glob",
            "          (glob_range_set",
            "            base_word = (numbered_word",
            "              NUMBERED_WORD:'swp1')",
            "            COMMA:','",
            "            other_numeric_ranges = (range_set",
            "              (range",
            "                low = (uint16",
            "                  d = DEC:'2')",
            "                DASH:'-'",
            "                high = (uint16",
            "                  d = DEC:'3')))))",
            "        NEWLINE:'\\n')))",
            "  (statement",
            "    (s_net_add",
            "      NET:'net'",
            "      ADD:'add'",
            "      (a_loopback",
            "        LOOPBACK:'loopback'",
            "        LO:'lo'",
            "        NEWLINE:'\\n')))",
            "  (statement",
            "    (s_net_add",
            "      NET:'net'",
            "      ADD:'add'",
            "      (a_loopback",
            "        LOOPBACK:'loopback'",
            "        LO:'lo'",
            "        (l_clag",
            "          CLAG:'clag'",
            "          (lc_vxlan_anycast_ip",
            "            VXLAN_ANYCAST_IP:'vxlan-anycast-ip'",
            "            ip = (ip_address",
            "              IP_ADDRESS:'192.0.2.7')",
            "            NEWLINE:'\\n')))))",
            "  (statement",
            "    (s_net_add",
            "      NET:'net'",
            "      ADD:'add'",
            "      (a_loopback",
            "        LOOPBACK:'loopback'",
            "        LO:'lo'",
            "        (l_ip_address",
            "          IP:'ip'",
            "          ADDRESS:'address'",
            "          address = (interface_address",
            "            IP_PREFIX:'192.0.2.8/32')",
            "          NEWLINE:'\\n'))))",
            "  (statement",
            "    (s_net_add",
            "      NET:'net'",
            "      ADD:'add'",
            "      (a_ptp",
            "        PTP:'ptp'",
            "        (null_rest_of_line",
            "          WORD:'global'",
            "          WORD:'domain-number'",
            "          DEC:'0'",
            "          NEWLINE:'\\n'))))",
            "  (statement",
            "    (s_net_add",
            "      NET:'net'",
            "      ADD:'add'",
            "      (a_ptp",
            "        PTP:'ptp'",
            "        (null_rest_of_line",
            "          WORD:'global'",
            "          WORD:'logging-level'",
            "          DEC:'5'",
            "          NEWLINE:'\\n'))))",
            "  (statement",
            "    (s_net_add",
            "      NET:'net'",
            "      ADD:'add'",
            "      (a_ptp",
            "        PTP:'ptp'",
            "        (null_rest_of_line",
            "          WORD:'global'",
            "          WORD:'path-trace-enabled'",
            "          WORD:'no'",
            "          NEWLINE:'\\n'))))",
            "  (statement",
            "    (s_net_add",
            "      NET:'net'",
            "      ADD:'add'",
            "      (a_ptp",
            "        PTP:'ptp'",
            "        (null_rest_of_line",
            "          WORD:'global'",
            "          NUMBERED_WORD:'priority1'",
            "          DEC:'255'",
            "          NEWLINE:'\\n'))))",
            "  (statement",
            "    (s_net_add",
            "      NET:'net'",
            "      ADD:'add'",
            "      (a_ptp",
            "        PTP:'ptp'",
            "        (null_rest_of_line",
            "          WORD:'global'",
            "          WORD:'slave-only'",
            "          WORD:'no'",
            "          NEWLINE:'\\n'))))",
            "  (statement",
            "    (s_net_add",
            "      NET:'net'",
            "      ADD:'add'",
            "      (a_ptp",
            "        PTP:'ptp'",
            "        (null_rest_of_line",
            "          WORD:'global'",
            "          WORD:'summary-interval'",
            "          DEC:'0'",
            "          NEWLINE:'\\n'))))",
            "  (statement",
            "    (s_net_add",
            "      NET:'net'",
            "      ADD:'add'",
            "      (a_ptp",
            "        PTP:'ptp'",
            "        (null_rest_of_line",
            "          WORD:'global'",
            "          WORD:'time-stamping'",
            "          NEWLINE:'\\n'))))",
            "  (statement",
            "    (s_net_add",
            "      NET:'net'",
            "      ADD:'add'",
            "      (a_ptp",
            "        PTP:'ptp'",
            "        (null_rest_of_line",
            "          WORD:'global'",
            "          WORD:'use-syslog'",
            "          WORD:'yes'",
            "          NEWLINE:'\\n'))))",
            "  (statement",
            "    (s_net_add",
            "      NET:'net'",
            "      ADD:'add'",
            "      (a_ptp",
            "        PTP:'ptp'",
            "        (null_rest_of_line",
            "          WORD:'global'",
            "          WORD:'verbose'",
            "          WORD:'no'",
            "          NEWLINE:'\\n'))))",
            "  (statement",
            "    (s_net_add",
            "      NET:'net'",
            "      ADD:'add'",
            "      (a_routing",
            "        ROUTING:'routing'",
            "        (r_defaults_datacenter",
            "          DEFAULTS:'defaults'",
            "          DATACENTER:'datacenter'",
            "          NEWLINE:'\\n'))))",
            "  (statement",
            "    (s_net_add",
            "      NET:'net'",
            "      ADD:'add'",
            "      (a_routing",
            "        ROUTING:'routing'",
            "        (r_log",
            "          LOG:'log'",
            "          (rl_syslog",
            "            SYSLOG:'syslog'",
            "            INFORMATIONAL:'informational'",
            "            NEWLINE:'\\n')))))",
            "  (statement",
            "    (s_net_add",
            "      NET:'net'",
            "      ADD:'add'",
            "      (a_routing",
            "        ROUTING:'routing'",
            "        (r_route",
            "          ROUTE:'route'",
            "          prefix = (ip_prefix",
            "            IP_PREFIX:'192.0.2.0/24')",
            "          nhip = (ip_address",
            "            IP_ADDRESS:'10.0.0.1')",
            "          NEWLINE:'\\n'))))",
            "  (statement",
            "    (s_net_add",
            "      NET:'net'",
            "      ADD:'add'",
            "      (a_routing",
            "        ROUTING:'routing'",
            "        (r_route_map",
            "          ROUTE_MAP:'route-map'",
            "          name = (word",
            "            NUMBERED_WORD:'rm1')",
            "          action = (line_action",
            "            PERMIT:'permit')",
            "          num = (uint16",
            "            d = DEC:'1')",
            "          (rm_match",
            "            MATCH:'match'",
            "            (rmm_interface",
            "              INTERFACE:'interface'",
            "              interfaces = (glob",
            "                (glob_range_set",
            "                  unnumbered = (glob_word",
            "                    LO:'lo')))",
            "              NEWLINE:'\\n'))))))",
            "  (statement",
            "    (s_net_add",
            "      NET:'net'",
            "      ADD:'add'",
            "      (a_routing",
            "        ROUTING:'routing'",
            "        (r_service_integrated_vtysh_config",
            "          SERVICE:'service'",
            "          INTEGRATED_VTYSH_CONFIG:'integrated-vtysh-config'",
            "          NEWLINE:'\\n'))))",
            "  (statement",
            "    (s_net_add",
            "      NET:'net'",
            "      ADD:'add'",
            "      (a_snmp_server",
            "        SNMP_SERVER:'snmp-server'",
            "        (null_rest_of_line",
            "          WORD:'listening-address'",
            "          WORD:'localhost'",
            "          NEWLINE:'\\n'))))",
            "  (statement",
            "    (s_net_add",
            "      NET:'net'",
            "      ADD:'add'",
            "      (a_time",
            "        TIME:'time'",
            "        (t_ntp",
            "          NTP:'ntp'",
            "          (tn_server",
            "            SERVER:'server'",
            "            server = (word",
            "              WORD:'0.pool.ntp.example.com')",
            "            IBURST:'iburst'",
            "            NEWLINE:'\\n')))))",
            "  (statement",
            "    (s_net_add",
            "      NET:'net'",
            "      ADD:'add'",
            "      (a_time",
            "        TIME:'time'",
            "        (t_ntp",
            "          NTP:'ntp'",
            "          (tn_source",
            "            SOURCE:'source'",
            "            source = (word",
            "              NUMBERED_WORD:'eth0')",
            "            NEWLINE:'\\n')))))",
            "  (statement",
            "    (s_net_add",
            "      NET:'net'",
            "      ADD:'add'",
            "      (a_time",
            "        TIME:'time'",
            "        (t_zone",
            "          ZONE:'zone'",
            "          zone = (word",
            "            WORD:'Etc/UTC')",
            "          NEWLINE:'\\n'))))",
            "  (statement",
            "    (s_net_add",
            "      NET:'net'",
            "      ADD:'add'",
            "      (a_vlan",
            "        VLAN:'vlan'",
            "        suffixes = (range_set",
            "          (range",
            "            low = (uint16",
            "              d = DEC:'4')))",
            "        (v_ip_address",
            "          IP:'ip'",
            "          ADDRESS:'address'",
            "          address = (interface_address",
            "            IP_PREFIX:'192.0.2.9/24')",
            "          NEWLINE:'\\n'))))",
            "  (statement",
            "    (s_net_add",
            "      NET:'net'",
            "      ADD:'add'",
            "      (a_vlan",
            "        VLAN:'vlan'",
            "        suffixes = (range_set",
            "          (range",
            "            low = (uint16",
            "              d = DEC:'4')))",
            "        (v_ip_address_virtual",
            "          IP:'ip'",
            "          ADDRESS_VIRTUAL:'address-virtual'",
            "          mac = (mac_address",
            "            MAC_ADDRESS:'01:23:45:67:89:ab')",
            "          address = (interface_address",
            "            IP_PREFIX:'192.168.0.1/24')",
            "          NEWLINE:'\\n'))))",
            "  (statement",
            "    (s_net_add",
            "      NET:'net'",
            "      ADD:'add'",
            "      (a_vlan",
            "        VLAN:'vlan'",
            "        suffix = (uint16",
            "          d = DEC:'4')",
            "        (v_vlan_id",
            "          VLAN_ID:'vlan-id'",
            "          id = (vlan_id",
            "            v = DEC:'4')",
            "          NEWLINE:'\\n'))))",
            "  (statement",
            "    (s_net_add",
            "      NET:'net'",
            "      ADD:'add'",
            "      (a_vlan",
            "        VLAN:'vlan'",
            "        suffixes = (range_set",
            "          (range",
            "            low = (uint16",
            "              d = DEC:'4')))",
            "        (v_vlan_raw_device",
            "          VLAN_RAW_DEVICE:'vlan-raw-device'",
            "          device = BRIDGE:'bridge'",
            "          NEWLINE:'\\n'))))",
            "  (statement",
            "    (s_net_add",
            "      NET:'net'",
            "      ADD:'add'",
            "      (a_vlan",
            "        VLAN:'vlan'",
            "        suffixes = (range_set",
            "          (range",
            "            low = (uint16",
            "              d = DEC:'4')))",
            "        (v_vrf",
            "          VRF:'vrf'",
            "          name = (word",
            "            NUMBERED_WORD:'vrf1')",
            "          NEWLINE:'\\n'))))",
            "  (statement",
            "    (s_net_add",
            "      NET:'net'",
            "      ADD:'add'",
            "      (a_vrf",
            "        VRF:'vrf'",
            "        names = (glob",
            "          (glob_range_set",
            "            unnumbered = (glob_word",
            "              WORD:'mgmt')))",
            "        NEWLINE:'\\n')))",
            "  (statement",
            "    (s_net_add",
            "      NET:'net'",
            "      ADD:'add'",
            "      (a_vrf",
            "        VRF:'vrf'",
            "        names = (glob",
            "          (glob_range_set",
            "            unnumbered = (glob_word",
            "              WORD:'mgmt')))",
            "        (vrf_ip_address",
            "          IP:'ip'",
            "          ADDRESS:'address'",
            "          address = (interface_address",
            "            IP_PREFIX:'10.0.0.2/8')",
            "          NEWLINE:'\\n'))))",
            "  (statement",
            "    (s_net_add",
            "      NET:'net'",
            "      ADD:'add'",
            "      (a_vrf",
            "        VRF:'vrf'",
            "        names = (glob",
            "          (glob_range_set",
            "            base_word = (numbered_word",
            "              NUMBERED_WORD:'vrf1')))",
            "        (vrf_vni",
            "          VNI:'vni'",
            "          vni = (vni_number",
            "            v = DEC:'10001')",
            "          NEWLINE:'\\n'))))",
            "  (statement",
            "    (s_net_add",
            "      NET:'net'",
            "      ADD:'add'",
            "      (a_vrf",
            "        VRF:'vrf'",
            "        names = (glob",
            "          (glob_range_set",
            "            base_word = (numbered_word",
            "              NUMBERED_WORD:'vrf1'))",
            "          COMMA:','",
            "          (glob_range_set",
            "            unnumbered = (glob_word",
            "              WORD:'mgmt')))",
            "        (vrf_vrf_table",
            "          VRF_TABLE:'vrf-table'",
            "          AUTO:'auto'",
            "          NEWLINE:'\\n'))))",
            "  (statement",
            "    (s_net_add",
            "      NET:'net'",
            "      ADD:'add'",
            "      (a_vxlan",
            "        VXLAN:'vxlan'",
            "        names = (glob",
            "          (glob_range_set",
            "            base_word = (numbered_word",
            "              NUMBERED_WORD:'vni10001')))",
            "        (vx_bridge",
            "          BRIDGE:'bridge'",
            "          (vxb_access",
            "            ACCESS:'access'",
            "            vlan = (vlan_id",
            "              v = DEC:'5')",
            "            NEWLINE:'\\n')))))",
            "  (statement",
            "    (s_net_add",
            "      NET:'net'",
            "      ADD:'add'",
            "      (a_vxlan",
            "        VXLAN:'vxlan'",
            "        names = (glob",
            "          (glob_range_set",
            "            base_word = (numbered_word",
            "              NUMBERED_WORD:'vni10001')))",
            "        (vx_vxlan",
            "          VXLAN:'vxlan'",
            "          (vxv_id",
            "            ID:'id'",
            "            vni = (vni_number",
            "              v = DEC:'100001')",
            "            NEWLINE:'\\n')))))",
            "  (statement",
            "    (s_net_add",
            "      NET:'net'",
            "      ADD:'add'",
            "      (a_vxlan",
            "        VXLAN:'vxlan'",
            "        names = (glob",
            "          (glob_range_set",
            "            base_word = (numbered_word",
            "              NUMBERED_WORD:'vni10001')",
            "            COMMA:','",
            "            other_numeric_ranges = (range_set",
            "              (range",
            "                low = (uint16",
            "                  d = DEC:'10002')",
            "                DASH:'-'",
            "                high = (uint16",
            "                  d = DEC:'10003')))))",
            "        (vx_bridge",
            "          BRIDGE:'bridge'",
            "          (vxb_arp_nd_suppress",
            "            ARP_ND_SUPPRESS:'arp-nd-suppress'",
            "            ON:'on'",
            "            NEWLINE:'\\n')))))",
            "  (statement",
            "    (s_net_add",
            "      NET:'net'",
            "      ADD:'add'",
            "      (a_vxlan",
            "        VXLAN:'vxlan'",
            "        names = (glob",
            "          (glob_range_set",
            "            base_word = (numbered_word",
            "              NUMBERED_WORD:'vni10001')",
            "            COMMA:','",
            "            other_numeric_ranges = (range_set",
            "              (range",
            "                low = (uint16",
            "                  d = DEC:'10002')",
            "                DASH:'-'",
            "                high = (uint16",
            "                  d = DEC:'10003')))))",
            "        (vx_bridge",
            "          BRIDGE:'bridge'",
            "          (vxb_learning",
            "            LEARNING:'learning'",
            "            OFF:'off'",
            "            NEWLINE:'\\n')))))",
            "  (statement",
            "    (s_net_add",
            "      NET:'net'",
            "      ADD:'add'",
            "      (a_vxlan",
            "        VXLAN:'vxlan'",
            "        names = (glob",
            "          (glob_range_set",
            "            base_word = (numbered_word",
            "              NUMBERED_WORD:'vni10001')",
            "            COMMA:','",
            "            other_numeric_ranges = (range_set",
            "              (range",
            "                low = (uint16",
            "                  d = DEC:'10002')",
            "                DASH:'-'",
            "                high = (uint16",
            "                  d = DEC:'10003')))))",
            "        (vx_stp",
            "          STP:'stp'",
            "          (vxs_bpduguard",
            "            BPDUGUARD:'bpduguard'",
            "            NEWLINE:'\\n')))))",
            "  (statement",
            "    (s_net_add",
            "      NET:'net'",
            "      ADD:'add'",
            "      (a_vxlan",
            "        VXLAN:'vxlan'",
            "        names = (glob",
            "          (glob_range_set",
            "            base_word = (numbered_word",
            "              NUMBERED_WORD:'vni10001')",
            "            COMMA:','",
            "            other_numeric_ranges = (range_set",
            "              (range",
            "                low = (uint16",
            "                  d = DEC:'10002')",
            "                DASH:'-'",
            "                high = (uint16",
            "                  d = DEC:'10003')))))",
            "        (vx_stp",
            "          STP:'stp'",
            "          (vxs_portbpdufilter",
            "            PORTBPDUFILTER:'portbpdufilter'",
            "            NEWLINE:'\\n')))))",
            "  (statement",
            "    (s_net_add",
            "      NET:'net'",
            "      ADD:'add'",
            "      (a_vxlan",
            "        VXLAN:'vxlan'",
            "        names = (glob",
            "          (glob_range_set",
            "            base_word = (numbered_word",
            "              NUMBERED_WORD:'vni10001')",
            "            COMMA:','",
            "            other_numeric_ranges = (range_set",
            "              (range",
            "                low = (uint16",
            "                  d = DEC:'10002')",
            "                DASH:'-'",
            "                high = (uint16",
            "                  d = DEC:'10003')))))",
            "        (vx_vxlan",
            "          VXLAN:'vxlan'",
            "          (vxv_local_tunnelip",
            "            LOCAL_TUNNELIP:'local-tunnelip'",
            "            ip = (ip_address",
            "              IP_ADDRESS:'192.0.2.10')",
            "            NEWLINE:'\\n')))))",
            "  (statement",
            "    (s_null",
            "      NET:'net'",
            "      (null_rest_of_line",
            "        COMMIT:'commit'",
            "        NEWLINE:'\\n\\n')))",
            "  (statement",
            "    (s_extra_configuration",
            "      EXTRA_CONFIGURATION_HEADER:'sudo sh -c \"printf ''",
            "      (frr_username",
            "        USERNAME:'username'  <== mode:M_Printf",
            "        (frr_null_rest_of_line",
            "          WORD:'cumulus'  <== mode:M_Printf",
            "          WORD:'nopassword'  <== mode:M_Printf",
            "          NEWLINE:'\\n'  <== mode:M_Printf))",
            "      EXTRA_CONFIGURATION_FOOTER:'' >> /etc/frr/frr.conf\"'  <== mode:M_Printf",
            "      NEWLINE:'\\n'))",
            "  (statement",
            "    (s_extra_configuration",
            "      EXTRA_CONFIGURATION_HEADER:'sudo sh -c \"printf ''",
            "      (frr_vrf",
            "        VRF:'vrf'  <== mode:M_Printf",
            "        name = (word",
            "          WORD:'vrf1'  <== mode:M_Printf)",
            "        NEWLINE:'\\n'  <== mode:M_Printf",
            "        (frrv_ip_route",
            "          IP:'ip'  <== mode:M_Printf",
            "          ROUTE:'route'  <== mode:M_Printf",
            "          network = (ip_prefix",
            "            IP_PREFIX:'0.0.0.0/0'  <== mode:M_Printf)",
            "          nhip = (ip_address",
            "            IP_ADDRESS:'192.0.2.1'  <== mode:M_Printf)",
            "          NEWLINE:'\\n'  <== mode:M_Printf))",
            "      EXTRA_CONFIGURATION_FOOTER:'' >> /etc/frr/frr.conf\"'  <== mode:M_Printf",
            "      NEWLINE:'\\n\\n'))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/cumulus_nclu_invalid_bonds" : {
          "sentences" : [
            "(cumulus_nclu_configuration",
            "  (statement",
            "    (s_null",
            "      NET:'net'",
            "      (null_rest_of_line",
            "        DEL:'del'",
            "        WORD:'all'",
            "        NEWLINE:'\\n')))",
            "  (statement",
            "    (s_net_add",
            "      NET:'net'",
            "      ADD:'add'",
            "      (a_hostname",
            "        HOSTNAME:'hostname'",
            "        hostname = (word",
            "          WORD:'cumulus_nclu_invalid_bonds')",
            "        NEWLINE:'\\n')))",
            "  (statement",
            "    (s_net_add",
            "      NET:'net'",
            "      ADD:'add'",
            "      (a_bond",
            "        BOND:'bond'",
            "        name = (word",
            "          LO:'lo')",
            "        (bond_bond",
            "          BOND:'bond'",
            "          (bobo_slaves",
            "            SLAVES:'slaves'",
            "            slaves = (glob",
            "              (glob_range_set",
            "                base_word = (numbered_word",
            "                  NUMBERED_WORD:'swp1')))",
            "            NEWLINE:'\\n')))))",
            "  (statement",
            "    (s_net_add",
            "      NET:'net'",
            "      ADD:'add'",
            "      (a_vrf",
            "        VRF:'vrf'",
            "        names = (glob",
            "          (glob_range_set",
            "            base_word = (numbered_word",
            "              NUMBERED_WORD:'vrf1')))",
            "        NEWLINE:'\\n')))",
            "  (statement",
            "    (s_net_add",
            "      NET:'net'",
            "      ADD:'add'",
            "      (a_bond",
            "        BOND:'bond'",
            "        name = (word",
            "          NUMBERED_WORD:'vrf1')",
            "        (bond_bond",
            "          BOND:'bond'",
            "          (bobo_slaves",
            "            SLAVES:'slaves'",
            "            slaves = (glob",
            "              (glob_range_set",
            "                base_word = (numbered_word",
            "                  NUMBERED_WORD:'swp2')))",
            "            NEWLINE:'\\n')))))",
            "  (statement",
            "    (s_net_add",
            "      NET:'net'",
            "      ADD:'add'",
            "      (a_bond",
            "        BOND:'bond'",
            "        name = (word",
            "          NUMBERED_WORD:'eth0')",
            "        (bond_bond",
            "          BOND:'bond'",
            "          (bobo_slaves",
            "            SLAVES:'slaves'",
            "            slaves = (glob",
            "              (glob_range_set",
            "                base_word = (numbered_word",
            "                  NUMBERED_WORD:'swp3')))",
            "            NEWLINE:'\\n')))))",
            "  (statement",
            "    (s_net_add",
            "      NET:'net'",
            "      ADD:'add'",
            "      (a_bond",
            "        BOND:'bond'",
            "        name = (word",
            "          NUMBERED_WORD:'swp4')",
            "        (bond_bond",
            "          BOND:'bond'",
            "          (bobo_slaves",
            "            SLAVES:'slaves'",
            "            slaves = (glob",
            "              (glob_range_set",
            "                base_word = (numbered_word",
            "                  NUMBERED_WORD:'swp5')))",
            "            NEWLINE:'\\n')))))",
            "  (statement",
            "    (s_net_add",
            "      NET:'net'",
            "      ADD:'add'",
            "      (a_bond",
            "        BOND:'bond'",
            "        name = (word",
            "          NUMBERED_WORD:'bond1.1000')",
            "        (bond_bond",
            "          BOND:'bond'",
            "          (bobo_slaves",
            "            SLAVES:'slaves'",
            "            slaves = (glob",
            "              (glob_range_set",
            "                base_word = (numbered_word",
            "                  NUMBERED_WORD:'swp6')))",
            "            NEWLINE:'\\n')))))",
            "  (statement",
            "    (s_net_add",
            "      NET:'net'",
            "      ADD:'add'",
            "      (a_bond",
            "        BOND:'bond'",
            "        name = (word",
            "          NUMBERED_WORD:'vlan1')",
            "        (bond_bond",
            "          BOND:'bond'",
            "          (bobo_slaves",
            "            SLAVES:'slaves'",
            "            slaves = (glob",
            "              (glob_range_set",
            "                base_word = (numbered_word",
            "                  NUMBERED_WORD:'swp7')))",
            "            NEWLINE:'\\n')))))",
            "  (statement",
            "    (s_net_add",
            "      NET:'net'",
            "      ADD:'add'",
            "      (a_vxlan",
            "        VXLAN:'vxlan'",
            "        names = (glob",
            "          (glob_range_set",
            "            base_word = (numbered_word",
            "              NUMBERED_WORD:'v1')))",
            "        (vx_vxlan",
            "          VXLAN:'vxlan'",
            "          (vxv_id",
            "            ID:'id'",
            "            vni = (vni_number",
            "              v = DEC:'10001')",
            "            NEWLINE:'\\n')))))",
            "  (statement",
            "    (s_net_add",
            "      NET:'net'",
            "      ADD:'add'",
            "      (a_bond",
            "        BOND:'bond'",
            "        name = (word",
            "          NUMBERED_WORD:'v1')",
            "        (bond_bond",
            "          BOND:'bond'",
            "          (bobo_slaves",
            "            SLAVES:'slaves'",
            "            slaves = (glob",
            "              (glob_range_set",
            "                base_word = (numbered_word",
            "                  NUMBERED_WORD:'swp8')))",
            "            NEWLINE:'\\n')))))",
            "  (statement",
            "    (s_null",
            "      NET:'net'",
            "      (null_rest_of_line",
            "        COMMIT:'commit'",
            "        NEWLINE:'\\n\\n\\n')))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/cumulus_nclu_invalid_interfaces" : {
          "sentences" : [
            "(cumulus_nclu_configuration",
            "  (statement",
            "    (s_null",
            "      NET:'net'",
            "      (null_rest_of_line",
            "        DEL:'del'",
            "        WORD:'all'",
            "        NEWLINE:'\\n')))",
            "  (statement",
            "    (s_net_add",
            "      NET:'net'",
            "      ADD:'add'",
            "      (a_hostname",
            "        HOSTNAME:'hostname'",
            "        hostname = (word",
            "          WORD:'cumulus_nclu_invalid_interfaces')",
            "        NEWLINE:'\\n')))",
            "  (statement",
            "    (s_net_add",
            "      NET:'net'",
            "      ADD:'add'",
            "      (a_bond",
            "        BOND:'bond'",
            "        name = (word",
            "          NUMBERED_WORD:'bond1')",
            "        (bond_bond",
            "          BOND:'bond'",
            "          (bobo_slaves",
            "            SLAVES:'slaves'",
            "            slaves = (glob",
            "              (glob_range_set",
            "                base_word = (numbered_word",
            "                  NUMBERED_WORD:'swp1'))",
            "              COMMA:','",
            "              (glob_range_set",
            "                unnumbered = (glob_word",
            "                  WORD:'unknown_interface')))",
            "            NEWLINE:'\\n')))))",
            "  (statement",
            "    (s_net_add",
            "      NET:'net'",
            "      ADD:'add'",
            "      (a_interface",
            "        INTERFACE:'interface'",
            "        interfaces = (glob",
            "          (glob_range_set",
            "            unnumbered = (glob_word",
            "              WORD:'unknown_interface')))",
            "        (i_ip_address",
            "          IP:'ip'",
            "          ADDRESS:'address'",
            "          address = (interface_address",
            "            IP_PREFIX:'10.0.0.1/24')",
            "          NEWLINE:'\\n'))))",
            "  (statement",
            "    (s_net_add",
            "      NET:'net'",
            "      ADD:'add'",
            "      (a_interface",
            "        INTERFACE:'interface'",
            "        interfaces = (glob",
            "          (glob_range_set",
            "            unnumbered = (glob_word",
            "              LO:'lo')))",
            "        (i_ip_address",
            "          IP:'ip'",
            "          ADDRESS:'address'",
            "          address = (interface_address",
            "            IP_PREFIX:'10.0.2.1/24')",
            "          NEWLINE:'\\n'))))",
            "  (statement",
            "    (s_net_add",
            "      NET:'net'",
            "      ADD:'add'",
            "      (a_interface",
            "        INTERFACE:'interface'",
            "        interfaces = (glob",
            "          (glob_range_set",
            "            base_word = (numbered_word",
            "              NUMBERED_WORD:'mgmt.1')))",
            "        (i_ip_address",
            "          IP:'ip'",
            "          ADDRESS:'address'",
            "          address = (interface_address",
            "            IP_PREFIX:'10.0.3.1/24')",
            "          NEWLINE:'\\n'))))",
            "  (statement",
            "    (s_net_add",
            "      NET:'net'",
            "      ADD:'add'",
            "      (a_interface",
            "        INTERFACE:'interface'",
            "        interfaces = (glob",
            "          (glob_range_set",
            "            base_word = (numbered_word",
            "              NUMBERED_WORD:'swp1.5000')))",
            "        (i_ip_address",
            "          IP:'ip'",
            "          ADDRESS:'address'",
            "          address = (interface_address",
            "            IP_PREFIX:'10.0.4.1/24')",
            "          NEWLINE:'\\n'))))",
            "  (statement",
            "    (s_net_add",
            "      NET:'net'",
            "      ADD:'add'",
            "      (a_vrf",
            "        VRF:'vrf'",
            "        names = (glob",
            "          (glob_range_set",
            "            base_word = (numbered_word",
            "              NUMBERED_WORD:'vrf1')))",
            "        NEWLINE:'\\n')))",
            "  (statement",
            "    (s_net_add",
            "      NET:'net'",
            "      ADD:'add'",
            "      (a_interface",
            "        INTERFACE:'interface'",
            "        interfaces = (glob",
            "          (glob_range_set",
            "            base_word = (numbered_word",
            "              NUMBERED_WORD:'vrf1')))",
            "        (i_ip_address",
            "          IP:'ip'",
            "          ADDRESS:'address'",
            "          address = (interface_address",
            "            IP_PREFIX:'10.0.5.1/24')",
            "          NEWLINE:'\\n'))))",
            "  (statement",
            "    (s_net_add",
            "      NET:'net'",
            "      ADD:'add'",
            "      (a_vxlan",
            "        VXLAN:'vxlan'",
            "        names = (glob",
            "          (glob_range_set",
            "            base_word = (numbered_word",
            "              NUMBERED_WORD:'v1')))",
            "        (vx_vxlan",
            "          VXLAN:'vxlan'",
            "          (vxv_id",
            "            ID:'id'",
            "            vni = (vni_number",
            "              v = DEC:'10001')",
            "            NEWLINE:'\\n')))))",
            "  (statement",
            "    (s_net_add",
            "      NET:'net'",
            "      ADD:'add'",
            "      (a_interface",
            "        INTERFACE:'interface'",
            "        interfaces = (glob",
            "          (glob_range_set",
            "            base_word = (numbered_word",
            "              NUMBERED_WORD:'v1')))",
            "        (i_ip_address",
            "          IP:'ip'",
            "          ADDRESS:'address'",
            "          address = (interface_address",
            "            IP_PREFIX:'10.0.6.1/24')",
            "          NEWLINE:'\\n'))))",
            "  (statement",
            "    (s_null",
            "      NET:'net'",
            "      (null_rest_of_line",
            "        COMMIT:'commit'",
            "        NEWLINE:'\\n\\n\\n')))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/cumulus_nclu_invalid_vrfs" : {
          "sentences" : [
            "(cumulus_nclu_configuration",
            "  (statement",
            "    (s_null",
            "      NET:'net'",
            "      (null_rest_of_line",
            "        DEL:'del'",
            "        WORD:'all'",
            "        NEWLINE:'\\n')))",
            "  (statement",
            "    (s_net_add",
            "      NET:'net'",
            "      ADD:'add'",
            "      (a_hostname",
            "        HOSTNAME:'hostname'",
            "        hostname = (word",
            "          WORD:'cumulus_nclu_invalid_vrfs')",
            "        NEWLINE:'\\n')))",
            "  (statement",
            "    (s_net_add",
            "      NET:'net'",
            "      ADD:'add'",
            "      (a_vrf",
            "        VRF:'vrf'",
            "        names = (glob",
            "          (glob_range_set",
            "            unnumbered = (glob_word",
            "              LO:'lo'))",
            "          COMMA:','",
            "          (glob_range_set",
            "            base_word = (numbered_word",
            "              NUMBERED_WORD:'vrf1')))",
            "        NEWLINE:'\\n')))",
            "  (statement",
            "    (s_net_add",
            "      NET:'net'",
            "      ADD:'add'",
            "      (a_bond",
            "        BOND:'bond'",
            "        name = (word",
            "          NUMBERED_WORD:'bond1')",
            "        (bond_bond",
            "          BOND:'bond'",
            "          (bobo_slaves",
            "            SLAVES:'slaves'",
            "            slaves = (glob",
            "              (glob_range_set",
            "                base_word = (numbered_word",
            "                  NUMBERED_WORD:'swp1')))",
            "            NEWLINE:'\\n')))))",
            "  (statement",
            "    (s_net_add",
            "      NET:'net'",
            "      ADD:'add'",
            "      (a_vrf",
            "        VRF:'vrf'",
            "        names = (glob",
            "          (glob_range_set",
            "            base_word = (numbered_word",
            "              NUMBERED_WORD:'bond1')))",
            "        NEWLINE:'\\n')))",
            "  (statement",
            "    (s_net_add",
            "      NET:'net'",
            "      ADD:'add'",
            "      (a_vrf",
            "        VRF:'vrf'",
            "        names = (glob",
            "          (glob_range_set",
            "            base_word = (numbered_word",
            "              NUMBERED_WORD:'eth0')))",
            "        NEWLINE:'\\n')))",
            "  (statement",
            "    (s_net_add",
            "      NET:'net'",
            "      ADD:'add'",
            "      (a_vrf",
            "        VRF:'vrf'",
            "        names = (glob",
            "          (glob_range_set",
            "            base_word = (numbered_word",
            "              NUMBERED_WORD:'swp2')))",
            "        NEWLINE:'\\n')))",
            "  (statement",
            "    (s_net_add",
            "      NET:'net'",
            "      ADD:'add'",
            "      (a_vrf",
            "        VRF:'vrf'",
            "        names = (glob",
            "          (glob_range_set",
            "            base_word = (numbered_word",
            "              NUMBERED_WORD:'vrf1.1000')))",
            "        NEWLINE:'\\n')))",
            "  (statement",
            "    (s_net_add",
            "      NET:'net'",
            "      ADD:'add'",
            "      (a_vxlan",
            "        VXLAN:'vxlan'",
            "        names = (glob",
            "          (glob_range_set",
            "            base_word = (numbered_word",
            "              NUMBERED_WORD:'vx1')))",
            "        (vx_vxlan",
            "          VXLAN:'vxlan'",
            "          (vxv_id",
            "            ID:'id'",
            "            vni = (vni_number",
            "              v = DEC:'10001')",
            "            NEWLINE:'\\n')))))",
            "  (statement",
            "    (s_net_add",
            "      NET:'net'",
            "      ADD:'add'",
            "      (a_vrf",
            "        VRF:'vrf'",
            "        names = (glob",
            "          (glob_range_set",
            "            base_word = (numbered_word",
            "              NUMBERED_WORD:'vx1')))",
            "        NEWLINE:'\\n')))",
            "  (statement",
            "    (s_net_add",
            "      NET:'net'",
            "      ADD:'add'",
            "      (a_vrf",
            "        VRF:'vrf'",
            "        names = (glob",
            "          (glob_range_set",
            "            base_word = (numbered_word",
            "              NUMBERED_WORD:'vlan1')))",
            "        NEWLINE:'\\n')))",
            "  (statement",
            "    (s_null",
            "      NET:'net'",
            "      (null_rest_of_line",
            "        COMMIT:'commit'",
            "        NEWLINE:'\\n\\n\\n')))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/cumulus_nclu_invalid_vxlans" : {
          "sentences" : [
            "(cumulus_nclu_configuration",
            "  (statement",
            "    (s_null",
            "      NET:'net'",
            "      (null_rest_of_line",
            "        DEL:'del'",
            "        WORD:'all'",
            "        NEWLINE:'\\n')))",
            "  (statement",
            "    (s_net_add",
            "      NET:'net'",
            "      ADD:'add'",
            "      (a_hostname",
            "        HOSTNAME:'hostname'",
            "        hostname = (word",
            "          WORD:'cumulus_nclu_invalid_vxlans')",
            "        NEWLINE:'\\n')))",
            "  (statement",
            "    (s_net_add",
            "      NET:'net'",
            "      ADD:'add'",
            "      (a_vxlan",
            "        VXLAN:'vxlan'",
            "        names = (glob",
            "          (glob_range_set",
            "            unnumbered = (glob_word",
            "              LO:'lo')))",
            "        (vx_vxlan",
            "          VXLAN:'vxlan'",
            "          (vxv_id",
            "            ID:'id'",
            "            vni = (vni_number",
            "              v = DEC:'10001')",
            "            NEWLINE:'\\n')))))",
            "  (statement",
            "    (s_net_add",
            "      NET:'net'",
            "      ADD:'add'",
            "      (a_bond",
            "        BOND:'bond'",
            "        name = (word",
            "          NUMBERED_WORD:'bond1')",
            "        (bond_bond",
            "          BOND:'bond'",
            "          (bobo_slaves",
            "            SLAVES:'slaves'",
            "            slaves = (glob",
            "              (glob_range_set",
            "                base_word = (numbered_word",
            "                  NUMBERED_WORD:'swp0')))",
            "            NEWLINE:'\\n')))))",
            "  (statement",
            "    (s_net_add",
            "      NET:'net'",
            "      ADD:'add'",
            "      (a_vxlan",
            "        VXLAN:'vxlan'",
            "        names = (glob",
            "          (glob_range_set",
            "            base_word = (numbered_word",
            "              NUMBERED_WORD:'bond1')))",
            "        (vx_vxlan",
            "          VXLAN:'vxlan'",
            "          (vxv_id",
            "            ID:'id'",
            "            vni = (vni_number",
            "              v = DEC:'10002')",
            "            NEWLINE:'\\n')))))",
            "  (statement",
            "    (s_net_add",
            "      NET:'net'",
            "      ADD:'add'",
            "      (a_vrf",
            "        VRF:'vrf'",
            "        names = (glob",
            "          (glob_range_set",
            "            base_word = (numbered_word",
            "              NUMBERED_WORD:'vrf1')))",
            "        NEWLINE:'\\n')))",
            "  (statement",
            "    (s_net_add",
            "      NET:'net'",
            "      ADD:'add'",
            "      (a_vxlan",
            "        VXLAN:'vxlan'",
            "        names = (glob",
            "          (glob_range_set",
            "            base_word = (numbered_word",
            "              NUMBERED_WORD:'vrf1')))",
            "        (vx_vxlan",
            "          VXLAN:'vxlan'",
            "          (vxv_id",
            "            ID:'id'",
            "            vni = (vni_number",
            "              v = DEC:'10003')",
            "            NEWLINE:'\\n')))))",
            "  (statement",
            "    (s_net_add",
            "      NET:'net'",
            "      ADD:'add'",
            "      (a_vxlan",
            "        VXLAN:'vxlan'",
            "        names = (glob",
            "          (glob_range_set",
            "            base_word = (numbered_word",
            "              NUMBERED_WORD:'eth0')))",
            "        (vx_vxlan",
            "          VXLAN:'vxlan'",
            "          (vxv_id",
            "            ID:'id'",
            "            vni = (vni_number",
            "              v = DEC:'10004')",
            "            NEWLINE:'\\n')))))",
            "  (statement",
            "    (s_net_add",
            "      NET:'net'",
            "      ADD:'add'",
            "      (a_vxlan",
            "        VXLAN:'vxlan'",
            "        names = (glob",
            "          (glob_range_set",
            "            base_word = (numbered_word",
            "              NUMBERED_WORD:'swp0')))",
            "        (vx_vxlan",
            "          VXLAN:'vxlan'",
            "          (vxv_id",
            "            ID:'id'",
            "            vni = (vni_number",
            "              v = DEC:'10005')",
            "            NEWLINE:'\\n')))))",
            "  (statement",
            "    (s_net_add",
            "      NET:'net'",
            "      ADD:'add'",
            "      (a_vxlan",
            "        VXLAN:'vxlan'",
            "        names = (glob",
            "          (glob_range_set",
            "            base_word = (numbered_word",
            "              NUMBERED_WORD:'vxlan1.1000')))",
            "        (vx_vxlan",
            "          VXLAN:'vxlan'",
            "          (vxv_id",
            "            ID:'id'",
            "            vni = (vni_number",
            "              v = DEC:'10006')",
            "            NEWLINE:'\\n')))))",
            "  (statement",
            "    (s_net_add",
            "      NET:'net'",
            "      ADD:'add'",
            "      (a_vxlan",
            "        VXLAN:'vxlan'",
            "        names = (glob",
            "          (glob_range_set",
            "            base_word = (numbered_word",
            "              NUMBERED_WORD:'vlan1')))",
            "        (vx_vxlan",
            "          VXLAN:'vxlan'",
            "          (vxv_id",
            "            ID:'id'",
            "            vni = (vni_number",
            "              v = DEC:'10007')",
            "            NEWLINE:'\\n')))))",
            "  (statement",
            "    (s_null",
            "      NET:'net'",
            "      (null_rest_of_line",
            "        COMMIT:'commit'",
            "        NEWLINE:'\\n\\n\\n')))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/eos_mlag" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'eos_mlag'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_vlan_eos",
            "      VLAN:'vlan'",
            "      (eos_vlan_id",
            "        (subrange",
            "          low = DEC:'4094'))",
            "      NEWLINE:'\\n'",
            "      (eos_vlan_name",
            "        NAME:'name'",
            "        name = (variable",
            "          VARIABLE:'MLAG'  <== mode:M_Name)",
            "        NEWLINE:'\\n')",
            "      (eos_vlan_trunk",
            "        TRUNK:'trunk'",
            "        GROUP:'group'",
            "        name = (variable",
            "          VARIABLE:'MLAG-Peer')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_interface",
            "      INTERFACE:'interface'",
            "      iname = (interface_name",
            "        name_prefix_alpha = M_Interface_PREFIX:'Port-Channel'  <== mode:M_Interface",
            "        (range",
            "          (subrange",
            "            low = DEC:'1'  <== mode:M_Interface)))",
            "      NEWLINE:'\\n'  <== mode:M_Interface",
            "      (if_inner",
            "        (if_description",
            "          (description_line",
            "            DESCRIPTION:'description'",
            "            text = RAW_TEXT:' to MLAG PEER'  <== mode:M_Description",
            "            NEWLINE:'\\n'  <== mode:M_Description)))",
            "      (if_inner",
            "        (if_switchport_mode",
            "          SWITCHPORT:'switchport'",
            "          MODE:'mode'",
            "          TRUNK:'trunk'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_interface",
            "      INTERFACE:'interface'",
            "      iname = (interface_name",
            "        name_prefix_alpha = M_Interface_PREFIX:'Port-Channel'  <== mode:M_Interface",
            "        (range",
            "          (subrange",
            "            low = DEC:'2'  <== mode:M_Interface)))",
            "      NEWLINE:'\\n'  <== mode:M_Interface",
            "      (if_inner",
            "        (if_eos_mlag",
            "          MLAG:'mlag'",
            "          id = DEC:'2'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_ip_address",
            "          IP:'ip'",
            "          ADDRESS:'address'",
            "          prefix = IP_PREFIX:'2.2.2.2/32'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_eos_mlag",
            "      MLAG:'mlag'",
            "      CONFIGURATION:'configuration'",
            "      NEWLINE:'\\n'",
            "      (eos_mlag_domain",
            "        DOMAIN_ID:'domain-id'",
            "        id = (variable",
            "          VARIABLE:'MLAG_DOMAIN')",
            "        NEWLINE:'\\n')",
            "      (eos_mlag_local_interface",
            "        LOCAL_INTERFACE:'local-interface'",
            "        iface = (variable",
            "          VARIABLE:'Vlan4094')",
            "        NEWLINE:'\\n')",
            "      (eos_mlag_peer_address",
            "        PEER_ADDRESS:'peer-address'",
            "        ip = IP_ADDRESS:'1.1.1.3'",
            "        NEWLINE:'\\n')",
            "      (eos_mlag_peer_link",
            "        PEER_LINK:'peer-link'",
            "        iface = (variable",
            "          VARIABLE:'Port-Channel1')",
            "        NEWLINE:'\\n')",
            "      (eos_mlag_reload_delay",
            "        RELOAD_DELAY:'reload-delay'",
            "        MLAG:'mlag'",
            "        period = DEC:'300'",
            "        NEWLINE:'\\n')",
            "      (eos_mlag_reload_delay",
            "        RELOAD_DELAY:'reload-delay'",
            "        MLAG:'mlag'",
            "        period = INFINITY:'infinity'",
            "        NEWLINE:'\\n')",
            "      (eos_mlag_reload_delay",
            "        RELOAD_DELAY:'reload-delay'",
            "        NON_MLAG:'non-mlag'",
            "        period = DEC:'360'",
            "        NEWLINE:'\\n')",
            "      (eos_mlag_reload_delay",
            "        RELOAD_DELAY:'reload-delay'",
            "        NON_MLAG:'non-mlag'",
            "        period = INFINITY:'infinity'",
            "        NEWLINE:'\\n')",
            "      (eos_mlag_reload_delay",
            "        RELOAD_DELAY:'reload-delay'",
            "        period = DEC:'400'",
            "        NEWLINE:'\\n')",
            "      (eos_mlag_reload_delay",
            "        RELOAD_DELAY:'reload-delay'",
            "        period = INFINITY:'infinity'",
            "        NEWLINE:'\\n')",
            "      (eos_mlag_shutdown",
            "        SHUTDOWN:'shutdown'",
            "        NEWLINE:'\\n')",
            "      (eos_mlag_shutdown",
            "        NO:'no'",
            "        SHUTDOWN:'shutdown'",
            "        NEWLINE:'\\n')))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/eos_trunk_group" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'eos_trunk_group'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_vlan_eos",
            "      VLAN:'vlan'",
            "      (eos_vlan_id",
            "        (subrange",
            "          low = DEC:'1'))",
            "      NEWLINE:'\\n'",
            "      (eos_vlan_name",
            "        NAME:'name'",
            "        name = (variable",
            "          VARIABLE:'VLAN1'  <== mode:M_Name)",
            "        NEWLINE:'\\n')",
            "      (eos_vlan_trunk",
            "        TRUNK:'trunk'",
            "        GROUP:'group'",
            "        name = (variable",
            "          VARIABLE:'GROUP1')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_vlan_eos",
            "      VLAN:'vlan'",
            "      (eos_vlan_id",
            "        (subrange",
            "          low = DEC:'2'))",
            "      NEWLINE:'\\n'",
            "      (eos_vlan_trunk",
            "        TRUNK:'trunk'",
            "        GROUP:'group'",
            "        name = (variable",
            "          VARIABLE:'GROUP2')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_vlan_eos",
            "      VLAN:'vlan'",
            "      (eos_vlan_id",
            "        (subrange",
            "          low = DEC:'3')",
            "        COMMA:','",
            "        (subrange",
            "          low = DEC:'4')",
            "        COMMA:','",
            "        (subrange",
            "          low = DEC:'7'",
            "          DASH:'-'",
            "          high = DEC:'9')",
            "        COMMA:','",
            "        (subrange",
            "          low = DEC:'11'))",
            "      NEWLINE:'\\n'",
            "      (eos_vlan_trunk",
            "        TRUNK:'trunk'",
            "        GROUP:'group'",
            "        name = (variable",
            "          VARIABLE:'GROUP2')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_no_vlan_internal_eos",
            "      VLAN:'vlan'",
            "      INTERNAL:'internal'",
            "      ALLOCATION:'allocation'",
            "      POLICY:'policy'",
            "      ASCENDING:'ascending'",
            "      RANGE:'range'",
            "      lo = DEC:'4'",
            "      hi = DEC:'5'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_no_vlan_internal_eos",
            "      VLAN:'vlan'",
            "      INTERNAL:'internal'",
            "      ALLOCATION:'allocation'",
            "      POLICY:'policy'",
            "      DESCENDING:'descending'",
            "      RANGE:'range'",
            "      lo = DEC:'8'",
            "      hi = DEC:'9'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_no_vlan_internal_eos",
            "      NO:'no'",
            "      VLAN:'vlan'",
            "      INTERNAL:'internal'",
            "      ALLOCATION:'allocation'",
            "      POLICY:'policy'",
            "      ASCENDING:'ascending'",
            "      RANGE:'range'",
            "      lo = DEC:'6'",
            "      hi = DEC:'7'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_no_vlan_internal_eos",
            "      NO:'no'",
            "      VLAN:'vlan'",
            "      INTERNAL:'internal'",
            "      ALLOCATION:'allocation'",
            "      POLICY:'policy'",
            "      DESCENDING:'descending'",
            "      RANGE:'range'",
            "      lo = DEC:'10'",
            "      hi = DEC:'11'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_no_vlan_internal_eos",
            "      DEFAULT:'default'",
            "      VLAN:'vlan'",
            "      INTERNAL:'internal'",
            "      ALLOCATION:'allocation'",
            "      POLICY:'policy'",
            "      ASCENDING:'ascending'",
            "      RANGE:'range'",
            "      lo = DEC:'6'",
            "      hi = DEC:'7'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_no_vlan_internal_eos",
            "      DEFAULT:'default'",
            "      VLAN:'vlan'",
            "      INTERNAL:'internal'",
            "      ALLOCATION:'allocation'",
            "      POLICY:'policy'",
            "      ASCENDING:'ascending'",
            "      RANGE:'range'",
            "      lo = DEC:'6'",
            "      hi = DEC:'7'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_no_vlan_internal_eos",
            "      NO:'no'",
            "      VLAN:'vlan'",
            "      INTERNAL:'internal'",
            "      ALLOCATION:'allocation'",
            "      POLICY:'policy'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_no_vlan_internal_eos",
            "      DEFAULT:'default'",
            "      VLAN:'vlan'",
            "      INTERNAL:'internal'",
            "      ALLOCATION:'allocation'",
            "      POLICY:'policy'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_vlan_eos",
            "      VLAN:'vlan'",
            "      (eos_vlan_id",
            "        (subrange",
            "          low = DEC:'99'))",
            "      NEWLINE:'\\n'",
            "      (eos_vlan_state",
            "        STATE:'state'",
            "        ACTIVE:'active'",
            "        NEWLINE:'\\n')",
            "      (eos_vlan_state",
            "        STATE:'state'",
            "        SUSPEND:'suspend'",
            "        NEWLINE:'\\n')",
            "      (eos_vlan_no_name",
            "        NO:'no'",
            "        NAME:'name'",
            "        NEWLINE:'\\n'  <== mode:M_Name)",
            "      (eos_vlan_no_name",
            "        DEFAULT:'default'",
            "        NAME:'name'",
            "        NEWLINE:'\\n'  <== mode:M_Name)",
            "      (eos_vlan_no_state",
            "        NO:'no'",
            "        STATE:'state'",
            "        NEWLINE:'\\n')",
            "      (eos_vlan_no_state",
            "        DEFAULT:'default'",
            "        STATE:'state'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_no_vlan_eos",
            "      NO:'no'",
            "      VLAN:'vlan'",
            "      (eos_vlan_id",
            "        (subrange",
            "          low = DEC:'101'))",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_interface",
            "      INTERFACE:'interface'",
            "      iname = (interface_name",
            "        name_prefix_alpha = M_Interface_PREFIX:'Port-Channel'  <== mode:M_Interface",
            "        (range",
            "          (subrange",
            "            low = DEC:'1'  <== mode:M_Interface)))",
            "      NEWLINE:'\\n'  <== mode:M_Interface",
            "      (if_inner",
            "        (if_switchport_mode",
            "          SWITCHPORT:'switchport'",
            "          MODE:'mode'",
            "          TRUNK:'trunk'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_switchport_trunk_group_eos",
            "          SWITCHPORT:'switchport'",
            "          TRUNK:'trunk'",
            "          GROUP:'group'",
            "          name = (variable",
            "            VARIABLE:'GROUP1')",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_switchport_trunk_group_eos",
            "          SWITCHPORT:'switchport'",
            "          TRUNK:'trunk'",
            "          GROUP:'group'",
            "          name = (variable",
            "            VARIABLE:'GROUP2')",
            "          NEWLINE:'\\n\\n'))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/f5_bigip_imish_malformed" : {
          "sentences" : [
            "(f5_bigip_structured_configuration",
            "  (statement",
            "    (s_sys",
            "      SYS:'sys'",
            "      (sys_global_settings",
            "        GLOBAL_SETTINGS:'global-settings'",
            "        BRACE_LEFT:'{'",
            "        NEWLINE:'\\n'",
            "        (sgs_hostname",
            "          HOSTNAME:'hostname'",
            "          hostname = (word",
            "            WORD:'f5_bigip_imish_malformed')",
            "          NEWLINE:'\\n')",
            "        BRACE_RIGHT:'}'",
            "        NEWLINE:'\\n\\n')))",
            "  (imish_chunk",
            "    IMISH_CHUNK:'!\\n! ge (min) less than prefix-length is ineffectual\\nip prefix-list pl1 seq 10 permit 10.0.0.0/24 ge 16\\n! le (max) less than prefix-length is impossible\\nip prefix-list pl1 seq 20 permit 10.0.0.0/24 le 16\\n! le (max) less than ge (min) is impossible\\nip prefix-list pl1 seq 30 permit 10.0.0.0/24 ge 28 le 26\\n\\nrouter bgp 1\\n neighbor undeclared description hello\\n neighbor 3.3.3.3 remote-as 2\\n neighbor 3.3.3.3 peer-group undefined-peer-group\\n neighbor undeclared-peer-group remote-as 3\\n neighbor 2::2 remote-as 4\\n neighbor 2::2 route-map rm1 out\\n neighbor undeclared-peer-group route-map rm1 out\\n!\\nend\\n\\n\\n')",
            "  EOF:<EOF>)",
            "(f5_bigip_imish_configuration",
            "  (statement",
            "    (s_ip_prefix_list",
            "      IP:'ip'",
            "      PREFIX_LIST:'prefix-list'",
            "      name = (word",
            "        WORD:'pl1')",
            "      SEQ:'seq'",
            "      num = (uint32",
            "        d = DEC:'10')",
            "      action = (line_action",
            "        PERMIT:'permit')",
            "      prefix = (ip_prefix",
            "        IP_PREFIX:'10.0.0.0/24')",
            "      GE:'ge'",
            "      ge = (ip_prefix_length",
            "        d = DEC:'16')",
            "      NEWLINE:'\\n'))",
            "  (statement",
            "    (s_ip_prefix_list",
            "      IP:'ip'",
            "      PREFIX_LIST:'prefix-list'",
            "      name = (word",
            "        WORD:'pl1')",
            "      SEQ:'seq'",
            "      num = (uint32",
            "        d = DEC:'20')",
            "      action = (line_action",
            "        PERMIT:'permit')",
            "      prefix = (ip_prefix",
            "        IP_PREFIX:'10.0.0.0/24')",
            "      LE:'le'",
            "      le = (ip_prefix_length",
            "        d = DEC:'16')",
            "      NEWLINE:'\\n'))",
            "  (statement",
            "    (s_ip_prefix_list",
            "      IP:'ip'",
            "      PREFIX_LIST:'prefix-list'",
            "      name = (word",
            "        WORD:'pl1')",
            "      SEQ:'seq'",
            "      num = (uint32",
            "        d = DEC:'30')",
            "      action = (line_action",
            "        PERMIT:'permit')",
            "      prefix = (ip_prefix",
            "        IP_PREFIX:'10.0.0.0/24')",
            "      GE:'ge'",
            "      ge = (ip_prefix_length",
            "        d = DEC:'28')",
            "      LE:'le'",
            "      le = (ip_prefix_length",
            "        d = DEC:'26')",
            "      NEWLINE:'\\n\\n'))",
            "  (statement",
            "    (s_router_bgp",
            "      ROUTER:'router'",
            "      BGP:'bgp'",
            "      localas = (uint32",
            "        d = DEC:'1')",
            "      NEWLINE:'\\n'",
            "      (rb_neighbor_peer_group",
            "        NEIGHBOR:'neighbor'",
            "        name = (peer_group_name",
            "          WORD:'undeclared')",
            "        (rbn_common",
            "          (rbn_description",
            "            DESCRIPTION:'description'",
            "            text = DESCRIPTION_LINE:'hello'  <== mode:M_Description",
            "            NEWLINE:'\\n')))",
            "      (rb_neighbor_ipv4",
            "        NEIGHBOR:'neighbor'",
            "        ip = IP_ADDRESS:'3.3.3.3'",
            "        (rbn_common",
            "          (rbn_remote_as",
            "            REMOTE_AS:'remote-as'",
            "            remoteas = (uint32",
            "              d = DEC:'2')",
            "            NEWLINE:'\\n')))",
            "      (rb_neighbor_ipv4",
            "        NEIGHBOR:'neighbor'",
            "        ip = IP_ADDRESS:'3.3.3.3'",
            "        (rbn_peer_group_assign",
            "          PEER_GROUP:'peer-group'",
            "          name = (peer_group_name",
            "            WORD:'undefined-peer-group')",
            "          NEWLINE:'\\n'))",
            "      (rb_neighbor_peer_group",
            "        NEIGHBOR:'neighbor'",
            "        name = (peer_group_name",
            "          WORD:'undeclared-peer-group')",
            "        (rbn_common",
            "          (rbn_remote_as",
            "            REMOTE_AS:'remote-as'",
            "            remoteas = (uint32",
            "              d = DEC:'3')",
            "            NEWLINE:'\\n')))",
            "      (rb_neighbor_ipv6",
            "        NEIGHBOR:'neighbor'",
            "        ip6 = IPV6_ADDRESS:'2::2'",
            "        (rbn_common",
            "          (rbn_remote_as",
            "            REMOTE_AS:'remote-as'",
            "            remoteas = (uint32",
            "              d = DEC:'4')",
            "            NEWLINE:'\\n')))",
            "      (rb_neighbor_ipv6",
            "        NEIGHBOR:'neighbor'",
            "        ip6 = IPV6_ADDRESS:'2::2'",
            "        (rbn_common",
            "          (rbn_route_map_out",
            "            ROUTE_MAP:'route-map'",
            "            name = (word",
            "              WORD:'rm1')",
            "            OUT:'out'",
            "            NEWLINE:'\\n')))",
            "      (rb_neighbor_peer_group",
            "        NEIGHBOR:'neighbor'",
            "        name = (peer_group_name",
            "          WORD:'undeclared-peer-group')",
            "        (rbn_common",
            "          (rbn_route_map_out",
            "            ROUTE_MAP:'route-map'",
            "            name = (word",
            "              WORD:'rm1')",
            "            OUT:'out'",
            "            NEWLINE:'\\n')))))",
            "  (statement",
            "    (s_end",
            "      END:'end'",
            "      NEWLINE:'\\n\\n\\n'))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/f5_bigip_structured_ltm" : {
          "sentences" : [
            "(f5_bigip_structured_configuration",
            "  (statement",
            "    (s_sys",
            "      SYS:'sys'",
            "      (sys_global_settings",
            "        GLOBAL_SETTINGS:'global-settings'",
            "        BRACE_LEFT:'{'",
            "        NEWLINE:'\\n'",
            "        (sgs_hostname",
            "          HOSTNAME:'hostname'",
            "          hostname = (word",
            "            WORD:'f5_bigip_structured_ltm')",
            "          NEWLINE:'\\n')",
            "        BRACE_RIGHT:'}'",
            "        NEWLINE:'\\n')))",
            "  (statement",
            "    (unrecognized",
            "      (u_word",
            "        (word",
            "          LTM:'ltm'))",
            "      (u_word",
            "        (word",
            "          GLOBAL_SETTINGS:'global-settings'))",
            "      (u_word",
            "        (word",
            "          WORD:'connection'))",
            "      (list",
            "        (u_list",
            "          BRACE_LEFT:'{'",
            "          NEWLINE:'\\n'",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'default-vs-syn-challenge-threshold'))",
            "            (u_word",
            "              (word",
            "                WORD:'12345'))",
            "            NEWLINE:'\\n')",
            "          BRACE_RIGHT:'}'))",
            "      NEWLINE:'\\n'))",
            "  (statement",
            "    (unrecognized",
            "      (u_word",
            "        (word",
            "          LTM:'ltm'))",
            "      (u_word",
            "        (word",
            "          GLOBAL_SETTINGS:'global-settings'))",
            "      (u_word",
            "        (word",
            "          RULE:'rule'))",
            "      (list",
            "        (empty_list",
            "          BRACE_LEFT:'{'",
            "          BRACE_RIGHT:'}'))",
            "      NEWLINE:'\\n'))",
            "  (statement",
            "    (unrecognized",
            "      (u_word",
            "        (word",
            "          LTM:'ltm'))",
            "      (u_word",
            "        (word",
            "          WORD:'default-node-monitor'))",
            "      (list",
            "        (u_list",
            "          BRACE_LEFT:'{'",
            "          NEWLINE:'\\n'",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                RULE:'rule'))",
            "            (u_word",
            "              (word",
            "                WORD:'none'))",
            "            NEWLINE:'\\n')",
            "          BRACE_RIGHT:'}'))",
            "      NEWLINE:'\\n'))",
            "  (statement",
            "    (unrecognized",
            "      (u_word",
            "        (word",
            "          LTM:'ltm'))",
            "      (u_word",
            "        (word",
            "          WORD:'ifile'))",
            "      (u_word",
            "        (word",
            "          WORD:'/Common/SOME_FILE'))",
            "      (list",
            "        (u_list",
            "          BRACE_LEFT:'{'",
            "          NEWLINE:'\\n'",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'file-name'))",
            "            (u_word",
            "              (word",
            "                WORD:'/Common/SOME_FILE'))",
            "            NEWLINE:'\\n')",
            "          BRACE_RIGHT:'}'))",
            "      NEWLINE:'\\n'))",
            "  (statement",
            "    (s_ltm",
            "      LTM:'ltm'",
            "      (l_node",
            "        NODE:'node'",
            "        name = (word",
            "          WORD:'/Common/SOME_LTM_NODE')",
            "        BRACE_LEFT:'{'",
            "        NEWLINE:'\\n'",
            "        (ln_address",
            "          ADDRESS:'address'",
            "          address = (word",
            "            WORD:'192.0.2.1')",
            "          NEWLINE:'\\n')",
            "        BRACE_RIGHT:'}'",
            "        NEWLINE:'\\n')))",
            "  (statement",
            "    (s_ltm",
            "      LTM:'ltm'",
            "      (l_pool",
            "        POOL:'pool'",
            "        name = (word",
            "          WORD:'/Common/SOME_LTM_POOL')",
            "        BRACE_LEFT:'{'",
            "        NEWLINE:'\\n'",
            "        (unrecognized",
            "          (u_word",
            "            (word",
            "              DESCRIPTION:'description'))",
            "          (u_word",
            "            (word",
            "              DOUBLE_QUOTED_STRING:'\"foo\"'))",
            "          NEWLINE:'\\n')",
            "        (unrecognized",
            "          (u_word",
            "            (word",
            "              WORD:'load-balancing-mode'))",
            "          (u_word",
            "            (word",
            "              WORD:'least-connections-member'))",
            "          NEWLINE:'\\n')",
            "        (lp_members",
            "          MEMBERS:'members'",
            "          BRACE_LEFT:'{'",
            "          NEWLINE:'\\n'",
            "          (lpm_member",
            "            name = (word",
            "              WORD:'/Common/foo:80')",
            "            BRACE_LEFT:'{'",
            "            NEWLINE:'\\n'",
            "            (lpmm_address",
            "              ADDRESS:'address'",
            "              address = (word",
            "                WORD:'192.0.2.2')",
            "              NEWLINE:'\\n')",
            "            (unrecognized",
            "              (u_word",
            "                (word",
            "                  DESCRIPTION:'description'))",
            "              (u_word",
            "                (word",
            "                  WORD:'bar.baz'))",
            "              NEWLINE:'\\n')",
            "            (unrecognized",
            "              (u_word",
            "                (word",
            "                  WORD:'priority-group'))",
            "              (u_word",
            "                (word",
            "                  WORD:'2'))",
            "              NEWLINE:'\\n')",
            "            BRACE_RIGHT:'}'",
            "            NEWLINE:'\\n')",
            "          (lpm_member",
            "            name = (word",
            "              WORD:'/Common/bar:80')",
            "            BRACE_LEFT:'{'",
            "            NEWLINE:'\\n'",
            "            (lpmm_address",
            "              ADDRESS:'address'",
            "              address = (word",
            "                WORD:'192.0.2.3')",
            "              NEWLINE:'\\n')",
            "            BRACE_RIGHT:'}'",
            "            NEWLINE:'\\n')",
            "          BRACE_RIGHT:'}'",
            "          NEWLINE:'\\n')",
            "        (unrecognized",
            "          (u_word",
            "            (word",
            "              WORD:'min-active-members'))",
            "          (u_word",
            "            (word",
            "              WORD:'1'))",
            "          NEWLINE:'\\n')",
            "        (lp_monitor",
            "          MONITOR:'monitor'",
            "          name = (word",
            "            WORD:'/Common/SOME_MONITOR')",
            "          NEWLINE:'\\n')",
            "        (unrecognized",
            "          (u_word",
            "            (word",
            "              WORD:'service-down-action'))",
            "          (u_word",
            "            (word",
            "              WORD:'reset'))",
            "          NEWLINE:'\\n')",
            "        (unrecognized",
            "          (u_word",
            "            (word",
            "              WORD:'slow-ramp-time'))",
            "          (u_word",
            "            (word",
            "              WORD:'123'))",
            "          NEWLINE:'\\n')",
            "        BRACE_RIGHT:'}'",
            "        NEWLINE:'\\n')))",
            "  (statement",
            "    (s_ltm",
            "      LTM:'ltm'",
            "      (l_rule",
            "        RULE:'rule'",
            "        name = (word",
            "          WORD:'/Common/SOME_RULE1')",
            "        BRACE_LEFT:'{'",
            "        NEWLINE:'\\n'",
            "        (unrecognized",
            "          (u_word",
            "            (word",
            "              WORD:'when'))",
            "          (u_word",
            "            (word",
            "              WORD:'HTTP_REQUEST'))",
            "          (u_word",
            "            (word",
            "              WORD:'priority'))",
            "          (u_word",
            "            (word",
            "              WORD:'10'))",
            "          (list",
            "            (u_list",
            "              BRACE_LEFT:'{'",
            "              NEWLINE:'\\n'",
            "              (unrecognized",
            "                (u_word",
            "                  (word",
            "                    WORD:'HTTP::header'))",
            "                (u_word",
            "                  (word",
            "                    WORD:'replace'))",
            "                (u_word",
            "                  (word",
            "                    WORD:'X-Forwarded-For'))",
            "                (u_word",
            "                  (bracket_list",
            "                    BRACKET_LEFT:'['",
            "                    (u_word",
            "                      (word",
            "                        WORD:'IP::remote_addr'))",
            "                    BRACKET_RIGHT:']'))",
            "                NEWLINE:'\\n')",
            "              (unrecognized",
            "                (u_word",
            "                  (word",
            "                    WORD:'HTTP::header'))",
            "                (u_word",
            "                  (word",
            "                    WORD:'replace'))",
            "                (u_word",
            "                  (word",
            "                    DOUBLE_QUOTED_STRING:'\"X-Forwarded-Proto\"'))",
            "                (u_word",
            "                  (word",
            "                    WORD:'\"http\";'))",
            "                NEWLINE:'\\n')",
            "              BRACE_RIGHT:'}'))",
            "          NEWLINE:'\\n')",
            "        BRACE_RIGHT:'}'",
            "        NEWLINE:'\\n')))",
            "  (statement",
            "    (s_ltm",
            "      LTM:'ltm'",
            "      (l_rule",
            "        RULE:'rule'",
            "        name = (word",
            "          WORD:'/Common/SOME_RULE2')",
            "        BRACE_LEFT:'{'",
            "        NEWLINE:'\\n'",
            "        (unrecognized",
            "          (u_word",
            "            (word",
            "              WORD:'when'))",
            "          (u_word",
            "            (word",
            "              WORD:'HTTP_REQUEST'))",
            "          (u_word",
            "            (word",
            "              WORD:'priority'))",
            "          (u_word",
            "            (word",
            "              WORD:'10'))",
            "          (list",
            "            (u_list",
            "              BRACE_LEFT:'{'",
            "              NEWLINE:'\\n'",
            "              (unrecognized",
            "                (u_word",
            "                  (word",
            "                    WORD:'HTTP::header'))",
            "                (u_word",
            "                  (word",
            "                    WORD:'replace'))",
            "                (u_word",
            "                  (word",
            "                    WORD:'X-Forwarded-For'))",
            "                (u_word",
            "                  (bracket_list",
            "                    BRACKET_LEFT:'['",
            "                    (u_word",
            "                      (word",
            "                        WORD:'IP::remote_addr'))",
            "                    BRACKET_RIGHT:']'))",
            "                NEWLINE:'\\n')",
            "              (unrecognized",
            "                (u_word",
            "                  (word",
            "                    WORD:'HTTP::header'))",
            "                (u_word",
            "                  (word",
            "                    WORD:'replace'))",
            "                (u_word",
            "                  (word",
            "                    DOUBLE_QUOTED_STRING:'\"X-Forwarded-Proto\"'))",
            "                (u_word",
            "                  (word",
            "                    WORD:'\"https\";'))",
            "                NEWLINE:'\\n')",
            "              BRACE_RIGHT:'}'))",
            "          NEWLINE:'\\n')",
            "        BRACE_RIGHT:'}'",
            "        NEWLINE:'\\n')))",
            "  (statement",
            "    (s_ltm",
            "      LTM:'ltm'",
            "      (l_rule",
            "        RULE:'rule'",
            "        name = (word",
            "          WORD:'/Common/SOME_RULE3')",
            "        BRACE_LEFT:'{'",
            "        NEWLINE:'\\n'",
            "        (unrecognized",
            "          (u_word",
            "            (word",
            "              WORD:'when'))",
            "          (u_word",
            "            (word",
            "              WORD:'HTTP_REQUEST'))",
            "          (u_word",
            "            (word",
            "              WORD:'priority'))",
            "          (u_word",
            "            (word",
            "              WORD:'20'))",
            "          (list",
            "            (u_list",
            "              BRACE_LEFT:'{'",
            "              NEWLINE:'\\n'",
            "              (unrecognized",
            "                (u_if",
            "                  IF:'if'",
            "                  (u_word_list",
            "                    BRACE_LEFT:'{'",
            "                    (u_word",
            "                      (bracket_list",
            "                        BRACKET_LEFT:'['",
            "                        (u_word",
            "                          (word",
            "                            WORD:'active_members'))",
            "                        (u_word",
            "                          (bracket_list",
            "                            BRACKET_LEFT:'['",
            "                            (u_word",
            "                              (word",
            "                                WORD:'LB::server'))",
            "                            (u_word",
            "                              (word",
            "                                POOL:'pool'))",
            "                            BRACKET_RIGHT:']'))",
            "                        BRACKET_RIGHT:']'))",
            "                    (u_word",
            "                      (word",
            "                        WORD:'=='))",
            "                    (u_word",
            "                      (word",
            "                        WORD:'0'))",
            "                    BRACE_RIGHT:'}'))",
            "                (list",
            "                  (u_list",
            "                    BRACE_LEFT:'{'",
            "                    NEWLINE:'\\n'",
            "                    (unrecognized",
            "                      (u_word",
            "                        (word",
            "                          WORD:'HTTP::respond'))",
            "                      (u_word",
            "                        (word",
            "                          WORD:'200'))",
            "                      (u_word",
            "                        (word",
            "                          WORD:'content'))",
            "                      (u_word",
            "                        (bracket_list",
            "                          BRACKET_LEFT:'['",
            "                          (u_word",
            "                            (word",
            "                              WORD:'ifile'))",
            "                          (u_word",
            "                            (word",
            "                              WORD:'get'))",
            "                          (u_word",
            "                            (word",
            "                              WORD:'foobar'))",
            "                          BRACKET_RIGHT:']'))",
            "                      (u_word",
            "                        (word",
            "                          DOUBLE_QUOTED_STRING:'\"Content-Type\"'))",
            "                      (u_word",
            "                        (word",
            "                          DOUBLE_QUOTED_STRING:'\"text/html\"'))",
            "                      NEWLINE:'\\n')",
            "                    BRACE_RIGHT:'}'))",
            "                NEWLINE:'\\n')",
            "              BRACE_RIGHT:'}'))",
            "          NEWLINE:'\\n')",
            "        BRACE_RIGHT:'}'",
            "        NEWLINE:'\\n')))",
            "  (statement",
            "    (s_ltm",
            "      LTM:'ltm'",
            "      (l_rule",
            "        RULE:'rule'",
            "        name = (word",
            "          WORD:'/Common/SOME_RULE4')",
            "        BRACE_LEFT:'{'",
            "        NEWLINE:'\\n'",
            "        (unrecognized",
            "          (u_word",
            "            (word",
            "              WORD:'when'))",
            "          (u_word",
            "            (word",
            "              WORD:'CLIENT_ACCEPTED'))",
            "          (list",
            "            (u_list",
            "              BRACE_LEFT:'{'",
            "              NEWLINE:'\\n'",
            "              (unrecognized",
            "                (u_word",
            "                  (word",
            "                    SET:'set'))",
            "                (u_word",
            "                  (word",
            "                    WORD:'tcp_done'))",
            "                (u_word",
            "                  (bracket_list",
            "                    BRACKET_LEFT:'['",
            "                    (u_word",
            "                      (word",
            "                        WORD:'clock'))",
            "                    (u_word",
            "                      (word",
            "                        WORD:'clicks'))",
            "                    (u_word",
            "                      (word",
            "                        WORD:'-milliseconds'))",
            "                    BRACKET_RIGHT:']'))",
            "                NEWLINE:'\\n')",
            "              BRACE_RIGHT:'}'))",
            "          NEWLINE:'\\n\\n')",
            "        (unrecognized",
            "          (u_word",
            "            (word",
            "              WORD:'when'))",
            "          (u_word",
            "            (word",
            "              WORD:'CLIENTSSL_HANDSHAKE'))",
            "          (list",
            "            (u_list",
            "              BRACE_LEFT:'{'",
            "              NEWLINE:'\\n'",
            "              (unrecognized",
            "                (u_word",
            "                  (word",
            "                    SET:'set'))",
            "                (u_word",
            "                  (word",
            "                    WORD:'tls_done'))",
            "                (u_word",
            "                  (bracket_list",
            "                    BRACKET_LEFT:'['",
            "                    (u_word",
            "                      (word",
            "                        WORD:'clock'))",
            "                    (u_word",
            "                      (word",
            "                        WORD:'clicks'))",
            "                    (u_word",
            "                      (word",
            "                        WORD:'-milliseconds'))",
            "                    BRACKET_RIGHT:']'))",
            "                NEWLINE:'\\n')",
            "              (unrecognized",
            "                (u_word",
            "                  (word",
            "                    SET:'set'))",
            "                (u_word",
            "                  (word",
            "                    WORD:'delta'))",
            "                (u_word",
            "                  (bracket_list",
            "                    BRACKET_LEFT:'['",
            "                    (u_word",
            "                      (word",
            "                        WORD:'expr'))",
            "                    (u_word_list",
            "                      BRACE_LEFT:'{'",
            "                      (u_word",
            "                        (word",
            "                          WORD:'$tls_done'))",
            "                      (u_word",
            "                        (word",
            "                          WORD:'-'))",
            "                      (u_word",
            "                        (word",
            "                          WORD:'$tcp_done'))",
            "                      BRACE_RIGHT:'}')",
            "                    BRACKET_RIGHT:']'))",
            "                NEWLINE:'\\n')",
            "              (unrecognized",
            "                (u_word",
            "                  (word",
            "                    WORD:'log'))",
            "                (u_word",
            "                  (word",
            "                    WORD:'local0.'))",
            "                (u_word",
            "                  (word",
            "                    DOUBLE_QUOTED_STRING:'\"TLS handshake took $delta milliseconds for Client IP is [IP::client_addr]\"'))",
            "                NEWLINE:'\\n')",
            "              BRACE_RIGHT:'}'))",
            "          NEWLINE:'\\n')",
            "        BRACE_RIGHT:'}'",
            "        NEWLINE:'\\n')))",
            "  (statement",
            "    (s_ltm",
            "      LTM:'ltm'",
            "      (l_snat",
            "        SNAT:'snat'",
            "        name = (word",
            "          WORD:'/Common/SOME_SNAT')",
            "        BRACE_LEFT:'{'",
            "        NEWLINE:'\\n'",
            "        (ls_origins",
            "          ORIGINS:'origins'",
            "          BRACE_LEFT:'{'",
            "          NEWLINE:'\\n'",
            "          (lso_origin",
            "            origin = (word",
            "              WORD:'0.0.0.0/0')",
            "            BRACE_LEFT:'{'",
            "            BRACE_RIGHT:'}'",
            "            NEWLINE:'\\n')",
            "          BRACE_RIGHT:'}'",
            "          NEWLINE:'\\n')",
            "        (ls_snatpool",
            "          SNATPOOL:'snatpool'",
            "          name = (word",
            "            WORD:'/Common/SOME_SNATPOOL')",
            "          NEWLINE:'\\n')",
            "        (ls_vlans",
            "          VLANS:'vlans'",
            "          BRACE_LEFT:'{'",
            "          BRACE_RIGHT:'}'",
            "          NEWLINE:'\\n')",
            "        (ls_vlans",
            "          VLANS:'vlans'",
            "          BRACE_LEFT:'{'",
            "          NEWLINE:'\\n'",
            "          (lsv_vlan",
            "            name = (word",
            "              WORD:'/Common/SOME_VLAN')",
            "            NEWLINE:'\\n')",
            "          BRACE_RIGHT:'}'",
            "          NEWLINE:'\\n')",
            "        (ls_vlans_disabled",
            "          VLANS_DISABLED:'vlans-disabled'",
            "          NEWLINE:'\\n')",
            "        (ls_vlans_enabled",
            "          VLANS_ENABLED:'vlans-enabled'",
            "          NEWLINE:'\\n')",
            "        BRACE_RIGHT:'}'",
            "        NEWLINE:'\\n')))",
            "  (statement",
            "    (s_ltm",
            "      LTM:'ltm'",
            "      (l_snat_translation",
            "        SNAT_TRANSLATION:'snat-translation'",
            "        name = (word",
            "          WORD:'/Common/192.0.2.4')",
            "        BRACE_LEFT:'{'",
            "        NEWLINE:'\\n'",
            "        (lst_address",
            "          ADDRESS:'address'",
            "          address = (word",
            "            WORD:'192.0.2.5')",
            "          NEWLINE:'\\n')",
            "        (lst_traffic_group",
            "          TRAFFIC_GROUP:'traffic-group'",
            "          name = (word",
            "            WORD:'/Common/traffic-group-1')",
            "          NEWLINE:'\\n')",
            "        BRACE_RIGHT:'}'",
            "        NEWLINE:'\\n')))",
            "  (statement",
            "    (s_ltm",
            "      LTM:'ltm'",
            "      (l_snatpool",
            "        SNATPOOL:'snatpool'",
            "        name = (word",
            "          WORD:'/Common/SOME_SNATPOOL')",
            "        BRACE_LEFT:'{'",
            "        NEWLINE:'\\n'",
            "        (lsp_members",
            "          MEMBERS:'members'",
            "          BRACE_LEFT:'{'",
            "          NEWLINE:'\\n'",
            "          (lspm_member",
            "            name = (word",
            "              WORD:'/Common/192.0.2.5')",
            "            NEWLINE:'\\n')",
            "          (lspm_member",
            "            name = (word",
            "              WORD:'/Common/192.0.2.6')",
            "            NEWLINE:'\\n')",
            "          BRACE_RIGHT:'}'",
            "          NEWLINE:'\\n')",
            "        BRACE_RIGHT:'}'",
            "        NEWLINE:'\\n')))",
            "  (statement",
            "    (s_ltm",
            "      LTM:'ltm'",
            "      (l_virtual",
            "        VIRTUAL:'virtual'",
            "        name = (word",
            "          WORD:'/Common/SOME_VIRTUAL')",
            "        BRACE_LEFT:'{'",
            "        NEWLINE:'\\n'",
            "        (lv_destination",
            "          DESTINATION:'destination'",
            "          name = (word",
            "            WORD:'/Common/192.0.2.7:80')",
            "          NEWLINE:'\\n')",
            "        (lv_disabled",
            "          DISABLED:'disabled'",
            "          NEWLINE:'\\n')",
            "        (lv_enabled",
            "          ENABLED:'enabled'",
            "          NEWLINE:'\\n')",
            "        (lv_ip_forward",
            "          IP_FORWARD:'ip-forward'",
            "          NEWLINE:'\\n')",
            "        (lv_ip_protocol",
            "          IP_PROTOCOL:'ip-protocol'",
            "          (ip_protocol",
            "            TCP:'tcp')",
            "          NEWLINE:'\\n')",
            "        (lv_mask",
            "          MASK:'mask'",
            "          mask = (word",
            "            WORD:'255.255.255.255')",
            "          NEWLINE:'\\n')",
            "        (lv_persist",
            "          PERSIST:'persist'",
            "          BRACE_LEFT:'{'",
            "          NEWLINE:'\\n'",
            "          (lvp_persistence",
            "            name = (word",
            "              WORD:'/Common/SOME_PROFILE')",
            "            BRACE_LEFT:'{'",
            "            NEWLINE:'\\n'",
            "            (unrecognized",
            "              (u_word",
            "                (word",
            "                  WORD:'default'))",
            "              (u_word",
            "                (word",
            "                  WORD:'yes'))",
            "              NEWLINE:'\\n')",
            "            BRACE_RIGHT:'}'",
            "            NEWLINE:'\\n')",
            "          BRACE_RIGHT:'}'",
            "          NEWLINE:'\\n')",
            "        (lv_pool",
            "          POOL:'pool'",
            "          name = (word",
            "            WORD:'/Common/SOME_POOL')",
            "          NEWLINE:'\\n')",
            "        (lv_profiles",
            "          PROFILES:'profiles'",
            "          BRACE_LEFT:'{'",
            "          NEWLINE:'\\n'",
            "          (lv_profiles_profile",
            "            name = (word",
            "              WORD:'/Common/P1')",
            "            BRACE_LEFT:'{'",
            "            BRACE_RIGHT:'}'",
            "            NEWLINE:'\\n')",
            "          (lv_profiles_profile",
            "            name = (word",
            "              WORD:'/Common/P2')",
            "            BRACE_LEFT:'{'",
            "            BRACE_RIGHT:'}'",
            "            NEWLINE:'\\n')",
            "          (lv_profiles_profile",
            "            name = (word",
            "              WORD:'/Common/P3')",
            "            BRACE_LEFT:'{'",
            "            BRACE_RIGHT:'}'",
            "            NEWLINE:'\\n')",
            "          BRACE_RIGHT:'}'",
            "          NEWLINE:'\\n')",
            "        (lv_reject",
            "          REJECT:'reject'",
            "          NEWLINE:'\\n')",
            "        (lv_rules",
            "          RULES:'rules'",
            "          BRACE_LEFT:'{'",
            "          NEWLINE:'\\n'",
            "          (lvr_rule",
            "            name = (word",
            "              WORD:'/Common/SOME_RULE1')",
            "            NEWLINE:'\\n')",
            "          BRACE_RIGHT:'}'",
            "          NEWLINE:'\\n')",
            "        (lv_source",
            "          SOURCE:'source'",
            "          source = (word",
            "            WORD:'0.0.0.0/0')",
            "          NEWLINE:'\\n')",
            "        (lv_source_address_translation",
            "          SOURCE_ADDRESS_TRANSLATION:'source-address-translation'",
            "          BRACE_LEFT:'{'",
            "          NEWLINE:'\\n'",
            "          (lvsat_pool",
            "            POOL:'pool'",
            "            name = (word",
            "              WORD:'/Common/SOME_SNATPOOL')",
            "            NEWLINE:'\\n')",
            "          (lvsat_type",
            "            TYPE:'type'",
            "            (source_address_translation_type",
            "              SNAT:'snat')",
            "            NEWLINE:'\\n')",
            "          BRACE_RIGHT:'}'",
            "          NEWLINE:'\\n')",
            "        (lv_translate_address",
            "          TRANSLATE_ADDRESS:'translate-address'",
            "          ENABLED:'enabled'",
            "          NEWLINE:'\\n')",
            "        (lv_translate_port",
            "          TRANSLATE_PORT:'translate-port'",
            "          ENABLED:'enabled'",
            "          NEWLINE:'\\n')",
            "        (lv_vlans",
            "          VLANS:'vlans'",
            "          BRACE_LEFT:'{'",
            "          BRACE_RIGHT:'}'",
            "          NEWLINE:'\\n')",
            "        (lv_vlans",
            "          VLANS:'vlans'",
            "          BRACE_LEFT:'{'",
            "          NEWLINE:'\\n'",
            "          (lvv_vlan",
            "            name = (word",
            "              WORD:'/Common/MY_VLAN')",
            "            NEWLINE:'\\n')",
            "          BRACE_RIGHT:'}'",
            "          NEWLINE:'\\n')",
            "        (lv_vlans_disabled",
            "          VLANS_DISABLED:'vlans-disabled'",
            "          NEWLINE:'\\n')",
            "        (lv_vlans_enabled",
            "          VLANS_ENABLED:'vlans-enabled'",
            "          NEWLINE:'\\n')",
            "        BRACE_RIGHT:'}'",
            "        NEWLINE:'\\n')))",
            "  (statement",
            "    (s_ltm",
            "      LTM:'ltm'",
            "      (l_virtual_address",
            "        VIRTUAL_ADDRESS:'virtual-address'",
            "        name = (word",
            "          WORD:'/Common/192.0.2.8')",
            "        BRACE_LEFT:'{'",
            "        NEWLINE:'\\n'",
            "        (lva_address",
            "          ADDRESS:'address'",
            "          address = (word",
            "            WORD:'192.0.2.9')",
            "          NEWLINE:'\\n')",
            "        (lva_arp",
            "          ARP:'arp'",
            "          DISABLED:'disabled'",
            "          NEWLINE:'\\n')",
            "        (lva_arp",
            "          ARP:'arp'",
            "          ENABLED:'enabled'",
            "          NEWLINE:'\\n')",
            "        (lva_icmp_echo",
            "          ICMP_ECHO:'icmp-echo'",
            "          DISABLED:'disabled'",
            "          NEWLINE:'\\n')",
            "        (lva_icmp_echo",
            "          ICMP_ECHO:'icmp-echo'",
            "          ENABLED:'enabled'",
            "          NEWLINE:'\\n')",
            "        (lva_mask",
            "          MASK:'mask'",
            "          mask = (word",
            "            WORD:'255.255.255.255')",
            "          NEWLINE:'\\n')",
            "        (lva_route_advertisement",
            "          ROUTE_ADVERTISEMENT:'route-advertisement'",
            "          ramode = (route_advertisement_mode",
            "            SELECTIVE:'selective')",
            "          NEWLINE:'\\n')",
            "        (lva_traffic_group",
            "          TRAFFIC_GROUP:'traffic-group'",
            "          name = (word",
            "            WORD:'/Common/traffic-group-1')",
            "          NEWLINE:'\\n')",
            "        BRACE_RIGHT:'}'",
            "        NEWLINE:'\\n')))",
            "  (statement",
            "    (s_ltm",
            "      LTM:'ltm'",
            "      (l_monitor",
            "        MONITOR:'monitor'",
            "        (lm_http",
            "          HTTP:'http'",
            "          name = (word",
            "            WORD:'/Common/SOME_MONITOR1')",
            "          BRACE_LEFT:'{'",
            "          NEWLINE:'\\n'",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'adaptive'))",
            "            (u_word",
            "              (word",
            "                DISABLED:'disabled'))",
            "            NEWLINE:'\\n')",
            "          (lmh_defaults_from",
            "            DEFAULTS_FROM:'defaults-from'",
            "            name = (word",
            "              WORD:'/Common/http')",
            "            NEWLINE:'\\n')",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                DESTINATION:'destination'))",
            "            (u_word",
            "              (word",
            "                WORD:'*:80'))",
            "            NEWLINE:'\\n')",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'interval'))",
            "            (u_word",
            "              (word",
            "                WORD:'5'))",
            "            NEWLINE:'\\n')",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'ip-dscp'))",
            "            (u_word",
            "              (word",
            "                WORD:'0'))",
            "            NEWLINE:'\\n')",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'recv'))",
            "            (u_word",
            "              (word",
            "                WORD:'somerecvup'))",
            "            NEWLINE:'\\n')",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'recv-disable'))",
            "            (u_word",
            "              (word",
            "                WORD:'none'))",
            "            NEWLINE:'\\n')",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'send'))",
            "            (u_word",
            "              (word",
            "                DOUBLE_QUOTED_STRING:'\"GET /some/path HTTP/1.1\\nHost: somehost.example.com\\nConnection: Close\\n\\n\"'))",
            "            NEWLINE:'\\n')",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'time-until-up'))",
            "            (u_word",
            "              (word",
            "                WORD:'0'))",
            "            NEWLINE:'\\n')",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'timeout'))",
            "            (u_word",
            "              (word",
            "                WORD:'12'))",
            "            NEWLINE:'\\n')",
            "          BRACE_RIGHT:'}'",
            "          NEWLINE:'\\n'))))",
            "  (statement",
            "    (s_ltm",
            "      LTM:'ltm'",
            "      (l_monitor",
            "        MONITOR:'monitor'",
            "        (lm_https",
            "          HTTPS:'https'",
            "          name = (word",
            "            WORD:'/Common/SOME_MONITOR2')",
            "          BRACE_LEFT:'{'",
            "          NEWLINE:'\\n'",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'adaptive'))",
            "            (u_word",
            "              (word",
            "                DISABLED:'disabled'))",
            "            NEWLINE:'\\n')",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'cipherlist'))",
            "            (u_word",
            "              (word",
            "                WORD:'DEFAULT:+SHA:+3DES:+kEDH'))",
            "            NEWLINE:'\\n')",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'compatibility'))",
            "            (u_word",
            "              (word",
            "                ENABLED:'enabled'))",
            "            NEWLINE:'\\n')",
            "          (lmhs_defaults_from",
            "            DEFAULTS_FROM:'defaults-from'",
            "            name = (word",
            "              WORD:'/Common/https')",
            "            NEWLINE:'\\n')",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                DESTINATION:'destination'))",
            "            (u_word",
            "              (word",
            "                WORD:'*:443'))",
            "            NEWLINE:'\\n')",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'interval'))",
            "            (u_word",
            "              (word",
            "                WORD:'5'))",
            "            NEWLINE:'\\n')",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'ip-dscp'))",
            "            (u_word",
            "              (word",
            "                WORD:'0'))",
            "            NEWLINE:'\\n')",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'recv'))",
            "            (u_word",
            "              (word",
            "                WORD:'somerecvup'))",
            "            NEWLINE:'\\n')",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'recv-disable'))",
            "            (u_word",
            "              (word",
            "                WORD:'none'))",
            "            NEWLINE:'\\n')",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'send'))",
            "            (u_word",
            "              (word",
            "                DOUBLE_QUOTED_STRING:'\"GET /some/path HTTP/1.1\\nHost: somehost.example.com\\nConnection: Close\\n\\n\"'))",
            "            NEWLINE:'\\n')",
            "          (lmhs_ssl_profile",
            "            SSL_PROFILE:'ssl-profile'",
            "            name = (word",
            "              WORD:'/Common/SOME_SSL_PROFILE')",
            "            NEWLINE:'\\n')",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'time-until-up'))",
            "            (u_word",
            "              (word",
            "                WORD:'0'))",
            "            NEWLINE:'\\n')",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'timeout'))",
            "            (u_word",
            "              (word",
            "                WORD:'16'))",
            "            NEWLINE:'\\n')",
            "          BRACE_RIGHT:'}'",
            "          NEWLINE:'\\n'))))",
            "  (statement",
            "    (s_ltm",
            "      LTM:'ltm'",
            "      (l_persistence",
            "        PERSISTENCE:'persistence'",
            "        (lper_source_addr",
            "          SOURCE_ADDR:'source-addr'",
            "          name = (word",
            "            WORD:'/Common/SOME_PERSISTENCE_SOURCE_ADDR')",
            "          BRACE_LEFT:'{'",
            "          NEWLINE:'\\n'",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'app-service'))",
            "            (u_word",
            "              (word",
            "                WORD:'none'))",
            "            NEWLINE:'\\n')",
            "          (lpersa_defaults_from",
            "            DEFAULTS_FROM:'defaults-from'",
            "            name = (word",
            "              WORD:'/Common/source_addr')",
            "            NEWLINE:'\\n')",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'timeout'))",
            "            (u_word",
            "              (word",
            "                WORD:'60'))",
            "            NEWLINE:'\\n')",
            "          BRACE_RIGHT:'}'",
            "          NEWLINE:'\\n'))))",
            "  (statement",
            "    (s_ltm",
            "      LTM:'ltm'",
            "      (l_persistence",
            "        PERSISTENCE:'persistence'",
            "        (lper_ssl",
            "          SSL:'ssl'",
            "          name = (word",
            "            WORD:'/Common/SOME_PERSISTENCE_SSL')",
            "          BRACE_LEFT:'{'",
            "          NEWLINE:'\\n'",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'app-service'))",
            "            (u_word",
            "              (word",
            "                WORD:'none'))",
            "            NEWLINE:'\\n')",
            "          (lperss_defaults_from",
            "            DEFAULTS_FROM:'defaults-from'",
            "            name = (word",
            "              WORD:'/Common/ssl')",
            "            NEWLINE:'\\n')",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'match-across-pools'))",
            "            (u_word",
            "              (word",
            "                DISABLED:'disabled'))",
            "            NEWLINE:'\\n')",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'match-across-services'))",
            "            (u_word",
            "              (word",
            "                DISABLED:'disabled'))",
            "            NEWLINE:'\\n')",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'match-across-virtuals'))",
            "            (u_word",
            "              (word",
            "                DISABLED:'disabled'))",
            "            NEWLINE:'\\n')",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'override-connection-limit'))",
            "            (u_word",
            "              (word",
            "                DISABLED:'disabled'))",
            "            NEWLINE:'\\n')",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'timeout'))",
            "            (u_word",
            "              (word",
            "                WORD:'300'))",
            "            NEWLINE:'\\n')",
            "          BRACE_RIGHT:'}'",
            "          NEWLINE:'\\n'))))",
            "  (statement",
            "    (s_ltm",
            "      LTM:'ltm'",
            "      (l_profile",
            "        PROFILE:'profile'",
            "        (lprof_client_ssl",
            "          CLIENT_SSL:'client-ssl'",
            "          name = (word",
            "            WORD:'/Common/SOME_PROFILE_CLIENT_SSL')",
            "          BRACE_LEFT:'{'",
            "          NEWLINE:'\\n'",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'alert-timeout'))",
            "            (u_word",
            "              (word",
            "                WORD:'indefinite'))",
            "            NEWLINE:'\\n')",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'allow-dynamic-record-sizing'))",
            "            (u_word",
            "              (word",
            "                DISABLED:'disabled'))",
            "            NEWLINE:'\\n')",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'allow-non-ssl'))",
            "            (u_word",
            "              (word",
            "                DISABLED:'disabled'))",
            "            NEWLINE:'\\n')",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'app-service'))",
            "            (u_word",
            "              (word",
            "                WORD:'none'))",
            "            NEWLINE:'\\n')",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'cache-size'))",
            "            (u_word",
            "              (word",
            "                WORD:'262144'))",
            "            NEWLINE:'\\n')",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'cache-timeout'))",
            "            (u_word",
            "              (word",
            "                WORD:'3600'))",
            "            NEWLINE:'\\n')",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'cert'))",
            "            (u_word",
            "              (word",
            "                WORD:'/Common/example1.crt'))",
            "            NEWLINE:'\\n')",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'cert-extension-includes'))",
            "            (list",
            "              (word_list",
            "                BRACE_LEFT:'{'",
            "                (word",
            "                  WORD:'basic-constraints')",
            "                (word",
            "                  WORD:'subject-alternative-name')",
            "                BRACE_RIGHT:'}'))",
            "            NEWLINE:'\\n')",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'cert-key-chain'))",
            "            (list",
            "              (u_list",
            "                BRACE_LEFT:'{'",
            "                NEWLINE:'\\n'",
            "                (unrecognized",
            "                  (u_word",
            "                    (word",
            "                      WORD:'chain1'))",
            "                  (list",
            "                    (u_list",
            "                      BRACE_LEFT:'{'",
            "                      NEWLINE:'\\n'",
            "                      (unrecognized",
            "                        (u_word",
            "                          (word",
            "                            WORD:'cert'))",
            "                        (u_word",
            "                          (word",
            "                            WORD:'/Common/example2.crt'))",
            "                        NEWLINE:'\\n')",
            "                      (unrecognized",
            "                        (u_word",
            "                          (word",
            "                            WORD:'chain'))",
            "                        (u_word",
            "                          (word",
            "                            WORD:'/Common/example3.crt'))",
            "                        NEWLINE:'\\n')",
            "                      (unrecognized",
            "                        (u_word",
            "                          (word",
            "                            WORD:'key'))",
            "                        (u_word",
            "                          (word",
            "                            WORD:'foobar'))",
            "                        NEWLINE:'\\n')",
            "                      (unrecognized",
            "                        (u_word",
            "                          (word",
            "                            WORD:'passphrase'))",
            "                        (u_word",
            "                          (word",
            "                            WORD:'$M$TheQuickBrownFoxJumpsOverTheLazyDogTheQuickBro='))",
            "                        NEWLINE:'\\n')",
            "                      BRACE_RIGHT:'}'))",
            "                  NEWLINE:'\\n')",
            "                BRACE_RIGHT:'}'))",
            "            NEWLINE:'\\n')",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'cert-lifespan'))",
            "            (u_word",
            "              (word",
            "                WORD:'30'))",
            "            NEWLINE:'\\n')",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'cert-lookup-by-ipaddr-port'))",
            "            (u_word",
            "              (word",
            "                DISABLED:'disabled'))",
            "            NEWLINE:'\\n')",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'chain'))",
            "            (u_word",
            "              (word",
            "                WORD:'/Common/example4.crt'))",
            "            NEWLINE:'\\n')",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'cipher-group'))",
            "            (u_word",
            "              (word",
            "                WORD:'none'))",
            "            NEWLINE:'\\n')",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'ciphers'))",
            "            (u_word",
            "              (word",
            "                WORD:'!SSLv2:!EXPORT:!DHE+AES-GCM:!DHE+AES:!DHE+3DES:ECDHE+AES-GCM:ECDHE+AES:RSA+AES-GCM:RSA+AES:ECDHE+3DES:RSA+3DES:-MD5:DES-CBC3-SHA:-SSLv3:-RC4'))",
            "            NEWLINE:'\\n')",
            "          (lprofcs_defaults_from",
            "            DEFAULTS_FROM:'defaults-from'",
            "            name = (word",
            "              WORD:'/Common/clientssl')",
            "            NEWLINE:'\\n')",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'generic-alert'))",
            "            (u_word",
            "              (word",
            "                ENABLED:'enabled'))",
            "            NEWLINE:'\\n')",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'handshake-timeout'))",
            "            (u_word",
            "              (word",
            "                WORD:'10'))",
            "            NEWLINE:'\\n')",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'inherit-certkeychain'))",
            "            (u_word",
            "              (word",
            "                WORD:'false'))",
            "            NEWLINE:'\\n')",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'key'))",
            "            (u_word",
            "              (word",
            "                WORD:'foobar'))",
            "            NEWLINE:'\\n')",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'max-active-handshakes'))",
            "            (u_word",
            "              (word",
            "                WORD:'indefinite'))",
            "            NEWLINE:'\\n')",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'max-aggregate-renegotiation-per-minute'))",
            "            (u_word",
            "              (word",
            "                WORD:'indefinite'))",
            "            NEWLINE:'\\n')",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'max-renegotiations-per-minute'))",
            "            (u_word",
            "              (word",
            "                WORD:'5'))",
            "            NEWLINE:'\\n')",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'maximum-record-size'))",
            "            (u_word",
            "              (word",
            "                WORD:'16384'))",
            "            NEWLINE:'\\n')",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'mod-ssl-methods'))",
            "            (u_word",
            "              (word",
            "                DISABLED:'disabled'))",
            "            NEWLINE:'\\n')",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'mode'))",
            "            (u_word",
            "              (word",
            "                ENABLED:'enabled'))",
            "            NEWLINE:'\\n')",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'ocsp-stapling'))",
            "            (u_word",
            "              (word",
            "                ENABLED:'enabled'))",
            "            NEWLINE:'\\n')",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'options'))",
            "            (list",
            "              (word_list",
            "                BRACE_LEFT:'{'",
            "                (word",
            "                  WORD:'dont-insert-empty-fragments')",
            "                BRACE_RIGHT:'}'))",
            "            NEWLINE:'\\n')",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'passphrase'))",
            "            (u_word",
            "              (word",
            "                WORD:'$M$TheQuickBrownFoxJumpsOverTheLazyDogTheQuickBro='))",
            "            NEWLINE:'\\n')",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'peer-no-renegotiate-timeout'))",
            "            (u_word",
            "              (word",
            "                WORD:'10'))",
            "            NEWLINE:'\\n')",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'proxy-ca-cert'))",
            "            (u_word",
            "              (word",
            "                WORD:'/Common/example5.crt'))",
            "            NEWLINE:'\\n')",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'proxy-ca-key'))",
            "            (u_word",
            "              (word",
            "                WORD:'/Common/example5.key'))",
            "            NEWLINE:'\\n')",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'proxy-ssl'))",
            "            (u_word",
            "              (word",
            "                DISABLED:'disabled'))",
            "            NEWLINE:'\\n')",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'proxy-ssl-passthrough'))",
            "            (u_word",
            "              (word",
            "                DISABLED:'disabled'))",
            "            NEWLINE:'\\n')",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'renegotiate-max-record-delay'))",
            "            (u_word",
            "              (word",
            "                WORD:'indefinite'))",
            "            NEWLINE:'\\n')",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'renegotiate-period'))",
            "            (u_word",
            "              (word",
            "                WORD:'indefinite'))",
            "            NEWLINE:'\\n')",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'renegotiate-size'))",
            "            (u_word",
            "              (word",
            "                WORD:'indefinite'))",
            "            NEWLINE:'\\n')",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'renegotiation'))",
            "            (u_word",
            "              (word",
            "                ENABLED:'enabled'))",
            "            NEWLINE:'\\n')",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'secure-renegotiation'))",
            "            (u_word",
            "              (word",
            "                WORD:'require'))",
            "            NEWLINE:'\\n')",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'server-name'))",
            "            (u_word",
            "              (word",
            "                WORD:'none'))",
            "            NEWLINE:'\\n')",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'session-mirroring'))",
            "            (u_word",
            "              (word",
            "                DISABLED:'disabled'))",
            "            NEWLINE:'\\n')",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'session-ticket'))",
            "            (u_word",
            "              (word",
            "                DISABLED:'disabled'))",
            "            NEWLINE:'\\n')",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'session-ticket-timeout'))",
            "            (u_word",
            "              (word",
            "                WORD:'0'))",
            "            NEWLINE:'\\n')",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'sni-default'))",
            "            (u_word",
            "              (word",
            "                WORD:'false'))",
            "            NEWLINE:'\\n')",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'sni-require'))",
            "            (u_word",
            "              (word",
            "                WORD:'false'))",
            "            NEWLINE:'\\n')",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'ssl-forward-proxy'))",
            "            (u_word",
            "              (word",
            "                DISABLED:'disabled'))",
            "            NEWLINE:'\\n')",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'ssl-forward-proxy-bypass'))",
            "            (u_word",
            "              (word",
            "                DISABLED:'disabled'))",
            "            NEWLINE:'\\n')",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'ssl-sign-hash'))",
            "            (u_word",
            "              (word",
            "                ANY:'any'))",
            "            NEWLINE:'\\n')",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'strict-resume'))",
            "            (u_word",
            "              (word",
            "                DISABLED:'disabled'))",
            "            NEWLINE:'\\n')",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'unclean-shutdown'))",
            "            (u_word",
            "              (word",
            "                ENABLED:'enabled'))",
            "            NEWLINE:'\\n')",
            "          BRACE_RIGHT:'}'",
            "          NEWLINE:'\\n'))))",
            "  (statement",
            "    (s_ltm",
            "      LTM:'ltm'",
            "      (l_profile",
            "        PROFILE:'profile'",
            "        (lprof_ocsp_stapling_params",
            "          OCSP_STAPLING_PARAMS:'ocsp-stapling-params'",
            "          name = (word",
            "            WORD:'/Common/SOME_PROFILE_OCSP_STAPLING_PARAMS')",
            "          BRACE_LEFT:'{'",
            "          NEWLINE:'\\n'",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'dns-resolver'))",
            "            (u_word",
            "              (word",
            "                WORD:'/Common/SOME_DNS_RESOLVER'))",
            "            NEWLINE:'\\n')",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'responder-url'))",
            "            (u_word",
            "              (word",
            "                WORD:'http://ocsp.example.com'))",
            "            NEWLINE:'\\n')",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'sign-hash'))",
            "            (u_word",
            "              (word",
            "                WORD:'sha1'))",
            "            NEWLINE:'\\n')",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'status-age'))",
            "            (u_word",
            "              (word",
            "                WORD:'86400'))",
            "            NEWLINE:'\\n')",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'trusted-responders'))",
            "            (u_word",
            "              (word",
            "                WORD:'/Common/example6.crt'))",
            "            NEWLINE:'\\n')",
            "          BRACE_RIGHT:'}'",
            "          NEWLINE:'\\n'))))",
            "  (statement",
            "    (s_ltm",
            "      LTM:'ltm'",
            "      (l_profile",
            "        PROFILE:'profile'",
            "        (lprof_one_connect",
            "          ONE_CONNECT:'one-connect'",
            "          name = (word",
            "            WORD:'/Common/oneconnect')",
            "          BRACE_LEFT:'{'",
            "          NEWLINE:'\\n'",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'app-service'))",
            "            (u_word",
            "              (word",
            "                WORD:'none'))",
            "            NEWLINE:'\\n')",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'idle-timeout-override'))",
            "            (u_word",
            "              (word",
            "                DISABLED:'disabled'))",
            "            NEWLINE:'\\n')",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'limit-type'))",
            "            (u_word",
            "              (word",
            "                WORD:'none'))",
            "            NEWLINE:'\\n')",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'max-age'))",
            "            (u_word",
            "              (word",
            "                WORD:'86400'))",
            "            NEWLINE:'\\n')",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'max-reuse'))",
            "            (u_word",
            "              (word",
            "                WORD:'12345'))",
            "            NEWLINE:'\\n')",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'max-size'))",
            "            (u_word",
            "              (word",
            "                WORD:'123456'))",
            "            NEWLINE:'\\n')",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'source-mask'))",
            "            (u_word",
            "              (word",
            "                ANY:'any'))",
            "            NEWLINE:'\\n')",
            "          BRACE_RIGHT:'}'",
            "          NEWLINE:'\\n'))))",
            "  (statement",
            "    (s_ltm",
            "      LTM:'ltm'",
            "      (l_profile",
            "        PROFILE:'profile'",
            "        (lprof_server_ssl",
            "          SERVER_SSL:'server-ssl'",
            "          name = (word",
            "            WORD:'/Common/SOME_PROFILE_SERVER_SSL')",
            "          BRACE_LEFT:'{'",
            "          NEWLINE:'\\n'",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'alert-timeout'))",
            "            (u_word",
            "              (word",
            "                WORD:'indefinite'))",
            "            NEWLINE:'\\n')",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'app-service'))",
            "            (u_word",
            "              (word",
            "                WORD:'none'))",
            "            NEWLINE:'\\n')",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'cache-size'))",
            "            (u_word",
            "              (word",
            "                WORD:'262144'))",
            "            NEWLINE:'\\n')",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'cache-timeout'))",
            "            (u_word",
            "              (word",
            "                WORD:'3600'))",
            "            NEWLINE:'\\n')",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'cert'))",
            "            (u_word",
            "              (word",
            "                WORD:'/Common/example7.crt'))",
            "            NEWLINE:'\\n')",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'chain'))",
            "            (u_word",
            "              (word",
            "                WORD:'none'))",
            "            NEWLINE:'\\n')",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'cipher-group'))",
            "            (u_word",
            "              (word",
            "                WORD:'none'))",
            "            NEWLINE:'\\n')",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'ciphers'))",
            "            (u_word",
            "              (word",
            "                WORD:'!SSLv2:!EXPORT:!DHE+AES-GCM:!DHE+AES:!DHE+3DES:ECDHE+AES-GCM:ECDHE+AES:RSA+AES-GCM:RSA+AES:ECDHE+3DES:RSA+3DES:-MD5:DES-CBC3-SHA:-SSLv3:-RC4'))",
            "            NEWLINE:'\\n')",
            "          (lprofss_defaults_from",
            "            DEFAULTS_FROM:'defaults-from'",
            "            name = (word",
            "              WORD:'/Common/serverssl')",
            "            NEWLINE:'\\n')",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'generic-alert'))",
            "            (u_word",
            "              (word",
            "                ENABLED:'enabled'))",
            "            NEWLINE:'\\n')",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'handshake-timeout'))",
            "            (u_word",
            "              (word",
            "                WORD:'10'))",
            "            NEWLINE:'\\n')",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'key'))",
            "            (u_word",
            "              (word",
            "                WORD:'foobar'))",
            "            NEWLINE:'\\n')",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'max-active-handshakes'))",
            "            (u_word",
            "              (word",
            "                WORD:'indefinite'))",
            "            NEWLINE:'\\n')",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'mod-ssl-methods'))",
            "            (u_word",
            "              (word",
            "                DISABLED:'disabled'))",
            "            NEWLINE:'\\n')",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'mode'))",
            "            (u_word",
            "              (word",
            "                ENABLED:'enabled'))",
            "            NEWLINE:'\\n')",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'options'))",
            "            (list",
            "              (word_list",
            "                BRACE_LEFT:'{'",
            "                (word",
            "                  WORD:'dont-insert-empty-fragments')",
            "                BRACE_RIGHT:'}'))",
            "            NEWLINE:'\\n')",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'proxy-ssl'))",
            "            (u_word",
            "              (word",
            "                DISABLED:'disabled'))",
            "            NEWLINE:'\\n')",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'proxy-ssl-passthrough'))",
            "            (u_word",
            "              (word",
            "                DISABLED:'disabled'))",
            "            NEWLINE:'\\n')",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'renegotiate-period'))",
            "            (u_word",
            "              (word",
            "                WORD:'indefinite'))",
            "            NEWLINE:'\\n')",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'renegotiate-size'))",
            "            (u_word",
            "              (word",
            "                WORD:'indefinite'))",
            "            NEWLINE:'\\n')",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'renegotiation'))",
            "            (u_word",
            "              (word",
            "                ENABLED:'enabled'))",
            "            NEWLINE:'\\n')",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'secure-renegotiation'))",
            "            (u_word",
            "              (word",
            "                WORD:'require-strict'))",
            "            NEWLINE:'\\n')",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'server-name'))",
            "            (u_word",
            "              (word",
            "                WORD:'none'))",
            "            NEWLINE:'\\n')",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'session-mirroring'))",
            "            (u_word",
            "              (word",
            "                DISABLED:'disabled'))",
            "            NEWLINE:'\\n')",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'session-ticket'))",
            "            (u_word",
            "              (word",
            "                DISABLED:'disabled'))",
            "            NEWLINE:'\\n')",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'sni-default'))",
            "            (u_word",
            "              (word",
            "                WORD:'false'))",
            "            NEWLINE:'\\n')",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'sni-require'))",
            "            (u_word",
            "              (word",
            "                WORD:'false'))",
            "            NEWLINE:'\\n')",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'ssl-forward-proxy'))",
            "            (u_word",
            "              (word",
            "                DISABLED:'disabled'))",
            "            NEWLINE:'\\n')",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'ssl-forward-proxy-bypass'))",
            "            (u_word",
            "              (word",
            "                DISABLED:'disabled'))",
            "            NEWLINE:'\\n')",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'ssl-sign-hash'))",
            "            (u_word",
            "              (word",
            "                ANY:'any'))",
            "            NEWLINE:'\\n')",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'strict-resume'))",
            "            (u_word",
            "              (word",
            "                DISABLED:'disabled'))",
            "            NEWLINE:'\\n')",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                WORD:'unclean-shutdown'))",
            "            (u_word",
            "              (word",
            "                ENABLED:'enabled'))",
            "            NEWLINE:'\\n')",
            "          BRACE_RIGHT:'}'",
            "          NEWLINE:'\\n\\n\\n'))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/f5_bigip_structured_malformed" : {
          "sentences" : [
            "(f5_bigip_structured_configuration",
            "  (statement",
            "    (s_sys",
            "      SYS:'sys'",
            "      (sys_global_settings",
            "        GLOBAL_SETTINGS:'global-settings'",
            "        BRACE_LEFT:'{'",
            "        NEWLINE:'\\n'",
            "        (sgs_hostname",
            "          HOSTNAME:'hostname'",
            "          hostname = (word",
            "            WORD:'f5_bigip_structured_malformed')",
            "          NEWLINE:'\\n')",
            "        BRACE_RIGHT:'}'",
            "        NEWLINE:'\\n\\n')))",
            "  (statement",
            "    (s_net",
            "      NET:'net'",
            "      (net_self",
            "        SELF:'self'",
            "        name = (word",
            "          WORD:'/Common/self1')",
            "        BRACE_LEFT:'{'",
            "        NEWLINE:'\\n'",
            "        (ns_address",
            "          ADDRESS:'address'",
            "          interface_address = (word",
            "            WORD:'10.0.0.2/24')",
            "          NEWLINE:'\\n')",
            "        BRACE_RIGHT:'}'",
            "        NEWLINE:'\\n\\n')))",
            "  (statement",
            "    (s_net",
            "      NET:'net'",
            "      (net_route",
            "        ROUTE:'route'",
            "        name = (word",
            "          WORD:'/Common/missing_gw')",
            "        BRACE_LEFT:'{'",
            "        NEWLINE:'\\n'",
            "        (nroute_network",
            "          NETWORK:'network'",
            "          network = (word",
            "            WORD:'192.0.2.1/32')",
            "          NEWLINE:'\\n')",
            "        BRACE_RIGHT:'}'",
            "        NEWLINE:'\\n\\n')))",
            "  (statement",
            "    (s_net",
            "      NET:'net'",
            "      (net_route",
            "        ROUTE:'route'",
            "        name = (word",
            "          WORD:'/Common/bad_gw')",
            "        BRACE_LEFT:'{'",
            "        NEWLINE:'\\n'",
            "        (nroute_network",
            "          NETWORK:'network'",
            "          network = (word",
            "            WORD:'192.0.2.2/32')",
            "          NEWLINE:'\\n')",
            "        (nroute_gw",
            "          GW:'gw'",
            "          gw = (word",
            "            WORD:'172.16.0.1')",
            "          NEWLINE:'\\n')",
            "        BRACE_RIGHT:'}'",
            "        NEWLINE:'\\n\\n')))",
            "  (statement",
            "    (s_net",
            "      NET:'net'",
            "      (net_route",
            "        ROUTE:'route'",
            "        name = (word",
            "          WORD:'/Common/mixed_protocols1')",
            "        BRACE_LEFT:'{'",
            "        NEWLINE:'\\n'",
            "        (nroute_network",
            "          NETWORK:'network'",
            "          network = (word",
            "            WORD:'192.0.2.2/32')",
            "          NEWLINE:'\\n')",
            "        (nroute_gw",
            "          GW:'gw'",
            "          gw = (word",
            "            WORD:'deaf:beef::1')",
            "          NEWLINE:'\\n')",
            "        BRACE_RIGHT:'}'",
            "        NEWLINE:'\\n\\n')))",
            "  (statement",
            "    (s_net",
            "      NET:'net'",
            "      (net_route",
            "        ROUTE:'route'",
            "        name = (word",
            "          WORD:'/Common/mixed_protocols2')",
            "        BRACE_LEFT:'{'",
            "        NEWLINE:'\\n'",
            "        (nroute_network",
            "          NETWORK:'network'",
            "          network = (word",
            "            WORD:'dead:beef::/64')",
            "          NEWLINE:'\\n')",
            "        (nroute_gw",
            "          GW:'gw'",
            "          gw = (word",
            "            WORD:'10.0.0.5')",
            "          NEWLINE:'\\n')",
            "        BRACE_RIGHT:'}'",
            "        NEWLINE:'\\n\\n')))",
            "  (statement",
            "    (s_net",
            "      NET:'net'",
            "      (net_route",
            "        ROUTE:'route'",
            "        name = (word",
            "          WORD:'/Common/missing_network')",
            "        BRACE_LEFT:'{'",
            "        NEWLINE:'\\n'",
            "        (nroute_gw",
            "          GW:'gw'",
            "          gw = (word",
            "            WORD:'10.0.0.1')",
            "          NEWLINE:'\\n')",
            "        BRACE_RIGHT:'}'",
            "        NEWLINE:'\\n\\n\\n')))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/f5_bigip_structured_net" : {
          "sentences" : [
            "(f5_bigip_structured_configuration",
            "  (statement",
            "    (s_sys",
            "      SYS:'sys'",
            "      (sys_global_settings",
            "        GLOBAL_SETTINGS:'global-settings'",
            "        BRACE_LEFT:'{'",
            "        NEWLINE:'\\n'",
            "        (sgs_hostname",
            "          HOSTNAME:'hostname'",
            "          hostname = (word",
            "            WORD:'f5_bigip_structured_net')",
            "          NEWLINE:'\\n')",
            "        BRACE_RIGHT:'}'",
            "        NEWLINE:'\\n')))",
            "  (statement",
            "    (s_net",
            "      NET:'net'",
            "      (unrecognized",
            "        (u_word",
            "          (word",
            "            WORD:'fdb'))",
            "        (u_word",
            "          (word",
            "            WORD:'tunnel'))",
            "        (u_word",
            "          (word",
            "            WORD:'/Common/MYTUNNEL'))",
            "        (list",
            "          (empty_list",
            "            BRACE_LEFT:'{'",
            "            BRACE_RIGHT:'}'))",
            "        NEWLINE:'\\n')))",
            "  (statement",
            "    (s_net",
            "      NET:'net'",
            "      (unrecognized",
            "        (u_word",
            "          (word",
            "            WORD:'fdb'))",
            "        (u_word",
            "          (word",
            "            WORD:'tunnel'))",
            "        (u_word",
            "          (word",
            "            WORD:'/Common/MYVLAN'))",
            "        (list",
            "          (empty_list",
            "            BRACE_LEFT:'{'",
            "            BRACE_RIGHT:'}'))",
            "        NEWLINE:'\\n')))",
            "  (statement",
            "    (s_net",
            "      NET:'net'",
            "      (net_interface",
            "        INTERFACE:'interface'",
            "        name = (word",
            "          WORD:'1.0')",
            "        BRACE_LEFT:'{'",
            "        NEWLINE:'\\n'",
            "        (ni_bundle",
            "          BUNDLE:'bundle'",
            "          ENABLED:'enabled'",
            "          NEWLINE:'\\n')",
            "        (ni_bundle_speed",
            "          BUNDLE_SPEED:'bundle-speed'",
            "          (bundle_speed",
            "            FORTY_G:'40G')",
            "          NEWLINE:'\\n')",
            "        (ni_disabled",
            "          DISABLED:'disabled'",
            "          NEWLINE:'\\n')",
            "        (ni_enabled",
            "          ENABLED:'enabled'",
            "          NEWLINE:'\\n')",
            "        (unrecognized",
            "          (u_word",
            "            (word",
            "              WORD:'forward-error-correction'))",
            "          (u_word",
            "            (word",
            "              WORD:'auto'))",
            "          NEWLINE:'\\n')",
            "        (unrecognized",
            "          (u_word",
            "            (word",
            "              WORD:'lldp-admin'))",
            "          (u_word",
            "            (word",
            "              WORD:'txrx'))",
            "          NEWLINE:'\\n')",
            "        (unrecognized",
            "          (u_word",
            "            (word",
            "              WORD:'lldp-tlvmap'))",
            "          (u_word",
            "            (word",
            "              WORD:'12304'))",
            "          NEWLINE:'\\n')",
            "        BRACE_RIGHT:'}'",
            "        NEWLINE:'\\n')))",
            "  (statement",
            "    (s_net",
            "      NET:'net'",
            "      (unrecognized",
            "        (u_word",
            "          (word",
            "            WORD:'lldp-globals'))",
            "        (list",
            "          (u_list",
            "            BRACE_LEFT:'{'",
            "            NEWLINE:'\\n'",
            "            (unrecognized",
            "              (u_word",
            "                (word",
            "                  ENABLED:'enabled'))",
            "              NEWLINE:'\\n')",
            "            BRACE_RIGHT:'}'))",
            "        NEWLINE:'\\n')))",
            "  (statement",
            "    (s_net",
            "      NET:'net'",
            "      (unrecognized",
            "        (u_word",
            "          (word",
            "            ROUTE_DOMAIN:'route-domain'))",
            "        (u_word",
            "          (word",
            "            WORD:'/Common/0'))",
            "        (list",
            "          (u_list",
            "            BRACE_LEFT:'{'",
            "            NEWLINE:'\\n'",
            "            (unrecognized",
            "              (u_word",
            "                (word",
            "                  WORD:'id'))",
            "              (u_word",
            "                (word",
            "                  WORD:'0'))",
            "              NEWLINE:'\\n')",
            "            (unrecognized",
            "              (u_word",
            "                (word",
            "                  VLANS:'vlans'))",
            "              (list",
            "                (u_list",
            "                  BRACE_LEFT:'{'",
            "                  NEWLINE:'\\n'",
            "                  (unrecognized",
            "                    (u_word",
            "                      (word",
            "                        WORD:'/Common/MYTUNNEL'))",
            "                    NEWLINE:'\\n')",
            "                  (unrecognized",
            "                    (u_word",
            "                      (word",
            "                        WORD:'/Common/MYVLAN'))",
            "                    NEWLINE:'\\n')",
            "                  BRACE_RIGHT:'}'))",
            "              NEWLINE:'\\n')",
            "            BRACE_RIGHT:'}'))",
            "        NEWLINE:'\\n')))",
            "  (statement",
            "    (s_net",
            "      NET:'net'",
            "      (net_self",
            "        SELF:'self'",
            "        name = (word",
            "          WORD:'/Common/MYSELF')",
            "        BRACE_LEFT:'{'",
            "        NEWLINE:'\\n'",
            "        (ns_address",
            "          ADDRESS:'address'",
            "          interface_address = (word",
            "            WORD:'10.0.0.1/24')",
            "          NEWLINE:'\\n')",
            "        (ns_allow_service",
            "          ALLOW_SERVICE:'allow-service'",
            "          ALL:'all'",
            "          NEWLINE:'\\n')",
            "        (ns_traffic_group",
            "          TRAFFIC_GROUP:'traffic-group'",
            "          name = (word",
            "            WORD:'/Common/traffic-group-local-only')",
            "          NEWLINE:'\\n')",
            "        (ns_vlan",
            "          VLAN:'vlan'",
            "          name = (word",
            "            WORD:'/Common/MYVLAN')",
            "          NEWLINE:'\\n')",
            "        BRACE_RIGHT:'}'",
            "        NEWLINE:'\\n')))",
            "  (statement",
            "    (s_net",
            "      NET:'net'",
            "      (net_route",
            "        ROUTE:'route'",
            "        name = (word",
            "          WORD:'/Common/route1')",
            "        BRACE_LEFT:'{'",
            "        NEWLINE:'\\n'",
            "        (nroute_gw",
            "          GW:'gw'",
            "          gw = (word",
            "            WORD:'10.0.0.2')",
            "          NEWLINE:'\\n')",
            "        (nroute_network",
            "          NETWORK:'network'",
            "          network = (word",
            "            WORD:'10.200.100.1/32')",
            "          NEWLINE:'\\n')",
            "        BRACE_RIGHT:'}'",
            "        NEWLINE:'\\n')))",
            "  (statement",
            "    (s_net",
            "      NET:'net'",
            "      (net_self",
            "        SELF:'self'",
            "        name = (word",
            "          WORD:'/Common/MYSELF6')",
            "        BRACE_LEFT:'{'",
            "        NEWLINE:'\\n'",
            "        (ns_address",
            "          ADDRESS:'address'",
            "          interface_address = (word",
            "            WORD:'1::1/64')",
            "          NEWLINE:'\\n')",
            "        (ns_vlan",
            "          VLAN:'vlan'",
            "          name = (word",
            "            WORD:'/Common/MYVLAN')",
            "          NEWLINE:'\\n')",
            "        BRACE_RIGHT:'}'",
            "        NEWLINE:'\\n')))",
            "  (statement",
            "    (s_net",
            "      NET:'net'",
            "      (unrecognized",
            "        (u_word",
            "          (word",
            "            WORD:'self-allow'))",
            "        (list",
            "          (u_list",
            "            BRACE_LEFT:'{'",
            "            NEWLINE:'\\n'",
            "            (unrecognized",
            "              (u_word",
            "                (word",
            "                  WORD:'defaults'))",
            "              (list",
            "                (u_list",
            "                  BRACE_LEFT:'{'",
            "                  NEWLINE:'\\n'",
            "                  (unrecognized",
            "                    (u_word",
            "                      (word",
            "                        WORD:'igmp:0'))",
            "                    NEWLINE:'\\n')",
            "                  (unrecognized",
            "                    (u_word",
            "                      (word",
            "                        WORD:'ospf:0'))",
            "                    NEWLINE:'\\n')",
            "                  (unrecognized",
            "                    (u_word",
            "                      (word",
            "                        WORD:'pim:0'))",
            "                    NEWLINE:'\\n')",
            "                  (unrecognized",
            "                    (u_word",
            "                      (word",
            "                        WORD:'tcp:123'))",
            "                    NEWLINE:'\\n')",
            "                  (unrecognized",
            "                    (u_word",
            "                      (word",
            "                        WORD:'udp:456'))",
            "                    NEWLINE:'\\n')",
            "                  BRACE_RIGHT:'}'))",
            "              NEWLINE:'\\n')",
            "            BRACE_RIGHT:'}'))",
            "        NEWLINE:'\\n')))",
            "  (statement",
            "    (s_net",
            "      NET:'net'",
            "      (unrecognized",
            "        (u_word",
            "          (word",
            "            WORD:'stp'))",
            "        (u_word",
            "          (word",
            "            WORD:'/Common/MYSTP'))",
            "        (list",
            "          (u_list",
            "            BRACE_LEFT:'{'",
            "            NEWLINE:'\\n'",
            "            (unrecognized",
            "              (u_word",
            "                (word",
            "                  INTERFACES:'interfaces'))",
            "              (list",
            "                (u_list",
            "                  BRACE_LEFT:'{'",
            "                  NEWLINE:'\\n'",
            "                  (unrecognized",
            "                    (u_word",
            "                      (word",
            "                        WORD:'1.0'))",
            "                    (list",
            "                      (u_list",
            "                        BRACE_LEFT:'{'",
            "                        NEWLINE:'\\n'",
            "                        (unrecognized",
            "                          (u_word",
            "                            (word",
            "                              WORD:'external-path-cost'))",
            "                          (u_word",
            "                            (word",
            "                              WORD:'12345'))",
            "                          NEWLINE:'\\n')",
            "                        (unrecognized",
            "                          (u_word",
            "                            (word",
            "                              WORD:'internal-path-cost'))",
            "                          (u_word",
            "                            (word",
            "                              WORD:'23456'))",
            "                          NEWLINE:'\\n')",
            "                        BRACE_RIGHT:'}'))",
            "                    NEWLINE:'\\n')",
            "                  BRACE_RIGHT:'}'))",
            "              NEWLINE:'\\n')",
            "            (unrecognized",
            "              (u_word",
            "                (word",
            "                  VLANS:'vlans'))",
            "              (list",
            "                (u_list",
            "                  BRACE_LEFT:'{'",
            "                  NEWLINE:'\\n'",
            "                  (unrecognized",
            "                    (u_word",
            "                      (word",
            "                        WORD:'/Common/MYVLAN'))",
            "                    NEWLINE:'\\n')",
            "                  BRACE_RIGHT:'}'))",
            "              NEWLINE:'\\n')",
            "            BRACE_RIGHT:'}'))",
            "        NEWLINE:'\\n')))",
            "  (statement",
            "    (s_net",
            "      NET:'net'",
            "      (unrecognized",
            "        (u_word",
            "          (word",
            "            WORD:'stp-globals'))",
            "        (list",
            "          (u_list",
            "            BRACE_LEFT:'{'",
            "            NEWLINE:'\\n'",
            "            (unrecognized",
            "              (u_word",
            "                (word",
            "                  WORD:'config-name'))",
            "              (u_word",
            "                (word",
            "                  WORD:'00-11-22-33-44-55'))",
            "              NEWLINE:'\\n')",
            "            BRACE_RIGHT:'}'))",
            "        NEWLINE:'\\n')))",
            "  (statement",
            "    (s_net",
            "      NET:'net'",
            "      (net_trunk",
            "        TRUNK:'trunk'",
            "        name = (word",
            "          WORD:'trunk1')",
            "        BRACE_LEFT:'{'",
            "        NEWLINE:'\\n'",
            "        (nt_interfaces",
            "          INTERFACES:'interfaces'",
            "          BRACE_LEFT:'{'",
            "          NEWLINE:'\\n'",
            "          (nti_interface",
            "            name = (word",
            "              WORD:'2.0')",
            "            NEWLINE:'\\n')",
            "          (nti_interface",
            "            name = (word",
            "              WORD:'3.0')",
            "            NEWLINE:'\\n')",
            "          BRACE_RIGHT:'}'",
            "          NEWLINE:'\\n')",
            "        (nt_lacp",
            "          LACP:'lacp'",
            "          ENABLED:'enabled'",
            "          NEWLINE:'\\n')",
            "        BRACE_RIGHT:'}'",
            "        NEWLINE:'\\n')))",
            "  (statement",
            "    (s_net",
            "      NET:'net'",
            "      (unrecognized",
            "        (u_word",
            "          (word",
            "            WORD:'tunnels'))",
            "        (u_word",
            "          (word",
            "            WORD:'tunnel'))",
            "        (u_word",
            "          (word",
            "            WORD:'/Common/MYTUNNEL'))",
            "        (list",
            "          (u_list",
            "            BRACE_LEFT:'{'",
            "            NEWLINE:'\\n'",
            "            (unrecognized",
            "              (u_word",
            "                (word",
            "                  DESCRIPTION:'description'))",
            "              (u_word",
            "                (word",
            "                  DOUBLE_QUOTED_STRING:'\"my tunnel\"'))",
            "              NEWLINE:'\\n')",
            "            (unrecognized",
            "              (u_word",
            "                (word",
            "                  PROFILE:'profile'))",
            "              (u_word",
            "                (word",
            "                  WORD:'/Common/MYPROFILE'))",
            "              NEWLINE:'\\n')",
            "            BRACE_RIGHT:'}'))",
            "        NEWLINE:'\\n')))",
            "  (statement",
            "    (s_net",
            "      NET:'net'",
            "      (net_vlan",
            "        VLAN:'vlan'",
            "        name = (word",
            "          WORD:'/Common/MYVLAN')",
            "        BRACE_LEFT:'{'",
            "        NEWLINE:'\\n'",
            "        (nv_interfaces",
            "          INTERFACES:'interfaces'",
            "          BRACE_LEFT:'{'",
            "          NEWLINE:'\\n'",
            "          (nvi_interface",
            "            name = (word",
            "              WORD:'1.0')",
            "            BRACE_LEFT:'{'",
            "            BRACE_RIGHT:'}'",
            "            NEWLINE:'\\n')",
            "          BRACE_RIGHT:'}'",
            "          NEWLINE:'\\n')",
            "        (nv_tag",
            "          TAG:'tag'",
            "          tag = (word",
            "            WORD:'123')",
            "          NEWLINE:'\\n')",
            "        BRACE_RIGHT:'}'",
            "        NEWLINE:'\\n\\n\\n')))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/f5_bigip_structured_net_routing_bgp" : {
          "sentences" : [
            "(f5_bigip_structured_configuration",
            "  (statement",
            "    (s_sys",
            "      SYS:'sys'",
            "      (sys_global_settings",
            "        GLOBAL_SETTINGS:'global-settings'",
            "        BRACE_LEFT:'{'",
            "        NEWLINE:'\\n'",
            "        (sgs_hostname",
            "          HOSTNAME:'hostname'",
            "          hostname = (word",
            "            WORD:'f5_bigip_structured_net_routing_bgp')",
            "          NEWLINE:'\\n')",
            "        BRACE_RIGHT:'}'",
            "        NEWLINE:'\\n\\n')))",
            "  (statement",
            "    (s_net",
            "      NET:'net'",
            "      (net_routing",
            "        ROUTING:'routing'",
            "        (nr_bgp",
            "          BGP:'bgp'",
            "          name = (word",
            "            WORD:'/Common/my_bgp')",
            "          BRACE_LEFT:'{'",
            "          NEWLINE:'\\n'",
            "          (nrb_address_family",
            "            ADDRESS_FAMILY:'address-family'",
            "            BRACE_LEFT:'{'",
            "            NEWLINE:'\\n'",
            "            (nrbaf_ipv4",
            "              IPV4:'ipv4'",
            "              BRACE_LEFT:'{'",
            "              NEWLINE:'\\n'",
            "              (nrbaf_common",
            "                (nrbafc_redistribute",
            "                  REDISTRIBUTE:'redistribute'",
            "                  BRACE_LEFT:'{'",
            "                  NEWLINE:'\\n'",
            "                  (nrbafcr_kernel",
            "                    KERNEL:'kernel'",
            "                    BRACE_LEFT:'{'",
            "                    NEWLINE:'\\n'",
            "                    (nrbafcrk_route_map",
            "                      ROUTE_MAP:'route-map'",
            "                      name = (word",
            "                        WORD:'/Common/MY_KERNEL_OUT')",
            "                      NEWLINE:'\\n')",
            "                    BRACE_RIGHT:'}'",
            "                    NEWLINE:'\\n')",
            "                  BRACE_RIGHT:'}'",
            "                  NEWLINE:'\\n'))",
            "              BRACE_RIGHT:'}'",
            "              NEWLINE:'\\n')",
            "            (nrbaf_ipv6",
            "              IPV6:'ipv6'",
            "              BRACE_LEFT:'{'",
            "              BRACE_RIGHT:'}'",
            "              NEWLINE:'\\n')",
            "            BRACE_RIGHT:'}'",
            "            NEWLINE:'\\n')",
            "          (nrb_local_as",
            "            LOCAL_AS:'local-as'",
            "            as = (word",
            "              WORD:'123')",
            "            NEWLINE:'\\n')",
            "          (nrb_neighbor",
            "            NEIGHBOR:'neighbor'",
            "            BRACE_LEFT:'{'",
            "            NEWLINE:'\\n'",
            "            (nrbn_name",
            "              name = (word",
            "                WORD:'dead:beef::1')",
            "              BRACE_LEFT:'{'",
            "              NEWLINE:'\\n'",
            "              (nrbnn_address_family",
            "                ADDRESS_FAMILY:'address-family'",
            "                BRACE_LEFT:'{'",
            "                NEWLINE:'\\n'",
            "                (nrbnnaf_ipv4",
            "                  IPV4:'ipv4'",
            "                  BRACE_LEFT:'{'",
            "                  NEWLINE:'\\n'",
            "                  (nrbnnaf_common",
            "                    (nrbnnafc_activate",
            "                      ACTIVATE:'activate'",
            "                      DISABLED:'disabled'",
            "                      NEWLINE:'\\n'))",
            "                  BRACE_RIGHT:'}'",
            "                  NEWLINE:'\\n')",
            "                (nrbnnaf_ipv6",
            "                  IPV6:'ipv6'",
            "                  BRACE_LEFT:'{'",
            "                  NEWLINE:'\\n'",
            "                  (unrecognized",
            "                    (u_word",
            "                      (word",
            "                        WORD:'capability'))",
            "                    (list",
            "                      (u_list",
            "                        BRACE_LEFT:'{'",
            "                        NEWLINE:'\\n'",
            "                        (unrecognized",
            "                          (u_word",
            "                            (word",
            "                              WORD:'graceful-restart'))",
            "                          (u_word",
            "                            (word",
            "                              DISABLED:'disabled'))",
            "                          NEWLINE:'\\n')",
            "                        BRACE_RIGHT:'}'))",
            "                    NEWLINE:'\\n')",
            "                  (unrecognized",
            "                    (u_word",
            "                      (word",
            "                        WORD:'maximum-prefix'))",
            "                    (list",
            "                      (u_list",
            "                        BRACE_LEFT:'{'",
            "                        NEWLINE:'\\n'",
            "                        (unrecognized",
            "                          (u_word",
            "                            (word",
            "                              VALUE:'value'))",
            "                          (u_word",
            "                            (word",
            "                              WORD:'12345'))",
            "                          NEWLINE:'\\n')",
            "                        BRACE_RIGHT:'}'))",
            "                    NEWLINE:'\\n')",
            "                  (nrbnnaf_common",
            "                    (nrbnnafc_route_map",
            "                      ROUTE_MAP:'route-map'",
            "                      BRACE_LEFT:'{'",
            "                      NEWLINE:'\\n'",
            "                      (nrbnnafcr_out",
            "                        OUT:'out'",
            "                        name = (word",
            "                          WORD:'/Common/MY_IPV6_OUT')",
            "                        NEWLINE:'\\n')",
            "                      BRACE_RIGHT:'}'",
            "                      NEWLINE:'\\n'))",
            "                  BRACE_RIGHT:'}'",
            "                  NEWLINE:'\\n')",
            "                BRACE_RIGHT:'}'",
            "                NEWLINE:'\\n')",
            "              (nrbnn_description",
            "                DESCRIPTION:'description'",
            "                description = (word",
            "                  DOUBLE_QUOTED_STRING:'\"Cool IPv6 BGP neighbor description\"')",
            "                NEWLINE:'\\n')",
            "              (unrecognized",
            "                (u_word",
            "                  (word",
            "                    WORD:'fall-over'))",
            "                (u_word",
            "                  (word",
            "                    WORD:'bfd'))",
            "                NEWLINE:'\\n')",
            "              (nrbnn_remote_as",
            "                REMOTE_AS:'remote-as'",
            "                as = (word",
            "                  WORD:'234')",
            "                NEWLINE:'\\n')",
            "              (nrbnn_update_source",
            "                UPDATE_SOURCE:'update-source'",
            "                name = (word",
            "                  WORD:'SOME_VLAN')",
            "                NEWLINE:'\\n')",
            "              BRACE_RIGHT:'}'",
            "              NEWLINE:'\\n')",
            "            (nrbn_name",
            "              name = (word",
            "                WORD:'192.0.2.1')",
            "              BRACE_LEFT:'{'",
            "              NEWLINE:'\\n'",
            "              (nrbnn_address_family",
            "                ADDRESS_FAMILY:'address-family'",
            "                BRACE_LEFT:'{'",
            "                NEWLINE:'\\n'",
            "                (nrbnnaf_ipv4",
            "                  IPV4:'ipv4'",
            "                  BRACE_LEFT:'{'",
            "                  NEWLINE:'\\n'",
            "                  (unrecognized",
            "                    (u_word",
            "                      (word",
            "                        WORD:'capability'))",
            "                    (list",
            "                      (u_list",
            "                        BRACE_LEFT:'{'",
            "                        NEWLINE:'\\n'",
            "                        (unrecognized",
            "                          (u_word",
            "                            (word",
            "                              WORD:'graceful-restart'))",
            "                          (u_word",
            "                            (word",
            "                              DISABLED:'disabled'))",
            "                          NEWLINE:'\\n')",
            "                        BRACE_RIGHT:'}'))",
            "                    NEWLINE:'\\n')",
            "                  (unrecognized",
            "                    (u_word",
            "                      (word",
            "                        WORD:'maximum-prefix'))",
            "                    (list",
            "                      (u_list",
            "                        BRACE_LEFT:'{'",
            "                        NEWLINE:'\\n'",
            "                        (unrecognized",
            "                          (u_word",
            "                            (word",
            "                              VALUE:'value'))",
            "                          (u_word",
            "                            (word",
            "                              WORD:'23456'))",
            "                          NEWLINE:'\\n')",
            "                        BRACE_RIGHT:'}'))",
            "                    NEWLINE:'\\n')",
            "                  (nrbnnaf_common",
            "                    (nrbnnafc_route_map",
            "                      ROUTE_MAP:'route-map'",
            "                      BRACE_LEFT:'{'",
            "                      NEWLINE:'\\n'",
            "                      (nrbnnafcr_out",
            "                        OUT:'out'",
            "                        name = (word",
            "                          WORD:'/Common/MY_IPV4_OUT')",
            "                        NEWLINE:'\\n')",
            "                      BRACE_RIGHT:'}'",
            "                      NEWLINE:'\\n'))",
            "                  BRACE_RIGHT:'}'",
            "                  NEWLINE:'\\n')",
            "                (nrbnnaf_ipv6",
            "                  IPV6:'ipv6'",
            "                  BRACE_LEFT:'{'",
            "                  NEWLINE:'\\n'",
            "                  (nrbnnaf_common",
            "                    (nrbnnafc_activate",
            "                      ACTIVATE:'activate'",
            "                      DISABLED:'disabled'",
            "                      NEWLINE:'\\n'))",
            "                  BRACE_RIGHT:'}'",
            "                  NEWLINE:'\\n')",
            "                BRACE_RIGHT:'}'",
            "                NEWLINE:'\\n')",
            "              (nrbnn_description",
            "                DESCRIPTION:'description'",
            "                description = (word",
            "                  DOUBLE_QUOTED_STRING:'\"Cool IPv4 BGP neighbor description\"')",
            "                NEWLINE:'\\n')",
            "              (nrbnn_ebgp_multihop",
            "                EBGP_MULTIHOP:'ebgp-multihop'",
            "                count = (word",
            "                  WORD:'3')",
            "                NEWLINE:'\\n')",
            "              (unrecognized",
            "                (u_word",
            "                  (word",
            "                    WORD:'fall-over'))",
            "                (u_word",
            "                  (word",
            "                    WORD:'bfd'))",
            "                NEWLINE:'\\n')",
            "              (nrbnn_remote_as",
            "                REMOTE_AS:'remote-as'",
            "                as = (word",
            "                  WORD:'456')",
            "                NEWLINE:'\\n')",
            "              (nrbnn_update_source",
            "                UPDATE_SOURCE:'update-source'",
            "                name = (word",
            "                  WORD:'SOME_VLAN')",
            "                NEWLINE:'\\n')",
            "              BRACE_RIGHT:'}'",
            "              NEWLINE:'\\n')",
            "            BRACE_RIGHT:'}'",
            "            NEWLINE:'\\n')",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                PROFILE:'profile'))",
            "            (u_word",
            "              (word",
            "                WORD:'/Common/bgp'))",
            "            NEWLINE:'\\n')",
            "          (unrecognized",
            "            (u_word",
            "              (word",
            "                ROUTE_DOMAIN:'route-domain'))",
            "            (u_word",
            "              (word",
            "                WORD:'/Common/0'))",
            "            NEWLINE:'\\n')",
            "          (nrb_router_id",
            "            ROUTER_ID:'router-id'",
            "            id = (word",
            "              WORD:'192.0.2.1')",
            "            NEWLINE:'\\n')",
            "          (nrb_router_id",
            "            ROUTER_ID:'router-id'",
            "            id = (word",
            "              WORD:'dead:beef::1234')",
            "            NEWLINE:'\\n')",
            "          (nrb_router_id",
            "            ROUTER_ID:'router-id'",
            "            id = (word",
            "              WORD:'invalidText')",
            "            NEWLINE:'\\n')",
            "          BRACE_RIGHT:'}'",
            "          NEWLINE:'\\n\\n\\n'))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/f5_bigip_structured_net_routing_prefix_list" : {
          "sentences" : [
            "(f5_bigip_structured_configuration",
            "  (statement",
            "    (s_sys",
            "      SYS:'sys'",
            "      (sys_global_settings",
            "        GLOBAL_SETTINGS:'global-settings'",
            "        BRACE_LEFT:'{'",
            "        NEWLINE:'\\n'",
            "        (sgs_hostname",
            "          HOSTNAME:'hostname'",
            "          hostname = (word",
            "            WORD:'f5_bigip_structured_net_routing_prefix_list')",
            "          NEWLINE:'\\n')",
            "        BRACE_RIGHT:'}'",
            "        NEWLINE:'\\n\\n')))",
            "  (statement",
            "    (s_net",
            "      NET:'net'",
            "      (net_routing",
            "        ROUTING:'routing'",
            "        (nr_prefix_list",
            "          PREFIX_LIST:'prefix-list'",
            "          name = (word",
            "            WORD:'/Common/MY_IPV4_PREFIX_LIST')",
            "          BRACE_LEFT:'{'",
            "          NEWLINE:'\\n'",
            "          (nrp_entries",
            "            ENTRIES:'entries'",
            "            BRACE_LEFT:'{'",
            "            NEWLINE:'\\n'",
            "            (nrpe_entry",
            "              num = (word",
            "                WORD:'10')",
            "              BRACE_LEFT:'{'",
            "              NEWLINE:'\\n'",
            "              (nrpee_action",
            "                ACTION:'action'",
            "                action = (prefix_list_action",
            "                  DENY:'deny')",
            "                NEWLINE:'\\n')",
            "              (nrpee_prefix",
            "                PREFIX:'prefix'",
            "                prefix = (word",
            "                  WORD:'192.0.2.0/31')",
            "                NEWLINE:'\\n')",
            "              (nrpee_prefix_len_range",
            "                PREFIX_LEN_RANGE:'prefix-len-range'",
            "                range = (word",
            "                  WORD:'0:32')",
            "                NEWLINE:'\\n')",
            "              BRACE_RIGHT:'}'",
            "              NEWLINE:'\\n')",
            "            (nrpe_entry",
            "              num = (word",
            "                WORD:'20')",
            "              BRACE_LEFT:'{'",
            "              NEWLINE:'\\n'",
            "              (nrpee_action",
            "                ACTION:'action'",
            "                action = (prefix_list_action",
            "                  PERMIT:'permit')",
            "                NEWLINE:'\\n')",
            "              (nrpee_prefix",
            "                PREFIX:'prefix'",
            "                prefix = (word",
            "                  WORD:'192.0.2.4/30')",
            "                NEWLINE:'\\n')",
            "              (nrpee_prefix_len_range",
            "                PREFIX_LEN_RANGE:'prefix-len-range'",
            "                range = (word",
            "                  WORD:'1:31')",
            "                NEWLINE:'\\n')",
            "              BRACE_RIGHT:'}'",
            "              NEWLINE:'\\n')",
            "            BRACE_RIGHT:'}'",
            "            NEWLINE:'\\n')",
            "          (nrp_route_domain",
            "            ROUTE_DOMAIN:'route-domain'",
            "            name = (word",
            "              WORD:'/Common/0')",
            "            NEWLINE:'\\n')",
            "          BRACE_RIGHT:'}'",
            "          NEWLINE:'\\n'))))",
            "  (statement",
            "    (s_net",
            "      NET:'net'",
            "      (net_routing",
            "        ROUTING:'routing'",
            "        (nr_prefix_list",
            "          PREFIX_LIST:'prefix-list'",
            "          name = (word",
            "            WORD:'/Common/MY_IPV6_PREFIX_LIST')",
            "          BRACE_LEFT:'{'",
            "          NEWLINE:'\\n'",
            "          (nrp_entries",
            "            ENTRIES:'entries'",
            "            BRACE_LEFT:'{'",
            "            NEWLINE:'\\n'",
            "            (nrpe_entry",
            "              num = (word",
            "                WORD:'30')",
            "              BRACE_LEFT:'{'",
            "              NEWLINE:'\\n'",
            "              (nrpee_action",
            "                ACTION:'action'",
            "                action = (prefix_list_action",
            "                  DENY:'deny')",
            "                NEWLINE:'\\n')",
            "              (nrpee_prefix",
            "                PREFIX:'prefix'",
            "                prefix = (word",
            "                  WORD:'dead:beef::/64')",
            "                NEWLINE:'\\n')",
            "              (nrpee_prefix_len_range",
            "                PREFIX_LEN_RANGE:'prefix-len-range'",
            "                range = (word",
            "                  WORD:'0:128')",
            "                NEWLINE:'\\n')",
            "              BRACE_RIGHT:'}'",
            "              NEWLINE:'\\n')",
            "            (nrpe_entry",
            "              num = (word",
            "                WORD:'40')",
            "              BRACE_LEFT:'{'",
            "              NEWLINE:'\\n'",
            "              (nrpee_action",
            "                ACTION:'action'",
            "                action = (prefix_list_action",
            "                  PERMIT:'permit')",
            "                NEWLINE:'\\n')",
            "              (nrpee_prefix",
            "                PREFIX:'prefix'",
            "                prefix = (word",
            "                  WORD:'deaf:beef:1::/64')",
            "                NEWLINE:'\\n')",
            "              (nrpee_prefix_len_range",
            "                PREFIX_LEN_RANGE:'prefix-len-range'",
            "                range = (word",
            "                  WORD:'2:127')",
            "                NEWLINE:'\\n')",
            "              BRACE_RIGHT:'}'",
            "              NEWLINE:'\\n')",
            "            BRACE_RIGHT:'}'",
            "            NEWLINE:'\\n')",
            "          (nrp_route_domain",
            "            ROUTE_DOMAIN:'route-domain'",
            "            name = (word",
            "              WORD:'/Common/0')",
            "            NEWLINE:'\\n')",
            "          BRACE_RIGHT:'}'",
            "          NEWLINE:'\\n\\n\\n'))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/f5_bigip_structured_net_routing_route_map" : {
          "sentences" : [
            "(f5_bigip_structured_configuration",
            "  (statement",
            "    (s_sys",
            "      SYS:'sys'",
            "      (sys_global_settings",
            "        GLOBAL_SETTINGS:'global-settings'",
            "        BRACE_LEFT:'{'",
            "        NEWLINE:'\\n'",
            "        (sgs_hostname",
            "          HOSTNAME:'hostname'",
            "          hostname = (word",
            "            WORD:'f5_bigip_structured_net_routing_route_map')",
            "          NEWLINE:'\\n')",
            "        BRACE_RIGHT:'}'",
            "        NEWLINE:'\\n\\n')))",
            "  (statement",
            "    (s_net",
            "      NET:'net'",
            "      (net_routing",
            "        ROUTING:'routing'",
            "        (nr_route_map",
            "          ROUTE_MAP:'route-map'",
            "          name = (word",
            "            WORD:'/Common/MY_ROUTE_MAP')",
            "          BRACE_LEFT:'{'",
            "          NEWLINE:'\\n'",
            "          (nrr_entries",
            "            ENTRIES:'entries'",
            "            BRACE_LEFT:'{'",
            "            NEWLINE:'\\n'",
            "            (nrre_entry",
            "              num = (word",
            "                WORD:'10')",
            "              BRACE_LEFT:'{'",
            "              NEWLINE:'\\n'",
            "              (nrree_action",
            "                ACTION:'action'",
            "                action = (route_map_action",
            "                  DENY:'deny')",
            "                NEWLINE:'\\n')",
            "              (nrree_match",
            "                MATCH:'match'",
            "                BRACE_LEFT:'{'",
            "                NEWLINE:'\\n'",
            "                (nreem_ipv4",
            "                  IPV4:'ipv4'",
            "                  BRACE_LEFT:'{'",
            "                  NEWLINE:'\\n'",
            "                  (nreem4_address",
            "                    ADDRESS:'address'",
            "                    BRACE_LEFT:'{'",
            "                    NEWLINE:'\\n'",
            "                    (nreem4a_prefix_list",
            "                      PREFIX_LIST:'prefix-list'",
            "                      name = (word",
            "                        WORD:'/Common/MY_PREFIX_LIST')",
            "                      NEWLINE:'\\n')",
            "                    BRACE_RIGHT:'}'",
            "                    NEWLINE:'\\n')",
            "                  BRACE_RIGHT:'}'",
            "                  NEWLINE:'\\n')",
            "                BRACE_RIGHT:'}'",
            "                NEWLINE:'\\n')",
            "              (nrree_set",
            "                SET:'set'",
            "                BRACE_LEFT:'{'",
            "                NEWLINE:'\\n'",
            "                (nrrees_community",
            "                  COMMUNITY:'community'",
            "                  BRACE_LEFT:'{'",
            "                  NEWLINE:'\\n'",
            "                  (nreesc_value",
            "                    VALUE:'value'",
            "                    BRACE_LEFT:'{'",
            "                    (standard_community",
            "                      (word",
            "                        WORD:'1:2'))",
            "                    (standard_community",
            "                      (word",
            "                        WORD:'33:44'))",
            "                    BRACE_RIGHT:'}'",
            "                    NEWLINE:'\\n')",
            "                  BRACE_RIGHT:'}'",
            "                  NEWLINE:'\\n')",
            "                BRACE_RIGHT:'}'",
            "                NEWLINE:'\\n')",
            "              BRACE_RIGHT:'}'",
            "              NEWLINE:'\\n')",
            "            (nrre_entry",
            "              num = (word",
            "                WORD:'20')",
            "              BRACE_LEFT:'{'",
            "              NEWLINE:'\\n'",
            "              (nrree_action",
            "                ACTION:'action'",
            "                action = (route_map_action",
            "                  PERMIT:'permit')",
            "                NEWLINE:'\\n')",
            "              (nrree_match",
            "                MATCH:'match'",
            "                BRACE_LEFT:'{'",
            "                NEWLINE:'\\n'",
            "                (nreem_ipv4",
            "                  IPV4:'ipv4'",
            "                  BRACE_LEFT:'{'",
            "                  NEWLINE:'\\n'",
            "                  (nreem4_address",
            "                    ADDRESS:'address'",
            "                    BRACE_LEFT:'{'",
            "                    NEWLINE:'\\n'",
            "                    (nreem4a_prefix_list",
            "                      PREFIX_LIST:'prefix-list'",
            "                      name = (word",
            "                        WORD:'/Common/MY_PREFIX_LIST2')",
            "                      NEWLINE:'\\n')",
            "                    BRACE_RIGHT:'}'",
            "                    NEWLINE:'\\n')",
            "                  BRACE_RIGHT:'}'",
            "                  NEWLINE:'\\n')",
            "                BRACE_RIGHT:'}'",
            "                NEWLINE:'\\n')",
            "              (nrree_set",
            "                SET:'set'",
            "                BRACE_LEFT:'{'",
            "                NEWLINE:'\\n'",
            "                (nrrees_community",
            "                  COMMUNITY:'community'",
            "                  BRACE_LEFT:'{'",
            "                  NEWLINE:'\\n'",
            "                  (nreesc_value",
            "                    VALUE:'value'",
            "                    BRACE_LEFT:'{'",
            "                    (standard_community",
            "                      (word",
            "                        WORD:'55:66'))",
            "                    BRACE_RIGHT:'}'",
            "                    NEWLINE:'\\n')",
            "                  BRACE_RIGHT:'}'",
            "                  NEWLINE:'\\n')",
            "                BRACE_RIGHT:'}'",
            "                NEWLINE:'\\n')",
            "              BRACE_RIGHT:'}'",
            "              NEWLINE:'\\n')",
            "            (nrre_entry",
            "              num = (word",
            "                WORD:'999')",
            "              BRACE_LEFT:'{'",
            "              NEWLINE:'\\n'",
            "              (nrree_action",
            "                ACTION:'action'",
            "                action = (route_map_action",
            "                  DENY:'deny')",
            "                NEWLINE:'\\n')",
            "              BRACE_RIGHT:'}'",
            "              NEWLINE:'\\n')",
            "            BRACE_RIGHT:'}'",
            "            NEWLINE:'\\n')",
            "          (nrr_route_domain",
            "            ROUTE_DOMAIN:'route-domain'",
            "            name = (word",
            "              WORD:'/Common/0')",
            "            NEWLINE:'\\n')",
            "          BRACE_RIGHT:'}'",
            "          NEWLINE:'\\n\\n\\n'))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/f5_bigip_structured_sys" : {
          "sentences" : [
            "(f5_bigip_structured_configuration",
            "  (statement",
            "    (s_sys",
            "      SYS:'sys'",
            "      (unrecognized",
            "        (u_word",
            "          (word",
            "            WORD:'dns'))",
            "        (list",
            "          (u_list",
            "            BRACE_LEFT:'{'",
            "            NEWLINE:'\\n'",
            "            (unrecognized",
            "              (u_word",
            "                (word",
            "                  WORD:'name-servers'))",
            "              (list",
            "                (word_list",
            "                  BRACE_LEFT:'{'",
            "                  (word",
            "                    WORD:'1.2.3.4')",
            "                  (word",
            "                    WORD:'5.6.7.8')",
            "                  BRACE_RIGHT:'}'))",
            "              NEWLINE:'\\n')",
            "            (unrecognized",
            "              (u_word",
            "                (word",
            "                  WORD:'search'))",
            "              (list",
            "                (word_list",
            "                  BRACE_LEFT:'{'",
            "                  (word",
            "                    WORD:'example.local')",
            "                  (word",
            "                    WORD:'localhost')",
            "                  BRACE_RIGHT:'}'))",
            "              NEWLINE:'\\n')",
            "            BRACE_RIGHT:'}'))",
            "        NEWLINE:'\\n')))",
            "  (statement",
            "    (s_sys",
            "      SYS:'sys'",
            "      (unrecognized",
            "        (u_word",
            "          (word",
            "            WORD:'feature-module'))",
            "        (u_word",
            "          (word",
            "            WORD:'cgnat'))",
            "        (list",
            "          (u_list",
            "            BRACE_LEFT:'{'",
            "            NEWLINE:'\\n'",
            "            (unrecognized",
            "              (u_word",
            "                (word",
            "                  DISABLED:'disabled'))",
            "              NEWLINE:'\\n')",
            "            BRACE_RIGHT:'}'))",
            "        NEWLINE:'\\n')))",
            "  (statement",
            "    (s_sys",
            "      SYS:'sys'",
            "      (unrecognized",
            "        (u_word",
            "          (word",
            "            WORD:'folder'))",
            "        (u_word",
            "          (word",
            "            WORD:'/'))",
            "        (list",
            "          (u_list",
            "            BRACE_LEFT:'{'",
            "            NEWLINE:'\\n'",
            "            (unrecognized",
            "              (u_word",
            "                (word",
            "                  WORD:'device-group'))",
            "              (u_word",
            "                (word",
            "                  WORD:'none'))",
            "              NEWLINE:'\\n')",
            "            (unrecognized",
            "              (u_word",
            "                (word",
            "                  WORD:'hidden'))",
            "              (u_word",
            "                (word",
            "                  WORD:'false'))",
            "              NEWLINE:'\\n')",
            "            (unrecognized",
            "              (u_word",
            "                (word",
            "                  WORD:'inherited-devicegroup'))",
            "              (u_word",
            "                (word",
            "                  WORD:'false'))",
            "              NEWLINE:'\\n')",
            "            (unrecognized",
            "              (u_word",
            "                (word",
            "                  WORD:'inherited-traffic-group'))",
            "              (u_word",
            "                (word",
            "                  WORD:'false'))",
            "              NEWLINE:'\\n')",
            "            (unrecognized",
            "              (u_word",
            "                (word",
            "                  TRAFFIC_GROUP:'traffic-group'))",
            "              (u_word",
            "                (word",
            "                  WORD:'/Common/traffic-group-1'))",
            "              NEWLINE:'\\n')",
            "            BRACE_RIGHT:'}'))",
            "        NEWLINE:'\\n')))",
            "  (statement",
            "    (s_sys",
            "      SYS:'sys'",
            "      (unrecognized",
            "        (u_word",
            "          (word",
            "            WORD:'folder'))",
            "        (u_word",
            "          (word",
            "            WORD:'/Common'))",
            "        (list",
            "          (u_list",
            "            BRACE_LEFT:'{'",
            "            NEWLINE:'\\n'",
            "            (unrecognized",
            "              (u_word",
            "                (word",
            "                  WORD:'device-group'))",
            "              (u_word",
            "                (word",
            "                  WORD:'none'))",
            "              NEWLINE:'\\n')",
            "            (unrecognized",
            "              (u_word",
            "                (word",
            "                  WORD:'hidden'))",
            "              (u_word",
            "                (word",
            "                  WORD:'false'))",
            "              NEWLINE:'\\n')",
            "            (unrecognized",
            "              (u_word",
            "                (word",
            "                  WORD:'inherited-devicegroup'))",
            "              (u_word",
            "                (word",
            "                  WORD:'true'))",
            "              NEWLINE:'\\n')",
            "            (unrecognized",
            "              (u_word",
            "                (word",
            "                  WORD:'inherited-traffic-group'))",
            "              (u_word",
            "                (word",
            "                  WORD:'true'))",
            "              NEWLINE:'\\n')",
            "            (unrecognized",
            "              (u_word",
            "                (word",
            "                  TRAFFIC_GROUP:'traffic-group'))",
            "              (u_word",
            "                (word",
            "                  WORD:'/Common/traffic-group-1'))",
            "              NEWLINE:'\\n')",
            "            BRACE_RIGHT:'}'))",
            "        NEWLINE:'\\n')))",
            "  (statement",
            "    (s_sys",
            "      SYS:'sys'",
            "      (unrecognized",
            "        (u_word",
            "          (word",
            "            WORD:'folder'))",
            "        (u_word",
            "          (word",
            "            WORD:'/Common/Drafts'))",
            "        (list",
            "          (u_list",
            "            BRACE_LEFT:'{'",
            "            NEWLINE:'\\n'",
            "            (unrecognized",
            "              (u_word",
            "                (word",
            "                  WORD:'device-group'))",
            "              (u_word",
            "                (word",
            "                  WORD:'none'))",
            "              NEWLINE:'\\n')",
            "            (unrecognized",
            "              (u_word",
            "                (word",
            "                  WORD:'hidden'))",
            "              (u_word",
            "                (word",
            "                  WORD:'false'))",
            "              NEWLINE:'\\n')",
            "            (unrecognized",
            "              (u_word",
            "                (word",
            "                  WORD:'inherited-devicegroup'))",
            "              (u_word",
            "                (word",
            "                  WORD:'true'))",
            "              NEWLINE:'\\n')",
            "            (unrecognized",
            "              (u_word",
            "                (word",
            "                  WORD:'inherited-traffic-group'))",
            "              (u_word",
            "                (word",
            "                  WORD:'true'))",
            "              NEWLINE:'\\n')",
            "            (unrecognized",
            "              (u_word",
            "                (word",
            "                  TRAFFIC_GROUP:'traffic-group'))",
            "              (u_word",
            "                (word",
            "                  WORD:'/Common/traffic-group-1'))",
            "              NEWLINE:'\\n')",
            "            BRACE_RIGHT:'}'))",
            "        NEWLINE:'\\n')))",
            "  (statement",
            "    (s_sys",
            "      SYS:'sys'",
            "      (sys_global_settings",
            "        GLOBAL_SETTINGS:'global-settings'",
            "        BRACE_LEFT:'{'",
            "        NEWLINE:'\\n'",
            "        (unrecognized",
            "          (u_word",
            "            (word",
            "              WORD:'gui-security-banner-text'))",
            "          (u_word",
            "            (word",
            "              DOUBLE_QUOTED_STRING:'\"hello\\nworld\"'))",
            "          NEWLINE:'\\n')",
            "        (unrecognized",
            "          (u_word",
            "            (word",
            "              WORD:'gui-setup'))",
            "          (u_word",
            "            (word",
            "              DISABLED:'disabled'))",
            "          NEWLINE:'\\n')",
            "        (sgs_hostname",
            "          HOSTNAME:'hostname'",
            "          hostname = (word",
            "            WORD:'f5_bigip_structured_sys')",
            "          NEWLINE:'\\n')",
            "        BRACE_RIGHT:'}'",
            "        NEWLINE:'\\n')))",
            "  (statement",
            "    (s_sys",
            "      SYS:'sys'",
            "      (unrecognized",
            "        (u_word",
            "          (word",
            "            WORD:'httpd'))",
            "        (list",
            "          (u_list",
            "            BRACE_LEFT:'{'",
            "            NEWLINE:'\\n'",
            "            (unrecognized",
            "              (u_word",
            "                (word",
            "                  WORD:'allow'))",
            "              (list",
            "                (word_list",
            "                  BRACE_LEFT:'{'",
            "                  (word",
            "                    WORD:'All')",
            "                  (word",
            "                    WORD:'192.0.2.0/255.255.255.0')",
            "                  BRACE_RIGHT:'}'))",
            "              NEWLINE:'\\n')",
            "            BRACE_RIGHT:'}'))",
            "        NEWLINE:'\\n')))",
            "  (statement",
            "    (s_sys",
            "      SYS:'sys'",
            "      (unrecognized",
            "        (u_word",
            "          (word",
            "            WORD:'management-dhcp'))",
            "        (u_word",
            "          (word",
            "            WORD:'/Common/sys-mgmt-dhcp-config'))",
            "        (list",
            "          (u_list",
            "            BRACE_LEFT:'{'",
            "            NEWLINE:'\\n'",
            "            (unrecognized",
            "              (u_word",
            "                (word",
            "                  WORD:'request-options'))",
            "              (list",
            "                (word_list",
            "                  BRACE_LEFT:'{'",
            "                  (word",
            "                    WORD:'subnet-mask')",
            "                  (word",
            "                    WORD:'broadcast-address')",
            "                  (word",
            "                    WORD:'routers')",
            "                  (word",
            "                    WORD:'domain-name')",
            "                  (word",
            "                    WORD:'domain-name-servers')",
            "                  (word",
            "                    WORD:'host-name')",
            "                  (word",
            "                    WORD:'ntp-servers')",
            "                  (word",
            "                    WORD:'interface-mtu')",
            "                  BRACE_RIGHT:'}'))",
            "              NEWLINE:'\\n')",
            "            BRACE_RIGHT:'}'))",
            "        NEWLINE:'\\n')))",
            "  (statement",
            "    (s_sys",
            "      SYS:'sys'",
            "      (unrecognized",
            "        (u_word",
            "          (word",
            "            WORD:'management-ip'))",
            "        (u_word",
            "          (word",
            "            WORD:'192.0.2.1/24'))",
            "        (list",
            "          (empty_list",
            "            BRACE_LEFT:'{'",
            "            BRACE_RIGHT:'}'))",
            "        NEWLINE:'\\n')))",
            "  (statement",
            "    (s_sys",
            "      SYS:'sys'",
            "      (unrecognized",
            "        (u_word",
            "          (word",
            "            WORD:'management-route'))",
            "        (u_word",
            "          (word",
            "            WORD:'/Common/default'))",
            "        (list",
            "          (u_list",
            "            BRACE_LEFT:'{'",
            "            NEWLINE:'\\n'",
            "            (unrecognized",
            "              (u_word",
            "                (word",
            "                  WORD:'gateway'))",
            "              (u_word",
            "                (word",
            "                  WORD:'192.0.2.2'))",
            "              NEWLINE:'\\n')",
            "            (unrecognized",
            "              (u_word",
            "                (word",
            "                  NETWORK:'network'))",
            "              (u_word",
            "                (word",
            "                  WORD:'default'))",
            "              NEWLINE:'\\n')",
            "            BRACE_RIGHT:'}'))",
            "        NEWLINE:'\\n')))",
            "  (statement",
            "    (s_sys",
            "      SYS:'sys'",
            "      (sys_ntp",
            "        NTP:'ntp'",
            "        BRACE_LEFT:'{'",
            "        NEWLINE:'\\n'",
            "        (ntp_servers",
            "          SERVERS:'servers'",
            "          BRACE_LEFT:'{'",
            "          (word",
            "            WORD:'192.0.2.3')",
            "          (word",
            "            WORD:'my.example.com')",
            "          BRACE_RIGHT:'}'",
            "          NEWLINE:'\\n')",
            "        (unrecognized",
            "          (u_word",
            "            (word",
            "              WORD:'timezone'))",
            "          (u_word",
            "            (word",
            "              WORD:'America/Seattle'))",
            "          NEWLINE:'\\n')",
            "        BRACE_RIGHT:'}'",
            "        NEWLINE:'\\n')))",
            "  (statement",
            "    (s_sys",
            "      SYS:'sys'",
            "      (unrecognized",
            "        (u_word",
            "          (word",
            "            WORD:'provision'))",
            "        (u_word",
            "          (word",
            "            LTM:'ltm'))",
            "        (list",
            "          (u_list",
            "            BRACE_LEFT:'{'",
            "            NEWLINE:'\\n'",
            "            (unrecognized",
            "              (u_word",
            "                (word",
            "                  WORD:'level'))",
            "              (u_word",
            "                (word",
            "                  WORD:'dedicated'))",
            "              NEWLINE:'\\n')",
            "            BRACE_RIGHT:'}'))",
            "        NEWLINE:'\\n')))",
            "  (statement",
            "    (s_sys",
            "      SYS:'sys'",
            "      (unrecognized",
            "        (u_word",
            "          (word",
            "            WORD:'snmp'))",
            "        (list",
            "          (u_list",
            "            BRACE_LEFT:'{'",
            "            NEWLINE:'\\n'",
            "            (unrecognized",
            "              (u_word",
            "                (word",
            "                  WORD:'agent-addresses'))",
            "              (list",
            "                (word_list",
            "                  BRACE_LEFT:'{'",
            "                  (word",
            "                    WORD:'tcp6:123')",
            "                  (word",
            "                    WORD:'udp6:456')",
            "                  BRACE_RIGHT:'}'))",
            "              NEWLINE:'\\n')",
            "            (unrecognized",
            "              (u_word",
            "                (word",
            "                  WORD:'allowed-addresses'))",
            "              (list",
            "                (word_list",
            "                  BRACE_LEFT:'{'",
            "                  (word",
            "                    WORD:'192.0.2.5')",
            "                  (word",
            "                    WORD:'192.0.2.6')",
            "                  BRACE_RIGHT:'}'))",
            "              NEWLINE:'\\n')",
            "            (unrecognized",
            "              (u_word",
            "                (word",
            "                  WORD:'communities'))",
            "              (list",
            "                (u_list",
            "                  BRACE_LEFT:'{'",
            "                  NEWLINE:'\\n'",
            "                  (unrecognized",
            "                    (u_word",
            "                      (word",
            "                        WORD:'/Common/helloworld'))",
            "                    (list",
            "                      (u_list",
            "                        BRACE_LEFT:'{'",
            "                        NEWLINE:'\\n'",
            "                        (unrecognized",
            "                          (u_word",
            "                            (word",
            "                              WORD:'community-name'))",
            "                          (u_word",
            "                            (word",
            "                              WORD:'goodbyeworld'))",
            "                          NEWLINE:'\\n')",
            "                        BRACE_RIGHT:'}'))",
            "                    NEWLINE:'\\n')",
            "                  BRACE_RIGHT:'}'))",
            "              NEWLINE:'\\n')",
            "            (unrecognized",
            "              (u_word",
            "                (word",
            "                  WORD:'disk-monitors'))",
            "              (list",
            "                (u_list",
            "                  BRACE_LEFT:'{'",
            "                  NEWLINE:'\\n'",
            "                  (unrecognized",
            "                    (u_word",
            "                      (word",
            "                        WORD:'/Common/root'))",
            "                    (list",
            "                      (u_list",
            "                        BRACE_LEFT:'{'",
            "                        NEWLINE:'\\n'",
            "                        (unrecognized",
            "                          (u_word",
            "                            (word",
            "                              WORD:'minspace'))",
            "                          (u_word",
            "                            (word",
            "                              WORD:'1234'))",
            "                          NEWLINE:'\\n')",
            "                        (unrecognized",
            "                          (u_word",
            "                            (word",
            "                              WORD:'path'))",
            "                          (u_word",
            "                            (word",
            "                              WORD:'/'))",
            "                          NEWLINE:'\\n')",
            "                        BRACE_RIGHT:'}'))",
            "                    NEWLINE:'\\n')",
            "                  (unrecognized",
            "                    (u_word",
            "                      (word",
            "                        WORD:'/Common/var'))",
            "                    (list",
            "                      (u_list",
            "                        BRACE_LEFT:'{'",
            "                        NEWLINE:'\\n'",
            "                        (unrecognized",
            "                          (u_word",
            "                            (word",
            "                              WORD:'minspace'))",
            "                          (u_word",
            "                            (word",
            "                              WORD:'1234'))",
            "                          NEWLINE:'\\n')",
            "                        (unrecognized",
            "                          (u_word",
            "                            (word",
            "                              WORD:'path'))",
            "                          (u_word",
            "                            (word",
            "                              WORD:'/var'))",
            "                          NEWLINE:'\\n')",
            "                        BRACE_RIGHT:'}'))",
            "                    NEWLINE:'\\n')",
            "                  BRACE_RIGHT:'}'))",
            "              NEWLINE:'\\n')",
            "            (unrecognized",
            "              (u_word",
            "                (word",
            "                  WORD:'process-monitors'))",
            "              (list",
            "                (u_list",
            "                  BRACE_LEFT:'{'",
            "                  NEWLINE:'\\n'",
            "                  (unrecognized",
            "                    (u_word",
            "                      (word",
            "                        WORD:'/Common/bigd'))",
            "                    (list",
            "                      (u_list",
            "                        BRACE_LEFT:'{'",
            "                        NEWLINE:'\\n'",
            "                        (unrecognized",
            "                          (u_word",
            "                            (word",
            "                              WORD:'process'))",
            "                          (u_word",
            "                            (word",
            "                              WORD:'bigd'))",
            "                          NEWLINE:'\\n')",
            "                        BRACE_RIGHT:'}'))",
            "                    NEWLINE:'\\n')",
            "                  (unrecognized",
            "                    (u_word",
            "                      (word",
            "                        WORD:'/Common/chmand'))",
            "                    (list",
            "                      (u_list",
            "                        BRACE_LEFT:'{'",
            "                        NEWLINE:'\\n'",
            "                        (unrecognized",
            "                          (u_word",
            "                            (word",
            "                              WORD:'process'))",
            "                          (u_word",
            "                            (word",
            "                              WORD:'chmand'))",
            "                          NEWLINE:'\\n')",
            "                        BRACE_RIGHT:'}'))",
            "                    NEWLINE:'\\n')",
            "                  (unrecognized",
            "                    (u_word",
            "                      (word",
            "                        WORD:'/Common/httpd'))",
            "                    (list",
            "                      (u_list",
            "                        BRACE_LEFT:'{'",
            "                        NEWLINE:'\\n'",
            "                        (unrecognized",
            "                          (u_word",
            "                            (word",
            "                              WORD:'max-processes'))",
            "                          (u_word",
            "                            (word",
            "                              WORD:'infinity'))",
            "                          NEWLINE:'\\n')",
            "                        (unrecognized",
            "                          (u_word",
            "                            (word",
            "                              WORD:'process'))",
            "                          (u_word",
            "                            (word",
            "                              WORD:'httpd'))",
            "                          NEWLINE:'\\n')",
            "                        BRACE_RIGHT:'}'))",
            "                    NEWLINE:'\\n')",
            "                  (unrecognized",
            "                    (u_word",
            "                      (word",
            "                        WORD:'/Common/mcpd'))",
            "                    (list",
            "                      (u_list",
            "                        BRACE_LEFT:'{'",
            "                        NEWLINE:'\\n'",
            "                        (unrecognized",
            "                          (u_word",
            "                            (word",
            "                              WORD:'process'))",
            "                          (u_word",
            "                            (word",
            "                              WORD:'mcpd'))",
            "                          NEWLINE:'\\n')",
            "                        BRACE_RIGHT:'}'))",
            "                    NEWLINE:'\\n')",
            "                  (unrecognized",
            "                    (u_word",
            "                      (word",
            "                        WORD:'/Common/sod'))",
            "                    (list",
            "                      (u_list",
            "                        BRACE_LEFT:'{'",
            "                        NEWLINE:'\\n'",
            "                        (unrecognized",
            "                          (u_word",
            "                            (word",
            "                              WORD:'process'))",
            "                          (u_word",
            "                            (word",
            "                              WORD:'sod'))",
            "                          NEWLINE:'\\n')",
            "                        BRACE_RIGHT:'}'))",
            "                    NEWLINE:'\\n')",
            "                  (unrecognized",
            "                    (u_word",
            "                      (word",
            "                        WORD:'/Common/tmm'))",
            "                    (list",
            "                      (u_list",
            "                        BRACE_LEFT:'{'",
            "                        NEWLINE:'\\n'",
            "                        (unrecognized",
            "                          (u_word",
            "                            (word",
            "                              WORD:'max-processes'))",
            "                          (u_word",
            "                            (word",
            "                              WORD:'infinity'))",
            "                          NEWLINE:'\\n')",
            "                        (unrecognized",
            "                          (u_word",
            "                            (word",
            "                              WORD:'process'))",
            "                          (u_word",
            "                            (word",
            "                              WORD:'tmm'))",
            "                          NEWLINE:'\\n')",
            "                        BRACE_RIGHT:'}'))",
            "                    NEWLINE:'\\n')",
            "                  BRACE_RIGHT:'}'))",
            "              NEWLINE:'\\n')",
            "            (unrecognized",
            "              (u_word",
            "                (word",
            "                  WORD:'sys-contact'))",
            "              (u_word",
            "                (word",
            "                  WORD:'admin@example.com'))",
            "              NEWLINE:'\\n')",
            "            (unrecognized",
            "              (u_word",
            "                (word",
            "                  WORD:'sys-location'))",
            "              (u_word",
            "                (word",
            "                  DOUBLE_QUOTED_STRING:'\"123 Fake St, Fakeville, OR 12345\"'))",
            "              NEWLINE:'\\n')",
            "            BRACE_RIGHT:'}'))",
            "        NEWLINE:'\\n')))",
            "  (statement",
            "    (s_sys",
            "      SYS:'sys'",
            "      (unrecognized",
            "        (u_word",
            "          (word",
            "            WORD:'dynad'))",
            "        (u_word",
            "          (word",
            "            WORD:'key'))",
            "        (list",
            "          (u_list",
            "            BRACE_LEFT:'{'",
            "            NEWLINE:'\\n'",
            "            (unrecognized",
            "              (u_word",
            "                (word",
            "                  WORD:'key'))",
            "              (u_word",
            "                (word",
            "                  WORD:'myfavoritekey'))",
            "              NEWLINE:'\\n')",
            "            BRACE_RIGHT:'}'))",
            "        NEWLINE:'\\n')))",
            "  (statement",
            "    (s_sys",
            "      SYS:'sys'",
            "      (unrecognized",
            "        (u_word",
            "          (word",
            "            WORD:'dynad'))",
            "        (u_word",
            "          (word",
            "            WORD:'settings'))",
            "        (list",
            "          (u_list",
            "            BRACE_LEFT:'{'",
            "            NEWLINE:'\\n'",
            "            (unrecognized",
            "              (u_word",
            "                (word",
            "                  WORD:'development-mode'))",
            "              (u_word",
            "                (word",
            "                  WORD:'false'))",
            "              NEWLINE:'\\n')",
            "            BRACE_RIGHT:'}'))",
            "        NEWLINE:'\\n')))",
            "  (statement",
            "    (s_sys",
            "      SYS:'sys'",
            "      (unrecognized",
            "        (u_word",
            "          (word",
            "            WORD:'fpga'))",
            "        (u_word",
            "          (word",
            "            WORD:'firmware-config'))",
            "        (list",
            "          (u_list",
            "            BRACE_LEFT:'{'",
            "            NEWLINE:'\\n'",
            "            (unrecognized",
            "              (u_word",
            "                (word",
            "                  TYPE:'type'))",
            "              (u_word",
            "                (word",
            "                  WORD:'standard-balanced-fpga'))",
            "              NEWLINE:'\\n')",
            "            BRACE_RIGHT:'}'))",
            "        NEWLINE:'\\n')))",
            "  (statement",
            "    (s_sys",
            "      SYS:'sys'",
            "      (unrecognized",
            "        (u_word",
            "          (word",
            "            WORD:'sflow'))",
            "        (u_word",
            "          (word",
            "            GLOBAL_SETTINGS:'global-settings'))",
            "        (u_word",
            "          (word",
            "            HTTP:'http'))",
            "        (list",
            "          (empty_list",
            "            BRACE_LEFT:'{'",
            "            BRACE_RIGHT:'}'))",
            "        NEWLINE:'\\n')))",
            "  (statement",
            "    (s_sys",
            "      SYS:'sys'",
            "      (unrecognized",
            "        (u_word",
            "          (word",
            "            WORD:'sflow'))",
            "        (u_word",
            "          (word",
            "            GLOBAL_SETTINGS:'global-settings'))",
            "        (u_word",
            "          (word",
            "            VLAN:'vlan'))",
            "        (list",
            "          (empty_list",
            "            BRACE_LEFT:'{'",
            "            BRACE_RIGHT:'}'))",
            "        NEWLINE:'\\n')))",
            "  (statement",
            "    (s_sys",
            "      SYS:'sys'",
            "      (unrecognized",
            "        (u_word",
            "          (word",
            "            WORD:'turboflex'))",
            "        (u_word",
            "          (word",
            "            WORD:'profile-config'))",
            "        (list",
            "          (u_list",
            "            BRACE_LEFT:'{'",
            "            NEWLINE:'\\n'",
            "            (unrecognized",
            "              (u_word",
            "                (word",
            "                  TYPE:'type'))",
            "              (u_word",
            "                (word",
            "                  WORD:'turboflex-adc'))",
            "              NEWLINE:'\\n')",
            "            BRACE_RIGHT:'}'))",
            "        NEWLINE:'\\n\\n\\n')))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/f5_bigip_structured_with_imish" : {
          "sentences" : [
            "(f5_bigip_structured_configuration",
            "  (statement",
            "    (s_sys",
            "      SYS:'sys'",
            "      (sys_global_settings",
            "        GLOBAL_SETTINGS:'global-settings'",
            "        BRACE_LEFT:'{'",
            "        NEWLINE:'\\n'",
            "        (sgs_hostname",
            "          HOSTNAME:'hostname'",
            "          hostname = (word",
            "            WORD:'f5_bigip_structured_with_imish')",
            "          NEWLINE:'\\n')",
            "        BRACE_RIGHT:'}'",
            "        NEWLINE:'\\n\\n')))",
            "  (imish_chunk",
            "    IMISH_CHUNK:'!\\naccess-list acl1 permit any\\naccess-list acl2 permit 192.0.2.0/24\\n!\\nbfd gtsm enable\\n!\\ninterface lo\\n!\\ninterface tmm\\n!\\ninterface vlan1\\n!\\nip prefix-list pl1 seq 10 permit 192.0.2.0/24\\nip prefix-list pl1 seq 20 permit 172.16.0.0/24 le 26\\nip prefix-list pl1 seq 30 permit 10.0.0.0/24 ge 26 le 28\\n!\\nrouter bgp 65500\\n bgp always-compare-med\\n bgp deterministic-med\\n bgp graceful-restart restart-time 123\\n bgp router-id 192.0.2.100\\n max-paths ebgp 12\\n neighbor pg1 peer-group\\n no neighbor pg1 capability graceful-restart\\n neighbor pg1 fall-over pfd\\n neighbor pg1 maximum-prefix 12345\\n neighbor pg1 next-hop-self\\n neighbor 1:2:3:: remote-as 555\\n neighbor 1:2:3::4:5:6 remote-as 555\\n neighbor 1:2:3:4:5:6:7:: remote-as 555\\n neighbor ::1:2:3:4:5:6 remote-as 555\\n neighbor ::1:2:3:4:5:6:7 remote-as 555\\n neighbor 1:2::3:4.5.6.7 remote-as 555\\n neighbor 1:2:3:4:5:6:9.8.7.6 remote-as 555\\n neighbor 10.0.0.1 remote-as 65501\\n neighbor 10.0.0.1 description desc1\\n neighbor 10.0.0.1 next-hop-self\\n neighbor 10.0.0.1 peer-group pg1\\n neighbor 10.0.0.1 update-source us1\\n redistribute kernel\\n redistribute kernel route-map rm1\\n!\\nno service password-encryption\\n!\\nroute-map rm1 permit 1\\n match ip address acl1\\n match ip address prefix-list pl1\\n set community 1:2 3:4\\n set metric 50\\n set origin egp\\n set origin igp\\n set origin incomplete\\n!\\nroute-map rm1 deny 2\\n!\\nline con 0\\n login\\nline vty 0 39\\n login\\n!\\nend\\n\\n\\n')",
            "  EOF:<EOF>)",
            "(f5_bigip_imish_configuration",
            "  (statement",
            "    (s_access_list",
            "      ACCESS_LIST:'access-list'",
            "      name = (word",
            "        WORD:'acl1')",
            "      action = (line_action",
            "        PERMIT:'permit')",
            "      src = (ip_spec",
            "        ANY:'any')",
            "      NEWLINE:'\\n'))",
            "  (statement",
            "    (s_access_list",
            "      ACCESS_LIST:'access-list'",
            "      name = (word",
            "        WORD:'acl2')",
            "      action = (line_action",
            "        PERMIT:'permit')",
            "      src = (ip_spec",
            "        prefix = (ip_prefix",
            "          IP_PREFIX:'192.0.2.0/24'))",
            "      NEWLINE:'\\n'))",
            "  (statement",
            "    (s_null",
            "      BFD:'bfd'",
            "      (null_rest_of_line",
            "        WORD:'gtsm'",
            "        WORD:'enable'",
            "        NEWLINE:'\\n')))",
            "  (statement",
            "    (s_null",
            "      INTERFACE:'interface'",
            "      (null_rest_of_line",
            "        WORD:'lo'",
            "        NEWLINE:'\\n')))",
            "  (statement",
            "    (s_null",
            "      INTERFACE:'interface'",
            "      (null_rest_of_line",
            "        WORD:'tmm'",
            "        NEWLINE:'\\n')))",
            "  (statement",
            "    (s_null",
            "      INTERFACE:'interface'",
            "      (null_rest_of_line",
            "        WORD:'vlan1'",
            "        NEWLINE:'\\n')))",
            "  (statement",
            "    (s_ip_prefix_list",
            "      IP:'ip'",
            "      PREFIX_LIST:'prefix-list'",
            "      name = (word",
            "        WORD:'pl1')",
            "      SEQ:'seq'",
            "      num = (uint32",
            "        d = DEC:'10')",
            "      action = (line_action",
            "        PERMIT:'permit')",
            "      prefix = (ip_prefix",
            "        IP_PREFIX:'192.0.2.0/24')",
            "      NEWLINE:'\\n'))",
            "  (statement",
            "    (s_ip_prefix_list",
            "      IP:'ip'",
            "      PREFIX_LIST:'prefix-list'",
            "      name = (word",
            "        WORD:'pl1')",
            "      SEQ:'seq'",
            "      num = (uint32",
            "        d = DEC:'20')",
            "      action = (line_action",
            "        PERMIT:'permit')",
            "      prefix = (ip_prefix",
            "        IP_PREFIX:'172.16.0.0/24')",
            "      LE:'le'",
            "      le = (ip_prefix_length",
            "        d = DEC:'26')",
            "      NEWLINE:'\\n'))",
            "  (statement",
            "    (s_ip_prefix_list",
            "      IP:'ip'",
            "      PREFIX_LIST:'prefix-list'",
            "      name = (word",
            "        WORD:'pl1')",
            "      SEQ:'seq'",
            "      num = (uint32",
            "        d = DEC:'30')",
            "      action = (line_action",
            "        PERMIT:'permit')",
            "      prefix = (ip_prefix",
            "        IP_PREFIX:'10.0.0.0/24')",
            "      GE:'ge'",
            "      ge = (ip_prefix_length",
            "        d = DEC:'26')",
            "      LE:'le'",
            "      le = (ip_prefix_length",
            "        d = DEC:'28')",
            "      NEWLINE:'\\n'))",
            "  (statement",
            "    (s_router_bgp",
            "      ROUTER:'router'",
            "      BGP:'bgp'",
            "      localas = (uint32",
            "        d = DEC:'65500')",
            "      NEWLINE:'\\n'",
            "      (rb_bgp_always_compare_med",
            "        BGP:'bgp'",
            "        ALWAYS_COMPARE_MED:'always-compare-med'",
            "        NEWLINE:'\\n')",
            "      (rb_bgp_deterministic_med",
            "        BGP:'bgp'",
            "        DETERMINISTIC_MED:'deterministic-med'",
            "        NEWLINE:'\\n')",
            "      (rb_null",
            "        BGP:'bgp'",
            "        GRACEFUL_RESTART:'graceful-restart'",
            "        (null_rest_of_line",
            "          WORD:'restart-time'",
            "          DEC:'123'",
            "          NEWLINE:'\\n'))",
            "      (rb_bgp_router_id",
            "        BGP:'bgp'",
            "        ROUTER_ID:'router-id'",
            "        id = IP_ADDRESS:'192.0.2.100'",
            "        NEWLINE:'\\n')",
            "      (rb_null",
            "        MAX_PATHS:'max-paths'",
            "        (null_rest_of_line",
            "          EBGP:'ebgp'",
            "          DEC:'12'",
            "          NEWLINE:'\\n'))",
            "      (rb_neighbor_peer_group",
            "        NEIGHBOR:'neighbor'",
            "        name = (peer_group_name",
            "          WORD:'pg1')",
            "        (rbn_peer_group",
            "          PEER_GROUP:'peer-group'",
            "          NEWLINE:'\\n'))",
            "      (rb_neighbor_peer_group",
            "        NO:'no'",
            "        NEIGHBOR:'neighbor'",
            "        name = (peer_group_name",
            "          WORD:'pg1')",
            "        (rbn_common",
            "          (rbn_null",
            "            CAPABILITY:'capability'",
            "            (null_rest_of_line",
            "              GRACEFUL_RESTART:'graceful-restart'",
            "              NEWLINE:'\\n'))))",
            "      (rb_neighbor_peer_group",
            "        NEIGHBOR:'neighbor'",
            "        name = (peer_group_name",
            "          WORD:'pg1')",
            "        (rbn_common",
            "          (rbn_null",
            "            FALL_OVER:'fall-over'",
            "            (null_rest_of_line",
            "              WORD:'pfd'",
            "              NEWLINE:'\\n'))))",
            "      (rb_neighbor_peer_group",
            "        NEIGHBOR:'neighbor'",
            "        name = (peer_group_name",
            "          WORD:'pg1')",
            "        (rbn_common",
            "          (rbn_null",
            "            MAXIMUM_PREFIX:'maximum-prefix'",
            "            (null_rest_of_line",
            "              DEC:'12345'",
            "              NEWLINE:'\\n'))))",
            "      (rb_neighbor_peer_group",
            "        NEIGHBOR:'neighbor'",
            "        name = (peer_group_name",
            "          WORD:'pg1')",
            "        (rbn_common",
            "          (rbn_next_hop_self",
            "            NEXT_HOP_SELF:'next-hop-self'",
            "            NEWLINE:'\\n')))",
            "      (rb_neighbor_ipv6",
            "        NEIGHBOR:'neighbor'",
            "        ip6 = IPV6_ADDRESS:'1:2:3::'",
            "        (rbn_common",
            "          (rbn_remote_as",
            "            REMOTE_AS:'remote-as'",
            "            remoteas = (uint32",
            "              d = DEC:'555')",
            "            NEWLINE:'\\n')))",
            "      (rb_neighbor_ipv6",
            "        NEIGHBOR:'neighbor'",
            "        ip6 = IPV6_ADDRESS:'1:2:3::4:5:6'",
            "        (rbn_common",
            "          (rbn_remote_as",
            "            REMOTE_AS:'remote-as'",
            "            remoteas = (uint32",
            "              d = DEC:'555')",
            "            NEWLINE:'\\n')))",
            "      (rb_neighbor_ipv6",
            "        NEIGHBOR:'neighbor'",
            "        ip6 = IPV6_ADDRESS:'1:2:3:4:5:6:7::'",
            "        (rbn_common",
            "          (rbn_remote_as",
            "            REMOTE_AS:'remote-as'",
            "            remoteas = (uint32",
            "              d = DEC:'555')",
            "            NEWLINE:'\\n')))",
            "      (rb_neighbor_ipv6",
            "        NEIGHBOR:'neighbor'",
            "        ip6 = IPV6_ADDRESS:'::1:2:3:4:5:6'",
            "        (rbn_common",
            "          (rbn_remote_as",
            "            REMOTE_AS:'remote-as'",
            "            remoteas = (uint32",
            "              d = DEC:'555')",
            "            NEWLINE:'\\n')))",
            "      (rb_neighbor_ipv6",
            "        NEIGHBOR:'neighbor'",
            "        ip6 = IPV6_ADDRESS:'::1:2:3:4:5:6:7'",
            "        (rbn_common",
            "          (rbn_remote_as",
            "            REMOTE_AS:'remote-as'",
            "            remoteas = (uint32",
            "              d = DEC:'555')",
            "            NEWLINE:'\\n')))",
            "      (rb_neighbor_ipv6",
            "        NEIGHBOR:'neighbor'",
            "        ip6 = IPV6_ADDRESS:'1:2::3:4.5.6.7'",
            "        (rbn_common",
            "          (rbn_remote_as",
            "            REMOTE_AS:'remote-as'",
            "            remoteas = (uint32",
            "              d = DEC:'555')",
            "            NEWLINE:'\\n')))",
            "      (rb_neighbor_ipv6",
            "        NEIGHBOR:'neighbor'",
            "        ip6 = IPV6_ADDRESS:'1:2:3:4:5:6:9.8.7.6'",
            "        (rbn_common",
            "          (rbn_remote_as",
            "            REMOTE_AS:'remote-as'",
            "            remoteas = (uint32",
            "              d = DEC:'555')",
            "            NEWLINE:'\\n')))",
            "      (rb_neighbor_ipv4",
            "        NEIGHBOR:'neighbor'",
            "        ip = IP_ADDRESS:'10.0.0.1'",
            "        (rbn_common",
            "          (rbn_remote_as",
            "            REMOTE_AS:'remote-as'",
            "            remoteas = (uint32",
            "              d = DEC:'65501')",
            "            NEWLINE:'\\n')))",
            "      (rb_neighbor_ipv4",
            "        NEIGHBOR:'neighbor'",
            "        ip = IP_ADDRESS:'10.0.0.1'",
            "        (rbn_common",
            "          (rbn_description",
            "            DESCRIPTION:'description'",
            "            text = DESCRIPTION_LINE:'desc1'  <== mode:M_Description",
            "            NEWLINE:'\\n')))",
            "      (rb_neighbor_ipv4",
            "        NEIGHBOR:'neighbor'",
            "        ip = IP_ADDRESS:'10.0.0.1'",
            "        (rbn_common",
            "          (rbn_next_hop_self",
            "            NEXT_HOP_SELF:'next-hop-self'",
            "            NEWLINE:'\\n')))",
            "      (rb_neighbor_ipv4",
            "        NEIGHBOR:'neighbor'",
            "        ip = IP_ADDRESS:'10.0.0.1'",
            "        (rbn_peer_group_assign",
            "          PEER_GROUP:'peer-group'",
            "          name = (peer_group_name",
            "            WORD:'pg1')",
            "          NEWLINE:'\\n'))",
            "      (rb_neighbor_ipv4",
            "        NEIGHBOR:'neighbor'",
            "        ip = IP_ADDRESS:'10.0.0.1'",
            "        (rbn_common",
            "          (rbn_null",
            "            UPDATE_SOURCE:'update-source'",
            "            (null_rest_of_line",
            "              WORD:'us1'",
            "              NEWLINE:'\\n'))))",
            "      (rb_redistribute_kernel",
            "        REDISTRIBUTE:'redistribute'",
            "        KERNEL:'kernel'",
            "        NEWLINE:'\\n')",
            "      (rb_redistribute_kernel",
            "        REDISTRIBUTE:'redistribute'",
            "        KERNEL:'kernel'",
            "        ROUTE_MAP:'route-map'",
            "        rm = (word",
            "          WORD:'rm1')",
            "        NEWLINE:'\\n')))",
            "  (statement",
            "    (s_null",
            "      NO:'no'",
            "      SERVICE:'service'",
            "      (null_rest_of_line",
            "        WORD:'password-encryption'",
            "        NEWLINE:'\\n')))",
            "  (statement",
            "    (s_route_map",
            "      ROUTE_MAP:'route-map'",
            "      name = (word",
            "        WORD:'rm1')",
            "      action = (line_action",
            "        PERMIT:'permit')",
            "      num = (uint32",
            "        d = DEC:'1')",
            "      NEWLINE:'\\n'",
            "      (rm_match",
            "        MATCH:'match'",
            "        (rmm_ip_address",
            "          IP:'ip'",
            "          ADDRESS:'address'",
            "          name = (word",
            "            WORD:'acl1')",
            "          NEWLINE:'\\n'))",
            "      (rm_match",
            "        MATCH:'match'",
            "        (rmm_ip_address_prefix_list",
            "          IP:'ip'",
            "          ADDRESS:'address'",
            "          PREFIX_LIST:'prefix-list'",
            "          name = (word",
            "            WORD:'pl1')",
            "          NEWLINE:'\\n'))",
            "      (rm_set",
            "        SET:'set'",
            "        (rms_community",
            "          COMMUNITY:'community'",
            "          (standard_community",
            "            STANDARD_COMMUNITY:'1:2')",
            "          (standard_community",
            "            STANDARD_COMMUNITY:'3:4')",
            "          NEWLINE:'\\n'))",
            "      (rm_set",
            "        SET:'set'",
            "        (rms_metric",
            "          METRIC:'metric'",
            "          metric = (uint32",
            "            d = DEC:'50')",
            "          NEWLINE:'\\n'))",
            "      (rm_set",
            "        SET:'set'",
            "        (rms_origin",
            "          ORIGIN:'origin'",
            "          origin = (origin_type",
            "            EGP:'egp')",
            "          NEWLINE:'\\n'))",
            "      (rm_set",
            "        SET:'set'",
            "        (rms_origin",
            "          ORIGIN:'origin'",
            "          origin = (origin_type",
            "            IGP:'igp')",
            "          NEWLINE:'\\n'))",
            "      (rm_set",
            "        SET:'set'",
            "        (rms_origin",
            "          ORIGIN:'origin'",
            "          origin = (origin_type",
            "            INCOMPLETE:'incomplete')",
            "          NEWLINE:'\\n'))))",
            "  (statement",
            "    (s_route_map",
            "      ROUTE_MAP:'route-map'",
            "      name = (word",
            "        WORD:'rm1')",
            "      action = (line_action",
            "        DENY:'deny')",
            "      num = (uint32",
            "        d = DEC:'2')",
            "      NEWLINE:'\\n'))",
            "  (statement",
            "    (s_line",
            "      LINE:'line'",
            "      (l_con",
            "        CON:'con'",
            "        num = (uint32",
            "          d = DEC:'0')",
            "        NEWLINE:'\\n'",
            "        (l_login",
            "          LOGIN:'login'",
            "          NEWLINE:'\\n'))))",
            "  (statement",
            "    (s_line",
            "      LINE:'line'",
            "      (l_vty",
            "        VTY:'vty'",
            "        low = (uint32",
            "          d = DEC:'0')",
            "        high = (uint32",
            "          d = DEC:'39')",
            "        NEWLINE:'\\n'",
            "        (l_login",
            "          LOGIN:'login'",
            "          NEWLINE:'\\n'))))",
            "  (statement",
            "    (s_end",
            "      END:'end'",
            "      NEWLINE:'\\n\\n\\n'))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/foundry_access_list" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'foundry_access_list'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_foundry_mac_access_list",
            "      ACCESS_LIST:'access-list'",
            "      num = ACL_NUM_FOUNDRY_L2:'400'",
            "      action = (access_list_action",
            "        PERMIT:'permit')",
            "      src_any = ANY:'any'",
            "      dst_any = ANY:'any'",
            "      vlan_any = ANY:'any'",
            "      ETYPE:'etype'",
            "      (etype",
            "        ARP:'arp')",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_foundry_mac_access_list",
            "      ACCESS_LIST:'access-list'",
            "      num = ACL_NUM_FOUNDRY_L2:'401'",
            "      action = (access_list_action",
            "        PERMIT:'permit')",
            "      src_any = ANY:'any'",
            "      dst_any = ANY:'any'",
            "      vlan_any = ANY:'any'",
            "      ETYPE:'etype'",
            "      (etype",
            "        ANY:'any')",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_foundry_mac_access_list",
            "      ACCESS_LIST:'access-list'",
            "      num = ACL_NUM_FOUNDRY_L2:'500'",
            "      action = (access_list_action",
            "        PERMIT:'permit')",
            "      src_address = MAC_ADDRESS_LITERAL:'a80c.0d63.9eec'",
            "      src_wildcard = MAC_ADDRESS_LITERAL:'ffff.ffff.ffff'",
            "      dst_address = MAC_ADDRESS_LITERAL:'6c9c.ed7b.c90b'",
            "      dst_wildcard = MAC_ADDRESS_LITERAL:'ffff.ffff.ffff'",
            "      vlan = DEC:'2300'",
            "      ETYPE:'etype'",
            "      (etype",
            "        IPV4_L5:'ipv4-l5')",
            "      PRIORITY:'priority'",
            "      priority = DEC:'3'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (extended_ipv6_access_list_stanza",
            "      IPV6:'ipv6'",
            "      ACCESS_LIST:'access-list'",
            "      name = (variable_permissive",
            "        VARIABLE:'RT404888-Caltech')",
            "      NEWLINE:'\\n'",
            "      (extended_ipv6_access_list_tail",
            "        ala = (access_list_action",
            "          PERMIT:'permit')",
            "        prot = (protocol",
            "          IPV6:'ipv6')",
            "        srcipr = (access_list_ip6_range",
            "          HOST:'host'",
            "          ipv6 = IPV6_ADDRESS:'2607:f380:1::108:9a41:a6b1')",
            "        dstipr = (access_list_ip6_range",
            "          ANY:'any')",
            "        SEQUENCE:'sequence'",
            "        num = DEC:'5'",
            "        NEWLINE:'\\n')",
            "      (extended_ipv6_access_list_tail",
            "        ala = (access_list_action",
            "          PERMIT:'permit')",
            "        prot = (protocol",
            "          IPV6:'ipv6')",
            "        srcipr = (access_list_ip6_range",
            "          HOST:'host'",
            "          ipv6 = IPV6_ADDRESS:'fe80::ce4e:24ff:fe1c:7500')",
            "        dstipr = (access_list_ip6_range",
            "          ANY:'any')",
            "        SEQUENCE:'sequence'",
            "        num = DEC:'6'",
            "        NEWLINE:'\\n')",
            "      (extended_ipv6_access_list_tail",
            "        ala = (access_list_action",
            "          DENY:'deny')",
            "        prot = (protocol",
            "          ICMP:'icmp')",
            "        srcipr = (access_list_ip6_range",
            "          ANY:'any')",
            "        dstipr = (access_list_ip6_range",
            "          ANY:'any')",
            "        (extended_access_list_additional_feature",
            "          icmp_message_type = DEC:'133')",
            "        SEQUENCE:'sequence'",
            "        num = DEC:'10'",
            "        NEWLINE:'\\n')",
            "      (extended_ipv6_access_list_tail",
            "        ala = (access_list_action",
            "          DENY:'deny')",
            "        prot = (protocol",
            "          ICMP:'icmp')",
            "        srcipr = (access_list_ip6_range",
            "          ANY:'any')",
            "        dstipr = (access_list_ip6_range",
            "          ANY:'any')",
            "        (extended_access_list_additional_feature",
            "          icmp_message_type = DEC:'134')",
            "        SEQUENCE:'sequence'",
            "        num = DEC:'20'",
            "        NEWLINE:'\\n')",
            "      (extended_ipv6_access_list_tail",
            "        ala = (access_list_action",
            "          DENY:'deny')",
            "        prot = (protocol",
            "          ICMP:'icmp')",
            "        srcipr = (access_list_ip6_range",
            "          ANY:'any')",
            "        dstipr = (access_list_ip6_range",
            "          ANY:'any')",
            "        (extended_access_list_additional_feature",
            "          icmp_message_type = DEC:'135')",
            "        SEQUENCE:'sequence'",
            "        num = DEC:'30'",
            "        NEWLINE:'\\n')",
            "      (extended_ipv6_access_list_tail",
            "        ala = (access_list_action",
            "          DENY:'deny')",
            "        prot = (protocol",
            "          ICMP:'icmp')",
            "        srcipr = (access_list_ip6_range",
            "          ANY:'any')",
            "        dstipr = (access_list_ip6_range",
            "          ANY:'any')",
            "        (extended_access_list_additional_feature",
            "          icmp_message_type = DEC:'136')",
            "        SEQUENCE:'sequence'",
            "        num = DEC:'40'",
            "        NEWLINE:'\\n')",
            "      (extended_ipv6_access_list_tail",
            "        ala = (access_list_action",
            "          DENY:'deny')",
            "        prot = (protocol",
            "          ICMP:'icmp')",
            "        srcipr = (access_list_ip6_range",
            "          ANY:'any')",
            "        dstipr = (access_list_ip6_range",
            "          ANY:'any')",
            "        (extended_access_list_additional_feature",
            "          icmp_message_type = DEC:'141')",
            "        SEQUENCE:'sequence'",
            "        num = DEC:'50'",
            "        NEWLINE:'\\n')",
            "      (extended_ipv6_access_list_tail",
            "        ala = (access_list_action",
            "          DENY:'deny')",
            "        prot = (protocol",
            "          ICMP:'icmp')",
            "        srcipr = (access_list_ip6_range",
            "          ANY:'any')",
            "        dstipr = (access_list_ip6_range",
            "          ANY:'any')",
            "        (extended_access_list_additional_feature",
            "          icmp_message_type = DEC:'142')",
            "        SEQUENCE:'sequence'",
            "        num = DEC:'60'",
            "        NEWLINE:'\\n')",
            "      (extended_ipv6_access_list_tail",
            "        ala = (access_list_action",
            "          PERMIT:'permit')",
            "        prot = (protocol",
            "          IPV6:'ipv6')",
            "        srcipr = (access_list_ip6_range",
            "          ANY:'any')",
            "        dstipr = (access_list_ip6_range",
            "          ANY:'any')",
            "        SEQUENCE:'sequence'",
            "        num = DEC:'80'",
            "        NEWLINE:'\\n')))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/foundry_bgp" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'foundry_bgp'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (router_bgp_stanza",
            "      ROUTER:'router'",
            "      BGP:'bgp'",
            "      NEWLINE:'\\n'",
            "      (router_bgp_stanza_tail",
            "        (bgp_tail",
            "          (local_as_bgp_tail",
            "            LOCAL_AS:'local-as'",
            "            (bgp_asn",
            "              asn = DEC:'12345')",
            "            NEWLINE:'\\n')))",
            "      (router_bgp_stanza_tail",
            "        (bgp_tail",
            "          (null_bgp_tail",
            "            BFD_ENABLE:'bfd-enable'",
            "            (null_rest_of_line",
            "              NEWLINE:'\\n'))))",
            "      (router_bgp_stanza_tail",
            "        (bgp_tail",
            "          (null_bgp_tail",
            "            AUTO_SHUTDOWN_NEW_NEIGHBORS:'auto-shutdown-new-neighbors'",
            "            (null_rest_of_line",
            "              NEWLINE:'\\n'))))",
            "      (router_bgp_stanza_tail",
            "        (compare_routerid_rb_stanza",
            "          COMPARE_ROUTERID:'compare-routerid'",
            "          NEWLINE:'\\n'))",
            "      (router_bgp_stanza_tail",
            "        (bgp_tail",
            "          (null_bgp_tail",
            "            TIMERS:'timers'",
            "            (null_rest_of_line",
            "              VARIABLE:'keep-alive'",
            "              DEC:'10'",
            "              HOLD_TIME:'hold-time'",
            "              DEC:'30'",
            "              NEWLINE:'\\n'))))",
            "      (router_bgp_stanza_tail",
            "        (peer_group_creation_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          name = VARIABLE:'bippety'  <== mode:M_NEIGHBOR",
            "          PEER_GROUP:'peer-group'",
            "          NEWLINE:'\\n'  <== mode:M_NEIGHBOR))",
            "      (router_bgp_stanza_tail",
            "        (neighbor_flat_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          peergroup = VARIABLE:'bippety'  <== mode:M_NEIGHBOR",
            "          (remote_as_bgp_tail",
            "            REMOTE_AS:'remote-as'",
            "            remote = (bgp_asn",
            "              asn = DEC:'12345')",
            "            NEWLINE:'\\n')))",
            "      (router_bgp_stanza_tail",
            "        (neighbor_flat_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          peergroup = VARIABLE:'bippety'  <== mode:M_NEIGHBOR",
            "          (bgp_tail",
            "            (next_hop_self_bgp_tail",
            "              NEXT_HOP_SELF:'next-hop-self'",
            "              NEWLINE:'\\n'))))",
            "      (router_bgp_stanza_tail",
            "        (neighbor_flat_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          peergroup = VARIABLE:'bippety'  <== mode:M_NEIGHBOR",
            "          (bgp_tail",
            "            (null_bgp_tail",
            "              TIMERS:'timers'",
            "              (null_rest_of_line",
            "                VARIABLE:'keep-alive'",
            "                DEC:'10'",
            "                HOLD_TIME:'hold-time'",
            "                DEC:'30'",
            "                NEWLINE:'\\n')))))",
            "      (router_bgp_stanza_tail",
            "        (neighbor_flat_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          peergroup = VARIABLE:'bippety'  <== mode:M_NEIGHBOR",
            "          (bgp_tail",
            "            (update_source_bgp_tail",
            "              UPDATE_SOURCE:'update-source'",
            "              source = (interface_name",
            "                name_prefix_alpha = M_Interface_PREFIX:'loopback'  <== mode:M_Interface",
            "                (range",
            "                  (subrange",
            "                    low = DEC:'1'  <== mode:M_Interface)))",
            "              NEWLINE:'\\n'  <== mode:M_Interface))))",
            "      (router_bgp_stanza_tail",
            "        (neighbor_flat_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          peergroup = VARIABLE:'bippety'  <== mode:M_NEIGHBOR",
            "          (bgp_tail",
            "            (null_bgp_tail",
            "              SOFT_RECONFIGURATION:'soft-reconfiguration'",
            "              (null_rest_of_line",
            "                INBOUND:'inbound'",
            "                NEWLINE:'\\n')))))",
            "      (router_bgp_stanza_tail",
            "        (peer_group_creation_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          name = VARIABLE:'boop'  <== mode:M_NEIGHBOR",
            "          PEER_GROUP:'peer-group'",
            "          NEWLINE:'\\n'  <== mode:M_NEIGHBOR))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/foundry_interface" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'foundry_interface'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_interface",
            "      INTERFACE:'interface'",
            "      iname = (interface_name",
            "        name_prefix_alpha = M_Interface_PREFIX:'ethernet'  <== mode:M_Interface",
            "        DEC:'1'  <== mode:M_Interface",
            "        FORWARD_SLASH:'/'  <== mode:M_Interface",
            "        (range",
            "          (subrange",
            "            low = DEC:'15'  <== mode:M_Interface)))",
            "      NEWLINE:'\\n'  <== mode:M_Interface",
            "      (if_inner",
            "        (if_null_block",
            "          PORT_NAME:'port-name'",
            "          VARIABLE:'fguijbhojre'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          ENABLE:'enable'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          TUNABLE_OPTIC:'tunable-optic'",
            "          VARIABLE:'sfpp'",
            "          CHANNEL:'channel'",
            "          DEC:'75'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          SPEED_DUPLEX:'speed-duplex'",
            "          VARIABLE:'1000-full'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          NO:'no'",
            "          IP:'ip'",
            "          REDIRECT:'redirect'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          OPTICAL_MONITOR:'optical-monitor'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_spanning_tree",
            "          SPANNING_TREE:'spanning-tree'",
            "          (if_st_null",
            "            PROTECT:'protect'",
            "            (null_rest_of_line",
            "              NEWLINE:'\\n'))))",
            "      (if_inner",
            "        (if_null_block",
            "          GIG_DEFAULT:'gig-default'",
            "          VARIABLE:'neg-off'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_port_security",
            "          PORT:'port'",
            "          SECURITY:'security'",
            "          NEWLINE:'\\n'",
            "          (if_port_security_null",
            "            ENABLE:'enable'",
            "            (null_rest_of_line",
            "              NEWLINE:'\\n'))",
            "          (if_port_security_null",
            "            VIOLATION:'violation'",
            "            (null_rest_of_line",
            "              RESTRICT:'restrict'",
            "              NEWLINE:'\\n'))",
            "          (if_port_security_null",
            "            MAXIMUM:'maximum'",
            "            (null_rest_of_line",
            "              DEC:'100'",
            "              NEWLINE:'\\n'))",
            "          (if_port_security_null",
            "            AGE:'age'",
            "            (null_rest_of_line",
            "              DEC:'2'",
            "              NEWLINE:'\\n'))",
            "          (if_port_security_null",
            "            SECURE_MAC_ADDRESS:'secure-mac-address'",
            "            (null_rest_of_line",
            "              MAC_ADDRESS_LITERAL:'001b.0de5.7300'",
            "              VLAN:'vlan'",
            "              DEC:'777'",
            "              AUTO:'auto'",
            "              NEWLINE:'\\n'))",
            "          (if_port_security_null",
            "            SECURE_MAC_ADDRESS:'secure-mac-address'",
            "            (null_rest_of_line",
            "              MAC_ADDRESS_LITERAL:'001b.0de5.7300'",
            "              VLAN:'vlan'",
            "              DEC:'703'",
            "              AUTO:'auto'",
            "              NEWLINE:'\\n'))))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/foundry_misc" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'foundry_misc'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_null",
            "      (null_block",
            "        DOT1X_ENABLE:'dot1x-enable'",
            "        (null_rest_of_line",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_null",
            "      (null_block",
            "        OPTICAL_MONITOR:'optical-monitor'",
            "        (null_rest_of_line",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_null",
            "      (null_block",
            "        QOS_POLICY:'qos-policy'",
            "        (null_rest_of_line",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_null",
            "      (null_block",
            "        LAG:'lag'",
            "        (null_rest_of_line",
            "          DOUBLE_QUOTE:'\"'",
            "          BRACKET_LEFT:'['",
            "          VARIABLE:'core'",
            "          BRACKET_RIGHT:']'",
            "          VARIABLE:'8x10G-to-lax-agg6-BE7-CLR-7753'",
            "          DOUBLE_QUOTE:'\"'",
            "          DYNAMIC:'dynamic'",
            "          ID:'id'",
            "          DEC:'5'",
            "          NEWLINE:'\\n')",
            "        (null_inner",
            "          PORTS:'ports'",
            "          (null_rest_of_line",
            "            ETHERNET:'ethernet'",
            "            DEC:'12'",
            "            FORWARD_SLASH:'/'",
            "            DEC:'1'",
            "            VARIABLE:'to'",
            "            DEC:'12'",
            "            FORWARD_SLASH:'/'",
            "            DEC:'8'",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          PRIMARY_PORT:'primary-port'",
            "          (null_rest_of_line",
            "            DEC:'12'",
            "            FORWARD_SLASH:'/'",
            "            DEC:'1'",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          TRUNK_THRESHOLD:'trunk-threshold'",
            "          (null_rest_of_line",
            "            DEC:'5'",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          DEPLOY:'deploy'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          PORT_NAME:'port-name'",
            "          (null_rest_of_line",
            "            DOUBLE_QUOTE:'\"'",
            "            VARIABLE:'10G'",
            "            VARIABLE:'to'",
            "            VARIABLE:'lax-agg6'",
            "            VARIABLE:'Te0/6/0/24'",
            "            VARIABLE:'CLR-6720'",
            "            DOUBLE_QUOTE:'\"'",
            "            ETHERNET:'ethernet'",
            "            DEC:'12'",
            "            FORWARD_SLASH:'/'",
            "            DEC:'1'",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          PORT_NAME:'port-name'",
            "          (null_rest_of_line",
            "            DOUBLE_QUOTE:'\"'",
            "            VARIABLE:'10G'",
            "            VARIABLE:'to'",
            "            VARIABLE:'lax-agg6'",
            "            VARIABLE:'Te0/6/0/25'",
            "            VARIABLE:'CLR-6721'",
            "            DOUBLE_QUOTE:'\"'",
            "            ETHERNET:'ethernet'",
            "            DEC:'12'",
            "            FORWARD_SLASH:'/'",
            "            DEC:'2'",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          PORT_NAME:'port-name'",
            "          (null_rest_of_line",
            "            DOUBLE_QUOTE:'\"'",
            "            VARIABLE:'10G'",
            "            VARIABLE:'to'",
            "            VARIABLE:'lax-agg6'",
            "            VARIABLE:'Te0/6/0/26'",
            "            VARIABLE:'CLR-6722'",
            "            DOUBLE_QUOTE:'\"'",
            "            ETHERNET:'ethernet'",
            "            DEC:'12'",
            "            FORWARD_SLASH:'/'",
            "            DEC:'3'",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          PORT_NAME:'port-name'",
            "          (null_rest_of_line",
            "            DOUBLE_QUOTE:'\"'",
            "            VARIABLE:'10G'",
            "            VARIABLE:'to'",
            "            VARIABLE:'lax-agg6'",
            "            VARIABLE:'Te0/6/0/27'",
            "            VARIABLE:'CLR-6723'",
            "            DOUBLE_QUOTE:'\"'",
            "            ETHERNET:'ethernet'",
            "            DEC:'12'",
            "            FORWARD_SLASH:'/'",
            "            DEC:'4'",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          PORT_NAME:'port-name'",
            "          (null_rest_of_line",
            "            DOUBLE_QUOTE:'\"'",
            "            VARIABLE:'10G'",
            "            VARIABLE:'to'",
            "            VARIABLE:'lax-agg6'",
            "            VARIABLE:'Te0/6/0/28'",
            "            VARIABLE:'CLR-6724'",
            "            DOUBLE_QUOTE:'\"'",
            "            ETHERNET:'ethernet'",
            "            DEC:'12'",
            "            FORWARD_SLASH:'/'",
            "            DEC:'5'",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          PORT_NAME:'port-name'",
            "          (null_rest_of_line",
            "            DOUBLE_QUOTE:'\"'",
            "            VARIABLE:'10G'",
            "            VARIABLE:'to'",
            "            VARIABLE:'lax-agg6'",
            "            VARIABLE:'Te0/6/0/29'",
            "            VARIABLE:'CLR-6725'",
            "            DOUBLE_QUOTE:'\"'",
            "            ETHERNET:'ethernet'",
            "            DEC:'12'",
            "            FORWARD_SLASH:'/'",
            "            DEC:'6'",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          PORT_NAME:'port-name'",
            "          (null_rest_of_line",
            "            DOUBLE_QUOTE:'\"'",
            "            VARIABLE:'10G'",
            "            VARIABLE:'to'",
            "            VARIABLE:'lax-agg6'",
            "            VARIABLE:'Te0/7/0/2'",
            "            VARIABLE:'CLR-6726'",
            "            DOUBLE_QUOTE:'\"'",
            "            ETHERNET:'ethernet'",
            "            DEC:'12'",
            "            FORWARD_SLASH:'/'",
            "            DEC:'7'",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          PORT_NAME:'port-name'",
            "          (null_rest_of_line",
            "            DOUBLE_QUOTE:'\"'",
            "            VARIABLE:'10G'",
            "            VARIABLE:'to'",
            "            VARIABLE:'lax-agg6'",
            "            VARIABLE:'Te0/7/0/3'",
            "            VARIABLE:'CLR-6727'",
            "            DOUBLE_QUOTE:'\"'",
            "            ETHERNET:'ethernet'",
            "            DEC:'12'",
            "            FORWARD_SLASH:'/'",
            "            DEC:'8'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_null",
            "      (null_block",
            "        ENABLE_ACL_COUNTER:'enable-acl-counter'",
            "        (null_rest_of_line",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_null",
            "      (null_block",
            "        VLAN_POLICY:'vlan-policy'",
            "        (null_rest_of_line",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_null",
            "      (null_block",
            "        IPV6:'ipv6'",
            "        NEIGHBOR:'neighbor'",
            "        (null_rest_of_line",
            "          IPV6_ADDRESS:'2607:0000:1::108:9a41:a951'  <== mode:M_NEIGHBOR",
            "          VARIABLE:'ve'",
            "          DEC:'183'",
            "          ETH:'eth'",
            "          DEC:'1'",
            "          FORWARD_SLASH:'/'",
            "          DEC:'1'",
            "          MAC_ADDRESS_LITERAL:'0024.38af.b000'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_null",
            "      (null_block",
            "        TAG_TYPE:'tag-type'",
            "        (null_rest_of_line",
            "          DEC:'9100'",
            "          VARIABLE:'ethe'",
            "          DEC:'16'",
            "          FORWARD_SLASH:'/'",
            "          DEC:'1'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_buffered",
            "          BUFFERED:'buffered'",
            "          size = DEC:'1000'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_null",
            "      (null_block",
            "        ACL_POLICY:'acl-policy'",
            "        (null_rest_of_line",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_null",
            "      (null_block",
            "        ENABLE_ACL_COUNTER:'enable-acl-counter'",
            "        (null_rest_of_line",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_null",
            "      (null_block",
            "        NO:'no'",
            "        TRANSCEIVER_TYPE_CHECK:'transceiver-type-check'",
            "        (null_rest_of_line",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_ssh",
            "      SSH:'ssh'",
            "      (ssh_access_group",
            "        ACCESS_GROUP:'access-group'",
            "        name = (variable",
            "          VARIABLE:'blib')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_ssh",
            "      SSH:'ssh'",
            "      (ssh_access_group",
            "        ACCESS_GROUP:'access-group'",
            "        IPV6:'ipv6'",
            "        name = (variable",
            "          VARIABLE:'blob')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (router_multicast_stanza",
            "      ROUTER:'router'",
            "      MSDP:'msdp'",
            "      NEWLINE:'\\n'",
            "      (router_multicast_tail",
            "        (null_inner",
            "          MSDP_PEER:'msdp-peer'",
            "          (null_rest_of_line",
            "            IP_ADDRESS:'1.2.17.15'",
            "            CONNECT_SOURCE:'connect-source'",
            "            LOOPBACK:'loopback'",
            "            DEC:'1'",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          MSDP_PEER:'msdp-peer'",
            "          (null_rest_of_line",
            "            IP_ADDRESS:'1.2.17.13'",
            "            CONNECT_SOURCE:'connect-source'",
            "            LOOPBACK:'loopback'",
            "            DEC:'1'",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          MSDP_PEER:'msdp-peer'",
            "          (null_rest_of_line",
            "            IP_ADDRESS:'1.2.26.30'",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          MSDP_PEER:'msdp-peer'",
            "          (null_rest_of_line",
            "            IP_ADDRESS:'1.2.26.201'",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          MSDP_PEER:'msdp-peer'",
            "          (null_rest_of_line",
            "            IP_ADDRESS:'1.2.26.205'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (ip_route_stanza",
            "      IP:'ip'",
            "      ROUTE:'route'",
            "      (ip_route_tail",
            "        prefix = IP_PREFIX:'1.2.28.104/31'",
            "        nexthopint = (interface_name",
            "          (variable_interface_name",
            "            ETHERNET:'ethernet')",
            "          DEC:'13'",
            "          FORWARD_SLASH:'/'",
            "          DEC:'10')",
            "        TAG:'tag'",
            "        tag = DEC:'64753'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_block",
            "        ENABLE_QOS_STATISTICS:'enable-qos-statistics'",
            "        (null_rest_of_line",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_policy_map",
            "      POLICY_MAP:'policy-map'",
            "      (variable_policy_map_header",
            "        VARIABLE:'limitarp')",
            "      NEWLINE:'\\n'",
            "      (pm_null",
            "        CIR:'cir'",
            "        (null_rest_of_line",
            "          DEC:'195456'",
            "          VARIABLE:'cbs'",
            "          DEC:'1250'",
            "          NEWLINE:'\\n'))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/foundry_vlan_group" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'foundry_vlan_group'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_null",
            "      (null_block",
            "        VLAN_GROUP:'vlan-group'",
            "        (null_rest_of_line",
            "          DEC:'1'",
            "          NEWLINE:'\\n')",
            "        (null_inner",
            "          ADD_VLAN:'add-vlan'",
            "          (null_rest_of_line",
            "            DEC:'4000'",
            "            VARIABLE:'to'",
            "            DEC:'4049'",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          TAGGED:'tagged'",
            "          (null_rest_of_line",
            "            VARIABLE:'ethe'",
            "            DEC:'1'",
            "            FORWARD_SLASH:'/'",
            "            DEC:'1'",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          TAGGED:'tagged'",
            "          (null_rest_of_line",
            "            VARIABLE:'ethe'",
            "            DEC:'3'",
            "            FORWARD_SLASH:'/'",
            "            DEC:'1'",
            "            NEWLINE:'\\n\\n')))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/gh-2658-juniper-vrf-import-export.cfg" : {
          "sentences" : [
            "(flat_juniper_configuration",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (s_version",
            "        VERSION:'version'",
            "        VERSION_STRING:'17.4R1.16'  <== mode:M_Version))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_host_name",
            "              HOST_NAME:'host-name'",
            "              (variable",
            "                text = VARIABLE:'vMX4'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_null",
            "              TIME_ZONE:'time-zone'",
            "              (null_filler",
            "                VARIABLE:'GMT-10'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_null",
            "              LOGIN:'login'",
            "              (null_filler",
            "                USER:'user'",
            "                VARIABLE:'jncie'",
            "                VARIABLE:'uid'",
            "                DEC:'2001'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_null",
            "              LOGIN:'login'",
            "              (null_filler",
            "                USER:'user'",
            "                VARIABLE:'jncie'",
            "                CLASS:'class'",
            "                VARIABLE:'super-user'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_null",
            "              LOGIN:'login'",
            "              (null_filler",
            "                USER:'user'",
            "                VARIABLE:'sid'",
            "                VARIABLE:'uid'",
            "                DEC:'2000'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_null",
            "              LOGIN:'login'",
            "              (null_filler",
            "                USER:'user'",
            "                VARIABLE:'sid'",
            "                CLASS:'class'",
            "                VARIABLE:'super-user'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_services",
            "              SERVICES:'services'",
            "              (sy_services_linetype",
            "                linetype = SSH:'ssh'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_services",
            "              SERVICES:'services'",
            "              (sy_services_null",
            "                NETCONF:'netconf'",
            "                (null_filler",
            "                  SSH:'ssh')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_syslog",
            "              SYSLOG:'syslog'",
            "              (sys_null",
            "                FILE:'file'",
            "                (null_filler",
            "                  VARIABLE:'messages'",
            "                  ANY:'any'",
            "                  VARIABLE:'notice')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_syslog",
            "              SYSLOG:'syslog'",
            "              (sys_null",
            "                FILE:'file'",
            "                (null_filler",
            "                  VARIABLE:'messages'",
            "                  AUTHORIZATION:'authorization'",
            "                  VARIABLE:'info')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_syslog",
            "              SYSLOG:'syslog'",
            "              (sys_null",
            "                FILE:'file'",
            "                (null_filler",
            "                  INTERACTIVE_COMMANDS:'interactive-commands'",
            "                  INTERACTIVE_COMMANDS:'interactive-commands'",
            "                  ANY:'any')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_ntp",
            "              NTP:'ntp'",
            "              (syn_server",
            "                SERVER:'server'",
            "                hostname = (variable",
            "                  text = IP_ADDRESS:'10.10.20.254')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_null",
            "            (ri_null",
            "              CHASSIS:'chassis'",
            "              (null_filler",
            "                VARIABLE:'fpc'",
            "                DEC:'0'",
            "                VARIABLE:'pic'",
            "                DEC:'0'",
            "                INTERFACE_TYPE:'interface-type'",
            "                VARIABLE:'xe'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_null",
            "            (ri_null",
            "              CHASSIS:'chassis'",
            "              (null_filler",
            "                VARIABLE:'fpc'",
            "                DEC:'0'",
            "                VARIABLE:'lite-mode'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_interfaces",
            "            INTERFACES:'interfaces'",
            "            (int_named",
            "              (interface_id",
            "                name = INTERFACE_NAME:'xe-0/0/2'  <== mode:M_Interface)",
            "              (i_unit",
            "                UNIT:'unit'",
            "                num = DEC:'0'",
            "                (i_common",
            "                  (i_family",
            "                    FAMILY:'family'",
            "                    (if_inet",
            "                      INET:'inet'",
            "                      (ifi_address",
            "                        ADDRESS:'address'",
            "                        IP_PREFIX:'172.16.7.1/30'))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_interfaces",
            "            INTERFACES:'interfaces'",
            "            (int_named",
            "              (interface_id",
            "                name = INTERFACE_NAME:'xe-0/0/3'  <== mode:M_Interface)",
            "              (i_unit",
            "                UNIT:'unit'",
            "                num = DEC:'0'",
            "                (i_common",
            "                  (i_family",
            "                    FAMILY:'family'",
            "                    (if_inet",
            "                      INET:'inet'",
            "                      (ifi_address",
            "                        ADDRESS:'address'",
            "                        IP_PREFIX:'172.16.5.1/30'))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_interfaces",
            "            INTERFACES:'interfaces'",
            "            (int_named",
            "              (interface_id",
            "                name = INTERFACE_NAME:'xe-0/0/4'  <== mode:M_Interface)",
            "              (i_common",
            "                (i_common_physical",
            "                  (i_disable",
            "                    DISABLE:'disable'))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_interfaces",
            "            INTERFACES:'interfaces'",
            "            (int_named",
            "              (interface_id",
            "                name = INTERFACE_NAME:'xe-0/0/4'  <== mode:M_Interface)",
            "              (i_unit",
            "                UNIT:'unit'",
            "                num = DEC:'0'",
            "                (i_common",
            "                  (i_family",
            "                    FAMILY:'family'",
            "                    (if_inet",
            "                      INET:'inet'",
            "                      (ifi_address",
            "                        ADDRESS:'address'",
            "                        IP_PREFIX:'172.16.3.1/30'))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_interfaces",
            "            INTERFACES:'interfaces'",
            "            (int_named",
            "              (interface_id",
            "                name = INTERFACE_NAME:'fxp0'  <== mode:M_Interface)",
            "              (i_unit",
            "                UNIT:'unit'",
            "                num = DEC:'0'",
            "                (i_common",
            "                  (i_family",
            "                    FAMILY:'family'",
            "                    (if_inet",
            "                      INET:'inet'",
            "                      (ifi_address",
            "                        ADDRESS:'address'",
            "                        IP_PREFIX:'10.10.20.4/24'))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_interfaces",
            "            INTERFACES:'interfaces'",
            "            (int_named",
            "              (interface_id",
            "                name = INTERFACE_NAME:'irb'  <== mode:M_Interface)",
            "              (i_unit",
            "                UNIT:'unit'",
            "                num = DEC:'100'",
            "                (i_common",
            "                  (i_common_physical",
            "                    (i_null",
            "                      PROXY_MACIP_ADVERTISEMENT:'proxy-macip-advertisement'",
            "                      (null_filler))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_interfaces",
            "            INTERFACES:'interfaces'",
            "            (int_named",
            "              (interface_id",
            "                name = INTERFACE_NAME:'irb'  <== mode:M_Interface)",
            "              (i_unit",
            "                UNIT:'unit'",
            "                num = DEC:'100'",
            "                (i_common",
            "                  (i_family",
            "                    FAMILY:'family'",
            "                    (if_inet",
            "                      INET:'inet'",
            "                      (ifi_address",
            "                        ADDRESS:'address'",
            "                        IP_PREFIX:'10.200.100.254/24'))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_interfaces",
            "            INTERFACES:'interfaces'",
            "            (int_named",
            "              (interface_id",
            "                name = INTERFACE_NAME:'irb'  <== mode:M_Interface)",
            "              (i_unit",
            "                UNIT:'unit'",
            "                num = DEC:'100'",
            "                (i_common",
            "                  (i_common_physical",
            "                    (i_mac",
            "                      MAC:'mac'",
            "                      mac = MAC_ADDRESS:'00:00:55:00:88:88'  <== mode:M_MacAddress)))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_interfaces",
            "            INTERFACES:'interfaces'",
            "            (int_named",
            "              (interface_id",
            "                name = INTERFACE_NAME:'lo0'  <== mode:M_Interface)",
            "              (i_unit",
            "                UNIT:'unit'",
            "                num = DEC:'0'",
            "                (i_common",
            "                  (i_family",
            "                    FAMILY:'family'",
            "                    (if_inet",
            "                      INET:'inet'",
            "                      (ifi_address",
            "                        ADDRESS:'address'",
            "                        IP_PREFIX:'192.168.1.2/32'))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_interfaces",
            "            INTERFACES:'interfaces'",
            "            (int_named",
            "              (interface_id",
            "                name = INTERFACE_NAME:'lo0'  <== mode:M_Interface)",
            "              (i_unit",
            "                UNIT:'unit'",
            "                num = DEC:'1'",
            "                (i_common",
            "                  (i_family",
            "                    FAMILY:'family'",
            "                    (if_inet",
            "                      INET:'inet'",
            "                      (ifi_address",
            "                        ADDRESS:'address'",
            "                        IP_PREFIX:'192.168.100.200/32'))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_routing_options",
            "            ROUTING_OPTIONS:'routing-options'",
            "            (ro_router_id",
            "              ROUTER_ID:'router-id'",
            "              id = IP_ADDRESS:'192.168.1.2')))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_routing_options",
            "            ROUTING_OPTIONS:'routing-options'",
            "            (ro_route_distinguisher_id",
            "              ROUTE_DISTINGUISHER_ID:'route-distinguisher-id'",
            "              addr = IP_ADDRESS:'192.168.1.2')))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_routing_options",
            "            ROUTING_OPTIONS:'routing-options'",
            "            (ro_autonomous_system",
            "              AUTONOMOUS_SYSTEM:'autonomous-system'",
            "              asn = (bgp_asn",
            "                asn = DEC:'65002')",
            "              (apply))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_routing_options",
            "            ROUTING_OPTIONS:'routing-options'",
            "            (ro_forwarding_table",
            "              FORWARDING_TABLE:'forwarding-table'",
            "              (rof_export",
            "                EXPORT:'export'",
            "                name = (variable",
            "                  text = VARIABLE:'lbpp')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_common",
            "                (b_null",
            "                  LOG_UPDOWN:'log-updown'",
            "                  (null_filler))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_group",
            "                GROUP:'group'",
            "                name = (variable",
            "                  text = VARIABLE:'underlay'  <== mode:M_VarOrWildcard)",
            "                (b_common",
            "                  (b_export",
            "                    EXPORT:'export'",
            "                    expr = (policy_expression",
            "                      (variable",
            "                        text = VARIABLE:'export-loopback'))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_group",
            "                GROUP:'group'",
            "                name = (variable",
            "                  text = VARIABLE:'underlay'  <== mode:M_VarOrWildcard)",
            "                (b_common",
            "                  (b_null",
            "                    BFD_LIVENESS_DETECTION:'bfd-liveness-detection'",
            "                    (null_filler",
            "                      MINIMUM_INTERVAL:'minimum-interval'",
            "                      DEC:'2000')))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_group",
            "                GROUP:'group'",
            "                name = (variable",
            "                  text = VARIABLE:'underlay'  <== mode:M_VarOrWildcard)",
            "                (b_common",
            "                  (b_null",
            "                    BFD_LIVENESS_DETECTION:'bfd-liveness-detection'",
            "                    (null_filler",
            "                      MULTIPLIER:'multiplier'",
            "                      DEC:'5')))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_group",
            "                GROUP:'group'",
            "                name = (variable",
            "                  text = VARIABLE:'underlay'  <== mode:M_VarOrWildcard)",
            "                (b_common",
            "                  (b_multipath",
            "                    MULTIPATH:'multipath'",
            "                    MULTIPLE_AS:'multiple-as'))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_group",
            "                GROUP:'group'",
            "                name = (variable",
            "                  text = VARIABLE:'underlay'  <== mode:M_VarOrWildcard)",
            "                (b_neighbor",
            "                  NEIGHBOR:'neighbor'",
            "                  IP_ADDRESS:'172.16.3.2'",
            "                  (b_common",
            "                    (b_peer_as",
            "                      PEER_AS:'peer-as'",
            "                      (bpa_as",
            "                        asn = (bgp_asn",
            "                          asn = DEC:'65003')))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_group",
            "                GROUP:'group'",
            "                name = (variable",
            "                  text = VARIABLE:'underlay'  <== mode:M_VarOrWildcard)",
            "                (b_neighbor",
            "                  NEIGHBOR:'neighbor'",
            "                  IP_ADDRESS:'172.16.5.2'",
            "                  (b_common",
            "                    (b_peer_as",
            "                      PEER_AS:'peer-as'",
            "                      (bpa_as",
            "                        asn = (bgp_asn",
            "                          asn = DEC:'65004')))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_group",
            "                GROUP:'group'",
            "                name = (variable",
            "                  text = VARIABLE:'underlay'  <== mode:M_VarOrWildcard)",
            "                (b_neighbor",
            "                  NEIGHBOR:'neighbor'",
            "                  IP_ADDRESS:'172.16.7.2'",
            "                  (b_common",
            "                    (b_peer_as",
            "                      PEER_AS:'peer-as'",
            "                      (bpa_as",
            "                        asn = (bgp_asn",
            "                          asn = DEC:'65005')))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_group",
            "                GROUP:'group'",
            "                name = (variable",
            "                  text = VARIABLE:'overlay'  <== mode:M_VarOrWildcard)",
            "                (b_common",
            "                  (b_type",
            "                    TYPE:'type'",
            "                    INTERNAL:'internal'))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_group",
            "                GROUP:'group'",
            "                name = (variable",
            "                  text = VARIABLE:'overlay'  <== mode:M_VarOrWildcard)",
            "                (b_common",
            "                  (b_local_address",
            "                    LOCAL_ADDRESS:'local-address'",
            "                    IP_ADDRESS:'192.168.1.2'))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_group",
            "                GROUP:'group'",
            "                name = (variable",
            "                  text = VARIABLE:'overlay'  <== mode:M_VarOrWildcard)",
            "                (b_common",
            "                  (b_family",
            "                    FAMILY:'family'",
            "                    (bf_evpn",
            "                      EVPN:'evpn'",
            "                      SIGNALING:'signaling')))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_group",
            "                GROUP:'group'",
            "                name = (variable",
            "                  text = VARIABLE:'overlay'  <== mode:M_VarOrWildcard)",
            "                (b_common",
            "                  (b_local_as",
            "                    LOCAL_AS:'local-as'",
            "                    (bl_number",
            "                      asn = (bgp_asn",
            "                        asn = DEC:'65500'))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_group",
            "                GROUP:'group'",
            "                name = (variable",
            "                  text = VARIABLE:'overlay'  <== mode:M_VarOrWildcard)",
            "                (b_common",
            "                  (b_null",
            "                    BFD_LIVENESS_DETECTION:'bfd-liveness-detection'",
            "                    (null_filler",
            "                      MINIMUM_INTERVAL:'minimum-interval'",
            "                      DEC:'2000')))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_group",
            "                GROUP:'group'",
            "                name = (variable",
            "                  text = VARIABLE:'overlay'  <== mode:M_VarOrWildcard)",
            "                (b_common",
            "                  (b_null",
            "                    BFD_LIVENESS_DETECTION:'bfd-liveness-detection'",
            "                    (null_filler",
            "                      MULTIPLIER:'multiplier'",
            "                      DEC:'3')))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_group",
            "                GROUP:'group'",
            "                name = (variable",
            "                  text = VARIABLE:'overlay'  <== mode:M_VarOrWildcard)",
            "                (b_common",
            "                  (b_multipath",
            "                    MULTIPATH:'multipath'))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_group",
            "                GROUP:'group'",
            "                name = (variable",
            "                  text = VARIABLE:'overlay'  <== mode:M_VarOrWildcard)",
            "                (b_neighbor",
            "                  NEIGHBOR:'neighbor'",
            "                  IP_ADDRESS:'192.168.1.3'",
            "                  (b_common",
            "                    (apply)))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_group",
            "                GROUP:'group'",
            "                name = (variable",
            "                  text = VARIABLE:'overlay'  <== mode:M_VarOrWildcard)",
            "                (b_neighbor",
            "                  NEIGHBOR:'neighbor'",
            "                  IP_ADDRESS:'192.168.1.44'",
            "                  (b_common",
            "                    (apply)))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_group",
            "                GROUP:'group'",
            "                name = (variable",
            "                  text = VARIABLE:'overlay'  <== mode:M_VarOrWildcard)",
            "                (b_neighbor",
            "                  NEIGHBOR:'neighbor'",
            "                  IP_ADDRESS:'192.168.1.5'",
            "                  (b_common",
            "                    (apply)))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_group",
            "                GROUP:'group'",
            "                name = (variable",
            "                  text = VARIABLE:'overlay'  <== mode:M_VarOrWildcard)",
            "                (b_neighbor",
            "                  NEIGHBOR:'neighbor'",
            "                  IP_ADDRESS:'192.168.1.1'",
            "                  (b_common",
            "                    (apply)))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_null",
            "              LLDP:'lldp'",
            "              (null_filler",
            "                VARIABLE:'port-id-subtype'",
            "                VARIABLE:'interface-name'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_null",
            "              LLDP:'lldp'",
            "              (null_filler",
            "                INTERFACE:'interface'",
            "                ALL:'all'  <== mode:M_Interface))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_policy_options",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_policy_statement",
            "              POLICY_STATEMENT:'policy-statement'",
            "              name = (variable",
            "                text = VARIABLE:'export-loopback')",
            "              (pops_term",
            "                TERM:'term'",
            "                name = (variable",
            "                  text = VARIABLE:'lo0')",
            "                (pops_common",
            "                  (pops_from",
            "                    FROM:'from'",
            "                    (popsf_interface",
            "                      INTERFACE:'interface'",
            "                      id = (interface_id",
            "                        name = INTERFACE_NAME:'lo0'  <== mode:M_Interface",
            "                        PERIOD:'.'",
            "                        unit = DEC:'0'))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_policy_options",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_policy_statement",
            "              POLICY_STATEMENT:'policy-statement'",
            "              name = (variable",
            "                text = VARIABLE:'export-loopback')",
            "              (pops_term",
            "                TERM:'term'",
            "                name = (variable",
            "                  text = VARIABLE:'lo0')",
            "                (pops_common",
            "                  (pops_then",
            "                    THEN:'then'",
            "                    (popst_common",
            "                      (popst_accept",
            "                        ACCEPT:'accept'))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_policy_options",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_policy_statement",
            "              POLICY_STATEMENT:'policy-statement'",
            "              name = (variable",
            "                text = FABRIC:'fabric')",
            "              (pops_term",
            "                TERM:'term'",
            "                name = (variable",
            "                  text = FABRIC:'fabric')",
            "                (pops_common",
            "                  (pops_from",
            "                    FROM:'from'",
            "                    (popsf_protocol",
            "                      PROTOCOL:'protocol'",
            "                      protocol = (routing_protocol",
            "                        BGP:'bgp'))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_policy_options",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_policy_statement",
            "              POLICY_STATEMENT:'policy-statement'",
            "              name = (variable",
            "                text = FABRIC:'fabric')",
            "              (pops_term",
            "                TERM:'term'",
            "                name = (variable",
            "                  text = FABRIC:'fabric')",
            "                (pops_common",
            "                  (pops_from",
            "                    FROM:'from'",
            "                    (popsf_community",
            "                      COMMUNITY:'community'",
            "                      name = (variable",
            "                        text = FABRIC:'fabric'))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_policy_options",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_policy_statement",
            "              POLICY_STATEMENT:'policy-statement'",
            "              name = (variable",
            "                text = FABRIC:'fabric')",
            "              (pops_term",
            "                TERM:'term'",
            "                name = (variable",
            "                  text = FABRIC:'fabric')",
            "                (pops_common",
            "                  (pops_then",
            "                    THEN:'then'",
            "                    (popst_common",
            "                      (popst_accept",
            "                        ACCEPT:'accept'))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_policy_options",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_policy_statement",
            "              POLICY_STATEMENT:'policy-statement'",
            "              name = (variable",
            "                text = FABRIC:'fabric')",
            "              (pops_term",
            "                TERM:'term'",
            "                name = (variable",
            "                  text = VARIABLE:'vni-100')",
            "                (pops_common",
            "                  (pops_from",
            "                    FROM:'from'",
            "                    (popsf_community",
            "                      COMMUNITY:'community'",
            "                      name = (variable",
            "                        text = VARIABLE:'vni-100'))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_policy_options",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_policy_statement",
            "              POLICY_STATEMENT:'policy-statement'",
            "              name = (variable",
            "                text = FABRIC:'fabric')",
            "              (pops_term",
            "                TERM:'term'",
            "                name = (variable",
            "                  text = VARIABLE:'vni-100')",
            "                (pops_common",
            "                  (pops_then",
            "                    THEN:'then'",
            "                    (popst_common",
            "                      (popst_accept",
            "                        ACCEPT:'accept'))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_policy_options",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_policy_statement",
            "              POLICY_STATEMENT:'policy-statement'",
            "              name = (variable",
            "                text = FABRIC:'fabric')",
            "              (pops_term",
            "                TERM:'term'",
            "                name = (variable",
            "                  text = VARIABLE:'vni-101')",
            "                (pops_common",
            "                  (pops_from",
            "                    FROM:'from'",
            "                    (popsf_community",
            "                      COMMUNITY:'community'",
            "                      name = (variable",
            "                        text = VARIABLE:'vni-101'))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_policy_options",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_policy_statement",
            "              POLICY_STATEMENT:'policy-statement'",
            "              name = (variable",
            "                text = FABRIC:'fabric')",
            "              (pops_term",
            "                TERM:'term'",
            "                name = (variable",
            "                  text = VARIABLE:'vni-101')",
            "                (pops_common",
            "                  (pops_then",
            "                    THEN:'then'",
            "                    (popst_common",
            "                      (popst_accept",
            "                        ACCEPT:'accept'))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_policy_options",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_policy_statement",
            "              POLICY_STATEMENT:'policy-statement'",
            "              name = (variable",
            "                text = VARIABLE:'lbpp')",
            "              (pops_term",
            "                TERM:'term'",
            "                name = (variable",
            "                  text = DEC:'1')",
            "                (pops_common",
            "                  (pops_then",
            "                    THEN:'then'",
            "                    (popst_common",
            "                      (popst_null",
            "                        LOAD_BALANCE:'load-balance'",
            "                        (null_filler",
            "                          PER_PACKET:'per-packet')))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_policy_options",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_community",
            "              COMMUNITY:'community'",
            "              name = (variable",
            "                text = FABRIC:'fabric')",
            "              (poc_members",
            "                MEMBERS:'members'",
            "                (extended_community",
            "                  (ec_named",
            "                    (ec_type",
            "                      TARGET:'target'  <== mode:M_Members)",
            "                    COLON:':'  <== mode:M_Members",
            "                    (ec_administrator",
            "                      (administrator_dec",
            "                        DEC:'1'  <== mode:M_Members))",
            "                    COLON:':'  <== mode:M_Members",
            "                    assigned_number = DEC:'1'  <== mode:M_Members))))))))",
            "    NEWLINE:'\\n'  <== mode:M_Members)",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_policy_options",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_community",
            "              COMMUNITY:'community'",
            "              name = (variable",
            "                text = VARIABLE:'vni-100')",
            "              (poc_members",
            "                MEMBERS:'members'",
            "                (extended_community",
            "                  (ec_named",
            "                    (ec_type",
            "                      TARGET:'target'  <== mode:M_Members)",
            "                    COLON:':'  <== mode:M_Members",
            "                    (ec_administrator",
            "                      (administrator_dec",
            "                        DEC:'100'  <== mode:M_Members))",
            "                    COLON:':'  <== mode:M_Members",
            "                    assigned_number = DEC:'100'  <== mode:M_Members))))))))",
            "    NEWLINE:'\\n'  <== mode:M_Members)",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_policy_options",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_community",
            "              COMMUNITY:'community'",
            "              name = (variable",
            "                text = VARIABLE:'vni-101')",
            "              (poc_members",
            "                MEMBERS:'members'",
            "                (extended_community",
            "                  (ec_named",
            "                    (ec_type",
            "                      TARGET:'target'  <== mode:M_Members)",
            "                    COLON:':'  <== mode:M_Members",
            "                    (ec_administrator",
            "                      (administrator_dec",
            "                        DEC:'101'  <== mode:M_Members))",
            "                    COLON:':'  <== mode:M_Members",
            "                    assigned_number = DEC:'101'  <== mode:M_Members))))))))",
            "    NEWLINE:'\\n'  <== mode:M_Members)",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_routing_instances",
            "            ROUTING_INSTANCES:'routing-instances'",
            "            (ri_named_routing_instance",
            "              name = (variable",
            "                text = VARIABLE:'vr')",
            "              (ri_instance_type",
            "                INSTANCE_TYPE:'instance-type'",
            "                VIRTUAL_ROUTER:'virtual-router'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_routing_instances",
            "            ROUTING_INSTANCES:'routing-instances'",
            "            (ri_named_routing_instance",
            "              name = (variable",
            "                text = VARIABLE:'vr')",
            "              (ri_interface",
            "                INTERFACE:'interface'",
            "                id = (interface_id",
            "                  name = INTERFACE_NAME:'lo0'  <== mode:M_Interface",
            "                  PERIOD:'.'",
            "                  unit = DEC:'1')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_routing_instances",
            "            ROUTING_INSTANCES:'routing-instances'",
            "            (ri_named_routing_instance",
            "              name = (variable",
            "                text = FABRIC:'fabric')",
            "              (ri_vtep_source_interface",
            "                VTEP_SOURCE_INTERFACE:'vtep-source-interface'",
            "                iface = (interface_id",
            "                  name = INTERFACE_NAME:'lo0'  <== mode:M_Interface",
            "                  PERIOD:'.'",
            "                  unit = DEC:'0')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_routing_instances",
            "            ROUTING_INSTANCES:'routing-instances'",
            "            (ri_named_routing_instance",
            "              name = (variable",
            "                text = FABRIC:'fabric')",
            "              (ri_instance_type",
            "                INSTANCE_TYPE:'instance-type'",
            "                VIRTUAL_SWITCH:'virtual-switch'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_routing_instances",
            "            ROUTING_INSTANCES:'routing-instances'",
            "            (ri_named_routing_instance",
            "              name = (variable",
            "                text = FABRIC:'fabric')",
            "              (ri_vrf_import",
            "                VRF_IMPORT:'vrf-import'",
            "                name = (variable",
            "                  text = FABRIC:'fabric')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_routing_instances",
            "            ROUTING_INSTANCES:'routing-instances'",
            "            (ri_named_routing_instance",
            "              name = (variable",
            "                text = FABRIC:'fabric')",
            "              (ri_vrf_target",
            "                VRF_TARGET:'vrf-target'",
            "                (riv_community",
            "                  (extended_community",
            "                    (ec_named",
            "                      (ec_type",
            "                        TARGET:'target'  <== mode:M_VrfTarget)",
            "                      COLON:':'  <== mode:M_VrfTarget",
            "                      (ec_administrator",
            "                        (administrator_dec",
            "                          DEC:'1'  <== mode:M_VrfTarget))",
            "                      COLON:':'  <== mode:M_VrfTarget",
            "                      assigned_number = DEC:'1'  <== mode:M_VrfTarget)))))))))",
            "    NEWLINE:'\\n'  <== mode:M_VrfTarget)",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_routing_instances",
            "            ROUTING_INSTANCES:'routing-instances'",
            "            (ri_named_routing_instance",
            "              name = (variable",
            "                text = FABRIC:'fabric')",
            "              (ri_protocols",
            "                (s_protocols",
            "                  PROTOCOLS:'protocols'",
            "                  (p_evpn",
            "                    EVPN:'evpn'",
            "                    (e_encapsulation",
            "                      ENCAPSULATION:'encapsulation'",
            "                      VXLAN:'vxlan')))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_routing_instances",
            "            ROUTING_INSTANCES:'routing-instances'",
            "            (ri_named_routing_instance",
            "              name = (variable",
            "                text = FABRIC:'fabric')",
            "              (ri_protocols",
            "                (s_protocols",
            "                  PROTOCOLS:'protocols'",
            "                  (p_evpn",
            "                    EVPN:'evpn'",
            "                    (e_extended_vni_list",
            "                      EXTENDED_VNI_LIST:'extended-vni-list'",
            "                      (range",
            "                        (subrange",
            "                          low = DEC:'100')))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_routing_instances",
            "            ROUTING_INSTANCES:'routing-instances'",
            "            (ri_named_routing_instance",
            "              name = (variable",
            "                text = FABRIC:'fabric')",
            "              (ri_protocols",
            "                (s_protocols",
            "                  PROTOCOLS:'protocols'",
            "                  (p_evpn",
            "                    EVPN:'evpn'",
            "                    (e_extended_vni_list",
            "                      EXTENDED_VNI_LIST:'extended-vni-list'",
            "                      (range",
            "                        (subrange",
            "                          low = DEC:'101')))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_routing_instances",
            "            ROUTING_INSTANCES:'routing-instances'",
            "            (ri_named_routing_instance",
            "              name = (variable",
            "                text = FABRIC:'fabric')",
            "              (ri_protocols",
            "                (s_protocols",
            "                  PROTOCOLS:'protocols'",
            "                  (p_evpn",
            "                    EVPN:'evpn'",
            "                    (e_vni_options",
            "                      VNI_OPTIONS:'vni-options'",
            "                      VNI:'vni'",
            "                      id = DEC:'100'",
            "                      (evo_vrf_target",
            "                        VRF_TARGET:'vrf-target'",
            "                        (evovt_community",
            "                          comm = (vt_community",
            "                            TARGET:'target'  <== mode:M_VrfTarget",
            "                            COLON:':'  <== mode:M_VrfTarget",
            "                            x = DEC:'100'  <== mode:M_VrfTarget",
            "                            COLON:':'  <== mode:M_VrfTarget",
            "                            y = DEC:'100'  <== mode:M_VrfTarget))))))))))))",
            "    NEWLINE:'\\n'  <== mode:M_VrfTarget)",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_routing_instances",
            "            ROUTING_INSTANCES:'routing-instances'",
            "            (ri_named_routing_instance",
            "              name = (variable",
            "                text = FABRIC:'fabric')",
            "              (ri_protocols",
            "                (s_protocols",
            "                  PROTOCOLS:'protocols'",
            "                  (p_evpn",
            "                    EVPN:'evpn'",
            "                    (e_vni_options",
            "                      VNI_OPTIONS:'vni-options'",
            "                      VNI:'vni'",
            "                      id = DEC:'101'",
            "                      (evo_vrf_target",
            "                        VRF_TARGET:'vrf-target'",
            "                        (evovt_community",
            "                          comm = (vt_community",
            "                            TARGET:'target'  <== mode:M_VrfTarget",
            "                            COLON:':'  <== mode:M_VrfTarget",
            "                            x = DEC:'101'  <== mode:M_VrfTarget",
            "                            COLON:':'  <== mode:M_VrfTarget",
            "                            y = DEC:'101'  <== mode:M_VrfTarget))))))))))))",
            "    NEWLINE:'\\n'  <== mode:M_VrfTarget)",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_routing_instances",
            "            ROUTING_INSTANCES:'routing-instances'",
            "            (ri_named_routing_instance",
            "              name = (variable",
            "                text = FABRIC:'fabric')",
            "              (ri_protocols",
            "                (s_protocols",
            "                  PROTOCOLS:'protocols'",
            "                  (p_evpn",
            "                    EVPN:'evpn'",
            "                    (e_multicast_mode",
            "                      MULTICAST_MODE:'multicast-mode'",
            "                      INGRESS_REPLICATION:'ingress-replication')))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_routing_instances",
            "            ROUTING_INSTANCES:'routing-instances'",
            "            (ri_named_routing_instance",
            "              name = (variable",
            "                text = FABRIC:'fabric')",
            "              (ri_protocols",
            "                (s_protocols",
            "                  PROTOCOLS:'protocols'",
            "                  (p_evpn",
            "                    EVPN:'evpn'",
            "                    (e_default_gateway",
            "                      DEFAULT_GATEWAY:'default-gateway'",
            "                      NO_GATEWAY_COMMUNITY:'no-gateway-community')))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_routing_instances",
            "            ROUTING_INSTANCES:'routing-instances'",
            "            (ri_named_routing_instance",
            "              name = (variable",
            "                text = FABRIC:'fabric')",
            "              (ri_null",
            "                BRIDGE_DOMAINS:'bridge-domains'",
            "                (null_filler",
            "                  VARIABLE:'bd_100'",
            "                  VLAN_ID:'vlan-id'",
            "                  DEC:'100')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_routing_instances",
            "            ROUTING_INSTANCES:'routing-instances'",
            "            (ri_named_routing_instance",
            "              name = (variable",
            "                text = FABRIC:'fabric')",
            "              (ri_null",
            "                BRIDGE_DOMAINS:'bridge-domains'",
            "                (null_filler",
            "                  VARIABLE:'bd_100'",
            "                  VARIABLE:'routing-interface'",
            "                  VARIABLE:'irb.100')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_routing_instances",
            "            ROUTING_INSTANCES:'routing-instances'",
            "            (ri_named_routing_instance",
            "              name = (variable",
            "                text = FABRIC:'fabric')",
            "              (ri_null",
            "                BRIDGE_DOMAINS:'bridge-domains'",
            "                (null_filler",
            "                  VARIABLE:'bd_100'",
            "                  VXLAN:'vxlan'",
            "                  VNI:'vni'",
            "                  DEC:'100')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_routing_instances",
            "            ROUTING_INSTANCES:'routing-instances'",
            "            (ri_named_routing_instance",
            "              name = (variable",
            "                text = FABRIC:'fabric')",
            "              (ri_null",
            "                BRIDGE_DOMAINS:'bridge-domains'",
            "                (null_filler",
            "                  VARIABLE:'bd_101'",
            "                  VLAN_ID:'vlan-id'",
            "                  DEC:'101')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_routing_instances",
            "            ROUTING_INSTANCES:'routing-instances'",
            "            (ri_named_routing_instance",
            "              name = (variable",
            "                text = FABRIC:'fabric')",
            "              (ri_null",
            "                BRIDGE_DOMAINS:'bridge-domains'",
            "                (null_filler",
            "                  VARIABLE:'bd_101'",
            "                  VARIABLE:'routing-interface'",
            "                  VARIABLE:'irb.101')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_routing_instances",
            "            ROUTING_INSTANCES:'routing-instances'",
            "            (ri_named_routing_instance",
            "              name = (variable",
            "                text = FABRIC:'fabric')",
            "              (ri_null",
            "                BRIDGE_DOMAINS:'bridge-domains'",
            "                (null_filler",
            "                  VARIABLE:'bd_101'",
            "                  VXLAN:'vxlan'",
            "                  VNI:'vni'",
            "                  DEC:'101')))))))",
            "    NEWLINE:'\\n')",
            "  EOF:<EOF>)"
          ]
        },
        "configs/host2" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'host2'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_interface",
            "      INTERFACE:'interface'",
            "      iname = (interface_name",
            "        name_prefix_alpha = M_Interface_PREFIX:'eth'  <== mode:M_Interface",
            "        (range",
            "          (subrange",
            "            low = DEC:'0'  <== mode:M_Interface)))",
            "      NEWLINE:'\\n'  <== mode:M_Interface",
            "      (if_inner",
            "        (if_ip_address",
            "          IP:'ip'",
            "          ADDRESS:'address'",
            "          prefix = IP_PREFIX:'2.130.0.1/24'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_interface",
            "      INTERFACE:'interface'",
            "      iname = (interface_name",
            "        name_prefix_alpha = M_Interface_PREFIX:'eth'  <== mode:M_Interface",
            "        (range",
            "          (subrange",
            "            low = DEC:'1'  <== mode:M_Interface)))",
            "      NEWLINE:'\\n'  <== mode:M_Interface",
            "      (if_inner",
            "        (if_ip_address",
            "          IP:'ip'",
            "          ADDRESS:'address'",
            "          prefix = IP_PREFIX:'2.131.0.1/24'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_router_ospf",
            "      ROUTER:'router'",
            "      OSPF:'ospf'",
            "      name = (variable",
            "        DEC:'1')",
            "      NEWLINE:'\\n'",
            "      (ro_router_id",
            "        ROUTER_ID:'router-id'",
            "        ip = IP_ADDRESS:'2.130.0.1'",
            "        NEWLINE:'\\n')",
            "      (ro_network",
            "        NETWORK:'network'",
            "        prefix = IP_PREFIX:'2.130.0.0/24'",
            "        AREA:'area'",
            "        area_int = DEC:'0'",
            "        NEWLINE:'\\n')",
            "      (ro_network",
            "        NETWORK:'network'",
            "        prefix = IP_PREFIX:'2.131.0.0/24'",
            "        AREA:'area'",
            "        area_int = DEC:'0'",
            "        NEWLINE:'\\n')))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/if_tag_is" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'if_tag_is'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (route_policy_stanza",
            "      ROUTE_POLICY:'route-policy'",
            "      name = (variable",
            "        VARIABLE:'FOO')",
            "      NEWLINE:'\\n'",
            "      (rp_stanza",
            "        (if_rp_stanza",
            "          IF:'if'",
            "          (boolean_rp_stanza",
            "            (boolean_and_rp_stanza",
            "              (boolean_not_rp_stanza",
            "                (boolean_simple_rp_stanza",
            "                  (boolean_tag_is_rp_stanza",
            "                    TAG:'tag'",
            "                    (int_comp",
            "                      IS:'is')",
            "                    (int_expr",
            "                      DEC:'12'))))))",
            "          THEN:'then'",
            "          NEWLINE:'\\n'",
            "          (rp_stanza",
            "            (set_rp_stanza",
            "              (set_tag_rp_stanza",
            "                SET:'set'",
            "                TAG:'tag'",
            "                tag = (int_expr",
            "                  DEC:'12')",
            "                NEWLINE:'\\n')))",
            "          (rp_stanza",
            "            (disposition_rp_stanza",
            "              PASS:'pass'",
            "              NEWLINE:'\\n'))",
            "          ENDIF:'endif'",
            "          NEWLINE:'\\n'))",
            "      (rp_stanza",
            "        (if_rp_stanza",
            "          IF:'if'",
            "          (boolean_rp_stanza",
            "            (boolean_and_rp_stanza",
            "              (boolean_not_rp_stanza",
            "                (boolean_simple_rp_stanza",
            "                  (boolean_tag_is_rp_stanza",
            "                    TAG:'tag'",
            "                    (int_comp",
            "                      EQ:'eq')",
            "                    (int_expr",
            "                      DEC:'13'))))))",
            "          THEN:'then'",
            "          NEWLINE:'\\n'",
            "          (rp_stanza",
            "            (set_rp_stanza",
            "              (set_tag_rp_stanza",
            "                SET:'set'",
            "                TAG:'tag'",
            "                tag = (int_expr",
            "                  DEC:'13')",
            "                NEWLINE:'\\n')))",
            "          (rp_stanza",
            "            (disposition_rp_stanza",
            "              PASS:'pass'",
            "              NEWLINE:'\\n'))",
            "          ENDIF:'endif'",
            "          NEWLINE:'\\n'))",
            "      (rp_stanza",
            "        (if_rp_stanza",
            "          IF:'if'",
            "          (boolean_rp_stanza",
            "            (boolean_and_rp_stanza",
            "              (boolean_not_rp_stanza",
            "                (boolean_simple_rp_stanza",
            "                  (boolean_tag_is_rp_stanza",
            "                    TAG:'tag'",
            "                    (int_comp",
            "                      GE:'ge')",
            "                    (int_expr",
            "                      DEC:'14'))))))",
            "          THEN:'then'",
            "          NEWLINE:'\\n'",
            "          (rp_stanza",
            "            (set_rp_stanza",
            "              (set_tag_rp_stanza",
            "                SET:'set'",
            "                TAG:'tag'",
            "                tag = (int_expr",
            "                  DEC:'100')",
            "                NEWLINE:'\\n')))",
            "          (rp_stanza",
            "            (disposition_rp_stanza",
            "              PASS:'pass'",
            "              NEWLINE:'\\n'))",
            "          ENDIF:'endif'",
            "          NEWLINE:'\\n'))",
            "      (rp_stanza",
            "        (if_rp_stanza",
            "          IF:'if'",
            "          (boolean_rp_stanza",
            "            (boolean_and_rp_stanza",
            "              (boolean_not_rp_stanza",
            "                (boolean_simple_rp_stanza",
            "                  (boolean_tag_is_rp_stanza",
            "                    TAG:'tag'",
            "                    (int_comp",
            "                      LE:'le')",
            "                    (int_expr",
            "                      DEC:'10'))))))",
            "          THEN:'then'",
            "          NEWLINE:'\\n'",
            "          (rp_stanza",
            "            (set_rp_stanza",
            "              (set_tag_rp_stanza",
            "                SET:'set'",
            "                TAG:'tag'",
            "                tag = (int_expr",
            "                  DEC:'9')",
            "                NEWLINE:'\\n')))",
            "          (rp_stanza",
            "            (disposition_rp_stanza",
            "              PASS:'pass'",
            "              NEWLINE:'\\n'))",
            "          ENDIF:'endif'",
            "          NEWLINE:'\\n'))",
            "      END_POLICY:'end-policy'",
            "      NEWLINE:'\\n\\n'))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/interface_exit" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'interface_exit'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_interface",
            "      INTERFACE:'interface'",
            "      iname = (interface_name",
            "        name_prefix_alpha = M_Interface_PREFIX:'Vlan'  <== mode:M_Interface",
            "        (range",
            "          (subrange",
            "            low = DEC:'803'  <== mode:M_Interface)))",
            "      NEWLINE:'\\n'  <== mode:M_Interface",
            "      (if_inner",
            "        (if_ip_address",
            "          IP:'ip'",
            "          ADDRESS:'address'",
            "          prefix = IP_PREFIX:'10.12.12.1/23'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          NO:'no'",
            "          IP:'ip'",
            "          REDIRECTS:'redirects'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_autostate",
            "          NO:'no'",
            "          AUTOSTATE:'autostate'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          IPV6:'ipv6'",
            "          ADDRESS:'address'",
            "          IPV6_PREFIX:'2222:2222:222:222::1/64'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          IPV6:'ipv6'",
            "          ND:'nd'",
            "          VARIABLE:'suppress-ra'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          IPV6:'ipv6'",
            "          ND:'nd'",
            "          PREFIX:'prefix'",
            "          IPV6_PREFIX:'2222:2222:222:222::/64'",
            "          VARIABLE:'infinite'",
            "          VARIABLE:'infinite'",
            "          VARIABLE:'no-autoconfig'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          IPV6:'ipv6'",
            "          ND:'nd'",
            "          VARIABLE:'managed-config-flag'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_ip_dhcp",
            "          IP:'ip'",
            "          DHCP:'dhcp'",
            "          (ifdhcp_relay",
            "            RELAY:'relay'",
            "            (ifdhcpr_address",
            "              ADDRESS:'address'",
            "              address = IP_ADDRESS:'10.22.33.111'",
            "              NEWLINE:'\\n'))))",
            "      (if_inner",
            "        (if_ip_dhcp",
            "          IP:'ip'",
            "          DHCP:'dhcp'",
            "          (ifdhcp_relay",
            "            RELAY:'relay'",
            "            (ifdhcpr_address",
            "              ADDRESS:'address'",
            "              address = IP_ADDRESS:'10.22.33.112'",
            "              NEWLINE:'\\n'))))",
            "      (if_inner",
            "        (if_shutdown",
            "          NO:'no'",
            "          SHUTDOWN:'shutdown'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_mtu",
            "          MTU:'mtu'",
            "          mtu_size = DEC:'9100'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          EXIT:'exit'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_interface",
            "      INTERFACE:'interface'",
            "      iname = (interface_name",
            "        name_prefix_alpha = M_Interface_PREFIX:'Vlan'  <== mode:M_Interface",
            "        (range",
            "          (subrange",
            "            low = DEC:'303'  <== mode:M_Interface)))",
            "      NEWLINE:'\\n'  <== mode:M_Interface",
            "      (if_inner",
            "        (if_ip_address",
            "          IP:'ip'",
            "          ADDRESS:'address'",
            "          prefix = IP_PREFIX:'10.22.33.10/29'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          NO:'no'",
            "          IP:'ip'",
            "          REDIRECTS:'redirects'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_autostate",
            "          NO:'no'",
            "          AUTOSTATE:'autostate'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_shutdown",
            "          NO:'no'",
            "          SHUTDOWN:'shutdown'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_mtu",
            "          MTU:'mtu'",
            "          mtu_size = DEC:'9100'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          EXIT:'exit'",
            "          NEWLINE:'\\n'))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/interface_name" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'interface_name'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_interface",
            "      INTERFACE:'interface'",
            "      iname = (interface_name",
            "        name_prefix_alpha = M_Interface_PREFIX:'FastEthernet'  <== mode:M_Interface",
            "        DEC:'12'  <== mode:M_Interface",
            "        FORWARD_SLASH:'/'  <== mode:M_Interface",
            "        (range",
            "          (subrange",
            "            low = DEC:'13'  <== mode:M_Interface)))",
            "      NEWLINE:'\\n'  <== mode:M_Interface))",
            "  (stanza",
            "    (s_interface",
            "      INTERFACE:'interface'",
            "      iname = (interface_name",
            "        name_prefix_alpha = M_Interface_PREFIX:'Vlan'  <== mode:M_Interface",
            "        (range",
            "          (subrange",
            "            low = DEC:'100'  <== mode:M_Interface)))",
            "      NEWLINE:'\\n'  <== mode:M_Interface))",
            "  (stanza",
            "    (s_interface",
            "      INTERFACE:'interface'",
            "      iname = (interface_name",
            "        name_prefix_alpha = M_Interface_PREFIX:'Port-channel'  <== mode:M_Interface",
            "        (range",
            "          (subrange",
            "            low = DEC:'1'  <== mode:M_Interface)))",
            "      NEWLINE:'\\n'  <== mode:M_Interface))",
            "  (stanza",
            "    (s_interface",
            "      INTERFACE:'interface'",
            "      PRECONFIGURE:'preconfigure'  <== mode:M_Interface",
            "      iname = (interface_name",
            "        name_prefix_alpha = M_Interface_PREFIX:'HundredGigE'  <== mode:M_Interface",
            "        DEC:'0'  <== mode:M_Interface",
            "        FORWARD_SLASH:'/'  <== mode:M_Interface",
            "        DEC:'6'  <== mode:M_Interface",
            "        FORWARD_SLASH:'/'  <== mode:M_Interface",
            "        DEC:'0'  <== mode:M_Interface",
            "        FORWARD_SLASH:'/'  <== mode:M_Interface",
            "        (range",
            "          (subrange",
            "            low = DEC:'8'  <== mode:M_Interface)))",
            "      NEWLINE:'\\n'  <== mode:M_Interface",
            "      (if_inner",
            "        (if_shutdown",
            "          SHUTDOWN:'shutdown'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        END:'end'",
            "        NEWLINE:'\\n\\n')))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/interface_sdr" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'interface_sdr'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_interface",
            "      INTERFACE:'interface'",
            "      iname = (interface_name",
            "        name_prefix_alpha = M_Interface_PREFIX:'Loopback'  <== mode:M_Interface",
            "        (range",
            "          (subrange",
            "            low = DEC:'0'  <== mode:M_Interface)))",
            "      NEWLINE:'\\n'  <== mode:M_Interface",
            "      (if_inner",
            "        (if_description",
            "          (description_line",
            "            DESCRIPTION:'description'",
            "            text = RAW_TEXT:' SLO-AGG1 lo0 (Loopback0 Address)'  <== mode:M_Description",
            "            NEWLINE:'\\n'  <== mode:M_Description)))",
            "      (if_inner",
            "        (if_ip_address",
            "          IP:'ip'",
            "          ADDRESS:'address'",
            "          ip = IP_ADDRESS:'137.164.16.80'",
            "          subnet = IP_ADDRESS:'255.255.255.255'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          NO:'no'",
            "          IP:'ip'",
            "          DIRECTED_BROADCAST:'directed-broadcast'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          IP:'ip'",
            "          PIM:'pim'",
            "          SPARSE_MODE:'sparse-mode'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          IP:'ip'",
            "          SDR:'sdr'",
            "          LISTEN:'listen'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          IPV6:'ipv6'",
            "          ADDRESS:'address'",
            "          IPV6_PREFIX:'2607:F380::118:9A41:500/124'",
            "          NEWLINE:'\\n'))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/ios_bfd" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'ios_bfd'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_bfd_template",
            "      BFD_TEMPLATE:'bfd-template'",
            "      SINGLE_HOP:'single-hop'",
            "      name = (variable_permissive",
            "        VARIABLE:'GRE')",
            "      NEWLINE:'\\n'",
            "      (bfd_template_null",
            "        INTERVAL:'interval'",
            "        (null_rest_of_line",
            "          VARIABLE:'min-tx'",
            "          DEC:'800'",
            "          MIN_RX:'min-rx'",
            "          DEC:'800'",
            "          MULTIPLIER:'multiplier'",
            "          DEC:'3'",
            "          NEWLINE:'\\n'))",
            "      (bfd_template_null",
            "        ECHO:'echo'",
            "        (null_rest_of_line",
            "          NEWLINE:'\\n'))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/ios_bgp" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'ios_bgp'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (router_bgp_stanza",
            "      ROUTER:'router'",
            "      BGP:'bgp'",
            "      procnum = (bgp_asn",
            "        asn = DEC:'1')",
            "      NEWLINE:'\\n'",
            "      (router_bgp_stanza_tail",
            "        (neighbor_flat_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          ip = IP_ADDRESS:'1.2.3.4'  <== mode:M_NEIGHBOR",
            "          (bgp_tail",
            "            (advertise_map_bgp_tail",
            "              ADVERTISE_MAP:'advertise-map'",
            "              am_name = (variable",
            "                VARIABLE:'ADVERTISE_MAP')",
            "              EXIST_MAP:'exist-map'",
            "              em_name = (variable",
            "                VARIABLE:'EXIST_MAP')",
            "              NEWLINE:'\\n'))))",
            "      (router_bgp_stanza_tail",
            "        (neighbor_flat_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          ip6 = IPV6_ADDRESS:'1::1'  <== mode:M_NEIGHBOR",
            "          (remote_as_bgp_tail",
            "            REMOTE_AS:'remote-as'",
            "            remote = (bgp_asn",
            "              asn = DEC:'2')",
            "            NEWLINE:'\\n')))",
            "      (router_bgp_stanza_tail",
            "        (address_family_rb_stanza",
            "          (address_family_header",
            "            ADDRESS_FAMILY:'address-family'",
            "            af = (bgp_address_family",
            "              IPV4:'ipv4')",
            "            NEWLINE:'\\n')",
            "          (neighbor_flat_rb_stanza",
            "            NEIGHBOR:'neighbor'",
            "            peergroup = VARIABLE:'UNDEFINED_PEER_GROUP'  <== mode:M_NEIGHBOR",
            "            (bgp_tail",
            "              (activate_bgp_tail",
            "                ACTIVATE:'activate'",
            "                NEWLINE:'\\n')))",
            "          (address_family_footer)))",
            "      (router_bgp_stanza_tail",
            "        (address_family_rb_stanza",
            "          (address_family_header",
            "            ADDRESS_FAMILY:'address-family'",
            "            af = (bgp_address_family",
            "              VPNV6:'vpnv6')",
            "            NEWLINE:'\\n')",
            "          (neighbor_flat_rb_stanza",
            "            NEIGHBOR:'neighbor'",
            "            ip6 = IPV6_ADDRESS:'1::1'  <== mode:M_NEIGHBOR",
            "            (bgp_tail",
            "              (activate_bgp_tail",
            "                ACTIVATE:'activate'",
            "                NEWLINE:'\\n')))",
            "          (neighbor_flat_rb_stanza",
            "            NEIGHBOR:'neighbor'",
            "            ip6 = IPV6_ADDRESS:'1::1'  <== mode:M_NEIGHBOR",
            "            (bgp_tail",
            "              (prefix_list_bgp_tail",
            "                PREFIX_LIST:'prefix-list'",
            "                list_name = VARIABLE:'VPNV6_PL'  <== mode:M_Name",
            "                IN:'in'",
            "                NEWLINE:'\\n')))",
            "          (address_family_footer",
            "            EXIT_ADDRESS_FAMILY:'exit-address-family'",
            "            NEWLINE:'\\n')))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/ios_bgp_aggregate_address" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'aggAddress'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (router_bgp_stanza",
            "      ROUTER:'router'",
            "      BGP:'bgp'",
            "      procnum = (bgp_asn",
            "        asn = DEC:'52')",
            "      NEWLINE:'\\n'",
            "      (router_bgp_stanza_tail",
            "        (bgp_tail",
            "          (router_id_bgp_tail",
            "            ROUTER_ID:'router-id'",
            "            routerid = IP_ADDRESS:'198.188.136.21'",
            "            NEWLINE:'\\n')))",
            "      (router_bgp_stanza_tail",
            "        (bgp_tail",
            "          (null_bgp_tail",
            "            BGP:'bgp'",
            "            LOG_NEIGHBOR_CHANGES:'log-neighbor-changes'",
            "            (null_rest_of_line",
            "              NEWLINE:'\\n'))))",
            "      (router_bgp_stanza_tail",
            "        (bgp_tail",
            "          (null_bgp_tail",
            "            NO:'no'",
            "            BGP:'bgp'",
            "            DEFAULT:'default'",
            "            (null_rest_of_line",
            "              VARIABLE:'ipv4-unicast'",
            "              NEWLINE:'\\n'))))",
            "      (router_bgp_stanza_tail",
            "        (bgp_tail",
            "          (network_bgp_tail",
            "            NETWORK:'network'",
            "            prefix = IP_PREFIX:'192.154.2.0/24'",
            "            NEWLINE:'\\n')))",
            "      (router_bgp_stanza_tail",
            "        (bgp_tail",
            "          (network6_bgp_tail",
            "            NETWORK:'network'",
            "            prefix = IPV6_PREFIX:'2607:f010:3f9:8000::/52'",
            "            NEWLINE:'\\n')))",
            "      (router_bgp_stanza_tail",
            "        (aggregate_address_rb_stanza",
            "          AGGREGATE_ADDRESS:'aggregate-address'",
            "          prefix = IP_PREFIX:'192.154.2.0/24'",
            "          summary_only = SUMMARY_ONLY:'summary-only'",
            "          NEWLINE:'\\n'))",
            "      (router_bgp_stanza_tail",
            "        (aggregate_address_rb_stanza",
            "          AGGREGATE_ADDRESS:'aggregate-address'",
            "          ipv6_prefix = IPV6_PREFIX:'2607:f010:3f9:8000::/52'",
            "          summary_only = SUMMARY_ONLY:'summary-only'",
            "          NEWLINE:'\\n'))",
            "      (router_bgp_stanza_tail",
            "        (bgp_tail",
            "          (redistribute_connected_bgp_tail",
            "            REDISTRIBUTE:'redistribute'",
            "            CONNECTED:'connected'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (ip_prefix_list_stanza",
            "      IP:'ip'",
            "      PREFIX_LIST:'prefix-list'",
            "      name = (variable",
            "        VARIABLE:'ScienceDMZ-networks'  <== mode:M_Name)",
            "      (ip_prefix_list_tail",
            "        action = (access_list_action",
            "          PERMIT:'permit')",
            "        prefix = IP_PREFIX:'192.154.2.0/24'",
            "        LE:'le'",
            "        maxpl = DEC:'32'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (ipv6_prefix_list_stanza",
            "      IPV6:'ipv6'",
            "      PREFIX_LIST:'prefix-list'",
            "      name = (variable",
            "        VARIABLE:'ScienceDMZ-networks'  <== mode:M_Name)",
            "      NEWLINE:'\\n'",
            "      (ipv6_prefix_list_tail",
            "        SEQ:'seq'",
            "        seqnum = DEC:'10'",
            "        action = (access_list_action",
            "          PERMIT:'permit')",
            "        prefix6 = IPV6_PREFIX:'2607:f010:3f9:8000::/52'",
            "        LE:'le'",
            "        maxpl = DEC:'128'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        END:'end'",
            "        NEWLINE:'\\n\\n')))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/ios_interface" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'ios_interface'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_interface",
            "      INTERFACE:'interface'",
            "      iname = (interface_name",
            "        name_prefix_alpha = M_Interface_PREFIX:'GigabitEthernet'  <== mode:M_Interface",
            "        DEC:'1'  <== mode:M_Interface",
            "        FORWARD_SLASH:'/'  <== mode:M_Interface",
            "        DEC:'0'  <== mode:M_Interface",
            "        FORWARD_SLASH:'/'  <== mode:M_Interface",
            "        (range",
            "          (subrange",
            "            low = DEC:'1'  <== mode:M_Interface)))",
            "      NEWLINE:'\\n'  <== mode:M_Interface",
            "      (if_inner",
            "        (if_service_policy",
            "          SERVICE_POLICY:'service-policy'",
            "          TYPE:'type'",
            "          CONTROL:'control'",
            "          SUBSCRIBER:'subscriber'",
            "          policy_map = (variable",
            "            VARIABLE:'FOOBAR')",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_single",
            "          SPEED:'speed'",
            "          NONEGOTIATE:'nonegotiate'",
            "          NEWLINE:'\\n'))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/ios_standby" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'ios_standby'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_interface",
            "      INTERFACE:'interface'",
            "      iname = (interface_name",
            "        name_prefix_alpha = M_Interface_PREFIX:'Vlan'  <== mode:M_Interface",
            "        (range",
            "          (subrange",
            "            low = DEC:'1000'  <== mode:M_Interface)))",
            "      NEWLINE:'\\n'  <== mode:M_Interface",
            "      (if_inner",
            "        (if_standby",
            "          STANDBY:'standby'",
            "          (standby_version",
            "            VERSION:'version'",
            "            version = (variable_permissive",
            "              DEC:'2'))",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_standby",
            "          STANDBY:'standby'",
            "          (standby_group",
            "            group = DEC:'1001'",
            "            (standby_group_authentication",
            "              AUTHENTICATION:'authentication'",
            "              auth = (variable",
            "                DEC:'012345678901234567890123456789012345678'  <== mode:M_Authentication)))",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_standby",
            "          STANDBY:'standby'",
            "          (standby_group",
            "            group = DEC:'1001'",
            "            (standby_group_ip",
            "              IP:'ip'",
            "              ip = IP_ADDRESS:'1.2.3.4'))",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_standby",
            "          STANDBY:'standby'",
            "          (standby_group",
            "            group = DEC:'1001'",
            "            (standby_group_preempt",
            "              PREEMPT:'preempt'))",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_standby",
            "          STANDBY:'standby'",
            "          (standby_group",
            "            group = DEC:'1001'",
            "            (standby_group_priority",
            "              PRIORITY:'priority'",
            "              priority = DEC:'105'))",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_standby",
            "          STANDBY:'standby'",
            "          (standby_group",
            "            group = DEC:'1001'",
            "            (standby_group_timers",
            "              TIMERS:'timers'",
            "              MSEC:'msec'",
            "              hello_ms = DEC:'500'",
            "              hold_sec = DEC:'2'))",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_standby",
            "          STANDBY:'standby'",
            "          (standby_group",
            "            group = DEC:'1001'",
            "            (standby_group_track",
            "              TRACK:'track'",
            "              group = DEC:'1'",
            "              (track_action",
            "                (track_action_decrement",
            "                  DECREMENT:'decrement'",
            "                  subtrahend = DEC:'20'))))",
            "          NEWLINE:'\\n'))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/ios_template" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'ios_template'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_template",
            "      TEMPLATE:'template'",
            "      (null_rest_of_line",
            "        VARIABLE:'TEMPLATE_NAME'",
            "        NEWLINE:'\\n')",
            "      (template_null",
            "        ACCESS_SESSION:'access-session'",
            "        (null_rest_of_line",
            "          VARIABLE:'port-control'",
            "          AUTO:'auto'",
            "          NEWLINE:'\\n'))",
            "      (template_null",
            "        AUTHENTICATION:'authentication'",
            "        (null_rest_of_line",
            "          VARIABLE:'periodic'  <== mode:M_Authentication",
            "          NEWLINE:'\\n'))",
            "      (template_null",
            "        AUTHENTICATION:'authentication'",
            "        (null_rest_of_line",
            "          VARIABLE:'timer'  <== mode:M_Authentication",
            "          VARIABLE:'reauthenticate'",
            "          DEC:'7200'",
            "          NEWLINE:'\\n'))",
            "      (template_null",
            "        DOT1X:'dot1x'",
            "        (null_rest_of_line",
            "          VARIABLE:'pae'",
            "          VARIABLE:'authenticator'",
            "          NEWLINE:'\\n'))",
            "      (template_null",
            "        MAB:'mab'",
            "        (null_rest_of_line",
            "          NEWLINE:'\\n'))",
            "      (template_null",
            "        RADIUS_SERVER:'radius-server'",
            "        (null_rest_of_line",
            "          VARIABLE:'dead-criteria'",
            "          TIME:'time'",
            "          DEC:'30'",
            "          VARIABLE:'tries'",
            "          DEC:'3'",
            "          NEWLINE:'\\n'))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/ios_xr_acl" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'ios_xr_acl'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_ethernet_services",
            "      ETHERNET_SERVICES:'ethernet-services'",
            "      ACCESS_LIST:'access-list'",
            "      name = (variable_permissive",
            "        VARIABLE:'sc-coe')",
            "      NEWLINE:'\\n'",
            "      (s_ethernet_services_tail",
            "        num = DEC:'10'",
            "        action = (access_list_action",
            "          DENY:'deny')",
            "        src_mac = (xr_mac_specifier",
            "          HOST:'host'",
            "          host = MAC_ADDRESS_LITERAL:'0000.0000.0000')",
            "        dst_mac = (xr_mac_specifier",
            "          ANY:'any')",
            "        NEWLINE:'\\n')",
            "      (s_ethernet_services_tail",
            "        num = DEC:'20'",
            "        action = (access_list_action",
            "          PERMIT:'permit')",
            "        src_mac = (xr_mac_specifier",
            "          ANY:'any')",
            "        dst_mac = (xr_mac_specifier",
            "          ANY:'any')",
            "        NEWLINE:'\\n')))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/ios_xr_bgp" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'ios_xr_bgp'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (router_bgp_stanza",
            "      ROUTER:'router'",
            "      BGP:'bgp'",
            "      procnum = (bgp_asn",
            "        asn = DEC:'1')",
            "      NEWLINE:'\\n'",
            "      (router_bgp_stanza_tail",
            "        (compare_routerid_rb_stanza",
            "          BGP:'bgp'",
            "          BESTPATH:'bestpath'",
            "          COMPARE_ROUTERID:'compare-routerid'",
            "          NEWLINE:'\\n'))",
            "      (router_bgp_stanza_tail",
            "        (address_family_rb_stanza",
            "          (address_family_header",
            "            ADDRESS_FAMILY:'address-family'",
            "            af = (bgp_address_family",
            "              IPV4:'ipv4'",
            "              UNICAST:'unicast')",
            "            NEWLINE:'\\n')",
            "          (additional_paths_receive_xr_rb_stanza",
            "            ADDITIONAL_PATHS:'additional-paths'",
            "            RECEIVE:'receive'",
            "            NEWLINE:'\\n')",
            "          (additional_paths_selection_xr_rb_stanza",
            "            ADDITIONAL_PATHS:'additional-paths'",
            "            SELECTION:'selection'",
            "            ROUTE_POLICY:'route-policy'",
            "            name = (variable",
            "              VARIABLE:'ADDITIONAL_PATHS_POLICY')",
            "            NEWLINE:'\\n')",
            "          (additional_paths_send_xr_rb_stanza",
            "            ADDITIONAL_PATHS:'additional-paths'",
            "            SEND:'send'",
            "            NEWLINE:'\\n')",
            "          (aggregate_address_rb_stanza",
            "            AGGREGATE_ADDRESS:'aggregate-address'",
            "            prefix = IP_PREFIX:'1.0.0.0/8'",
            "            as_set = AS_SET:'as-set'",
            "            summary_only = SUMMARY_ONLY:'summary-only'",
            "            ROUTE_POLICY:'route-policy'",
            "            rp = (variable",
            "              VARIABLE:'AGGREGATE_POLICY')",
            "            NEWLINE:'\\n')",
            "          (bgp_tail",
            "            (redistribute_static_bgp_tail",
            "              REDISTRIBUTE:'redistribute'",
            "              STATIC:'static'",
            "              ROUTE_POLICY:'route-policy'",
            "              policy = VARIABLE:'REDISTRIBUTE_STATIC_POLICY'",
            "              NEWLINE:'\\n'))",
            "          (address_family_footer)))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/ios_xr_bgp_neighbor_group" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'ios_xr_bgp_neighbor_group'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (router_bgp_stanza",
            "      ROUTER:'router'",
            "      BGP:'bgp'",
            "      procnum = (bgp_asn",
            "        asn = DEC:'5555')",
            "      NEWLINE:'\\n'",
            "      (router_bgp_stanza_tail",
            "        (af_group_rb_stanza",
            "          AF_GROUP:'af-group'",
            "          name = (variable",
            "            VARIABLE:'blappety')",
            "          ADDRESS_FAMILY:'address-family'",
            "          (bgp_address_family",
            "            IPV4:'ipv4'",
            "            UNICAST:'unicast')",
            "          NEWLINE:'\\n'",
            "          (bgp_tail",
            "            (send_community_bgp_tail",
            "              SEND_COMMUNITY_EBGP:'send-community-ebgp'",
            "              NEWLINE:'\\n'))",
            "          (bgp_tail",
            "            (remove_private_as_bgp_tail",
            "              REMOVE_PRIVATE_AS:'remove-private-AS'",
            "              NEWLINE:'\\n'))",
            "          (bgp_tail",
            "            (null_bgp_tail",
            "              SOFT_RECONFIGURATION:'soft-reconfiguration'",
            "              (null_rest_of_line",
            "                INBOUND:'inbound'",
            "                ALWAYS:'always'",
            "                NEWLINE:'\\n')))))",
            "      (router_bgp_stanza_tail",
            "        (af_group_rb_stanza",
            "          AF_GROUP:'af-group'",
            "          name = (variable",
            "            VARIABLE:'blabbety')",
            "          ADDRESS_FAMILY:'address-family'",
            "          (bgp_address_family",
            "            IPV6:'ipv6'",
            "            UNICAST:'unicast')",
            "          NEWLINE:'\\n'",
            "          (bgp_tail",
            "            (send_community_bgp_tail",
            "              SEND_COMMUNITY_EBGP:'send-community-ebgp'",
            "              NEWLINE:'\\n'))",
            "          (bgp_tail",
            "            (remove_private_as_bgp_tail",
            "              REMOVE_PRIVATE_AS:'remove-private-AS'",
            "              NEWLINE:'\\n'))",
            "          (bgp_tail",
            "            (null_bgp_tail",
            "              SOFT_RECONFIGURATION:'soft-reconfiguration'",
            "              (null_rest_of_line",
            "                INBOUND:'inbound'",
            "                ALWAYS:'always'",
            "                NEWLINE:'\\n')))))",
            "      (router_bgp_stanza_tail",
            "        (session_group_rb_stanza",
            "          SESSION_GROUP:'session-group'",
            "          name = (variable",
            "            VARIABLE:'blibber')",
            "          NEWLINE:'\\n'",
            "          (remote_as_bgp_tail",
            "            REMOTE_AS:'remote-as'",
            "            remote = (bgp_asn",
            "              asn = DEC:'12345')",
            "            NEWLINE:'\\n')",
            "          (use_session_group_bgp_tail",
            "            USE:'use'",
            "            SESSION_GROUP:'session-group'",
            "            name = (variable",
            "              VARIABLE:'blabber')",
            "            NEWLINE:'\\n')",
            "          (bgp_tail",
            "            (description_bgp_tail",
            "              (description_line",
            "                DESCRIPTION:'description'",
            "                text = RAW_TEXT:' Blibber'  <== mode:M_Description",
            "                NEWLINE:'\\n'  <== mode:M_Description)))))",
            "      (router_bgp_stanza_tail",
            "        (neighbor_group_rb_stanza",
            "          NEIGHBOR_GROUP:'neighbor-group'",
            "          name = (variable",
            "            VARIABLE:'BGPMonitor')",
            "          NEWLINE:'\\n'",
            "          (remote_as_bgp_tail",
            "            REMOTE_AS:'remote-as'",
            "            remote = (bgp_asn",
            "              asn = DEC:'65202')",
            "            NEWLINE:'\\n')",
            "          (update_source_bgp_tail",
            "            UPDATE_SOURCE:'update-source'",
            "            source = (interface_name",
            "              name_prefix_alpha = M_Interface_PREFIX:'Loopback'  <== mode:M_Interface",
            "              (range",
            "                (subrange",
            "                  low = DEC:'0'  <== mode:M_Interface)))",
            "            NEWLINE:'\\n'  <== mode:M_Interface)",
            "          (address_family_rb_stanza",
            "            (address_family_header",
            "              ADDRESS_FAMILY:'address-family'",
            "              af = (bgp_address_family",
            "                IPV4:'ipv4'",
            "                UNICAST:'unicast')",
            "              NEWLINE:'\\n')",
            "            (bgp_tail",
            "              (route_policy_bgp_tail",
            "                ROUTE_POLICY:'route-policy'",
            "                name = (variable",
            "                  VARIABLE:'deny_bgp_routes')",
            "                IN:'in'",
            "                NEWLINE:'\\n'))",
            "            (bgp_tail",
            "              (route_policy_bgp_tail",
            "                ROUTE_POLICY:'route-policy'",
            "                name = (variable",
            "                  VARIABLE:'advertise_fooey_dc_and_isp_routes_ipv4')",
            "                OUT:'out'",
            "                NEWLINE:'\\n'))",
            "            (address_family_footer))",
            "          (address_family_rb_stanza",
            "            (address_family_header",
            "              ADDRESS_FAMILY:'address-family'",
            "              af = (bgp_address_family",
            "                IPV4:'ipv4'",
            "                MULTICAST:'multicast')",
            "              NEWLINE:'\\n')",
            "            (bgp_tail",
            "              (route_policy_bgp_tail",
            "                ROUTE_POLICY:'route-policy'",
            "                name = (variable",
            "                  VARIABLE:'deny_bgp_routes')",
            "                IN:'in'",
            "                NEWLINE:'\\n'))",
            "            (bgp_tail",
            "              (route_policy_bgp_tail",
            "                ROUTE_POLICY:'route-policy'",
            "                name = (variable",
            "                  VARIABLE:'advertise_fooey_dc_and_isp_routes_ipv4')",
            "                OUT:'out'",
            "                NEWLINE:'\\n'))",
            "            (address_family_footer))))",
            "      (router_bgp_stanza_tail",
            "        (neighbor_group_rb_stanza",
            "          NEIGHBOR_GROUP:'neighbor-group'",
            "          name = (variable",
            "            VARIABLE:'foobar-iBGP_ipv4')",
            "          NEWLINE:'\\n'",
            "          (use_neighbor_group_bgp_tail",
            "            USE:'use'",
            "            NEIGHBOR_GROUP:'neighbor-group'",
            "            name = (variable",
            "              VARIABLE:'BGPMonitor')",
            "            NEWLINE:'\\n')",
            "          (use_session_group_bgp_tail",
            "            USE:'use'",
            "            SESSION_GROUP:'session-group'",
            "            name = (variable",
            "              VARIABLE:'bippety')",
            "            NEWLINE:'\\n')",
            "          (remote_as_bgp_tail",
            "            REMOTE_AS:'remote-as'",
            "            remote = (bgp_asn",
            "              asn = DEC:'5555')",
            "            NEWLINE:'\\n')",
            "          (update_source_bgp_tail",
            "            UPDATE_SOURCE:'update-source'",
            "            source = (interface_name",
            "              name_prefix_alpha = M_Interface_PREFIX:'Loopback'  <== mode:M_Interface",
            "              (range",
            "                (subrange",
            "                  low = DEC:'0'  <== mode:M_Interface)))",
            "            NEWLINE:'\\n'  <== mode:M_Interface)))",
            "      (router_bgp_stanza_tail",
            "        (bgp_tail",
            "          (null_bgp_tail",
            "            SESSION_OPEN_MODE:'session-open-mode'",
            "            (null_rest_of_line",
            "              BOTH:'both'",
            "              NEWLINE:'\\n'))))",
            "      (router_bgp_stanza_tail",
            "        (address_family_rb_stanza",
            "          (address_family_header",
            "            ADDRESS_FAMILY:'address-family'",
            "            af = (bgp_address_family",
            "              IPV4:'ipv4'",
            "              UNICAST:'unicast')",
            "            NEWLINE:'\\n')",
            "          (bgp_tail",
            "            (route_policy_bgp_tail",
            "              ROUTE_POLICY:'route-policy'",
            "              name = (variable",
            "                VARIABLE:'advertise_fooey_routes_only')",
            "              OUT:'out'",
            "              NEWLINE:'\\n'))",
            "          (bgp_tail",
            "            (null_bgp_tail",
            "              SOFT_RECONFIGURATION:'soft-reconfiguration'",
            "              (null_rest_of_line",
            "                INBOUND:'inbound'",
            "                ALWAYS:'always'",
            "                NEWLINE:'\\n')))",
            "          (address_family_footer)))",
            "      (router_bgp_stanza_tail",
            "        (address_family_rb_stanza",
            "          (address_family_header",
            "            ADDRESS_FAMILY:'address-family'",
            "            af = (bgp_address_family",
            "              IPV4:'ipv4'",
            "              MULTICAST:'multicast')",
            "            NEWLINE:'\\n')",
            "          (bgp_tail",
            "            (null_bgp_tail",
            "              SOFT_RECONFIGURATION:'soft-reconfiguration'",
            "              (null_rest_of_line",
            "                INBOUND:'inbound'",
            "                ALWAYS:'always'",
            "                NEWLINE:'\\n')))",
            "          (address_family_footer)))",
            "      (router_bgp_stanza_tail",
            "        (neighbor_group_rb_stanza",
            "          NEIGHBOR_GROUP:'neighbor-group'",
            "          name = (variable",
            "            VARIABLE:'foobar-iBGP_ipv6')",
            "          NEWLINE:'\\n'",
            "          (remote_as_bgp_tail",
            "            REMOTE_AS:'remote-as'",
            "            remote = (bgp_asn",
            "              asn = DEC:'5555')",
            "            NEWLINE:'\\n')",
            "          (update_source_bgp_tail",
            "            UPDATE_SOURCE:'update-source'",
            "            source = (interface_name",
            "              name_prefix_alpha = M_Interface_PREFIX:'Loopback'  <== mode:M_Interface",
            "              (range",
            "                (subrange",
            "                  low = DEC:'0'  <== mode:M_Interface)))",
            "            NEWLINE:'\\n'  <== mode:M_Interface)",
            "          (address_family_rb_stanza",
            "            (address_family_header",
            "              ADDRESS_FAMILY:'address-family'",
            "              af = (bgp_address_family",
            "                IPV6:'ipv6'",
            "                UNICAST:'unicast')",
            "              NEWLINE:'\\n')",
            "            (bgp_tail",
            "              (null_bgp_tail",
            "                SOFT_RECONFIGURATION:'soft-reconfiguration'",
            "                (null_rest_of_line",
            "                  INBOUND:'inbound'",
            "                  ALWAYS:'always'",
            "                  NEWLINE:'\\n')))",
            "            (address_family_footer))",
            "          (address_family_rb_stanza",
            "            (address_family_header",
            "              ADDRESS_FAMILY:'address-family'",
            "              af = (bgp_address_family",
            "                IPV6:'ipv6'",
            "                MULTICAST:'multicast')",
            "              NEWLINE:'\\n')",
            "            (bgp_tail",
            "              (null_bgp_tail",
            "                SOFT_RECONFIGURATION:'soft-reconfiguration'",
            "                (null_rest_of_line",
            "                  INBOUND:'inbound'",
            "                  ALWAYS:'always'",
            "                  NEWLINE:'\\n')))",
            "            (address_family_footer))))",
            "      (router_bgp_stanza_tail",
            "        (neighbor_group_rb_stanza",
            "          NEIGHBOR_GROUP:'neighbor-group'",
            "          name = (variable",
            "            VARIABLE:'foobar-iBGP_border_ipv4')",
            "          NEWLINE:'\\n'",
            "          (remote_as_bgp_tail",
            "            REMOTE_AS:'remote-as'",
            "            remote = (bgp_asn",
            "              asn = DEC:'5555')",
            "            NEWLINE:'\\n')",
            "          (update_source_bgp_tail",
            "            UPDATE_SOURCE:'update-source'",
            "            source = (interface_name",
            "              name_prefix_alpha = M_Interface_PREFIX:'Loopback'  <== mode:M_Interface",
            "              (range",
            "                (subrange",
            "                  low = DEC:'0'  <== mode:M_Interface)))",
            "            NEWLINE:'\\n'  <== mode:M_Interface)",
            "          (address_family_rb_stanza",
            "            (address_family_header",
            "              ADDRESS_FAMILY:'address-family'",
            "              af = (bgp_address_family",
            "                IPV4:'ipv4'",
            "                UNICAST:'unicast')",
            "              NEWLINE:'\\n')",
            "            (bgp_tail",
            "              (route_policy_bgp_tail",
            "                ROUTE_POLICY:'route-policy'",
            "                name = (variable",
            "                  VARIABLE:'deny_default_network_ipv4')",
            "                OUT:'out'",
            "                NEWLINE:'\\n'))",
            "            (bgp_tail",
            "              (null_bgp_tail",
            "                SOFT_RECONFIGURATION:'soft-reconfiguration'",
            "                (null_rest_of_line",
            "                  INBOUND:'inbound'",
            "                  ALWAYS:'always'",
            "                  NEWLINE:'\\n')))",
            "            (address_family_footer))",
            "          (address_family_rb_stanza",
            "            (address_family_header",
            "              ADDRESS_FAMILY:'address-family'",
            "              af = (bgp_address_family",
            "                IPV4:'ipv4'",
            "                MULTICAST:'multicast')",
            "              NEWLINE:'\\n')",
            "            (bgp_tail",
            "              (null_bgp_tail",
            "                SOFT_RECONFIGURATION:'soft-reconfiguration'",
            "                (null_rest_of_line",
            "                  INBOUND:'inbound'",
            "                  ALWAYS:'always'",
            "                  NEWLINE:'\\n')))",
            "            (address_family_footer))))",
            "      (router_bgp_stanza_tail",
            "        (neighbor_group_rb_stanza",
            "          NEIGHBOR_GROUP:'neighbor-group'",
            "          name = (variable",
            "            VARIABLE:'foobar-iBGP_border_ipv6')",
            "          NEWLINE:'\\n'",
            "          (remote_as_bgp_tail",
            "            REMOTE_AS:'remote-as'",
            "            remote = (bgp_asn",
            "              asn = DEC:'5555')",
            "            NEWLINE:'\\n')",
            "          (update_source_bgp_tail",
            "            UPDATE_SOURCE:'update-source'",
            "            source = (interface_name",
            "              name_prefix_alpha = M_Interface_PREFIX:'Loopback'  <== mode:M_Interface",
            "              (range",
            "                (subrange",
            "                  low = DEC:'0'  <== mode:M_Interface)))",
            "            NEWLINE:'\\n'  <== mode:M_Interface)",
            "          (address_family_rb_stanza",
            "            (address_family_header",
            "              ADDRESS_FAMILY:'address-family'",
            "              af = (bgp_address_family",
            "                IPV6:'ipv6'",
            "                UNICAST:'unicast')",
            "              NEWLINE:'\\n')",
            "            (bgp_tail",
            "              (null_bgp_tail",
            "                SOFT_RECONFIGURATION:'soft-reconfiguration'",
            "                (null_rest_of_line",
            "                  INBOUND:'inbound'",
            "                  ALWAYS:'always'",
            "                  NEWLINE:'\\n')))",
            "            (address_family_footer))",
            "          (address_family_rb_stanza",
            "            (address_family_header",
            "              ADDRESS_FAMILY:'address-family'",
            "              af = (bgp_address_family",
            "                IPV6:'ipv6'",
            "                MULTICAST:'multicast')",
            "              NEWLINE:'\\n')",
            "            (bgp_tail",
            "              (null_bgp_tail",
            "                SOFT_RECONFIGURATION:'soft-reconfiguration'",
            "                (null_rest_of_line",
            "                  INBOUND:'inbound'",
            "                  ALWAYS:'always'",
            "                  NEWLINE:'\\n')))",
            "            (address_family_footer))))",
            "      (router_bgp_stanza_tail",
            "        (neighbor_block_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          ip_address = IP_ADDRESS:'1.2.1.1'  <== mode:M_NEIGHBOR",
            "          NEWLINE:'\\n'",
            "          (use_neighbor_group_bgp_tail",
            "            USE:'use'",
            "            NEIGHBOR_GROUP:'neighbor-group'",
            "            name = (variable",
            "              VARIABLE:'foobar-iBGP_ipv4')",
            "            NEWLINE:'\\n')",
            "          (bgp_tail",
            "            (send_community_bgp_tail",
            "              SEND_EXTENDED_COMMUNITY_EBGP:'send-extended-community-ebgp'",
            "              INHERITANCE_DISABLE:'inheritance-disable'",
            "              NEWLINE:'\\n'))",
            "          (bgp_tail",
            "            (description_bgp_tail",
            "              (description_line",
            "                DESCRIPTION:'description'",
            "                text = RAW_TEXT:' htegiofnoirwejhg'  <== mode:M_Description",
            "                NEWLINE:'\\n'  <== mode:M_Description)))))",
            "      (router_bgp_stanza_tail",
            "        (neighbor_block_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          ip_address = IP_ADDRESS:'1.2.1.2'  <== mode:M_NEIGHBOR",
            "          NEWLINE:'\\n'",
            "          (use_neighbor_group_bgp_tail",
            "            USE:'use'",
            "            NEIGHBOR_GROUP:'neighbor-group'",
            "            name = (variable",
            "              VARIABLE:'foobar-iBGP_ipv4')",
            "            NEWLINE:'\\n')",
            "          (bgp_tail",
            "            (description_bgp_tail",
            "              (description_line",
            "                DESCRIPTION:'description'",
            "                text = RAW_TEXT:' hejtuignrfojfgner'  <== mode:M_Description",
            "                NEWLINE:'\\n'  <== mode:M_Description)))))",
            "      (router_bgp_stanza_tail",
            "        (neighbor_block_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          ip_address = IP_ADDRESS:'1.2.1.3'  <== mode:M_NEIGHBOR",
            "          NEWLINE:'\\n'",
            "          (use_neighbor_group_bgp_tail",
            "            USE:'use'",
            "            NEIGHBOR_GROUP:'neighbor-group'",
            "            name = (variable",
            "              VARIABLE:'foobar-iBGP_border_ipv4')",
            "            NEWLINE:'\\n')",
            "          (use_session_group_bgp_tail",
            "            USE:'use'",
            "            SESSION_GROUP:'session-group'",
            "            name = (variable",
            "              VARIABLE:'excellect-group')",
            "            NEWLINE:'\\n')",
            "          (bgp_tail",
            "            (null_bgp_tail",
            "              TIMERS:'timers'",
            "              (null_rest_of_line",
            "                DEC:'30'",
            "                DEC:'90'",
            "                NEWLINE:'\\n')))",
            "          (bgp_tail",
            "            (description_bgp_tail",
            "              (description_line",
            "                DESCRIPTION:'description'",
            "                text = RAW_TEXT:' bafjewoifj'  <== mode:M_Description",
            "                NEWLINE:'\\n'  <== mode:M_Description)))))",
            "      (router_bgp_stanza_tail",
            "        (session_group_rb_stanza",
            "          SESSION_GROUP:'session-group'",
            "          name = (variable",
            "            VARIABLE:'OLA')",
            "          NEWLINE:'\\n'",
            "          (remote_as_bgp_tail",
            "            REMOTE_AS:'remote-as'",
            "            remote = (bgp_asn",
            "              asn = DEC:'21')",
            "            NEWLINE:'\\n')",
            "          (use_session_group_bgp_tail",
            "            USE:'use'",
            "            SESSION_GROUP:'session-group'",
            "            name = (variable",
            "              VARIABLE:'CIAO')",
            "            NEWLINE:'\\n')",
            "          (bgp_tail",
            "            (description_bgp_tail",
            "              (description_line",
            "                DESCRIPTION:'description'",
            "                text = RAW_TEXT:' OLA CIAO'  <== mode:M_Description",
            "                NEWLINE:'\\n'  <== mode:M_Description)))))))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        END:'end'",
            "        NEWLINE:'\\n\\n')))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/ios_xr_class_map" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'ios_xr_class_map'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_class_map",
            "      CLASS_MAP:'class-map'",
            "      MATCH_ANY:'match-any'",
            "      name = (variable",
            "        VARIABLE:'ABC')",
            "      NEWLINE:'\\n'",
            "      (cm_match",
            "        MATCH:'match'",
            "        (cmm_dscp",
            "          DSCP:'dscp'",
            "          IPV4:'ipv4'",
            "          (dscp_type",
            "            CS4:'cs4')",
            "          NEWLINE:'\\n'))",
            "      (cm_end_class_map",
            "        END_CLASS_MAP:'end-class-map'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_class_map",
            "      CLASS_MAP:'class-map'",
            "      MATCH_ANY:'match-any'",
            "      name = (variable",
            "        VARIABLE:'ABCD')",
            "      NEWLINE:'\\n'",
            "      (cm_match",
            "        MATCH:'match'",
            "        NOT:'not'",
            "        (cmm_dscp",
            "          DSCP:'dscp'",
            "          IPV4:'ipv4'",
            "          (dscp_type",
            "            CS2:'cs2')",
            "          (dscp_type",
            "            CS3:'cs3')",
            "          (dscp_type",
            "            CS4:'cs4')",
            "          NEWLINE:'\\n'))",
            "      (cm_end_class_map",
            "        END_CLASS_MAP:'end-class-map'",
            "        NEWLINE:'\\n')))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/ios_xr_community_set" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'commSet'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (community_set_stanza",
            "      COMMUNITY_SET:'community-set'",
            "      name = (variable",
            "        VARIABLE:'community_52')",
            "      NEWLINE:'\\n'",
            "      (community_set_elem_list",
            "        (community_set_elem",
            "          IOS_REGEX:'ios-regex'",
            "          COMMUNITY_SET_REGEX:''^52:.*''  <== mode:M_IosRegex)",
            "        NEWLINE:'\\n')",
            "      END_SET:'end-set'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (community_set_stanza",
            "      COMMUNITY_SET:'community-set'",
            "      name = (variable",
            "        VARIABLE:'all_community')",
            "      NEWLINE:'\\n'",
            "      (community_set_elem_list",
            "        (community_set_elem",
            "          prefix = (community_set_elem_half",
            "            ASTERISK:'*')",
            "          COLON:':'",
            "          suffix = (community_set_elem_half",
            "            ASTERISK:'*'))",
            "        NEWLINE:'\\n')",
            "      END_SET:'end-set'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (community_set_stanza",
            "      COMMUNITY_SET:'community-set'",
            "      name = (variable",
            "        VARIABLE:'hpr_routes_community')",
            "      NEWLINE:'\\n'",
            "      (community_set_elem_list",
            "        (community_set_elem",
            "          IOS_REGEX:'ios-regex'",
            "          COMMUNITY_SET_REGEX:''2153:*''  <== mode:M_IosRegex)",
            "        NEWLINE:'\\n')",
            "      END_SET:'end-set'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (community_set_stanza",
            "      COMMUNITY_SET:'community-set'",
            "      name = (variable",
            "        VARIABLE:'hpr_blackhole_community')",
            "      NEWLINE:'\\n'",
            "      (community_set_elem_list",
            "        (community_set_elem",
            "          (community",
            "            STANDARD_COMMUNITY:'2153:666'))",
            "        NEWLINE:'\\n')",
            "      END_SET:'end-set'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (community_set_stanza",
            "      COMMUNITY_SET:'community-set'",
            "      name = (variable",
            "        VARIABLE:'ucla_blackhole_community')",
            "      NEWLINE:'\\n'",
            "      (community_set_elem_list",
            "        (community_set_elem",
            "          (community",
            "            STANDARD_COMMUNITY:'52:666'))",
            "        NEWLINE:'\\n')",
            "      END_SET:'end-set'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (community_set_stanza",
            "      COMMUNITY_SET:'community-set'",
            "      name = (variable",
            "        VARIABLE:'ucla_to_hpr_community_ipv4')",
            "      NEWLINE:'\\n'",
            "      (community_set_elem_list",
            "        (community_set_elem",
            "          (community",
            "            STANDARD_COMMUNITY:'52:2153'))",
            "        NEWLINE:'\\n')",
            "      END_SET:'end-set'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (community_set_stanza",
            "      COMMUNITY_SET:'community-set'",
            "      name = (variable",
            "        VARIABLE:'ucla_to_hpr_community_ipv6')",
            "      NEWLINE:'\\n'",
            "      (community_set_elem_list",
            "        (community_set_elem",
            "          (community",
            "            STANDARD_COMMUNITY:'2153:65418'))",
            "        NEWLINE:'\\n')",
            "      END_SET:'end-set'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (community_set_stanza",
            "      COMMUNITY_SET:'community-set'",
            "      name = (variable",
            "        VARIABLE:'dc_and_isp_routes_community')",
            "      NEWLINE:'\\n'",
            "      (community_set_elem_list",
            "        (community_set_elem",
            "          IOS_REGEX:'ios-regex'",
            "          COMMUNITY_SET_REGEX:''2152:*''  <== mode:M_IosRegex)",
            "        NEWLINE:'\\n')",
            "      END_SET:'end-set'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (community_set_stanza",
            "      COMMUNITY_SET:'community-set'",
            "      name = (variable",
            "        VARIABLE:'dc_and_isp_blackhole_community')",
            "      NEWLINE:'\\n'",
            "      (community_set_elem_list",
            "        (community_set_elem",
            "          (community",
            "            STANDARD_COMMUNITY:'2152:666'))",
            "        NEWLINE:'\\n')",
            "      END_SET:'end-set'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (community_set_stanza",
            "      COMMUNITY_SET:'community-set'",
            "      name = (variable",
            "        VARIABLE:'cenic_default_network_community')",
            "      NEWLINE:'\\n'",
            "      (community_set_elem_list",
            "        (community_set_elem",
            "          (community",
            "            STANDARD_COMMUNITY:'2152:65530'))",
            "        NEWLINE:'\\n')",
            "      END_SET:'end-set'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (community_set_stanza",
            "      COMMUNITY_SET:'community-set'",
            "      name = (variable",
            "        VARIABLE:'ucla_to_dc_and_isp_community_ipv4')",
            "      NEWLINE:'\\n'",
            "      (community_set_elem_list",
            "        (community_set_elem",
            "          (community",
            "            STANDARD_COMMUNITY:'52:65498'))",
            "        NEWLINE:'\\n')",
            "      END_SET:'end-set'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (community_set_stanza",
            "      COMMUNITY_SET:'community-set'",
            "      name = (variable",
            "        VARIABLE:'ucla_to_dc_and_isp_community_ipv6')",
            "      NEWLINE:'\\n'",
            "      (community_set_elem_list",
            "        (community_set_elem",
            "          (community",
            "            STANDARD_COMMUNITY:'2152:65418'))",
            "        NEWLINE:'\\n')",
            "      END_SET:'end-set'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (community_set_stanza",
            "      COMMUNITY_SET:'community-set'",
            "      name = (variable",
            "        VARIABLE:'EBGP-PEER')",
            "      NEWLINE:'\\n'",
            "      (community_set_elem_list",
            "        (community_set_elem",
            "          (community",
            "            STANDARD_COMMUNITY:'1234:65299'))",
            "        NEWLINE:'\\n')",
            "      END_SET:'end-set'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        END:'end'",
            "        NEWLINE:'\\n\\n')))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/ios_xr_isis" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'ios_xr_isis'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (router_isis_stanza",
            "      ROUTER:'router'",
            "      ISIS:'isis'",
            "      name = (variable",
            "        DEC:'1234')",
            "      NEWLINE:'\\n'",
            "      (is_stanza",
            "        (interface_is_stanza",
            "          INTERFACE:'interface'",
            "          iname = (interface_name",
            "            name_prefix_alpha = M_Interface_PREFIX:'GigabitEthernet'  <== mode:M_Interface",
            "            DEC:'0'  <== mode:M_Interface",
            "            FORWARD_SLASH:'/'  <== mode:M_Interface",
            "            DEC:'2'  <== mode:M_Interface",
            "            FORWARD_SLASH:'/'  <== mode:M_Interface",
            "            DEC:'1'  <== mode:M_Interface",
            "            FORWARD_SLASH:'/'  <== mode:M_Interface",
            "            (range",
            "              (subrange",
            "                low = DEC:'6'  <== mode:M_Interface)))",
            "          NEWLINE:'\\n'  <== mode:M_Interface",
            "          (iis_stanza",
            "            (common_iis_stanza",
            "              (null_iis_stanza",
            "                POINT_TO_POINT:'point-to-point'",
            "                (null_rest_of_line",
            "                  NEWLINE:'\\n'))))",
            "          (iis_stanza",
            "            (common_iis_stanza",
            "              (null_iis_stanza",
            "                CSNP_INTERVAL:'csnp-interval'",
            "                (null_rest_of_line",
            "                  DEC:'10'",
            "                  LEVEL:'level'",
            "                  DEC:'1'",
            "                  NEWLINE:'\\n'))))",
            "          (iis_stanza",
            "            (common_iis_stanza",
            "              (shutdown_iis_stanza",
            "                SHUTDOWN:'shutdown'",
            "                NEWLINE:'\\n')))",
            "          (iis_stanza",
            "            (common_iis_stanza",
            "              (null_iis_stanza",
            "                CSNP_INTERVAL:'csnp-interval'",
            "                (null_rest_of_line",
            "                  DEC:'10'",
            "                  LEVEL:'level'",
            "                  DEC:'2'",
            "                  NEWLINE:'\\n'))))",
            "          (iis_stanza",
            "            (common_iis_stanza",
            "              (null_iis_stanza",
            "                HELLO_INTERVAL:'hello-interval'",
            "                (null_rest_of_line",
            "                  DEC:'3'",
            "                  NEWLINE:'\\n'))))",
            "          (iis_stanza",
            "            (address_family_iis_stanza",
            "              ADDRESS_FAMILY:'address-family'",
            "              IPV4:'ipv4'",
            "              UNICAST:'unicast'",
            "              NEWLINE:'\\n'",
            "              (common_iis_stanza",
            "                (metric_iis_stanza",
            "                  METRIC:'metric'",
            "                  DEC:'9000'",
            "                  NEWLINE:'\\n'))",
            "              (common_iis_stanza",
            "                (metric_iis_stanza",
            "                  METRIC:'metric'",
            "                  MAXIMUM:'maximum'",
            "                  LEVEL:'level'",
            "                  DEC:'1'",
            "                  NEWLINE:'\\n'))))",
            "          (iis_stanza",
            "            (address_family_iis_stanza",
            "              ADDRESS_FAMILY:'address-family'",
            "              IPV6:'ipv6'",
            "              UNICAST:'unicast'",
            "              NEWLINE:'\\n'",
            "              (common_iis_stanza",
            "                (metric_iis_stanza",
            "                  METRIC:'metric'",
            "                  DEC:'9000'",
            "                  NEWLINE:'\\n'))))))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/ios_xr_l2vpn" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'L2VPN'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_l2vpn",
            "      L2VPN:'l2vpn'",
            "      (null_rest_of_line",
            "        NEWLINE:'\\n')",
            "      (l2vpn_bridge_group",
            "        BRIDGE:'bridge'",
            "        GROUP:'group'",
            "        name = (variable",
            "          VARIABLE:'TEST-GROUP-1')",
            "        NEWLINE:'\\n'",
            "        (lbg_bridge_domain",
            "          BRIDGE_DOMAIN:'bridge-domain'",
            "          name = (variable",
            "            VARIABLE:'TEST-DOMAIN-1')",
            "          NEWLINE:'\\n'",
            "          (lbgbd_mac",
            "            MAC:'mac'",
            "            (null_rest_of_line",
            "              NEWLINE:'\\n')",
            "            (lbgbdm_limit",
            "              LIMIT:'limit'",
            "              (null_rest_of_line",
            "                NEWLINE:'\\n')",
            "              (lbgbdml_null",
            "                MAXIMUM:'maximum'",
            "                (null_rest_of_line",
            "                  DEC:'15000'",
            "                  NEWLINE:'\\n'))",
            "              (lbgbdml_null",
            "                ACTION:'action'",
            "                (null_rest_of_line",
            "                  FLOOD:'flood'",
            "                  NEWLINE:'\\n'))))",
            "          (lbgbd_null",
            "            MTU:'mtu'",
            "            (null_rest_of_line",
            "              DEC:'9014'",
            "              NEWLINE:'\\n'))",
            "          (lbgbd_null",
            "            INTERFACE:'interface'",
            "            (null_rest_of_line",
            "              M_Interface_PREFIX:'Bundle-Ether'  <== mode:M_Interface",
            "              DEC:'9'  <== mode:M_Interface",
            "              PERIOD:'.'  <== mode:M_Interface",
            "              DEC:'1'  <== mode:M_Interface",
            "              NEWLINE:'\\n'  <== mode:M_Interface))",
            "          (lbgbd_null",
            "            NEIGHBOR:'neighbor'",
            "            (null_rest_of_line",
            "              IP_ADDRESS:'1.2.3.4'  <== mode:M_NEIGHBOR",
            "              VARIABLE:'pw-id'",
            "              DEC:'123'",
            "              NEWLINE:'\\n'))",
            "          (lbgbd_vfi",
            "            VFI:'vfi'",
            "            (null_rest_of_line",
            "              VARIABLE:'HES-SO-VPLS-full-mesh'",
            "              NEWLINE:'\\n')",
            "            (lbgbdv_null",
            "              NEIGHBOR:'neighbor'",
            "              (null_rest_of_line",
            "                IP_ADDRESS:'1.5.5.5'  <== mode:M_NEIGHBOR",
            "                VARIABLE:'pw-id'",
            "                DEC:'707'",
            "                NEWLINE:'\\n'))",
            "            (lbgbdv_null",
            "              NEIGHBOR:'neighbor'",
            "              (null_rest_of_line",
            "                IP_ADDRESS:'1.5.2.3'  <== mode:M_NEIGHBOR",
            "                VARIABLE:'pw-id'",
            "                DEC:'707'",
            "                NEWLINE:'\\n')))",
            "          (lbgbd_null",
            "            ROUTED:'routed'",
            "            (null_rest_of_line",
            "              INTERFACE:'interface'",
            "              M_Interface_PREFIX:'BVI'  <== mode:M_Interface",
            "              DEC:'1'  <== mode:M_Interface",
            "              NEWLINE:'\\n'  <== mode:M_Interface))))",
            "      (l2vpn_logging",
            "        LOGGING:'logging'",
            "        NEWLINE:'\\n'",
            "        BRIDGE_DOMAIN:'bridge-domain'",
            "        NEWLINE:'\\n'",
            "        PSEUDOWIRE:'pseudowire'",
            "        NEWLINE:'\\n'",
            "        VFI:'vfi'",
            "        NEWLINE:'\\n')",
            "      (l2vpn_xconnect",
            "        XCONNECT:'xconnect'",
            "        GROUP:'group'",
            "        (variable",
            "          VARIABLE:'scidmz_155')",
            "        NEWLINE:'\\n'",
            "        (l2vpn_xconnect_p2p",
            "          P2P:'p2p'",
            "          (null_rest_of_line",
            "            VARIABLE:'HGE_0-1_155'",
            "            NEWLINE:'\\n')",
            "          (lxp_null",
            "            INTERFACE:'interface'",
            "            (null_rest_of_line",
            "              M_Interface_PREFIX:'HundredGigE'  <== mode:M_Interface",
            "              DEC:'0'  <== mode:M_Interface",
            "              FORWARD_SLASH:'/'  <== mode:M_Interface",
            "              DEC:'2'  <== mode:M_Interface",
            "              FORWARD_SLASH:'/'  <== mode:M_Interface",
            "              DEC:'0'  <== mode:M_Interface",
            "              FORWARD_SLASH:'/'  <== mode:M_Interface",
            "              DEC:'0'  <== mode:M_Interface",
            "              PERIOD:'.'  <== mode:M_Interface",
            "              DEC:'155'  <== mode:M_Interface",
            "              NEWLINE:'\\n'  <== mode:M_Interface))",
            "          (lxp_null",
            "            INTERFACE:'interface'",
            "            (null_rest_of_line",
            "              M_Interface_PREFIX:'HundredGigE'  <== mode:M_Interface",
            "              DEC:'0'  <== mode:M_Interface",
            "              FORWARD_SLASH:'/'  <== mode:M_Interface",
            "              DEC:'2'  <== mode:M_Interface",
            "              FORWARD_SLASH:'/'  <== mode:M_Interface",
            "              DEC:'0'  <== mode:M_Interface",
            "              FORWARD_SLASH:'/'  <== mode:M_Interface",
            "              DEC:'1'  <== mode:M_Interface",
            "              PERIOD:'.'  <== mode:M_Interface",
            "              DEC:'155'  <== mode:M_Interface",
            "              NEWLINE:'\\n'  <== mode:M_Interface)))",
            "        (l2vpn_xconnect_p2p",
            "          P2P:'p2p'",
            "          (null_rest_of_line",
            "            VARIABLE:'FFHS'",
            "            NEWLINE:'\\n')",
            "          (lxp_null",
            "            INTERFACE:'interface'",
            "            (null_rest_of_line",
            "              M_Interface_PREFIX:'GigabitEthernet'  <== mode:M_Interface",
            "              DEC:'0'  <== mode:M_Interface",
            "              FORWARD_SLASH:'/'  <== mode:M_Interface",
            "              DEC:'0'  <== mode:M_Interface",
            "              FORWARD_SLASH:'/'  <== mode:M_Interface",
            "              DEC:'0'  <== mode:M_Interface",
            "              FORWARD_SLASH:'/'  <== mode:M_Interface",
            "              DEC:'4'  <== mode:M_Interface",
            "              PERIOD:'.'  <== mode:M_Interface",
            "              DEC:'2399'  <== mode:M_Interface",
            "              NEWLINE:'\\n'  <== mode:M_Interface))",
            "          (lxp_neighbor",
            "            NEIGHBOR:'neighbor'",
            "            (null_rest_of_line",
            "              VARIABLE:'ipv4'  <== mode:M_NEIGHBOR",
            "              IP_ADDRESS:'130.59.255.69'",
            "              VARIABLE:'pw-id'",
            "              DEC:'2'",
            "              NEWLINE:'\\n'))",
            "          (lxp_null",
            "            MONITOR_SESSION:'monitor-session'",
            "            (null_rest_of_line",
            "              VARIABLE:'RSPAN'",
            "              NEWLINE:'\\n'))",
            "          (lxp_neighbor",
            "            NEIGHBOR:'neighbor'",
            "            (null_rest_of_line",
            "              VARIABLE:'ipv6'  <== mode:M_NEIGHBOR",
            "              IPV6_ADDRESS:'2001:620:0:8018::2'",
            "              VARIABLE:'pw-id'",
            "              DEC:'1'",
            "              NEWLINE:'\\n')",
            "            (lxpn_null",
            "              SOURCE:'source'",
            "              (null_rest_of_line",
            "                IPV6_ADDRESS:'2001:620:0:c000::86'",
            "                NEWLINE:'\\n'))",
            "            (lxpn_l2tp",
            "              L2TP:'l2tp'",
            "              (null_rest_of_line",
            "                STATIC:'static'",
            "                NEWLINE:'\\n')",
            "              (lxpnl_null",
            "                LOCAL:'local'",
            "                (null_rest_of_line",
            "                  COOKIE:'cookie'",
            "                  SIZE:'size'",
            "                  DEC:'8'",
            "                  VARIABLE:'value'",
            "                  HEX:'0x0'",
            "                  HEX:'0x0'",
            "                  NEWLINE:'\\n'))",
            "              (lxpnl_null",
            "                LOCAL:'local'",
            "                (null_rest_of_line",
            "                  SESSION:'session'",
            "                  DEC:'1'",
            "                  NEWLINE:'\\n'))",
            "              (lxpnl_null",
            "                REMOTE:'remote'",
            "                (null_rest_of_line",
            "                  COOKIE:'cookie'",
            "                  SIZE:'size'",
            "                  DEC:'8'",
            "                  VARIABLE:'value'",
            "                  HEX:'0x0'",
            "                  HEX:'0x0'",
            "                  NEWLINE:'\\n'))",
            "              (lxpnl_null",
            "                REMOTE:'remote'",
            "                (null_rest_of_line",
            "                  SESSION:'session'",
            "                  DEC:'1'",
            "                  NEWLINE:'\\n'))))))",
            "      (l2vpn_xconnect",
            "        XCONNECT:'xconnect'",
            "        GROUP:'group'",
            "        (variable",
            "          VARIABLE:'scidmz_862')",
            "        NEWLINE:'\\n'",
            "        (l2vpn_xconnect_p2p",
            "          P2P:'p2p'",
            "          (null_rest_of_line",
            "            VARIABLE:'HGE_0-1_862'",
            "            NEWLINE:'\\n')",
            "          (lxp_null",
            "            INTERFACE:'interface'",
            "            (null_rest_of_line",
            "              M_Interface_PREFIX:'HundredGigE'  <== mode:M_Interface",
            "              DEC:'0'  <== mode:M_Interface",
            "              FORWARD_SLASH:'/'  <== mode:M_Interface",
            "              DEC:'2'  <== mode:M_Interface",
            "              FORWARD_SLASH:'/'  <== mode:M_Interface",
            "              DEC:'0'  <== mode:M_Interface",
            "              FORWARD_SLASH:'/'  <== mode:M_Interface",
            "              DEC:'0'  <== mode:M_Interface",
            "              PERIOD:'.'  <== mode:M_Interface",
            "              DEC:'862'  <== mode:M_Interface",
            "              NEWLINE:'\\n'  <== mode:M_Interface))",
            "          (lxp_null",
            "            INTERFACE:'interface'",
            "            (null_rest_of_line",
            "              M_Interface_PREFIX:'HundredGigE'  <== mode:M_Interface",
            "              DEC:'0'  <== mode:M_Interface",
            "              FORWARD_SLASH:'/'  <== mode:M_Interface",
            "              DEC:'2'  <== mode:M_Interface",
            "              FORWARD_SLASH:'/'  <== mode:M_Interface",
            "              DEC:'0'  <== mode:M_Interface",
            "              FORWARD_SLASH:'/'  <== mode:M_Interface",
            "              DEC:'1'  <== mode:M_Interface",
            "              PERIOD:'.'  <== mode:M_Interface",
            "              DEC:'862'  <== mode:M_Interface",
            "              NEWLINE:'\\n'  <== mode:M_Interface))))",
            "      (l2vpn_xconnect",
            "        XCONNECT:'xconnect'",
            "        GROUP:'group'",
            "        (variable",
            "          VARIABLE:'scidmz_963')",
            "        NEWLINE:'\\n'",
            "        (l2vpn_xconnect_p2p",
            "          P2P:'p2p'",
            "          (null_rest_of_line",
            "            VARIABLE:'HGE_0-1_963'",
            "            NEWLINE:'\\n')",
            "          (lxp_null",
            "            INTERFACE:'interface'",
            "            (null_rest_of_line",
            "              M_Interface_PREFIX:'HundredGigE'  <== mode:M_Interface",
            "              DEC:'0'  <== mode:M_Interface",
            "              FORWARD_SLASH:'/'  <== mode:M_Interface",
            "              DEC:'2'  <== mode:M_Interface",
            "              FORWARD_SLASH:'/'  <== mode:M_Interface",
            "              DEC:'0'  <== mode:M_Interface",
            "              FORWARD_SLASH:'/'  <== mode:M_Interface",
            "              DEC:'0'  <== mode:M_Interface",
            "              PERIOD:'.'  <== mode:M_Interface",
            "              DEC:'963'  <== mode:M_Interface",
            "              NEWLINE:'\\n'  <== mode:M_Interface))",
            "          (lxp_null",
            "            INTERFACE:'interface'",
            "            (null_rest_of_line",
            "              M_Interface_PREFIX:'HundredGigE'  <== mode:M_Interface",
            "              DEC:'0'  <== mode:M_Interface",
            "              FORWARD_SLASH:'/'  <== mode:M_Interface",
            "              DEC:'2'  <== mode:M_Interface",
            "              FORWARD_SLASH:'/'  <== mode:M_Interface",
            "              DEC:'0'  <== mode:M_Interface",
            "              FORWARD_SLASH:'/'  <== mode:M_Interface",
            "              DEC:'1'  <== mode:M_Interface",
            "              PERIOD:'.'  <== mode:M_Interface",
            "              DEC:'963'  <== mode:M_Interface",
            "              NEWLINE:'\\n'  <== mode:M_Interface))))))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        END:'end'",
            "        NEWLINE:'\\n\\n')))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/ios_xr_logging" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'ios_xr_logging'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_null",
            "          HOSTNAMEPREFIX:'hostnameprefix'",
            "          (null_rest_of_line",
            "            VARIABLE:'boop'",
            "            NEWLINE:'\\n')))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/ios_xr_misc" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'ios_xr_misc'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_bfd",
            "      BFD:'bfd'",
            "      (null_rest_of_line",
            "        NEWLINE:'\\n')",
            "      (bfd_null",
            "        TRAP:'trap'",
            "        (null_rest_of_line",
            "          VARIABLE:'singlehop'",
            "          VARIABLE:'pre-mapped'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        IPV4:'ipv4'",
            "        NETMASK_FORMAT:'netmask-format'",
            "        VARIABLE:'bit-count'",
            "        NEWLINE:'\\n')))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/ios_xr_multicast" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'IosXrMultiCast'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (router_multicast_stanza",
            "      ROUTER:'router'",
            "      MLD:'mld'",
            "      NEWLINE:'\\n'",
            "      (router_multicast_tail",
            "        (null_inner",
            "          VERSION:'version'",
            "          (null_rest_of_line",
            "            DEC:'1'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (router_multicast_stanza",
            "      ROUTER:'router'",
            "      IGMP:'igmp'",
            "      NEWLINE:'\\n'",
            "      (router_multicast_tail",
            "        (null_inner",
            "          VERSION:'version'",
            "          (null_rest_of_line",
            "            DEC:'2'",
            "            NEWLINE:'\\n'))",
            "        (interface_multicast_stanza",
            "          INTERFACE:'interface'",
            "          (interface_name",
            "            name_prefix_alpha = M_Interface_PREFIX:'TenGigE'  <== mode:M_Interface",
            "            DEC:'0'  <== mode:M_Interface",
            "            FORWARD_SLASH:'/'  <== mode:M_Interface",
            "            DEC:'7'  <== mode:M_Interface",
            "            FORWARD_SLASH:'/'  <== mode:M_Interface",
            "            DEC:'0'  <== mode:M_Interface",
            "            FORWARD_SLASH:'/'  <== mode:M_Interface",
            "            (range",
            "              (subrange",
            "                low = DEC:'19'  <== mode:M_Interface)))",
            "          NEWLINE:'\\n'  <== mode:M_Interface",
            "          (interface_multicast_tail",
            "            ROUTER:'router'",
            "            (null_rest_of_line",
            "              DISABLE:'disable'",
            "              NEWLINE:'\\n')))",
            "        (interface_multicast_stanza",
            "          INTERFACE:'interface'",
            "          (interface_name",
            "            name_prefix_alpha = M_Interface_PREFIX:'Bundle-Ether'  <== mode:M_Interface",
            "            DEC:'3'  <== mode:M_Interface",
            "            PERIOD:'.'  <== mode:M_Interface",
            "            (range",
            "              (subrange",
            "                low = DEC:'99'  <== mode:M_Interface)))",
            "          NEWLINE:'\\n'  <== mode:M_Interface",
            "          (interface_multicast_tail",
            "            ROUTER:'router'",
            "            (null_rest_of_line",
            "              DISABLE:'disable'",
            "              NEWLINE:'\\n'))",
            "          (interface_multicast_tail",
            "            ROUTER:'router'",
            "            (null_rest_of_line",
            "              IGMP:'igmp'",
            "              NEWLINE:'\\n')))",
            "        INTERFACE:'interface'",
            "        ALL:'all'  <== mode:M_Interface",
            "        (null_rest_of_line",
            "          ROUTER:'router'",
            "          DISABLE:'disable'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (router_multicast_stanza",
            "      ROUTER:'router'",
            "      MSDP:'msdp'",
            "      NEWLINE:'\\n'",
            "      (router_multicast_tail",
            "        (peer_stanza",
            "          PEER:'peer'",
            "          IP_ADDRESS:'169.232.1.3'",
            "          NEWLINE:'\\n'",
            "          (mp_null",
            "            CONNECT_SOURCE:'connect-source'",
            "            (null_rest_of_line",
            "              VARIABLE:'Loopback0'",
            "              NEWLINE:'\\n'))",
            "          (mp_null",
            "            DESCRIPTION:'description'",
            "            (null_rest_of_line",
            "              RAW_TEXT:' bd11f2.csb1 MSDP Peer'  <== mode:M_Description",
            "              NEWLINE:'\\n'  <== mode:M_Description))",
            "          (mp_null",
            "            MESH_GROUP:'mesh-group'",
            "            (null_rest_of_line",
            "              VARIABLE:'ucla_msdp_mesh'",
            "              NEWLINE:'\\n'))",
            "          (mp_null",
            "            SHUTDOWN:'shutdown'",
            "            (null_rest_of_line",
            "              NEWLINE:'\\n')))",
            "        (peer_stanza",
            "          PEER:'peer'",
            "          IP_ADDRESS:'137.164.27.5'",
            "          NEWLINE:'\\n'",
            "          (mp_null",
            "            CONNECT_SOURCE:'connect-source'",
            "            (null_rest_of_line",
            "              VARIABLE:'HundredGigE0/2/0/0.292'",
            "              NEWLINE:'\\n'))",
            "          (mp_null",
            "            REMOTE_AS:'remote-as'",
            "            (null_rest_of_line",
            "              DEC:'2153'",
            "              NEWLINE:'\\n'))",
            "          (mp_null",
            "            DESCRIPTION:'description'",
            "            (null_rest_of_line",
            "              RAW_TEXT:' HPR MSDP Peer'  <== mode:M_Description",
            "              NEWLINE:'\\n'  <== mode:M_Description))",
            "          (peer_sa_filter",
            "            SA_FILTER:'sa-filter'",
            "            IN:'in'",
            "            LIST:'list'",
            "            name = (variable",
            "              VARIABLE:'MSDP_filter')",
            "            NEWLINE:'\\n')",
            "          (peer_sa_filter",
            "            SA_FILTER:'sa-filter'",
            "            OUT:'out'",
            "            LIST:'list'",
            "            name = (variable",
            "              VARIABLE:'MSDP_filter')",
            "            NEWLINE:'\\n'))",
            "        (peer_stanza",
            "          PEER:'peer'",
            "          IP_ADDRESS:'169.232.1.22'",
            "          NEWLINE:'\\n'",
            "          (mp_null",
            "            CONNECT_SOURCE:'connect-source'",
            "            (null_rest_of_line",
            "              VARIABLE:'Loopback0'",
            "              NEWLINE:'\\n'))",
            "          (mp_null",
            "            DESCRIPTION:'description'",
            "            (null_rest_of_line",
            "              RAW_TEXT:' cr03f2.csb1 MSDP Peer'  <== mode:M_Description",
            "              NEWLINE:'\\n'  <== mode:M_Description))",
            "          (mp_null",
            "            MESH_GROUP:'mesh-group'",
            "            (null_rest_of_line",
            "              VARIABLE:'ucla_msdp_mesh'",
            "              NEWLINE:'\\n')))",
            "        (peer_stanza",
            "          PEER:'peer'",
            "          IP_ADDRESS:'169.232.1.23'",
            "          NEWLINE:'\\n'",
            "          (mp_null",
            "            CONNECT_SOURCE:'connect-source'",
            "            (null_rest_of_line",
            "              VARIABLE:'Loopback0'",
            "              NEWLINE:'\\n'))",
            "          (mp_null",
            "            DESCRIPTION:'description'",
            "            (null_rest_of_line",
            "              RAW_TEXT:' cr03f1.anderson MSDP Peer'  <== mode:M_Description",
            "              NEWLINE:'\\n'  <== mode:M_Description))",
            "          (mp_null",
            "            MESH_GROUP:'mesh-group'",
            "            (null_rest_of_line",
            "              VARIABLE:'ucla_msdp_mesh'",
            "              NEWLINE:'\\n')))",
            "        (peer_stanza",
            "          PEER:'peer'",
            "          IP_ADDRESS:'137.164.16.108'",
            "          NEWLINE:'\\n'",
            "          (mp_null",
            "            CONNECT_SOURCE:'connect-source'",
            "            (null_rest_of_line",
            "              VARIABLE:'Loopback0'",
            "              NEWLINE:'\\n'))",
            "          (mp_null",
            "            REMOTE_AS:'remote-as'",
            "            (null_rest_of_line",
            "              DEC:'2152'",
            "              NEWLINE:'\\n'))",
            "          (mp_null",
            "            DESCRIPTION:'description'",
            "            (null_rest_of_line",
            "              RAW_TEXT:' DC/ISP MSDP Peer'  <== mode:M_Description",
            "              NEWLINE:'\\n'  <== mode:M_Description))",
            "          (peer_sa_filter",
            "            SA_FILTER:'sa-filter'",
            "            IN:'in'",
            "            LIST:'list'",
            "            name = (variable",
            "              VARIABLE:'MSDP_filter')",
            "            NEWLINE:'\\n')",
            "          (peer_sa_filter",
            "            SA_FILTER:'sa-filter'",
            "            OUT:'out'",
            "            LIST:'list'",
            "            name = (variable",
            "              VARIABLE:'MSDP_filter')",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          LLDP:'lldp'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (router_multicast_stanza",
            "      ROUTER:'router'",
            "      PIM:'pim'",
            "      NEWLINE:'\\n'",
            "      (router_multicast_tail",
            "        (address_family_multicast_stanza",
            "          ADDRESS_FAMILY:'address-family'",
            "          IPV4:'ipv4'",
            "          NEWLINE:'\\n'",
            "          (address_family_multicast_tail",
            "            (interface_multicast_stanza",
            "              INTERFACE:'interface'",
            "              (interface_name",
            "                name_prefix_alpha = M_Interface_PREFIX:'Bundle-Ether'  <== mode:M_Interface",
            "                (range",
            "                  (subrange",
            "                    low = DEC:'101'  <== mode:M_Interface)))",
            "              NEWLINE:'\\n'  <== mode:M_Interface",
            "              (interface_multicast_tail",
            "                ENABLE:'enable'",
            "                (null_rest_of_line",
            "                  NEWLINE:'\\n')))",
            "            (interface_multicast_stanza",
            "              INTERFACE:'interface'",
            "              (interface_name",
            "                name_prefix_alpha = M_Interface_PREFIX:'Bundle-Ether'  <== mode:M_Interface",
            "                (range",
            "                  (subrange",
            "                    low = DEC:'103'  <== mode:M_Interface)))",
            "              NEWLINE:'\\n'  <== mode:M_Interface",
            "              (interface_multicast_tail",
            "                ENABLE:'enable'",
            "                (null_rest_of_line",
            "                  NEWLINE:'\\n')))",
            "            (interface_multicast_stanza",
            "              INTERFACE:'interface'",
            "              (interface_name",
            "                name_prefix_alpha = M_Interface_PREFIX:'Bundle-Ether'  <== mode:M_Interface",
            "                (range",
            "                  (subrange",
            "                    low = DEC:'201'  <== mode:M_Interface)))",
            "              NEWLINE:'\\n'  <== mode:M_Interface",
            "              (interface_multicast_tail",
            "                BSR_BORDER:'bsr-border'",
            "                (null_rest_of_line",
            "                  NEWLINE:'\\n'))",
            "              (interface_multicast_tail",
            "                ENABLE:'enable'",
            "                (null_rest_of_line",
            "                  NEWLINE:'\\n')))",
            "            (interface_multicast_stanza",
            "              INTERFACE:'interface'",
            "              (interface_name",
            "                name_prefix_alpha = M_Interface_PREFIX:'HundredGigE'  <== mode:M_Interface",
            "                DEC:'0'  <== mode:M_Interface",
            "                FORWARD_SLASH:'/'  <== mode:M_Interface",
            "                DEC:'1'  <== mode:M_Interface",
            "                FORWARD_SLASH:'/'  <== mode:M_Interface",
            "                DEC:'0'  <== mode:M_Interface",
            "                FORWARD_SLASH:'/'  <== mode:M_Interface",
            "                DEC:'0'  <== mode:M_Interface",
            "                PERIOD:'.'  <== mode:M_Interface",
            "                (range",
            "                  (subrange",
            "                    low = DEC:'292'  <== mode:M_Interface)))",
            "              NEWLINE:'\\n'  <== mode:M_Interface",
            "              (interface_multicast_tail",
            "                BSR_BORDER:'bsr-border'",
            "                (null_rest_of_line",
            "                  NEWLINE:'\\n'))",
            "              (interface_multicast_tail",
            "                ENABLE:'enable'",
            "                (null_rest_of_line",
            "                  NEWLINE:'\\n')))))",
            "        (address_family_multicast_stanza",
            "          ADDRESS_FAMILY:'address-family'",
            "          IPV6:'ipv6'",
            "          NEWLINE:'\\n'",
            "          (address_family_multicast_tail",
            "            (interface_multicast_stanza",
            "              INTERFACE:'interface'",
            "              (interface_name",
            "                name_prefix_alpha = M_Interface_PREFIX:'Bundle-Ether'  <== mode:M_Interface",
            "                (range",
            "                  (subrange",
            "                    low = DEC:'101'  <== mode:M_Interface)))",
            "              NEWLINE:'\\n'  <== mode:M_Interface",
            "              (interface_multicast_tail",
            "                ENABLE:'enable'",
            "                (null_rest_of_line",
            "                  NEWLINE:'\\n')))",
            "            (interface_multicast_stanza",
            "              INTERFACE:'interface'",
            "              (interface_name",
            "                name_prefix_alpha = M_Interface_PREFIX:'Bundle-Ether'  <== mode:M_Interface",
            "                (range",
            "                  (subrange",
            "                    low = DEC:'103'  <== mode:M_Interface)))",
            "              NEWLINE:'\\n'  <== mode:M_Interface",
            "              (interface_multicast_tail",
            "                ENABLE:'enable'",
            "                (null_rest_of_line",
            "                  NEWLINE:'\\n')))",
            "            (interface_multicast_stanza",
            "              INTERFACE:'interface'",
            "              (interface_name",
            "                name_prefix_alpha = M_Interface_PREFIX:'Bundle-Ether'  <== mode:M_Interface",
            "                (range",
            "                  (subrange",
            "                    low = DEC:'201'  <== mode:M_Interface)))",
            "              NEWLINE:'\\n'  <== mode:M_Interface",
            "              (interface_multicast_tail",
            "                BSR_BORDER:'bsr-border'",
            "                (null_rest_of_line",
            "                  NEWLINE:'\\n'))",
            "              (interface_multicast_tail",
            "                ENABLE:'enable'",
            "                (null_rest_of_line",
            "                  NEWLINE:'\\n')))",
            "            (interface_multicast_stanza",
            "              INTERFACE:'interface'",
            "              (interface_name",
            "                name_prefix_alpha = M_Interface_PREFIX:'HundredGigE'  <== mode:M_Interface",
            "                DEC:'0'  <== mode:M_Interface",
            "                FORWARD_SLASH:'/'  <== mode:M_Interface",
            "                DEC:'1'  <== mode:M_Interface",
            "                FORWARD_SLASH:'/'  <== mode:M_Interface",
            "                DEC:'0'  <== mode:M_Interface",
            "                FORWARD_SLASH:'/'  <== mode:M_Interface",
            "                DEC:'0'  <== mode:M_Interface",
            "                PERIOD:'.'  <== mode:M_Interface",
            "                (range",
            "                  (subrange",
            "                    low = DEC:'292'  <== mode:M_Interface)))",
            "              NEWLINE:'\\n'  <== mode:M_Interface",
            "              (interface_multicast_tail",
            "                BSR_BORDER:'bsr-border'",
            "                (null_rest_of_line",
            "                  NEWLINE:'\\n'))",
            "              (interface_multicast_tail",
            "                ENABLE:'enable'",
            "                (null_rest_of_line",
            "                  NEWLINE:'\\n'))))))))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        END:'end'",
            "        NEWLINE:'\\n\\n')))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/ios_xr_multicast_routing" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'MCastRouting'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (multicast_routing_stanza",
            "      MULTICAST_ROUTING:'multicast-routing'",
            "      NEWLINE:'\\n'",
            "      (address_family_multicast_stanza",
            "        ADDRESS_FAMILY:'address-family'",
            "        IPV4:'ipv4'",
            "        NEWLINE:'\\n'",
            "        (address_family_multicast_tail",
            "          MULTIPATH:'multipath'",
            "          NEWLINE:'\\n'",
            "          INTERFACE:'interface'",
            "          ALL:'all'  <== mode:M_Interface",
            "          ENABLE:'enable'",
            "          NEWLINE:'\\n'))",
            "      (address_family_multicast_stanza",
            "        ADDRESS_FAMILY:'address-family'",
            "        IPV6:'ipv6'",
            "        NEWLINE:'\\n'",
            "        (address_family_multicast_tail",
            "          MULTIPATH:'multipath'",
            "          NEWLINE:'\\n'",
            "          INTERFACE:'interface'",
            "          ALL:'all'  <== mode:M_Interface",
            "          ENABLE:'enable'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (multicast_routing_stanza",
            "      MULTICAST_ROUTING:'multicast-routing'",
            "      NEWLINE:'\\n'",
            "      (address_family_multicast_stanza",
            "        ADDRESS_FAMILY:'address-family'",
            "        IPV4:'ipv4'",
            "        NEWLINE:'\\n'",
            "        (address_family_multicast_tail",
            "          (interface_multicast_stanza",
            "            INTERFACE:'interface'",
            "            (interface_name",
            "              name_prefix_alpha = M_Interface_PREFIX:'TenGigE'  <== mode:M_Interface",
            "              DEC:'0'  <== mode:M_Interface",
            "              FORWARD_SLASH:'/'  <== mode:M_Interface",
            "              DEC:'0'  <== mode:M_Interface",
            "              FORWARD_SLASH:'/'  <== mode:M_Interface",
            "              DEC:'2'  <== mode:M_Interface",
            "              FORWARD_SLASH:'/'  <== mode:M_Interface",
            "              DEC:'3'  <== mode:M_Interface",
            "              PERIOD:'.'  <== mode:M_Interface",
            "              (range",
            "                (subrange",
            "                  low = DEC:'900'  <== mode:M_Interface)))",
            "            NEWLINE:'\\n'  <== mode:M_Interface",
            "            (interface_multicast_tail",
            "              BOUNDARY:'boundary'",
            "              (null_rest_of_line",
            "                MCAST_BOUNDARY:'mcast-boundary'",
            "                NEWLINE:'\\n')))",
            "          (interface_multicast_stanza",
            "            INTERFACE:'interface'",
            "            (interface_name",
            "              name_prefix_alpha = M_Interface_PREFIX:'TenGigE'  <== mode:M_Interface",
            "              DEC:'0'  <== mode:M_Interface",
            "              FORWARD_SLASH:'/'  <== mode:M_Interface",
            "              DEC:'0'  <== mode:M_Interface",
            "              FORWARD_SLASH:'/'  <== mode:M_Interface",
            "              DEC:'2'  <== mode:M_Interface",
            "              FORWARD_SLASH:'/'  <== mode:M_Interface",
            "              DEC:'3'  <== mode:M_Interface",
            "              PERIOD:'.'  <== mode:M_Interface",
            "              (range",
            "                (subrange",
            "                  low = DEC:'901'  <== mode:M_Interface)))",
            "            NEWLINE:'\\n'  <== mode:M_Interface",
            "            (interface_multicast_tail",
            "              BOUNDARY:'boundary'",
            "              (null_rest_of_line",
            "                MCAST_BOUNDARY:'mcast-boundary'",
            "                NEWLINE:'\\n')))",
            "          (interface_multicast_stanza",
            "            INTERFACE:'interface'",
            "            (interface_name",
            "              name_prefix_alpha = M_Interface_PREFIX:'TenGigE'  <== mode:M_Interface",
            "              DEC:'0'  <== mode:M_Interface",
            "              FORWARD_SLASH:'/'  <== mode:M_Interface",
            "              DEC:'0'  <== mode:M_Interface",
            "              FORWARD_SLASH:'/'  <== mode:M_Interface",
            "              DEC:'2'  <== mode:M_Interface",
            "              FORWARD_SLASH:'/'  <== mode:M_Interface",
            "              DEC:'3'  <== mode:M_Interface",
            "              PERIOD:'.'  <== mode:M_Interface",
            "              (range",
            "                (subrange",
            "                  low = DEC:'902'  <== mode:M_Interface)))",
            "            NEWLINE:'\\n'  <== mode:M_Interface",
            "            (interface_multicast_tail",
            "              BOUNDARY:'boundary'",
            "              (null_rest_of_line",
            "                MCAST_BOUNDARY:'mcast-boundary'",
            "                NEWLINE:'\\n')))",
            "          (interface_multicast_stanza",
            "            INTERFACE:'interface'",
            "            (interface_name",
            "              name_prefix_alpha = M_Interface_PREFIX:'TenGigE'  <== mode:M_Interface",
            "              DEC:'0'  <== mode:M_Interface",
            "              FORWARD_SLASH:'/'  <== mode:M_Interface",
            "              DEC:'0'  <== mode:M_Interface",
            "              FORWARD_SLASH:'/'  <== mode:M_Interface",
            "              DEC:'2'  <== mode:M_Interface",
            "              FORWARD_SLASH:'/'  <== mode:M_Interface",
            "              DEC:'3'  <== mode:M_Interface",
            "              PERIOD:'.'  <== mode:M_Interface",
            "              (range",
            "                (subrange",
            "                  low = DEC:'903'  <== mode:M_Interface)))",
            "            NEWLINE:'\\n'  <== mode:M_Interface",
            "            (interface_multicast_tail",
            "              BOUNDARY:'boundary'",
            "              (null_rest_of_line",
            "                MCAST_BOUNDARY:'mcast-boundary'",
            "                NEWLINE:'\\n')))",
            "          (interface_multicast_stanza",
            "            INTERFACE:'interface'",
            "            (interface_name",
            "              name_prefix_alpha = M_Interface_PREFIX:'TenGigE'  <== mode:M_Interface",
            "              DEC:'0'  <== mode:M_Interface",
            "              FORWARD_SLASH:'/'  <== mode:M_Interface",
            "              DEC:'0'  <== mode:M_Interface",
            "              FORWARD_SLASH:'/'  <== mode:M_Interface",
            "              DEC:'2'  <== mode:M_Interface",
            "              FORWARD_SLASH:'/'  <== mode:M_Interface",
            "              DEC:'3'  <== mode:M_Interface",
            "              PERIOD:'.'  <== mode:M_Interface",
            "              (range",
            "                (subrange",
            "                  low = DEC:'904'  <== mode:M_Interface)))",
            "            NEWLINE:'\\n'  <== mode:M_Interface",
            "            (interface_multicast_tail",
            "              BOUNDARY:'boundary'",
            "              (null_rest_of_line",
            "                MCAST_BOUNDARY:'mcast-boundary'",
            "                NEWLINE:'\\n')))",
            "          (interface_multicast_stanza",
            "            INTERFACE:'interface'",
            "            (interface_name",
            "              name_prefix_alpha = M_Interface_PREFIX:'TenGigE'  <== mode:M_Interface",
            "              DEC:'0'  <== mode:M_Interface",
            "              FORWARD_SLASH:'/'  <== mode:M_Interface",
            "              DEC:'0'  <== mode:M_Interface",
            "              FORWARD_SLASH:'/'  <== mode:M_Interface",
            "              DEC:'2'  <== mode:M_Interface",
            "              FORWARD_SLASH:'/'  <== mode:M_Interface",
            "              DEC:'3'  <== mode:M_Interface",
            "              PERIOD:'.'  <== mode:M_Interface",
            "              (range",
            "                (subrange",
            "                  low = DEC:'905'  <== mode:M_Interface)))",
            "            NEWLINE:'\\n'  <== mode:M_Interface",
            "            (interface_multicast_tail",
            "              BOUNDARY:'boundary'",
            "              (null_rest_of_line",
            "                MCAST_BOUNDARY:'mcast-boundary'",
            "                NEWLINE:'\\n')))",
            "          (interface_multicast_stanza",
            "            INTERFACE:'interface'",
            "            (interface_name",
            "              name_prefix_alpha = M_Interface_PREFIX:'TenGigE'  <== mode:M_Interface",
            "              DEC:'0'  <== mode:M_Interface",
            "              FORWARD_SLASH:'/'  <== mode:M_Interface",
            "              DEC:'0'  <== mode:M_Interface",
            "              FORWARD_SLASH:'/'  <== mode:M_Interface",
            "              DEC:'2'  <== mode:M_Interface",
            "              FORWARD_SLASH:'/'  <== mode:M_Interface",
            "              DEC:'3'  <== mode:M_Interface",
            "              PERIOD:'.'  <== mode:M_Interface",
            "              (range",
            "                (subrange",
            "                  low = DEC:'906'  <== mode:M_Interface)))",
            "            NEWLINE:'\\n'  <== mode:M_Interface",
            "            (interface_multicast_tail",
            "              BOUNDARY:'boundary'",
            "              (null_rest_of_line",
            "                MCAST_BOUNDARY:'mcast-boundary'",
            "                NEWLINE:'\\n')))",
            "          (interface_multicast_stanza",
            "            INTERFACE:'interface'",
            "            (interface_name",
            "              name_prefix_alpha = M_Interface_PREFIX:'TenGigE'  <== mode:M_Interface",
            "              DEC:'0'  <== mode:M_Interface",
            "              FORWARD_SLASH:'/'  <== mode:M_Interface",
            "              DEC:'0'  <== mode:M_Interface",
            "              FORWARD_SLASH:'/'  <== mode:M_Interface",
            "              DEC:'2'  <== mode:M_Interface",
            "              FORWARD_SLASH:'/'  <== mode:M_Interface",
            "              DEC:'3'  <== mode:M_Interface",
            "              PERIOD:'.'  <== mode:M_Interface",
            "              (range",
            "                (subrange",
            "                  low = DEC:'907'  <== mode:M_Interface)))",
            "            NEWLINE:'\\n'  <== mode:M_Interface",
            "            (interface_multicast_tail",
            "              BOUNDARY:'boundary'",
            "              (null_rest_of_line",
            "                MCAST_BOUNDARY:'mcast-boundary'",
            "                NEWLINE:'\\n')))",
            "          (interface_multicast_stanza",
            "            INTERFACE:'interface'",
            "            (interface_name",
            "              name_prefix_alpha = M_Interface_PREFIX:'TenGigE'  <== mode:M_Interface",
            "              DEC:'0'  <== mode:M_Interface",
            "              FORWARD_SLASH:'/'  <== mode:M_Interface",
            "              DEC:'0'  <== mode:M_Interface",
            "              FORWARD_SLASH:'/'  <== mode:M_Interface",
            "              DEC:'2'  <== mode:M_Interface",
            "              FORWARD_SLASH:'/'  <== mode:M_Interface",
            "              DEC:'3'  <== mode:M_Interface",
            "              PERIOD:'.'  <== mode:M_Interface",
            "              (range",
            "                (subrange",
            "                  low = DEC:'908'  <== mode:M_Interface)))",
            "            NEWLINE:'\\n'  <== mode:M_Interface",
            "            (interface_multicast_tail",
            "              BOUNDARY:'boundary'",
            "              (null_rest_of_line",
            "                MCAST_BOUNDARY:'mcast-boundary'",
            "                NEWLINE:'\\n')))",
            "          (interface_multicast_stanza",
            "            INTERFACE:'interface'",
            "            (interface_name",
            "              name_prefix_alpha = M_Interface_PREFIX:'TenGigE'  <== mode:M_Interface",
            "              DEC:'0'  <== mode:M_Interface",
            "              FORWARD_SLASH:'/'  <== mode:M_Interface",
            "              DEC:'0'  <== mode:M_Interface",
            "              FORWARD_SLASH:'/'  <== mode:M_Interface",
            "              DEC:'2'  <== mode:M_Interface",
            "              FORWARD_SLASH:'/'  <== mode:M_Interface",
            "              DEC:'3'  <== mode:M_Interface",
            "              PERIOD:'.'  <== mode:M_Interface",
            "              (range",
            "                (subrange",
            "                  low = DEC:'909'  <== mode:M_Interface)))",
            "            NEWLINE:'\\n'  <== mode:M_Interface",
            "            (interface_multicast_tail",
            "              BOUNDARY:'boundary'",
            "              (null_rest_of_line",
            "                MCAST_BOUNDARY:'mcast-boundary'",
            "                NEWLINE:'\\n')))",
            "          (interface_multicast_stanza",
            "            INTERFACE:'interface'",
            "            (interface_name",
            "              name_prefix_alpha = M_Interface_PREFIX:'TenGigE'  <== mode:M_Interface",
            "              DEC:'0'  <== mode:M_Interface",
            "              FORWARD_SLASH:'/'  <== mode:M_Interface",
            "              DEC:'0'  <== mode:M_Interface",
            "              FORWARD_SLASH:'/'  <== mode:M_Interface",
            "              DEC:'2'  <== mode:M_Interface",
            "              FORWARD_SLASH:'/'  <== mode:M_Interface",
            "              DEC:'3'  <== mode:M_Interface",
            "              PERIOD:'.'  <== mode:M_Interface",
            "              (range",
            "                (subrange",
            "                  low = DEC:'910'  <== mode:M_Interface)))",
            "            NEWLINE:'\\n'  <== mode:M_Interface",
            "            (interface_multicast_tail",
            "              BOUNDARY:'boundary'",
            "              (null_rest_of_line",
            "                MCAST_BOUNDARY:'mcast-boundary'",
            "                NEWLINE:'\\n')))",
            "          (interface_multicast_stanza",
            "            INTERFACE:'interface'",
            "            (interface_name",
            "              name_prefix_alpha = M_Interface_PREFIX:'TenGigE'  <== mode:M_Interface",
            "              DEC:'0'  <== mode:M_Interface",
            "              FORWARD_SLASH:'/'  <== mode:M_Interface",
            "              DEC:'0'  <== mode:M_Interface",
            "              FORWARD_SLASH:'/'  <== mode:M_Interface",
            "              DEC:'2'  <== mode:M_Interface",
            "              FORWARD_SLASH:'/'  <== mode:M_Interface",
            "              DEC:'3'  <== mode:M_Interface",
            "              PERIOD:'.'  <== mode:M_Interface",
            "              (range",
            "                (subrange",
            "                  low = DEC:'911'  <== mode:M_Interface)))",
            "            NEWLINE:'\\n'  <== mode:M_Interface",
            "            (interface_multicast_tail",
            "              BOUNDARY:'boundary'",
            "              (null_rest_of_line",
            "                MCAST_BOUNDARY:'mcast-boundary'",
            "                NEWLINE:'\\n')))",
            "          (interface_multicast_stanza",
            "            INTERFACE:'interface'",
            "            (interface_name",
            "              name_prefix_alpha = M_Interface_PREFIX:'TenGigE'  <== mode:M_Interface",
            "              DEC:'0'  <== mode:M_Interface",
            "              FORWARD_SLASH:'/'  <== mode:M_Interface",
            "              DEC:'0'  <== mode:M_Interface",
            "              FORWARD_SLASH:'/'  <== mode:M_Interface",
            "              DEC:'2'  <== mode:M_Interface",
            "              FORWARD_SLASH:'/'  <== mode:M_Interface",
            "              DEC:'3'  <== mode:M_Interface",
            "              PERIOD:'.'  <== mode:M_Interface",
            "              (range",
            "                (subrange",
            "                  low = DEC:'912'  <== mode:M_Interface)))",
            "            NEWLINE:'\\n'  <== mode:M_Interface",
            "            (interface_multicast_tail",
            "              BOUNDARY:'boundary'",
            "              (null_rest_of_line",
            "                VARIABLE:'mcast-boundar'",
            "                NEWLINE:'\\n')))",
            "          (interface_multicast_stanza",
            "            INTERFACE:'interface'",
            "            (interface_name",
            "              name_prefix_alpha = M_Interface_PREFIX:'TenGigE'  <== mode:M_Interface",
            "              DEC:'0'  <== mode:M_Interface",
            "              FORWARD_SLASH:'/'  <== mode:M_Interface",
            "              DEC:'0'  <== mode:M_Interface",
            "              FORWARD_SLASH:'/'  <== mode:M_Interface",
            "              DEC:'2'  <== mode:M_Interface",
            "              FORWARD_SLASH:'/'  <== mode:M_Interface",
            "              DEC:'3'  <== mode:M_Interface",
            "              PERIOD:'.'  <== mode:M_Interface",
            "              (range",
            "                (subrange",
            "                  low = DEC:'913'  <== mode:M_Interface)))",
            "            NEWLINE:'\\n'  <== mode:M_Interface",
            "            (interface_multicast_tail",
            "              BOUNDARY:'boundary'",
            "              (null_rest_of_line",
            "                MCAST_BOUNDARY:'mcast-boundary'",
            "                NEWLINE:'\\n')))",
            "          INTERFACE:'interface'",
            "          ALL:'all'  <== mode:M_Interface",
            "          ENABLE:'enable'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        END:'end'",
            "        NEWLINE:'\\n\\n')))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/ios_xr_multipart" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'ios_xr_multipart'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_null",
            "      (null_block",
            "        CLOCK:'clock'",
            "        (null_rest_of_line",
            "          VARIABLE:'timezone'",
            "          VARIABLE:'UTC'",
            "          VARIABLE:'UTC'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (banner_stanza",
            "      BANNER:'banner'",
            "      (banner_type",
            "        LOGIN:'login'  <== mode:M_Banner)",
            "      (banner",
            "        ESCAPE_C:'^C'  <== mode:M_BannerText",
            "        M_MOTD_C_MOTD:'\\n\\n***************************************************************************\\n*                                                                         *\\n*  This router is : ios_xr_multipart                                      *\\n*                                                                         * \\n***************************************************************************\\n'  <== mode:M_MOTD_C",
            "        ESCAPE_C:'^C'  <== mode:M_MOTD_C",
            "        NEWLINE:'\\n\\n')))",
            "  (stanza",
            "    (rsvp_stanza",
            "      RSVP:'rsvp'",
            "      NEWLINE:'\\n'",
            "      (rs_stanza",
            "        (interface_rs_stanza",
            "          INTERFACE:'interface'",
            "          name = (interface_name",
            "            name_prefix_alpha = M_Interface_PREFIX:'Bundle-Ether'  <== mode:M_Interface",
            "            (range",
            "              (subrange",
            "                low = DEC:'1'  <== mode:M_Interface)))",
            "          NEWLINE:'\\n'  <== mode:M_Interface",
            "          (irs_stanza",
            "            (bandwidth_irs_stanza",
            "              BANDWIDTH:'bandwidth'",
            "              (null_rest_of_line",
            "                VARIABLE:'percentage'",
            "                DEC:'95'",
            "                NEWLINE:'\\n')))",
            "          (irs_stanza",
            "            (bandwidth_irs_stanza",
            "              BANDWIDTH:'bandwidth'",
            "              (null_rest_of_line",
            "                DEC:'1000000'",
            "                NEWLINE:'\\n')))",
            "          (irs_stanza",
            "            (null_irs_stanza",
            "              SIGNALLING:'signalling'",
            "              (null_rest_of_line",
            "                HELLO:'hello'",
            "                GRACEFUL_RESTART:'graceful-restart'",
            "                VARIABLE:'interface-based'",
            "                NEWLINE:'\\n')))))",
            "      (rs_stanza",
            "        (null_rs_stanza",
            "          LOGGING:'logging'",
            "          (null_rest_of_line",
            "            EVENTS:'events'",
            "            NSR:'nsr'",
            "            NEWLINE:'\\n')))",
            "      (rs_stanza",
            "        (null_rs_stanza",
            "          LOGGING:'logging'",
            "          (null_rest_of_line",
            "            EVENTS:'events'",
            "            VARIABLE:'issu'",
            "            NEWLINE:'\\n')))",
            "      (rs_stanza",
            "        (null_rs_stanza",
            "          AUTHENTICATION:'authentication'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n'  <== mode:M_Authentication)))",
            "      (rs_stanza",
            "        (null_rs_stanza",
            "          KEY_SOURCE:'key-source'",
            "          (null_rest_of_line",
            "            VARIABLE:'key-chain'",
            "            VARIABLE:'RSVP'",
            "            NEWLINE:'\\n')))",
            "      (rs_stanza",
            "        (null_rs_stanza",
            "          WINDOW_SIZE:'window-size'",
            "          (null_rest_of_line",
            "            DEC:'8'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_ssh",
            "      SSH:'ssh'",
            "      (ssh_server",
            "        SERVER:'server'",
            "        V2:'v2'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_ssh",
            "      SSH:'ssh'",
            "      (ssh_server",
            "        SERVER:'server'",
            "        VRF:'vrf'",
            "        vrf = (variable",
            "          DEFAULT:'default')",
            "        IPV4:'ipv4'",
            "        ACCESS_LIST:'access-list'",
            "        acl = (variable",
            "          VARIABLE:'GNS-VTY-ACCESS')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_block",
            "        CEF:'cef'",
            "        (null_rest_of_line",
            "          LOAD_BALANCING:'load-balancing'",
            "          FIELDS:'fields'",
            "          VARIABLE:'L4'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        END:'end'",
            "        NEWLINE:'\\n\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_block",
            "        FPD:'fpd'",
            "        (null_rest_of_line",
            "          AUTO_UPGRADE:'auto-upgrade'",
            "          DISABLE:'disable'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_null",
            "      (null_block",
            "        CONFDCONFIG:'confdConfig'",
            "        (null_rest_of_line",
            "          VARIABLE:'encryptedStrings'",
            "          VARIABLE:'DES3CBC'",
            "          VARIABLE:'key1'",
            "          VARIABLE:'0123456789ABCDEF'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_null",
            "      (null_block",
            "        CONFDCONFIG:'confdConfig'",
            "        (null_rest_of_line",
            "          VARIABLE:'encryptedStrings'",
            "          VARIABLE:'DES3CBC'",
            "          VARIABLE:'key2'",
            "          VARIABLE:'0123456789ABCDEF'",
            "          NEWLINE:'\\n\\n'))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/ios_xr_ntp" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'ios_xr_ntp'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_ntp",
            "      NTP:'ntp'",
            "      NEWLINE:'\\n'",
            "      (ntp_common",
            "        (ntp_null",
            "          AUTHENTICATION_KEY:'authentication-key'",
            "          (null_rest_of_line",
            "            DEC:'12'",
            "            MD5:'md5'",
            "            ENCRYPTED:'encrypted'",
            "            VARIABLE:'053811060F787E0A11'",
            "            NEWLINE:'\\n')))",
            "      (ntp_common",
            "        (ntp_server",
            "          SERVER:'server'",
            "          hostname = (variable",
            "            IP_ADDRESS:'1.2.3.4')",
            "          prefer = PREFER:'prefer'",
            "          NEWLINE:'\\n'))",
            "      (ntp_common",
            "        (ntp_source",
            "          SOURCE:'source'",
            "          (null_rest_of_line",
            "            VARIABLE:'Loopback0'",
            "            NEWLINE:'\\n')))",
            "      (ntp_common",
            "        (ntp_update_calendar",
            "          UPDATE_CALENDAR:'update-calendar'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n')))",
            "      (ntp_common",
            "        (ntp_null",
            "          LOG_INTERNAL_SYNC:'log-internal-sync'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n')))",
            "      (ntp_common",
            "        (ntp_null",
            "          INTERFACE:'interface'",
            "          (null_rest_of_line",
            "            M_Interface_PREFIX:'Loopback'  <== mode:M_Interface",
            "            DEC:'123'  <== mode:M_Interface",
            "            NEWLINE:'\\n'  <== mode:M_Interface)))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/ios_xr_ospf" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'ios_xr_ospf'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_router_ospf",
            "      ROUTER:'router'",
            "      OSPF:'ospf'",
            "      name = (variable",
            "        DEC:'2')",
            "      NEWLINE:'\\n'",
            "      (ro_common",
            "        (ro_null",
            "          NSR:'nsr'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n')))",
            "      (ro_common",
            "        (ro_null",
            "          LOG:'log'",
            "          (null_rest_of_line",
            "            ADJACENCY:'adjacency'",
            "            CHANGES:'changes'",
            "            DETAIL:'detail'",
            "            NEWLINE:'\\n')))",
            "      (ro_router_id",
            "        ROUTER_ID:'router-id'",
            "        ip = IP_ADDRESS:'169.232.1.4'",
            "        NEWLINE:'\\n')",
            "      (ro_common",
            "        (ro_authentication",
            "          AUTHENTICATION:'authentication'",
            "          MESSAGE_DIGEST:'message-digest'  <== mode:M_Authentication",
            "          NEWLINE:'\\n'))",
            "      (ro_maximum_paths",
            "        MAXIMUM:'maximum'",
            "        PATHS:'paths'",
            "        DEC:'16'",
            "        NEWLINE:'\\n')",
            "      (ro_common",
            "        (ro_null",
            "          MAXIMUM:'maximum'",
            "          REDISTRIBUTED_PREFIXES:'redistributed-prefixes'",
            "          (null_rest_of_line",
            "            DEC:'50'",
            "            NEWLINE:'\\n')))",
            "      (ro_common",
            "        (ro_null",
            "          MTU_IGNORE:'mtu-ignore'",
            "          (null_rest_of_line",
            "            ENABLE:'enable'",
            "            NEWLINE:'\\n')))",
            "      (ro_common",
            "        (ro_null",
            "          NSF:'nsf'",
            "          (null_rest_of_line",
            "            VARIABLE:'cisco'",
            "            NEWLINE:'\\n')))",
            "      (ro_address_family",
            "        ADDRESS_FAMILY:'address-family'",
            "        IPV4:'ipv4'",
            "        UNICAST:'unicast'",
            "        NEWLINE:'\\n')",
            "      (ro_default_information",
            "        DEFAULT_INFORMATION:'default-information'",
            "        ORIGINATE:'originate'",
            "        METRIC:'metric'",
            "        metric = DEC:'10'",
            "        ROUTE_POLICY:'route-policy'",
            "        policy = VARIABLE:'ospf_default_ipv4'",
            "        NEWLINE:'\\n')",
            "      (ro_area",
            "        AREA:'area'",
            "        area_int = DEC:'0'",
            "        NEWLINE:'\\n'",
            "        (roa_range",
            "          RANGE:'range'",
            "          prefix = IP_PREFIX:'10.0.0.0/15'",
            "          ADVERTISE:'advertise'",
            "          NEWLINE:'\\n')",
            "        (roa_interface",
            "          INTERFACE:'interface'",
            "          iname = (interface_name",
            "            name_prefix_alpha = M_Interface_PREFIX:'Bundle-Ether'  <== mode:M_Interface",
            "            (range",
            "              (subrange",
            "                low = DEC:'101'  <== mode:M_Interface)))",
            "          NEWLINE:'\\n'  <== mode:M_Interface",
            "          (ro_common",
            "            (ro_null",
            "              BFD:'bfd'",
            "              (null_rest_of_line",
            "                FAST_DETECT:'fast-detect'",
            "                NEWLINE:'\\n')))",
            "          (roi_network",
            "            NETWORK:'network'",
            "            BROADCAST:'broadcast'",
            "            NEWLINE:'\\n')",
            "          (ro_common",
            "            (ro_null",
            "              MESSAGE_DIGEST_KEY:'message-digest-key'",
            "              (null_rest_of_line",
            "                DEC:'20'",
            "                MD5:'md5'",
            "                ENCRYPTED:'encrypted'",
            "                VARIABLE:'FF00FF00FF00FF00FF00FF'",
            "                NEWLINE:'\\n')))",
            "          (roi_priority",
            "            PRIORITY:'priority'",
            "            DEC:'2'",
            "            NEWLINE:'\\n'))",
            "        (roa_interface",
            "          INTERFACE:'interface'",
            "          iname = (interface_name",
            "            name_prefix_alpha = M_Interface_PREFIX:'Bundle-Ether'  <== mode:M_Interface",
            "            (range",
            "              (subrange",
            "                low = DEC:'103'  <== mode:M_Interface)))",
            "          NEWLINE:'\\n'  <== mode:M_Interface",
            "          (roi_network",
            "            NETWORK:'network'",
            "            BROADCAST:'broadcast'",
            "            NEWLINE:'\\n')",
            "          (roi_priority",
            "            PRIORITY:'priority'",
            "            DEC:'2'",
            "            NEWLINE:'\\n'))",
            "        (roa_interface",
            "          INTERFACE:'interface'",
            "          iname = (interface_name",
            "            name_prefix_alpha = M_Interface_PREFIX:'Bundle-Ether'  <== mode:M_Interface",
            "            (range",
            "              (subrange",
            "                low = DEC:'201'  <== mode:M_Interface)))",
            "          NEWLINE:'\\n'  <== mode:M_Interface",
            "          (roi_cost",
            "            COST:'cost'",
            "            cost = DEC:'1'",
            "            NEWLINE:'\\n')",
            "          (roi_network",
            "            NETWORK:'network'",
            "            POINT_TO_POINT:'point-to-point'",
            "            NEWLINE:'\\n')",
            "          (roi_passive",
            "            PASSIVE:'passive'",
            "            ENABLE:'enable'",
            "            NEWLINE:'\\n'))",
            "        (roa_interface",
            "          INTERFACE:'interface'",
            "          iname = (interface_name",
            "            name_prefix_alpha = M_Interface_PREFIX:'Loopback'  <== mode:M_Interface",
            "            (range",
            "              (subrange",
            "                low = DEC:'0'  <== mode:M_Interface)))",
            "          NEWLINE:'\\n'  <== mode:M_Interface",
            "          (roi_passive",
            "            PASSIVE:'passive'",
            "            ENABLE:'enable'",
            "            NEWLINE:'\\n'))",
            "        (roa_interface",
            "          INTERFACE:'interface'",
            "          iname = (interface_name",
            "            name_prefix_alpha = M_Interface_PREFIX:'TenGigE'  <== mode:M_Interface",
            "            DEC:'0'  <== mode:M_Interface",
            "            FORWARD_SLASH:'/'  <== mode:M_Interface",
            "            DEC:'0'  <== mode:M_Interface",
            "            FORWARD_SLASH:'/'  <== mode:M_Interface",
            "            DEC:'0'  <== mode:M_Interface",
            "            FORWARD_SLASH:'/'  <== mode:M_Interface",
            "            (range",
            "              (subrange",
            "                low = DEC:'4'  <== mode:M_Interface)))",
            "          NEWLINE:'\\n'  <== mode:M_Interface",
            "          (roi_passive",
            "            PASSIVE:'passive'",
            "            ENABLE:'enable'",
            "            NEWLINE:'\\n'))",
            "        (roa_interface",
            "          INTERFACE:'interface'",
            "          iname = (interface_name",
            "            name_prefix_alpha = M_Interface_PREFIX:'TenGigE'  <== mode:M_Interface",
            "            DEC:'0'  <== mode:M_Interface",
            "            FORWARD_SLASH:'/'  <== mode:M_Interface",
            "            DEC:'0'  <== mode:M_Interface",
            "            FORWARD_SLASH:'/'  <== mode:M_Interface",
            "            DEC:'0'  <== mode:M_Interface",
            "            FORWARD_SLASH:'/'  <== mode:M_Interface",
            "            (range",
            "              (subrange",
            "                low = DEC:'5'  <== mode:M_Interface)))",
            "          NEWLINE:'\\n'  <== mode:M_Interface",
            "          (roi_passive",
            "            PASSIVE:'passive'",
            "            ENABLE:'enable'",
            "            NEWLINE:'\\n'))",
            "        (roa_interface",
            "          INTERFACE:'interface'",
            "          iname = (interface_name",
            "            name_prefix_alpha = M_Interface_PREFIX:'HundredGigE'  <== mode:M_Interface",
            "            DEC:'0'  <== mode:M_Interface",
            "            FORWARD_SLASH:'/'  <== mode:M_Interface",
            "            DEC:'2'  <== mode:M_Interface",
            "            FORWARD_SLASH:'/'  <== mode:M_Interface",
            "            DEC:'0'  <== mode:M_Interface",
            "            FORWARD_SLASH:'/'  <== mode:M_Interface",
            "            DEC:'0'  <== mode:M_Interface",
            "            PERIOD:'.'  <== mode:M_Interface",
            "            (range",
            "              (subrange",
            "                low = DEC:'292'  <== mode:M_Interface)))",
            "          NEWLINE:'\\n'  <== mode:M_Interface)",
            "        (roa_interface",
            "          INTERFACE:'interface'",
            "          iname = (interface_name",
            "            name_prefix_alpha = M_Interface_PREFIX:'HundredGigE'  <== mode:M_Interface",
            "            DEC:'0'  <== mode:M_Interface",
            "            FORWARD_SLASH:'/'  <== mode:M_Interface",
            "            DEC:'2'  <== mode:M_Interface",
            "            FORWARD_SLASH:'/'  <== mode:M_Interface",
            "            DEC:'0'  <== mode:M_Interface",
            "            FORWARD_SLASH:'/'  <== mode:M_Interface",
            "            (range",
            "              (subrange",
            "                low = DEC:'3'  <== mode:M_Interface)))",
            "          NEWLINE:'\\n'  <== mode:M_Interface",
            "          (roi_network",
            "            NETWORK:'network'",
            "            BROADCAST:'broadcast'",
            "            NEWLINE:'\\n')))",
            "      (ro_area",
            "        AREA:'area'",
            "        area_int = DEC:'60'",
            "        NEWLINE:'\\n'",
            "        (ro_common",
            "          (ro_authentication",
            "            AUTHENTICATION:'authentication'",
            "            MESSAGE_DIGEST:'message-digest'  <== mode:M_Authentication",
            "            NEWLINE:'\\n'))",
            "        (ro_common",
            "          (ro_nssa",
            "            NSSA:'nssa'",
            "            NO_SUMMARY:'no-summary'",
            "            NEWLINE:'\\n'))",
            "        (roa_interface",
            "          INTERFACE:'interface'",
            "          iname = (interface_name",
            "            name_prefix_alpha = M_Interface_PREFIX:'TenGigE'  <== mode:M_Interface",
            "            DEC:'0'  <== mode:M_Interface",
            "            FORWARD_SLASH:'/'  <== mode:M_Interface",
            "            DEC:'0'  <== mode:M_Interface",
            "            FORWARD_SLASH:'/'  <== mode:M_Interface",
            "            DEC:'0'  <== mode:M_Interface",
            "            FORWARD_SLASH:'/'  <== mode:M_Interface",
            "            (range",
            "              (subrange",
            "                low = DEC:'2'  <== mode:M_Interface)))",
            "          NEWLINE:'\\n'  <== mode:M_Interface",
            "          (roi_network",
            "            NETWORK:'network'",
            "            BROADCAST:'broadcast'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_router_ospfv3",
            "      ROUTER:'router'",
            "      OSPFV3:'ospfv3'",
            "      procname = (variable",
            "        DEC:'1')",
            "      NEWLINE:'\\n'",
            "      (rov3_common",
            "        (rov3_null",
            "          NSR:'nsr'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n')))",
            "      (rov3_common",
            "        (rov3_null",
            "          MAXIMUM:'maximum'",
            "          (null_rest_of_line",
            "            PATHS:'paths'",
            "            DEC:'16'",
            "            NEWLINE:'\\n')))",
            "      (rov3_common",
            "        (rov3_null",
            "          MAXIMUM:'maximum'",
            "          (null_rest_of_line",
            "            REDISTRIBUTED_PREFIXES:'redistributed-prefixes'",
            "            DEC:'50'",
            "            NEWLINE:'\\n')))",
            "      (rov3_common",
            "        (rov3_null",
            "          MTU_IGNORE:'mtu-ignore'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n')))",
            "      (rov3_common",
            "        (rov3_null",
            "          ROUTER_ID:'router-id'",
            "          (null_rest_of_line",
            "            IP_ADDRESS:'169.232.1.4'",
            "            NEWLINE:'\\n')))",
            "      (rov3_common",
            "        (rov3_null",
            "          LOG:'log'",
            "          (null_rest_of_line",
            "            ADJACENCY:'adjacency'",
            "            CHANGES:'changes'",
            "            DETAIL:'detail'",
            "            NEWLINE:'\\n')))",
            "      (rov3_common",
            "        (rov3_null",
            "          DEFAULT_INFORMATION:'default-information'",
            "          (null_rest_of_line",
            "            ORIGINATE:'originate'",
            "            METRIC:'metric'",
            "            DEC:'10'",
            "            ROUTE_POLICY:'route-policy'",
            "            VARIABLE:'ospf_default_ipv6'",
            "            NEWLINE:'\\n')))",
            "      (rov3_common",
            "        (rov3_null",
            "          AREA:'area'",
            "          (null_rest_of_line",
            "            DEC:'0'",
            "            NEWLINE:'\\n')))",
            "      (rov3_common",
            "        (rov3_null",
            "          RANGE:'range'",
            "          (null_rest_of_line",
            "            IPV6_PREFIX:'2222:0:0::/52'",
            "            ADVERTISE:'advertise'",
            "            NEWLINE:'\\n')))",
            "      (rov3_common",
            "        (rov3_null",
            "          INTERFACE:'interface'",
            "          (null_rest_of_line",
            "            M_Interface_PREFIX:'Loopback'  <== mode:M_Interface",
            "            DEC:'0'  <== mode:M_Interface",
            "            NEWLINE:'\\n'  <== mode:M_Interface)))",
            "      (rov3_common",
            "        (rov3_null",
            "          COST:'cost'",
            "          (null_rest_of_line",
            "            DEC:'1'",
            "            NEWLINE:'\\n')))",
            "      (rov3_common",
            "        (rov3_null",
            "          PASSIVE:'passive'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n')))",
            "      (rov3_common",
            "        (rov3_null",
            "          INTERFACE:'interface'",
            "          (null_rest_of_line",
            "            M_Interface_PREFIX:'TenGigE'  <== mode:M_Interface",
            "            DEC:'0'  <== mode:M_Interface",
            "            FORWARD_SLASH:'/'  <== mode:M_Interface",
            "            DEC:'0'  <== mode:M_Interface",
            "            FORWARD_SLASH:'/'  <== mode:M_Interface",
            "            DEC:'0'  <== mode:M_Interface",
            "            FORWARD_SLASH:'/'  <== mode:M_Interface",
            "            DEC:'4'  <== mode:M_Interface",
            "            NEWLINE:'\\n'  <== mode:M_Interface)))",
            "      (rov3_common",
            "        (rov3_null",
            "          BFD:'bfd'",
            "          (null_rest_of_line",
            "            MULTIPLIER:'multiplier'",
            "            DEC:'5'",
            "            NEWLINE:'\\n')))",
            "      (rov3_common",
            "        (rov3_null",
            "          BFD:'bfd'",
            "          (null_rest_of_line",
            "            FAST_DETECT:'fast-detect'",
            "            NEWLINE:'\\n')))",
            "      (rov3_common",
            "        (rov3_null",
            "          BFD:'bfd'",
            "          (null_rest_of_line",
            "            MINIMUM_INTERVAL:'minimum-interval'",
            "            DEC:'200'",
            "            NEWLINE:'\\n')))",
            "      (rov3_common",
            "        (rov3_null",
            "          INTERFACE:'interface'",
            "          (null_rest_of_line",
            "            M_Interface_PREFIX:'TenGigE'  <== mode:M_Interface",
            "            DEC:'0'  <== mode:M_Interface",
            "            FORWARD_SLASH:'/'  <== mode:M_Interface",
            "            DEC:'0'  <== mode:M_Interface",
            "            FORWARD_SLASH:'/'  <== mode:M_Interface",
            "            DEC:'0'  <== mode:M_Interface",
            "            FORWARD_SLASH:'/'  <== mode:M_Interface",
            "            DEC:'5'  <== mode:M_Interface",
            "            NEWLINE:'\\n'  <== mode:M_Interface)))",
            "      (rov3_common",
            "        (rov3_null",
            "          PASSIVE:'passive'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n')))",
            "      (rov3_common",
            "        (rov3_null",
            "          INTERFACE:'interface'",
            "          (null_rest_of_line",
            "            M_Interface_PREFIX:'Bundle-Ether'  <== mode:M_Interface",
            "            DEC:'101'  <== mode:M_Interface",
            "            NEWLINE:'\\n'  <== mode:M_Interface)))",
            "      (rov3_common",
            "        (rov3_null",
            "          NETWORK:'network'",
            "          (null_rest_of_line",
            "            BROADCAST:'broadcast'",
            "            NEWLINE:'\\n')))",
            "      (rov3_common",
            "        (rov3_null",
            "          PRIORITY:'priority'",
            "          (null_rest_of_line",
            "            DEC:'2'",
            "            NEWLINE:'\\n')))",
            "      (rov3_common",
            "        (rov3_null",
            "          DEAD_INTERVAL:'dead-interval'",
            "          (null_rest_of_line",
            "            DEC:'3'",
            "            NEWLINE:'\\n')))",
            "      (rov3_common",
            "        (rov3_null",
            "          HELLO_INTERVAL:'hello-interval'",
            "          (null_rest_of_line",
            "            DEC:'1'",
            "            NEWLINE:'\\n')))",
            "      (rov3_common",
            "        (rov3_null",
            "          INTERFACE:'interface'",
            "          (null_rest_of_line",
            "            M_Interface_PREFIX:'Bundle-Ether'  <== mode:M_Interface",
            "            DEC:'103'  <== mode:M_Interface",
            "            NEWLINE:'\\n'  <== mode:M_Interface)))",
            "      (rov3_common",
            "        (rov3_null",
            "          NETWORK:'network'",
            "          (null_rest_of_line",
            "            BROADCAST:'broadcast'",
            "            NEWLINE:'\\n')))",
            "      (rov3_common",
            "        (rov3_null",
            "          PRIORITY:'priority'",
            "          (null_rest_of_line",
            "            DEC:'2'",
            "            NEWLINE:'\\n')))",
            "      (rov3_common",
            "        (rov3_null",
            "          DEAD_INTERVAL:'dead-interval'",
            "          (null_rest_of_line",
            "            DEC:'3'",
            "            NEWLINE:'\\n')))",
            "      (rov3_common",
            "        (rov3_null",
            "          HELLO_INTERVAL:'hello-interval'",
            "          (null_rest_of_line",
            "            DEC:'1'",
            "            NEWLINE:'\\n')))",
            "      (rov3_common",
            "        (rov3_null",
            "          INTERFACE:'interface'",
            "          (null_rest_of_line",
            "            M_Interface_PREFIX:'Bundle-Ether'  <== mode:M_Interface",
            "            DEC:'201'  <== mode:M_Interface",
            "            NEWLINE:'\\n'  <== mode:M_Interface)))",
            "      (rov3_common",
            "        (rov3_null",
            "          PASSIVE:'passive'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n')))",
            "      (rov3_common",
            "        (rov3_null",
            "          INTERFACE:'interface'",
            "          (null_rest_of_line",
            "            M_Interface_PREFIX:'HundredGigE'  <== mode:M_Interface",
            "            DEC:'0'  <== mode:M_Interface",
            "            FORWARD_SLASH:'/'  <== mode:M_Interface",
            "            DEC:'2'  <== mode:M_Interface",
            "            FORWARD_SLASH:'/'  <== mode:M_Interface",
            "            DEC:'0'  <== mode:M_Interface",
            "            FORWARD_SLASH:'/'  <== mode:M_Interface",
            "            DEC:'3'  <== mode:M_Interface",
            "            NEWLINE:'\\n'  <== mode:M_Interface)))",
            "      (rov3_common",
            "        (rov3_null",
            "          NETWORK:'network'",
            "          (null_rest_of_line",
            "            BROADCAST:'broadcast'",
            "            NEWLINE:'\\n')))",
            "      (rov3_common",
            "        (rov3_null",
            "          INTERFACE:'interface'",
            "          (null_rest_of_line",
            "            M_Interface_PREFIX:'HundredGigE'  <== mode:M_Interface",
            "            DEC:'0'  <== mode:M_Interface",
            "            FORWARD_SLASH:'/'  <== mode:M_Interface",
            "            DEC:'2'  <== mode:M_Interface",
            "            FORWARD_SLASH:'/'  <== mode:M_Interface",
            "            DEC:'0'  <== mode:M_Interface",
            "            FORWARD_SLASH:'/'  <== mode:M_Interface",
            "            DEC:'0'  <== mode:M_Interface",
            "            PERIOD:'.'  <== mode:M_Interface",
            "            DEC:'292'  <== mode:M_Interface",
            "            NEWLINE:'\\n'  <== mode:M_Interface)))))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        END:'end'",
            "        NEWLINE:'\\n')))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/ios_xr_prefix_set" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'preSet'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (prefix_set_stanza",
            "      PREFIX_SET:'prefix-set'",
            "      name = (variable",
            "        VARIABLE:'default_route')",
            "      NEWLINE:'\\n'",
            "      (prefix_set_elem_list",
            "        (prefix_set_elem",
            "          ipa = IP_ADDRESS:'0.0.0.0')",
            "        NEWLINE:'\\n')",
            "      END_SET:'end-set'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (prefix_set_stanza",
            "      PREFIX_SET:'prefix-set'",
            "      name = (variable",
            "        VARIABLE:'ucla_networks')",
            "      NEWLINE:'\\n'",
            "      (prefix_set_elem_list",
            "        (prefix_set_elem",
            "          prefix = IP_PREFIX:'128.97.0.0/16'",
            "          LE:'le'",
            "          maxpl = DEC:'32')",
            "        COMMA:','",
            "        NEWLINE:'\\n'",
            "        (prefix_set_elem",
            "          prefix = IP_PREFIX:'131.179.0.0/16'",
            "          LE:'le'",
            "          maxpl = DEC:'32')",
            "        COMMA:','",
            "        NEWLINE:'\\n'",
            "        (prefix_set_elem",
            "          prefix = IP_PREFIX:'149.142.0.0/16'",
            "          LE:'le'",
            "          maxpl = DEC:'32')",
            "        COMMA:','",
            "        NEWLINE:'\\n'",
            "        (prefix_set_elem",
            "          prefix = IP_PREFIX:'164.67.0.0/16'",
            "          LE:'le'",
            "          maxpl = DEC:'32')",
            "        COMMA:','",
            "        NEWLINE:'\\n'",
            "        (prefix_set_elem",
            "          prefix = IP_PREFIX:'169.232.0.0/16'",
            "          LE:'le'",
            "          maxpl = DEC:'32')",
            "        COMMA:','",
            "        NEWLINE:'\\n'",
            "        (prefix_set_elem",
            "          prefix = IP_PREFIX:'192.35.225.0/24'",
            "          LE:'le'",
            "          maxpl = DEC:'32')",
            "        COMMA:','",
            "        NEWLINE:'\\n'",
            "        (prefix_set_elem",
            "          prefix = IP_PREFIX:'192.154.2.0/24'",
            "          LE:'le'",
            "          maxpl = DEC:'32')",
            "        COMMA:','",
            "        NEWLINE:'\\n'",
            "        (prefix_set_elem",
            "          prefix = IP_PREFIX:'198.17.109.0/24'",
            "          LE:'le'",
            "          maxpl = DEC:'32')",
            "        NEWLINE:'\\n')",
            "      END_SET:'end-set'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        END:'end'",
            "        NEWLINE:'\\n\\n')))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/ios_xr_route_policy" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'rP'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (route_policy_stanza",
            "      ROUTE_POLICY:'route-policy'",
            "      name = (variable",
            "        VARIABLE:'fooey_blackhole')",
            "      NEWLINE:'\\n'",
            "      (rp_stanza",
            "        (if_rp_stanza",
            "          IF:'if'",
            "          (boolean_rp_stanza",
            "            (boolean_and_rp_stanza",
            "              (boolean_and_rp_stanza",
            "                (boolean_and_rp_stanza",
            "                  (boolean_not_rp_stanza",
            "                    (boolean_simple_rp_stanza",
            "                      (boolean_destination_rp_stanza",
            "                        DESTINATION:'destination'",
            "                        IN:'in'",
            "                        (rp_prefix_set",
            "                          name = (variable",
            "                            VARIABLE:'barbar_blackhole_routes'))))))",
            "                AND:'and'",
            "                (boolean_not_rp_stanza",
            "                  (boolean_simple_rp_stanza",
            "                    (boolean_community_matches_any_rp_stanza",
            "                      COMMUNITY:'community'",
            "                      MATCHES_ANY:'matches-any'",
            "                      (rp_community_set",
            "                        name = (variable",
            "                          VARIABLE:'fooey_blackhole_community'))))))",
            "              AND:'and'",
            "              (boolean_not_rp_stanza",
            "                (boolean_simple_rp_stanza",
            "                  (boolean_local_preference_rp_stanza",
            "                    LOCAL_PREFERENCE:'local-preference'",
            "                    (int_comp",
            "                      IS:'is')",
            "                    rhs = (int_expr",
            "                      DEC:'123'))))))",
            "          THEN:'then'",
            "          NEWLINE:'\\n'",
            "          (rp_stanza",
            "            (set_rp_stanza",
            "              (set_next_hop_rp_stanza",
            "                SET:'set'",
            "                NEXT_HOP:'next-hop'",
            "                IP_ADDRESS:'1.2.3.4'",
            "                NEWLINE:'\\n')))",
            "          (rp_stanza",
            "            (set_rp_stanza",
            "              (set_origin_rp_stanza",
            "                SET:'set'",
            "                ORIGIN:'origin'",
            "                (origin_expr",
            "                  (origin_expr_literal",
            "                    IGP:'igp'))",
            "                NEWLINE:'\\n')))",
            "          (rp_stanza",
            "            (set_rp_stanza",
            "              (set_weight_rp_stanza",
            "                SET:'set'",
            "                WEIGHT:'weight'",
            "                weight = (int_expr",
            "                  DEC:'0')",
            "                NEWLINE:'\\n')))",
            "          (rp_stanza",
            "            (disposition_rp_stanza",
            "              PASS:'pass'",
            "              NEWLINE:'\\n'))",
            "          ENDIF:'endif'",
            "          NEWLINE:'\\n'))",
            "      END_POLICY:'end-policy'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (route_policy_stanza",
            "      ROUTE_POLICY:'route-policy'",
            "      name = (variable",
            "        VARIABLE:'fooey_to_barbar_ipv4')",
            "      NEWLINE:'\\n'",
            "      (rp_stanza",
            "        (apply_rp_stanza",
            "          APPLY:'apply'",
            "          name = (variable",
            "            VARIABLE:'default_route_filter')",
            "          NEWLINE:'\\n'))",
            "      (rp_stanza",
            "        (apply_rp_stanza",
            "          APPLY:'apply'",
            "          name = (variable",
            "            VARIABLE:'inbound_route_filter')",
            "          NEWLINE:'\\n'))",
            "      (rp_stanza",
            "        (apply_rp_stanza",
            "          APPLY:'apply'",
            "          name = (variable",
            "            VARIABLE:'drop_community_5555')",
            "          NEWLINE:'\\n'))",
            "      (rp_stanza",
            "        (if_rp_stanza",
            "          IF:'if'",
            "          (boolean_rp_stanza",
            "            (boolean_and_rp_stanza",
            "              (boolean_not_rp_stanza",
            "                (boolean_simple_rp_stanza",
            "                  (boolean_community_matches_any_rp_stanza",
            "                    COMMUNITY:'community'",
            "                    MATCHES_ANY:'matches-any'",
            "                    (rp_community_set",
            "                      name = (variable",
            "                        VARIABLE:'fooey_routes_community')))))))",
            "          THEN:'then'",
            "          NEWLINE:'\\n'",
            "          (rp_stanza",
            "            (set_rp_stanza",
            "              (set_local_preference_rp_stanza",
            "                SET:'set'",
            "                LOCAL_PREFERENCE:'local-preference'",
            "                pref = (int_expr",
            "                  DEC:'350')",
            "                NEWLINE:'\\n')))",
            "          ENDIF:'endif'",
            "          NEWLINE:'\\n'))",
            "      END_POLICY:'end-policy'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (route_policy_stanza",
            "      ROUTE_POLICY:'route-policy'",
            "      name = (variable",
            "        VARIABLE:'fooey_to_barbar_ipv6')",
            "      NEWLINE:'\\n'",
            "      (rp_stanza",
            "        (if_rp_stanza",
            "          IF:'if'",
            "          (boolean_rp_stanza",
            "            (boolean_rp_stanza",
            "              (boolean_and_rp_stanza",
            "                (boolean_not_rp_stanza",
            "                  (boolean_simple_rp_stanza",
            "                    (boolean_destination_rp_stanza",
            "                      DESTINATION:'destination'",
            "                      IN:'in'",
            "                      (rp_prefix_set",
            "                        name = (variable",
            "                          VARIABLE:'barbar_networks_ipv6')))))))",
            "            OR:'or'",
            "            (boolean_and_rp_stanza",
            "              (boolean_not_rp_stanza",
            "                (boolean_simple_rp_stanza",
            "                  (boolean_destination_rp_stanza",
            "                    DESTINATION:'destination'",
            "                    IN:'in'",
            "                    (rp_prefix_set",
            "                      PAREN_LEFT:'('",
            "                      (prefix_set_elem",
            "                        ipv6_prefix = IPV6_PREFIX:'::/0')",
            "                      PAREN_RIGHT:')'))))))",
            "          THEN:'then'",
            "          NEWLINE:'\\n'",
            "          (rp_stanza",
            "            (disposition_rp_stanza",
            "              DROP:'drop'",
            "              NEWLINE:'\\n'))",
            "          (else_rp_stanza",
            "            ELSE:'else'",
            "            NEWLINE:'\\n'",
            "            (rp_stanza",
            "              (set_rp_stanza",
            "                (set_local_preference_rp_stanza",
            "                  SET:'set'",
            "                  LOCAL_PREFERENCE:'local-preference'",
            "                  pref = (int_expr",
            "                    DEC:'350')",
            "                  NEWLINE:'\\n'))))",
            "          ENDIF:'endif'",
            "          NEWLINE:'\\n'))",
            "      END_POLICY:'end-policy'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (route_policy_stanza",
            "      ROUTE_POLICY:'route-policy'",
            "      name = (variable",
            "        VARIABLE:'aaaa')",
            "      NEWLINE:'\\n'",
            "      (rp_stanza",
            "        (if_rp_stanza",
            "          IF:'if'",
            "          (boolean_rp_stanza",
            "            (boolean_and_rp_stanza",
            "              (boolean_not_rp_stanza",
            "                (boolean_simple_rp_stanza",
            "                  (boolean_apply_rp_stanza",
            "                    APPLY:'apply'",
            "                    name = (variable",
            "                      VARIABLE:'bbbb'))))))",
            "          THEN:'then'",
            "          NEWLINE:'\\n'",
            "          (rp_stanza",
            "            (apply_rp_stanza",
            "              APPLY:'apply'",
            "              name = (variable",
            "                VARIABLE:'cccc')",
            "              NEWLINE:'\\n'))",
            "          ENDIF:'endif'",
            "          NEWLINE:'\\n'))",
            "      END_POLICY:'end-policy'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (route_policy_stanza",
            "      ROUTE_POLICY:'route-policy'",
            "      name = (variable",
            "        VARIABLE:'drop_community_5555')",
            "      NEWLINE:'\\n'",
            "      (rp_stanza",
            "        (if_rp_stanza",
            "          IF:'if'",
            "          (boolean_rp_stanza",
            "            (boolean_and_rp_stanza",
            "              (boolean_not_rp_stanza",
            "                (boolean_simple_rp_stanza",
            "                  (boolean_community_matches_any_rp_stanza",
            "                    COMMUNITY:'community'",
            "                    MATCHES_ANY:'matches-any'",
            "                    (rp_community_set",
            "                      name = (variable",
            "                        VARIABLE:'community_5555')))))))",
            "          THEN:'then'",
            "          NEWLINE:'\\n'",
            "          (rp_stanza",
            "            (delete_rp_stanza",
            "              DELETE:'delete'",
            "              COMMUNITY:'community'",
            "              IN:'in'",
            "              (rp_community_set",
            "                name = (variable",
            "                  VARIABLE:'community_5555'))",
            "              NEWLINE:'\\n'))",
            "          (rp_stanza",
            "            (disposition_rp_stanza",
            "              PASS:'pass'",
            "              NEWLINE:'\\n'))",
            "          ENDIF:'endif'",
            "          NEWLINE:'\\n'))",
            "      END_POLICY:'end-policy'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (route_policy_stanza",
            "      ROUTE_POLICY:'route-policy'",
            "      name = (variable",
            "        VARIABLE:'ospf_default_ipv4')",
            "      NEWLINE:'\\n'",
            "      (rp_stanza",
            "        (if_rp_stanza",
            "          IF:'if'",
            "          (boolean_rp_stanza",
            "            (boolean_and_rp_stanza",
            "              (boolean_not_rp_stanza",
            "                (boolean_simple_rp_stanza",
            "                  (boolean_rib_has_route_rp_stanza",
            "                    RIB_HAS_ROUTE:'rib-has-route'",
            "                    IN:'in'",
            "                    (rp_prefix_set",
            "                      PAREN_LEFT:'('",
            "                      (prefix_set_elem",
            "                        prefix = IP_PREFIX:'2.3.4.0/24')",
            "                      PAREN_RIGHT:')'))))))",
            "          THEN:'then'",
            "          NEWLINE:'\\n'",
            "          (rp_stanza",
            "            (disposition_rp_stanza",
            "              PASS:'pass'",
            "              NEWLINE:'\\n'))",
            "          ENDIF:'endif'",
            "          NEWLINE:'\\n'))",
            "      END_POLICY:'end-policy'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (route_policy_stanza",
            "      ROUTE_POLICY:'route-policy'",
            "      name = (variable",
            "        VARIABLE:'perfsonar_andsn_ipv4')",
            "      NEWLINE:'\\n'",
            "      (rp_stanza",
            "        (if_rp_stanza",
            "          IF:'if'",
            "          (boolean_rp_stanza",
            "            (boolean_and_rp_stanza",
            "              (boolean_not_rp_stanza",
            "                (boolean_simple_rp_stanza",
            "                  (boolean_destination_rp_stanza",
            "                    DESTINATION:'destination'",
            "                    IN:'in'",
            "                    (rp_prefix_set",
            "                      name = (variable",
            "                        VARIABLE:'bippetyboppety_ipv4')))))))",
            "          THEN:'then'",
            "          NEWLINE:'\\n'",
            "          (rp_stanza",
            "            (set_rp_stanza",
            "              (set_med_rp_stanza",
            "                SET:'set'",
            "                MED:'med'",
            "                med = (int_expr",
            "                  DEC:'25')",
            "                NEWLINE:'\\n')))",
            "          (rp_stanza",
            "            (disposition_rp_stanza",
            "              DONE:'done'",
            "              NEWLINE:'\\n'))",
            "          ENDIF:'endif'",
            "          NEWLINE:'\\n'))",
            "      (rp_stanza",
            "        (set_rp_stanza",
            "          (set_level_rp_stanza",
            "            SET:'set'",
            "            LEVEL:'level'",
            "            (isis_level_expr",
            "              (isis_level",
            "                LEVEL_2:'level-2'))",
            "            NEWLINE:'\\n')))",
            "      END_POLICY:'end-policy'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (route_policy_stanza",
            "      ROUTE_POLICY:'route-policy'",
            "      name = (variable",
            "        VARIABLE:'barbar_to_fooey_community_ipv4')",
            "      NEWLINE:'\\n'",
            "      (rp_stanza",
            "        (if_rp_stanza",
            "          IF:'if'",
            "          (boolean_rp_stanza",
            "            (boolean_rp_stanza",
            "              (boolean_rp_stanza",
            "                (boolean_and_rp_stanza",
            "                  (boolean_not_rp_stanza",
            "                    (boolean_simple_rp_stanza",
            "                      (boolean_destination_rp_stanza",
            "                        DESTINATION:'destination'",
            "                        IN:'in'",
            "                        (rp_prefix_set",
            "                          name = (variable",
            "                            VARIABLE:'barbar_networks_ipv4')))))))",
            "              OR:'or'",
            "              (boolean_and_rp_stanza",
            "                (boolean_not_rp_stanza",
            "                  (boolean_simple_rp_stanza",
            "                    (boolean_destination_rp_stanza",
            "                      DESTINATION:'destination'",
            "                      IN:'in'",
            "                      (rp_prefix_set",
            "                        name = (variable",
            "                          VARIABLE:'barbar_blackhole_routes')))))))",
            "            OR:'or'",
            "            (boolean_and_rp_stanza",
            "              (boolean_not_rp_stanza",
            "                (boolean_simple_rp_stanza",
            "                  (boolean_destination_rp_stanza",
            "                    DESTINATION:'destination'",
            "                    IN:'in'",
            "                    (rp_prefix_set",
            "                      name = (variable",
            "                        VARIABLE:'bippetyboppety_ipv4')))))))",
            "          THEN:'then'",
            "          NEWLINE:'\\n'",
            "          (rp_stanza",
            "            (set_rp_stanza",
            "              (set_community_rp_stanza",
            "                SET:'set'",
            "                COMMUNITY:'community'",
            "                (rp_community_set",
            "                  name = (variable",
            "                    VARIABLE:'barbar_to_fooey_community_ipv4'))",
            "                ADDITIVE:'additive'",
            "                NEWLINE:'\\n')))",
            "          (rp_stanza",
            "            (disposition_rp_stanza",
            "              PASS:'pass'",
            "              NEWLINE:'\\n'))",
            "          ENDIF:'endif'",
            "          NEWLINE:'\\n'))",
            "      END_POLICY:'end-policy'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (route_policy_stanza",
            "      ROUTE_POLICY:'route-policy'",
            "      name = (variable",
            "        VARIABLE:'EBGP-PEER-AS6461-LAX-PNI-IN')",
            "      NEWLINE:'\\n'",
            "      (rp_stanza",
            "        (apply_rp_stanza",
            "          APPLY:'apply'",
            "          name = (variable",
            "            VARIABLE:'EBGP_PEER_LAX-PNI_IN')",
            "          NEWLINE:'\\n'))",
            "      (rp_stanza",
            "        (if_rp_stanza",
            "          IF:'if'",
            "          (boolean_rp_stanza",
            "            (boolean_and_rp_stanza",
            "              (boolean_not_rp_stanza",
            "                (boolean_simple_rp_stanza",
            "                  (boolean_med_rp_stanza",
            "                    MED:'med'",
            "                    (int_comp",
            "                      EQ:'eq')",
            "                    rhs = (int_expr",
            "                      DEC:'0'))))))",
            "          THEN:'then'",
            "          NEWLINE:'\\n'",
            "          (rp_stanza",
            "            (disposition_rp_stanza",
            "              PASS:'pass'",
            "              NEWLINE:'\\n'))",
            "          (else_rp_stanza",
            "            ELSE:'else'",
            "            NEWLINE:'\\n'",
            "            (rp_stanza",
            "              (set_rp_stanza",
            "                (set_med_rp_stanza",
            "                  SET:'set'",
            "                  MED:'med'",
            "                  med = (int_expr",
            "                    PLUS:'+'",
            "                    DEC:'874')",
            "                  NEWLINE:'\\n')))",
            "            (rp_stanza",
            "              (disposition_rp_stanza",
            "                PASS:'pass'",
            "                NEWLINE:'\\n')))",
            "          ENDIF:'endif'",
            "          NEWLINE:'\\n'))",
            "      END_POLICY:'end-policy'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (route_policy_stanza",
            "      ROUTE_POLICY:'route-policy'",
            "      name = (variable",
            "        VARIABLE:'redistribute-static-isis')",
            "      NEWLINE:'\\n'",
            "      (rp_stanza",
            "        (if_rp_stanza",
            "          IF:'if'",
            "          (boolean_rp_stanza",
            "            (boolean_and_rp_stanza",
            "              (boolean_not_rp_stanza",
            "                (boolean_simple_rp_stanza",
            "                  (boolean_destination_rp_stanza",
            "                    DESTINATION:'destination'",
            "                    IN:'in'",
            "                    (rp_prefix_set",
            "                      name = (variable",
            "                        VARIABLE:'remote-router-loopbacks')))))))",
            "          THEN:'then'",
            "          NEWLINE:'\\n'",
            "          (rp_stanza",
            "            (disposition_rp_stanza",
            "              PASS:'pass'",
            "              NEWLINE:'\\n'))",
            "          (elseif_rp_stanza",
            "            ELSEIF:'elseif'",
            "            (boolean_rp_stanza",
            "              (boolean_and_rp_stanza",
            "                (boolean_not_rp_stanza",
            "                  (boolean_simple_rp_stanza",
            "                    (boolean_destination_rp_stanza",
            "                      DESTINATION:'destination'",
            "                      IN:'in'",
            "                      (rp_prefix_set",
            "                        name = (variable",
            "                          VARIABLE:'local-peer-aggregates')))))))",
            "            THEN:'then'",
            "            NEWLINE:'\\n'",
            "            (rp_stanza",
            "              (set_rp_stanza",
            "                (set_isis_metric_rp_stanza",
            "                  SET:'set'",
            "                  ISIS_METRIC:'isis-metric'",
            "                  (int_expr",
            "                    DEC:'9101')",
            "                  NEWLINE:'\\n')))",
            "            (rp_stanza",
            "              (disposition_rp_stanza",
            "                PASS:'pass'",
            "                NEWLINE:'\\n')))",
            "          (else_rp_stanza",
            "            ELSE:'else'",
            "            NEWLINE:'\\n'",
            "            (rp_stanza",
            "              (disposition_rp_stanza",
            "                DROP:'drop'",
            "                NEWLINE:'\\n')))",
            "          ENDIF:'endif'",
            "          NEWLINE:'\\n'))",
            "      END_POLICY:'end-policy'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (route_policy_stanza",
            "      ROUTE_POLICY:'route-policy'",
            "      name = (variable",
            "        VARIABLE:'EBGP-PEER-SANITY-IN')",
            "      NEWLINE:'\\n'",
            "      (rp_stanza",
            "        (if_rp_stanza",
            "          IF:'if'",
            "          (boolean_rp_stanza",
            "            (boolean_and_rp_stanza",
            "              (boolean_not_rp_stanza",
            "                (boolean_simple_rp_stanza",
            "                  PAREN_LEFT:'('",
            "                  (boolean_rp_stanza",
            "                    (boolean_and_rp_stanza",
            "                      (boolean_not_rp_stanza",
            "                        (boolean_simple_rp_stanza",
            "                          (boolean_as_path_passes_through_rp_stanza",
            "                            AS_PATH:'as-path'",
            "                            PASSES_THROUGH:'passes-through'  <== mode:M_AsPath",
            "                            (as_range_expr",
            "                              SINGLE_QUOTE:'''",
            "                              (rp_subrange",
            "                                BRACKET_LEFT:'['",
            "                                first = (int_expr",
            "                                  DEC:'65412')",
            "                                PERIOD:'.'",
            "                                PERIOD:'.'",
            "                                last = (int_expr",
            "                                  DEC:'65535')",
            "                                BRACKET_RIGHT:']')",
            "                              SINGLE_QUOTE:'''))))))",
            "                  PAREN_RIGHT:')'))))",
            "          THEN:'then'",
            "          NEWLINE:'\\n'",
            "          (rp_stanza",
            "            (disposition_rp_stanza",
            "              DROP:'drop'",
            "              NEWLINE:'\\n'))",
            "          (elseif_rp_stanza",
            "            ELSEIF:'elseif'",
            "            (boolean_rp_stanza",
            "              (boolean_and_rp_stanza",
            "                (boolean_not_rp_stanza",
            "                  (boolean_simple_rp_stanza",
            "                    PAREN_LEFT:'('",
            "                    (boolean_rp_stanza",
            "                      (boolean_rp_stanza",
            "                        (boolean_and_rp_stanza",
            "                          (boolean_not_rp_stanza",
            "                            (boolean_simple_rp_stanza",
            "                              PAREN_LEFT:'('",
            "                              (boolean_rp_stanza",
            "                                (boolean_and_rp_stanza",
            "                                  (boolean_not_rp_stanza",
            "                                    (boolean_simple_rp_stanza",
            "                                      (boolean_destination_rp_stanza",
            "                                        DESTINATION:'destination'",
            "                                        IN:'in'",
            "                                        (rp_prefix_set",
            "                                          name = (variable",
            "                                            VARIABLE:'EBGP-PEER-BOGONS')))))))",
            "                              PAREN_RIGHT:')'))))",
            "                      OR:'or'",
            "                      (boolean_and_rp_stanza",
            "                        (boolean_not_rp_stanza",
            "                          (boolean_simple_rp_stanza",
            "                            PAREN_LEFT:'('",
            "                            (boolean_rp_stanza",
            "                              (boolean_and_rp_stanza",
            "                                (boolean_not_rp_stanza",
            "                                  (boolean_simple_rp_stanza",
            "                                    (boolean_destination_rp_stanza",
            "                                      DESTINATION:'destination'",
            "                                      IN:'in'",
            "                                      (rp_prefix_set",
            "                                        name = (variable",
            "                                          VARIABLE:'EBGP-PEER-OTHER-UNDESIRABLES')))))))",
            "                            PAREN_RIGHT:')'))))",
            "                    PAREN_RIGHT:')'))))",
            "            THEN:'then'",
            "            NEWLINE:'\\n'",
            "            (rp_stanza",
            "              (disposition_rp_stanza",
            "                DROP:'drop'",
            "                NEWLINE:'\\n')))",
            "          (elseif_rp_stanza",
            "            ELSEIF:'elseif'",
            "            (boolean_rp_stanza",
            "              (boolean_and_rp_stanza",
            "                (boolean_not_rp_stanza",
            "                  (boolean_simple_rp_stanza",
            "                    PAREN_LEFT:'('",
            "                    (boolean_rp_stanza",
            "                      (boolean_and_rp_stanza",
            "                        (boolean_not_rp_stanza",
            "                          NOT:'not'",
            "                          (boolean_simple_rp_stanza",
            "                            (boolean_destination_rp_stanza",
            "                              DESTINATION:'destination'",
            "                              IN:'in'",
            "                              (rp_prefix_set",
            "                                name = (variable",
            "                                  VARIABLE:'EBGP-PEER-TOO-SPECIFIC')))))))",
            "                    PAREN_RIGHT:')'))))",
            "            THEN:'then'",
            "            NEWLINE:'\\n'",
            "            (rp_stanza",
            "              (disposition_rp_stanza",
            "                PASS:'pass'",
            "                NEWLINE:'\\n')))",
            "          (else_rp_stanza",
            "            ELSE:'else'",
            "            NEWLINE:'\\n'",
            "            (rp_stanza",
            "              (disposition_rp_stanza",
            "                DROP:'drop'",
            "                NEWLINE:'\\n')))",
            "          ENDIF:'endif'",
            "          NEWLINE:'\\n'))",
            "      END_POLICY:'end-policy'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (route_policy_stanza",
            "      ROUTE_POLICY:'route-policy'",
            "      name = (variable",
            "        VARIABLE:'EBGP-PEER-AS2828-LAX-PNI-OUT')",
            "      NEWLINE:'\\n'",
            "      (rp_stanza",
            "        (apply_rp_stanza",
            "          APPLY:'apply'",
            "          name = (variable",
            "            VARIABLE:'EBGP_PEER_LAX-PNI_OUT')",
            "          NEWLINE:'\\n'))",
            "      (rp_stanza",
            "        (if_rp_stanza",
            "          IF:'if'",
            "          (boolean_rp_stanza",
            "            (boolean_and_rp_stanza",
            "              (boolean_not_rp_stanza",
            "                (boolean_simple_rp_stanza",
            "                  PAREN_LEFT:'('",
            "                  (boolean_rp_stanza",
            "                    (boolean_and_rp_stanza",
            "                      (boolean_not_rp_stanza",
            "                        (boolean_simple_rp_stanza",
            "                          (boolean_community_matches_any_rp_stanza",
            "                            COMMUNITY:'community'",
            "                            MATCHES_ANY:'matches-any'",
            "                            (rp_community_set",
            "                              name = (variable",
            "                                VARIABLE:'EBGP-CUST-NOEXP-PEER-NA')))))))",
            "                  PAREN_RIGHT:')'))))",
            "          THEN:'then'",
            "          NEWLINE:'\\n'",
            "          (rp_stanza",
            "            (disposition_rp_stanza",
            "              DROP:'drop'",
            "              NEWLINE:'\\n'))",
            "          (elseif_rp_stanza",
            "            ELSEIF:'elseif'",
            "            (boolean_rp_stanza",
            "              (boolean_and_rp_stanza",
            "                (boolean_not_rp_stanza",
            "                  (boolean_simple_rp_stanza",
            "                    PAREN_LEFT:'('",
            "                    (boolean_rp_stanza",
            "                      (boolean_and_rp_stanza",
            "                        (boolean_not_rp_stanza",
            "                          (boolean_simple_rp_stanza",
            "                            (boolean_as_path_in_rp_stanza",
            "                              AS_PATH:'as-path'",
            "                              IN:'in'  <== mode:M_AsPath",
            "                              expr = (as_path_set_expr",
            "                                named = (variable",
            "                                  VARIABLE:'xo-deny-as')))))))",
            "                    PAREN_RIGHT:')'))))",
            "            THEN:'then'",
            "            NEWLINE:'\\n'",
            "            (rp_stanza",
            "              (disposition_rp_stanza",
            "                DROP:'drop'",
            "                NEWLINE:'\\n')))",
            "          (elseif_rp_stanza",
            "            ELSEIF:'elseif'",
            "            (boolean_rp_stanza",
            "              (boolean_and_rp_stanza",
            "                (boolean_not_rp_stanza",
            "                  (boolean_simple_rp_stanza",
            "                    PAREN_LEFT:'('",
            "                    (boolean_rp_stanza",
            "                      (boolean_and_rp_stanza",
            "                        (boolean_not_rp_stanza",
            "                          (boolean_simple_rp_stanza",
            "                            (boolean_community_matches_any_rp_stanza",
            "                              COMMUNITY:'community'",
            "                              MATCHES_ANY:'matches-any'",
            "                              (rp_community_set",
            "                                name = (variable",
            "                                  VARIABLE:'EBGP-CUST-EXT')))))))",
            "                    PAREN_RIGHT:')'))))",
            "            THEN:'then'",
            "            NEWLINE:'\\n'",
            "            (rp_stanza",
            "              (disposition_rp_stanza",
            "                PASS:'pass'",
            "                NEWLINE:'\\n')))",
            "          (elseif_rp_stanza",
            "            ELSEIF:'elseif'",
            "            (boolean_rp_stanza",
            "              (boolean_and_rp_stanza",
            "                (boolean_not_rp_stanza",
            "                  (boolean_simple_rp_stanza",
            "                    PAREN_LEFT:'('",
            "                    (boolean_rp_stanza",
            "                      (boolean_and_rp_stanza",
            "                        (boolean_not_rp_stanza",
            "                          (boolean_simple_rp_stanza",
            "                            (boolean_as_path_neighbor_is_rp_stanza",
            "                              AS_PATH:'as-path'",
            "                              NEIGHBOR_IS:'neighbor-is'  <== mode:M_AsPath",
            "                              (as_range_expr",
            "                                SINGLE_QUOTE:'''",
            "                                (rp_subrange",
            "                                  first = (int_expr",
            "                                    DEC:'17369'))",
            "                                SINGLE_QUOTE:'''))))))",
            "                    PAREN_RIGHT:')'))))",
            "            THEN:'then'",
            "            NEWLINE:'\\n'",
            "            (rp_stanza",
            "              (set_rp_stanza",
            "                (prepend_as_path_rp_stanza",
            "                  PREPEND:'prepend'",
            "                  AS_PATH:'as-path'",
            "                  as = (as_expr",
            "                    DEC:'2152'  <== mode:M_AsPath)",
            "                  number = (int_expr",
            "                    DEC:'3')",
            "                  NEWLINE:'\\n'))))",
            "          ENDIF:'endif'",
            "          NEWLINE:'\\n'))",
            "      (rp_stanza",
            "        (disposition_rp_stanza",
            "          PASS:'pass'",
            "          NEWLINE:'\\n'))",
            "      END_POLICY:'end-policy'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (route_policy_stanza",
            "      ROUTE_POLICY:'route-policy'",
            "      name = (variable",
            "        VARIABLE:'to_chillmap')",
            "      NEWLINE:'\\n'",
            "      (rp_stanza",
            "        (if_rp_stanza",
            "          IF:'if'",
            "          (boolean_rp_stanza",
            "            (boolean_and_rp_stanza",
            "              (boolean_not_rp_stanza",
            "                (boolean_simple_rp_stanza",
            "                  PAREN_LEFT:'('",
            "                  (boolean_rp_stanza",
            "                    (boolean_and_rp_stanza",
            "                      (boolean_not_rp_stanza",
            "                        (boolean_simple_rp_stanza",
            "                          (boolean_community_matches_any_rp_stanza",
            "                            COMMUNITY:'community'",
            "                            MATCHES_ANY:'matches-any'",
            "                            (rp_community_set",
            "                              name = (variable",
            "                                VARIABLE:'blackhole-all')))))))",
            "                  PAREN_RIGHT:')'))))",
            "          THEN:'then'",
            "          NEWLINE:'\\n'",
            "          (rp_stanza",
            "            (disposition_rp_stanza",
            "              DROP:'drop'",
            "              NEWLINE:'\\n'))",
            "          (elseif_rp_stanza",
            "            ELSEIF:'elseif'",
            "            (boolean_rp_stanza",
            "              (boolean_and_rp_stanza",
            "                (boolean_not_rp_stanza",
            "                  (boolean_simple_rp_stanza",
            "                    PAREN_LEFT:'('",
            "                    (boolean_rp_stanza",
            "                      (boolean_and_rp_stanza",
            "                        (boolean_not_rp_stanza",
            "                          (boolean_simple_rp_stanza",
            "                            (boolean_community_matches_any_rp_stanza",
            "                              COMMUNITY:'community'",
            "                              MATCHES_ANY:'matches-any'",
            "                              (rp_community_set",
            "                                name = (variable",
            "                                  VARIABLE:'blackhole-isp')))))))",
            "                    PAREN_RIGHT:')'))))",
            "            THEN:'then'",
            "            NEWLINE:'\\n'",
            "            (rp_stanza",
            "              (disposition_rp_stanza",
            "                DROP:'drop'",
            "                NEWLINE:'\\n')))",
            "          (elseif_rp_stanza",
            "            ELSEIF:'elseif'",
            "            (boolean_rp_stanza",
            "              (boolean_and_rp_stanza",
            "                (boolean_not_rp_stanza",
            "                  (boolean_simple_rp_stanza",
            "                    (boolean_next_hop_in_rp_stanza",
            "                      NEXT_HOP:'next-hop'",
            "                      IN:'in'",
            "                      (rp_prefix_set",
            "                        PAREN_LEFT:'('",
            "                        (prefix_set_elem",
            "                          ipa = IP_ADDRESS:'137.164.16.255')",
            "                        PAREN_RIGHT:')'))))))",
            "            THEN:'then'",
            "            NEWLINE:'\\n'",
            "            (rp_stanza",
            "              (disposition_rp_stanza",
            "                DROP:'drop'",
            "                NEWLINE:'\\n')))",
            "          (elseif_rp_stanza",
            "            ELSEIF:'elseif'",
            "            (boolean_rp_stanza",
            "              (boolean_and_rp_stanza",
            "                (boolean_not_rp_stanza",
            "                  (boolean_simple_rp_stanza",
            "                    PAREN_LEFT:'('",
            "                    (boolean_rp_stanza",
            "                      (boolean_and_rp_stanza",
            "                        (boolean_not_rp_stanza",
            "                          (boolean_simple_rp_stanza",
            "                            (boolean_next_hop_in_rp_stanza",
            "                              NEXT_HOP:'next-hop'",
            "                              IN:'in'",
            "                              (rp_prefix_set",
            "                                name = (variable",
            "                                  NULL:'null')))))))",
            "                    PAREN_RIGHT:')'))))",
            "            THEN:'then'",
            "            NEWLINE:'\\n'",
            "            (rp_stanza",
            "              (disposition_rp_stanza",
            "                DROP:'drop'",
            "                NEWLINE:'\\n')))",
            "          (elseif_rp_stanza",
            "            ELSEIF:'elseif'",
            "            (boolean_rp_stanza",
            "              (boolean_and_rp_stanza",
            "                (boolean_not_rp_stanza",
            "                  (boolean_simple_rp_stanza",
            "                    (boolean_community_matches_any_rp_stanza",
            "                      COMMUNITY:'community'",
            "                      MATCHES_ANY:'matches-any'",
            "                      (rp_community_set",
            "                        PAREN_LEFT:'('",
            "                        (community_set_elem",
            "                          (community",
            "                            STANDARD_COMMUNITY:'40027:65535'))",
            "                        COMMA:','",
            "                        (community_set_elem",
            "                          prefix = (community_set_elem_half",
            "                            ASTERISK:'*')",
            "                          COLON:':'",
            "                          suffix = (community_set_elem_half",
            "                            value = DEC:'12345'))",
            "                        PAREN_RIGHT:')'))))))",
            "            THEN:'then'",
            "            NEWLINE:'\\n'",
            "            (rp_stanza",
            "              (disposition_rp_stanza",
            "                DROP:'drop'",
            "                NEWLINE:'\\n')))",
            "          (elseif_rp_stanza",
            "            ELSEIF:'elseif'",
            "            (boolean_rp_stanza",
            "              (boolean_and_rp_stanza",
            "                (boolean_not_rp_stanza",
            "                  (boolean_simple_rp_stanza",
            "                    PAREN_LEFT:'('",
            "                    (boolean_rp_stanza",
            "                      (boolean_and_rp_stanza",
            "                        (boolean_not_rp_stanza",
            "                          (boolean_simple_rp_stanza",
            "                            (boolean_community_matches_any_rp_stanza",
            "                              COMMUNITY:'community'",
            "                              MATCHES_ANY:'matches-any'",
            "                              (rp_community_set",
            "                                name = (variable",
            "                                  VARIABLE:'scenes_No_Export')))))))",
            "                    PAREN_RIGHT:')'))))",
            "            THEN:'then'",
            "            NEWLINE:'\\n'",
            "            (rp_stanza",
            "              (disposition_rp_stanza",
            "                DROP:'drop'",
            "                NEWLINE:'\\n')))",
            "          (elseif_rp_stanza",
            "            ELSEIF:'elseif'",
            "            (boolean_rp_stanza",
            "              (boolean_and_rp_stanza",
            "                (boolean_not_rp_stanza",
            "                  (boolean_simple_rp_stanza",
            "                    PAREN_LEFT:'('",
            "                    (boolean_rp_stanza",
            "                      (boolean_and_rp_stanza",
            "                        (boolean_not_rp_stanza",
            "                          (boolean_simple_rp_stanza",
            "                            (boolean_as_path_in_rp_stanza",
            "                              AS_PATH:'as-path'",
            "                              IN:'in'  <== mode:M_AsPath",
            "                              expr = (as_path_set_expr",
            "                                named = (variable",
            "                                  VARIABLE:'chill-as-path')))))))",
            "                    PAREN_RIGHT:')'))))",
            "            THEN:'then'",
            "            NEWLINE:'\\n'",
            "            (rp_stanza",
            "              (disposition_rp_stanza",
            "                DROP:'drop'",
            "                NEWLINE:'\\n')))",
            "          (elseif_rp_stanza",
            "            ELSEIF:'elseif'",
            "            (boolean_rp_stanza",
            "              (boolean_and_rp_stanza",
            "                (boolean_not_rp_stanza",
            "                  (boolean_simple_rp_stanza",
            "                    PAREN_LEFT:'('",
            "                    (boolean_rp_stanza",
            "                      (boolean_and_rp_stanza",
            "                        (boolean_not_rp_stanza",
            "                          (boolean_simple_rp_stanza",
            "                            (boolean_community_matches_any_rp_stanza",
            "                              COMMUNITY:'community'",
            "                              MATCHES_ANY:'matches-any'",
            "                              (rp_community_set",
            "                                name = (variable",
            "                                  VARIABLE:'wrn-squelch-40027')))))))",
            "                    PAREN_RIGHT:')'))))",
            "            THEN:'then'",
            "            NEWLINE:'\\n'",
            "            (rp_stanza",
            "              (disposition_rp_stanza",
            "                DROP:'drop'",
            "                NEWLINE:'\\n')))",
            "          (elseif_rp_stanza",
            "            ELSEIF:'elseif'",
            "            (boolean_rp_stanza",
            "              (boolean_and_rp_stanza",
            "                (boolean_not_rp_stanza",
            "                  (boolean_simple_rp_stanza",
            "                    PAREN_LEFT:'('",
            "                    (boolean_rp_stanza",
            "                      (boolean_and_rp_stanza",
            "                        (boolean_and_rp_stanza",
            "                          (boolean_not_rp_stanza",
            "                            (boolean_simple_rp_stanza",
            "                              PAREN_LEFT:'('",
            "                              (boolean_rp_stanza",
            "                                (boolean_and_rp_stanza",
            "                                  (boolean_not_rp_stanza",
            "                                    (boolean_simple_rp_stanza",
            "                                      (boolean_community_matches_any_rp_stanza",
            "                                        COMMUNITY:'community'",
            "                                        MATCHES_ANY:'matches-any'",
            "                                        (rp_community_set",
            "                                          name = (variable",
            "                                            VARIABLE:'wrn-expanded')))))))",
            "                              PAREN_RIGHT:')')))",
            "                        AND:'and'",
            "                        (boolean_not_rp_stanza",
            "                          (boolean_simple_rp_stanza",
            "                            PAREN_LEFT:'('",
            "                            (boolean_rp_stanza",
            "                              (boolean_and_rp_stanza",
            "                                (boolean_not_rp_stanza",
            "                                  (boolean_simple_rp_stanza",
            "                                    (boolean_as_path_in_rp_stanza",
            "                                      AS_PATH:'as-path'",
            "                                      IN:'in'  <== mode:M_AsPath",
            "                                      expr = (as_path_set_expr",
            "                                        named = (variable",
            "                                          VARIABLE:'chill_aspath_141_deny')))))))",
            "                            PAREN_RIGHT:')'))))",
            "                    PAREN_RIGHT:')'))))",
            "            THEN:'then'",
            "            NEWLINE:'\\n'",
            "            (rp_stanza",
            "              (disposition_rp_stanza",
            "                DROP:'drop'",
            "                NEWLINE:'\\n')))",
            "          (elseif_rp_stanza",
            "            ELSEIF:'elseif'",
            "            (boolean_rp_stanza",
            "              (boolean_and_rp_stanza",
            "                (boolean_not_rp_stanza",
            "                  (boolean_simple_rp_stanza",
            "                    PAREN_LEFT:'('",
            "                    (boolean_rp_stanza",
            "                      (boolean_and_rp_stanza",
            "                        (boolean_and_rp_stanza",
            "                          (boolean_not_rp_stanza",
            "                            (boolean_simple_rp_stanza",
            "                              (boolean_as_path_neighbor_is_rp_stanza",
            "                                AS_PATH:'as-path'",
            "                                NEIGHBOR_IS:'neighbor-is'  <== mode:M_AsPath",
            "                                (as_range_expr",
            "                                  SINGLE_QUOTE:'''",
            "                                  (rp_subrange",
            "                                    first = (int_expr",
            "                                      DEC:'17369'))",
            "                                  SINGLE_QUOTE:''')))))",
            "                        AND:'and'",
            "                        (boolean_not_rp_stanza",
            "                          (boolean_simple_rp_stanza",
            "                            (boolean_community_matches_any_rp_stanza",
            "                              COMMUNITY:'community'",
            "                              MATCHES_ANY:'matches-any'",
            "                              (rp_community_set",
            "                                PAREN_LEFT:'('",
            "                                (community_set_elem",
            "                                  (community",
            "                                    STANDARD_COMMUNITY:'2152:65298'))",
            "                                COMMA:','",
            "                                (community_set_elem",
            "                                  (community",
            "                                    STANDARD_COMMUNITY:'2152:65498'))",
            "                                PAREN_RIGHT:')'))))))",
            "                    PAREN_RIGHT:')'))))",
            "            THEN:'then'",
            "            NEWLINE:'\\n'",
            "            (rp_stanza",
            "              (set_rp_stanza",
            "                (prepend_as_path_rp_stanza",
            "                  PREPEND:'prepend'",
            "                  AS_PATH:'as-path'",
            "                  as = (as_expr",
            "                    DEC:'2152'  <== mode:M_AsPath)",
            "                  number = (int_expr",
            "                    DEC:'3')",
            "                  NEWLINE:'\\n')))",
            "            (rp_stanza",
            "              (set_rp_stanza",
            "                (set_med_rp_stanza",
            "                  SET:'set'",
            "                  MED:'med'",
            "                  med = (int_expr",
            "                    DEC:'100000')",
            "                  NEWLINE:'\\n')))",
            "            (rp_stanza",
            "              (disposition_rp_stanza",
            "                PASS:'pass'",
            "                NEWLINE:'\\n')))",
            "          (elseif_rp_stanza",
            "            ELSEIF:'elseif'",
            "            (boolean_rp_stanza",
            "              (boolean_and_rp_stanza",
            "                (boolean_not_rp_stanza",
            "                  (boolean_simple_rp_stanza",
            "                    PAREN_LEFT:'('",
            "                    (boolean_rp_stanza",
            "                      (boolean_and_rp_stanza",
            "                        (boolean_not_rp_stanza",
            "                          (boolean_simple_rp_stanza",
            "                            (boolean_community_matches_any_rp_stanza",
            "                              COMMUNITY:'community'",
            "                              MATCHES_ANY:'matches-any'",
            "                              (rp_community_set",
            "                                name = (variable",
            "                                  VARIABLE:'to-peers-backbone')))))))",
            "                    PAREN_RIGHT:')'))))",
            "            THEN:'then'",
            "            NEWLINE:'\\n'",
            "            (rp_stanza",
            "              (disposition_rp_stanza",
            "                PASS:'pass'",
            "                NEWLINE:'\\n')))",
            "          (elseif_rp_stanza",
            "            ELSEIF:'elseif'",
            "            (boolean_rp_stanza",
            "              (boolean_and_rp_stanza",
            "                (boolean_not_rp_stanza",
            "                  (boolean_simple_rp_stanza",
            "                    PAREN_LEFT:'('",
            "                    (boolean_rp_stanza",
            "                      (boolean_and_rp_stanza",
            "                        (boolean_and_rp_stanza",
            "                          (boolean_not_rp_stanza",
            "                            (boolean_simple_rp_stanza",
            "                              (boolean_community_matches_any_rp_stanza",
            "                                COMMUNITY:'community'",
            "                                MATCHES_ANY:'matches-any'",
            "                                (rp_community_set",
            "                                  PAREN_LEFT:'('",
            "                                  (community_set_elem",
            "                                    (community",
            "                                      STANDARD_COMMUNITY:'2152:2152'))",
            "                                  PAREN_RIGHT:')')))))",
            "                        AND:'and'",
            "                        (boolean_not_rp_stanza",
            "                          (boolean_simple_rp_stanza",
            "                            (boolean_community_matches_any_rp_stanza",
            "                              COMMUNITY:'community'",
            "                              MATCHES_ANY:'matches-any'",
            "                              (rp_community_set",
            "                                PAREN_LEFT:'('",
            "                                (community_set_elem",
            "                                  (community",
            "                                    STANDARD_COMMUNITY:'2152:65298'))",
            "                                PAREN_RIGHT:')'))))))",
            "                    PAREN_RIGHT:')'))))",
            "            THEN:'then'",
            "            NEWLINE:'\\n'",
            "            (rp_stanza",
            "              (disposition_rp_stanza",
            "                PASS:'pass'",
            "                NEWLINE:'\\n')))",
            "          (elseif_rp_stanza",
            "            ELSEIF:'elseif'",
            "            (boolean_rp_stanza",
            "              (boolean_and_rp_stanza",
            "                (boolean_not_rp_stanza",
            "                  (boolean_simple_rp_stanza",
            "                    PAREN_LEFT:'('",
            "                    (boolean_rp_stanza",
            "                      (boolean_and_rp_stanza",
            "                        (boolean_not_rp_stanza",
            "                          (boolean_simple_rp_stanza",
            "                            (boolean_community_matches_any_rp_stanza",
            "                              COMMUNITY:'community'",
            "                              MATCHES_ANY:'matches-any'",
            "                              (rp_community_set",
            "                                name = (variable",
            "                                  VARIABLE:'chillmap')))))))",
            "                    PAREN_RIGHT:')'))))",
            "            THEN:'then'",
            "            NEWLINE:'\\n'",
            "            (rp_stanza",
            "              (disposition_rp_stanza",
            "                PASS:'pass'",
            "                NEWLINE:'\\n')))",
            "          (elseif_rp_stanza",
            "            ELSEIF:'elseif'",
            "            (boolean_rp_stanza",
            "              (boolean_and_rp_stanza",
            "                (boolean_not_rp_stanza",
            "                  (boolean_simple_rp_stanza",
            "                    PAREN_LEFT:'('",
            "                    (boolean_rp_stanza",
            "                      (boolean_and_rp_stanza",
            "                        (boolean_and_rp_stanza",
            "                          (boolean_not_rp_stanza",
            "                            (boolean_simple_rp_stanza",
            "                              PAREN_LEFT:'('",
            "                              (boolean_rp_stanza",
            "                                (boolean_and_rp_stanza",
            "                                  (boolean_not_rp_stanza",
            "                                    (boolean_simple_rp_stanza",
            "                                      (boolean_community_matches_any_rp_stanza",
            "                                        COMMUNITY:'community'",
            "                                        MATCHES_ANY:'matches-any'",
            "                                        (rp_community_set",
            "                                          name = (variable",
            "                                            VARIABLE:'wrn-expanded')))))))",
            "                              PAREN_RIGHT:')')))",
            "                        AND:'and'",
            "                        (boolean_not_rp_stanza",
            "                          (boolean_simple_rp_stanza",
            "                            PAREN_LEFT:'('",
            "                            (boolean_rp_stanza",
            "                              (boolean_and_rp_stanza",
            "                                (boolean_not_rp_stanza",
            "                                  (boolean_simple_rp_stanza",
            "                                    (boolean_as_path_in_rp_stanza",
            "                                      AS_PATH:'as-path'",
            "                                      IN:'in'  <== mode:M_AsPath",
            "                                      expr = (as_path_set_expr",
            "                                        named = (variable",
            "                                          VARIABLE:'chill_aspath_141_permit')))))))",
            "                            PAREN_RIGHT:')'))))",
            "                    PAREN_RIGHT:')'))))",
            "            THEN:'then'",
            "            NEWLINE:'\\n'",
            "            (rp_stanza",
            "              (disposition_rp_stanza",
            "                PASS:'pass'",
            "                NEWLINE:'\\n')))",
            "          (elseif_rp_stanza",
            "            ELSEIF:'elseif'",
            "            (boolean_rp_stanza",
            "              (boolean_and_rp_stanza",
            "                (boolean_not_rp_stanza",
            "                  (boolean_simple_rp_stanza",
            "                    PAREN_LEFT:'('",
            "                    (boolean_rp_stanza",
            "                      (boolean_and_rp_stanza",
            "                        (boolean_and_rp_stanza",
            "                          (boolean_not_rp_stanza",
            "                            (boolean_simple_rp_stanza",
            "                              PAREN_LEFT:'('",
            "                              (boolean_rp_stanza",
            "                                (boolean_and_rp_stanza",
            "                                  (boolean_not_rp_stanza",
            "                                    (boolean_simple_rp_stanza",
            "                                      (boolean_community_matches_any_rp_stanza",
            "                                        COMMUNITY:'community'",
            "                                        MATCHES_ANY:'matches-any'",
            "                                        (rp_community_set",
            "                                          name = (variable",
            "                                            VARIABLE:'CF_fooey_Associates-chillmap')))))))",
            "                              PAREN_RIGHT:')')))",
            "                        AND:'and'",
            "                        (boolean_not_rp_stanza",
            "                          (boolean_simple_rp_stanza",
            "                            PAREN_LEFT:'('",
            "                            (boolean_rp_stanza",
            "                              (boolean_and_rp_stanza",
            "                                (boolean_not_rp_stanza",
            "                                  (boolean_simple_rp_stanza",
            "                                    (boolean_as_path_in_rp_stanza",
            "                                      AS_PATH:'as-path'",
            "                                      IN:'in'  <== mode:M_AsPath",
            "                                      expr = (as_path_set_expr",
            "                                        named = (variable",
            "                                          VARIABLE:'chill_aspath_142_permit')))))))",
            "                            PAREN_RIGHT:')'))))",
            "                    PAREN_RIGHT:')'))))",
            "            THEN:'then'",
            "            NEWLINE:'\\n'",
            "            (rp_stanza",
            "              (disposition_rp_stanza",
            "                PASS:'pass'",
            "                NEWLINE:'\\n')))",
            "          (elseif_rp_stanza",
            "            ELSEIF:'elseif'",
            "            (boolean_rp_stanza",
            "              (boolean_and_rp_stanza",
            "                (boolean_not_rp_stanza",
            "                  (boolean_simple_rp_stanza",
            "                    PAREN_LEFT:'('",
            "                    (boolean_rp_stanza",
            "                      (boolean_and_rp_stanza",
            "                        (boolean_and_rp_stanza",
            "                          (boolean_and_rp_stanza",
            "                            (boolean_and_rp_stanza",
            "                              (boolean_not_rp_stanza",
            "                                (boolean_simple_rp_stanza",
            "                                  (boolean_community_matches_any_rp_stanza",
            "                                    COMMUNITY:'community'",
            "                                    MATCHES_ANY:'matches-any'",
            "                                    (rp_community_set",
            "                                      PAREN_LEFT:'('",
            "                                      (community_set_elem",
            "                                        (community",
            "                                          STANDARD_COMMUNITY:'12345:65418'))",
            "                                      PAREN_RIGHT:')')))))",
            "                            AND:'and'",
            "                            (boolean_not_rp_stanza",
            "                              (boolean_simple_rp_stanza",
            "                                (boolean_community_matches_any_rp_stanza",
            "                                  COMMUNITY:'community'",
            "                                  MATCHES_ANY:'matches-any'",
            "                                  (rp_community_set",
            "                                    PAREN_LEFT:'('",
            "                                    (community_set_elem",
            "                                      (community",
            "                                        STANDARD_COMMUNITY:'12345:65437'))",
            "                                    PAREN_RIGHT:')')))))",
            "                          AND:'and'",
            "                          (boolean_not_rp_stanza",
            "                            (boolean_simple_rp_stanza",
            "                              (boolean_as_path_neighbor_is_rp_stanza",
            "                                AS_PATH:'as-path'",
            "                                NEIGHBOR_IS:'neighbor-is'  <== mode:M_AsPath",
            "                                (as_range_expr",
            "                                  SINGLE_QUOTE:'''",
            "                                  (rp_subrange",
            "                                    first = (int_expr",
            "                                      DEC:'12345'))",
            "                                  (rp_subrange",
            "                                    first = (int_expr",
            "                                      DEC:'6360'))",
            "                                  SINGLE_QUOTE:''')))))",
            "                        AND:'and'",
            "                        (boolean_not_rp_stanza",
            "                          (boolean_simple_rp_stanza",
            "                            (boolean_as_path_in_rp_stanza",
            "                              AS_PATH:'as-path'",
            "                              IN:'in'  <== mode:M_AsPath",
            "                              expr = (as_path_set_expr",
            "                                inline = (as_path_set_inline",
            "                                  PAREN_LEFT:'('",
            "                                  (as_path_set_elem",
            "                                    IOS_REGEX:'ios-regex'",
            "                                    AS_PATH_SET_REGEX:''_6360$''  <== mode:M_IosRegex)",
            "                                  PAREN_RIGHT:')')))))))",
            "                    PAREN_RIGHT:')'))))",
            "            THEN:'then'",
            "            NEWLINE:'\\n'",
            "            (rp_stanza",
            "              (disposition_rp_stanza",
            "                PASS:'pass'",
            "                NEWLINE:'\\n')))",
            "          (elseif_rp_stanza",
            "            ELSEIF:'elseif'",
            "            (boolean_rp_stanza",
            "              (boolean_and_rp_stanza",
            "                (boolean_not_rp_stanza",
            "                  (boolean_simple_rp_stanza",
            "                    PAREN_LEFT:'('",
            "                    (boolean_rp_stanza",
            "                      (boolean_and_rp_stanza",
            "                        (boolean_not_rp_stanza",
            "                          (boolean_simple_rp_stanza",
            "                            (boolean_community_matches_any_rp_stanza",
            "                              COMMUNITY:'community'",
            "                              MATCHES_ANY:'matches-any'",
            "                              (rp_community_set",
            "                                name = (variable",
            "                                  VARIABLE:'DC_AT_CHILL')))))))",
            "                    PAREN_RIGHT:')'))))",
            "            THEN:'then'",
            "            NEWLINE:'\\n'",
            "            (rp_stanza",
            "              (disposition_rp_stanza",
            "                PASS:'pass'",
            "                NEWLINE:'\\n')))",
            "          (elseif_rp_stanza",
            "            ELSEIF:'elseif'",
            "            (boolean_rp_stanza",
            "              (boolean_and_rp_stanza",
            "                (boolean_not_rp_stanza",
            "                  (boolean_simple_rp_stanza",
            "                    PAREN_LEFT:'('",
            "                    (boolean_rp_stanza",
            "                      (boolean_and_rp_stanza",
            "                        (boolean_not_rp_stanza",
            "                          (boolean_simple_rp_stanza",
            "                            (boolean_as_path_in_rp_stanza",
            "                              AS_PATH:'as-path'",
            "                              IN:'in'  <== mode:M_AsPath",
            "                              expr = (as_path_set_expr",
            "                                inline = (as_path_set_inline",
            "                                  PAREN_LEFT:'('",
            "                                  (as_path_set_elem",
            "                                    IOS_REGEX:'ios-regex'",
            "                                    AS_PATH_SET_REGEX:''_14041$''  <== mode:M_IosRegex)",
            "                                  COMMA:','",
            "                                  (as_path_set_elem",
            "                                    IOS_REGEX:'ios-regex'",
            "                                    AS_PATH_SET_REGEX:''_104$''  <== mode:M_IosRegex)",
            "                                  COMMA:','",
            "                                  (as_path_set_elem",
            "                                    IOS_REGEX:'ios-regex'",
            "                                    AS_PATH_SET_REGEX:''_2902$''  <== mode:M_IosRegex)",
            "                                  COMMA:','",
            "                                  (as_path_set_elem",
            "                                    IOS_REGEX:'ios-regex'",
            "                                    AS_PATH_SET_REGEX:''_13555$''  <== mode:M_IosRegex)",
            "                                  COMMA:','",
            "                                  (as_path_set_elem",
            "                                    IOS_REGEX:'ios-regex'",
            "                                    AS_PATH_SET_REGEX:''_14041_''  <== mode:M_IosRegex)",
            "                                  PAREN_RIGHT:')')))))))",
            "                    PAREN_RIGHT:')'))))",
            "            THEN:'then'",
            "            NEWLINE:'\\n'",
            "            (rp_stanza",
            "              (disposition_rp_stanza",
            "                PASS:'pass'",
            "                NEWLINE:'\\n')))",
            "          ENDIF:'endif'",
            "          NEWLINE:'\\n'))",
            "      END_POLICY:'end-policy'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (route_policy_stanza",
            "      ROUTE_POLICY:'route-policy'",
            "      name = (variable",
            "        VARIABLE:'doodlepop')",
            "      NEWLINE:'\\n'",
            "      (rp_stanza",
            "        (if_rp_stanza",
            "          IF:'if'",
            "          (boolean_rp_stanza",
            "            (boolean_and_rp_stanza",
            "              (boolean_not_rp_stanza",
            "                (boolean_simple_rp_stanza",
            "                  PAREN_LEFT:'('",
            "                  (boolean_rp_stanza",
            "                    (boolean_and_rp_stanza",
            "                      (boolean_not_rp_stanza",
            "                        (boolean_simple_rp_stanza",
            "                          (boolean_community_matches_any_rp_stanza",
            "                            COMMUNITY:'community'",
            "                            MATCHES_ANY:'matches-any'",
            "                            (rp_community_set",
            "                              name = (variable",
            "                                VARIABLE:'blackhole-all')))))))",
            "                  PAREN_RIGHT:')'))))",
            "          THEN:'then'",
            "          NEWLINE:'\\n'",
            "          (rp_stanza",
            "            (apply_rp_stanza",
            "              APPLY:'apply'",
            "              name = (variable",
            "                VARIABLE:'bgp_standard')",
            "              NEWLINE:'\\n'))",
            "          (rp_stanza",
            "            (set_rp_stanza",
            "              (set_community_rp_stanza",
            "                SET:'set'",
            "                COMMUNITY:'community'",
            "                (rp_community_set",
            "                  PAREN_LEFT:'('",
            "                  (community_set_elem",
            "                    (community",
            "                      STANDARD_COMMUNITY:'1234:666'))",
            "                  COMMA:','",
            "                  (community_set_elem",
            "                    (community",
            "                      STANDARD_COMMUNITY:'1234:65498'))",
            "                  COMMA:','",
            "                  (community_set_elem",
            "                    prefix = (community_set_elem_half",
            "                      value = DEC:'1234')",
            "                    COLON:':'",
            "                    suffix = (community_set_elem_half",
            "                      var = RP_VARIABLE:'$hub_comm'))",
            "                  PAREN_RIGHT:')')",
            "                ADDITIVE:'additive'",
            "                NEWLINE:'\\n')))",
            "          (rp_stanza",
            "            (set_rp_stanza",
            "              (set_next_hop_rp_stanza",
            "                SET:'set'",
            "                NEXT_HOP:'next-hop'",
            "                IPV6_ADDRESS:'1234:1234::118:9a41:ff0'",
            "                NEWLINE:'\\n')))",
            "          (rp_stanza",
            "            (set_rp_stanza",
            "              (set_next_hop_rp_stanza",
            "                SET:'set'",
            "                NEXT_HOP:'next-hop'",
            "                DISCARD:'discard'",
            "                NEWLINE:'\\n')))",
            "          (rp_stanza",
            "            (set_rp_stanza",
            "              (set_path_selection_rp_stanza",
            "                SET:'set'",
            "                PATH_SELECTION:'path-selection'",
            "                (null_rest_of_line",
            "                  BACKUP:'backup'",
            "                  DEC:'1'",
            "                  INSTALL:'install'",
            "                  VARIABLE:'multipath-protect'",
            "                  ADVERTISE:'advertise'",
            "                  NEWLINE:'\\n'))))",
            "          (rp_stanza",
            "            (disposition_rp_stanza",
            "              UNSUPPRESS_ROUTE:'unsuppress-route'",
            "              NEWLINE:'\\n'))",
            "          ENDIF:'endif'",
            "          NEWLINE:'\\n'))",
            "      END_POLICY:'end-policy'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (route_policy_stanza",
            "      ROUTE_POLICY:'route-policy'",
            "      name = (variable",
            "        VARIABLE:'routetype')",
            "      NEWLINE:'\\n'",
            "      (rp_stanza",
            "        (if_rp_stanza",
            "          IF:'if'",
            "          (boolean_rp_stanza",
            "            (boolean_and_rp_stanza",
            "              (boolean_not_rp_stanza",
            "                (boolean_simple_rp_stanza",
            "                  (boolean_route_type_is_rp_stanza",
            "                    ROUTE_TYPE:'route-type'",
            "                    IS:'is'",
            "                    type = (rp_route_type",
            "                      OSPF_INTRA_AREA:'ospf-intra-area'))))))",
            "          THEN:'then'",
            "          NEWLINE:'\\n'",
            "          (rp_stanza",
            "            (disposition_rp_stanza",
            "              PASS:'pass'",
            "              NEWLINE:'\\n'))",
            "          (else_rp_stanza",
            "            ELSE:'else'",
            "            NEWLINE:'\\n'",
            "            (rp_stanza",
            "              (disposition_rp_stanza",
            "                DROP:'drop'",
            "                NEWLINE:'\\n')))",
            "          ENDIF:'endif'",
            "          NEWLINE:'\\n'))",
            "      END_POLICY:'end-policy'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        END:'end'",
            "        NEWLINE:'\\n\\n')))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/ios_xr_router_static" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'ios_xr_router_static'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_router_static",
            "      ROUTER:'router'",
            "      STATIC:'static'",
            "      NEWLINE:'\\n'",
            "      (rs_address_family",
            "        ADDRESS_FAMILY:'address-family'",
            "        IPV4:'ipv4'",
            "        UNICAST:'unicast'",
            "        NEWLINE:'\\n'",
            "        (rs_route",
            "          prefix = IP_PREFIX:'1.2.16.255/32'",
            "          nhint = (interface_name",
            "            VARIABLE:'Null0')",
            "          NEWLINE:'\\n')",
            "        (rs_route",
            "          prefix = IP_PREFIX:'1.2.220.0/24'",
            "          nhint = (interface_name",
            "            VARIABLE:'TenGigE0/0/2/3')",
            "          nhip = IP_ADDRESS:'1.2.220.245'",
            "          TAG:'tag'",
            "          tag = DEC:'64666'",
            "          NEWLINE:'\\n')",
            "        (rs_route",
            "          prefix = IP_PREFIX:'6.7.165.2/32'",
            "          nhip = IP_ADDRESS:'198.188.255.22'",
            "          NEWLINE:'\\n')",
            "        (rs_route",
            "          prefix = IP_PREFIX:'4.5.0.0/16'",
            "          nhint = (interface_name",
            "            VARIABLE:'Null0')",
            "          TAG:'tag'",
            "          tag = DEC:'64725'",
            "          NEWLINE:'\\n')",
            "        (rs_route",
            "          prefix = IP_PREFIX:'2.3.0.0/16'",
            "          nhint = (interface_name",
            "            VARIABLE:'Null0')",
            "          TAG:'tag'",
            "          tag = DEC:'64725'",
            "          NEWLINE:'\\n')",
            "        (rs_route",
            "          prefix = IP_PREFIX:'1.2.0.0/16'",
            "          nhint = (interface_name",
            "            VARIABLE:'Null0')",
            "          TAG:'tag'",
            "          tag = DEC:'64725'",
            "          NEWLINE:'\\n')",
            "        (rs_route",
            "          prefix = IP_PREFIX:'1.2.11.251/32'",
            "          nhint = (interface_name",
            "            VARIABLE:'Null0')",
            "          TAG:'tag'",
            "          tag = DEC:'64725'",
            "          DESCRIPTION:'description'",
            "          description = RAW_TEXT:' \"Check for Default-Originate\"'  <== mode:M_Description",
            "          NEWLINE:'\\n'  <== mode:M_Description)",
            "        (rs_route",
            "          prefix = IP_PREFIX:'1.2.42.185/32'",
            "          nhip = IP_ADDRESS:'1.2.42.186'",
            "          BFD:'bfd'",
            "          FAST_DETECT:'fast-detect'",
            "          MINIMUM_INTERVAL:'minimum-interval'",
            "          minimum_interval = DEC:'999'",
            "          MULTIPLIER:'multiplier'",
            "          multiplier = DEC:'10'",
            "          NEWLINE:'\\n')",
            "        (rs_route",
            "          prefix = IP_PREFIX:'1.2.16.0/24'",
            "          nhint = (interface_name",
            "            VARIABLE:'Null0')",
            "          TAG:'tag'",
            "          tag = DEC:'64725'",
            "          NEWLINE:'\\n')",
            "        (rs_route",
            "          prefix = IP_PREFIX:'1.2.16.255/32'",
            "          nhint = (interface_name",
            "            VARIABLE:'Null0')",
            "          NEWLINE:'\\n')",
            "        (rs_route",
            "          prefix = IP_PREFIX:'9.8.192.32/29'",
            "          nhint = (interface_name",
            "            VARIABLE:'GigabitEthernet0/2/1/5.290')",
            "          nhip = IP_ADDRESS:'1.2.24.98'",
            "          TAG:'tag'",
            "          tag = DEC:'64906'",
            "          NEWLINE:'\\n'))",
            "      (rs_address_family",
            "        ADDRESS_FAMILY:'address-family'",
            "        IPV6:'ipv6'",
            "        UNICAST:'unicast'",
            "        NEWLINE:'\\n'",
            "        (rs_route",
            "          prefix6 = IPV6_PREFIX:'2607:0000::/32'",
            "          nhint = (interface_name",
            "            VARIABLE:'Null0')",
            "          NEWLINE:'\\n')",
            "        (rs_route",
            "          prefix6 = IPV6_PREFIX:'2607:0000::10:0:0/92'",
            "          nhint = (interface_name",
            "            VARIABLE:'Null0')",
            "          NEWLINE:'\\n')",
            "        (rs_route",
            "          prefix6 = IPV6_PREFIX:'2607:0000::110:0:0/92'",
            "          nhint = (interface_name",
            "            VARIABLE:'Null0')",
            "          NEWLINE:'\\n')",
            "        (rs_route",
            "          prefix6 = IPV6_PREFIX:'2607:0000::118:9a41:ff0/128'",
            "          nhint = (interface_name",
            "            VARIABLE:'Null0')",
            "          NEWLINE:'\\n')",
            "        (rs_route",
            "          prefix6 = IPV6_PREFIX:'2607:0000:0:118::/64'",
            "          nhint = (interface_name",
            "            VARIABLE:'Null0')",
            "          TAG:'tag'",
            "          tag = DEC:'64725'",
            "          TRACK:'track'",
            "          track = (variable",
            "            VARIABLE:'IPv6Loopback')",
            "          NEWLINE:'\\n')",
            "        (rs_route",
            "          prefix6 = IPV6_PREFIX:'2607:0000:1::/54'",
            "          nhint = (interface_name",
            "            VARIABLE:'Null0')",
            "          NEWLINE:'\\n'))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/ios_xr_ssh" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'ios_xr_ssh'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_ssh",
            "      SSH:'ssh'",
            "      (ssh_null",
            "        KEY_EXCHANGE:'key-exchange'",
            "        (null_rest_of_line",
            "          GROUP:'group'",
            "          VARIABLE:'dh-group1-sha1'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_ssh",
            "      SSH:'ssh'",
            "      (ssh_server",
            "        SERVER:'server'",
            "        LOGGING:'logging'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_ssh",
            "      SSH:'ssh'",
            "      (ssh_server",
            "        SERVER:'server'",
            "        VRF:'vrf'",
            "        vrf = (variable",
            "          DEFAULT:'default')",
            "        IPV4:'ipv4'",
            "        ACCESS_LIST:'access-list'",
            "        acl = (variable",
            "          VARIABLE:'ACL99')",
            "        IPV6:'ipv6'",
            "        ACCESS_LIST:'access-list'",
            "        acl6 = (variable",
            "          VARIABLE:'ipv6-vty-acl')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_ssh",
            "      SSH:'ssh'",
            "      (ssh_server",
            "        SERVER:'server'",
            "        V2:'v2'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_ssh",
            "      SSH:'ssh'",
            "      (ssh_server",
            "        SERVER:'server'",
            "        SESSION_LIMIT:'session-limit'",
            "        limit = DEC:'16'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_ssh",
            "      SSH:'ssh'",
            "      (ssh_timeout",
            "        TIMEOUT:'timeout'",
            "        DEC:'120'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_ssh",
            "      SSH:'ssh'",
            "      (ssh_null",
            "        VERSION:'version'",
            "        (null_rest_of_line",
            "          DEC:'2'",
            "          NEWLINE:'\\n'))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/ios_xr_taskgroup" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'ios_xr_taskgroup'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_null",
            "      (null_block",
            "        TASKGROUP:'taskgroup'",
            "        (null_rest_of_line",
            "          VARIABLE:'priv1'",
            "          NEWLINE:'\\n')",
            "        (null_inner",
            "          TASK:'task'",
            "          (null_rest_of_line",
            "            VARIABLE:'read'",
            "            ACL:'acl'",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          TASK:'task'",
            "          (null_rest_of_line",
            "            VARIABLE:'read'",
            "            BGP:'bgp'",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          TASK:'task'",
            "          (null_rest_of_line",
            "            VARIABLE:'read'",
            "            CDP:'cdp'",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          TASK:'task'",
            "          (null_rest_of_line",
            "            VARIABLE:'read'",
            "            CEF:'cef'",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          TASK:'task'",
            "          (null_rest_of_line",
            "            VARIABLE:'read'",
            "            PPP:'ppp'",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          TASK:'task'",
            "          (null_rest_of_line",
            "            VARIABLE:'read'",
            "            QOS:'qos'",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          TASK:'task'",
            "          (null_rest_of_line",
            "            VARIABLE:'read'",
            "            VARIABLE:'rib'",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          TASK:'task'",
            "          (null_rest_of_line",
            "            VARIABLE:'read'",
            "            VARIABLE:'dwdm'",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          TASK:'task'",
            "          (null_rest_of_line",
            "            VARIABLE:'read'",
            "            VARIABLE:'hdlc'",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          TASK:'task'",
            "          (null_rest_of_line",
            "            VARIABLE:'read'",
            "            IPV4:'ipv4'",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          TASK:'task'",
            "          (null_rest_of_line",
            "            VARIABLE:'read'",
            "            IPV6:'ipv6'",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          TASK:'task'",
            "          (null_rest_of_line",
            "            VARIABLE:'read'",
            "            ISIS:'isis'",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          TASK:'task'",
            "          (null_rest_of_line",
            "            VARIABLE:'read'",
            "            LPTS:'lpts'",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          TASK:'task'",
            "          (null_rest_of_line",
            "            VARIABLE:'read'",
            "            OSPF:'ospf'",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          TASK:'task'",
            "          (null_rest_of_line",
            "            VARIABLE:'read'",
            "            VARIABLE:'ouni'",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          TASK:'task'",
            "          (null_rest_of_line",
            "            VARIABLE:'read'",
            "            VLAN:'vlan'",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          TASK:'task'",
            "          (null_rest_of_line",
            "            VARIABLE:'read'",
            "            L2VPN:'l2vpn'",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          TASK:'task'",
            "          (null_rest_of_line",
            "            VARIABLE:'read'",
            "            STATIC:'static'",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          TASK:'task'",
            "          (null_rest_of_line",
            "            VARIABLE:'read'",
            "            SYSTEM:'system'",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          TASK:'task'",
            "          (null_rest_of_line",
            "            VARIABLE:'read'",
            "            LOGGING:'logging'",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          TASK:'task'",
            "          (null_rest_of_line",
            "            VARIABLE:'read'",
            "            MONITOR:'monitor'",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          TASK:'task'",
            "          (null_rest_of_line",
            "            VARIABLE:'read'",
            "            VARIABLE:'mpls-te'",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          TASK:'task'",
            "          (null_rest_of_line",
            "            VARIABLE:'read'",
            "            NETWORK:'network'",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          TASK:'task'",
            "          (null_rest_of_line",
            "            VARIABLE:'read'",
            "            VARIABLE:'pos-dpt'",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          TASK:'task'",
            "          (null_rest_of_line",
            "            VARIABLE:'read'",
            "            VARIABLE:'mpls-ldp'",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          TASK:'task'",
            "          (null_rest_of_line",
            "            VARIABLE:'read'",
            "            INTERFACE:'interface'",
            "            NEWLINE:'\\n'  <== mode:M_Interface))",
            "        (null_inner",
            "          TASK:'task'",
            "          (null_rest_of_line",
            "            VARIABLE:'read'",
            "            VARIABLE:'inventory'",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          TASK:'task'",
            "          (null_rest_of_line",
            "            VARIABLE:'read'",
            "            MULTICAST:'multicast'",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          TASK:'task'",
            "          (null_rest_of_line",
            "            VARIABLE:'read'",
            "            ROUTE_MAP:'route-map'",
            "            NEWLINE:'\\n'  <== mode:M_RouteMap))",
            "        (null_inner",
            "          TASK:'task'",
            "          (null_rest_of_line",
            "            VARIABLE:'read'",
            "            VARIABLE:'sonet-sdh'",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          TASK:'task'",
            "          (null_rest_of_line",
            "            VARIABLE:'read'",
            "            VARIABLE:'tty-access'",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          TASK:'task'",
            "          (null_rest_of_line",
            "            VARIABLE:'read'",
            "            VARIABLE:'config-mgmt'",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          TASK:'task'",
            "          (null_rest_of_line",
            "            VARIABLE:'read'",
            "            VARIABLE:'mpls-static'",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          TASK:'task'",
            "          (null_rest_of_line",
            "            VARIABLE:'read'",
            "            ROUTE_POLICY:'route-policy'",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          TASKGROUP:'taskgroup'",
            "          (null_rest_of_line",
            "            VARIABLE:'childgroup'",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          INHERIT:'inherit'",
            "          (null_rest_of_line",
            "            TASKGROUP:'taskgroup'",
            "            VARIABLE:'priv1'",
            "            NEWLINE:'\\n')))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/ip_default_route_classless" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      TEST:'test'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_ip_default_gateway",
            "      IP:'ip'",
            "      DEFAULT_GATEWAY:'default-gateway'",
            "      (ipdg_address",
            "        ip = IP_ADDRESS:'128.125.253.254'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        IP:'ip'",
            "        CLASSLESS:'classless'",
            "        NEWLINE:'\\n')))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/ip_prefix_list_single_line" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'ip_prefix_list_single_line'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (ip_prefix_list_stanza",
            "      IP:'ip'",
            "      PREFIX_LIST:'prefix-list'",
            "      name = (variable",
            "        VARIABLE:'DENY-IPV4-ANY-IN'  <== mode:M_Name)",
            "      (ip_prefix_list_tail",
            "        SEQ:'seq'",
            "        seqnum = DEC:'100'",
            "        action = (access_list_action",
            "          DENY:'deny')",
            "        prefix = IP_PREFIX:'0.0.0.0/0'",
            "        LE:'le'",
            "        maxpl = DEC:'32'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        END:'end'",
            "        NEWLINE:'\\n\\n')))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/isr_crypto" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'isr_crypto_gdoi'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_crypto",
            "      CRYPTO:'crypto'",
            "      (crypto_gdoi",
            "        GDOI:'gdoi'",
            "        (null_rest_of_line",
            "          GROUP:'group'",
            "          VARIABLE:'MYGDOIGROUP'",
            "          NEWLINE:'\\n')",
            "        (cg_null",
            "          IDENTITY:'identity'",
            "          (null_rest_of_line",
            "            VARIABLE:'number'",
            "            DEC:'1234'",
            "            NEWLINE:'\\n'))",
            "        (cg_null",
            "          SERVER:'server'",
            "          (null_rest_of_line",
            "            ADDRESS:'address'",
            "            IPV4:'ipv4'",
            "            IP_ADDRESS:'1.2.3.4'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_crypto",
            "      CRYPTO:'crypto'",
            "      (crypto_map",
            "        MAP:'map'",
            "        name = (variable",
            "          VARIABLE:'MYMAP')",
            "        (crypto_map_null",
            "          LOCAL_ADDRESS:'local-address'",
            "          (null_rest_of_line",
            "            VARIABLE:'Loopback0'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_crypto",
            "      CRYPTO:'crypto'",
            "      (crypto_map",
            "        MAP:'map'",
            "        name = (variable",
            "          VARIABLE:'MYMAP')",
            "        seq_num = DEC:'1'",
            "        (crypto_map_tail",
            "          (crypto_map_t_gdoi",
            "            GDOI:'gdoi'",
            "            NEWLINE:'\\n'",
            "            (crypto_map_t_g_null",
            "              SET:'set'",
            "              (null_rest_of_line",
            "                GROUP:'group'",
            "                VARIABLE:'MYGDOIGROUP'",
            "                NEWLINE:'\\n')))))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/isr_voip" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'isr_voip'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_ephone_dn_template",
            "      EPHONE_DN_TEMPLATE:'ephone-dn-template'",
            "      (null_rest_of_line",
            "        DEC:'2'",
            "        NEWLINE:'\\n')",
            "      (ednt_null",
            "        CALL_FORWARD:'call-forward'",
            "        (null_rest_of_line",
            "          VARIABLE:'busy'",
            "          DEC:'11111111111111'",
            "          NEWLINE:'\\n'))",
            "      (ednt_null",
            "        CALL_FORWARD:'call-forward'",
            "        (null_rest_of_line",
            "          VARIABLE:'noan'",
            "          DEC:'22222222222222'",
            "          TIMEOUT:'timeout'",
            "          DEC:'16'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_telephony_service",
            "      TELEPHONY_SERVICE:'telephony-service'",
            "      (null_rest_of_line",
            "        NEWLINE:'\\n')",
            "      (telephony_service_null",
            "        IP:'ip'",
            "        (null_rest_of_line",
            "          SOURCE_ADDRESS:'source-address'",
            "          IP_ADDRESS:'111.111.111.111'",
            "          PORT:'port'",
            "          DEC:'1111'",
            "          NEWLINE:'\\n'))",
            "      (telephony_service_null",
            "        MAX_CONFERENCES:'max-conferences'",
            "        (null_rest_of_line",
            "          DEC:'8'",
            "          VARIABLE:'gain'",
            "          DASH:'-'",
            "          DEC:'6'",
            "          NEWLINE:'\\n'))",
            "      (telephony_service_null",
            "        MAX_EPHONES:'max-ephones'",
            "        (null_rest_of_line",
            "          DEC:'25'",
            "          NEWLINE:'\\n'))",
            "      (telephony_service_null",
            "        SRST:'srst'",
            "        (null_rest_of_line",
            "          VARIABLE:'dn'",
            "          VARIABLE:'line-mode'",
            "          VARIABLE:'dual'",
            "          NEWLINE:'\\n'))",
            "      (telephony_service_null",
            "        SRST:'srst'",
            "        (null_rest_of_line",
            "          VARIABLE:'dn'",
            "          TEMPLATE:'template'",
            "          DEC:'2'",
            "          NEWLINE:'\\n'))",
            "      (telephony_service_null",
            "        SRST:'srst'",
            "        (null_rest_of_line",
            "          VARIABLE:'ephone'",
            "          DESCRIPTION:'description'",
            "          RAW_TEXT:' srst fallback auto-provisioned phone : Sep 01 1970 00:00:00'  <== mode:M_Description",
            "          NEWLINE:'\\n'  <== mode:M_Description))",
            "      (telephony_service_null",
            "        SRST:'srst'",
            "        (null_rest_of_line",
            "          MODE:'mode'",
            "          VARIABLE:'auto-provision'",
            "          NONE:'none'",
            "          NEWLINE:'\\n'))",
            "      (telephony_service_null",
            "        TRANSFER_SYSTEM:'transfer-system'",
            "        (null_rest_of_line",
            "          VARIABLE:'full-consult'",
            "          NEWLINE:'\\n'))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/juniper-interfaces" : {
          "sentences" : [
            "(flat_juniper_configuration",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_host_name",
            "              HOST_NAME:'host-name'",
            "              (variable",
            "                text = VARIABLE:'interfaceMtu'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (s_groups",
            "        GROUPS:'groups'",
            "        (s_groups_named",
            "          name = (variable",
            "            text = VARIABLE:'MTU_GROUP')",
            "          (s_groups_tail",
            "            (statement",
            "              (s_common",
            "                (s_interfaces",
            "                  INTERFACES:'interfaces'",
            "                  (int_named",
            "                    (wildcard",
            "                      WILDCARD:'<[xe][et]-*>'  <== mode:M_InterfaceQuote)",
            "                    (i_common",
            "                      (i_common_physical",
            "                        (i_mtu",
            "                          MTU:'mtu'",
            "                          size = DEC:'9300')))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (s_groups",
            "        GROUPS:'groups'",
            "        (s_groups_named",
            "          name = (variable",
            "            text = VARIABLE:'MTU_GROUP')",
            "          (s_groups_tail",
            "            (statement",
            "              (s_common",
            "                (s_interfaces",
            "                  INTERFACES:'interfaces'",
            "                  (int_named",
            "                    (wildcard",
            "                      WILDCARD:'<[xe][et]-*>'  <== mode:M_InterfaceQuote)",
            "                    (i_unit",
            "                      UNIT:'unit'",
            "                      (wildcard",
            "                        WILDCARD:'<*>')",
            "                      (i_common",
            "                        (i_family",
            "                          FAMILY:'family'",
            "                          (if_inet",
            "                            INET:'inet'",
            "                            (ifi_mtu",
            "                              (i_mtu",
            "                                MTU:'mtu'",
            "                                size = DEC:'9000'))))))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_interfaces",
            "            INTERFACES:'interfaces'",
            "            (int_named",
            "              (interface_id",
            "                node = (variable",
            "                  text = VARIABLE:'node1'  <== mode:M_Interface)",
            "                COLON:':'  <== mode:M_Interface",
            "                name = INTERFACE_NAME:'xe-0/0/0'  <== mode:M_Interface)",
            "              (i_common",
            "                (apply",
            "                  (apply_groups",
            "                    APPLY_GROUPS:'apply-groups'",
            "                    name = (variable",
            "                      text = VARIABLE:'MTU_GROUP')))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_interfaces",
            "            INTERFACES:'interfaces'",
            "            (int_named",
            "              (interface_id",
            "                node = (variable",
            "                  text = VARIABLE:'node1'  <== mode:M_Interface)",
            "                COLON:':'  <== mode:M_Interface",
            "                name = INTERFACE_NAME:'xe-0/0/0'  <== mode:M_Interface",
            "                COLON:':'",
            "                chnl = DEC:'0')",
            "              (i_common",
            "                (apply",
            "                  (apply_groups",
            "                    APPLY_GROUPS:'apply-groups'",
            "                    name = (variable",
            "                      text = VARIABLE:'MTU_GROUP')))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_interfaces",
            "            INTERFACES:'interfaces'",
            "            (int_named",
            "              (interface_id",
            "                node = (variable",
            "                  text = VARIABLE:'node1'  <== mode:M_Interface)",
            "                COLON:':'  <== mode:M_Interface",
            "                name = INTERFACE_NAME:'xe-0/0/0'  <== mode:M_Interface",
            "                COLON:':'",
            "                chnl = DEC:'0'",
            "                PERIOD:'.'",
            "                unit = DEC:'0')",
            "              (i_common",
            "                (apply",
            "                  (apply_groups",
            "                    APPLY_GROUPS:'apply-groups'",
            "                    name = (variable",
            "                      text = VARIABLE:'MTU_GROUP')))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_interfaces",
            "            INTERFACES:'interfaces'",
            "            (int_named",
            "              (interface_id",
            "                name = INTERFACE_NAME:'xe-0/0/0'  <== mode:M_Interface)",
            "              (i_common",
            "                (apply",
            "                  (apply_groups",
            "                    APPLY_GROUPS:'apply-groups'",
            "                    name = (variable",
            "                      text = VARIABLE:'MTU_GROUP')))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_interfaces",
            "            INTERFACES:'interfaces'",
            "            (int_named",
            "              (interface_id",
            "                name = INTERFACE_NAME:'xe-0/0/0'  <== mode:M_Interface",
            "                COLON:':'",
            "                chnl = DEC:'0')",
            "              (i_common",
            "                (apply",
            "                  (apply_groups",
            "                    APPLY_GROUPS:'apply-groups'",
            "                    name = (variable",
            "                      text = VARIABLE:'MTU_GROUP')))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_interfaces",
            "            INTERFACES:'interfaces'",
            "            (int_named",
            "              (interface_id",
            "                name = INTERFACE_NAME:'xe-0/0/0'  <== mode:M_Interface",
            "                COLON:':'",
            "                chnl = DEC:'0'",
            "                PERIOD:'.'",
            "                unit = DEC:'0')",
            "              (i_common",
            "                (apply",
            "                  (apply_groups",
            "                    APPLY_GROUPS:'apply-groups'",
            "                    name = (variable",
            "                      text = VARIABLE:'MTU_GROUP')))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_interfaces",
            "            INTERFACES:'interfaces'",
            "            (int_named",
            "              (interface_id",
            "                name = INTERFACE_NAME:'xe-0/0/0'  <== mode:M_Interface",
            "                PERIOD:'.'",
            "                unit = DEC:'0')",
            "              (i_common",
            "                (apply",
            "                  (apply_groups",
            "                    APPLY_GROUPS:'apply-groups'",
            "                    name = (variable",
            "                      text = VARIABLE:'MTU_GROUP')))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_interfaces",
            "            INTERFACES:'interfaces'",
            "            (int_named",
            "              (interface_id",
            "                name = INTERFACE_NAME:'xe-0/0/0'  <== mode:M_Interface",
            "                COLON:':'",
            "                chnl = DEC:'0')",
            "              (i_unit",
            "                UNIT:'unit'",
            "                num = DEC:'0'",
            "                (i_common",
            "                  (i_family",
            "                    FAMILY:'family'",
            "                    (if_inet",
            "                      INET:'inet'",
            "                      (ifi_address",
            "                        ADDRESS:'address'",
            "                        IP_PREFIX:'10.1.2.3/31'))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_ospf",
            "              OSPF:'ospf'",
            "              (o_common",
            "                (o_area",
            "                  AREA:'area'",
            "                  area = IP_ADDRESS:'0.0.0.0'",
            "                  (oa_interface",
            "                    INTERFACE:'interface'",
            "                    id = (interface_id",
            "                      name = INTERFACE_NAME:'xe-0/0/0'  <== mode:M_Interface",
            "                      COLON:':'",
            "                      chnl = DEC:'0'",
            "                      PERIOD:'.'",
            "                      unit = DEC:'0')",
            "                    (apply)))))))))",
            "    NEWLINE:'\\n\\n\\n')",
            "  EOF:<EOF>)"
          ]
        },
        "configs/juniper-tcpflags" : {
          "sentences" : [
            "(flat_juniper_configuration",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_host_name",
            "              HOST_NAME:'host-name'",
            "              (variable",
            "                text = VARIABLE:'juniper-tcpflags'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_firewall",
            "            FIREWALL:'firewall'",
            "            (f_family",
            "              FAMILY:'family'",
            "              INET:'inet'",
            "              (f_common",
            "                (f_filter",
            "                  FILTER:'filter'",
            "                  name = (variable",
            "                    text = VARIABLE:'foo')",
            "                  (ff_term",
            "                    TERM:'term'",
            "                    name = (variable",
            "                      text = VARIABLE:'bar')",
            "                    (fft_from",
            "                      FROM:'from'",
            "                      (fftf_tcp_flags",
            "                        TCP_FLAGS:'tcp-flags'",
            "                        (tcp_flags",
            "                          (tcp_flags_alternative",
            "                            (tcp_flags_literal",
            "                              (tcp_flags_atom",
            "                                ACK:'ack'  <== mode:M_TcpFlags))))))))))))))",
            "    NEWLINE:'\\n'  <== mode:M_TcpFlags)",
            "  EOF:<EOF>)"
          ]
        },
        "configs/juniper_application" : {
          "sentences" : [
            "(flat_juniper_configuration",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_host_name",
            "              HOST_NAME:'host-name'",
            "              (variable",
            "                text = VARIABLE:'juniper_application'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_applications",
            "            APPLICATIONS:'applications'",
            "            (a_application",
            "              APPLICATION:'application'",
            "              name = (variable",
            "                text = VARIABLE:'APP')",
            "              (aa_description",
            "                DESCRIPTION:'description'",
            "                (null_filler",
            "                  M_Description_DESCRIPTION:'APP-description'  <== mode:M_Description)))))))",
            "    NEWLINE:'\\n\\n'  <== mode:M_Description)",
            "  EOF:<EOF>)"
          ]
        },
        "configs/juniper_apply_macro" : {
          "sentences" : [
            "(flat_juniper_configuration",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_host_name",
            "              HOST_NAME:'host-name'",
            "              (variable",
            "                text = VARIABLE:'juniper_apply_macro'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (s_groups",
            "        GROUPS:'groups'",
            "        (s_groups_named",
            "          name = (variable",
            "            text = VARIABLE:'jctyztp')",
            "          (s_groups_tail",
            "            (statement",
            "              (s_common",
            "                (s_null",
            "                  APPLY_MACRO:'apply-macro'",
            "                  (null_filler",
            "                    VARIABLE:'conf'",
            "                    VARIABLE:'package'",
            "                    VARIABLE:'abc.tgz'))))))))",
            "    NEWLINE:'\\n')",
            "  EOF:<EOF>)"
          ]
        },
        "configs/juniper_as_path_group" : {
          "sentences" : [
            "(flat_juniper_configuration",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_host_name",
            "              HOST_NAME:'host-name'",
            "              (variable",
            "                text = VARIABLE:'juniper_as_path_group'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_policy_options",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_as_path_group",
            "              AS_PATH_GROUP:'as-path-group'",
            "              name = (variable",
            "                text = M_AsPathGroup_NAME:'AS_PATH_GROUP1'  <== mode:M_AsPathGroup)",
            "              (poapg_as_path",
            "                AS_PATH:'as-path'  <== mode:M_AsPathGroup2",
            "                name = (variable",
            "                  text = M_AsPathGroup3_NAME:'AS_PATH_REGEX_NAME1'  <== mode:M_AsPathGroup3)",
            "                regex = AS_PATH_REGEX:'123456'  <== mode:M_AsPathRegex))))))",
            "    NEWLINE:'\\n'  <== mode:M_AsPathRegex)",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_policy_options",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_as_path_group",
            "              AS_PATH_GROUP:'as-path-group'",
            "              name = (variable",
            "                text = M_AsPathGroup_NAME:'AS_PATH_GROUP1'  <== mode:M_AsPathGroup)",
            "              (poapg_as_path",
            "                AS_PATH:'as-path'  <== mode:M_AsPathGroup2",
            "                name = (variable",
            "                  text = M_AsPathGroup3_NAME:'AS_PATH_REGEX_NAME2'  <== mode:M_AsPathGroup3)",
            "                regex = AS_PATH_REGEX:'.* 654321 .*'  <== mode:M_AsPathRegex))))))",
            "    NEWLINE:'\\n'  <== mode:M_AsPathRegex)",
            "  EOF:<EOF>)"
          ]
        },
        "configs/juniper_bgp" : {
          "sentences" : [
            "(flat_juniper_configuration",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_host_name",
            "              HOST_NAME:'host-name'",
            "              (variable",
            "                text = VARIABLE:'juniper_bgp'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_common",
            "                (b_drop_path_attributes",
            "                  DROP_PATH_ATTRIBUTES:'drop-path-attributes'",
            "                  attr = DEC:'128')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_common",
            "                (b_family",
            "                  FAMILY:'family'",
            "                  (bf_inet",
            "                    INET:'inet'",
            "                    (bfi_unicast",
            "                      UNICAST:'unicast'",
            "                      (apply))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_common",
            "                (b_family",
            "                  FAMILY:'family'",
            "                  (bf_inet6",
            "                    INET6:'inet6'",
            "                    (bfi6_unicast",
            "                      UNICAST:'unicast'",
            "                      (apply))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_common",
            "                (b_null",
            "                  GRACEFUL_RESTART:'graceful-restart'",
            "                  (null_filler))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_common",
            "                (b_family",
            "                  FAMILY:'family'",
            "                  (bf_inet",
            "                    INET:'inet'",
            "                    (bfi_unicast",
            "                      UNICAST:'unicast'",
            "                      (bfiu_loops",
            "                        LOOPS:'loops'",
            "                        count = DEC:'2'))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_group",
            "                GROUP:'group'",
            "                name = (variable",
            "                  text = VARIABLE:'someipv4bgpgroup'  <== mode:M_VarOrWildcard)",
            "                (b_common",
            "                  (b_advertise_inactive",
            "                    ADVERTISE_INACTIVE:'advertise-inactive'))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_group",
            "                GROUP:'group'",
            "                name = (variable",
            "                  text = VARIABLE:'someipv4bgpgroup'  <== mode:M_VarOrWildcard)",
            "                (b_common",
            "                  (b_export",
            "                    EXPORT:'export'",
            "                    expr = (policy_expression",
            "                      (variable",
            "                        text = VARIABLE:'someexportpolicy'))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_group",
            "                GROUP:'group'",
            "                name = (variable",
            "                  text = VARIABLE:'someipv4bgpgroup'  <== mode:M_VarOrWildcard)",
            "                (b_common",
            "                  (b_family",
            "                    FAMILY:'family'",
            "                    (bf_inet",
            "                      INET:'inet'",
            "                      (bfi_unicast",
            "                        UNICAST:'unicast'",
            "                        (apply)))",
            "                    (bf_accepted_prefix_limit",
            "                      ACCEPTED_PREFIX_LIMIT:'accepted-prefix-limit'",
            "                      MAXIMUM:'maximum'",
            "                      max = DEC:'1000')))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_group",
            "                GROUP:'group'",
            "                name = (variable",
            "                  text = VARIABLE:'someipv4bgpgroup'  <== mode:M_VarOrWildcard)",
            "                (b_common",
            "                  (b_family",
            "                    FAMILY:'family'",
            "                    (bf_inet",
            "                      INET:'inet'",
            "                      (bfi_unicast",
            "                        UNICAST:'unicast'",
            "                        (bfiu_loops",
            "                          LOOPS:'loops'",
            "                          count = DEC:'2')))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_group",
            "                GROUP:'group'",
            "                name = (variable",
            "                  text = VARIABLE:'someipv4bgpgroup'  <== mode:M_VarOrWildcard)",
            "                (b_common",
            "                  (b_import",
            "                    IMPORT:'import'",
            "                    expr = (policy_expression",
            "                      (variable",
            "                        text = VARIABLE:'someimportpolicy'))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_group",
            "                GROUP:'group'",
            "                name = (variable",
            "                  text = VARIABLE:'someipv4bgpgroup'  <== mode:M_VarOrWildcard)",
            "                (b_common",
            "                  (b_multipath",
            "                    MULTIPATH:'multipath'))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_group",
            "                GROUP:'group'",
            "                name = (variable",
            "                  text = VARIABLE:'someipv4bgpgroup'  <== mode:M_VarOrWildcard)",
            "                (b_neighbor",
            "                  NEIGHBOR:'neighbor'",
            "                  IP_ADDRESS:'3.4.5.6'",
            "                  (b_common",
            "                    (b_description",
            "                      (description",
            "                        DESCRIPTION:'description'",
            "                        text = M_Description_DESCRIPTION:'bippety'  <== mode:M_Description))))))))))",
            "    NEWLINE:'\\n'  <== mode:M_Description)",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_group",
            "                GROUP:'group'",
            "                name = (variable",
            "                  text = VARIABLE:'someipv4bgpgroup'  <== mode:M_VarOrWildcard)",
            "                (b_neighbor",
            "                  NEIGHBOR:'neighbor'",
            "                  IP_ADDRESS:'3.4.5.7'",
            "                  (b_common",
            "                    (b_local_as",
            "                      LOCAL_AS:'local-as'",
            "                      (bl_number",
            "                        asn = (bgp_asn",
            "                          asn = DEC:'1')))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_group",
            "                GROUP:'group'",
            "                name = (variable",
            "                  text = VARIABLE:'someipv4bgpgroup'  <== mode:M_VarOrWildcard)",
            "                (b_neighbor",
            "                  NEIGHBOR:'neighbor'",
            "                  IP_ADDRESS:'3.4.5.7'",
            "                  (b_common",
            "                    (b_family",
            "                      FAMILY:'family'",
            "                      (bf_inet",
            "                        INET:'inet'",
            "                        (bfi_unicast",
            "                          UNICAST:'unicast'",
            "                          (bfiu_loops",
            "                            LOOPS:'loops'",
            "                            count = DEC:'3'))))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_group",
            "                GROUP:'group'",
            "                name = (variable",
            "                  text = VARIABLE:'someipv4bgpgroup'  <== mode:M_VarOrWildcard)",
            "                (b_common",
            "                  (b_peer_as",
            "                    PEER_AS:'peer-as'",
            "                    (bpa_as",
            "                      asn = (bgp_asn",
            "                        asn = DEC:'12345'))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_group",
            "                GROUP:'group'",
            "                name = (variable",
            "                  text = VARIABLE:'someipv4bgpgroup'  <== mode:M_VarOrWildcard)",
            "                (b_common",
            "                  (b_type",
            "                    TYPE:'type'",
            "                    EXTERNAL:'external'))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_group",
            "                GROUP:'group'",
            "                name = (variable",
            "                  text = VARIABLE:'someipv6bgpgroup'  <== mode:M_VarOrWildcard)",
            "                (b_common",
            "                  (b_export",
            "                    EXPORT:'export'",
            "                    expr = (policy_expression",
            "                      (variable",
            "                        text = VARIABLE:'someexportpolicy'))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_group",
            "                GROUP:'group'",
            "                name = (variable",
            "                  text = VARIABLE:'someipv6bgpgroup'  <== mode:M_VarOrWildcard)",
            "                (b_common",
            "                  (b_family",
            "                    FAMILY:'family'",
            "                    (bf_inet6",
            "                      INET6:'inet6'",
            "                      (bfi6_unicast",
            "                        UNICAST:'unicast'",
            "                        (apply)))",
            "                    (bf_accepted_prefix_limit",
            "                      ACCEPTED_PREFIX_LIMIT:'accepted-prefix-limit'",
            "                      MAXIMUM:'maximum'",
            "                      max = DEC:'1000')))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_group",
            "                GROUP:'group'",
            "                name = (variable",
            "                  text = VARIABLE:'someipv6bgpgroup'  <== mode:M_VarOrWildcard)",
            "                (b_common",
            "                  (b_import",
            "                    IMPORT:'import'",
            "                    expr = (policy_expression",
            "                      (variable",
            "                        text = VARIABLE:'someimportpolicy'))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_group",
            "                GROUP:'group'",
            "                name = (variable",
            "                  text = VARIABLE:'someipv6bgpgroup'  <== mode:M_VarOrWildcard)",
            "                (b_common",
            "                  (b_multipath",
            "                    MULTIPATH:'multipath'))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_group",
            "                GROUP:'group'",
            "                name = (variable",
            "                  text = VARIABLE:'someipv6bgpgroup'  <== mode:M_VarOrWildcard)",
            "                (b_neighbor",
            "                  NEIGHBOR:'neighbor'",
            "                  IPV6_ADDRESS:'dead:beef::1'",
            "                  (b_common",
            "                    (b_description",
            "                      (description",
            "                        DESCRIPTION:'description'",
            "                        text = M_Description_DESCRIPTION:'boppety'  <== mode:M_Description))))))))))",
            "    NEWLINE:'\\n'  <== mode:M_Description)",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_group",
            "                GROUP:'group'",
            "                name = (variable",
            "                  text = VARIABLE:'someipv6bgpgroup'  <== mode:M_VarOrWildcard)",
            "                (b_common",
            "                  (b_peer_as",
            "                    PEER_AS:'peer-as'",
            "                    (bpa_as",
            "                      asn = (bgp_asn",
            "                        asn = DEC:'12345'))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_group",
            "                GROUP:'group'",
            "                name = (variable",
            "                  text = VARIABLE:'someipv6bgpgroup'  <== mode:M_VarOrWildcard)",
            "                (b_common",
            "                  (b_type",
            "                    TYPE:'type'",
            "                    EXTERNAL:'external'))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_group",
            "                GROUP:'group'",
            "                name = (variable",
            "                  text = VARIABLE:'someinternalipv4group'  <== mode:M_VarOrWildcard)",
            "                (b_common",
            "                  (b_export",
            "                    EXPORT:'export'",
            "                    expr = (policy_expression",
            "                      (variable",
            "                        text = VARIABLE:'someexportpolicy'))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_group",
            "                GROUP:'group'",
            "                name = (variable",
            "                  text = VARIABLE:'someinternalipv4group'  <== mode:M_VarOrWildcard)",
            "                (b_common",
            "                  (b_family",
            "                    FAMILY:'family'",
            "                    (bf_inet",
            "                      INET:'inet'",
            "                      (bfi_unicast",
            "                        UNICAST:'unicast'",
            "                        (apply)))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_group",
            "                GROUP:'group'",
            "                name = (variable",
            "                  text = VARIABLE:'someinternalipv4group'  <== mode:M_VarOrWildcard)",
            "                (b_common",
            "                  (b_import",
            "                    IMPORT:'import'",
            "                    expr = (policy_expression",
            "                      (variable",
            "                        text = VARIABLE:'someimportpolicy'))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_group",
            "                GROUP:'group'",
            "                name = (variable",
            "                  text = VARIABLE:'someinternalipv4group'  <== mode:M_VarOrWildcard)",
            "                (b_common",
            "                  (b_local_address",
            "                    LOCAL_ADDRESS:'local-address'",
            "                    IP_ADDRESS:'1.2.3.4'))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_group",
            "                GROUP:'group'",
            "                name = (variable",
            "                  text = VARIABLE:'someinternalipv4group'  <== mode:M_VarOrWildcard)",
            "                (b_common",
            "                  (b_multipath",
            "                    MULTIPATH:'multipath'))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_group",
            "                GROUP:'group'",
            "                name = (variable",
            "                  text = VARIABLE:'someinternalipv4group'  <== mode:M_VarOrWildcard)",
            "                (b_neighbor",
            "                  NEIGHBOR:'neighbor'",
            "                  IP_ADDRESS:'1.2.3.5'",
            "                  (b_common",
            "                    (b_description",
            "                      (description",
            "                        DESCRIPTION:'description'",
            "                        text = M_Description_DESCRIPTION:'boo'  <== mode:M_Description))))))))))",
            "    NEWLINE:'\\n'  <== mode:M_Description)",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_group",
            "                GROUP:'group'",
            "                name = (variable",
            "                  text = VARIABLE:'someinternalipv4group'  <== mode:M_VarOrWildcard)",
            "                (b_neighbor",
            "                  NEIGHBOR:'neighbor'",
            "                  IP_ADDRESS:'1.2.3.5'",
            "                  (b_common",
            "                    (b_multipath",
            "                      MULTIPATH:'multipath'",
            "                      MULTIPLE_AS:'multiple-as')))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_group",
            "                GROUP:'group'",
            "                name = (variable",
            "                  text = VARIABLE:'someinternalipv4group'  <== mode:M_VarOrWildcard)",
            "                (b_common",
            "                  (b_peer_as",
            "                    PEER_AS:'peer-as'",
            "                    (bpa_as",
            "                      asn = (bgp_asn",
            "                        asn = DEC:'54321'))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_group",
            "                GROUP:'group'",
            "                name = (variable",
            "                  text = VARIABLE:'someinternalipv4group'  <== mode:M_VarOrWildcard)",
            "                (b_common",
            "                  (b_type",
            "                    TYPE:'type'",
            "                    INTERNAL:'internal'))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_group",
            "                GROUP:'group'",
            "                name = (variable",
            "                  text = VARIABLE:'someinternalipv6group'  <== mode:M_VarOrWildcard)",
            "                (b_common",
            "                  (b_export",
            "                    EXPORT:'export'",
            "                    expr = (policy_expression",
            "                      (variable",
            "                        text = VARIABLE:'someexportpolicy'))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_group",
            "                GROUP:'group'",
            "                name = (variable",
            "                  text = VARIABLE:'someinternalipv6group'  <== mode:M_VarOrWildcard)",
            "                (b_common",
            "                  (b_family",
            "                    FAMILY:'family'",
            "                    (bf_inet6",
            "                      INET6:'inet6'",
            "                      (bfi6_unicast",
            "                        UNICAST:'unicast'",
            "                        (apply)))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_group",
            "                GROUP:'group'",
            "                name = (variable",
            "                  text = VARIABLE:'someinternalipv6group'  <== mode:M_VarOrWildcard)",
            "                (b_common",
            "                  (b_import",
            "                    IMPORT:'import'",
            "                    expr = (policy_expression",
            "                      (variable",
            "                        text = VARIABLE:'someimportpolicy'))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_group",
            "                GROUP:'group'",
            "                name = (variable",
            "                  text = VARIABLE:'someinternalipv6group'  <== mode:M_VarOrWildcard)",
            "                (b_common",
            "                  (b_local_address",
            "                    LOCAL_ADDRESS:'local-address'",
            "                    IPV6_ADDRESS:'beef:dead::1'))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_group",
            "                GROUP:'group'",
            "                name = (variable",
            "                  text = VARIABLE:'someinternalipv6group'  <== mode:M_VarOrWildcard)",
            "                (b_common",
            "                  (b_multipath",
            "                    MULTIPATH:'multipath'))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_group",
            "                GROUP:'group'",
            "                name = (variable",
            "                  text = VARIABLE:'someinternalipv6group'  <== mode:M_VarOrWildcard)",
            "                (b_neighbor",
            "                  NEIGHBOR:'neighbor'",
            "                  IPV6_ADDRESS:'beef:dead::2'",
            "                  (b_common",
            "                    (b_description",
            "                      (description",
            "                        DESCRIPTION:'description'",
            "                        text = M_Description_DESCRIPTION:'foo'  <== mode:M_Description))))))))))",
            "    NEWLINE:'\\n'  <== mode:M_Description)",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_group",
            "                GROUP:'group'",
            "                name = (variable",
            "                  text = VARIABLE:'someinternalipv6group'  <== mode:M_VarOrWildcard)",
            "                (b_common",
            "                  (b_peer_as",
            "                    PEER_AS:'peer-as'",
            "                    (bpa_as",
            "                      asn = (bgp_asn",
            "                        asn = DEC:'54321'))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_group",
            "                GROUP:'group'",
            "                name = (variable",
            "                  text = VARIABLE:'someinternalipv6group'  <== mode:M_VarOrWildcard)",
            "                (b_common",
            "                  (b_type",
            "                    TYPE:'type'",
            "                    INTERNAL:'internal'))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_common",
            "                (b_null",
            "                  LOG_UPDOWN:'log-updown'",
            "                  (null_filler))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_common",
            "                (b_path_selection",
            "                  PATH_SELECTION:'path-selection'",
            "                  (bps_external_router_id",
            "                    EXTERNAL_ROUTER_ID:'external-router-id'))))))))",
            "    NEWLINE:'\\n')",
            "  EOF:<EOF>)"
          ]
        },
        "configs/juniper_bgp_allow" : {
          "sentences" : [
            "(flat_juniper_configuration",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_host_name",
            "              HOST_NAME:'host-name'",
            "              (variable",
            "                text = VARIABLE:'bgp-allow'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_routing_options",
            "            ROUTING_OPTIONS:'routing-options'",
            "            (ro_router_id",
            "              ROUTER_ID:'router-id'",
            "              id = IP_ADDRESS:'1.1.1.1')))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_routing_options",
            "            ROUTING_OPTIONS:'routing-options'",
            "            (ro_autonomous_system",
            "              AUTONOMOUS_SYSTEM:'autonomous-system'",
            "              asn = (bgp_asn",
            "                asn = DEC:'1')",
            "              (apply))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_group",
            "                GROUP:'group'",
            "                name = (variable",
            "                  text = VARIABLE:'GROUP'  <== mode:M_VarOrWildcard)",
            "                (b_common",
            "                  (b_peer_as",
            "                    PEER_AS:'peer-as'",
            "                    (bpa_as",
            "                      asn = (bgp_asn",
            "                        asn = DEC:'2'))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_group",
            "                GROUP:'group'",
            "                name = (variable",
            "                  text = VARIABLE:'GROUP'  <== mode:M_VarOrWildcard)",
            "                (b_common",
            "                  (b_local_address",
            "                    LOCAL_ADDRESS:'local-address'",
            "                    IP_ADDRESS:'1.1.1.1'))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_group",
            "                GROUP:'group'",
            "                name = (variable",
            "                  text = VARIABLE:'GROUP'  <== mode:M_VarOrWildcard)",
            "                (b_allow",
            "                  ALLOW:'allow'",
            "                  IP_PREFIX:'10.1.1.0/24')))))))",
            "    NEWLINE:'\\n')",
            "  EOF:<EOF>)"
          ]
        },
        "configs/juniper_bgp_authentication" : {
          "sentences" : [
            "(flat_juniper_configuration",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_host_name",
            "              HOST_NAME:'host-name'",
            "              (variable",
            "                text = VARIABLE:'juniper_bgp_authentication'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_common",
            "                (b_authentication_key",
            "                  AUTHENTICATION_KEY:'authentication-key'",
            "                  key = (string",
            "                    (variable",
            "                      text = VARIABLE:'this-is-key')))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_common",
            "                (b_authentication_algorithm",
            "                  AUTHENTICATION_ALGORITHM:'authentication-algorithm'",
            "                  AES_128_CMAC_96:'aes-128-cmac-96')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_group",
            "                GROUP:'group'",
            "                name = (variable",
            "                  text = VARIABLE:'ext'  <== mode:M_VarOrWildcard)",
            "                (b_common",
            "                  (b_type",
            "                    TYPE:'type'",
            "                    EXTERNAL:'external'))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_group",
            "                GROUP:'group'",
            "                name = (variable",
            "                  text = VARIABLE:'ext'  <== mode:M_VarOrWildcard)",
            "                (b_common",
            "                  (b_peer_as",
            "                    PEER_AS:'peer-as'",
            "                    (bpa_as",
            "                      asn = (bgp_asn",
            "                        asn = DEC:'65530'))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_group",
            "                GROUP:'group'",
            "                name = (variable",
            "                  text = VARIABLE:'ext'  <== mode:M_VarOrWildcard)",
            "                (b_neighbor",
            "                  NEIGHBOR:'neighbor'",
            "                  IP_ADDRESS:'172.16.2.1'",
            "                  (b_common",
            "                    (apply)))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_routing_options",
            "            ROUTING_OPTIONS:'routing-options'",
            "            (ro_autonomous_system",
            "              AUTONOMOUS_SYSTEM:'autonomous-system'",
            "              asn = (bgp_asn",
            "                asn = DEC:'65533')",
            "              (apply))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_group",
            "                GROUP:'group'",
            "                name = (variable",
            "                  text = VARIABLE:'ext'  <== mode:M_VarOrWildcard)",
            "                (b_common",
            "                  (b_authentication_key_chain",
            "                    AUTHENTICATION_KEY_CHAIN:'authentication-key-chain'",
            "                    name = (string",
            "                      (variable",
            "                        text = VARIABLE:'bgp-auth'))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_group",
            "                GROUP:'group'",
            "                name = (variable",
            "                  text = VARIABLE:'ext'  <== mode:M_VarOrWildcard)",
            "                (b_common",
            "                  (b_authentication_algorithm",
            "                    AUTHENTICATION_ALGORITHM:'authentication-algorithm'",
            "                    MD5:'md5'))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_security",
            "            SECURITY:'security'",
            "            (se_authentication_key_chain",
            "              AUTHENTICATION_KEY_CHAINS:'authentication-key-chains'",
            "              KEY_CHAIN:'key-chain'",
            "              name = (string",
            "                (variable",
            "                  text = VARIABLE:'bgp-auth'))",
            "              (sea_tolerance",
            "                TOLERANCE:'tolerance'",
            "                DEC:'30'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_security",
            "            SECURITY:'security'",
            "            (se_authentication_key_chain",
            "              AUTHENTICATION_KEY_CHAINS:'authentication-key-chains'",
            "              KEY_CHAIN:'key-chain'",
            "              name = (string",
            "                (variable",
            "                  text = VARIABLE:'bgp-auth'))",
            "              (sea_key",
            "                KEY:'key'",
            "                name = (string",
            "                  (variable",
            "                    text = DEC:'0'))",
            "                (seak_secret",
            "                  SECRET:'secret'",
            "                  key = (string",
            "                    (variable",
            "                      text = VARIABLE:'this-is-the-secret-password')))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_security",
            "            SECURITY:'security'",
            "            (se_authentication_key_chain",
            "              AUTHENTICATION_KEY_CHAINS:'authentication-key-chains'",
            "              KEY_CHAIN:'key-chain'",
            "              name = (string",
            "                (variable",
            "                  text = VARIABLE:'bgp-auth'))",
            "              (sea_key",
            "                KEY:'key'",
            "                name = (string",
            "                  (variable",
            "                    text = DEC:'0'))",
            "                (seak_start_time",
            "                  START_TIME:'start-time'",
            "                  time = (variable_permissive",
            "                    DEC:'2011'",
            "                    DASH:'-'",
            "                    DEC:'6'",
            "                    DASH:'-'",
            "                    DEC:'23'",
            "                    PERIOD:'.'",
            "                    DEC:'20'",
            "                    COLON:':'",
            "                    DEC:'19'",
            "                    COLON:':'",
            "                    DEC:'33'))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_security",
            "            SECURITY:'security'",
            "            (se_authentication_key_chain",
            "              AUTHENTICATION_KEY_CHAINS:'authentication-key-chains'",
            "              KEY_CHAIN:'key-chain'",
            "              name = (string",
            "                (variable",
            "                  text = VARIABLE:'bgp-auth'))",
            "              (sea_key",
            "                KEY:'key'",
            "                name = (string",
            "                  (variable",
            "                    text = DEC:'1'))",
            "                (seak_secret",
            "                  SECRET:'secret'",
            "                  key = (string",
            "                    (variable",
            "                      text = VARIABLE:'this-is-another-secret-password')))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_security",
            "            SECURITY:'security'",
            "            (se_authentication_key_chain",
            "              AUTHENTICATION_KEY_CHAINS:'authentication-key-chains'",
            "              KEY_CHAIN:'key-chain'",
            "              name = (string",
            "                (variable",
            "                  text = VARIABLE:'bgp-auth'))",
            "              (sea_key",
            "                KEY:'key'",
            "                name = (string",
            "                  (variable",
            "                    text = DEC:'1'))",
            "                (seak_start_time",
            "                  START_TIME:'start-time'",
            "                  time = (variable_permissive",
            "                    DEC:'2012'",
            "                    DASH:'-'",
            "                    DEC:'6'",
            "                    DASH:'-'",
            "                    DEC:'23'",
            "                    PERIOD:'.'",
            "                    DEC:'20'",
            "                    COLON:':'",
            "                    DEC:'19'",
            "                    COLON:':'",
            "                    DEC:'33'",
            "                    DASH:'-'",
            "                    DEC:'0700'))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_security",
            "            SECURITY:'security'",
            "            (se_authentication_key_chain",
            "              AUTHENTICATION_KEY_CHAINS:'authentication-key-chains'",
            "              KEY_CHAIN:'key-chain'",
            "              name = (string",
            "                (variable",
            "                  text = VARIABLE:'bgp-auth'))",
            "              (sea_key",
            "                KEY:'key'",
            "                name = (string",
            "                  (variable",
            "                    text = DEC:'0'))",
            "                (seak_algorithm",
            "                  ALGORITHM:'algorithm'",
            "                  HMAC_SHA1:'hmac-sha-1')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_security",
            "            SECURITY:'security'",
            "            (se_authentication_key_chain",
            "              AUTHENTICATION_KEY_CHAINS:'authentication-key-chains'",
            "              KEY_CHAIN:'key-chain'",
            "              name = (string",
            "                (variable",
            "                  text = VARIABLE:'bgp-auth'))",
            "              (sea_key",
            "                KEY:'key'",
            "                name = (string",
            "                  (variable",
            "                    text = DEC:'0'))",
            "                (seak_options",
            "                  OPTIONS:'options'",
            "                  ISIS_ENHANCED:'isis-enhanced')))))))",
            "    NEWLINE:'\\n\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_group",
            "                GROUP:'group'",
            "                name = (variable",
            "                  text = VARIABLE:'ext1'  <== mode:M_VarOrWildcard)",
            "                (b_common",
            "                  (b_type",
            "                    TYPE:'type'",
            "                    EXTERNAL:'external'))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_group",
            "                GROUP:'group'",
            "                name = (variable",
            "                  text = VARIABLE:'ext1'  <== mode:M_VarOrWildcard)",
            "                (b_common",
            "                  (b_peer_as",
            "                    PEER_AS:'peer-as'",
            "                    (bpa_as",
            "                      asn = (bgp_asn",
            "                        asn = DEC:'65530'))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_group",
            "                GROUP:'group'",
            "                name = (variable",
            "                  text = VARIABLE:'ext1'  <== mode:M_VarOrWildcard)",
            "                (b_neighbor",
            "                  NEIGHBOR:'neighbor'",
            "                  IP_ADDRESS:'172.16.2.2'",
            "                  (b_common",
            "                    (apply)))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_group",
            "                GROUP:'group'",
            "                name = (variable",
            "                  text = VARIABLE:'ext1'  <== mode:M_VarOrWildcard)",
            "                (b_common",
            "                  (b_authentication_key_chain",
            "                    AUTHENTICATION_KEY_CHAIN:'authentication-key-chain'",
            "                    name = (string",
            "                      (variable",
            "                        text = VARIABLE:'bgp-auth1'))))))))))",
            "    NEWLINE:'\\n')",
            "  EOF:<EOF>)"
          ]
        },
        "configs/juniper_bgp_disable" : {
          "sentences" : [
            "(flat_juniper_configuration",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_host_name",
            "              HOST_NAME:'host-name'",
            "              (variable",
            "                text = VARIABLE:'bgp-disable'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_group",
            "                GROUP:'group'",
            "                name = (variable",
            "                  text = VARIABLE:'GROUP'  <== mode:M_VarOrWildcard)",
            "                (b_common",
            "                  (b_peer_as",
            "                    PEER_AS:'peer-as'",
            "                    (bpa_as",
            "                      asn = (bgp_asn",
            "                        asn = DEC:'1'))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_disable",
            "                DISABLE:'disable'))))))",
            "    NEWLINE:'\\n')",
            "  EOF:<EOF>)"
          ]
        },
        "configs/juniper_bgp_enforce_fist_as" : {
          "sentences" : [
            "(flat_juniper_configuration",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_host_name",
            "              HOST_NAME:'host-name'",
            "              (variable",
            "                text = VARIABLE:'bgp-enforce-first-as'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_routing_options",
            "            ROUTING_OPTIONS:'routing-options'",
            "            (ro_autonomous_system",
            "              AUTONOMOUS_SYSTEM:'autonomous-system'",
            "              asn = (bgp_asn",
            "                asn = DEC:'1')",
            "              (apply))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_group",
            "                GROUP:'group'",
            "                name = (variable",
            "                  text = VARIABLE:'MYGROUP'  <== mode:M_VarOrWildcard)",
            "                (b_common",
            "                  (b_family",
            "                    FAMILY:'family'",
            "                    (bf_inet",
            "                      INET:'inet'",
            "                      (bfi_unicast",
            "                        UNICAST:'unicast'",
            "                        (apply)))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_group",
            "                GROUP:'group'",
            "                name = (variable",
            "                  text = VARIABLE:'MYGROUP'  <== mode:M_VarOrWildcard)",
            "                (b_common",
            "                  (b_peer_as",
            "                    PEER_AS:'peer-as'",
            "                    (bpa_as",
            "                      asn = (bgp_asn",
            "                        asn = DEC:'2'))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_group",
            "                GROUP:'group'",
            "                name = (variable",
            "                  text = VARIABLE:'MYGROUP'  <== mode:M_VarOrWildcard)",
            "                (b_neighbor",
            "                  NEIGHBOR:'neighbor'",
            "                  IP_ADDRESS:'1.1.1.1'",
            "                  (b_common",
            "                    (apply)))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_group",
            "                GROUP:'group'",
            "                name = (variable",
            "                  text = VARIABLE:'MYGROUP'  <== mode:M_VarOrWildcard)",
            "                (b_common",
            "                  (b_enforce_first_as",
            "                    ENFORCE_FIRST_AS:'enforce-first-as'))))))))",
            "    NEWLINE:'\\n\\n\\n')",
            "  EOF:<EOF>)"
          ]
        },
        "configs/juniper_bgp_remove_private_as" : {
          "sentences" : [
            "(flat_juniper_configuration",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_host_name",
            "              HOST_NAME:'host-name'",
            "              (variable",
            "                text = VARIABLE:'juniper_bgp_remove_private_as'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_common",
            "                (b_family",
            "                  FAMILY:'family'",
            "                  (bf_inet",
            "                    INET:'inet'",
            "                    (bfi_unicast",
            "                      UNICAST:'unicast'",
            "                      (apply))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_group",
            "                GROUP:'group'",
            "                name = (variable",
            "                  text = VARIABLE:'someipv4bgpgroup'  <== mode:M_VarOrWildcard)",
            "                (b_common",
            "                  (b_family",
            "                    FAMILY:'family'",
            "                    (bf_inet",
            "                      INET:'inet'",
            "                      (bfi_unicast",
            "                        UNICAST:'unicast'",
            "                        (apply)))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_common",
            "                (b_family",
            "                  FAMILY:'family'",
            "                  (bf_inet6",
            "                    INET6:'inet6'",
            "                    (bfi6_unicast",
            "                      UNICAST:'unicast'",
            "                      (apply))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_group",
            "                GROUP:'group'",
            "                name = (variable",
            "                  text = VARIABLE:'someipv6bgpgroup'  <== mode:M_VarOrWildcard)",
            "                (b_common",
            "                  (b_family",
            "                    FAMILY:'family'",
            "                    (bf_inet6",
            "                      INET6:'inet6'",
            "                      (bfi6_unicast",
            "                        UNICAST:'unicast'",
            "                        (apply)))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_common",
            "                (b_null",
            "                  GRACEFUL_RESTART:'graceful-restart'",
            "                  (null_filler))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_group",
            "                GROUP:'group'",
            "                name = (variable",
            "                  text = VARIABLE:'someipv4bgpgroup'  <== mode:M_VarOrWildcard)",
            "                (b_common",
            "                  (b_remove_private",
            "                    REMOVE_PRIVATE:'remove-private'",
            "                    ALL:'all'))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_group",
            "                GROUP:'group'",
            "                name = (variable",
            "                  text = VARIABLE:'someipv4bgpgroup'  <== mode:M_VarOrWildcard)",
            "                (b_common",
            "                  (b_remove_private",
            "                    REMOVE_PRIVATE:'remove-private'",
            "                    NEAREST:'nearest'))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_group",
            "                GROUP:'group'",
            "                name = (variable",
            "                  text = VARIABLE:'someipv4bgpgroup'  <== mode:M_VarOrWildcard)",
            "                (b_common",
            "                  (b_remove_private",
            "                    REMOVE_PRIVATE:'remove-private'",
            "                    REPLACE:'replace'))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_group",
            "                GROUP:'group'",
            "                name = (variable",
            "                  text = VARIABLE:'someipv4bgpgroup'  <== mode:M_VarOrWildcard)",
            "                (b_common",
            "                  (b_remove_private",
            "                    REMOVE_PRIVATE:'remove-private'",
            "                    NO_PEER_LOOP_CHECK:'no-peer-loop-check'))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_group",
            "                GROUP:'group'",
            "                name = (variable",
            "                  text = VARIABLE:'someipv6bgpgroup'  <== mode:M_VarOrWildcard)",
            "                (b_common",
            "                  (b_remove_private",
            "                    REMOVE_PRIVATE:'remove-private'",
            "                    ALL:'all'))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_group",
            "                GROUP:'group'",
            "                name = (variable",
            "                  text = VARIABLE:'someipv6bgpgroup'  <== mode:M_VarOrWildcard)",
            "                (b_common",
            "                  (b_remove_private",
            "                    REMOVE_PRIVATE:'remove-private'",
            "                    NEAREST:'nearest'))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_group",
            "                GROUP:'group'",
            "                name = (variable",
            "                  text = VARIABLE:'someipv6bgpgroup'  <== mode:M_VarOrWildcard)",
            "                (b_common",
            "                  (b_remove_private",
            "                    REMOVE_PRIVATE:'remove-private'",
            "                    REPLACE:'replace'))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_group",
            "                GROUP:'group'",
            "                name = (variable",
            "                  text = VARIABLE:'someipv6bgpgroup'  <== mode:M_VarOrWildcard)",
            "                (b_common",
            "                  (b_remove_private",
            "                    REMOVE_PRIVATE:'remove-private'",
            "                    NO_PEER_LOOP_CHECK:'no-peer-loop-check'))))))))",
            "    NEWLINE:'\\n\\n')",
            "  EOF:<EOF>)"
          ]
        },
        "configs/juniper_extended_community" : {
          "sentences" : [
            "(flat_juniper_configuration",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (s_version",
            "        VERSION:'version'",
            "        VERSION_STRING:'aaa'  <== mode:M_Version))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_host_name",
            "              HOST_NAME:'host-name'",
            "              (variable",
            "                text = VARIABLE:'juniper_extended_community'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_policy_options",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_community",
            "              COMMUNITY:'community'",
            "              name = (variable",
            "                text = VARIABLE:'COMM_ALL')",
            "              (poc_members",
            "                MEMBERS:'members'",
            "                (extended_community_regex",
            "                  (base_extended_community_regex",
            "                    TARGET:'target'  <== mode:M_Members",
            "                    COLON:':'  <== mode:M_Members",
            "                    DEC:'123456'  <== mode:M_Members",
            "                    L:'L'  <== mode:M_Members",
            "                    COLON:':'  <== mode:M_Members",
            "                    PERIOD:'.'  <== mode:M_Members",
            "                    ASTERISK:'*'  <== mode:M_Members",
            "                    DOLLAR:'$'  <== mode:M_Members))))))))",
            "    NEWLINE:'\\n'  <== mode:M_Members)",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_policy_options",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_community",
            "              COMMUNITY:'community'",
            "              name = (variable",
            "                text = VARIABLE:'COMM_NON_CUST')",
            "              (poc_members",
            "                MEMBERS:'members'",
            "                (community_regex",
            "                  (base_community_regex",
            "                    DEC:'8075'  <== mode:M_Members",
            "                    COLON:':'  <== mode:M_Members",
            "                    OPEN_BRACKET:'['  <== mode:M_Members",
            "                    DEC:'1'  <== mode:M_Members",
            "                    CLOSE_BRACKET:']'  <== mode:M_Members",
            "                    OPEN_BRACKET:'['  <== mode:M_Members",
            "                    DEC:'0'  <== mode:M_Members",
            "                    CLOSE_BRACKET:']'  <== mode:M_Members",
            "                    OPEN_BRACKET:'['  <== mode:M_Members",
            "                    DEC:'0'  <== mode:M_Members",
            "                    DASH:'-'  <== mode:M_Members",
            "                    DEC:'3'  <== mode:M_Members",
            "                    COMMA:','  <== mode:M_Members",
            "                    DEC:'5'  <== mode:M_Members",
            "                    DASH:'-'  <== mode:M_Members",
            "                    DEC:'9'  <== mode:M_Members",
            "                    CLOSE_BRACKET:']'  <== mode:M_Members",
            "                    OPEN_BRACKET:'['  <== mode:M_Members",
            "                    DEC:'0'  <== mode:M_Members",
            "                    DASH:'-'  <== mode:M_Members",
            "                    DEC:'9'  <== mode:M_Members",
            "                    CLOSE_BRACKET:']'  <== mode:M_Members",
            "                    OPEN_BRACKET:'['  <== mode:M_Members",
            "                    DEC:'0'  <== mode:M_Members",
            "                    DASH:'-'  <== mode:M_Members",
            "                    DEC:'9'  <== mode:M_Members",
            "                    CLOSE_BRACKET:']'  <== mode:M_Members",
            "                    DOLLAR:'$'  <== mode:M_Members))))))))",
            "    NEWLINE:'\\n'  <== mode:M_Members)",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_policy_options",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_community",
            "              COMMUNITY:'community'",
            "              name = (variable",
            "                text = VARIABLE:'COMM_REGEX')",
            "              (poc_members",
            "                MEMBERS:'members'",
            "                (community_regex",
            "                  (base_community_regex",
            "                    CARAT:'^'  <== mode:M_Members",
            "                    UNDERSCORE:'_'  <== mode:M_Members",
            "                    DEC:'200'  <== mode:M_Members",
            "                    UNDERSCORE:'_'  <== mode:M_Members",
            "                    DEC:'5'  <== mode:M_Members",
            "                    QUESTION_MARK:'?'  <== mode:M_Members",
            "                    OPEN_PAREN:'('  <== mode:M_Members",
            "                    DEC:'1'  <== mode:M_Members",
            "                    DASH:'-'  <== mode:M_Members",
            "                    DEC:'3'  <== mode:M_Members",
            "                    CLOSE_PAREN:')'  <== mode:M_Members",
            "                    ASTERISK:'*'  <== mode:M_Members",
            "                    BACKSLASH:'\\'  <== mode:M_Members",
            "                    QUESTION_MARK:'?'  <== mode:M_Members",
            "                    COLON:':'  <== mode:M_Members",
            "                    OPEN_BRACKET:'['  <== mode:M_Members",
            "                    CARAT:'^'  <== mode:M_Members",
            "                    DEC:'3'  <== mode:M_Members",
            "                    CLOSE_BRACKET:']'  <== mode:M_Members",
            "                    PLUS:'+'  <== mode:M_Members",
            "                    DOLLAR:'$'  <== mode:M_Members))))))))",
            "    NEWLINE:'\\n'  <== mode:M_Members)",
            "  EOF:<EOF>)"
          ]
        },
        "configs/juniper_firewall" : {
          "sentences" : [
            "(flat_juniper_configuration",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_host_name",
            "              HOST_NAME:'host-name'",
            "              (variable",
            "                text = VARIABLE:'juniper_firewall'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_firewall",
            "            FIREWALL:'firewall'",
            "            (f_family",
            "              FAMILY:'family'",
            "              ETHERNET_SWITCHING:'ethernet-switching'",
            "              (f_common",
            "                (f_filter",
            "                  FILTER:'filter'",
            "                  name = (variable",
            "                    text = VARIABLE:'f1')",
            "                  (ff_term",
            "                    TERM:'term'",
            "                    name = (variable",
            "                      text = VARIABLE:'t1')",
            "                    (fft_from",
            "                      FROM:'from'",
            "                      (fftf_source_mac_address",
            "                        SOURCE_MAC_ADDRESS:'source-mac-address'",
            "                        address = MAC_ADDRESS:'00:11:22:33:44:55'  <== mode:M_MacAddress",
            "                        FORWARD_SLASH:'/'",
            "                        length = DEC:'48'))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_firewall",
            "            FIREWALL:'firewall'",
            "            (f_family",
            "              FAMILY:'family'",
            "              INET:'inet'",
            "              (f_common",
            "                (f_filter",
            "                  FILTER:'filter'",
            "                  name = (variable",
            "                    text = VARIABLE:'blah')",
            "                  (ff_term",
            "                    TERM:'term'",
            "                    name = (variable",
            "                      text = VARIABLE:'blorp')",
            "                    (fft_from",
            "                      FROM:'from'",
            "                      (fftf_destination_address",
            "                        DESTINATION_ADDRESS:'destination-address'",
            "                        (fftfa_address_mask_prefix",
            "                          ip_address = IP_ADDRESS:'1.2.3.4')))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_firewall",
            "            FIREWALL:'firewall'",
            "            (f_family",
            "              FAMILY:'family'",
            "              INET:'inet'",
            "              (f_common",
            "                (f_filter",
            "                  FILTER:'filter'",
            "                  name = (variable",
            "                    text = VARIABLE:'blah')",
            "                  (ff_term",
            "                    TERM:'term'",
            "                    name = (variable",
            "                      text = VARIABLE:'blorp')",
            "                    (fft_from",
            "                      FROM:'from'",
            "                      (fftf_destination_address",
            "                        DESTINATION_ADDRESS:'destination-address'",
            "                        (fftfa_address_mask_prefix",
            "                          IP_PREFIX:'1.2.3.5/32')))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_firewall",
            "            FIREWALL:'firewall'",
            "            (f_family",
            "              FAMILY:'family'",
            "              INET:'inet'",
            "              (f_common",
            "                (f_filter",
            "                  FILTER:'filter'",
            "                  name = (variable",
            "                    text = VARIABLE:'blah')",
            "                  (ff_term",
            "                    TERM:'term'",
            "                    name = (variable",
            "                      text = VARIABLE:'blorp')",
            "                    (fft_from",
            "                      FROM:'from'",
            "                      (fftf_destination_address",
            "                        IP_DESTINATION_ADDRESS:'ip-destination-address'",
            "                        (fftfa_address_mask_prefix",
            "                          IP_PREFIX:'1.2.3.8/30')))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_firewall",
            "            FIREWALL:'firewall'",
            "            (f_family",
            "              FAMILY:'family'",
            "              INET:'inet'",
            "              (f_common",
            "                (f_filter",
            "                  FILTER:'filter'",
            "                  name = (variable",
            "                    text = VARIABLE:'blah')",
            "                  (ff_term",
            "                    TERM:'term'",
            "                    name = (variable",
            "                      text = VARIABLE:'blorp')",
            "                    (fft_from",
            "                      FROM:'from'",
            "                      (fftf_icmp_type",
            "                        ICMP_TYPE:'icmp-type'",
            "                        (icmp_type",
            "                          DESTINATION_UNREACHABLE:'destination-unreachable')))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_firewall",
            "            FIREWALL:'firewall'",
            "            (f_family",
            "              FAMILY:'family'",
            "              INET:'inet'",
            "              (f_common",
            "                (f_filter",
            "                  FILTER:'filter'",
            "                  name = (variable",
            "                    text = VARIABLE:'blah')",
            "                  (ff_term",
            "                    TERM:'term'",
            "                    name = (variable",
            "                      text = VARIABLE:'blorp')",
            "                    (fft_from",
            "                      FROM:'from'",
            "                      (fftf_icmp_type",
            "                        ICMP_TYPE:'icmp-type'",
            "                        (icmp_type",
            "                          ECHO_REPLY:'echo-reply')))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_firewall",
            "            FIREWALL:'firewall'",
            "            (f_family",
            "              FAMILY:'family'",
            "              INET:'inet'",
            "              (f_common",
            "                (f_filter",
            "                  FILTER:'filter'",
            "                  name = (variable",
            "                    text = VARIABLE:'blah')",
            "                  (ff_term",
            "                    TERM:'term'",
            "                    name = (variable",
            "                      text = VARIABLE:'blorp')",
            "                    (fft_from",
            "                      FROM:'from'",
            "                      (fftf_icmp_type",
            "                        ICMP_TYPE:'icmp-type'",
            "                        (icmp_type",
            "                          ECHO_REQUEST:'echo-request')))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_firewall",
            "            FIREWALL:'firewall'",
            "            (f_family",
            "              FAMILY:'family'",
            "              INET:'inet'",
            "              (f_common",
            "                (f_filter",
            "                  FILTER:'filter'",
            "                  name = (variable",
            "                    text = VARIABLE:'blah')",
            "                  (ff_term",
            "                    TERM:'term'",
            "                    name = (variable",
            "                      text = VARIABLE:'blorp')",
            "                    (fft_from",
            "                      FROM:'from'",
            "                      (fftf_icmp_type",
            "                        ICMP_TYPE:'icmp-type'",
            "                        (icmp_type",
            "                          INFO_REPLY:'info-reply')))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_firewall",
            "            FIREWALL:'firewall'",
            "            (f_family",
            "              FAMILY:'family'",
            "              INET:'inet'",
            "              (f_common",
            "                (f_filter",
            "                  FILTER:'filter'",
            "                  name = (variable",
            "                    text = VARIABLE:'blah')",
            "                  (ff_term",
            "                    TERM:'term'",
            "                    name = (variable",
            "                      text = VARIABLE:'blorp')",
            "                    (fft_from",
            "                      FROM:'from'",
            "                      (fftf_icmp_type",
            "                        ICMP_TYPE:'icmp-type'",
            "                        (icmp_type",
            "                          INFO_REQUEST:'info-request')))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_firewall",
            "            FIREWALL:'firewall'",
            "            (f_family",
            "              FAMILY:'family'",
            "              INET:'inet'",
            "              (f_common",
            "                (f_filter",
            "                  FILTER:'filter'",
            "                  name = (variable",
            "                    text = VARIABLE:'blah')",
            "                  (ff_term",
            "                    TERM:'term'",
            "                    name = (variable",
            "                      text = VARIABLE:'blorp')",
            "                    (fft_from",
            "                      FROM:'from'",
            "                      (fftf_icmp_type",
            "                        ICMP_TYPE:'icmp-type'",
            "                        (icmp_type",
            "                          MASK_REPLY:'mask-reply')))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_firewall",
            "            FIREWALL:'firewall'",
            "            (f_family",
            "              FAMILY:'family'",
            "              INET:'inet'",
            "              (f_common",
            "                (f_filter",
            "                  FILTER:'filter'",
            "                  name = (variable",
            "                    text = VARIABLE:'blah')",
            "                  (ff_term",
            "                    TERM:'term'",
            "                    name = (variable",
            "                      text = VARIABLE:'blorp')",
            "                    (fft_from",
            "                      FROM:'from'",
            "                      (fftf_icmp_type",
            "                        ICMP_TYPE:'icmp-type'",
            "                        (icmp_type",
            "                          MASK_REQUEST:'mask-request')))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_firewall",
            "            FIREWALL:'firewall'",
            "            (f_family",
            "              FAMILY:'family'",
            "              INET:'inet'",
            "              (f_common",
            "                (f_filter",
            "                  FILTER:'filter'",
            "                  name = (variable",
            "                    text = VARIABLE:'blah')",
            "                  (ff_term",
            "                    TERM:'term'",
            "                    name = (variable",
            "                      text = VARIABLE:'blorp')",
            "                    (fft_from",
            "                      FROM:'from'",
            "                      (fftf_icmp_type",
            "                        ICMP_TYPE:'icmp-type'",
            "                        (icmp_type",
            "                          PARAMETER_PROBLEM:'parameter-problem')))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_firewall",
            "            FIREWALL:'firewall'",
            "            (f_family",
            "              FAMILY:'family'",
            "              INET:'inet'",
            "              (f_common",
            "                (f_filter",
            "                  FILTER:'filter'",
            "                  name = (variable",
            "                    text = VARIABLE:'blah')",
            "                  (ff_term",
            "                    TERM:'term'",
            "                    name = (variable",
            "                      text = VARIABLE:'blorp')",
            "                    (fft_from",
            "                      FROM:'from'",
            "                      (fftf_icmp_type",
            "                        ICMP_TYPE:'icmp-type'",
            "                        (icmp_type",
            "                          REDIRECT:'redirect')))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_firewall",
            "            FIREWALL:'firewall'",
            "            (f_family",
            "              FAMILY:'family'",
            "              INET:'inet'",
            "              (f_common",
            "                (f_filter",
            "                  FILTER:'filter'",
            "                  name = (variable",
            "                    text = VARIABLE:'blah')",
            "                  (ff_term",
            "                    TERM:'term'",
            "                    name = (variable",
            "                      text = VARIABLE:'blorp')",
            "                    (fft_from",
            "                      FROM:'from'",
            "                      (fftf_icmp_type",
            "                        ICMP_TYPE:'icmp-type'",
            "                        (icmp_type",
            "                          ROUTER_ADVERTISEMENT:'router-advertisement')))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_firewall",
            "            FIREWALL:'firewall'",
            "            (f_family",
            "              FAMILY:'family'",
            "              INET:'inet'",
            "              (f_common",
            "                (f_filter",
            "                  FILTER:'filter'",
            "                  name = (variable",
            "                    text = VARIABLE:'blah')",
            "                  (ff_term",
            "                    TERM:'term'",
            "                    name = (variable",
            "                      text = VARIABLE:'blorp')",
            "                    (fft_from",
            "                      FROM:'from'",
            "                      (fftf_icmp_type",
            "                        ICMP_TYPE:'icmp-type'",
            "                        (icmp_type",
            "                          ROUTER_SOLICIT:'router-solicit')))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_firewall",
            "            FIREWALL:'firewall'",
            "            (f_family",
            "              FAMILY:'family'",
            "              INET:'inet'",
            "              (f_common",
            "                (f_filter",
            "                  FILTER:'filter'",
            "                  name = (variable",
            "                    text = VARIABLE:'blah')",
            "                  (ff_term",
            "                    TERM:'term'",
            "                    name = (variable",
            "                      text = VARIABLE:'blorp')",
            "                    (fft_from",
            "                      FROM:'from'",
            "                      (fftf_icmp_type",
            "                        ICMP_TYPE:'icmp-type'",
            "                        (icmp_type",
            "                          SOURCE_QUENCH:'source-quench')))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_firewall",
            "            FIREWALL:'firewall'",
            "            (f_family",
            "              FAMILY:'family'",
            "              INET:'inet'",
            "              (f_common",
            "                (f_filter",
            "                  FILTER:'filter'",
            "                  name = (variable",
            "                    text = VARIABLE:'blah')",
            "                  (ff_term",
            "                    TERM:'term'",
            "                    name = (variable",
            "                      text = VARIABLE:'blorp')",
            "                    (fft_from",
            "                      FROM:'from'",
            "                      (fftf_icmp_type",
            "                        ICMP_TYPE:'icmp-type'",
            "                        (icmp_type",
            "                          TIME_EXCEEDED:'time-exceeded')))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_firewall",
            "            FIREWALL:'firewall'",
            "            (f_family",
            "              FAMILY:'family'",
            "              INET:'inet'",
            "              (f_common",
            "                (f_filter",
            "                  FILTER:'filter'",
            "                  name = (variable",
            "                    text = VARIABLE:'blah')",
            "                  (ff_term",
            "                    TERM:'term'",
            "                    name = (variable",
            "                      text = VARIABLE:'blorp')",
            "                    (fft_from",
            "                      FROM:'from'",
            "                      (fftf_icmp_type",
            "                        ICMP_TYPE:'icmp-type'",
            "                        (icmp_type",
            "                          TIMESTAMP:'timestamp')))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_firewall",
            "            FIREWALL:'firewall'",
            "            (f_family",
            "              FAMILY:'family'",
            "              INET:'inet'",
            "              (f_common",
            "                (f_filter",
            "                  FILTER:'filter'",
            "                  name = (variable",
            "                    text = VARIABLE:'blah')",
            "                  (ff_term",
            "                    TERM:'term'",
            "                    name = (variable",
            "                      text = VARIABLE:'blorp')",
            "                    (fft_from",
            "                      FROM:'from'",
            "                      (fftf_icmp_type",
            "                        ICMP_TYPE:'icmp-type'",
            "                        (icmp_type",
            "                          TIMESTAMP_REPLY:'timestamp-reply')))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_firewall",
            "            FIREWALL:'firewall'",
            "            (f_family",
            "              FAMILY:'family'",
            "              INET:'inet'",
            "              (f_common",
            "                (f_filter",
            "                  FILTER:'filter'",
            "                  name = (variable",
            "                    text = VARIABLE:'blah')",
            "                  (ff_term",
            "                    TERM:'term'",
            "                    name = (variable",
            "                      text = VARIABLE:'blorp')",
            "                    (fft_from",
            "                      FROM:'from'",
            "                      (fftf_icmp_type",
            "                        ICMP_TYPE:'icmp-type'",
            "                        (icmp_type",
            "                          UNREACHABLE:'unreachable')))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_firewall",
            "            FIREWALL:'firewall'",
            "            (f_family",
            "              FAMILY:'family'",
            "              INET:'inet'",
            "              (f_common",
            "                (f_filter",
            "                  FILTER:'filter'",
            "                  name = (variable",
            "                    text = VARIABLE:'blah')",
            "                  (ff_term",
            "                    TERM:'term'",
            "                    name = (variable",
            "                      text = VARIABLE:'blorp')",
            "                    (fft_from",
            "                      FROM:'from'",
            "                      (fftf_packet_length",
            "                        PACKET_LENGTH:'packet-length'",
            "                        (range",
            "                          (subrange",
            "                            low = DEC:'70'",
            "                            DASH:'-'",
            "                            high = DEC:'12000'))))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_firewall",
            "            FIREWALL:'firewall'",
            "            (f_family",
            "              FAMILY:'family'",
            "              INET:'inet'",
            "              (f_common",
            "                (f_filter",
            "                  FILTER:'filter'",
            "                  name = (variable",
            "                    text = VARIABLE:'blah')",
            "                  (ff_term",
            "                    TERM:'term'",
            "                    name = (variable",
            "                      text = VARIABLE:'blorp')",
            "                    (fft_from",
            "                      FROM:'from'",
            "                      (fftf_protocol",
            "                        PROTOCOL:'protocol'",
            "                        (ip_protocol",
            "                          PIM:'pim')))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_firewall",
            "            FIREWALL:'firewall'",
            "            (f_family",
            "              FAMILY:'family'",
            "              INET:'inet'",
            "              (f_common",
            "                (f_filter",
            "                  FILTER:'filter'",
            "                  name = (variable",
            "                    text = VARIABLE:'blah')",
            "                  (ff_term",
            "                    TERM:'term'",
            "                    name = (variable",
            "                      text = VARIABLE:'blorp')",
            "                    (fft_from",
            "                      FROM:'from'",
            "                      (fftf_source_address",
            "                        SOURCE_ADDRESS:'source-address'",
            "                        (fftfa_address_mask_prefix",
            "                          IP_PREFIX:'2.4.6.8/30')))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_firewall",
            "            FIREWALL:'firewall'",
            "            (f_family",
            "              FAMILY:'family'",
            "              INET:'inet'",
            "              (f_common",
            "                (f_filter",
            "                  FILTER:'filter'",
            "                  name = (variable",
            "                    text = VARIABLE:'blah')",
            "                  (ff_term",
            "                    TERM:'term'",
            "                    name = (variable",
            "                      text = VARIABLE:'blorp')",
            "                    (fft_from",
            "                      FROM:'from'",
            "                      (fftf_source_address",
            "                        IP_SOURCE_ADDRESS:'ip-source-address'",
            "                        (fftfa_address_mask_prefix",
            "                          IP_PREFIX:'2.4.6.9/32')))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_firewall",
            "            FIREWALL:'firewall'",
            "            (f_family",
            "              FAMILY:'family'",
            "              INET:'inet'",
            "              (f_common",
            "                (f_filter",
            "                  FILTER:'filter'",
            "                  name = (variable",
            "                    text = VARIABLE:'blah')",
            "                  (ff_term",
            "                    TERM:'term'",
            "                    name = (variable",
            "                      text = VARIABLE:'blorp')",
            "                    (fft_from",
            "                      FROM:'from'",
            "                      (fftf_icmp_type",
            "                        ICMP_TYPE:'icmp-type'",
            "                        (icmp_type",
            "                          DEC:'1')))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_firewall",
            "            FIREWALL:'firewall'",
            "            (f_family",
            "              FAMILY:'family'",
            "              INET:'inet'",
            "              (f_common",
            "                (f_filter",
            "                  FILTER:'filter'",
            "                  name = (variable",
            "                    text = VARIABLE:'blah')",
            "                  (ff_term",
            "                    TERM:'term'",
            "                    name = (variable",
            "                      text = VARIABLE:'blorp')",
            "                    (fft_from",
            "                      FROM:'from'",
            "                      (fftf_icmp_code",
            "                        ICMP_CODE:'icmp-code'",
            "                        (icmp_code",
            "                          DEC:'2')))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_firewall",
            "            FIREWALL:'firewall'",
            "            (f_family",
            "              FAMILY:'family'",
            "              INET:'inet'",
            "              (f_common",
            "                (f_filter",
            "                  FILTER:'filter'",
            "                  name = (variable",
            "                    text = VARIABLE:'blah')",
            "                  (ff_term",
            "                    TERM:'term'",
            "                    name = (variable",
            "                      text = VARIABLE:'t2')",
            "                    (fft_then",
            "                      THEN:'then'",
            "                      (fftt_routing_instance",
            "                        ROUTING_INSTANCE:'routing-instance'",
            "                        name = (variable",
            "                          text = VARIABLE:'OTHER_INSTANCE')))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_firewall",
            "            FIREWALL:'firewall'",
            "            (f_family",
            "              FAMILY:'family'",
            "              INET6:'inet6'",
            "              (f_common",
            "                (f_filter",
            "                  FILTER:'filter'",
            "                  name = (variable",
            "                    text = VARIABLE:'blah6')",
            "                  (ff_term",
            "                    TERM:'term'",
            "                    name = (variable",
            "                      text = VARIABLE:'blorp6')",
            "                    (fft_from",
            "                      FROM:'from'",
            "                      (fftf_icmp_type",
            "                        ICMP_TYPE:'icmp-type'",
            "                        (icmp6_only_type",
            "                          PACKET_TOO_BIG:'packet-too-big')))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_firewall",
            "            FIREWALL:'firewall'",
            "            (f_family",
            "              FAMILY:'family'",
            "              INET6:'inet6'",
            "              (f_common",
            "                (f_filter",
            "                  FILTER:'filter'",
            "                  name = (variable",
            "                    text = VARIABLE:'blah6')",
            "                  (ff_term",
            "                    TERM:'term'",
            "                    name = (variable",
            "                      text = VARIABLE:'blorp6')",
            "                    (fft_from",
            "                      FROM:'from'",
            "                      (fftf_icmp_type",
            "                        ICMP_TYPE:'icmp-type'",
            "                        (icmp6_only_type",
            "                          NEIGHBOR_ADVERTISEMENT:'neighbor-advertisement')))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_firewall",
            "            FIREWALL:'firewall'",
            "            (f_family",
            "              FAMILY:'family'",
            "              INET6:'inet6'",
            "              (f_common",
            "                (f_filter",
            "                  FILTER:'filter'",
            "                  name = (variable",
            "                    text = VARIABLE:'blah6')",
            "                  (ff_term",
            "                    TERM:'term'",
            "                    name = (variable",
            "                      text = VARIABLE:'blorp6')",
            "                    (fft_from",
            "                      FROM:'from'",
            "                      (fftf_icmp_type",
            "                        ICMP_TYPE:'icmp-type'",
            "                        (icmp6_only_type",
            "                          NEIGHBOR_SOLICIT:'neighbor-solicit')))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_firewall",
            "            FIREWALL:'firewall'",
            "            (f_family",
            "              FAMILY:'family'",
            "              ETHERNET_SWITCHING:'ethernet-switching'",
            "              (f_common",
            "                (f_filter",
            "                  FILTER:'filter'",
            "                  name = (variable",
            "                    text = VARIABLE:'ISP-INBOUND-L2')",
            "                  (ff_term",
            "                    TERM:'term'",
            "                    name = (variable",
            "                      text = VARIABLE:'ALLOW-ARP')",
            "                    (fft_from",
            "                      FROM:'from'",
            "                      (fftf_null",
            "                        ETHER_TYPE:'ether-type'",
            "                        (null_filler",
            "                          ARP:'arp')))))))))))",
            "    NEWLINE:'\\n')",
            "  EOF:<EOF>)"
          ]
        },
        "configs/juniper_forwarding_options" : {
          "sentences" : [
            "(flat_juniper_configuration",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_host_name",
            "              HOST_NAME:'host-name'",
            "              (variable",
            "                text = VARIABLE:'juniper_forwarding_options'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_forwarding_options",
            "            FORWARDING_OPTIONS:'forwarding-options'",
            "            (apply",
            "              (apply_groups",
            "                APPLY_GROUPS:'apply-groups'",
            "                name = (variable",
            "                  text = VARIABLE:'g1')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_forwarding_options",
            "            FORWARDING_OPTIONS:'forwarding-options'",
            "            (fo_null",
            "              ANALYZER:'analyzer'",
            "              (null_filler",
            "                ANALYZER:'analyzer'",
            "                INPUT:'input'",
            "                INGRESS:'ingress'",
            "                INTERFACE:'interface'",
            "                INTERFACE_NAME:'ge-0/0/0'  <== mode:M_Interface",
            "                PERIOD:'.'",
            "                DEC:'0'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_forwarding_options",
            "            FORWARDING_OPTIONS:'forwarding-options'",
            "            (fo_null",
            "              ANALYZER:'analyzer'",
            "              (null_filler",
            "                ANALYZER:'analyzer'",
            "                INPUT:'input'",
            "                EGRESS:'egress'",
            "                INTERFACE:'interface'",
            "                INTERFACE_NAME:'ge-0/0/1'  <== mode:M_Interface",
            "                PERIOD:'.'",
            "                DEC:'0'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_forwarding_options",
            "            FORWARDING_OPTIONS:'forwarding-options'",
            "            (fo_null",
            "              ANALYZER:'analyzer'",
            "              (null_filler",
            "                ANALYZER:'analyzer'",
            "                OUTPUT:'output'",
            "                INTERFACE:'interface'",
            "                INTERFACE_NAME:'ge-0/0/2'  <== mode:M_Interface",
            "                PERIOD:'.'",
            "                DEC:'0'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_forwarding_options",
            "            FORWARDING_OPTIONS:'forwarding-options'",
            "            (fo_dhcp_relay",
            "              DHCP_RELAY:'dhcp-relay'",
            "              (fod_common",
            "                (fod_active_server_group",
            "                  ACTIVE_SERVER_GROUP:'active-server-group'",
            "                  name = (variable",
            "                    text = VARIABLE:'site-dhcp'))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_forwarding_options",
            "            FORWARDING_OPTIONS:'forwarding-options'",
            "            (fo_dhcp_relay",
            "              DHCP_RELAY:'dhcp-relay'",
            "              (fod_common",
            "                (fod_active_server_group",
            "                  ACTIVE_SERVER_GROUP:'active-server-group'",
            "                  name = (variable",
            "                    text = VARIABLE:'test2'))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_forwarding_options",
            "            FORWARDING_OPTIONS:'forwarding-options'",
            "            (fo_dhcp_relay",
            "              DHCP_RELAY:'dhcp-relay'",
            "              (fod_group",
            "                GROUP:'group'",
            "                name = (variable",
            "                  text = VARIABLE:'clientgrp'  <== mode:M_VarOrWildcard)",
            "                (fodg_interface",
            "                  INTERFACE:'interface'",
            "                  (interface_id",
            "                    name = INTERFACE_NAME:'xe-1/0/0'  <== mode:M_Interface",
            "                    PERIOD:'.'",
            "                    unit = DEC:'0'))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_forwarding_options",
            "            FORWARDING_OPTIONS:'forwarding-options'",
            "            (fo_dhcp_relay",
            "              DHCP_RELAY:'dhcp-relay'",
            "              (fod_group",
            "                GROUP:'group'",
            "                name = (variable",
            "                  text = VARIABLE:'clientgrp'  <== mode:M_VarOrWildcard)",
            "                (fodg_null",
            "                  OVERRIDES:'overrides'",
            "                  (null_filler",
            "                    VARIABLE:'layer2-unicast-replies'))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_forwarding_options",
            "            FORWARDING_OPTIONS:'forwarding-options'",
            "            (fo_dhcp_relay",
            "              DHCP_RELAY:'dhcp-relay'",
            "              (fod_group",
            "                GROUP:'group'",
            "                name = (variable",
            "                  text = VARIABLE:'clientgrp'  <== mode:M_VarOrWildcard)",
            "                (fodg_null",
            "                  OVERRIDES:'overrides'",
            "                  (null_filler",
            "                    VARIABLE:'trust-option-82'))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_forwarding_options",
            "            FORWARDING_OPTIONS:'forwarding-options'",
            "            (fo_dhcp_relay",
            "              DHCP_RELAY:'dhcp-relay'",
            "              (fod_group",
            "                GROUP:'group'",
            "                name = (variable",
            "                  text = VARIABLE:'relay'  <== mode:M_VarOrWildcard)",
            "                (fod_common",
            "                  (fod_active_server_group",
            "                    ACTIVE_SERVER_GROUP:'active-server-group'",
            "                    name = (variable",
            "                      text = VARIABLE:'site-dhcp')))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_forwarding_options",
            "            FORWARDING_OPTIONS:'forwarding-options'",
            "            (fo_dhcp_relay",
            "              DHCP_RELAY:'dhcp-relay'",
            "              (fod_group",
            "                GROUP:'group'",
            "                name = (variable",
            "                  text = VARIABLE:'relay'  <== mode:M_VarOrWildcard)",
            "                (fodg_interface",
            "                  INTERFACE:'interface'",
            "                  ALL:'all'  <== mode:M_Interface)))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_forwarding_options",
            "            FORWARDING_OPTIONS:'forwarding-options'",
            "            (fo_dhcp_relay",
            "              DHCP_RELAY:'dhcp-relay'",
            "              (fod_group",
            "                GROUP:'group'",
            "                name = (variable",
            "                  text = VARIABLE:'relay'  <== mode:M_VarOrWildcard)",
            "                (fodg_interface",
            "                  INTERFACE:'interface'",
            "                  (interface_id",
            "                    name = INTERFACE_NAME:'et-0/0/10'  <== mode:M_Interface",
            "                    PERIOD:'.'",
            "                    unit = DEC:'0'))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_forwarding_options",
            "            FORWARDING_OPTIONS:'forwarding-options'",
            "            (fo_dhcp_relay",
            "              DHCP_RELAY:'dhcp-relay'",
            "              (fod_group",
            "                GROUP:'group'",
            "                name = (variable",
            "                  text = VARIABLE:'relay'  <== mode:M_VarOrWildcard)",
            "                (fodg_null",
            "                  OVERRIDES:'overrides'",
            "                  (null_filler",
            "                    ALLOW_SNOOPED_CLIENTS:'allow-snooped-clients'))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_forwarding_options",
            "            FORWARDING_OPTIONS:'forwarding-options'",
            "            (fo_dhcp_relay",
            "              DHCP_RELAY:'dhcp-relay'",
            "              (fod_group",
            "                GROUP:'group'",
            "                name = (variable",
            "                  text = VARIABLE:'test2'  <== mode:M_VarOrWildcard)",
            "                (fod_common",
            "                  (fod_active_server_group",
            "                    ACTIVE_SERVER_GROUP:'active-server-group'",
            "                    name = (variable",
            "                      text = VARIABLE:'test2')))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_forwarding_options",
            "            FORWARDING_OPTIONS:'forwarding-options'",
            "            (fo_dhcp_relay",
            "              DHCP_RELAY:'dhcp-relay'",
            "              (fod_group",
            "                GROUP:'group'",
            "                name = (variable",
            "                  text = VARIABLE:'test2'  <== mode:M_VarOrWildcard)",
            "                (fodg_interface",
            "                  INTERFACE:'interface'",
            "                  (interface_id",
            "                    name = INTERFACE_NAME:'ge-0/2/5'  <== mode:M_Interface",
            "                    PERIOD:'.'",
            "                    unit = DEC:'0'))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_forwarding_options",
            "            FORWARDING_OPTIONS:'forwarding-options'",
            "            (fo_dhcp_relay",
            "              DHCP_RELAY:'dhcp-relay'",
            "              (fod_null",
            "                OVERRIDES:'overrides'",
            "                (null_filler",
            "                  ALLOW_SNOOPED_CLIENTS:'allow-snooped-clients')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_forwarding_options",
            "            FORWARDING_OPTIONS:'forwarding-options'",
            "            (fo_dhcp_relay",
            "              DHCP_RELAY:'dhcp-relay'",
            "              (fod_null",
            "                OVERRIDES:'overrides'",
            "                (null_filler",
            "                  ALWAYS_WRITE_GIADDR:'always-write-giaddr')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_forwarding_options",
            "            FORWARDING_OPTIONS:'forwarding-options'",
            "            (fo_dhcp_relay",
            "              DHCP_RELAY:'dhcp-relay'",
            "              (fod_null",
            "                OVERRIDES:'overrides'",
            "                (null_filler",
            "                  BOOTP_SUPPORT:'bootp-support')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_forwarding_options",
            "            FORWARDING_OPTIONS:'forwarding-options'",
            "            (fo_dhcp_relay",
            "              DHCP_RELAY:'dhcp-relay'",
            "              (fod_null",
            "                OVERRIDES:'overrides'",
            "                (null_filler",
            "                  DELETE_BINDING_ON_RENEGOTIATION:'delete-binding-on-renegotiation')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_forwarding_options",
            "            FORWARDING_OPTIONS:'forwarding-options'",
            "            (fo_dhcp_relay",
            "              DHCP_RELAY:'dhcp-relay'",
            "              (fod_null",
            "                OVERRIDES:'overrides'",
            "                (null_filler",
            "                  NO_ARP:'no-arp')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_forwarding_options",
            "            FORWARDING_OPTIONS:'forwarding-options'",
            "            (fo_dhcp_relay",
            "              DHCP_RELAY:'dhcp-relay'",
            "              (fod_server_group",
            "                SERVER_GROUP:'server-group'",
            "                name = (variable",
            "                  text = VARIABLE:'dhcpgrp')",
            "                address = IP_ADDRESS:'1.2.3.4'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_forwarding_options",
            "            FORWARDING_OPTIONS:'forwarding-options'",
            "            (fo_dhcp_relay",
            "              DHCP_RELAY:'dhcp-relay'",
            "              (fod_server_group",
            "                SERVER_GROUP:'server-group'",
            "                name = (variable",
            "                  text = VARIABLE:'dhcpgrp')",
            "                address = IP_ADDRESS:'2.3.4.5'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_forwarding_options",
            "            FORWARDING_OPTIONS:'forwarding-options'",
            "            (fo_dhcp_relay",
            "              DHCP_RELAY:'dhcp-relay'",
            "              (fod_server_group",
            "                SERVER_GROUP:'server-group'",
            "                name = (variable",
            "                  text = VARIABLE:'test2')",
            "                address = IP_ADDRESS:'3.4.5.6'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_forwarding_options",
            "            FORWARDING_OPTIONS:'forwarding-options'",
            "            (fo_null",
            "              ENHANCED_HASH_KEY:'enhanced-hash-key'",
            "              (null_filler",
            "                FAMILY:'family'",
            "                INET:'inet'",
            "                VARIABLE:'incoming-interface-index'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_forwarding_options",
            "            FORWARDING_OPTIONS:'forwarding-options'",
            "            (fo_null",
            "              FAMILY:'family'",
            "              (null_filler",
            "                INET6:'inet6'",
            "                VARIABLE:'route-accounting'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_forwarding_options",
            "            FORWARDING_OPTIONS:'forwarding-options'",
            "            (fo_null",
            "              HASH_KEY:'hash-key'",
            "              (null_filler",
            "                FAMILY:'family'",
            "                INET:'inet'",
            "                VARIABLE:'layer-3'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_forwarding_options",
            "            FORWARDING_OPTIONS:'forwarding-options'",
            "            (fo_null",
            "              HASH_KEY:'hash-key'",
            "              (null_filler",
            "                FAMILY:'family'",
            "                INET:'inet'",
            "                VARIABLE:'layer-4'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_forwarding_options",
            "            FORWARDING_OPTIONS:'forwarding-options'",
            "            (fo_null",
            "              HASH_KEY:'hash-key'",
            "              (null_filler",
            "                FAMILY:'family'",
            "                MPLS:'mpls'",
            "                VARIABLE:'label-1'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_forwarding_options",
            "            FORWARDING_OPTIONS:'forwarding-options'",
            "            (fo_null",
            "              HASH_KEY:'hash-key'",
            "              (null_filler",
            "                FAMILY:'family'",
            "                MPLS:'mpls'",
            "                VARIABLE:'label-2'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_forwarding_options",
            "            FORWARDING_OPTIONS:'forwarding-options'",
            "            (fo_null",
            "              HASH_KEY:'hash-key'",
            "              (null_filler",
            "                FAMILY:'family'",
            "                MPLS:'mpls'",
            "                VARIABLE:'payload'",
            "                IP:'ip'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_forwarding_options",
            "            FORWARDING_OPTIONS:'forwarding-options'",
            "            (fo_helpers",
            "              HELPERS:'helpers'",
            "              (foh_bootp",
            "                BOOTP:'bootp'",
            "                (fohb_common",
            "                  (fohb_null",
            "                    DESCRIPTION:'description'",
            "                    (null_filler",
            "                      M_Description_DESCRIPTION:'\"Global Relay Service\"'  <== mode:M_Description)))))))))",
            "    NEWLINE:'\\n'  <== mode:M_Description)",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_forwarding_options",
            "            FORWARDING_OPTIONS:'forwarding-options'",
            "            (fo_helpers",
            "              HELPERS:'helpers'",
            "              (foh_bootp",
            "                BOOTP:'bootp'",
            "                (fohb_interface",
            "                  INTERFACE:'interface'",
            "                  (interface_id",
            "                    name = INTERFACE_NAME:'ae1'  <== mode:M_Interface",
            "                    PERIOD:'.'",
            "                    unit = DEC:'1116')",
            "                  (apply))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_forwarding_options",
            "            FORWARDING_OPTIONS:'forwarding-options'",
            "            (fo_helpers",
            "              HELPERS:'helpers'",
            "              (foh_bootp",
            "                BOOTP:'bootp'",
            "                (fohb_interface",
            "                  INTERFACE:'interface'",
            "                  ALL:'all'  <== mode:M_Interface",
            "                  (apply))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_forwarding_options",
            "            FORWARDING_OPTIONS:'forwarding-options'",
            "            (fo_helpers",
            "              HELPERS:'helpers'",
            "              (foh_bootp",
            "                BOOTP:'bootp'",
            "                (fohb_interface",
            "                  INTERFACE:'interface'",
            "                  (interface_id",
            "                    name = INTERFACE_NAME:'xe-0/0/18'  <== mode:M_Interface",
            "                    PERIOD:'.'",
            "                    unit = DEC:'949')",
            "                  (fohb_common",
            "                    (fohb_null",
            "                      DESCRIPTION:'description'",
            "                      (null_filler",
            "                        M_Description_DESCRIPTION:'\"use Housing server for this interface\"'  <== mode:M_Description))))))))))",
            "    NEWLINE:'\\n'  <== mode:M_Description)",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_forwarding_options",
            "            FORWARDING_OPTIONS:'forwarding-options'",
            "            (fo_helpers",
            "              HELPERS:'helpers'",
            "              (foh_bootp",
            "                BOOTP:'bootp'",
            "                (fohb_interface",
            "                  INTERFACE:'interface'",
            "                  (interface_id",
            "                    name = INTERFACE_NAME:'xe-0/0/18'  <== mode:M_Interface",
            "                    PERIOD:'.'",
            "                    unit = DEC:'949')",
            "                  (fohb_common",
            "                    (fohb_server",
            "                      SERVER:'server'",
            "                      address = IP_ADDRESS:'5.5.5.5')))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_forwarding_options",
            "            FORWARDING_OPTIONS:'forwarding-options'",
            "            (fo_helpers",
            "              HELPERS:'helpers'",
            "              (foh_bootp",
            "                BOOTP:'bootp'",
            "                (fohb_interface",
            "                  INTERFACE:'interface'",
            "                  (interface_id",
            "                    name = INTERFACE_NAME:'xe-0/0/18'  <== mode:M_Interface",
            "                    PERIOD:'.'",
            "                    unit = DEC:'952')",
            "                  (apply))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_forwarding_options",
            "            FORWARDING_OPTIONS:'forwarding-options'",
            "            (fo_helpers",
            "              HELPERS:'helpers'",
            "              (foh_bootp",
            "                BOOTP:'bootp'",
            "                (fohb_interface",
            "                  INTERFACE:'interface'",
            "                  (interface_id",
            "                    name = INTERFACE_NAME:'xe-1/0/0'  <== mode:M_Interface",
            "                    PERIOD:'.'",
            "                    unit = DEC:'100')",
            "                  (fohb_common",
            "                    (fohb_server",
            "                      SERVER:'server'",
            "                      address = IP_ADDRESS:'6.6.6.6'",
            "                      ROUTING_INSTANCE:'routing-instance'",
            "                      ri = (variable",
            "                        text = VARIABLE:'TEST_VRF_100'))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_forwarding_options",
            "            FORWARDING_OPTIONS:'forwarding-options'",
            "            (fo_helpers",
            "              HELPERS:'helpers'",
            "              (foh_bootp",
            "                BOOTP:'bootp'",
            "                (fohb_interface",
            "                  INTERFACE:'interface'",
            "                  (interface_id",
            "                    name = INTERFACE_NAME:'xe-1/0/0'  <== mode:M_Interface",
            "                    PERIOD:'.'",
            "                    unit = DEC:'119')",
            "                  (fohb_common",
            "                    (fohb_server",
            "                      SERVER:'server'",
            "                      address = IP_ADDRESS:'7.7.7.7'",
            "                      ROUTING_INSTANCE:'routing-instance'",
            "                      ri = (variable",
            "                        text = VARIABLE:'TEST_VRF_103'))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_forwarding_options",
            "            FORWARDING_OPTIONS:'forwarding-options'",
            "            (fo_helpers",
            "              HELPERS:'helpers'",
            "              (foh_bootp",
            "                BOOTP:'bootp'",
            "                (fohb_common",
            "                  (fohb_null",
            "                    RELAY_AGENT_OPTION:'relay-agent-option'",
            "                    (null_filler)))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_forwarding_options",
            "            FORWARDING_OPTIONS:'forwarding-options'",
            "            (fo_helpers",
            "              HELPERS:'helpers'",
            "              (foh_bootp",
            "                BOOTP:'bootp'",
            "                (fohb_common",
            "                  (fohb_server",
            "                    SERVER:'server'",
            "                    address = IP_ADDRESS:'8.8.8.8'))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_forwarding_options",
            "            FORWARDING_OPTIONS:'forwarding-options'",
            "            (fo_helpers",
            "              HELPERS:'helpers'",
            "              (foh_bootp",
            "                BOOTP:'bootp'",
            "                (fohb_common",
            "                  (fohb_server",
            "                    SERVER:'server'",
            "                    address = IP_ADDRESS:'9.9.9.9'))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_forwarding_options",
            "            FORWARDING_OPTIONS:'forwarding-options'",
            "            (fo_helpers",
            "              HELPERS:'helpers'",
            "              (foh_null",
            "                TRACEOPTIONS:'traceoptions'",
            "                (null_filler",
            "                  FILE:'file'",
            "                  BOOTP:'bootp'",
            "                  VARIABLE:'size'",
            "                  VARIABLE:'10m'",
            "                  VARIABLE:'world-readable')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_forwarding_options",
            "            FORWARDING_OPTIONS:'forwarding-options'",
            "            (fo_helpers",
            "              HELPERS:'helpers'",
            "              (foh_null",
            "                TRACEOPTIONS:'traceoptions'",
            "                (null_filler",
            "                  VARIABLE:'flag'",
            "                  ALL:'all')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_forwarding_options",
            "            FORWARDING_OPTIONS:'forwarding-options'",
            "            (fo_helpers",
            "              HELPERS:'helpers'",
            "              (foh_null",
            "                TRACEOPTIONS:'traceoptions'",
            "                (null_filler",
            "                  LEVEL:'level'",
            "                  ALL:'all')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_forwarding_options",
            "            FORWARDING_OPTIONS:'forwarding-options'",
            "            (fo_null",
            "              LOAD_BALANCE:'load-balance'",
            "              (null_filler",
            "                VARIABLE:'equal-weighted-mode'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_forwarding_options",
            "            FORWARDING_OPTIONS:'forwarding-options'",
            "            (fo_null",
            "              LOAD_BALANCE:'load-balance'",
            "              (null_filler",
            "                VARIABLE:'indexed-load-balance'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_forwarding_options",
            "            FORWARDING_OPTIONS:'forwarding-options'",
            "            (fo_null",
            "              MULTICAST:'multicast'",
            "              (null_filler",
            "                VARIABLE:'resolve-rate'",
            "                DEC:'1000'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_forwarding_options",
            "            FORWARDING_OPTIONS:'forwarding-options'",
            "            (fo_null",
            "              PORT_MIRRORING:'port-mirroring'",
            "              (null_filler",
            "                FAMILY:'family'",
            "                INET:'inet'",
            "                OUTPUT:'output'",
            "                INTERFACE:'interface'",
            "                INTERFACE_NAME:'ge-0/2/2'  <== mode:M_Interface",
            "                PERIOD:'.'",
            "                DEC:'0'",
            "                NEXT_HOP:'next-hop'",
            "                IP_ADDRESS:'11.11.11.11'  <== mode:M_Interface))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_forwarding_options",
            "            FORWARDING_OPTIONS:'forwarding-options'",
            "            (fo_null",
            "              PORT_MIRRORING:'port-mirroring'",
            "              (null_filler",
            "                FAMILY:'family'",
            "                INET:'inet'",
            "                OUTPUT:'output'",
            "                VARIABLE:'no-filter-check'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_forwarding_options",
            "            FORWARDING_OPTIONS:'forwarding-options'",
            "            (fo_null",
            "              PORT_MIRRORING:'port-mirroring'",
            "              (null_filler",
            "                INPUT:'input'",
            "                VARIABLE:'rate'",
            "                DEC:'1'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_forwarding_options",
            "            FORWARDING_OPTIONS:'forwarding-options'",
            "            (fo_null",
            "              PORT_MIRRORING:'port-mirroring'",
            "              (null_filler",
            "                INPUT:'input'",
            "                VARIABLE:'run-length'",
            "                DEC:'1'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_forwarding_options",
            "            FORWARDING_OPTIONS:'forwarding-options'",
            "            (fo_null",
            "              SAMPLING:'sampling'",
            "              (null_filler",
            "                FAMILY:'family'",
            "                INET:'inet'",
            "                OUTPUT:'output'",
            "                VARIABLE:'flow-active-timeout'",
            "                DEC:'60'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_forwarding_options",
            "            FORWARDING_OPTIONS:'forwarding-options'",
            "            (fo_null",
            "              SAMPLING:'sampling'",
            "              (null_filler",
            "                FAMILY:'family'",
            "                INET:'inet'",
            "                OUTPUT:'output'",
            "                VARIABLE:'flow-inactive-timeout'",
            "                DEC:'15'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_forwarding_options",
            "            FORWARDING_OPTIONS:'forwarding-options'",
            "            (fo_null",
            "              SAMPLING:'sampling'",
            "              (null_filler",
            "                FAMILY:'family'",
            "                INET:'inet'",
            "                OUTPUT:'output'",
            "                VARIABLE:'flow-server'",
            "                IP_ADDRESS:'22.22.22.22'",
            "                VARIABLE:'autonomous-system-type'",
            "                ORIGIN:'origin'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_forwarding_options",
            "            FORWARDING_OPTIONS:'forwarding-options'",
            "            (fo_null",
            "              SAMPLING:'sampling'",
            "              (null_filler",
            "                FAMILY:'family'",
            "                INET:'inet'",
            "                OUTPUT:'output'",
            "                VARIABLE:'flow-server'",
            "                IP_ADDRESS:'22.22.22.22'",
            "                PORT:'port'",
            "                DEC:'9999'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_forwarding_options",
            "            FORWARDING_OPTIONS:'forwarding-options'",
            "            (fo_null",
            "              SAMPLING:'sampling'",
            "              (null_filler",
            "                FAMILY:'family'",
            "                INET:'inet'",
            "                OUTPUT:'output'",
            "                VARIABLE:'flow-server'",
            "                IP_ADDRESS:'22.22.22.22'",
            "                SOURCE_ADDRESS:'source-address'",
            "                IP_ADDRESS:'33.33.33.33'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_forwarding_options",
            "            FORWARDING_OPTIONS:'forwarding-options'",
            "            (fo_null",
            "              SAMPLING:'sampling'",
            "              (null_filler",
            "                FAMILY:'family'",
            "                INET:'inet'",
            "                OUTPUT:'output'",
            "                VARIABLE:'flow-server'",
            "                IP_ADDRESS:'22.22.22.22'",
            "                VERSION:'version'",
            "                VERSION_STRING:'5'  <== mode:M_Version))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_forwarding_options",
            "            FORWARDING_OPTIONS:'forwarding-options'",
            "            (fo_null",
            "              SAMPLING:'sampling'",
            "              (null_filler",
            "                FAMILY:'family'",
            "                INET:'inet'",
            "                OUTPUT:'output'",
            "                VARIABLE:'flow-server'",
            "                IP_ADDRESS:'10.181.3.2'",
            "                PORT:'port'",
            "                DEC:'1111'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_forwarding_options",
            "            FORWARDING_OPTIONS:'forwarding-options'",
            "            (fo_null",
            "              SAMPLING:'sampling'",
            "              (null_filler",
            "                FAMILY:'family'",
            "                INET:'inet'",
            "                OUTPUT:'output'",
            "                VARIABLE:'flow-server'",
            "                IP_ADDRESS:'10.181.3.2'",
            "                VERSION:'version'",
            "                VERSION_STRING:'5'  <== mode:M_Version))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_forwarding_options",
            "            FORWARDING_OPTIONS:'forwarding-options'",
            "            (fo_null",
            "              SAMPLING:'sampling'",
            "              (null_filler",
            "                FAMILY:'family'",
            "                INET:'inet'",
            "                OUTPUT:'output'",
            "                INTERFACE:'interface'",
            "                INTERFACE_NAME:'sp-1/0/0'  <== mode:M_Interface",
            "                SOURCE_ADDRESS:'source-address'",
            "                IP_ADDRESS:'44.44.44.44'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_forwarding_options",
            "            FORWARDING_OPTIONS:'forwarding-options'",
            "            (fo_null",
            "              SAMPLING:'sampling'",
            "              (null_filler",
            "                INPUT:'input'",
            "                VARIABLE:'max-packets-per-second'",
            "                DEC:'2500'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_forwarding_options",
            "            FORWARDING_OPTIONS:'forwarding-options'",
            "            (fo_null",
            "              SAMPLING:'sampling'",
            "              (null_filler",
            "                INPUT:'input'",
            "                VARIABLE:'rate'",
            "                DEC:'4096'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_forwarding_options",
            "            FORWARDING_OPTIONS:'forwarding-options'",
            "            (fo_null",
            "              SAMPLING:'sampling'",
            "              (null_filler",
            "                INPUT:'input'",
            "                VARIABLE:'run-length'",
            "                DEC:'0'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_forwarding_options",
            "            FORWARDING_OPTIONS:'forwarding-options'",
            "            (fo_null",
            "              SAMPLING:'sampling'",
            "              (null_filler",
            "                INSTANCE:'instance'",
            "                VARIABLE:'blorp'",
            "                FAMILY:'family'",
            "                INET6:'inet6'",
            "                OUTPUT:'output'",
            "                VARIABLE:'flow-server'",
            "                IP_ADDRESS:'41.41.41.41'",
            "                PORT:'port'",
            "                DEC:'4141'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_forwarding_options",
            "            FORWARDING_OPTIONS:'forwarding-options'",
            "            (fo_null",
            "              SAMPLING:'sampling'",
            "              (null_filler",
            "                INSTANCE:'instance'",
            "                VARIABLE:'blorp'",
            "                FAMILY:'family'",
            "                INET6:'inet6'",
            "                OUTPUT:'output'",
            "                VARIABLE:'flow-server'",
            "                IP_ADDRESS:'41.41.41.41'",
            "                VARIABLE:'version-ipfix'",
            "                VARIABLE:'template'",
            "                VARIABLE:'ipv6_template'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_forwarding_options",
            "            FORWARDING_OPTIONS:'forwarding-options'",
            "            (fo_null",
            "              SAMPLING:'sampling'",
            "              (null_filler",
            "                INSTANCE:'instance'",
            "                VARIABLE:'blorp'",
            "                FAMILY:'family'",
            "                INET6:'inet6'",
            "                OUTPUT:'output'",
            "                VARIABLE:'inline-jflow'",
            "                VARIABLE:'flow-export-rate'",
            "                DEC:'100'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_forwarding_options",
            "            FORWARDING_OPTIONS:'forwarding-options'",
            "            (fo_null",
            "              SAMPLING:'sampling'",
            "              (null_filler",
            "                INSTANCE:'instance'",
            "                VARIABLE:'blorp'",
            "                FAMILY:'family'",
            "                INET6:'inet6'",
            "                OUTPUT:'output'",
            "                VARIABLE:'inline-jflow'",
            "                SOURCE_ADDRESS:'source-address'",
            "                IP_ADDRESS:'51.51.51.51'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_forwarding_options",
            "            FORWARDING_OPTIONS:'forwarding-options'",
            "            (fo_null",
            "              SAMPLING:'sampling'",
            "              (null_filler",
            "                INSTANCE:'instance'",
            "                VARIABLE:'blorp'",
            "                FAMILY:'family'",
            "                INET:'inet'",
            "                OUTPUT:'output'",
            "                VARIABLE:'flow-server'",
            "                IP_ADDRESS:'23.23.23.23'",
            "                PORT:'port'",
            "                DEC:'2323'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_forwarding_options",
            "            FORWARDING_OPTIONS:'forwarding-options'",
            "            (fo_null",
            "              SAMPLING:'sampling'",
            "              (null_filler",
            "                INSTANCE:'instance'",
            "                VARIABLE:'blorp'",
            "                FAMILY:'family'",
            "                INET:'inet'",
            "                OUTPUT:'output'",
            "                VARIABLE:'flow-server'",
            "                IP_ADDRESS:'23.23.23.23'",
            "                VARIABLE:'version-ipfix'",
            "                VARIABLE:'template'",
            "                VARIABLE:'ipv4_template'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_forwarding_options",
            "            FORWARDING_OPTIONS:'forwarding-options'",
            "            (fo_null",
            "              SAMPLING:'sampling'",
            "              (null_filler",
            "                INSTANCE:'instance'",
            "                VARIABLE:'blorp'",
            "                FAMILY:'family'",
            "                INET:'inet'",
            "                OUTPUT:'output'",
            "                VARIABLE:'inline-jflow'",
            "                VARIABLE:'flow-export-rate'",
            "                DEC:'100'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_forwarding_options",
            "            FORWARDING_OPTIONS:'forwarding-options'",
            "            (fo_null",
            "              SAMPLING:'sampling'",
            "              (null_filler",
            "                INSTANCE:'instance'",
            "                VARIABLE:'blorp'",
            "                FAMILY:'family'",
            "                INET:'inet'",
            "                OUTPUT:'output'",
            "                VARIABLE:'inline-jflow'",
            "                SOURCE_ADDRESS:'source-address'",
            "                IP_ADDRESS:'54.54.54.54'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_forwarding_options",
            "            FORWARDING_OPTIONS:'forwarding-options'",
            "            (fo_null",
            "              SAMPLING:'sampling'",
            "              (null_filler",
            "                INSTANCE:'instance'",
            "                VARIABLE:'blorp'",
            "                INPUT:'input'",
            "                VARIABLE:'rate'",
            "                VARIABLE:'4096dd'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_forwarding_options",
            "            FORWARDING_OPTIONS:'forwarding-options'",
            "            (fo_null",
            "              SAMPLING:'sampling'",
            "              (null_filler",
            "                INSTANCE:'instance'",
            "                VARIABLE:'bloo'",
            "                FAMILY:'family'",
            "                INET6:'inet6'",
            "                OUTPUT:'output'",
            "                VARIABLE:'flow-server'",
            "                IP_ADDRESS:'62.62.62.62'",
            "                VARIABLE:'version9'",
            "                VARIABLE:'template'",
            "                VARIABLE:'netflow_template_ipv6'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_forwarding_options",
            "            FORWARDING_OPTIONS:'forwarding-options'",
            "            (fo_null",
            "              SAMPLING:'sampling'",
            "              (null_filler",
            "                INSTANCE:'instance'",
            "                VARIABLE:'bloo'",
            "                INPUT:'input'",
            "                VARIABLE:'rate'",
            "                DEC:'1'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_forwarding_options",
            "            FORWARDING_OPTIONS:'forwarding-options'",
            "            (fo_null",
            "              SAMPLING:'sampling'",
            "              (null_filler",
            "                INSTANCE:'instance'",
            "                VARIABLE:'bloo'",
            "                INPUT:'input'",
            "                VARIABLE:'run-length'",
            "                DEC:'0'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_forwarding_options",
            "            FORWARDING_OPTIONS:'forwarding-options'",
            "            (fo_null",
            "              SAMPLING:'sampling'",
            "              (null_filler",
            "                TRACEOPTIONS:'traceoptions'",
            "                FILE:'file'",
            "                VARIABLE:'sampled.log'",
            "                VARIABLE:'size'",
            "                VARIABLE:'20m'",
            "                VARIABLE:'files'",
            "                DEC:'20'",
            "                VARIABLE:'world-readable'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_forwarding_options",
            "            FORWARDING_OPTIONS:'forwarding-options'",
            "            (fo_null",
            "              SAMPLING:'sampling'",
            "              (null_filler",
            "                TRACEOPTIONS:'traceoptions'",
            "                FILE:'file'",
            "                VARIABLE:'sampled'",
            "                VARIABLE:'size'",
            "                VARIABLE:'10m'",
            "                VARIABLE:'files'",
            "                DEC:'10'",
            "                VARIABLE:'world-readable'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_forwarding_options",
            "            FORWARDING_OPTIONS:'forwarding-options'",
            "            (fo_null",
            "              SAMPLING:'sampling'",
            "              (null_filler",
            "                TRACEOPTIONS:'traceoptions'",
            "                VARIABLE:'flag'",
            "                ALL:'all'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_forwarding_options",
            "            FORWARDING_OPTIONS:'forwarding-options'",
            "            (fo_null",
            "              STORM_CONTROL_PROFILES:'storm-control-profiles'",
            "              (null_filler",
            "                VARIABLE:'default'",
            "                ALL:'all'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (s_groups",
            "        GROUPS:'groups'",
            "        (s_groups_named",
            "          name = (variable",
            "            text = VARIABLE:'DHCP')",
            "          (s_groups_tail",
            "            (statement",
            "              (s_common",
            "                (s_forwarding_options",
            "                  FORWARDING_OPTIONS:'forwarding-options'",
            "                  (fo_helpers",
            "                    HELPERS:'helpers'",
            "                    (foh_bootp",
            "                      BOOTP:'bootp'",
            "                      (fohb_interface",
            "                        INTERFACE:'interface'",
            "                        (wildcard",
            "                          WILDCARD:'<*>'  <== mode:M_Interface)",
            "                        (fohb_common",
            "                          (fohb_server",
            "                            SERVER:'server'",
            "                            address = IP_ADDRESS:'1.2.4.11'))))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_forwarding_options",
            "            FORWARDING_OPTIONS:'forwarding-options'",
            "            (fo_helpers",
            "              HELPERS:'helpers'",
            "              (foh_bootp",
            "                BOOTP:'bootp'",
            "                (apply",
            "                  (apply_groups",
            "                    APPLY_GROUPS:'apply-groups'",
            "                    name = (variable",
            "                      text = VARIABLE:'DHCP')))))))))",
            "    NEWLINE:'\\n')",
            "  EOF:<EOF>)"
          ]
        },
        "configs/juniper_interfaces" : {
          "sentences" : [
            "(flat_juniper_configuration",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_host_name",
            "              HOST_NAME:'host-name'",
            "              (variable",
            "                text = VARIABLE:'juniper_interfaces'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_interfaces",
            "            INTERFACES:'interfaces'",
            "            (int_named",
            "              (interface_id",
            "                name = INTERFACE_NAME:'ae0'  <== mode:M_Interface)",
            "              (i_unit",
            "                UNIT:'unit'",
            "                num = DEC:'0'",
            "                (i_common",
            "                  (i_family",
            "                    FAMILY:'family'",
            "                    (if_ethernet_switching",
            "                      ETHERNET_SWITCHING:'ethernet-switching'",
            "                      (ife_vlan",
            "                        VLAN:'vlan'",
            "                        MEMBERS:'members'  <== mode:M_Vlan",
            "                        (range",
            "                          (subrange",
            "                            low = DEC:'1'",
            "                            DASH:'-'",
            "                            high = DEC:'1000'))))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_interfaces",
            "            INTERFACES:'interfaces'",
            "            (int_named",
            "              (interface_id",
            "                name = INTERFACE_NAME:'fab0'  <== mode:M_Interface)",
            "              (i_common",
            "                (i_description",
            "                  (description",
            "                    DESCRIPTION:'description'",
            "                    text = M_Description_DESCRIPTION:'\"Fabric interface 0\"'  <== mode:M_Description))))))))",
            "    NEWLINE:'\\n'  <== mode:M_Description)",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_interfaces",
            "            INTERFACES:'interfaces'",
            "            (int_named",
            "              (interface_id",
            "                name = INTERFACE_NAME:'ge-0/0/0'  <== mode:M_Interface)",
            "              (i_common",
            "                (i_common_physical",
            "                  (i_null",
            "                    FORWARDING_CLASS_ACCOUNTING:'forwarding-class-accounting'",
            "                    (null_filler)))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_interfaces",
            "            INTERFACES:'interfaces'",
            "            (int_named",
            "              (interface_id",
            "                name = INTERFACE_NAME:'ge-1/0/0'  <== mode:M_Interface)",
            "              (i_common",
            "                (i_common_physical",
            "                  (i_ether_options",
            "                    ETHER_OPTIONS:'ether-options'",
            "                    (ether_options",
            "                      (eo_802_3ad",
            "                        EIGHT02_3AD:'802.3ad'",
            "                        (eo8023ad_interface",
            "                          name = (variable",
            "                            text = VARIABLE:'ae0'))))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_interfaces",
            "            INTERFACES:'interfaces'",
            "            (int_named",
            "              (interface_id",
            "                name = INTERFACE_NAME:'ge-2/0/0'  <== mode:M_Interface)",
            "              (i_unit",
            "                UNIT:'unit'",
            "                num = DEC:'0'",
            "                (i_bandwidth",
            "                  BANDWIDTH:'bandwidth'",
            "                  (bandwidth",
            "                    base = DEC:'5'  <== mode:M_Bandwidth))))))))",
            "    NEWLINE:'\\n'  <== mode:M_Bandwidth)",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_interfaces",
            "            INTERFACES:'interfaces'",
            "            (int_named",
            "              (interface_id",
            "                name = INTERFACE_NAME:'ge-2/0/0'  <== mode:M_Interface)",
            "              (i_unit",
            "                UNIT:'unit'",
            "                num = DEC:'1'",
            "                (i_bandwidth",
            "                  BANDWIDTH:'bandwidth'",
            "                  (bandwidth",
            "                    base = DEC:'5'  <== mode:M_Bandwidth",
            "                    C:'c'  <== mode:M_Bandwidth))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_interfaces",
            "            INTERFACES:'interfaces'",
            "            (int_named",
            "              (interface_id",
            "                name = INTERFACE_NAME:'ge-3/0/0'  <== mode:M_Interface)",
            "              (i_unit",
            "                UNIT:'unit'",
            "                num = DEC:'0'",
            "                (i_bandwidth",
            "                  BANDWIDTH:'bandwidth'",
            "                  (bandwidth",
            "                    base = DEC:'5'  <== mode:M_Bandwidth",
            "                    K:'k'  <== mode:M_Bandwidth))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_interfaces",
            "            INTERFACES:'interfaces'",
            "            (int_named",
            "              (interface_id",
            "                name = INTERFACE_NAME:'ge-4/0/0'  <== mode:M_Interface)",
            "              (i_unit",
            "                UNIT:'unit'",
            "                num = DEC:'0'",
            "                (i_bandwidth",
            "                  BANDWIDTH:'bandwidth'",
            "                  (bandwidth",
            "                    base = DEC:'5'  <== mode:M_Bandwidth",
            "                    M:'m'  <== mode:M_Bandwidth))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_interfaces",
            "            INTERFACES:'interfaces'",
            "            (int_named",
            "              (interface_id",
            "                name = INTERFACE_NAME:'ge-5/0/0'  <== mode:M_Interface)",
            "              (i_unit",
            "                UNIT:'unit'",
            "                num = DEC:'0'",
            "                (i_bandwidth",
            "                  BANDWIDTH:'bandwidth'",
            "                  (bandwidth",
            "                    base = DEC:'5'  <== mode:M_Bandwidth",
            "                    G:'g'  <== mode:M_Bandwidth))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_interfaces",
            "            INTERFACES:'interfaces'",
            "            (int_named",
            "              (interface_id",
            "                name = INTERFACE_NAME:'xe-0/0/0'  <== mode:M_Interface",
            "                COLON:':'",
            "                chnl = DEC:'0')",
            "              (i_common",
            "                (i_common_physical",
            "                  (i_gigether_options",
            "                    GIGETHER_OPTIONS:'gigether-options'",
            "                    (ether_options",
            "                      (eo_null",
            "                        LOOPBACK:'loopback'",
            "                        (null_filler)))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_interfaces",
            "            INTERFACES:'interfaces'",
            "            (int_named",
            "              (interface_id",
            "                name = INTERFACE_NAME:'xe-0/0/0'  <== mode:M_Interface",
            "                COLON:':'",
            "                chnl = DEC:'0')",
            "              (i_unit",
            "                UNIT:'unit'",
            "                num = DEC:'0'",
            "                (i_common",
            "                  (i_family",
            "                    FAMILY:'family'",
            "                    (if_ethernet_switching",
            "                      ETHERNET_SWITCHING:'ethernet-switching'",
            "                      (ife_vlan",
            "                        VLAN:'vlan'",
            "                        MEMBERS:'members'  <== mode:M_Vlan",
            "                        ALL:'all'))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_interfaces",
            "            INTERFACES:'interfaces'",
            "            (int_named",
            "              (interface_id",
            "                name = INTERFACE_NAME:'irb'  <== mode:M_Interface)",
            "              (i_unit",
            "                UNIT:'unit'",
            "                num = DEC:'5'",
            "                (i_common",
            "                  (i_family",
            "                    FAMILY:'family'",
            "                    (if_inet",
            "                      INET:'inet'",
            "                      (ifi_address",
            "                        ADDRESS:'address'",
            "                        IP_PREFIX:'1.2.3.1/24'",
            "                        (ifia_vrrp_group",
            "                          VRRP_GROUP:'vrrp-group'",
            "                          number = DEC:'5'",
            "                          (ifiav_authentication_type",
            "                            AUTHENTICATION_TYPE:'authentication-type'",
            "                            MD5:'md5'))))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_interfaces",
            "            INTERFACES:'interfaces'",
            "            (int_named",
            "              (interface_id",
            "                name = INTERFACE_NAME:'irb'  <== mode:M_Interface)",
            "              (i_unit",
            "                UNIT:'unit'",
            "                num = DEC:'5'",
            "                (i_common",
            "                  (i_family",
            "                    FAMILY:'family'",
            "                    (if_inet",
            "                      INET:'inet'",
            "                      (ifi_address",
            "                        ADDRESS:'address'",
            "                        IP_PREFIX:'1.2.3.0/24'",
            "                        (ifia_vrrp_group",
            "                          VRRP_GROUP:'vrrp-group'",
            "                          number = DEC:'5'",
            "                          (ifiav_authentication_key",
            "                            AUTHENTICATION_KEY:'authentication-key'",
            "                            (string",
            "                              (variable",
            "                                text = VARIABLE:'abcdefg'))))))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_interfaces",
            "            INTERFACES:'interfaces'",
            "            (int_named",
            "              (interface_id",
            "                name = INTERFACE_NAME:'irb'  <== mode:M_Interface)",
            "              (i_unit",
            "                UNIT:'unit'",
            "                num = DEC:'5'",
            "                (i_common",
            "                  (i_family",
            "                    FAMILY:'family'",
            "                    (if_inet",
            "                      INET:'inet'",
            "                      (ifi_address",
            "                        ADDRESS:'address'",
            "                        IP_PREFIX:'1.2.3.0/24'",
            "                        (ifia_vrrp_group",
            "                          VRRP_GROUP:'vrrp-group'",
            "                          number = DEC:'5'",
            "                          (ifiav_authentication_key",
            "                            AUTHENTICATION_KEY:'authentication-key'",
            "                            (string",
            "                              DOUBLE_QUOTED_STRING:'\"$9$dLV2aZGi.fzDiORSeXxDikqmT\"')))))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_interfaces",
            "            INTERFACES:'interfaces'",
            "            (int_named",
            "              (interface_id",
            "                name = INTERFACE_NAME:'irb'  <== mode:M_Interface)",
            "              (i_unit",
            "                UNIT:'unit'",
            "                num = DEC:'5'",
            "                (i_common",
            "                  (i_family",
            "                    FAMILY:'family'",
            "                    (if_inet",
            "                      INET:'inet'",
            "                      (ifi_tcp_mss",
            "                        TCP_MSS:'tcp-mss'",
            "                        size = DEC:'1400'))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_interfaces",
            "            INTERFACES:'interfaces'",
            "            (int_named",
            "              (interface_id",
            "                name = INTERFACE_NAME:'xe-0/0/5'  <== mode:M_Interface",
            "                COLON:':'",
            "                chnl = DEC:'0')",
            "              (i_unit",
            "                UNIT:'unit'",
            "                num = DEC:'0'",
            "                (i_common",
            "                  (i_family",
            "                    FAMILY:'family'",
            "                    (if_ethernet_switching",
            "                      ETHERNET_SWITCHING:'ethernet-switching'",
            "                      (ife_vlan",
            "                        VLAN:'vlan'",
            "                        MEMBERS:'members'  <== mode:M_Vlan",
            "                        name = (variable",
            "                          text = VARIABLE:'bippetyboppety')))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_interfaces",
            "            INTERFACES:'interfaces'",
            "            (int_named",
            "              (interface_id",
            "                name = INTERFACE_NAME:'xe-0/0/6'  <== mode:M_Interface)",
            "              (i_native_vlan_id",
            "                NATIVE_VLAN_ID:'native-vlan-id'",
            "                id = DEC:'11'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_interfaces",
            "            INTERFACES:'interfaces'",
            "            (int_named",
            "              (interface_id",
            "                name = INTERFACE_NAME:'vme'  <== mode:M_Interface)",
            "              (i_unit",
            "                UNIT:'unit'",
            "                num = DEC:'0'",
            "                (i_common",
            "                  (i_family",
            "                    FAMILY:'family'",
            "                    (if_inet",
            "                      INET:'inet'",
            "                      (ifi_address",
            "                        ADDRESS:'address'",
            "                        IP_PREFIX:'100.100.100.100/32'))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_routing_instances",
            "            ROUTING_INSTANCES:'routing-instances'",
            "            (ri_named_routing_instance",
            "              name = (variable",
            "                text = VARIABLE:'SOME_INSTANCE')",
            "              (ri_interface",
            "                INTERFACE:'interface'",
            "                id = (interface_id",
            "                  name = INTERFACE_NAME:'ge-0/0/1'  <== mode:M_Interface)))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_vlans",
            "            VLANS:'vlans'",
            "            (s_vlans_named",
            "              name = (variable",
            "                text = VARIABLE:'unused-vlan')",
            "              (apply))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_vlans",
            "            VLANS:'vlans'",
            "            (s_vlans_named",
            "              name = (variable",
            "                text = VARIABLE:'unused-vlan')",
            "              (vlt_vlan_id",
            "                VLAN_ID:'vlan-id'",
            "                id = DEC:'2000'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (s_groups",
            "        GROUPS:'groups'",
            "        (s_groups_named",
            "          name = (variable",
            "            text = VARIABLE:'VRRP-A')",
            "          (s_groups_tail",
            "            (statement",
            "              (s_logical_systems",
            "                LOGICAL_SYSTEMS:'logical-systems'",
            "                name = (variable",
            "                  text = WILDCARD:'<*>')",
            "                (s_logical_systems_tail",
            "                  (statement",
            "                    (s_common",
            "                      (s_interfaces",
            "                        INTERFACES:'interfaces'",
            "                        (int_named",
            "                          (wildcard",
            "                            WILDCARD:'<*>'  <== mode:M_Interface)",
            "                          (i_unit",
            "                            UNIT:'unit'",
            "                            (wildcard",
            "                              WILDCARD:'<*>')",
            "                            (i_common",
            "                              (i_family",
            "                                FAMILY:'family'",
            "                                (if_inet",
            "                                  INET:'inet'",
            "                                  (ifi_address",
            "                                    ADDRESS:'address'",
            "                                    (wildcard",
            "                                      WILDCARD:'<*>')",
            "                                    (ifia_vrrp_group",
            "                                      VRRP_GROUP:'vrrp-group'",
            "                                      name = (variable",
            "                                        text = WILDCARD:'<*>')",
            "                                      (ifiav_preempt",
            "                                        PREEMPT:'preempt'",
            "                                        HOLD_TIME:'hold-time'",
            "                                        DEC:'60'))))))))))))))))))",
            "    NEWLINE:'\\n\\n')",
            "  EOF:<EOF>)"
          ]
        },
        "configs/juniper_isis" : {
          "sentences" : [
            "(flat_juniper_configuration",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_host_name",
            "              HOST_NAME:'host-name'",
            "              (variable",
            "                text = VARIABLE:'juniper_isis'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (s_groups",
            "        GROUPS:'groups'",
            "        (s_groups_named",
            "          name = (variable",
            "            text = VARIABLE:'gname')",
            "          (s_groups_tail",
            "            (statement",
            "              (s_common",
            "                (s_protocols",
            "                  PROTOCOLS:'protocols'",
            "                  (p_isis",
            "                    ISIS:'isis'",
            "                    (is_interface",
            "                      INTERFACE:'interface'",
            "                      (wildcard",
            "                        WILDCARD:'<*.*>'  <== mode:M_Interface)",
            "                      FAMILY:'family'",
            "                      INET:'inet'",
            "                      (isi_bfd_liveness_detection",
            "                        BFD_LIVENESS_DETECTION:'bfd-liveness-detection'",
            "                        (isib_minimum_interval",
            "                          MINIMUM_INTERVAL:'minimum-interval'",
            "                          DEC:'100')))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_interfaces",
            "            INTERFACES:'interfaces'",
            "            (int_named",
            "              (interface_id",
            "                name = INTERFACE_NAME:'ge-0/0/0'  <== mode:M_Interface)",
            "              (i_unit",
            "                UNIT:'unit'",
            "                num = DEC:'0'",
            "                (i_common",
            "                  (apply))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_isis",
            "              ISIS:'isis'",
            "              (is_interface",
            "                INTERFACE:'interface'",
            "                id = (interface_id",
            "                  name = INTERFACE_NAME:'ge-0/0/0'  <== mode:M_Interface",
            "                  PERIOD:'.'",
            "                  unit = DEC:'0')",
            "                (isi_disable",
            "                  DISABLE:'disable')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_isis",
            "              ISIS:'isis'",
            "              (is_interface",
            "                INTERFACE:'interface'",
            "                id = (interface_id",
            "                  name = INTERFACE_NAME:'ge-0/0/0'  <== mode:M_Interface",
            "                  PERIOD:'.'",
            "                  unit = DEC:'0')",
            "                (isi_level",
            "                  LEVEL:'level'",
            "                  DEC:'1'",
            "                  (isil_disable",
            "                    DISABLE:'disable'))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_isis",
            "              ISIS:'isis'",
            "              (is_interface",
            "                INTERFACE:'interface'",
            "                id = (interface_id",
            "                  name = INTERFACE_NAME:'ge-0/0/0'  <== mode:M_Interface",
            "                  PERIOD:'.'",
            "                  unit = DEC:'0')",
            "                (isi_passive",
            "                  PASSIVE:'passive')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_isis",
            "              ISIS:'isis'",
            "              (is_interface",
            "                INTERFACE:'interface'",
            "                id = (interface_id",
            "                  name = INTERFACE_NAME:'ge-0/0/0'  <== mode:M_Interface",
            "                  PERIOD:'.'",
            "                  unit = DEC:'0')",
            "                (isi_level",
            "                  LEVEL:'level'",
            "                  DEC:'1'",
            "                  (isil_passive",
            "                    PASSIVE:'passive'))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_isis",
            "              ISIS:'isis'",
            "              (is_interface",
            "                INTERFACE:'interface'",
            "                id = (interface_id",
            "                  name = INTERFACE_NAME:'ge-0/0/0'  <== mode:M_Interface",
            "                  PERIOD:'.'",
            "                  unit = DEC:'0')",
            "                (isi_level",
            "                  LEVEL:'level'",
            "                  DEC:'2'",
            "                  (isil_priority",
            "                    PRIORITY:'priority'",
            "                    DEC:'65'))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_isis",
            "              ISIS:'isis'",
            "              (is_interface",
            "                INTERFACE:'interface'",
            "                id = (interface_id",
            "                  name = INTERFACE_NAME:'ge-0/0/0'  <== mode:M_Interface",
            "                  PERIOD:'.'",
            "                  unit = DEC:'0')",
            "                (isi_null",
            "                  LDP_SYNCHRONIZATION:'ldp-synchronization'",
            "                  (null_filler))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_isis",
            "              ISIS:'isis'",
            "              (is_interface",
            "                INTERFACE:'interface'",
            "                id = (interface_id",
            "                  name = INTERFACE_NAME:'ge-0/0/0'  <== mode:M_Interface",
            "                  PERIOD:'.'",
            "                  unit = DEC:'0')",
            "                (isi_null",
            "                  NODE_LINK_PROTECTION:'node-link-protection'",
            "                  (null_filler))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_isis",
            "              ISIS:'isis'",
            "              (is_overload",
            "                OVERLOAD:'overload'",
            "                (iso_timeout",
            "                  TIMEOUT:'timeout'",
            "                  DEC:'30')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_isis",
            "              ISIS:'isis'",
            "              (is_overload",
            "                OVERLOAD:'overload'",
            "                (apply)))))))",
            "    NEWLINE:'\\n')",
            "  EOF:<EOF>)"
          ]
        },
        "configs/juniper_l2_learning" : {
          "sentences" : [
            "(flat_juniper_configuration",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_host_name",
            "              HOST_NAME:'host-name'",
            "              (variable",
            "                text = VARIABLE:'juniper_l2_learning'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_null",
            "              L2_LEARNING:'l2-learning'",
            "              (null_filler",
            "                VARIABLE:'global-mac-table-aging-time'",
            "                DEC:'300'))))))",
            "    NEWLINE:'\\n')",
            "  EOF:<EOF>)"
          ]
        },
        "configs/juniper_misc" : {
          "sentences" : [
            "(flat_juniper_configuration",
            "  (protect_line",
            "    PROTECT:'protect'",
            "    SYSTEM:'system'",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_host_name",
            "              HOST_NAME:'host-name'",
            "              (variable",
            "                text = VARIABLE:'juniper_misc'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_null",
            "              COMPRESS_CONFIGURATION_FILES:'compress-configuration-files'",
            "              (null_filler))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_domain_name",
            "              DOMAIN_NAME:'domain-name'",
            "              (variable",
            "                text = VARIABLE:'my.domain.name'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_null",
            "              UPLINK_FAILURE_DETECTION:'uplink-failure-detection'",
            "              (null_filler",
            "                GROUP:'group'",
            "                VARIABLE:'G1'  <== mode:M_VarOrWildcard",
            "                VARIABLE:'link-to-monitor'",
            "                VARIABLE:'xe-0/0/0'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_routing_instances",
            "            ROUTING_INSTANCES:'routing-instances'",
            "            (ri_named_routing_instance",
            "              name = (variable",
            "                text = VARIABLE:'ROUTING_INSTANCE')",
            "              (ri_vtep_source_interface",
            "                VTEP_SOURCE_INTERFACE:'vtep-source-interface'",
            "                iface = (interface_id",
            "                  name = INTERFACE_NAME:'lo0'  <== mode:M_Interface",
            "                  PERIOD:'.'",
            "                  unit = DEC:'0')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_null",
            "            VIRTUAL_CHASSIS:'virtual-chassis'",
            "            (null_filler",
            "              MEMBER:'member'",
            "              DEC:'0'  <== mode:M_Interface",
            "              VARIABLE:'role'",
            "              VARIABLE:'routing-engine')))))",
            "    NEWLINE:'\\n\\n')",
            "  EOF:<EOF>)"
          ]
        },
        "configs/juniper_nat" : {
          "sentences" : [
            "(flat_juniper_configuration",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_host_name",
            "              HOST_NAME:'host-name'",
            "              (variable",
            "                text = VARIABLE:'juniper_nat'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_security",
            "            SECURITY:'security'",
            "            (se_nat",
            "              NAT:'nat'",
            "              (sen_source",
            "                SOURCE:'source'",
            "                (nat_pool_utilization_alarm",
            "                  POOL_UTILIZATION_ALARM:'pool-utilization-alarm'",
            "                  (null_filler",
            "                    VARIABLE:'raise-threshold'",
            "                    DEC:'85'",
            "                    VARIABLE:'clear-threshold'",
            "                    DEC:'60'))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_security",
            "            SECURITY:'security'",
            "            (se_nat",
            "              NAT:'nat'",
            "              (sen_source",
            "                SOURCE:'source'",
            "                (nat_pool",
            "                  POOL:'pool'",
            "                  name = (variable",
            "                    text = VARIABLE:'POOL')",
            "                  (natp_address",
            "                    ADDRESS:'address'",
            "                    prefix = IP_PREFIX:'10.10.10.10/24'))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_security",
            "            SECURITY:'security'",
            "            (se_nat",
            "              NAT:'nat'",
            "              (sen_source",
            "                SOURCE:'source'",
            "                (nat_rule_set",
            "                  RULE_SET:'rule-set'",
            "                  name = (variable",
            "                    text = VARIABLE:'SRC-NAT')",
            "                  (rs_packet_location",
            "                    FROM:'from'",
            "                    (rs_zone",
            "                      ZONE:'zone'",
            "                      name = (variable",
            "                        text = TRUST:'trust'))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_security",
            "            SECURITY:'security'",
            "            (se_nat",
            "              NAT:'nat'",
            "              (sen_source",
            "                SOURCE:'source'",
            "                (nat_rule_set",
            "                  RULE_SET:'rule-set'",
            "                  name = (variable",
            "                    text = VARIABLE:'SRC-NAT')",
            "                  (rs_packet_location",
            "                    TO:'to'",
            "                    (rs_interface",
            "                      INTERFACE:'interface'",
            "                      name = (interface_id",
            "                        name = INTERFACE_NAME:'ge-0/0/0'  <== mode:M_Interface",
            "                        PERIOD:'.'",
            "                        unit = DEC:'0'))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_security",
            "            SECURITY:'security'",
            "            (se_nat",
            "              NAT:'nat'",
            "              (sen_source",
            "                SOURCE:'source'",
            "                (nat_rule_set",
            "                  RULE_SET:'rule-set'",
            "                  name = (variable",
            "                    text = VARIABLE:'SRC-NAT')",
            "                  (rs_rule",
            "                    RULE:'rule'",
            "                    name = (variable",
            "                      text = VARIABLE:'SRC-RULE1')",
            "                    (rsr_match",
            "                      MATCH:'match'",
            "                      (rsrm_destination_address",
            "                        DESTINATION_ADDRESS:'destination-address'",
            "                        IP_PREFIX:'1.1.1.1/24'))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_security",
            "            SECURITY:'security'",
            "            (se_nat",
            "              NAT:'nat'",
            "              (sen_source",
            "                SOURCE:'source'",
            "                (nat_rule_set",
            "                  RULE_SET:'rule-set'",
            "                  name = (variable",
            "                    text = VARIABLE:'SRC-NAT')",
            "                  (rs_rule",
            "                    RULE:'rule'",
            "                    name = (variable",
            "                      text = VARIABLE:'SRC-RULE1')",
            "                    (rsr_match",
            "                      MATCH:'match'",
            "                      (rsrm_destination_address_name",
            "                        DESTINATION_ADDRESS_NAME:'destination-address-name'",
            "                        name = (variable",
            "                          text = VARIABLE:'NAME')))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_security",
            "            SECURITY:'security'",
            "            (se_nat",
            "              NAT:'nat'",
            "              (sen_source",
            "                SOURCE:'source'",
            "                (nat_rule_set",
            "                  RULE_SET:'rule-set'",
            "                  name = (variable",
            "                    text = VARIABLE:'SRC-NAT')",
            "                  (rs_rule",
            "                    RULE:'rule'",
            "                    name = (variable",
            "                      text = VARIABLE:'SRC-RULE1')",
            "                    (rsr_match",
            "                      MATCH:'match'",
            "                      (rsrm_source_address",
            "                        SOURCE_ADDRESS:'source-address'",
            "                        IP_PREFIX:'1.1.1.1/24'))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_security",
            "            SECURITY:'security'",
            "            (se_nat",
            "              NAT:'nat'",
            "              (sen_source",
            "                SOURCE:'source'",
            "                (nat_rule_set",
            "                  RULE_SET:'rule-set'",
            "                  name = (variable",
            "                    text = VARIABLE:'SRC-NAT')",
            "                  (rs_rule",
            "                    RULE:'rule'",
            "                    name = (variable",
            "                      text = VARIABLE:'SRC-RULE1')",
            "                    (rsr_match",
            "                      MATCH:'match'",
            "                      (rsrm_source_address_name",
            "                        SOURCE_ADDRESS_NAME:'source-address-name'",
            "                        name = (variable",
            "                          text = VARIABLE:'SA-NAME')))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_security",
            "            SECURITY:'security'",
            "            (se_nat",
            "              NAT:'nat'",
            "              (sen_source",
            "                SOURCE:'source'",
            "                (nat_rule_set",
            "                  RULE_SET:'rule-set'",
            "                  name = (variable",
            "                    text = VARIABLE:'SRC-NAT')",
            "                  (rs_rule",
            "                    RULE:'rule'",
            "                    name = (variable",
            "                      text = VARIABLE:'SRC-RULE1')",
            "                    (rsr_then",
            "                      THEN:'then'",
            "                      (rsrt_source_nat",
            "                        SOURCE_NAT:'source-nat'",
            "                        (rsrt_nat_off",
            "                          OFF:'off')))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_security",
            "            SECURITY:'security'",
            "            (se_nat",
            "              NAT:'nat'",
            "              (sen_source",
            "                SOURCE:'source'",
            "                (nat_rule_set",
            "                  RULE_SET:'rule-set'",
            "                  name = (variable",
            "                    text = VARIABLE:'SRC-NAT')",
            "                  (rs_rule",
            "                    RULE:'rule'",
            "                    name = (variable",
            "                      text = VARIABLE:'SRC-RULE2')",
            "                    (rsr_match",
            "                      MATCH:'match'",
            "                      (rsrm_destination_address",
            "                        DESTINATION_ADDRESS:'destination-address'",
            "                        IP_PREFIX:'2.2.2.2/24'))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_security",
            "            SECURITY:'security'",
            "            (se_nat",
            "              NAT:'nat'",
            "              (sen_source",
            "                SOURCE:'source'",
            "                (nat_rule_set",
            "                  RULE_SET:'rule-set'",
            "                  name = (variable",
            "                    text = VARIABLE:'SRC-NAT')",
            "                  (rs_rule",
            "                    RULE:'rule'",
            "                    name = (variable",
            "                      text = VARIABLE:'SRC-RULE2')",
            "                    (rsr_then",
            "                      THEN:'then'",
            "                      (rsrt_source_nat",
            "                        SOURCE_NAT:'source-nat'",
            "                        (rsrt_nat_interface",
            "                          INTERFACE:'interface')))))))))))",
            "    NEWLINE:'\\n'  <== mode:M_Interface)",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_security",
            "            SECURITY:'security'",
            "            (se_nat",
            "              NAT:'nat'",
            "              (sen_source",
            "                SOURCE:'source'",
            "                (nat_rule_set",
            "                  RULE_SET:'rule-set'",
            "                  name = (variable",
            "                    text = VARIABLE:'SRC-NAT')",
            "                  (rs_rule",
            "                    RULE:'rule'",
            "                    name = (variable",
            "                      text = VARIABLE:'SRC-RULE3')",
            "                    (rsr_match",
            "                      MATCH:'match'",
            "                      (rsrm_destination_address",
            "                        DESTINATION_ADDRESS:'destination-address'",
            "                        IP_PREFIX:'3.3.3.3/24'))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_security",
            "            SECURITY:'security'",
            "            (se_nat",
            "              NAT:'nat'",
            "              (sen_source",
            "                SOURCE:'source'",
            "                (nat_rule_set",
            "                  RULE_SET:'rule-set'",
            "                  name = (variable",
            "                    text = VARIABLE:'SRC-NAT')",
            "                  (rs_rule",
            "                    RULE:'rule'",
            "                    name = (variable",
            "                      text = VARIABLE:'SRC-RULE3')",
            "                    (rsr_then",
            "                      THEN:'then'",
            "                      (rsrt_source_nat",
            "                        SOURCE_NAT:'source-nat'",
            "                        (rsrt_nat_pool",
            "                          POOL:'pool'",
            "                          name = (variable",
            "                            text = VARIABLE:'POOL'))))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_security",
            "            SECURITY:'security'",
            "            (se_nat",
            "              NAT:'nat'",
            "              (sen_destination",
            "                DESTINATION:'destination'",
            "                (nat_pool",
            "                  POOL:'pool'",
            "                  name = (variable",
            "                    text = VARIABLE:'POOL')",
            "                  (natp_address",
            "                    ADDRESS:'address'",
            "                    prefix = IP_PREFIX:'10.10.10.10/24'))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_security",
            "            SECURITY:'security'",
            "            (se_nat",
            "              NAT:'nat'",
            "              (sen_destination",
            "                DESTINATION:'destination'",
            "                (nat_rule_set",
            "                  RULE_SET:'rule-set'",
            "                  name = (variable",
            "                    text = VARIABLE:'DST-NAT')",
            "                  (rs_packet_location",
            "                    FROM:'from'",
            "                    (rs_interface",
            "                      INTERFACE:'interface'",
            "                      name = (interface_id",
            "                        name = INTERFACE_NAME:'ge-0/0/0'  <== mode:M_Interface",
            "                        PERIOD:'.'",
            "                        unit = DEC:'0'))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_security",
            "            SECURITY:'security'",
            "            (se_nat",
            "              NAT:'nat'",
            "              (sen_destination",
            "                DESTINATION:'destination'",
            "                (nat_rule_set",
            "                  RULE_SET:'rule-set'",
            "                  name = (variable",
            "                    text = VARIABLE:'DST-NAT')",
            "                  (rs_rule",
            "                    RULE:'rule'",
            "                    name = (variable",
            "                      text = VARIABLE:'DST-RULE')",
            "                    (rsr_match",
            "                      MATCH:'match'",
            "                      (rsrm_destination_address",
            "                        DESTINATION_ADDRESS:'destination-address'",
            "                        IP_PREFIX:'2.2.2.2/24'))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_security",
            "            SECURITY:'security'",
            "            (se_nat",
            "              NAT:'nat'",
            "              (sen_destination",
            "                DESTINATION:'destination'",
            "                (nat_rule_set",
            "                  RULE_SET:'rule-set'",
            "                  name = (variable",
            "                    text = VARIABLE:'DST-NAT')",
            "                  (rs_rule",
            "                    RULE:'rule'",
            "                    name = (variable",
            "                      text = VARIABLE:'DST-RULE')",
            "                    (rsr_match",
            "                      MATCH:'match'",
            "                      (rsrm_destination_address_name",
            "                        DESTINATION_ADDRESS_NAME:'destination-address-name'",
            "                        name = (variable",
            "                          text = VARIABLE:'NAME')))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_security",
            "            SECURITY:'security'",
            "            (se_nat",
            "              NAT:'nat'",
            "              (sen_destination",
            "                DESTINATION:'destination'",
            "                (nat_rule_set",
            "                  RULE_SET:'rule-set'",
            "                  name = (variable",
            "                    text = VARIABLE:'DST-NAT')",
            "                  (rs_rule",
            "                    RULE:'rule'",
            "                    name = (variable",
            "                      text = VARIABLE:'DST-RULE')",
            "                    (rsr_match",
            "                      MATCH:'match'",
            "                      (rsrm_source_address",
            "                        SOURCE_ADDRESS:'source-address'",
            "                        IP_PREFIX:'2.2.2.2/24'))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_security",
            "            SECURITY:'security'",
            "            (se_nat",
            "              NAT:'nat'",
            "              (sen_destination",
            "                DESTINATION:'destination'",
            "                (nat_rule_set",
            "                  RULE_SET:'rule-set'",
            "                  name = (variable",
            "                    text = VARIABLE:'DST-NAT')",
            "                  (rs_rule",
            "                    RULE:'rule'",
            "                    name = (variable",
            "                      text = VARIABLE:'DST-RULE')",
            "                    (rsr_match",
            "                      MATCH:'match'",
            "                      (rsrm_source_address_name",
            "                        SOURCE_ADDRESS_NAME:'source-address-name'",
            "                        name = (variable",
            "                          text = VARIABLE:'SA-NAME')))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_security",
            "            SECURITY:'security'",
            "            (se_nat",
            "              NAT:'nat'",
            "              (sen_destination",
            "                DESTINATION:'destination'",
            "                (nat_rule_set",
            "                  RULE_SET:'rule-set'",
            "                  name = (variable",
            "                    text = VARIABLE:'DST-NAT')",
            "                  (rs_rule",
            "                    RULE:'rule'",
            "                    name = (variable",
            "                      text = VARIABLE:'DST-RULE')",
            "                    (rsr_then",
            "                      THEN:'then'",
            "                      (rsrt_destination_nat",
            "                        DESTINATION_NAT:'destination-nat'",
            "                        (rsrt_nat_pool",
            "                          POOL:'pool'",
            "                          name = (variable",
            "                            text = VARIABLE:'POOL'))))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_interfaces",
            "            INTERFACES:'interfaces'",
            "            (int_named",
            "              (interface_id",
            "                name = INTERFACE_NAME:'ge-0/0/0'  <== mode:M_Interface)",
            "              (i_unit",
            "                UNIT:'unit'",
            "                num = DEC:'0'",
            "                (i_common",
            "                  (i_family",
            "                    FAMILY:'family'",
            "                    (if_inet",
            "                      INET:'inet'",
            "                      (ifi_address",
            "                        ADDRESS:'address'",
            "                        IP_PREFIX:'1.0.0.1/24'))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_security",
            "            SECURITY:'security'",
            "            (se_zones",
            "              ZONES:'zones'",
            "              (sez_security_zone",
            "                SECURITY_ZONE:'security-zone'",
            "                (zone",
            "                  TRUST:'trust')",
            "                (sezs_interfaces",
            "                  INTERFACES:'interfaces'",
            "                  (interface_id",
            "                    name = INTERFACE_NAME:'ge-0/0/0'  <== mode:M_Interface",
            "                    PERIOD:'.'",
            "                    unit = DEC:'0')",
            "                  (apply))))))))",
            "    NEWLINE:'\\n\\n')",
            "  EOF:<EOF>)"
          ]
        },
        "configs/juniper_ntp" : {
          "sentences" : [
            "(flat_juniper_configuration",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_host_name",
            "              HOST_NAME:'host-name'",
            "              (variable",
            "                text = VARIABLE:'juniper_ntp'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_ntp",
            "              NTP:'ntp'",
            "              (syn_null",
            "                BOOT_SERVER:'boot-server'",
            "                (null_filler",
            "                  IP_ADDRESS:'4.5.6.7')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_ntp",
            "              NTP:'ntp'",
            "              (syn_null",
            "                BROADCAST_CLIENT:'broadcast-client'",
            "                (null_filler)))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_ntp",
            "              NTP:'ntp'",
            "              (syn_server",
            "                SERVER:'server'",
            "                hostname = (variable",
            "                  text = IP_ADDRESS:'1.2.3.4')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_ntp",
            "              NTP:'ntp'",
            "              (syn_server",
            "                SERVER:'server'",
            "                hostname = (variable",
            "                  text = IP_ADDRESS:'2.3.4.5')",
            "                (syn_server_prefer",
            "                  PREFER:'prefer')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_ntp",
            "              NTP:'ntp'",
            "              (syn_server",
            "                SERVER:'server'",
            "                hostname = (variable",
            "                  text = IP_ADDRESS:'2.3.4.6')",
            "                (syn_server_version",
            "                  VERSION:'version'",
            "                  VERSION_STRING:'3'  <== mode:M_Version)))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_ntp",
            "              NTP:'ntp'",
            "              (syn_server",
            "                SERVER:'server'",
            "                hostname = (variable",
            "                  text = IP_ADDRESS:'2.3.4.7')",
            "                (syn_server_key",
            "                  KEY:'key'",
            "                  DEC:'33333')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_ntp",
            "              NTP:'ntp'",
            "              (syn_server",
            "                SERVER:'server'",
            "                hostname = (variable",
            "                  text = IP_ADDRESS:'2.3.4.8')",
            "                (syn_server_key",
            "                  KEY:'key'",
            "                  DEC:'33334')",
            "                (syn_server_version",
            "                  VERSION:'version'",
            "                  VERSION_STRING:'1'  <== mode:M_Version)",
            "                (syn_server_prefer",
            "                  PREFER:'prefer')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_ntp",
            "              NTP:'ntp'",
            "              (syn_null",
            "                SOURCE_ADDRESS:'source-address'",
            "                (null_filler",
            "                  IP_ADDRESS:'2.3.4.5')))))))",
            "    NEWLINE:'\\n')",
            "  EOF:<EOF>)"
          ]
        },
        "configs/juniper_ospf" : {
          "sentences" : [
            "(flat_juniper_configuration",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_host_name",
            "              HOST_NAME:'host-name'",
            "              (variable",
            "                text = VARIABLE:'juniper-ospf'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_ospf",
            "              OSPF:'ospf'",
            "              (o_common",
            "                (o_area",
            "                  AREA:'area'",
            "                  area = IP_ADDRESS:'0.1.2.3'",
            "                  (oa_interface",
            "                    INTERFACE:'interface'",
            "                    id = (interface_id",
            "                      name = INTERFACE_NAME:'xe-0/0/20'  <== mode:M_Interface",
            "                      COLON:':'",
            "                      chnl = DEC:'0'",
            "                      PERIOD:'.'",
            "                      unit = DEC:'0')",
            "                    (apply)))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_ospf",
            "              OSPF:'ospf'",
            "              (o_common",
            "                (o_area",
            "                  AREA:'area'",
            "                  area = IP_ADDRESS:'0.1.2.3'",
            "                  (oa_interface",
            "                    INTERFACE:'interface'",
            "                    id = (interface_id",
            "                      name = INTERFACE_NAME:'xe-0/0/20'  <== mode:M_Interface",
            "                      COLON:':'",
            "                      chnl = DEC:'0'",
            "                      PERIOD:'.'",
            "                      unit = DEC:'0')",
            "                    (oai_ldp_synchronization",
            "                      LDP_SYNCHRONIZATION:'ldp-synchronization'",
            "                      (apply))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_ospf",
            "              OSPF:'ospf'",
            "              (o_common",
            "                (o_area",
            "                  AREA:'area'",
            "                  area = IP_ADDRESS:'0.1.2.3'",
            "                  (oa_interface",
            "                    INTERFACE:'interface'",
            "                    id = (interface_id",
            "                      name = INTERFACE_NAME:'xe-0/0/20'  <== mode:M_Interface",
            "                      COLON:':'",
            "                      chnl = DEC:'0'",
            "                      PERIOD:'.'",
            "                      unit = DEC:'0')",
            "                    (oai_ldp_synchronization",
            "                      LDP_SYNCHRONIZATION:'ldp-synchronization'",
            "                      (oai_ls_disable",
            "                        DISABLE:'disable'))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_ospf",
            "              OSPF:'ospf'",
            "              (o_common",
            "                (o_area",
            "                  AREA:'area'",
            "                  area = IP_ADDRESS:'0.1.2.3'",
            "                  (oa_interface",
            "                    INTERFACE:'interface'",
            "                    id = (interface_id",
            "                      name = INTERFACE_NAME:'xe-0/0/20'  <== mode:M_Interface",
            "                      COLON:':'",
            "                      chnl = DEC:'0'",
            "                      PERIOD:'.'",
            "                      unit = DEC:'0')",
            "                    (oai_ldp_synchronization",
            "                      LDP_SYNCHRONIZATION:'ldp-synchronization'",
            "                      (oai_ls_hold_time",
            "                        HOLD_TIME:'hold-time'",
            "                        time = DEC:'30'))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_ospf",
            "              OSPF:'ospf'",
            "              (o_common",
            "                (o_area",
            "                  AREA:'area'",
            "                  area = IP_ADDRESS:'0.1.2.3'",
            "                  (oa_interface",
            "                    INTERFACE:'interface'",
            "                    id = (interface_id",
            "                      name = INTERFACE_NAME:'xe-0/0/21'  <== mode:M_Interface",
            "                      COLON:':'",
            "                      chnl = DEC:'0'",
            "                      PERIOD:'.'",
            "                      unit = DEC:'0')",
            "                    (oai_passive",
            "                      PASSIVE:'passive')))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_ospf",
            "              OSPF:'ospf'",
            "              (o_common",
            "                (o_area",
            "                  AREA:'area'",
            "                  area = IP_ADDRESS:'0.1.2.3'",
            "                  (oa_area_range",
            "                    AREA_RANGE:'area-range'",
            "                    IP_PREFIX:'1.2.0.0/16'",
            "                    (oaa_override_metric",
            "                      OVERRIDE_METRIC:'override-metric'",
            "                      DEC:'100')))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_ospf",
            "              OSPF:'ospf'",
            "              (o_common",
            "                (o_null",
            "                  NO_RFC_1583:'no-rfc-1583'",
            "                  (null_filler))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_ospf",
            "              OSPF:'ospf'",
            "              (o_common",
            "                (o_null",
            "                  SPF_OPTIONS:'spf-options'",
            "                  (null_filler",
            "                    VARIABLE:'delay'",
            "                    DEC:'50'))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_ospf",
            "              OSPF:'ospf'",
            "              (o_common",
            "                (o_null",
            "                  SPF_OPTIONS:'spf-options'",
            "                  (null_filler",
            "                    VARIABLE:'holddown'",
            "                    DEC:'2000'))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_ospf3",
            "              OSPF3:'ospf3'",
            "              (o_common",
            "                (o_area",
            "                  AREA:'area'",
            "                  area = IP_ADDRESS:'0.1.2.3'",
            "                  (oa_nssa",
            "                    NSSA:'nssa'",
            "                    (oan_default_lsa",
            "                      DEFAULT_LSA:'default-lsa'",
            "                      (oand_default_metric",
            "                        DEFAULT_METRIC:'default-metric'",
            "                        DEC:'100'))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_ospf3",
            "              OSPF3:'ospf3'",
            "              (o_common",
            "                (o_area",
            "                  AREA:'area'",
            "                  area = IP_ADDRESS:'0.1.2.3'",
            "                  (oa_nssa",
            "                    NSSA:'nssa'",
            "                    (oan_no_summaries",
            "                      NO_SUMMARIES:'no-summaries')))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_ospf3",
            "              OSPF3:'ospf3'",
            "              (o_common",
            "                (o_area",
            "                  AREA:'area'",
            "                  area = IP_ADDRESS:'0.1.2.3'",
            "                  (oa_area_range",
            "                    AREA_RANGE:'area-range'",
            "                    IPV6_PREFIX:'dead:beef::/56'",
            "                    (oaa_override_metric",
            "                      OVERRIDE_METRIC:'override-metric'",
            "                      DEC:'100')))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_ospf3",
            "              OSPF3:'ospf3'",
            "              (o_common",
            "                (o_area",
            "                  AREA:'area'",
            "                  area = IP_ADDRESS:'0.1.2.3'",
            "                  (oa_interface",
            "                    INTERFACE:'interface'",
            "                    id = (interface_id",
            "                      name = INTERFACE_NAME:'xe-0/0/1'  <== mode:M_Interface",
            "                      PERIOD:'.'",
            "                      unit = DEC:'0')",
            "                    (apply)))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_ospf",
            "              OSPF:'ospf'",
            "              (o_common",
            "                (o_area",
            "                  AREA:'area'",
            "                  area = IP_ADDRESS:'0.1.2.3'",
            "                  (oa_interface",
            "                    INTERFACE:'interface'",
            "                    id = (interface_id",
            "                      name = INTERFACE_NAME:'ae16'  <== mode:M_Interface",
            "                      PERIOD:'.'",
            "                      unit = DEC:'0')",
            "                    (oai_interface_type",
            "                      INTERFACE_TYPE:'interface-type'",
            "                      type = (ospf_interface_type",
            "                        NBMA:'nbma'))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_ospf",
            "              OSPF:'ospf'",
            "              (o_common",
            "                (o_area",
            "                  AREA:'area'",
            "                  area = IP_ADDRESS:'0.1.2.3'",
            "                  (oa_interface",
            "                    INTERFACE:'interface'",
            "                    id = (interface_id",
            "                      name = INTERFACE_NAME:'ae16'  <== mode:M_Interface",
            "                      PERIOD:'.'",
            "                      unit = DEC:'0')",
            "                    (oai_interface_type",
            "                      INTERFACE_TYPE:'interface-type'",
            "                      type = (ospf_interface_type",
            "                        P2MP:'p2mp'))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_ospf",
            "              OSPF:'ospf'",
            "              (o_common",
            "                (o_area",
            "                  AREA:'area'",
            "                  area = IP_ADDRESS:'0.1.2.3'",
            "                  (oa_interface",
            "                    INTERFACE:'interface'",
            "                    id = (interface_id",
            "                      name = INTERFACE_NAME:'ae16'  <== mode:M_Interface",
            "                      PERIOD:'.'",
            "                      unit = DEC:'0')",
            "                    (oai_interface_type",
            "                      INTERFACE_TYPE:'interface-type'",
            "                      type = (ospf_interface_type",
            "                        P2MP_OVER_LAN:'p2mp-over-lan'))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_ospf",
            "              OSPF:'ospf'",
            "              (o_common",
            "                (o_area",
            "                  AREA:'area'",
            "                  area = IP_ADDRESS:'0.1.2.3'",
            "                  (oa_interface",
            "                    INTERFACE:'interface'",
            "                    id = (interface_id",
            "                      name = INTERFACE_NAME:'ae16'  <== mode:M_Interface",
            "                      PERIOD:'.'",
            "                      unit = DEC:'0')",
            "                    (oai_interface_type",
            "                      INTERFACE_TYPE:'interface-type'",
            "                      type = (ospf_interface_type",
            "                        P2P:'p2p'))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_ospf",
            "              OSPF:'ospf'",
            "              (o_common",
            "                (o_area",
            "                  AREA:'area'",
            "                  area = IP_ADDRESS:'0.1.2.3'",
            "                  (oa_interface",
            "                    INTERFACE:'interface'",
            "                    id = (interface_id",
            "                      name = INTERFACE_NAME:'ae16'  <== mode:M_Interface",
            "                      PERIOD:'.'",
            "                      unit = DEC:'0')",
            "                    (oai_neighbor",
            "                      NEIGHBOR:'neighbor'",
            "                      IP_ADDRESS:'10.2.2.1')))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_ospf",
            "              OSPF:'ospf'",
            "              (o_common",
            "                (o_area",
            "                  AREA:'area'",
            "                  area = IP_ADDRESS:'0.1.2.3'",
            "                  (oa_interface",
            "                    INTERFACE:'interface'",
            "                    id = (interface_id",
            "                      name = INTERFACE_NAME:'ae16'  <== mode:M_Interface",
            "                      PERIOD:'.'",
            "                      unit = DEC:'0')",
            "                    (oai_neighbor",
            "                      NEIGHBOR:'neighbor'",
            "                      IP_ADDRESS:'10.2.2.3'",
            "                      ELIGIBLE:'eligible')))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_ospf",
            "              OSPF:'ospf'",
            "              (o_common",
            "                (o_null",
            "                  GRACEFUL_RESTART:'graceful-restart'",
            "                  (null_filler",
            "                    VARIABLE:'restart-duration'",
            "                    DEC:'60'))))))))",
            "    NEWLINE:'\\n\\n')",
            "  EOF:<EOF>)"
          ]
        },
        "configs/juniper_ospf_disable" : {
          "sentences" : [
            "(flat_juniper_configuration",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_host_name",
            "              HOST_NAME:'host-name'",
            "              (variable",
            "                text = VARIABLE:'ospf-disable'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_interfaces",
            "            INTERFACES:'interfaces'",
            "            (int_named",
            "              (interface_id",
            "                name = INTERFACE_NAME:'ge-0/0/0'  <== mode:M_Interface)",
            "              (i_unit",
            "                UNIT:'unit'",
            "                num = DEC:'0'",
            "                (i_common",
            "                  (i_family",
            "                    FAMILY:'family'",
            "                    (if_inet",
            "                      INET:'inet'",
            "                      (ifi_address",
            "                        ADDRESS:'address'",
            "                        IP_PREFIX:'10.0.0.0/31'))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_ospf",
            "              OSPF:'ospf'",
            "              (o_common",
            "                (o_area",
            "                  AREA:'area'",
            "                  area = IP_ADDRESS:'0.0.0.0'",
            "                  (oa_interface",
            "                    INTERFACE:'interface'",
            "                    id = (interface_id",
            "                      name = INTERFACE_NAME:'ge-0/0/0'  <== mode:M_Interface",
            "                      PERIOD:'.'",
            "                      unit = DEC:'0')",
            "                    (apply)))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_ospf",
            "              OSPF:'ospf'",
            "              (o_common",
            "                (o_disable",
            "                  DISABLE:'disable')))))))",
            "    NEWLINE:'\\n')",
            "  EOF:<EOF>)"
          ]
        },
        "configs/juniper_ospf_stub_areas" : {
          "sentences" : [
            "(flat_juniper_configuration",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_host_name",
            "              HOST_NAME:'host-name'",
            "              (variable",
            "                text = VARIABLE:'juniper_ospf_stub_areas'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_ospf",
            "              OSPF:'ospf'",
            "              (o_common",
            "                (o_area",
            "                  AREA:'area'",
            "                  area = IP_ADDRESS:'0.0.0.46'",
            "                  (oa_stub",
            "                    STUB:'stub'))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_ospf",
            "              OSPF:'ospf'",
            "              (o_common",
            "                (o_area",
            "                  AREA:'area'",
            "                  area = IP_ADDRESS:'0.0.0.46'",
            "                  (oa_stub",
            "                    STUB:'stub'",
            "                    (oas_no_summaries",
            "                      NO_SUMMARIES:'no-summaries')))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_ospf",
            "              OSPF:'ospf'",
            "              (o_common",
            "                (o_area",
            "                  AREA:'area'",
            "                  area = IP_ADDRESS:'0.0.0.7'",
            "                  (oa_stub",
            "                    STUB:'stub'",
            "                    (oas_default_metric",
            "                      DEFAULT_METRIC:'default-metric'",
            "                      DEC:'10')))))))))",
            "    NEWLINE:'\\n')",
            "  EOF:<EOF>)"
          ]
        },
        "configs/juniper_passwords" : {
          "sentences" : [
            "(flat_juniper_configuration",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_host_name",
            "              HOST_NAME:'host-name'",
            "              (variable",
            "                text = VARIABLE:'juniper_passwords'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_root_authentication",
            "              ROOT_AUTHENTICATION:'root-authentication'",
            "              (syr_encrypted_password",
            "                ENCRYPTED_PASSWORD:'encrypted-password'",
            "                password = (variable",
            "                  text = DOUBLE_QUOTED_STRING:'\" SOMEPASSWORD \"')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_tacplus_server",
            "              TACPLUS_SERVER:'tacplus-server'",
            "              hostname = IP_ADDRESS:'1.2.3.4'",
            "              (syt_secret",
            "                SECRET:'secret'",
            "                (secret",
            "                  DOUBLE_QUOTED_STRING:'\"$9$WU3xVsq.f36CO1XNdV2gQz39uBylvNdwmfF6\"')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_tacplus_server",
            "              TACPLUS_SERVER:'tacplus-server'",
            "              hostname = IP_ADDRESS:'1.2.3.4'",
            "              (syt_source_address",
            "                SOURCE_ADDRESS:'source-address'",
            "                address = IP_ADDRESS:'2.2.2.2'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_tacplus_server",
            "              TACPLUS_SERVER:'tacplus-server'",
            "              hostname = IP_ADDRESS:'1.2.3.5'",
            "              (syt_secret",
            "                SECRET:'secret'",
            "                (secret",
            "                  DOUBLE_QUOTED_STRING:'\"$9$Bq4ErKY2oDiqTzRcyrMWZGDkfQCt0cyegoUiq.5T\"')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_tacplus_server",
            "              TACPLUS_SERVER:'tacplus-server'",
            "              hostname = IP_ADDRESS:'1.2.3.5'",
            "              (syt_source_address",
            "                SOURCE_ADDRESS:'source-address'",
            "                address = IP_ADDRESS:'2.2.2.2'))))))",
            "    NEWLINE:'\\n')",
            "  EOF:<EOF>)"
          ]
        },
        "configs/juniper_policy_statement" : {
          "sentences" : [
            "(flat_juniper_configuration",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_host_name",
            "              HOST_NAME:'host-name'",
            "              (variable",
            "                text = VARIABLE:'juniper_policy_statement'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_policy_options",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_policy_statement",
            "              POLICY_STATEMENT:'policy-statement'",
            "              name = (variable",
            "                text = VARIABLE:'POLICY-NAME')",
            "              (pops_term",
            "                TERM:'term'",
            "                name = (variable",
            "                  text = VARIABLE:'TERM')",
            "                (pops_common",
            "                  (pops_from",
            "                    FROM:'from'",
            "                    (popsf_as_path_group",
            "                      AS_PATH_GROUP:'as-path-group'",
            "                      name = (variable",
            "                        text = M_AsPathGroup_NAME:'AS_PATH_GROUP'  <== mode:M_AsPathGroup))))))))))",
            "    NEWLINE:'\\n'  <== mode:M_AsPathGroup2)",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_policy_options",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_policy_statement",
            "              POLICY_STATEMENT:'policy-statement'",
            "              name = (variable",
            "                text = VARIABLE:'POLICY-NAME')",
            "              (pops_term",
            "                TERM:'term'",
            "                name = (variable",
            "                  text = VARIABLE:'TERM')",
            "                (pops_common",
            "                  (pops_from",
            "                    FROM:'from'",
            "                    (popsf_family",
            "                      FAMILY:'family'",
            "                      EVPN:'evpn')))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_policy_options",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_policy_statement",
            "              POLICY_STATEMENT:'policy-statement'",
            "              name = (variable",
            "                text = VARIABLE:'POLICY-NAME')",
            "              (pops_term",
            "                TERM:'term'",
            "                name = (variable",
            "                  text = VARIABLE:'TERM')",
            "                (pops_common",
            "                  (pops_from",
            "                    FROM:'from'",
            "                    (popsf_family",
            "                      FAMILY:'family'",
            "                      INET:'inet')))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_policy_options",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_policy_statement",
            "              POLICY_STATEMENT:'policy-statement'",
            "              name = (variable",
            "                text = VARIABLE:'POLICY-NAME')",
            "              (pops_term",
            "                TERM:'term'",
            "                name = (variable",
            "                  text = VARIABLE:'TERM')",
            "                (pops_common",
            "                  (pops_from",
            "                    FROM:'from'",
            "                    (popsf_family",
            "                      FAMILY:'family'",
            "                      INET_MDT:'inet-mdt')))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_policy_options",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_policy_statement",
            "              POLICY_STATEMENT:'policy-statement'",
            "              name = (variable",
            "                text = VARIABLE:'POLICY-NAME')",
            "              (pops_term",
            "                TERM:'term'",
            "                name = (variable",
            "                  text = VARIABLE:'TERM')",
            "                (pops_common",
            "                  (pops_from",
            "                    FROM:'from'",
            "                    (popsf_family",
            "                      FAMILY:'family'",
            "                      INET_MVPN:'inet-mvpn')))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_policy_options",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_policy_statement",
            "              POLICY_STATEMENT:'policy-statement'",
            "              name = (variable",
            "                text = VARIABLE:'POLICY-NAME')",
            "              (pops_term",
            "                TERM:'term'",
            "                name = (variable",
            "                  text = VARIABLE:'TERM')",
            "                (pops_common",
            "                  (pops_from",
            "                    FROM:'from'",
            "                    (popsf_family",
            "                      FAMILY:'family'",
            "                      INET_VPN:'inet-vpn')))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_policy_options",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_policy_statement",
            "              POLICY_STATEMENT:'policy-statement'",
            "              name = (variable",
            "                text = VARIABLE:'POLICY-NAME')",
            "              (pops_term",
            "                TERM:'term'",
            "                name = (variable",
            "                  text = VARIABLE:'TERM')",
            "                (pops_common",
            "                  (pops_from",
            "                    FROM:'from'",
            "                    (popsf_family",
            "                      FAMILY:'family'",
            "                      INET6:'inet6')))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_policy_options",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_policy_statement",
            "              POLICY_STATEMENT:'policy-statement'",
            "              name = (variable",
            "                text = VARIABLE:'POLICY-NAME')",
            "              (pops_term",
            "                TERM:'term'",
            "                name = (variable",
            "                  text = VARIABLE:'TERM')",
            "                (pops_common",
            "                  (pops_from",
            "                    FROM:'from'",
            "                    (popsf_family",
            "                      FAMILY:'family'",
            "                      INET6_MVPN:'inet6-mvpn')))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_policy_options",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_policy_statement",
            "              POLICY_STATEMENT:'policy-statement'",
            "              name = (variable",
            "                text = VARIABLE:'POLICY-NAME')",
            "              (pops_term",
            "                TERM:'term'",
            "                name = (variable",
            "                  text = VARIABLE:'TERM')",
            "                (pops_common",
            "                  (pops_from",
            "                    FROM:'from'",
            "                    (popsf_family",
            "                      FAMILY:'family'",
            "                      INET6_VPN:'inet6-vpn')))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_policy_options",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_policy_statement",
            "              POLICY_STATEMENT:'policy-statement'",
            "              name = (variable",
            "                text = VARIABLE:'POLICY-NAME')",
            "              (pops_term",
            "                TERM:'term'",
            "                name = (variable",
            "                  text = VARIABLE:'TERM')",
            "                (pops_common",
            "                  (pops_from",
            "                    FROM:'from'",
            "                    (popsf_family",
            "                      FAMILY:'family'",
            "                      ISO:'iso')))))))))",
            "    NEWLINE:'\\n'  <== mode:M_ISO)",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_policy_options",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_policy_statement",
            "              POLICY_STATEMENT:'policy-statement'",
            "              name = (variable",
            "                text = VARIABLE:'POLICY-NAME')",
            "              (pops_term",
            "                TERM:'term'",
            "                name = (variable",
            "                  text = VARIABLE:'TERM')",
            "                (pops_common",
            "                  (pops_from",
            "                    FROM:'from'",
            "                    (popsf_family",
            "                      FAMILY:'family'",
            "                      ISO_VPN:'iso-vpn')))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_policy_options",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_policy_statement",
            "              POLICY_STATEMENT:'policy-statement'",
            "              name = (variable",
            "                text = VARIABLE:'POLICY-NAME')",
            "              (pops_term",
            "                TERM:'term'",
            "                name = (variable",
            "                  text = VARIABLE:'TERM')",
            "                (pops_common",
            "                  (pops_from",
            "                    FROM:'from'",
            "                    (popsf_family",
            "                      FAMILY:'family'",
            "                      ROUTE_TARGET:'route-target')))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_policy_options",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_policy_statement",
            "              POLICY_STATEMENT:'policy-statement'",
            "              name = (variable",
            "                text = VARIABLE:'POLICY-NAME')",
            "              (pops_term",
            "                TERM:'term'",
            "                name = (variable",
            "                  text = VARIABLE:'TERM')",
            "                (pops_common",
            "                  (pops_from",
            "                    FROM:'from'",
            "                    (popsf_family",
            "                      FAMILY:'family'",
            "                      TRAFFIC_ENGINEERING:'traffic-engineering')))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_policy_options",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_policy_statement",
            "              POLICY_STATEMENT:'policy-statement'",
            "              name = (variable",
            "                text = VARIABLE:'POLICY-NAME')",
            "              (pops_term",
            "                TERM:'term'",
            "                name = (variable",
            "                  text = VARIABLE:'TERM')",
            "                (pops_common",
            "                  (pops_from",
            "                    FROM:'from'",
            "                    (popsf_instance",
            "                      INSTANCE:'instance'",
            "                      name = (variable",
            "                        text = VARIABLE:'FORWARDING'))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_policy_options",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_policy_statement",
            "              POLICY_STATEMENT:'policy-statement'",
            "              name = (variable",
            "                text = VARIABLE:'POLICY-NAME')",
            "              (pops_term",
            "                TERM:'term'",
            "                name = (variable",
            "                  text = VARIABLE:'TERM')",
            "                (pops_common",
            "                  (pops_from",
            "                    FROM:'from'",
            "                    (popsf_protocol",
            "                      PROTOCOL:'protocol'",
            "                      protocol = (routing_protocol",
            "                        STATIC:'static'))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_policy_options",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_policy_statement",
            "              POLICY_STATEMENT:'policy-statement'",
            "              name = (variable",
            "                text = VARIABLE:'POLICY-NAME')",
            "              (pops_term",
            "                TERM:'term'",
            "                name = (variable",
            "                  text = VARIABLE:'TERM')",
            "                (pops_common",
            "                  (pops_from",
            "                    FROM:'from'",
            "                    (popsf_rib",
            "                      RIB:'rib'",
            "                      name = (variable",
            "                        text = VARIABLE:'inet6.0'))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_policy_options",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_policy_statement",
            "              POLICY_STATEMENT:'policy-statement'",
            "              name = (variable",
            "                text = VARIABLE:'POLICY-NAME')",
            "              (pops_term",
            "                TERM:'term'",
            "                name = (variable",
            "                  text = VARIABLE:'TERM')",
            "                (pops_common",
            "                  (pops_from",
            "                    FROM:'from'",
            "                    (popsf_tag",
            "                      TAG:'tag'",
            "                      DEC:'11')))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_policy_options",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_policy_statement",
            "              POLICY_STATEMENT:'policy-statement'",
            "              name = (variable",
            "                text = VARIABLE:'POLICY-NAME')",
            "              (pops_term",
            "                TERM:'term'",
            "                name = (variable",
            "                  text = VARIABLE:'TERM')",
            "                (pops_common",
            "                  (pops_then",
            "                    THEN:'then'",
            "                    (popst_common",
            "                      (popst_as_path_prepend",
            "                        AS_PATH_PREPEND:'as-path-prepend'",
            "                        (bgp_asn",
            "                          asn = DEC:'123'  <== mode:M_AsPathPrepend)))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_policy_options",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_policy_statement",
            "              POLICY_STATEMENT:'policy-statement'",
            "              name = (variable",
            "                text = VARIABLE:'POLICY-NAME')",
            "              (pops_term",
            "                TERM:'term'",
            "                name = (variable",
            "                  text = VARIABLE:'TERM')",
            "                (pops_common",
            "                  (pops_then",
            "                    THEN:'then'",
            "                    (popst_common",
            "                      (popst_as_path_prepend",
            "                        AS_PATH_PREPEND:'as-path-prepend'",
            "                        (bgp_asn",
            "                          asn4hi = DEC:'123'  <== mode:M_AsPathPrepend",
            "                          PERIOD:'.'",
            "                          asn4lo = DEC:'456')))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_policy_options",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_policy_statement",
            "              POLICY_STATEMENT:'policy-statement'",
            "              name = (variable",
            "                text = VARIABLE:'POLICY-NAME')",
            "              (pops_term",
            "                TERM:'term'",
            "                name = (variable",
            "                  text = VARIABLE:'TERM')",
            "                (pops_common",
            "                  (pops_then",
            "                    THEN:'then'",
            "                    (popst_common",
            "                      (popst_as_path_prepend",
            "                        AS_PATH_PREPEND:'as-path-prepend'",
            "                        (bgp_asn",
            "                          asn = DEC:'456'  <== mode:M_AsPathPrepend_Inner)",
            "                        (bgp_asn",
            "                          asn = DEC:'789'  <== mode:M_AsPathPrepend_Inner)))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_policy_options",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_policy_statement",
            "              POLICY_STATEMENT:'policy-statement'",
            "              name = (variable",
            "                text = VARIABLE:'POLICY-NAME')",
            "              (pops_term",
            "                TERM:'term'",
            "                name = (variable",
            "                  text = VARIABLE:'TERM')",
            "                (pops_common",
            "                  (pops_then",
            "                    THEN:'then'",
            "                    (popst_common",
            "                      (popst_as_path_prepend",
            "                        AS_PATH_PREPEND:'as-path-prepend'",
            "                        (bgp_asn",
            "                          asn = DEC:'456'  <== mode:M_AsPathPrepend_Inner)",
            "                        (bgp_asn",
            "                          asn4hi = DEC:'123'  <== mode:M_AsPathPrepend_Inner",
            "                          PERIOD:'.'  <== mode:M_AsPathPrepend_Inner",
            "                          asn4lo = DEC:'1'  <== mode:M_AsPathPrepend_Inner)",
            "                        (bgp_asn",
            "                          asn = DEC:'789'  <== mode:M_AsPathPrepend_Inner)))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_policy_options",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_policy_statement",
            "              POLICY_STATEMENT:'policy-statement'",
            "              name = (variable",
            "                text = VARIABLE:'POLICY-NAME')",
            "              (pops_term",
            "                TERM:'term'",
            "                name = (variable",
            "                  text = VARIABLE:'TERM')",
            "                (pops_common",
            "                  (pops_then",
            "                    THEN:'then'",
            "                    (popst_common",
            "                      (popst_default_action_accept",
            "                        DEFAULT_ACTION:'default-action'",
            "                        ACCEPT:'accept'))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_policy_options",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_policy_statement",
            "              POLICY_STATEMENT:'policy-statement'",
            "              name = (variable",
            "                text = VARIABLE:'POLICY-NAME')",
            "              (pops_term",
            "                TERM:'term'",
            "                name = (variable",
            "                  text = VARIABLE:'TERM')",
            "                (pops_common",
            "                  (pops_then",
            "                    THEN:'then'",
            "                    (popst_common",
            "                      (popst_default_action_reject",
            "                        DEFAULT_ACTION:'default-action'",
            "                        REJECT:'reject'))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_policy_options",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_policy_statement",
            "              POLICY_STATEMENT:'policy-statement'",
            "              name = (variable",
            "                text = VARIABLE:'POLICY-NAME')",
            "              (pops_term",
            "                TERM:'term'",
            "                name = (variable",
            "                  text = VARIABLE:'TERM')",
            "                (pops_common",
            "                  (pops_then",
            "                    THEN:'then'",
            "                    (popst_common",
            "                      (popst_external",
            "                        EXTERNAL:'external'",
            "                        TYPE:'type'",
            "                        DEC:'1'))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_policy_options",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_policy_statement",
            "              POLICY_STATEMENT:'policy-statement'",
            "              name = (variable",
            "                text = VARIABLE:'POLICY-NAME')",
            "              (pops_term",
            "                TERM:'term'",
            "                name = (variable",
            "                  text = VARIABLE:'TERM')",
            "                (pops_common",
            "                  (pops_then",
            "                    THEN:'then'",
            "                    (popst_common",
            "                      (popst_metric",
            "                        METRIC:'metric'",
            "                        metric = DEC:'10'))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_policy_options",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_policy_statement",
            "              POLICY_STATEMENT:'policy-statement'",
            "              name = (variable",
            "                text = VARIABLE:'POLICY-NAME')",
            "              (pops_term",
            "                TERM:'term'",
            "                name = (variable",
            "                  text = VARIABLE:'TERM')",
            "                (pops_common",
            "                  (pops_then",
            "                    THEN:'then'",
            "                    (popst_common",
            "                      (popst_metric_add",
            "                        METRIC:'metric'",
            "                        ADD:'add'",
            "                        metric = DEC:'20'))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_policy_options",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_policy_statement",
            "              POLICY_STATEMENT:'policy-statement'",
            "              name = (variable",
            "                text = VARIABLE:'POLICY-NAME')",
            "              (pops_term",
            "                TERM:'term'",
            "                name = (variable",
            "                  text = VARIABLE:'TERM')",
            "                (pops_common",
            "                  (pops_then",
            "                    THEN:'then'",
            "                    (popst_common",
            "                      (popst_next_hop_self",
            "                        NEXT_HOP:'next-hop'",
            "                        SELF:'self'  <== mode:M_Interface))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_policy_options",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_policy_statement",
            "              POLICY_STATEMENT:'policy-statement'",
            "              name = (variable",
            "                text = VARIABLE:'POLICY-NAME')",
            "              (pops_term",
            "                TERM:'term'",
            "                name = (variable",
            "                  text = VARIABLE:'TERM')",
            "                (pops_common",
            "                  (pops_then",
            "                    THEN:'then'",
            "                    (popst_common",
            "                      (popst_next_term",
            "                        NEXT:'next'",
            "                        TERM:'term'))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_policy_options",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_policy_statement",
            "              POLICY_STATEMENT:'policy-statement'",
            "              name = (variable",
            "                text = VARIABLE:'POLICY-NAME')",
            "              (pops_term",
            "                TERM:'term'",
            "                name = (variable",
            "                  text = VARIABLE:'TERM')",
            "                (pops_common",
            "                  (pops_then",
            "                    THEN:'then'",
            "                    (popst_common",
            "                      (popst_origin",
            "                        ORIGIN:'origin'",
            "                        IGP:'igp'))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_policy_options",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_policy_statement",
            "              POLICY_STATEMENT:'policy-statement'",
            "              name = (variable",
            "                text = VARIABLE:'POLICY-NAME')",
            "              (pops_term",
            "                TERM:'term'",
            "                name = (variable",
            "                  text = VARIABLE:'TERM')",
            "                (pops_common",
            "                  (pops_then",
            "                    THEN:'then'",
            "                    (popst_common",
            "                      (popst_preference",
            "                        PREFERENCE:'preference'",
            "                        preference = DEC:'100'))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_policy_options",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_policy_statement",
            "              POLICY_STATEMENT:'policy-statement'",
            "              name = (variable",
            "                text = VARIABLE:'POLICY-NAME')",
            "              (pops_term",
            "                TERM:'term'",
            "                name = (variable",
            "                  text = VARIABLE:'AS_PATH')",
            "                (pops_common",
            "                  (pops_from",
            "                    FROM:'from'",
            "                    (popsf_as_path",
            "                      AS_PATH:'as-path'",
            "                      name = (variable",
            "                        text = VARIABLE:'ORIGINATED_IN_65535'  <== mode:M_AsPath))))))))))",
            "    NEWLINE:'\\n'  <== mode:M_AsPathRegex)",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_policy_options",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_policy_statement",
            "              POLICY_STATEMENT:'policy-statement'",
            "              name = (variable",
            "                text = VARIABLE:'POLICY-NAME')",
            "              (pops_term",
            "                TERM:'term'",
            "                name = (variable",
            "                  text = VARIABLE:'AS_PATH')",
            "                (pops_common",
            "                  (pops_then",
            "                    THEN:'then'",
            "                    (popst_common",
            "                      (popst_accept",
            "                        ACCEPT:'accept'))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_policy_options",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_policy_statement",
            "              POLICY_STATEMENT:'policy-statement'",
            "              name = (variable",
            "                text = VARIABLE:'POLICY-NAME')",
            "              (pops_common",
            "                (pops_from",
            "                  FROM:'from'",
            "                  (popsf_protocol",
            "                    PROTOCOL:'protocol'",
            "                    protocol = (routing_protocol",
            "                      EVPN:'evpn')))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_policy_options",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_as_path",
            "              AS_PATH:'as-path'",
            "              name = (variable",
            "                text = VARIABLE:'ORIGINATED_IN_65535'  <== mode:M_AsPath)",
            "              regex = AS_PATH_REGEX:'.* 65535'  <== mode:M_AsPathRegex)))))",
            "    NEWLINE:'\\n'  <== mode:M_AsPathRegex)",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_policy_options",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_as_path",
            "              AS_PATH:'as-path'",
            "              name = (variable",
            "                text = VARIABLE:'UNUSED_ORIGINATED_IN_65535'  <== mode:M_AsPath)",
            "              regex = AS_PATH_REGEX:'.* 65535'  <== mode:M_AsPathRegex)))))",
            "    NEWLINE:'\\n\\n'  <== mode:M_AsPathRegex)",
            "  EOF:<EOF>)"
          ]
        },
        "configs/juniper_relay" : {
          "sentences" : [
            "(flat_juniper_configuration",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_host_name",
            "              HOST_NAME:'host-name'",
            "              (variable",
            "                text = VARIABLE:'juniper_relay'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_forwarding_options",
            "            FORWARDING_OPTIONS:'forwarding-options'",
            "            (fo_dhcp_relay",
            "              DHCP_RELAY:'dhcp-relay'",
            "              (fod_server_group",
            "                SERVER_GROUP:'server-group'",
            "                name = (variable",
            "                  text = VARIABLE:'site-dhcp')",
            "                address = IP_ADDRESS:'1.2.3.4'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_forwarding_options",
            "            FORWARDING_OPTIONS:'forwarding-options'",
            "            (fo_dhcp_relay",
            "              DHCP_RELAY:'dhcp-relay'",
            "              (fod_common",
            "                (fod_active_server_group",
            "                  ACTIVE_SERVER_GROUP:'active-server-group'",
            "                  name = (variable",
            "                    text = VARIABLE:'site-dhcp'))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_forwarding_options",
            "            FORWARDING_OPTIONS:'forwarding-options'",
            "            (fo_dhcp_relay",
            "              DHCP_RELAY:'dhcp-relay'",
            "              (fod_group",
            "                GROUP:'group'",
            "                name = (variable",
            "                  text = VARIABLE:'relay'  <== mode:M_VarOrWildcard)",
            "                (fod_common",
            "                  (fod_active_server_group",
            "                    ACTIVE_SERVER_GROUP:'active-server-group'",
            "                    name = (variable",
            "                      text = VARIABLE:'site-dhcp')))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_forwarding_options",
            "            FORWARDING_OPTIONS:'forwarding-options'",
            "            (fo_dhcp_relay",
            "              DHCP_RELAY:'dhcp-relay'",
            "              (fod_group",
            "                GROUP:'group'",
            "                name = (variable",
            "                  text = VARIABLE:'relay'  <== mode:M_VarOrWildcard)",
            "                (fodg_interface",
            "                  INTERFACE:'interface'",
            "                  (interface_id",
            "                    name = INTERFACE_NAME:'irb'  <== mode:M_Interface",
            "                    PERIOD:'.'",
            "                    unit = DEC:'10'))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_forwarding_options",
            "            FORWARDING_OPTIONS:'forwarding-options'",
            "            (fo_dhcp_relay",
            "              DHCP_RELAY:'dhcp-relay'",
            "              (fod_group",
            "                GROUP:'group'",
            "                name = (variable",
            "                  text = VARIABLE:'relay'  <== mode:M_VarOrWildcard)",
            "                (fodg_interface",
            "                  INTERFACE:'interface'",
            "                  (interface_id",
            "                    name = INTERFACE_NAME:'irb'  <== mode:M_Interface",
            "                    PERIOD:'.'",
            "                    unit = DEC:'20'))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_forwarding_options",
            "            FORWARDING_OPTIONS:'forwarding-options'",
            "            (fo_dhcp_relay",
            "              DHCP_RELAY:'dhcp-relay'",
            "              (fod_null",
            "                FORWARD_SNOOPED_CLIENTS:'forward-snooped-clients'",
            "                (null_filler",
            "                  VARIABLE:'all-interfaces')))))))",
            "    NEWLINE:'\\n')",
            "  EOF:<EOF>)"
          ]
        },
        "configs/juniper_reth_interfaces" : {
          "sentences" : [
            "(flat_juniper_configuration",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_host_name",
            "              HOST_NAME:'host-name'",
            "              (variable",
            "                text = VARIABLE:'interface-reth'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_interfaces",
            "            INTERFACES:'interfaces'",
            "            (int_named",
            "              (interface_id",
            "                name = INTERFACE_NAME:'ge-0/0/0'  <== mode:M_Interface)",
            "              (i_unit",
            "                UNIT:'unit'",
            "                num = DEC:'0'",
            "                (i_common",
            "                  (i_family",
            "                    FAMILY:'family'",
            "                    (if_inet",
            "                      INET:'inet'",
            "                      (ifi_address",
            "                        ADDRESS:'address'",
            "                        IP_PREFIX:'1.0.0.0/31'))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_interfaces",
            "            INTERFACES:'interfaces'",
            "            (int_named",
            "              (interface_id",
            "                name = INTERFACE_NAME:'ge-0/0/0'  <== mode:M_Interface)",
            "              (i_common",
            "                (i_common_physical",
            "                  (i_gigether_options",
            "                    GIGETHER_OPTIONS:'gigether-options'",
            "                    (ether_options",
            "                      (eo_redundant_parent",
            "                        REDUNDANT_PARENT:'redundant-parent'",
            "                        name = (variable",
            "                          text = VARIABLE:'reth0')))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_interfaces",
            "            INTERFACES:'interfaces'",
            "            (int_named",
            "              (interface_id",
            "                name = INTERFACE_NAME:'ge-0/0/1'  <== mode:M_Interface)",
            "              (i_unit",
            "                UNIT:'unit'",
            "                num = DEC:'0'",
            "                (i_common",
            "                  (i_family",
            "                    FAMILY:'family'",
            "                    (if_inet",
            "                      INET:'inet'",
            "                      (ifi_address",
            "                        ADDRESS:'address'",
            "                        IP_PREFIX:'1.0.0.1/31'))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_interfaces",
            "            INTERFACES:'interfaces'",
            "            (int_named",
            "              (interface_id",
            "                name = INTERFACE_NAME:'ge-0/0/1'  <== mode:M_Interface)",
            "              (i_common",
            "                (i_common_physical",
            "                  (i_gigether_options",
            "                    GIGETHER_OPTIONS:'gigether-options'",
            "                    (ether_options",
            "                      (eo_redundant_parent",
            "                        REDUNDANT_PARENT:'redundant-parent'",
            "                        name = (variable",
            "                          text = VARIABLE:'reth0')))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_interfaces",
            "            INTERFACES:'interfaces'",
            "            (int_named",
            "              (interface_id",
            "                name = INTERFACE_NAME:'reth0'  <== mode:M_Interface)",
            "              (i_unit",
            "                UNIT:'unit'",
            "                num = DEC:'3'",
            "                (i_common",
            "                  (i_family",
            "                    FAMILY:'family'",
            "                    (if_inet",
            "                      INET:'inet'",
            "                      (ifi_address",
            "                        ADDRESS:'address'",
            "                        IP_PREFIX:'3.3.3.3/31'))))))))))",
            "    NEWLINE:'\\n')",
            "  EOF:<EOF>)"
          ]
        },
        "configs/juniper_rib_groups" : {
          "sentences" : [
            "(flat_juniper_configuration",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_host_name",
            "              HOST_NAME:'host-name'",
            "              (variable",
            "                text = VARIABLE:'juniper_rib_groups'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_routing_options",
            "            ROUTING_OPTIONS:'routing-options'",
            "            (ro_interface_routes",
            "              INTERFACE_ROUTES:'interface-routes'",
            "              (roi_rib_group",
            "                RIB_GROUP:'rib-group'",
            "                INET:'inet'",
            "                name = (variable",
            "                  text = VARIABLE:'interface-routes-rib')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_routing_options",
            "            ROUTING_OPTIONS:'routing-options'",
            "            (ro_interface_routes",
            "              INTERFACE_ROUTES:'interface-routes'",
            "              (roi_rib_group",
            "                RIB_GROUP:'rib-group'",
            "                INET6:'inet6'",
            "                name = (variable",
            "                  text = VARIABLE:'interface-routes-rib')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_routing_options",
            "            ROUTING_OPTIONS:'routing-options'",
            "            (ro_rib_groups",
            "              RIB_GROUPS:'rib-groups'",
            "              name = (variable",
            "                text = VARIABLE:'interface-routes-rib')",
            "              (ror_import_rib",
            "                IMPORT_RIB:'import-rib'",
            "                rib = (variable",
            "                  text = VARIABLE:'inet.0')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_routing_options",
            "            ROUTING_OPTIONS:'routing-options'",
            "            (ro_rib_groups",
            "              RIB_GROUPS:'rib-groups'",
            "              name = (variable",
            "                text = VARIABLE:'interface-routes-rib')",
            "              (ror_import_rib",
            "                IMPORT_RIB:'import-rib'",
            "                rib = (variable",
            "                  text = VARIABLE:'VRF2.inet.0')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_routing_options",
            "            ROUTING_OPTIONS:'routing-options'",
            "            (ro_rib_groups",
            "              RIB_GROUPS:'rib-groups'",
            "              name = (variable",
            "                text = VARIABLE:'interface-routes-rib')",
            "              (ror_import_policy",
            "                IMPORT_POLICY:'import-policy'",
            "                name = (variable",
            "                  text = VARIABLE:'RIB_IN')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_routing_options",
            "            ROUTING_OPTIONS:'routing-options'",
            "            (ro_rib_groups",
            "              RIB_GROUPS:'rib-groups'",
            "              name = (variable",
            "                text = VARIABLE:'interface-routes-rib')",
            "              (ror_import_policy",
            "                IMPORT_POLICY:'import-policy'",
            "                name = (variable",
            "                  text = VARIABLE:'RIB_IN2')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_routing_options",
            "            ROUTING_OPTIONS:'routing-options'",
            "            (ro_rib_groups",
            "              RIB_GROUPS:'rib-groups'",
            "              name = (variable",
            "                text = VARIABLE:'interface-routes-rib')",
            "              (ror_export_rib",
            "                EXPORT_RIB:'export-rib'",
            "                rib = (variable",
            "                  text = VARIABLE:'RIB_OUT.inet.14')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_routing_options",
            "            ROUTING_OPTIONS:'routing-options'",
            "            (ro_rib_groups",
            "              RIB_GROUPS:'rib-groups'",
            "              name = (variable",
            "                text = VARIABLE:'bgp-rib-group')",
            "              (ror_import_rib",
            "                IMPORT_RIB:'import-rib'",
            "                rib = (variable",
            "                  text = VARIABLE:'inet.0')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_routing_options",
            "            ROUTING_OPTIONS:'routing-options'",
            "            (ro_rib_groups",
            "              RIB_GROUPS:'rib-groups'",
            "              name = (variable",
            "                text = VARIABLE:'bgp-rib-group')",
            "              (ror_import_rib",
            "                IMPORT_RIB:'import-rib'",
            "                rib = (variable",
            "                  text = VARIABLE:'VRF2.inet.0')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_common",
            "                (b_family",
            "                  FAMILY:'family'",
            "                  (bf_inet",
            "                    INET:'inet'",
            "                    (bfi_unicast",
            "                      UNICAST:'unicast'",
            "                      (bfiu_rib_group",
            "                        RIB_GROUP:'rib-group'",
            "                        name = (variable",
            "                          text = VARIABLE:'bgp-rib-group')))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_group",
            "                GROUP:'group'",
            "                name = (variable",
            "                  text = VARIABLE:'BGP_GROUP'  <== mode:M_VarOrWildcard)",
            "                (b_common",
            "                  (b_family",
            "                    FAMILY:'family'",
            "                    (bf_inet",
            "                      INET:'inet'",
            "                      (bfi_unicast",
            "                        UNICAST:'unicast'",
            "                        (bfiu_rib_group",
            "                          RIB_GROUP:'rib-group'",
            "                          name = (variable",
            "                            text = VARIABLE:'bgp-rib-group'))))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_protocols",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_group",
            "                GROUP:'group'",
            "                name = (variable",
            "                  text = VARIABLE:'BGP_GROUP'  <== mode:M_VarOrWildcard)",
            "                (b_neighbor",
            "                  NEIGHBOR:'neighbor'",
            "                  IP_ADDRESS:'1.1.1.1'",
            "                  (b_common",
            "                    (b_family",
            "                      FAMILY:'family'",
            "                      (bf_inet",
            "                        INET:'inet'",
            "                        (bfi_unicast",
            "                          UNICAST:'unicast'",
            "                          (bfiu_rib_group",
            "                            RIB_GROUP:'rib-group'",
            "                            name = (variable",
            "                              text = VARIABLE:'bgp-rib-group')))))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_logical_systems",
            "          LOGICAL_SYSTEMS:'logical-systems'",
            "          name = (variable",
            "            text = VARIABLE:'LOGICALSYSTEM')",
            "          (s_logical_systems_tail",
            "            (statement",
            "              (s_common",
            "                (s_protocols",
            "                  PROTOCOLS:'protocols'",
            "                  (p_bgp",
            "                    BGP:'bgp'",
            "                    (b_common",
            "                      (b_family",
            "                        FAMILY:'family'",
            "                        (bf_inet",
            "                          INET:'inet'",
            "                          (bfi_unicast",
            "                            UNICAST:'unicast'",
            "                            (bfiu_rib_group",
            "                              RIB_GROUP:'rib-group'",
            "                              name = (variable",
            "                                text = VARIABLE:'bgp-rib-group'))))))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_logical_systems",
            "          LOGICAL_SYSTEMS:'logical-systems'",
            "          name = (variable",
            "            text = VARIABLE:'LOGICALSYSTEM')",
            "          (s_logical_systems_tail",
            "            (statement",
            "              (s_common",
            "                (s_protocols",
            "                  PROTOCOLS:'protocols'",
            "                  (p_bgp",
            "                    BGP:'bgp'",
            "                    (b_group",
            "                      GROUP:'group'",
            "                      name = (variable",
            "                        text = VARIABLE:'BGP_GROUP'  <== mode:M_VarOrWildcard)",
            "                      (b_common",
            "                        (b_family",
            "                          FAMILY:'family'",
            "                          (bf_inet",
            "                            INET:'inet'",
            "                            (bfi_unicast",
            "                              UNICAST:'unicast'",
            "                              (bfiu_rib_group",
            "                                RIB_GROUP:'rib-group'",
            "                                name = (variable",
            "                                  text = VARIABLE:'bgp-rib-group')))))))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_logical_systems",
            "          LOGICAL_SYSTEMS:'logical-systems'",
            "          name = (variable",
            "            text = VARIABLE:'LOGICALSYSTEM')",
            "          (s_logical_systems_tail",
            "            (statement",
            "              (s_common",
            "                (s_protocols",
            "                  PROTOCOLS:'protocols'",
            "                  (p_bgp",
            "                    BGP:'bgp'",
            "                    (b_group",
            "                      GROUP:'group'",
            "                      name = (variable",
            "                        text = VARIABLE:'BGP_GROUP'  <== mode:M_VarOrWildcard)",
            "                      (b_neighbor",
            "                        NEIGHBOR:'neighbor'",
            "                        IP_ADDRESS:'1.1.1.1'",
            "                        (b_common",
            "                          (b_family",
            "                            FAMILY:'family'",
            "                            (bf_inet",
            "                              INET:'inet'",
            "                              (bfi_unicast",
            "                                UNICAST:'unicast'",
            "                                (bfiu_rib_group",
            "                                  RIB_GROUP:'rib-group'",
            "                                  name = (variable",
            "                                    text = VARIABLE:'bgp-rib-group'))))))))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_logical_systems",
            "          LOGICAL_SYSTEMS:'logical-systems'",
            "          name = (variable",
            "            text = VARIABLE:'LOGICALSYSTEM')",
            "          (s_logical_systems_tail",
            "            (statement",
            "              (s_common",
            "                (s_routing_instances",
            "                  ROUTING_INSTANCES:'routing-instances'",
            "                  (ri_named_routing_instance",
            "                    name = (variable",
            "                      text = VARIABLE:'ROUTING_INSTANCE_NAME')",
            "                    (ri_protocols",
            "                      (s_protocols",
            "                        PROTOCOLS:'protocols'",
            "                        (p_bgp",
            "                          BGP:'bgp'",
            "                          (b_common",
            "                            (b_family",
            "                              FAMILY:'family'",
            "                              (bf_inet",
            "                                INET:'inet'",
            "                                (bfi_unicast",
            "                                  UNICAST:'unicast'",
            "                                  (bfiu_rib_group",
            "                                    RIB_GROUP:'rib-group'",
            "                                    name = (variable",
            "                                      text = VARIABLE:'bgp-rib-group')))))))))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_logical_systems",
            "          LOGICAL_SYSTEMS:'logical-systems'",
            "          name = (variable",
            "            text = VARIABLE:'LOGICALSYSTEM')",
            "          (s_logical_systems_tail",
            "            (statement",
            "              (s_common",
            "                (s_routing_instances",
            "                  ROUTING_INSTANCES:'routing-instances'",
            "                  (ri_named_routing_instance",
            "                    name = (variable",
            "                      text = VARIABLE:'ROUTING_INSTANCE_NAME')",
            "                    (ri_protocols",
            "                      (s_protocols",
            "                        PROTOCOLS:'protocols'",
            "                        (p_bgp",
            "                          BGP:'bgp'",
            "                          (b_group",
            "                            GROUP:'group'",
            "                            name = (variable",
            "                              text = VARIABLE:'BGP_GROUP'  <== mode:M_VarOrWildcard)",
            "                            (b_common",
            "                              (b_family",
            "                                FAMILY:'family'",
            "                                (bf_inet",
            "                                  INET:'inet'",
            "                                  (bfi_unicast",
            "                                    UNICAST:'unicast'",
            "                                    (bfiu_rib_group",
            "                                      RIB_GROUP:'rib-group'",
            "                                      name = (variable",
            "                                        text = VARIABLE:'bgp-rib-group'))))))))))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_logical_systems",
            "          LOGICAL_SYSTEMS:'logical-systems'",
            "          name = (variable",
            "            text = VARIABLE:'LOGICALSYSTEM')",
            "          (s_logical_systems_tail",
            "            (statement",
            "              (s_common",
            "                (s_routing_instances",
            "                  ROUTING_INSTANCES:'routing-instances'",
            "                  (ri_named_routing_instance",
            "                    name = (variable",
            "                      text = VARIABLE:'ROUTING_INSTANCE_NAME')",
            "                    (ri_protocols",
            "                      (s_protocols",
            "                        PROTOCOLS:'protocols'",
            "                        (p_bgp",
            "                          BGP:'bgp'",
            "                          (b_group",
            "                            GROUP:'group'",
            "                            name = (variable",
            "                              text = VARIABLE:'BGP_GROUP'  <== mode:M_VarOrWildcard)",
            "                            (b_neighbor",
            "                              NEIGHBOR:'neighbor'",
            "                              IP_ADDRESS:'1.1.1.1'",
            "                              (b_common",
            "                                (b_family",
            "                                  FAMILY:'family'",
            "                                  (bf_inet",
            "                                    INET:'inet'",
            "                                    (bfi_unicast",
            "                                      UNICAST:'unicast'",
            "                                      (bfiu_rib_group",
            "                                        RIB_GROUP:'rib-group'",
            "                                        name = (variable",
            "                                          text = VARIABLE:'bgp-rib-group')))))))))))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_routing_instances",
            "            ROUTING_INSTANCES:'routing-instances'",
            "            (ri_named_routing_instance",
            "              name = (variable",
            "                text = VARIABLE:'ROUTING_INSTANCE_NAME')",
            "              (ri_protocols",
            "                (s_protocols",
            "                  PROTOCOLS:'protocols'",
            "                  (p_bgp",
            "                    BGP:'bgp'",
            "                    (b_common",
            "                      (b_family",
            "                        FAMILY:'family'",
            "                        (bf_inet",
            "                          INET:'inet'",
            "                          (bfi_unicast",
            "                            UNICAST:'unicast'",
            "                            (bfiu_rib_group",
            "                              RIB_GROUP:'rib-group'",
            "                              name = (variable",
            "                                text = VARIABLE:'bgp-rib-group'))))))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_routing_instances",
            "            ROUTING_INSTANCES:'routing-instances'",
            "            (ri_named_routing_instance",
            "              name = (variable",
            "                text = VARIABLE:'ROUTING_INSTANCE_NAME')",
            "              (ri_protocols",
            "                (s_protocols",
            "                  PROTOCOLS:'protocols'",
            "                  (p_bgp",
            "                    BGP:'bgp'",
            "                    (b_group",
            "                      GROUP:'group'",
            "                      name = (variable",
            "                        text = VARIABLE:'BGP_GROUP'  <== mode:M_VarOrWildcard)",
            "                      (b_common",
            "                        (b_family",
            "                          FAMILY:'family'",
            "                          (bf_inet",
            "                            INET:'inet'",
            "                            (bfi_unicast",
            "                              UNICAST:'unicast'",
            "                              (bfiu_rib_group",
            "                                RIB_GROUP:'rib-group'",
            "                                name = (variable",
            "                                  text = VARIABLE:'bgp-rib-group')))))))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_routing_instances",
            "            ROUTING_INSTANCES:'routing-instances'",
            "            (ri_named_routing_instance",
            "              name = (variable",
            "                text = VARIABLE:'ROUTING_INSTANCE_NAME')",
            "              (ri_protocols",
            "                (s_protocols",
            "                  PROTOCOLS:'protocols'",
            "                  (p_bgp",
            "                    BGP:'bgp'",
            "                    (b_group",
            "                      GROUP:'group'",
            "                      name = (variable",
            "                        text = VARIABLE:'BGP_GROUP'  <== mode:M_VarOrWildcard)",
            "                      (b_neighbor",
            "                        NEIGHBOR:'neighbor'",
            "                        IP_ADDRESS:'1.1.1.1'",
            "                        (b_common",
            "                          (b_family",
            "                            FAMILY:'family'",
            "                            (bf_inet",
            "                              INET:'inet'",
            "                              (bfi_unicast",
            "                                UNICAST:'unicast'",
            "                                (bfiu_rib_group",
            "                                  RIB_GROUP:'rib-group'",
            "                                  name = (variable",
            "                                    text = VARIABLE:'bgp-rib-group'))))))))))))))))",
            "    NEWLINE:'\\n\\n')",
            "  EOF:<EOF>)"
          ]
        },
        "configs/juniper_route_filter" : {
          "sentences" : [
            "(flat_juniper_configuration",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_host_name",
            "              HOST_NAME:'host-name'",
            "              (variable",
            "                text = VARIABLE:'juniper_route_filter'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_policy_options",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_policy_statement",
            "              POLICY_STATEMENT:'policy-statement'",
            "              name = (variable",
            "                text = VARIABLE:'route-filter-test-v4')",
            "              (pops_term",
            "                TERM:'term'",
            "                name = (variable",
            "                  text = VARIABLE:'t1')",
            "                (pops_common",
            "                  (pops_from",
            "                    FROM:'from'",
            "                    (popsf_route_filter",
            "                      ROUTE_FILTER:'route-filter'",
            "                      IP_PREFIX:'1.2.0.0/16'",
            "                      (popsfrf_common",
            "                        (popsfrf_exact",
            "                          EXACT:'exact')))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_policy_options",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_policy_statement",
            "              POLICY_STATEMENT:'policy-statement'",
            "              name = (variable",
            "                text = VARIABLE:'route-filter-test-v4')",
            "              (pops_term",
            "                TERM:'term'",
            "                name = (variable",
            "                  text = VARIABLE:'t1')",
            "                (pops_common",
            "                  (pops_from",
            "                    FROM:'from'",
            "                    (popsf_route_filter",
            "                      ROUTE_FILTER:'route-filter'",
            "                      IP_PREFIX:'1.3.0.0/17'",
            "                      (popsfrf_common",
            "                        (popsfrf_longer",
            "                          LONGER:'longer')))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_policy_options",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_policy_statement",
            "              POLICY_STATEMENT:'policy-statement'",
            "              name = (variable",
            "                text = VARIABLE:'route-filter-test-v4')",
            "              (pops_term",
            "                TERM:'term'",
            "                name = (variable",
            "                  text = VARIABLE:'t1')",
            "                (pops_common",
            "                  (pops_from",
            "                    FROM:'from'",
            "                    (popsf_route_filter",
            "                      ROUTE_FILTER:'route-filter'",
            "                      IP_PREFIX:'1.4.0.0/18'",
            "                      (popsfrf_common",
            "                        (popsfrf_orlonger",
            "                          ORLONGER:'orlonger')))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_policy_options",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_policy_statement",
            "              POLICY_STATEMENT:'policy-statement'",
            "              name = (variable",
            "                text = VARIABLE:'route-filter-test-v4')",
            "              (pops_term",
            "                TERM:'term'",
            "                name = (variable",
            "                  text = VARIABLE:'t1')",
            "                (pops_common",
            "                  (pops_from",
            "                    FROM:'from'",
            "                    (popsf_route_filter",
            "                      ROUTE_FILTER:'route-filter'",
            "                      IP_PREFIX:'1.5.0.0/19'",
            "                      (popsfrf_common",
            "                        (popsfrf_upto",
            "                          UPTO:'upto'",
            "                          FORWARD_SLASH:'/'",
            "                          high = DEC:'24')))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_policy_options",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_policy_statement",
            "              POLICY_STATEMENT:'policy-statement'",
            "              name = (variable",
            "                text = VARIABLE:'route-filter-test-v4')",
            "              (pops_term",
            "                TERM:'term'",
            "                name = (variable",
            "                  text = VARIABLE:'t1')",
            "                (pops_common",
            "                  (pops_from",
            "                    FROM:'from'",
            "                    (popsf_route_filter",
            "                      ROUTE_FILTER:'route-filter'",
            "                      IP_PREFIX:'1.6.0.0/20'",
            "                      (popsfrf_common",
            "                        (popsfrf_prefix_length_range",
            "                          PREFIX_LENGTH_RANGE:'prefix-length-range'",
            "                          FORWARD_SLASH:'/'",
            "                          low = DEC:'26'",
            "                          DASH:'-'",
            "                          FORWARD_SLASH:'/'",
            "                          high = DEC:'29')))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_policy_options",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_policy_statement",
            "              POLICY_STATEMENT:'policy-statement'",
            "              name = (variable",
            "                text = VARIABLE:'route-filter-test-v4')",
            "              (pops_term",
            "                TERM:'term'",
            "                name = (variable",
            "                  text = VARIABLE:'t1')",
            "                (pops_common",
            "                  (pops_from",
            "                    FROM:'from'",
            "                    (popsf_route_filter",
            "                      ROUTE_FILTER:'route-filter'",
            "                      IP_PREFIX:'1.7.0.0/21'",
            "                      (popsfrf_common",
            "                        (popsfrf_through",
            "                          THROUGH:'through'",
            "                          IP_PREFIX:'1.7.0.0/24')))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_policy_options",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_policy_statement",
            "              POLICY_STATEMENT:'policy-statement'",
            "              name = (variable",
            "                text = VARIABLE:'route-filter-test-v6')",
            "              (pops_term",
            "                TERM:'term'",
            "                name = (variable",
            "                  text = VARIABLE:'t1')",
            "                (pops_common",
            "                  (pops_from",
            "                    FROM:'from'",
            "                    (popsf_route_filter",
            "                      ROUTE_FILTER:'route-filter'",
            "                      IPV6_PREFIX:'2001:db8:1234::/48'",
            "                      (popsfrf_common",
            "                        (popsfrf_exact",
            "                          EXACT:'exact')))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_policy_options",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_policy_statement",
            "              POLICY_STATEMENT:'policy-statement'",
            "              name = (variable",
            "                text = VARIABLE:'route-filter-test-v6')",
            "              (pops_term",
            "                TERM:'term'",
            "                name = (variable",
            "                  text = VARIABLE:'t1')",
            "                (pops_common",
            "                  (pops_from",
            "                    FROM:'from'",
            "                    (popsf_route_filter",
            "                      ROUTE_FILTER:'route-filter'",
            "                      IPV6_PREFIX:'2001:db8:1235::/58'",
            "                      (popsfrf_common",
            "                        (popsfrf_longer",
            "                          LONGER:'longer')))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_policy_options",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_policy_statement",
            "              POLICY_STATEMENT:'policy-statement'",
            "              name = (variable",
            "                text = VARIABLE:'route-filter-test-v6')",
            "              (pops_term",
            "                TERM:'term'",
            "                name = (variable",
            "                  text = VARIABLE:'t1')",
            "                (pops_common",
            "                  (pops_from",
            "                    FROM:'from'",
            "                    (popsf_route_filter",
            "                      ROUTE_FILTER:'route-filter'",
            "                      IPV6_PREFIX:'2001:db8:1236::/68'",
            "                      (popsfrf_common",
            "                        (popsfrf_orlonger",
            "                          ORLONGER:'orlonger')))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_policy_options",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_policy_statement",
            "              POLICY_STATEMENT:'policy-statement'",
            "              name = (variable",
            "                text = VARIABLE:'route-filter-test-v6')",
            "              (pops_term",
            "                TERM:'term'",
            "                name = (variable",
            "                  text = VARIABLE:'t1')",
            "                (pops_common",
            "                  (pops_from",
            "                    FROM:'from'",
            "                    (popsf_route_filter",
            "                      ROUTE_FILTER:'route-filter'",
            "                      IPV6_PREFIX:'2001:db8:1237::/78'",
            "                      (popsfrf_common",
            "                        (popsfrf_upto",
            "                          UPTO:'upto'",
            "                          FORWARD_SLASH:'/'",
            "                          high = DEC:'88')))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_policy_options",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_policy_statement",
            "              POLICY_STATEMENT:'policy-statement'",
            "              name = (variable",
            "                text = VARIABLE:'route-filter-test-v6')",
            "              (pops_term",
            "                TERM:'term'",
            "                name = (variable",
            "                  text = VARIABLE:'t1')",
            "                (pops_common",
            "                  (pops_from",
            "                    FROM:'from'",
            "                    (popsf_route_filter",
            "                      ROUTE_FILTER:'route-filter'",
            "                      IPV6_PREFIX:'2001:db8:1238::/88'",
            "                      (popsfrf_common",
            "                        (popsfrf_prefix_length_range",
            "                          PREFIX_LENGTH_RANGE:'prefix-length-range'",
            "                          FORWARD_SLASH:'/'",
            "                          low = DEC:'100'",
            "                          DASH:'-'",
            "                          FORWARD_SLASH:'/'",
            "                          high = DEC:'110')))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_policy_options",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_policy_statement",
            "              POLICY_STATEMENT:'policy-statement'",
            "              name = (variable",
            "                text = VARIABLE:'route-filter-test-v6')",
            "              (pops_term",
            "                TERM:'term'",
            "                name = (variable",
            "                  text = VARIABLE:'t1')",
            "                (pops_common",
            "                  (pops_from",
            "                    FROM:'from'",
            "                    (popsf_route_filter",
            "                      ROUTE_FILTER:'route-filter'",
            "                      IPV6_PREFIX:'2001:db8:1239::/98'",
            "                      (popsfrf_common",
            "                        (popsfrf_through",
            "                          THROUGH:'through'",
            "                          IPV6_PREFIX:'2001:db8:1239::/109')))))))))))",
            "    NEWLINE:'\\n')",
            "  EOF:<EOF>)"
          ]
        },
        "configs/juniper_routing_options" : {
          "sentences" : [
            "(flat_juniper_configuration",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_host_name",
            "              HOST_NAME:'host-name'",
            "              (variable",
            "                text = VARIABLE:'juniper_routing_options'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_routing_options",
            "            ROUTING_OPTIONS:'routing-options'",
            "            (ro_aggregate",
            "              AGGREGATE:'aggregate'",
            "              (roa_route",
            "                ROUTE:'route'",
            "                prefix = IP_PREFIX:'10.0.0.0/8'",
            "                (roa_common",
            "                  (roa_as_path",
            "                    AS_PATH:'as-path'",
            "                    (roaa_aggregator",
            "                      AGGREGATOR:'aggregator'  <== mode:M_AsPath",
            "                      as = DEC:'65500'",
            "                      ip = IP_ADDRESS:'10.0.0.1')))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_routing_options",
            "            ROUTING_OPTIONS:'routing-options'",
            "            (ro_aggregate",
            "              AGGREGATE:'aggregate'",
            "              (roa_route",
            "                ROUTE:'route'",
            "                prefix = IP_PREFIX:'20.0.0.0/8'",
            "                (roa_common",
            "                  (roa_as_path",
            "                    AS_PATH:'as-path'",
            "                    (roaa_path",
            "                      PATH:'path'  <== mode:M_AsPath",
            "                      path = (as_path_expr",
            "                        (as_unit",
            "                          (bgp_asn",
            "                            asn4hi = DEC:'123'  <== mode:M_AsPathPath",
            "                            PERIOD:'.'",
            "                            asn4lo = DEC:'4'))))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_routing_options",
            "            ROUTING_OPTIONS:'routing-options'",
            "            (ro_aggregate",
            "              AGGREGATE:'aggregate'",
            "              (roa_route",
            "                ROUTE:'route'",
            "                prefix = IP_PREFIX:'30.0.0.0/8'",
            "                (roa_common",
            "                  (roa_as_path",
            "                    AS_PATH:'as-path'",
            "                    (roaa_path",
            "                      PATH:'path'  <== mode:M_AsPath",
            "                      path = (as_path_expr",
            "                        (as_unit",
            "                          (as_set",
            "                            OPEN_BRACKET:'['  <== mode:M_AsPathExpr",
            "                            (bgp_asn",
            "                              asn4hi = DEC:'123'  <== mode:M_AsPathExpr",
            "                              PERIOD:'.'  <== mode:M_AsPathExpr",
            "                              asn4lo = DEC:'4'  <== mode:M_AsPathExpr)",
            "                            (bgp_asn",
            "                              asn4hi = DEC:'456'  <== mode:M_AsPathExpr",
            "                              PERIOD:'.'  <== mode:M_AsPathExpr",
            "                              asn4lo = DEC:'7'  <== mode:M_AsPathExpr)",
            "                            CLOSE_BRACKET:']'  <== mode:M_AsPathExpr))))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_routing_options",
            "            ROUTING_OPTIONS:'routing-options'",
            "            (ro_aggregate",
            "              AGGREGATE:'aggregate'",
            "              (roa_route",
            "                ROUTE:'route'",
            "                prefix = IP_PREFIX:'35.0.0.0/8'",
            "                (roa_common",
            "                  (roa_discard",
            "                    DISCARD:'discard'))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_routing_options",
            "            ROUTING_OPTIONS:'routing-options'",
            "            (ro_aggregate",
            "              AGGREGATE:'aggregate'",
            "              (roa_route",
            "                ROUTE:'route'",
            "                prefix = IP_PREFIX:'40.0.0.0/8'",
            "                (roa_common",
            "                  (roa_policy",
            "                    POLICY:'policy'",
            "                    name = (variable",
            "                      text = VARIABLE:'AGGREGATE_ROUTE_POLICY')))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_routing_options",
            "            ROUTING_OPTIONS:'routing-options'",
            "            (ro_confederation",
            "              CONFEDERATION:'confederation'",
            "              num = DEC:'11111'",
            "              MEMBERS:'members'",
            "              DEC:'22222'  <== mode:M_Members)))))",
            "    NEWLINE:'\\n'  <== mode:M_Members)",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_routing_options",
            "            ROUTING_OPTIONS:'routing-options'",
            "            (ro_forwarding_table",
            "              FORWARDING_TABLE:'forwarding-table'",
            "              (rof_no_ecmp_fast_reroute",
            "                NO_ECMP_FAST_REROUTE:'no-ecmp-fast-reroute'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_routing_options",
            "            ROUTING_OPTIONS:'routing-options'",
            "            (ro_generate",
            "              GENERATE:'generate'",
            "              (rog_route",
            "                ROUTE:'route'",
            "                IP_PREFIX:'10.0.1.0/24'",
            "                (rog_common",
            "                  (rog_active",
            "                    ACTIVE:'active'))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_routing_options",
            "            ROUTING_OPTIONS:'routing-options'",
            "            (ro_generate",
            "              GENERATE:'generate'",
            "              (rog_route",
            "                ROUTE:'route'",
            "                IP_PREFIX:'10.0.1.0/24'",
            "                (rog_common",
            "                  (rog_community",
            "                    COMMUNITY:'community'",
            "                    (standard_community",
            "                      (sc_literal",
            "                        STANDARD_COMMUNITY:'2:6'))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_routing_options",
            "            ROUTING_OPTIONS:'routing-options'",
            "            (ro_generate",
            "              GENERATE:'generate'",
            "              (rog_route",
            "                ROUTE:'route'",
            "                IP_PREFIX:'10.0.1.0/24'",
            "                (rog_common",
            "                  (rog_discard",
            "                    DISCARD:'discard'))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_routing_options",
            "            ROUTING_OPTIONS:'routing-options'",
            "            (ro_instance_import",
            "              INSTANCE_IMPORT:'instance-import'",
            "              name = (variable",
            "                text = VARIABLE:'POLICY'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_policy_options",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_policy_statement",
            "              POLICY_STATEMENT:'policy-statement'",
            "              name = (variable",
            "                text = VARIABLE:'POLICY')",
            "              (pops_common",
            "                (pops_then",
            "                  THEN:'then'",
            "                  (popst_common",
            "                    (popst_accept",
            "                      ACCEPT:'accept')))))))))",
            "    NEWLINE:'\\n')",
            "  EOF:<EOF>)"
          ]
        },
        "configs/juniper_routing_policy" : {
          "sentences" : [
            "(flat_juniper_configuration",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_host_name",
            "              HOST_NAME:'host-name'",
            "              (variable",
            "                text = VARIABLE:'juniper_routing_policy'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_interfaces",
            "            INTERFACES:'interfaces'",
            "            (int_named",
            "              (interface_id",
            "                name = INTERFACE_NAME:'ge-0/0/0'  <== mode:M_Interface)",
            "              (i_unit",
            "                UNIT:'unit'",
            "                num = DEC:'0'",
            "                (i_common",
            "                  (i_family",
            "                    FAMILY:'family'",
            "                    (if_inet",
            "                      INET:'inet'",
            "                      (ifi_address",
            "                        ADDRESS:'address'",
            "                        IP_PREFIX:'1.1.1.1/24'",
            "                        (ifia_primary",
            "                          PRIMARY:'primary')))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_interfaces",
            "            INTERFACES:'interfaces'",
            "            (int_named",
            "              (interface_id",
            "                name = INTERFACE_NAME:'ge-0/0/0'  <== mode:M_Interface)",
            "              (i_unit",
            "                UNIT:'unit'",
            "                num = DEC:'0'",
            "                (i_common",
            "                  (i_family",
            "                    FAMILY:'family'",
            "                    (if_inet",
            "                      INET:'inet'",
            "                      (ifi_address",
            "                        ADDRESS:'address'",
            "                        IP_PREFIX:'2.2.2.2/24'))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_policy_options",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_policy_statement",
            "              POLICY_STATEMENT:'policy-statement'",
            "              name = (variable",
            "                text = VARIABLE:'POLICY-NAME')",
            "              (pops_term",
            "                TERM:'term'",
            "                name = (variable",
            "                  text = VARIABLE:'TERM1')",
            "                (pops_common",
            "                  (pops_from",
            "                    FROM:'from'",
            "                    (popsf_interface",
            "                      INTERFACE:'interface'",
            "                      id = (interface_id",
            "                        name = INTERFACE_NAME:'ge-0/0/0'  <== mode:M_Interface",
            "                        PERIOD:'.'",
            "                        unit = DEC:'0'))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_policy_options",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_policy_statement",
            "              POLICY_STATEMENT:'policy-statement'",
            "              name = (variable",
            "                text = VARIABLE:'POLICY-NAME')",
            "              (pops_term",
            "                TERM:'term'",
            "                name = (variable",
            "                  text = VARIABLE:'TERM1')",
            "                (pops_common",
            "                  (pops_then",
            "                    THEN:'then'",
            "                    (popst_common",
            "                      (popst_accept",
            "                        ACCEPT:'accept'))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_policy_options",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_policy_statement",
            "              POLICY_STATEMENT:'policy-statement'",
            "              name = (variable",
            "                text = VARIABLE:'POLICY-NAME')",
            "              (pops_term",
            "                TERM:'term'",
            "                name = (variable",
            "                  text = VARIABLE:'TERM2')",
            "                (pops_common",
            "                  (pops_from",
            "                    FROM:'from'",
            "                    (popsf_interface",
            "                      INTERFACE:'interface'",
            "                      id = (interface_id",
            "                        name = INTERFACE_NAME:'ge-0/0/0'  <== mode:M_Interface",
            "                        PERIOD:'.'",
            "                        unit = DEC:'99'))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_policy_options",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_policy_statement",
            "              POLICY_STATEMENT:'policy-statement'",
            "              name = (variable",
            "                text = VARIABLE:'POLICY-NAME')",
            "              (pops_term",
            "                TERM:'term'",
            "                name = (variable",
            "                  text = VARIABLE:'TERM2')",
            "                (pops_common",
            "                  (pops_then",
            "                    THEN:'then'",
            "                    (popst_common",
            "                      (popst_accept",
            "                        ACCEPT:'accept'))))))))))",
            "    NEWLINE:'\\n\\n')",
            "  EOF:<EOF>)"
          ]
        },
        "configs/juniper_security" : {
          "sentences" : [
            "(flat_juniper_configuration",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_host_name",
            "              HOST_NAME:'host-name'",
            "              (variable",
            "                text = VARIABLE:'juniper_security'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_security",
            "            SECURITY:'security'",
            "            (se_address_book",
            "              ADDRESS_BOOK:'address-book'",
            "              name = (variable",
            "                text = GLOBAL:'global')",
            "              (sead_address",
            "                ADDRESS:'address'",
            "                name = (variable",
            "                  text = VARIABLE:'ADDRESS')",
            "                DESCRIPTION:'description'",
            "                (null_filler",
            "                  M_Description_DESCRIPTION:'\"ADDRESS description\"'  <== mode:M_Description)))))))",
            "    NEWLINE:'\\n'  <== mode:M_Description)",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_security",
            "            SECURITY:'security'",
            "            (se_address_book",
            "              ADDRESS_BOOK:'address-book'",
            "              name = (variable",
            "                text = GLOBAL:'global')",
            "              (sead_address_set",
            "                ADDRESS_SET:'address-set'",
            "                name = (variable",
            "                  text = VARIABLE:'ASET')",
            "                (seada_description",
            "                  DESCRIPTION:'description'",
            "                  (null_filler",
            "                    M_Description_DESCRIPTION:'\"ASET description\"'  <== mode:M_Description))))))))",
            "    NEWLINE:'\\n'  <== mode:M_Description)",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_security",
            "            SECURITY:'security'",
            "            (se_address_book",
            "              ADDRESS_BOOK:'address-book'",
            "              name = (variable",
            "                text = VARIABLE:'notglobalAttached')",
            "              (sead_address_set",
            "                ADDRESS_SET:'address-set'",
            "                name = (variable",
            "                  text = VARIABLE:'ASET')",
            "                (seada_description",
            "                  DESCRIPTION:'description'",
            "                  (null_filler",
            "                    M_Description_DESCRIPTION:'\"ASET description\"'  <== mode:M_Description))))))))",
            "    NEWLINE:'\\n'  <== mode:M_Description)",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_security",
            "            SECURITY:'security'",
            "            (se_address_book",
            "              ADDRESS_BOOK:'address-book'",
            "              name = (variable",
            "                text = VARIABLE:'notglobalAttached')",
            "              (sead_attach",
            "                ATTACH:'attach'",
            "                ZONE:'zone'",
            "                name = (variable",
            "                  text = VARIABLE:'A')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_security",
            "            SECURITY:'security'",
            "            (se_address_book",
            "              ADDRESS_BOOK:'address-book'",
            "              name = (variable",
            "                text = VARIABLE:'notglobalUnattached')",
            "              (sead_address_set",
            "                ADDRESS_SET:'address-set'",
            "                name = (variable",
            "                  text = VARIABLE:'ASET')",
            "                (seada_description",
            "                  DESCRIPTION:'description'",
            "                  (null_filler",
            "                    M_Description_DESCRIPTION:'\"ASET description\"'  <== mode:M_Description))))))))",
            "    NEWLINE:'\\n'  <== mode:M_Description)",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_security",
            "            SECURITY:'security'",
            "            (se_ike",
            "              IKE:'ike'",
            "              (seik_proposal",
            "                PROPOSAL:'proposal'",
            "                name = (variable",
            "                  text = VARIABLE:'PROPOSAL')",
            "                (seikpr_description",
            "                  DESCRIPTION:'description'",
            "                  (null_filler",
            "                    M_Description_DESCRIPTION:'\"IKE proposal\"'  <== mode:M_Description))))))))",
            "    NEWLINE:'\\n'  <== mode:M_Description)",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_security",
            "            SECURITY:'security'",
            "            (se_ike",
            "              IKE:'ike'",
            "              (seik_policy",
            "                POLICY:'policy'",
            "                name = (variable",
            "                  text = IP_ADDRESS:'1.2.3.4')",
            "                (seikp_proposals",
            "                  PROPOSALS:'proposals'",
            "                  OPEN_BRACKET:'['",
            "                  (variable",
            "                    text = VARIABLE:'PROPOSAL')",
            "                  CLOSE_BRACKET:']')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_security",
            "            SECURITY:'security'",
            "            (se_policies",
            "              POLICIES:'policies'",
            "              (sep_global",
            "                GLOBAL:'global'",
            "                (sepctx_policy",
            "                  POLICY:'policy'",
            "                  name = (variable_policy",
            "                    text = VARIABLE:'p1')",
            "                  (sepctxp_match",
            "                    MATCH:'match'",
            "                    (sepctxpm_destination_address_excluded",
            "                      DESTINATION_ADDRESS_EXCLUDED:'destination-address-excluded')))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_security",
            "            SECURITY:'security'",
            "            (se_policies",
            "              POLICIES:'policies'",
            "              (sep_from_zone",
            "                FROM_ZONE:'from-zone'",
            "                from = (zone",
            "                  name = (variable",
            "                    text = VARIABLE:'A'))",
            "                TO_ZONE:'to-zone'",
            "                to = (zone",
            "                  name = (variable",
            "                    text = VARIABLE:'B'))",
            "                (sepctx_policy",
            "                  POLICY:'policy'",
            "                  name = (variable_policy",
            "                    DEC:'123'",
            "                    DASH:'-'",
            "                    text = DEC:'4')",
            "                  (sepctxp_description",
            "                    DESCRIPTION:'description'",
            "                    (null_filler",
            "                      M_Description_DESCRIPTION:'\"123-4 description\"'  <== mode:M_Description)))))))))",
            "    NEWLINE:'\\n'  <== mode:M_Description)",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_security",
            "            SECURITY:'security'",
            "            (se_policies",
            "              POLICIES:'policies'",
            "              (sep_from_zone",
            "                FROM_ZONE:'from-zone'",
            "                from = (zone",
            "                  name = (variable",
            "                    text = VARIABLE:'A'))",
            "                TO_ZONE:'to-zone'",
            "                to = (zone",
            "                  name = (variable",
            "                    text = VARIABLE:'B'))",
            "                (sepctx_policy",
            "                  POLICY:'policy'",
            "                  name = (variable_policy",
            "                    DEC:'123'",
            "                    DASH:'-'",
            "                    text = DEC:'4')",
            "                  (sepctxp_then",
            "                    THEN:'then'",
            "                    (sepctxpt_count",
            "                      COUNT:'count')))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_security",
            "            SECURITY:'security'",
            "            (se_policies",
            "              POLICIES:'policies'",
            "              (sep_from_zone",
            "                FROM_ZONE:'from-zone'",
            "                from = (zone",
            "                  name = (variable",
            "                    text = VARIABLE:'A'))",
            "                TO_ZONE:'to-zone'",
            "                to = (zone",
            "                  name = (variable",
            "                    text = VARIABLE:'B'))",
            "                (sepctx_policy",
            "                  POLICY:'policy'",
            "                  name = (variable_policy",
            "                    DEC:'123'",
            "                    DASH:'-'",
            "                    text = DEC:'4')",
            "                  (sepctxp_then",
            "                    THEN:'then'",
            "                    (sepctxpt_trace",
            "                      TRACE:'trace')))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_security",
            "            SECURITY:'security'",
            "            (se_zones",
            "              ZONES:'zones'",
            "              (sez_security_zone",
            "                SECURITY_ZONE:'security-zone'",
            "                (zone",
            "                  name = (variable",
            "                    text = VARIABLE:'ZONE-protocols'))",
            "                (sezs_host_inbound_traffic",
            "                  HOST_INBOUND_TRAFFIC:'host-inbound-traffic'",
            "                  (sezsh_protocols",
            "                    PROTOCOLS:'protocols'",
            "                    (hib_protocol",
            "                      ALL:'all')))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_security",
            "            SECURITY:'security'",
            "            (se_zones",
            "              ZONES:'zones'",
            "              (sez_security_zone",
            "                SECURITY_ZONE:'security-zone'",
            "                (zone",
            "                  name = (variable",
            "                    text = VARIABLE:'ZONE-system-services'))",
            "                (sezs_host_inbound_traffic",
            "                  HOST_INBOUND_TRAFFIC:'host-inbound-traffic'",
            "                  (sezsh_system_services",
            "                    SYSTEM_SERVICES:'system-services'",
            "                    (hib_system_service",
            "                      ALL:'all')))))))))",
            "    NEWLINE:'\\n')",
            "  EOF:<EOF>)"
          ]
        },
        "configs/juniper_snmp" : {
          "sentences" : [
            "(flat_juniper_configuration",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_host_name",
            "              HOST_NAME:'host-name'",
            "              (variable",
            "                text = VARIABLE:'juniper_snmp'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_snmp",
            "            SNMP:'snmp'",
            "            (snmp_community",
            "              COMMUNITY:'community'",
            "              comm = (variable",
            "                text = DOUBLE_QUOTED_STRING:'\"dummycommunity\"')",
            "              (apply))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_snmp",
            "            SNMP:'snmp'",
            "            (snmp_community",
            "              COMMUNITY:'community'",
            "              comm = (variable",
            "                text = DOUBLE_QUOTED_STRING:'\"dummycommunity\"')",
            "              (snmpc_authorization",
            "                AUTHORIZATION:'authorization'",
            "                READ_ONLY:'read-only'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_snmp",
            "            SNMP:'snmp'",
            "            (snmp_community",
            "              COMMUNITY:'community'",
            "              comm = (variable",
            "                text = DOUBLE_QUOTED_STRING:'\"dummycommunity\"')",
            "              (snmpc_client_list_name",
            "                CLIENT_LIST_NAME:'client-list-name'",
            "                name = (variable",
            "                  text = VARIABLE:'bippetyboo')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_snmp",
            "            SNMP:'snmp'",
            "            (snmp_community",
            "              COMMUNITY:'community'",
            "              comm = (variable",
            "                text = DOUBLE_QUOTED_STRING:'\"dummycommunity\"')",
            "              (snmpc_null",
            "                CLIENTS:'clients'",
            "                (null_filler",
            "                  IP_PREFIX:'1.2.3.0/24')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_snmp",
            "            SNMP:'snmp'",
            "            (snmp_community",
            "              COMMUNITY:'community'",
            "              comm = (variable",
            "                text = DOUBLE_QUOTED_STRING:'\"dummycommunity\"')",
            "              (snmpc_null",
            "                VIEW:'view'",
            "                (null_filler",
            "                  VARIABLE:'myviewname1')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_snmp",
            "            SNMP:'snmp'",
            "            (snmp_null",
            "              CONTACT:'contact'",
            "              (null_filler",
            "                DOUBLE_QUOTED_STRING:'\"some contact\"'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_snmp",
            "            SNMP:'snmp'",
            "            (snmp_null",
            "              DESCRIPTION:'description'",
            "              (null_filler",
            "                M_Description_DESCRIPTION:'abcdefg'  <== mode:M_Description))))))",
            "    NEWLINE:'\\n'  <== mode:M_Description)",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_snmp",
            "            SNMP:'snmp'",
            "            (snmp_null",
            "              FILTER_DUPLICATES:'filter-duplicates'",
            "              (null_filler))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_snmp",
            "            SNMP:'snmp'",
            "            (snmp_filter_interfaces",
            "              FILTER_INTERFACES:'filter-interfaces'",
            "              INTERFACES:'interfaces'",
            "              DOUBLE_QUOTED_STRING:'^lc|^pf|^lo0\\.1638'  <== mode:M_InterfaceQuote)))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_snmp",
            "            SNMP:'snmp'",
            "            (snmp_null",
            "              LOCATION:'location'",
            "              (null_filler",
            "                DOUBLE_QUOTED_STRING:'\"some location\"'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_snmp",
            "            SNMP:'snmp'",
            "            (snmp_null",
            "              INTERFACE:'interface'",
            "              (null_filler",
            "                INTERFACE_NAME:'ge-0/0/0'  <== mode:M_Interface",
            "                PERIOD:'.'",
            "                DEC:'0'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_snmp",
            "            SNMP:'snmp'",
            "            (snmp_name",
            "              NAME:'name'",
            "              name = (variable",
            "                text = VARIABLE:'my-snmp-name'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_snmp",
            "            SNMP:'snmp'",
            "            (snmp_null",
            "              STATS_CACHE_LIFETIME:'stats-cache-lifetime'",
            "              (null_filler",
            "                DEC:'30'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_snmp",
            "            SNMP:'snmp'",
            "            (snmp_null",
            "              TRACEOPTIONS:'traceoptions'",
            "              (null_filler",
            "                VARIABLE:'flag'",
            "                VARIABLE:'pdu'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_snmp",
            "            SNMP:'snmp'",
            "            (snmp_trap_group",
            "              TRAP_GROUP:'trap-group'",
            "              name = (variable",
            "                text = VARIABLE:'mytrapgroup')",
            "              (snmptg_null",
            "                CATEGORIES:'categories'",
            "                (null_filler",
            "                  AUTHENTICATION:'authentication')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_snmp",
            "            SNMP:'snmp'",
            "            (snmp_trap_group",
            "              TRAP_GROUP:'trap-group'",
            "              name = (variable",
            "                text = VARIABLE:'mytrapgroup')",
            "              (snmptg_null",
            "                CATEGORIES:'categories'",
            "                (null_filler",
            "                  CHASSIS:'chassis')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_snmp",
            "            SNMP:'snmp'",
            "            (snmp_trap_group",
            "              TRAP_GROUP:'trap-group'",
            "              name = (variable",
            "                text = VARIABLE:'mytrapgroup')",
            "              (snmptg_null",
            "                CATEGORIES:'categories'",
            "                (null_filler",
            "                  VARIABLE:'link')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_snmp",
            "            SNMP:'snmp'",
            "            (snmp_trap_group",
            "              TRAP_GROUP:'trap-group'",
            "              name = (variable",
            "                text = VARIABLE:'mytrapgroup')",
            "              (snmptg_null",
            "                CATEGORIES:'categories'",
            "                (null_filler",
            "                  VARIABLE:'routing')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_snmp",
            "            SNMP:'snmp'",
            "            (snmp_trap_group",
            "              TRAP_GROUP:'trap-group'",
            "              name = (variable",
            "                text = VARIABLE:'mytrapgroup')",
            "              (snmptg_null",
            "                CATEGORIES:'categories'",
            "                (null_filler",
            "                  VARIABLE:'startup')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_snmp",
            "            SNMP:'snmp'",
            "            (snmp_trap_group",
            "              TRAP_GROUP:'trap-group'",
            "              name = (variable",
            "                text = VARIABLE:'mytrapgroup')",
            "              (snmptg_null",
            "                CATEGORIES:'categories'",
            "                (null_filler",
            "                  VARIABLE:'vrrp-events')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_snmp",
            "            SNMP:'snmp'",
            "            (snmp_trap_group",
            "              TRAP_GROUP:'trap-group'",
            "              name = (variable",
            "                text = VARIABLE:'mytrapgroup')",
            "              (snmptg_targets",
            "                TARGETS:'targets'",
            "                target = IP_ADDRESS:'1.2.3.4'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_snmp",
            "            SNMP:'snmp'",
            "            (snmp_trap_group",
            "              TRAP_GROUP:'trap-group'",
            "              name = (variable",
            "                text = VARIABLE:'mytrapgroup')",
            "              (snmptg_targets",
            "                TARGETS:'targets'",
            "                target = IP_ADDRESS:'2.3.4.5'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_snmp",
            "            SNMP:'snmp'",
            "            (snmp_trap_group",
            "              TRAP_GROUP:'trap-group'",
            "              name = (variable",
            "                text = VARIABLE:'mytrapgroup')",
            "              (snmptg_null",
            "                VERSION:'version'",
            "                (null_filler",
            "                  VERSION_STRING:'v2'  <== mode:M_Version)))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_snmp",
            "            SNMP:'snmp'",
            "            (snmp_null",
            "              TRAP_OPTIONS:'trap-options'",
            "              (null_filler",
            "                SOURCE_ADDRESS:'source-address'",
            "                IP_ADDRESS:'4.5.6.7'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_snmp",
            "            SNMP:'snmp'",
            "            (snmp_null",
            "              TRAP_OPTIONS:'trap-options'",
            "              (null_filler",
            "                SOURCE_ADDRESS:'source-address'",
            "                IP_ADDRESS:'8.9.0.1'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_snmp",
            "            SNMP:'snmp'",
            "            (snmp_null",
            "              TRAP_OPTIONS:'trap-options'",
            "              (null_filler",
            "                SOURCE_ADDRESS:'source-address'",
            "                IP_ADDRESS:'5.3.7.4'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_snmp",
            "            SNMP:'snmp'",
            "            (snmp_null",
            "              TRAP_OPTIONS:'trap-options'",
            "              (null_filler",
            "                SOURCE_ADDRESS:'source-address'",
            "                IP_ADDRESS:'8.5.3.3'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_snmp",
            "            SNMP:'snmp'",
            "            (snmp_null",
            "              VIEW:'view'",
            "              (null_filler",
            "                VARIABLE:'myviewname1'",
            "                VARIABLE:'oid'",
            "                VARIABLE:'myoidname1'",
            "                VARIABLE:'exclude'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_snmp",
            "            SNMP:'snmp'",
            "            (snmp_null",
            "              VIEW:'view'",
            "              (null_filler",
            "                VARIABLE:'myviewname2'",
            "                VARIABLE:'oid'",
            "                VARIABLE:'myoidname2'",
            "                VARIABLE:'include'))))))",
            "    NEWLINE:'\\n')",
            "  EOF:<EOF>)"
          ]
        },
        "configs/juniper_syslog" : {
          "sentences" : [
            "(flat_juniper_configuration",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_host_name",
            "              HOST_NAME:'host-name'",
            "              (variable",
            "                text = VARIABLE:'juniper_syslog'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_syslog",
            "              SYSLOG:'syslog'",
            "              (sys_null",
            "                ARCHIVE:'archive'",
            "                (null_filler",
            "                  VARIABLE:'size'",
            "                  VARIABLE:'100k'",
            "                  VARIABLE:'files'",
            "                  DEC:'3')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_syslog",
            "              SYSLOG:'syslog'",
            "              (sys_null",
            "                ARCHIVE:'archive'",
            "                (null_filler",
            "                  VARIABLE:'size'",
            "                  VARIABLE:'10m'",
            "                  VARIABLE:'files'",
            "                  DEC:'10')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_syslog",
            "              SYSLOG:'syslog'",
            "              (sys_null",
            "                ARCHIVE:'archive'",
            "                (null_filler",
            "                  VARIABLE:'size'",
            "                  VARIABLE:'1m'",
            "                  VARIABLE:'files'",
            "                  DEC:'20')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_syslog",
            "              SYSLOG:'syslog'",
            "              (sys_null",
            "                CONSOLE:'console'",
            "                (null_filler",
            "                  AUTHORIZATION:'authorization'",
            "                  VARIABLE:'info')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_syslog",
            "              SYSLOG:'syslog'",
            "              (sys_null",
            "                FILE:'file'",
            "                (null_filler",
            "                  VARIABLE:'*'",
            "                  ARCHIVE:'archive'",
            "                  VARIABLE:'files'",
            "                  DEC:'10')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_syslog",
            "              SYSLOG:'syslog'",
            "              (sys_null",
            "                FILE:'file'",
            "                (null_filler",
            "                  VARIABLE:'*'",
            "                  ARCHIVE:'archive'",
            "                  VARIABLE:'size'",
            "                  VARIABLE:'10m')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_syslog",
            "              SYSLOG:'syslog'",
            "              (sys_null",
            "                FILE:'file'",
            "                (null_filler",
            "                  VARIABLE:'changes.log'",
            "                  ARCHIVE:'archive'",
            "                  VARIABLE:'size'",
            "                  VARIABLE:'10m'",
            "                  VARIABLE:'files'",
            "                  DEC:'10')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_syslog",
            "              SYSLOG:'syslog'",
            "              (sys_null",
            "                FILE:'file'",
            "                (null_filler",
            "                  VARIABLE:'changes.log'",
            "                  ARCHIVE:'archive'",
            "                  VARIABLE:'size'",
            "                  VARIABLE:'1m'",
            "                  VARIABLE:'files'",
            "                  DEC:'20')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_syslog",
            "              SYSLOG:'syslog'",
            "              (sys_null",
            "                FILE:'file'",
            "                (null_filler",
            "                  VARIABLE:'changes.log'",
            "                  CHANGE_LOG:'change-log'",
            "                  ANY:'any')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_syslog",
            "              SYSLOG:'syslog'",
            "              (sys_null",
            "                FILE:'file'",
            "                (null_filler",
            "                  VARIABLE:'cli.log'",
            "                  ARCHIVE:'archive'",
            "                  VARIABLE:'size'",
            "                  VARIABLE:'10m'",
            "                  VARIABLE:'files'",
            "                  DEC:'10')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_syslog",
            "              SYSLOG:'syslog'",
            "              (sys_null",
            "                FILE:'file'",
            "                (null_filler",
            "                  VARIABLE:'cli.log'",
            "                  ARCHIVE:'archive'",
            "                  VARIABLE:'size'",
            "                  VARIABLE:'1m'",
            "                  VARIABLE:'files'",
            "                  DEC:'20')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_syslog",
            "              SYSLOG:'syslog'",
            "              (sys_null",
            "                FILE:'file'",
            "                (null_filler",
            "                  VARIABLE:'cli.log'",
            "                  INTERACTIVE_COMMANDS:'interactive-commands'",
            "                  ANY:'any')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_syslog",
            "              SYSLOG:'syslog'",
            "              (sys_null",
            "                FILE:'file'",
            "                (null_filler",
            "                  VARIABLE:'config-changes'",
            "                  CHANGE_LOG:'change-log'",
            "                  VARIABLE:'info')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_syslog",
            "              SYSLOG:'syslog'",
            "              (sys_null",
            "                FILE:'file'",
            "                (null_filler",
            "                  VARIABLE:'default-log-messages'",
            "                  ANY:'any'",
            "                  ANY:'any')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_syslog",
            "              SYSLOG:'syslog'",
            "              (sys_null",
            "                FILE:'file'",
            "                (null_filler",
            "                  VARIABLE:'default-log-messages'",
            "                  ANY:'any'",
            "                  VARIABLE:'info')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_syslog",
            "              SYSLOG:'syslog'",
            "              (sys_null",
            "                FILE:'file'",
            "                (null_filler",
            "                  VARIABLE:'default-log-messages'",
            "                  MATCH:'match'",
            "                  DOUBLE_QUOTED_STRING:'\"someregextext\"')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_syslog",
            "              SYSLOG:'syslog'",
            "              (sys_null",
            "                FILE:'file'",
            "                (null_filler",
            "                  VARIABLE:'default-log-messages'",
            "                  STRUCTURED_DATA:'structured-data')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_syslog",
            "              SYSLOG:'syslog'",
            "              (sys_null",
            "                FILE:'file'",
            "                (null_filler",
            "                  VARIABLE:'*'",
            "                  EXPLICIT_PRIORITY:'explicit-priority')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_syslog",
            "              SYSLOG:'syslog'",
            "              (sys_null",
            "                FILE:'file'",
            "                (null_filler",
            "                  VARIABLE:'firewall.log'",
            "                  ARCHIVE:'archive'",
            "                  VARIABLE:'size'",
            "                  VARIABLE:'10m'",
            "                  VARIABLE:'files'",
            "                  DEC:'10')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_syslog",
            "              SYSLOG:'syslog'",
            "              (sys_null",
            "                FILE:'file'",
            "                (null_filler",
            "                  VARIABLE:'firewall.log'",
            "                  ARCHIVE:'archive'",
            "                  VARIABLE:'size'",
            "                  VARIABLE:'1m'",
            "                  VARIABLE:'files'",
            "                  DEC:'20')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_syslog",
            "              SYSLOG:'syslog'",
            "              (sys_null",
            "                FILE:'file'",
            "                (null_filler",
            "                  VARIABLE:'firewall.log'",
            "                  FIREWALL:'firewall'",
            "                  VARIABLE:'info')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_syslog",
            "              SYSLOG:'syslog'",
            "              (sys_null",
            "                FILE:'file'",
            "                (null_filler",
            "                  INTERACTIVE_COMMANDS:'interactive-commands'",
            "                  ANY:'any'",
            "                  ANY:'any')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_syslog",
            "              SYSLOG:'syslog'",
            "              (sys_null",
            "                FILE:'file'",
            "                (null_filler",
            "                  INTERACTIVE_COMMANDS:'interactive-commands'",
            "                  INTERACTIVE_COMMANDS:'interactive-commands'",
            "                  ANY:'any')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_syslog",
            "              SYSLOG:'syslog'",
            "              (sys_null",
            "                FILE:'file'",
            "                (null_filler",
            "                  INTERACTIVE_COMMANDS:'interactive-commands'",
            "                  INTERACTIVE_COMMANDS:'interactive-commands'",
            "                  VARIABLE:'error')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_syslog",
            "              SYSLOG:'syslog'",
            "              (sys_null",
            "                FILE:'file'",
            "                (null_filler",
            "                  VARIABLE:'logfile-authorization'",
            "                  AUTHORIZATION:'authorization'",
            "                  ANY:'any')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_syslog",
            "              SYSLOG:'syslog'",
            "              (sys_null",
            "                FILE:'file'",
            "                (null_filler",
            "                  VARIABLE:'logfile-daemon'",
            "                  DAEMON:'daemon'",
            "                  ANY:'any')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_syslog",
            "              SYSLOG:'syslog'",
            "              (sys_null",
            "                FILE:'file'",
            "                (null_filler",
            "                  VARIABLE:'logfile-dfc'",
            "                  VARIABLE:'dfc'",
            "                  ANY:'any')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_syslog",
            "              SYSLOG:'syslog'",
            "              (sys_null",
            "                FILE:'file'",
            "                (null_filler",
            "                  VARIABLE:'logfile-external'",
            "                  EXTERNAL:'external'",
            "                  ANY:'any')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_syslog",
            "              SYSLOG:'syslog'",
            "              (sys_null",
            "                FILE:'file'",
            "                (null_filler",
            "                  VARIABLE:'logfile-firewall'",
            "                  FIREWALL:'firewall'",
            "                  ANY:'any')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_syslog",
            "              SYSLOG:'syslog'",
            "              (sys_null",
            "                FILE:'file'",
            "                (null_filler",
            "                  VARIABLE:'logfile-ftp'",
            "                  FTP:'ftp'",
            "                  ANY:'any')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_syslog",
            "              SYSLOG:'syslog'",
            "              (sys_null",
            "                FILE:'file'",
            "                (null_filler",
            "                  VARIABLE:'logfile-interactive-commands'",
            "                  INTERACTIVE_COMMANDS:'interactive-commands'",
            "                  ANY:'any')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_syslog",
            "              SYSLOG:'syslog'",
            "              (sys_null",
            "                FILE:'file'",
            "                (null_filler",
            "                  VARIABLE:'logfile-kernel'",
            "                  KERNEL:'kernel'",
            "                  ANY:'any')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_syslog",
            "              SYSLOG:'syslog'",
            "              (sys_null",
            "                FILE:'file'",
            "                (null_filler",
            "                  VARIABLE:'logfile-pfe'",
            "                  VARIABLE:'pfe'",
            "                  ANY:'any')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_syslog",
            "              SYSLOG:'syslog'",
            "              (sys_null",
            "                FILE:'file'",
            "                (null_filler",
            "                  VARIABLE:'logfile-user'",
            "                  USER:'user'",
            "                  ANY:'any')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_syslog",
            "              SYSLOG:'syslog'",
            "              (sys_null",
            "                FILE:'file'",
            "                (null_filler",
            "                  VARIABLE:'messages'",
            "                  ANY:'any'",
            "                  ANY:'any')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_syslog",
            "              SYSLOG:'syslog'",
            "              (sys_null",
            "                FILE:'file'",
            "                (null_filler",
            "                  VARIABLE:'messages'",
            "                  ANY:'any'",
            "                  VARIABLE:'critical')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_syslog",
            "              SYSLOG:'syslog'",
            "              (sys_null",
            "                FILE:'file'",
            "                (null_filler",
            "                  VARIABLE:'messages'",
            "                  ANY:'any'",
            "                  VARIABLE:'notice')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_syslog",
            "              SYSLOG:'syslog'",
            "              (sys_null",
            "                FILE:'file'",
            "                (null_filler",
            "                  VARIABLE:'messages'",
            "                  ARCHIVE:'archive'",
            "                  VARIABLE:'files'",
            "                  DEC:'20')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_syslog",
            "              SYSLOG:'syslog'",
            "              (sys_null",
            "                FILE:'file'",
            "                (null_filler",
            "                  VARIABLE:'messages'",
            "                  ARCHIVE:'archive'",
            "                  VARIABLE:'size'",
            "                  VARIABLE:'10m'",
            "                  VARIABLE:'files'",
            "                  DEC:'10')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_syslog",
            "              SYSLOG:'syslog'",
            "              (sys_null",
            "                FILE:'file'",
            "                (null_filler",
            "                  VARIABLE:'messages'",
            "                  ARCHIVE:'archive'",
            "                  VARIABLE:'size'",
            "                  VARIABLE:'10m'",
            "                  VARIABLE:'files'",
            "                  DEC:'20')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_syslog",
            "              SYSLOG:'syslog'",
            "              (sys_null",
            "                FILE:'file'",
            "                (null_filler",
            "                  VARIABLE:'messages'",
            "                  ARCHIVE:'archive'",
            "                  VARIABLE:'size'",
            "                  VARIABLE:'1m'",
            "                  VARIABLE:'files'",
            "                  DEC:'20')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_syslog",
            "              SYSLOG:'syslog'",
            "              (sys_null",
            "                FILE:'file'",
            "                (null_filler",
            "                  VARIABLE:'messages'",
            "                  ARCHIVE:'archive'",
            "                  VARIABLE:'size'",
            "                  VARIABLE:'2m')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_syslog",
            "              SYSLOG:'syslog'",
            "              (sys_null",
            "                FILE:'file'",
            "                (null_filler",
            "                  VARIABLE:'messages'",
            "                  AUTHORIZATION:'authorization'",
            "                  VARIABLE:'info')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_syslog",
            "              SYSLOG:'syslog'",
            "              (sys_null",
            "                FILE:'file'",
            "                (null_filler",
            "                  VARIABLE:'messages'",
            "                  DAEMON:'daemon'",
            "                  VARIABLE:'info')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_syslog",
            "              SYSLOG:'syslog'",
            "              (sys_null",
            "                FILE:'file'",
            "                (null_filler",
            "                  VARIABLE:'messages'",
            "                  FIREWALL:'firewall'",
            "                  VARIABLE:'none')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_syslog",
            "              SYSLOG:'syslog'",
            "              (sys_null",
            "                FILE:'file'",
            "                (null_filler",
            "                  VARIABLE:'messages'",
            "                  INTERACTIVE_COMMANDS:'interactive-commands'",
            "                  VARIABLE:'notice')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_syslog",
            "              SYSLOG:'syslog'",
            "              (sys_null",
            "                FILE:'file'",
            "                (null_filler",
            "                  VARIABLE:'messages'",
            "                  USER:'user'",
            "                  VARIABLE:'info')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_syslog",
            "              SYSLOG:'syslog'",
            "              (sys_null",
            "                FILE:'file'",
            "                (null_filler",
            "                  VARIABLE:'policy_session'",
            "                  ARCHIVE:'archive'",
            "                  VARIABLE:'size'",
            "                  VARIABLE:'1000k'",
            "                  VARIABLE:'world-readable')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_syslog",
            "              SYSLOG:'syslog'",
            "              (sys_null",
            "                FILE:'file'",
            "                (null_filler",
            "                  VARIABLE:'policy_session'",
            "                  MATCH:'match'",
            "                  VARIABLE:'RT_FLOW')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_syslog",
            "              SYSLOG:'syslog'",
            "              (sys_null",
            "                FILE:'file'",
            "                (null_filler",
            "                  VARIABLE:'policy_session'",
            "                  MATCH:'match'",
            "                  VARIABLE:'RT_FLOW_SESSION')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_syslog",
            "              SYSLOG:'syslog'",
            "              (sys_null",
            "                FILE:'file'",
            "                (null_filler",
            "                  VARIABLE:'policy_session'",
            "                  STRUCTURED_DATA:'structured-data')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_syslog",
            "              SYSLOG:'syslog'",
            "              (sys_null",
            "                FILE:'file'",
            "                (null_filler",
            "                  VARIABLE:'policy_session'",
            "                  USER:'user'",
            "                  VARIABLE:'error')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_syslog",
            "              SYSLOG:'syslog'",
            "              (sys_null",
            "                FILE:'file'",
            "                (null_filler",
            "                  VARIABLE:'policy_session'",
            "                  USER:'user'",
            "                  VARIABLE:'info')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_syslog",
            "              SYSLOG:'syslog'",
            "              (sys_null",
            "                FILE:'file'",
            "                (null_filler",
            "                  SECURITY:'security'",
            "                  ANY:'any'",
            "                  VARIABLE:'notice')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_syslog",
            "              SYSLOG:'syslog'",
            "              (sys_null",
            "                FILE:'file'",
            "                (null_filler",
            "                  SECURITY:'security'",
            "                  ARCHIVE:'archive'",
            "                  VARIABLE:'files'",
            "                  DEC:'5')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_syslog",
            "              SYSLOG:'syslog'",
            "              (sys_null",
            "                FILE:'file'",
            "                (null_filler",
            "                  SECURITY:'security'",
            "                  ARCHIVE:'archive'",
            "                  VARIABLE:'size'",
            "                  VARIABLE:'10m')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_syslog",
            "              SYSLOG:'syslog'",
            "              (sys_null",
            "                FILE:'file'",
            "                (null_filler",
            "                  SECURITY:'security'",
            "                  AUTHORIZATION:'authorization'",
            "                  ANY:'any')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_syslog",
            "              SYSLOG:'syslog'",
            "              (sys_null",
            "                FILE:'file'",
            "                (null_filler",
            "                  SECURITY:'security'",
            "                  FIREWALL:'firewall'",
            "                  ANY:'any')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_syslog",
            "              SYSLOG:'syslog'",
            "              (sys_null",
            "                FILE:'file'",
            "                (null_filler",
            "                  SECURITY:'security'",
            "                  INTERACTIVE_COMMANDS:'interactive-commands'",
            "                  ANY:'any')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_syslog",
            "              SYSLOG:'syslog'",
            "              (sys_null",
            "                SOURCE_ADDRESS:'source-address'",
            "                (null_filler",
            "                  IP_ADDRESS:'5.6.7.8')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_syslog",
            "              SYSLOG:'syslog'",
            "              (sys_host",
            "                HOST:'host'",
            "                hostname = (variable",
            "                  text = IP_ADDRESS:'1.2.3.4')",
            "                (sysh_null",
            "                  ALLOW_DUPLICATES:'allow-duplicates'",
            "                  (null_filler))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_syslog",
            "              SYSLOG:'syslog'",
            "              (sys_host",
            "                HOST:'host'",
            "                hostname = (variable",
            "                  text = IP_ADDRESS:'1.2.3.4')",
            "                (sysh_null",
            "                  ANY:'any'",
            "                  (null_filler",
            "                    ANY:'any'))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_syslog",
            "              SYSLOG:'syslog'",
            "              (sys_host",
            "                HOST:'host'",
            "                hostname = (variable",
            "                  text = IP_ADDRESS:'1.2.3.4')",
            "                (sysh_null",
            "                  ANY:'any'",
            "                  (null_filler",
            "                    VARIABLE:'emergency'))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_syslog",
            "              SYSLOG:'syslog'",
            "              (sys_host",
            "                HOST:'host'",
            "                hostname = (variable",
            "                  text = IP_ADDRESS:'1.2.3.4')",
            "                (sysh_null",
            "                  ANY:'any'",
            "                  (null_filler",
            "                    VARIABLE:'info'))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_syslog",
            "              SYSLOG:'syslog'",
            "              (sys_host",
            "                HOST:'host'",
            "                hostname = (variable",
            "                  text = IP_ADDRESS:'1.2.3.4')",
            "                (sysh_null",
            "                  ANY:'any'",
            "                  (null_filler",
            "                    VARIABLE:'notice'))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_syslog",
            "              SYSLOG:'syslog'",
            "              (sys_host",
            "                HOST:'host'",
            "                hostname = (variable",
            "                  text = IP_ADDRESS:'1.2.3.4')",
            "                (sysh_null",
            "                  CHANGE_LOG:'change-log'",
            "                  (null_filler",
            "                    ANY:'any'))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_syslog",
            "              SYSLOG:'syslog'",
            "              (sys_host",
            "                HOST:'host'",
            "                hostname = (variable",
            "                  text = IP_ADDRESS:'1.2.3.4')",
            "                (sysh_null",
            "                  DAEMON:'daemon'",
            "                  (null_filler",
            "                    VARIABLE:'info'))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_syslog",
            "              SYSLOG:'syslog'",
            "              (sys_host",
            "                HOST:'host'",
            "                hostname = (variable",
            "                  text = IP_ADDRESS:'1.2.3.4')",
            "                (sysh_null",
            "                  EXPLICIT_PRIORITY:'explicit-priority'",
            "                  (null_filler))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_syslog",
            "              SYSLOG:'syslog'",
            "              (sys_host",
            "                HOST:'host'",
            "                hostname = (variable",
            "                  text = IP_ADDRESS:'1.2.3.4')",
            "                (sysh_null",
            "                  FACILITY_OVERRIDE:'facility-override'",
            "                  (null_filler",
            "                    VARIABLE:'local0'))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_syslog",
            "              SYSLOG:'syslog'",
            "              (sys_host",
            "                HOST:'host'",
            "                hostname = (variable",
            "                  text = IP_ADDRESS:'1.2.3.4')",
            "                (sysh_null",
            "                  FACILITY_OVERRIDE:'facility-override'",
            "                  (null_filler",
            "                    VARIABLE:'local1'))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_syslog",
            "              SYSLOG:'syslog'",
            "              (sys_host",
            "                HOST:'host'",
            "                hostname = (variable",
            "                  text = IP_ADDRESS:'1.2.3.4')",
            "                (sysh_null",
            "                  FACILITY_OVERRIDE:'facility-override'",
            "                  (null_filler",
            "                    VARIABLE:'local6'))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_syslog",
            "              SYSLOG:'syslog'",
            "              (sys_host",
            "                HOST:'host'",
            "                hostname = (variable",
            "                  text = IP_ADDRESS:'1.2.3.4')",
            "                (sysh_null",
            "                  FACILITY_OVERRIDE:'facility-override'",
            "                  (null_filler",
            "                    VARIABLE:'local7'))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_syslog",
            "              SYSLOG:'syslog'",
            "              (sys_host",
            "                HOST:'host'",
            "                hostname = (variable",
            "                  text = IP_ADDRESS:'1.2.3.4')",
            "                (sysh_null",
            "                  FIREWALL:'firewall'",
            "                  (null_filler",
            "                    ANY:'any'))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_syslog",
            "              SYSLOG:'syslog'",
            "              (sys_host",
            "                HOST:'host'",
            "                hostname = (variable",
            "                  text = IP_ADDRESS:'1.2.3.4')",
            "                (sysh_null",
            "                  INTERACTIVE_COMMANDS:'interactive-commands'",
            "                  (null_filler",
            "                    ANY:'any'))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_syslog",
            "              SYSLOG:'syslog'",
            "              (sys_host",
            "                HOST:'host'",
            "                hostname = (variable",
            "                  text = IP_ADDRESS:'1.2.3.4')",
            "                (sysh_null",
            "                  KERNEL:'kernel'",
            "                  (null_filler",
            "                    VARIABLE:'notice'))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_syslog",
            "              SYSLOG:'syslog'",
            "              (sys_host",
            "                HOST:'host'",
            "                hostname = (variable",
            "                  text = IP_ADDRESS:'1.2.3.4')",
            "                (sysh_null",
            "                  LOG_PREFIX:'log-prefix'",
            "                  (null_filler",
            "                    VARIABLE:'abcdefg'))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_syslog",
            "              SYSLOG:'syslog'",
            "              (sys_host",
            "                HOST:'host'",
            "                hostname = (variable",
            "                  text = IP_ADDRESS:'1.2.3.4')",
            "                (sysh_null",
            "                  MATCH:'match'",
            "                  (null_filler",
            "                    VARIABLE:'BIPPETY'))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_syslog",
            "              SYSLOG:'syslog'",
            "              (sys_host",
            "                HOST:'host'",
            "                hostname = (variable",
            "                  text = IP_ADDRESS:'1.2.3.4')",
            "                (sysh_null",
            "                  PORT:'port'",
            "                  (null_filler",
            "                    DEC:'1234'",
            "                    STRUCTURED_DATA:'structured-data'))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_syslog",
            "              SYSLOG:'syslog'",
            "              (sys_host",
            "                HOST:'host'",
            "                hostname = (variable",
            "                  text = IP_ADDRESS:'1.2.3.4')",
            "                (sysh_null",
            "                  SOURCE_ADDRESS:'source-address'",
            "                  (null_filler",
            "                    IP_ADDRESS:'3.4.5.6'))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_syslog",
            "              SYSLOG:'syslog'",
            "              (sys_host",
            "                HOST:'host'",
            "                hostname = (variable",
            "                  text = IP_ADDRESS:'1.2.3.4')",
            "                (sysh_null",
            "                  USER:'user'",
            "                  (null_filler",
            "                    VARIABLE:'info'))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_syslog",
            "              SYSLOG:'syslog'",
            "              (sys_null",
            "                TIME_FORMAT:'time-format'",
            "                (null_filler",
            "                  VARIABLE:'millisecond')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_syslog",
            "              SYSLOG:'syslog'",
            "              (sys_null",
            "                TIME_FORMAT:'time-format'",
            "                (null_filler",
            "                  VARIABLE:'year')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_syslog",
            "              SYSLOG:'syslog'",
            "              (sys_null",
            "                USER:'user'",
            "                (null_filler",
            "                  VARIABLE:'*'",
            "                  ANY:'any'",
            "                  VARIABLE:'emergency')))))))",
            "    NEWLINE:'\\n')",
            "  EOF:<EOF>)"
          ]
        },
        "configs/juniper_system" : {
          "sentences" : [
            "(flat_juniper_configuration",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_host_name",
            "              HOST_NAME:'host-name'",
            "              (variable",
            "                text = VARIABLE:'juniper_system'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_null",
            "              ALLOW_V4MAPPED_PACKETS:'allow-v4mapped-packets'",
            "              (null_filler))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_null",
            "              AUTO_SNAPSHOT:'auto-snapshot'",
            "              (null_filler))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_null",
            "              NO_REDIRECTS_IPV6:'no-redirects-ipv6'",
            "              (null_filler))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_null",
            "              NO_PING_RECORD_ROUTE:'no-ping-record-route'",
            "              (null_filler))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_null",
            "              NO_PING_TIME_STAMP:'no-ping-time-stamp'",
            "              (null_filler))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_null",
            "              SAVED_CORE_FILES:'saved-core-files'",
            "              (null_filler",
            "                DEC:'10'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_null",
            "              SAVED_CORE_CONTEXT:'saved-core-context'",
            "              (null_filler))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_null",
            "              STATIC_HOST_MAPPING:'static-host-mapping'",
            "              (null_filler",
            "                VARIABLE:'host1'",
            "                INET:'inet'",
            "                IP_ADDRESS:'1.2.3.4'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_ports",
            "              PORTS:'ports'",
            "              porttype = (sy_porttype",
            "                CONSOLE:'console')",
            "              (syp_null",
            "                LOG_OUT_ON_DISCONNECT:'log-out-on-disconnect'",
            "                (null_filler)))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_security_profile",
            "              SECURITY_PROFILE:'security-profile'",
            "              name = (variable",
            "                text = VARIABLE:'ls1')",
            "              (sysp_null",
            "                POLICY:'policy'",
            "                (null_filler",
            "                  MAXIMUM:'maximum'",
            "                  DEC:'40000')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_security_profile",
            "              SECURITY_PROFILE:'security-profile'",
            "              name = (variable",
            "                text = VARIABLE:'ls1')",
            "              (sysp_null",
            "                SCHEDULER:'scheduler'",
            "                (null_filler",
            "                  MAXIMUM:'maximum'",
            "                  DEC:'64')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_security_profile",
            "              SECURITY_PROFILE:'security-profile'",
            "              name = (variable",
            "                text = VARIABLE:'ls1')",
            "              (sysp_null",
            "                ZONE:'zone'",
            "                (null_filler",
            "                  MAXIMUM:'maximum'",
            "                  DEC:'256')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_security_profile",
            "              SECURITY_PROFILE:'security-profile'",
            "              name = (variable",
            "                text = VARIABLE:'ls1')",
            "              (sysp_null",
            "                FLOW_SESSION:'flow-session'",
            "                (null_filler",
            "                  MAXIMUM:'maximum'",
            "                  DEC:'1572864')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_security_profile",
            "              SECURITY_PROFILE:'security-profile'",
            "              name = (variable",
            "                text = VARIABLE:'ls1')",
            "              (sysp_null",
            "                FLOW_GATE:'flow-gate'",
            "                (null_filler",
            "                  MAXIMUM:'maximum'",
            "                  DEC:'524288')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_security_profile",
            "              SECURITY_PROFILE:'security-profile'",
            "              name = (variable",
            "                text = VARIABLE:'ls1')",
            "              (sysp_logical_system",
            "                LOGICAL_SYSTEM:'logical-system'",
            "                name = (variable",
            "                  text = VARIABLE:'ls905')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_services",
            "              SERVICES:'services'",
            "              (sy_services_null",
            "                DHCP:'dhcp'",
            "                (null_filler",
            "                  TRACEOPTIONS:'traceoptions'",
            "                  VARIABLE:'flag'",
            "                  ALL:'all')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_services",
            "              SERVICES:'services'",
            "              (sy_services_null",
            "                DHCP:'dhcp'",
            "                (null_filler",
            "                  POOL:'pool'",
            "                  IP_PREFIX:'1.2.8.0/26'",
            "                  VARIABLE:'address-range'",
            "                  LOW:'low'",
            "                  IP_ADDRESS:'1.2.8.2'",
            "                  HIGH:'high'",
            "                  IP_ADDRESS:'1.2.80.60')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_services",
            "              SERVICES:'services'",
            "              (sy_services_null",
            "                DHCP:'dhcp'",
            "                (null_filler",
            "                  POOL:'pool'",
            "                  IP_PREFIX:'1.2.8.0/26'",
            "                  NAME_SERVER:'name-server'",
            "                  IP_ADDRESS:'1.2.6.1')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_services",
            "              SERVICES:'services'",
            "              (sy_services_null",
            "                DHCP:'dhcp'",
            "                (null_filler",
            "                  POOL:'pool'",
            "                  IP_PREFIX:'1.2.8.0/26'",
            "                  DOMAIN_SEARCH:'domain-search'",
            "                  VARIABLE:'now.com')))))))",
            "    NEWLINE:'\\n')",
            "  EOF:<EOF>)"
          ]
        },
        "configs/juniper_tacplus" : {
          "sentences" : [
            "(flat_juniper_configuration",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_host_name",
            "              HOST_NAME:'host-name'",
            "              (variable",
            "                text = VARIABLE:'juniper_tacplus'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (s_groups",
            "        GROUPS:'groups'",
            "        (s_groups_named",
            "          name = (variable",
            "            text = VARIABLE:'TACACS')",
            "          (s_groups_tail",
            "            (statement",
            "              (s_common",
            "                (s_system",
            "                  SYSTEM:'system'",
            "                  (sy_tacplus_server",
            "                    TACPLUS_SERVER:'tacplus-server'",
            "                    (wildcard",
            "                      WILDCARD:'<*>')",
            "                    (syt_source_address",
            "                      SOURCE_ADDRESS:'source-address'",
            "                      address = IP_ADDRESS:'2.3.4.5')))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (apply",
            "              (apply_groups",
            "                APPLY_GROUPS:'apply-groups'",
            "                name = (variable",
            "                  text = VARIABLE:'TACACS')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_tacplus_server",
            "              TACPLUS_SERVER:'tacplus-server'",
            "              hostname = IP_ADDRESS:'1.2.3.4'",
            "              (apply",
            "                (apply_groups",
            "                  APPLY_GROUPS:'apply-groups'",
            "                  name = (variable",
            "                    text = VARIABLE:'bippety'))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_tacplus_server",
            "              TACPLUS_SERVER:'tacplus-server'",
            "              hostname = IP_ADDRESS:'1.2.3.4'",
            "              (syt_null",
            "                PORT:'port'",
            "                (null_filler",
            "                  DEC:'12345')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_tacplus_server",
            "              TACPLUS_SERVER:'tacplus-server'",
            "              hostname = IP_ADDRESS:'1.2.3.4'",
            "              (syt_secret",
            "                SECRET:'secret'",
            "                (secret",
            "                  DOUBLE_QUOTED_STRING:'\"$9$IRDRcl8LNwYoKMgJ\"')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_tacplus_server",
            "              TACPLUS_SERVER:'tacplus-server'",
            "              hostname = IP_ADDRESS:'1.2.3.4'",
            "              (syt_null",
            "                SINGLE_CONNECTION:'single-connection'",
            "                (null_filler)))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_tacplus_server",
            "              TACPLUS_SERVER:'tacplus-server'",
            "              hostname = IP_ADDRESS:'1.2.3.4'",
            "              (syt_null",
            "                TIMEOUT:'timeout'",
            "                (null_filler",
            "                  DEC:'20')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_tacplus_server",
            "              TACPLUS_SERVER:'tacplus-server'",
            "              hostname = IP_ADDRESS:'5.6.7.8'",
            "              (apply",
            "                (apply_groups_except",
            "                  APPLY_GROUPS_EXCEPT:'apply-groups-except'",
            "                  name = (variable",
            "                    text = VARIABLE:'TACACS'))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_tacplus_server",
            "              TACPLUS_SERVER:'tacplus-server'",
            "              hostname = IP_ADDRESS:'5.6.7.8'",
            "              (syt_secret",
            "                SECRET:'secret'",
            "                (secret",
            "                  SCRUBBED:'<SCRUBBED>')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_tacplus_server",
            "              TACPLUS_SERVER:'tacplus-server'",
            "              hostname = IP_ADDRESS:'5.6.7.8'",
            "              (syt_source_address",
            "                SOURCE_ADDRESS:'source-address'",
            "                address = IP_ADDRESS:'8.7.6.5'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_tacplus_server",
            "              TACPLUS_SERVER:'tacplus-server'",
            "              hostname = IP_ADDRESS:'1.2.3.4'",
            "              (syt_null",
            "                TIMEOUT:'timeout'",
            "                (null_filler",
            "                  DEC:'4')))))))",
            "    NEWLINE:'\\n')",
            "  EOF:<EOF>)"
          ]
        },
        "configs/juniper_trailing_space" : {
          "sentences" : [
            "(flat_juniper_configuration",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_host_name",
            "              HOST_NAME:'host-name'",
            "              (variable",
            "                text = VARIABLE:'juniper_trailing_space'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_routing_options",
            "            ROUTING_OPTIONS:'routing-options'",
            "            (ro_router_id",
            "              ROUTER_ID:'router-id'",
            "              id = IP_ADDRESS:'1.1.1.1')))))",
            "    NEWLINE:'\\n')",
            "  (newline",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_routing_options",
            "            ROUTING_OPTIONS:'routing-options'",
            "            (ro_autonomous_system",
            "              AUTONOMOUS_SYSTEM:'autonomous-system'",
            "              asn = (bgp_asn",
            "                asn = DEC:'1')",
            "              (apply))))))",
            "    NEWLINE:'\\n\\n')",
            "  EOF:<EOF>)"
          ]
        },
        "configs/juniper_vlan" : {
          "sentences" : [
            "(flat_juniper_configuration",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_system",
            "            SYSTEM:'system'",
            "            (sy_host_name",
            "              HOST_NAME:'host-name'",
            "              (variable",
            "                text = VARIABLE:'juniper_vlan'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_vlans",
            "            VLANS:'vlans'",
            "            (s_vlans_named",
            "              name = (variable",
            "                text = VARIABLE:'VLAN30')",
            "              (vlt_vlan_id",
            "                VLAN_ID:'vlan-id'",
            "                id = DEC:'30'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_vlans",
            "            VLANS:'vlans'",
            "            (s_vlans_named",
            "              name = (variable",
            "                text = VARIABLE:'VLAN30')",
            "              (vlt_l3_interface",
            "                L3_INTERFACE:'l3-interface'",
            "                (interface_id",
            "                  name = INTERFACE_NAME:'vlan'  <== mode:M_Interface",
            "                  PERIOD:'.'",
            "                  unit = DEC:'30')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_vlans",
            "            VLANS:'vlans'",
            "            (s_vlans_named",
            "              name = (variable",
            "                text = VARIABLE:'VLAN40')",
            "              (vlt_vlan_id",
            "                VLAN_ID:'vlan-id'",
            "                id = DEC:'40'))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_vlans",
            "            VLANS:'vlans'",
            "            (s_vlans_named",
            "              name = (variable",
            "                text = VARIABLE:'VLAN40')",
            "              (vlt_l3_interface",
            "                L3_INTERFACE:'l3-interface'",
            "                (interface_id",
            "                  name = INTERFACE_NAME:'vlan'  <== mode:M_Interface",
            "                  PERIOD:'.'",
            "                  unit = DEC:'40')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_interfaces",
            "            INTERFACES:'interfaces'",
            "            (int_named",
            "              (interface_id",
            "                name = INTERFACE_NAME:'xe-0/0/0'  <== mode:M_Interface)",
            "              (i_unit",
            "                UNIT:'unit'",
            "                num = DEC:'0'",
            "                (i_common",
            "                  (i_family",
            "                    FAMILY:'family'",
            "                    (if_ethernet_switching",
            "                      ETHERNET_SWITCHING:'ethernet-switching'",
            "                      (ife_port_mode",
            "                        PORT_MODE:'port-mode'",
            "                        TRUNK:'trunk'))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_interfaces",
            "            INTERFACES:'interfaces'",
            "            (int_named",
            "              (interface_id",
            "                name = INTERFACE_NAME:'xe-0/0/0'  <== mode:M_Interface)",
            "              (i_unit",
            "                UNIT:'unit'",
            "                num = DEC:'0'",
            "                (i_common",
            "                  (i_family",
            "                    FAMILY:'family'",
            "                    (if_ethernet_switching",
            "                      ETHERNET_SWITCHING:'ethernet-switching'",
            "                      (ife_vlan",
            "                        VLAN:'vlan'",
            "                        MEMBERS:'members'  <== mode:M_Vlan",
            "                        name = (variable",
            "                          text = VARIABLE:'VLAN30')))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_interfaces",
            "            INTERFACES:'interfaces'",
            "            (int_named",
            "              (interface_id",
            "                name = INTERFACE_NAME:'xe-0/0/0'  <== mode:M_Interface)",
            "              (i_unit",
            "                UNIT:'unit'",
            "                num = DEC:'0'",
            "                (i_common",
            "                  (i_family",
            "                    FAMILY:'family'",
            "                    (if_ethernet_switching",
            "                      ETHERNET_SWITCHING:'ethernet-switching'",
            "                      (ife_vlan",
            "                        VLAN:'vlan'",
            "                        MEMBERS:'members'  <== mode:M_Vlan",
            "                        name = (variable",
            "                          text = VARIABLE:'VLAN40')))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_interfaces",
            "            INTERFACES:'interfaces'",
            "            (int_named",
            "              (interface_id",
            "                name = INTERFACE_NAME:'xe-0/0/0'  <== mode:M_Interface)",
            "              (i_unit",
            "                UNIT:'unit'",
            "                num = DEC:'0'",
            "                (i_common",
            "                  (i_family",
            "                    FAMILY:'family'",
            "                    (if_ethernet_switching",
            "                      ETHERNET_SWITCHING:'ethernet-switching'",
            "                      (ife_vlan",
            "                        VLAN:'vlan'",
            "                        MEMBERS:'members'  <== mode:M_Vlan",
            "                        (range",
            "                          (subrange",
            "                            low = DEC:'50'))))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line",
            "    SET:'set'",
            "    (set_line_tail",
            "      (statement",
            "        (s_common",
            "          (s_interfaces",
            "            INTERFACES:'interfaces'",
            "            (int_named",
            "              (interface_id",
            "                name = INTERFACE_NAME:'xe-0/0/0'  <== mode:M_Interface)",
            "              (i_unit",
            "                UNIT:'unit'",
            "                num = DEC:'0'",
            "                (i_common",
            "                  (i_family",
            "                    FAMILY:'family'",
            "                    (if_ethernet_switching",
            "                      ETHERNET_SWITCHING:'ethernet-switching'",
            "                      (ife_native_vlan_id",
            "                        NATIVE_VLAN_ID:'native-vlan-id'",
            "                        id = DEC:'666'))))))))))",
            "    NEWLINE:'\\n')",
            "  EOF:<EOF>)"
          ]
        },
        "configs/local_v6_addr" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'local_v6_addr'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (router_bgp_stanza",
            "      ROUTER:'router'",
            "      BGP:'bgp'",
            "      procnum = (bgp_asn",
            "        asn = DEC:'1')",
            "      NEWLINE:'\\n'",
            "      (router_bgp_stanza_tail",
            "        (peer_group_creation_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          name = VARIABLE:'NEIGH'  <== mode:M_NEIGHBOR",
            "          PEER_GROUP:'peer-group'",
            "          NEWLINE:'\\n'  <== mode:M_NEIGHBOR))",
            "      (router_bgp_stanza_tail",
            "        (neighbor_flat_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          peergroup = VARIABLE:'NEIGH'  <== mode:M_NEIGHBOR",
            "          (bgp_tail",
            "            (null_bgp_tail",
            "              LOCAL_V6_ADDR:'local-v6-addr'",
            "              (null_rest_of_line",
            "                IPV6_ADDRESS:'1234::1'",
            "                NEWLINE:'\\n')))))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/mac_access_list" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'mac_access_list'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_mac_access_list_extended",
            "      MAC:'mac'",
            "      ACCESS_LIST:'access-list'",
            "      name = (variable_permissive",
            "        VARIABLE:'permitCDP')",
            "      NEWLINE:'\\n'",
            "      (s_mac_access_list_extended_tail",
            "        num = DEC:'10'",
            "        action = (access_list_action",
            "          PERMIT:'permit')",
            "        src = (access_list_mac_range",
            "          ANY:'any')",
            "        dst = (access_list_mac_range",
            "          address = MAC_ADDRESS_LITERAL:'0100.0CCC.CCCC'",
            "          wildcard = MAC_ADDRESS_LITERAL:'0000.0000.0000')",
            "        NEWLINE:'\\n')",
            "      (s_mac_access_list_extended_tail",
            "        num = DEC:'10'",
            "        action = (access_list_action",
            "          PERMIT:'permit')",
            "        src = (access_list_mac_range",
            "          ANY:'any')",
            "        dst = (access_list_mac_range",
            "          address = MAC_ADDRESS_LITERAL:'0100.0CCC.CCCC'",
            "          wildcard = MAC_ADDRESS_LITERAL:'0000.0000.0000')",
            "        (mac_access_list_additional_feature",
            "          HEX:'0x8843')",
            "        NEWLINE:'\\n')",
            "      (s_mac_access_list_extended_tail",
            "        num = DEC:'20'",
            "        action = (access_list_action",
            "          DENY:'deny')",
            "        src = (access_list_mac_range",
            "          ANY:'any')",
            "        dst = (access_list_mac_range",
            "          ANY:'any')",
            "        (mac_access_list_additional_feature",
            "          IP:'ip')",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_mac_access_list_extended",
            "      MAC:'mac'",
            "      ACCESS_LIST:'access-list'",
            "      EXTENDED:'extended'",
            "      name = (variable_permissive",
            "        VARIABLE:'filtermac')",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_mac_access_list_extended",
            "      MAC:'mac'",
            "      ACCESS_LIST:'access-list'",
            "      name = (variable_permissive",
            "        VARIABLE:'ipmi_test')",
            "      NEWLINE:'\\n'",
            "      (s_mac_access_list_extended_tail",
            "        action = (access_list_action",
            "          PERMIT:'permit')",
            "        src = (access_list_mac_range",
            "          ANY:'any')",
            "        dst = (access_list_mac_range",
            "          ANY:'any')",
            "        vlan = DEC:'1031'",
            "        (mac_access_list_additional_feature",
            "          ETYPE:'etype'",
            "          (etype",
            "            ANY:'any'))",
            "        NEWLINE:'\\n')",
            "      (s_mac_access_list_extended_tail",
            "        action = (access_list_action",
            "          PERMIT:'permit')",
            "        src = (access_list_mac_range",
            "          ANY:'any')",
            "        dst = (access_list_mac_range",
            "          ANY:'any')",
            "        vlan_any = ANY:'any'",
            "        (mac_access_list_additional_feature",
            "          ETYPE:'etype'",
            "          (etype",
            "            ANY:'any'))",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_mac_access_list_extended",
            "      MAC:'mac'",
            "      ACCESS_LIST:'access-list'",
            "      name = (variable_permissive",
            "        VARIABLE:'STPDENY')",
            "      NEWLINE:'\\n'",
            "      (s_mac_access_list_extended_tail",
            "        SEQUENCE:'sequence'",
            "        num = DEC:'10'",
            "        action = (access_list_action",
            "          DENY:'deny')",
            "        src = (access_list_mac_range",
            "          ANY:'any')",
            "        dst = (access_list_mac_range",
            "          address = MAC_ADDRESS_LITERAL:'0100.0ccc.cccd'",
            "          wildcard = MAC_ADDRESS_LITERAL:'ffff.ffff.ffff')",
            "        vlan_any = ANY:'any'",
            "        (mac_access_list_additional_feature",
            "          ETYPE:'etype'",
            "          (etype",
            "            ANY:'any'))",
            "        NEWLINE:'\\n')",
            "      (s_mac_access_list_extended_tail",
            "        SEQUENCE:'sequence'",
            "        num = DEC:'20'",
            "        action = (access_list_action",
            "          PERMIT:'permit')",
            "        src = (access_list_mac_range",
            "          ANY:'any')",
            "        dst = (access_list_mac_range",
            "          ANY:'any')",
            "        vlan_any = ANY:'any'",
            "        (mac_access_list_additional_feature",
            "          ETYPE:'etype'",
            "          (etype",
            "            ANY:'any'))",
            "        NEWLINE:'\\n')",
            "      (s_mac_access_list_extended_tail",
            "        SEQUENCE:'sequence'",
            "        num = DEC:'30'",
            "        action = (access_list_action",
            "          DENY:'deny')",
            "        src = (access_list_mac_range",
            "          ANY:'any')",
            "        dst = (access_list_mac_range",
            "          address = MAC_ADDRESS_LITERAL:'0180.c200.000e'",
            "          wildcard = MAC_ADDRESS_LITERAL:'ffff.ffff.ffff')",
            "        vlan_any = ANY:'any'",
            "        (mac_access_list_additional_feature",
            "          ETYPE:'etype'",
            "          (etype",
            "            ANY:'any'))",
            "        NEWLINE:'\\n')))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/mos_interface" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'mos_interface'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_interface",
            "      INTERFACE:'interface'",
            "      iname = (interface_name",
            "        name_prefix_alpha = M_Interface_PREFIX:'ap'  <== mode:M_Interface",
            "        (range",
            "          (subrange",
            "            low = DEC:'1'  <== mode:M_Interface)))",
            "      NEWLINE:'\\n'  <== mode:M_Interface))",
            "  (stanza",
            "    (s_interface",
            "      INTERFACE:'interface'",
            "      iname = (interface_name",
            "        name_prefix_alpha = M_Interface_PREFIX:'et'  <== mode:M_Interface",
            "        (range",
            "          (subrange",
            "            low = DEC:'1'  <== mode:M_Interface)))",
            "      NEWLINE:'\\n'  <== mode:M_Interface",
            "      (if_inner",
            "        (if_null_block",
            "          SOURCE:'source'",
            "          VARIABLE:'et2'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_interface",
            "      INTERFACE:'interface'",
            "      iname = (interface_name",
            "        name_prefix_alpha = M_Interface_PREFIX:'et'  <== mode:M_Interface",
            "        (range",
            "          (subrange",
            "            low = DEC:'2'  <== mode:M_Interface)))",
            "      NEWLINE:'\\n'  <== mode:M_Interface",
            "      (if_inner",
            "        (if_null_block",
            "          NO:'no'",
            "          NEGOTIATION:'negotiation'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_single",
            "          PHY:'phy'",
            "          VARIABLE:'1ge'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          SOURCE:'source'",
            "          VARIABLE:'et1'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_speed_ios",
            "          SPEED:'speed'",
            "          mbits = DEC:'100'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_single",
            "          TRIMODE:'trimode'",
            "          SPEED:'speed'",
            "          FORCE:'force'",
            "          ONE_THOUSAND_FULL:'1000full'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_interface",
            "      INTERFACE:'interface'",
            "      iname = (interface_name",
            "        name_prefix_alpha = M_Interface_PREFIX:'ma'  <== mode:M_Interface",
            "        (range",
            "          (subrange",
            "            low = DEC:'1'  <== mode:M_Interface)))",
            "      NEWLINE:'\\n'  <== mode:M_Interface))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/mos_misc" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'mos_misc'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_ip_route_mos",
            "      IP:'ip'",
            "      ROUTE:'route'",
            "      IP_ADDRESS:'1.2.3.4'",
            "      DEV:'dev'",
            "      (interface_name",
            "        name_prefix_alpha = M_Interface_PREFIX:'ma'  <== mode:M_Interface",
            "        (range",
            "          (subrange",
            "            low = DEC:'2'  <== mode:M_Interface)))",
            "      NEWLINE:'\\n'  <== mode:M_Interface))",
            "  (stanza",
            "    (s_ip_route_mos",
            "      IP:'ip'",
            "      ROUTE:'route'",
            "      IP_ADDRESS:'2.3.4.5'",
            "      DEV:'dev'",
            "      (interface_name",
            "        name_prefix_alpha = M_Interface_PREFIX:'ma'  <== mode:M_Interface",
            "        (range",
            "          (subrange",
            "            low = DEC:'2'  <== mode:M_Interface)))",
            "      NEWLINE:'\\n'  <== mode:M_Interface))",
            "  (stanza",
            "    (s_logging",
            "      LOGGING:'logging'",
            "      (logging_common",
            "        (logging_host",
            "          HOST:'host'",
            "          hostname = (variable",
            "            IP_ADDRESS:'1.2.3.4')",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_ntp",
            "      NTP:'ntp'",
            "      (ntp_common",
            "        (ntp_server",
            "          SERVER:'server'",
            "          hostname = (variable",
            "            IP_ADDRESS:'1.2.3.4')",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_null",
            "      (null_block",
            "        PTP:'ptp'",
            "        (null_rest_of_line",
            "          VARIABLE:'slave'",
            "          VARIABLE:'ma2'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_null",
            "      (null_block",
            "        PTP:'ptp'",
            "        (null_rest_of_line",
            "          TTL:'ttl'",
            "          DEC:'8'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_tacacs_server",
            "      TACACS_SERVER:'tacacs-server'",
            "      (ts_host",
            "        HOST:'host'",
            "        hostname = IP_ADDRESS:'1.2.3.4'",
            "        (null_rest_of_line",
            "          KEY:'key'",
            "          DEC:'7'",
            "          VARIABLE:'0123456789ABCDEF0123456789AB'",
            "          NEWLINE:'\\n'))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/msdp_originator_id" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'msdp_originator_id'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (router_multicast_stanza",
            "      ROUTER:'router'",
            "      MSDP:'msdp'",
            "      NEWLINE:'\\n'",
            "      (router_multicast_tail",
            "        (null_inner",
            "          CONNECT_SOURCE:'connect-source'",
            "          (null_rest_of_line",
            "            VARIABLE:'Loopback0'",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          ORIGINATOR_ID:'originator-id'",
            "          (null_rest_of_line",
            "            VARIABLE:'Loopback0'",
            "            NEWLINE:'\\n'))",
            "        (rmc_null",
            "          MAXIMUM:'maximum'",
            "          (null_rest_of_line",
            "            VARIABLE:'external-sa'",
            "            DEC:'20000'",
            "            NEWLINE:'\\n'))",
            "        (peer_stanza",
            "          PEER:'peer'",
            "          IP_ADDRESS:'137.164.16.4'",
            "          NEWLINE:'\\n'",
            "          (mp_null",
            "            DESCRIPTION:'description'",
            "            (null_rest_of_line",
            "              RAW_TEXT:' DC:tri-agg2'  <== mode:M_Description",
            "              NEWLINE:'\\n'  <== mode:M_Description))",
            "          (mp_null",
            "            MESH_GROUP:'mesh-group'",
            "            (null_rest_of_line",
            "              INTERNAL:'internal'",
            "              NEWLINE:'\\n'))))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/named_and_numbered_lists" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'named_and_numbered_lists'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (route_map_stanza",
            "      ROUTE_MAP:'route-map'",
            "      name = (variable",
            "        VARIABLE:'foo'  <== mode:M_RouteMap)",
            "      rmt = (access_list_action",
            "        PERMIT:'permit')",
            "      num = DEC:'1'",
            "      NEWLINE:'\\n'",
            "      (rm_stanza",
            "        (match_rm_stanza",
            "          (match_ip_access_list_rm_stanza",
            "            MATCH:'match'",
            "            IP:'ip'",
            "            ADDRESS:'address'",
            "            (variable_access_list",
            "              DEC:'1')",
            "            (variable_access_list",
            "              DEC:'2')",
            "            (variable_access_list",
            "              VARIABLE:'abc123')",
            "            (variable_access_list",
            "              VARIABLE:'456def')",
            "            (variable_access_list",
            "              DEC:'5')",
            "            (variable_access_list",
            "              VARIABLE:'95qrs5')",
            "            (variable_access_list",
            "              DEC:'4')",
            "            (variable_access_list",
            "              VARIABLE:'a4')",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        END:'end'",
            "        NEWLINE:'\\n\\n')))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/neighbor_mix" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'neighbor_mix'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (router_bgp_stanza",
            "      ROUTER:'router'",
            "      BGP:'bgp'",
            "      procnum = (bgp_asn",
            "        asn = DEC:'1')",
            "      NEWLINE:'\\n'",
            "      (router_bgp_stanza_tail",
            "        (router_id_rb_stanza",
            "          BGP:'bgp'",
            "          (router_id_bgp_tail",
            "            ROUTER_ID:'router-id'",
            "            routerid = IP_ADDRESS:'10.10.10.10'",
            "            NEWLINE:'\\n')))",
            "      (router_bgp_stanza_tail",
            "        (neighbor_flat_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          ip = IP_ADDRESS:'1.1.1.1'  <== mode:M_NEIGHBOR",
            "          (remote_as_bgp_tail",
            "            REMOTE_AS:'remote-as'",
            "            remote = (bgp_asn",
            "              asn = DEC:'1')",
            "            NEWLINE:'\\n')))",
            "      (router_bgp_stanza_tail",
            "        (address_family_rb_stanza",
            "          (address_family_header",
            "            ADDRESS_FAMILY:'address-family'",
            "            af = (bgp_address_family",
            "              IPV4:'ipv4')",
            "            NEWLINE:'\\n')",
            "          (bgp_tail",
            "            (description_bgp_tail",
            "              (description_line",
            "                DESCRIPTION:'description'",
            "                text = RAW_TEXT:' neighbor-1-1-1-1-remote-as-1-af-ipv4-desc !nexus'  <== mode:M_Description",
            "                NEWLINE:'\\n'  <== mode:M_Description)))",
            "          (neighbor_flat_rb_stanza",
            "            NEIGHBOR:'neighbor'",
            "            ip = IP_ADDRESS:'3.3.3.3'  <== mode:M_NEIGHBOR",
            "            (remote_as_bgp_tail",
            "              REMOTE_AS:'remote-as'",
            "              remote = (bgp_asn",
            "                asn = DEC:'3')",
            "              NEWLINE:'\\n'))",
            "          (address_family_footer)))",
            "      (router_bgp_stanza_tail",
            "        (address_family_rb_stanza",
            "          (address_family_header",
            "            ADDRESS_FAMILY:'address-family'",
            "            af = (bgp_address_family",
            "              IPV4:'ipv4')",
            "            NEWLINE:'\\n')",
            "          (bgp_tail",
            "            (description_bgp_tail",
            "              (description_line",
            "                DESCRIPTION:'description'",
            "                text = RAW_TEXT:' neighbor-3-3-3-3-remote-as-3-af-ipv4-desc !nexus'  <== mode:M_Description",
            "                NEWLINE:'\\n'  <== mode:M_Description)))",
            "          (address_family_footer)))",
            "      (router_bgp_stanza_tail",
            "        (address_family_rb_stanza",
            "          (address_family_header",
            "            ADDRESS_FAMILY:'address-family'",
            "            af = (bgp_address_family",
            "              IPV6:'ipv6')",
            "            NEWLINE:'\\n')",
            "          (bgp_tail",
            "            (description_bgp_tail",
            "              (description_line",
            "                DESCRIPTION:'description'",
            "                text = RAW_TEXT:' neighbor-3-3-3-3-remote-as-3-af-ipv6-desc !nexus'  <== mode:M_Description",
            "                NEWLINE:'\\n'  <== mode:M_Description)))",
            "          (address_family_footer)))",
            "      (router_bgp_stanza_tail",
            "        (address_family_rb_stanza",
            "          (address_family_header",
            "            ADDRESS_FAMILY:'address-family'",
            "            af = (bgp_address_family",
            "              IPV4:'ipv4')",
            "            NEWLINE:'\\n')",
            "          (bgp_tail",
            "            (network_bgp_tail",
            "              NETWORK:'network'",
            "              ip = IP_ADDRESS:'5.5.5.5'",
            "              MASK:'mask'",
            "              mask = IP_ADDRESS:'255.255.255.255'",
            "              NEWLINE:'\\n'))",
            "          (address_family_footer)))",
            "      (router_bgp_stanza_tail",
            "        (router_id_rb_stanza",
            "          BGP:'bgp'",
            "          (router_id_bgp_tail",
            "            ROUTER_ID:'router-id'",
            "            routerid = IP_ADDRESS:'10.10.10.10'",
            "            NEWLINE:'\\n')))",
            "      (router_bgp_stanza_tail",
            "        (neighbor_flat_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          ip = IP_ADDRESS:'4.4.4.4'  <== mode:M_NEIGHBOR",
            "          (remote_as_bgp_tail",
            "            REMOTE_AS:'remote-as'",
            "            remote = (bgp_asn",
            "              asn = DEC:'4')",
            "            NEWLINE:'\\n')))",
            "      (router_bgp_stanza_tail",
            "        (address_family_rb_stanza",
            "          (address_family_header",
            "            ADDRESS_FAMILY:'address-family'",
            "            af = (bgp_address_family",
            "              IPV6:'ipv6')",
            "            NEWLINE:'\\n')",
            "          (bgp_tail",
            "            (description_bgp_tail",
            "              (description_line",
            "                DESCRIPTION:'description'",
            "                text = RAW_TEXT:' neighbor-4-4-4-4-remote-as-4-af-ipv6-desc !nexus'  <== mode:M_Description",
            "                NEWLINE:'\\n'  <== mode:M_Description)))",
            "          (address_family_footer)))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/neighbor_nxos" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_feature",
            "      FEATURE:'feature'",
            "      (variable",
            "        BGP:'bgp')",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'neighbor_nxos'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (router_bgp_stanza",
            "      ROUTER:'router'",
            "      BGP:'bgp'",
            "      procnum = (bgp_asn",
            "        asn = DEC:'2')",
            "      NEWLINE:'\\n'",
            "      (router_bgp_nxos_toplevel",
            "        (rbnx_proc_vrf_common",
            "          (rbnx_neighbor",
            "            NEIGHBOR:'neighbor'",
            "            prefix = IP_PREFIX:'10.1.1.0/25'  <== mode:M_NEIGHBOR",
            "            NEWLINE:'\\n'",
            "            (rbnx_n_inner",
            "              (rbnx_n_common",
            "                (rbnx_n_inherit",
            "                  INHERIT:'inherit'",
            "                  PEER:'peer'",
            "                  peer = (variable",
            "                    VARIABLE:'KLMN')",
            "                  NEWLINE:'\\n')))",
            "            (rbnx_n_inner",
            "              (rbnx_n_common",
            "                (rbnx_n_description",
            "                  DESCRIPTION:'description'",
            "                  desc = (variable",
            "                    RAW_TEXT:' 12345:ABCD:EFG:10.1.1.0/25:abc@def.ghi:123-456-7890 1:'  <== mode:M_Description)",
            "                  NEWLINE:'\\n'  <== mode:M_Description))))))))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        END:'end'",
            "        NEWLINE:'\\n\\n\\n')))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/network6" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'network6'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (router_bgp_stanza",
            "      ROUTER:'router'",
            "      BGP:'bgp'",
            "      procnum = (bgp_asn",
            "        asn = DEC:'1234')",
            "      NEWLINE:'\\n'",
            "      (router_bgp_stanza_tail",
            "        (address_family_rb_stanza",
            "          (address_family_header",
            "            ADDRESS_FAMILY:'address-family'",
            "            af = (bgp_address_family",
            "              IPV6:'ipv6')",
            "            NEWLINE:'\\n')",
            "          (bgp_tail",
            "            (network6_bgp_tail",
            "              NETWORK:'network'",
            "              prefix = IPV6_PREFIX:'1A01:111:A100:1001::/64'",
            "              NEWLINE:'\\n'))",
            "          (address_family_footer",
            "            EXIT_ADDRESS_FAMILY:'exit-address-family'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        END:'end'",
            "        NEWLINE:'\\n\\n')))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/nexus" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'nexus'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_configure",
            "      CONFIGURE:'configure'",
            "      (configure_null",
            "        (null_rest_of_line",
            "          SESSION:'session'",
            "          VARIABLE:'blah'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_null",
            "      (null_block",
            "        COMMIT:'commit'",
            "        (null_rest_of_line",
            "          NEWLINE:'\\n'))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/nexus_bgp" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'nexus_bgp'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_feature",
            "      FEATURE:'feature'",
            "      (variable",
            "        BGP:'bgp')",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (router_bgp_stanza",
            "      ROUTER:'router'",
            "      BGP:'bgp'",
            "      procnum = (bgp_asn",
            "        asn = DEC:'1')",
            "      NEWLINE:'\\n'",
            "      (router_bgp_nxos_toplevel",
            "        (rbnx_enforce_first_as",
            "          ENFORCE_FIRST_AS:'enforce-first-as'",
            "          NEWLINE:'\\n'))",
            "      (router_bgp_nxos_toplevel",
            "        (rbnx_event_history",
            "          EVENT_HISTORY:'event-history'",
            "          PERIODIC:'periodic'",
            "          NEWLINE:'\\n'))",
            "      (router_bgp_nxos_toplevel",
            "        (rbnx_event_history",
            "          EVENT_HISTORY:'event-history'",
            "          EVENTS:'events'",
            "          NEWLINE:'\\n'))",
            "      (router_bgp_nxos_toplevel",
            "        (rbnx_event_history",
            "          EVENT_HISTORY:'event-history'",
            "          CLI:'cli'",
            "          NEWLINE:'\\n'))",
            "      (router_bgp_nxos_toplevel",
            "        (rbnx_fast_external_fallover",
            "          FAST_EXTERNAL_FALLOVER:'fast-external-fallover'",
            "          NEWLINE:'\\n'))",
            "      (router_bgp_nxos_toplevel",
            "        (rbnx_proc_vrf_common",
            "          (rbnx_address_family",
            "            ADDRESS_FAMILY:'address-family'",
            "            first = IPV4:'ipv4'",
            "            second = UNICAST:'unicast'",
            "            NEWLINE:'\\n'",
            "            (rbnx_af_inner",
            "              (rbnx_af_client_to_client",
            "                CLIENT_TO_CLIENT:'client-to-client'",
            "                REFLECTION:'reflection'",
            "                NEWLINE:'\\n'))",
            "            (rbnx_af_inner",
            "              (rbnx_af_dampen_igp_metric",
            "                DAMPEN_IGP_METRIC:'dampen-igp-metric'",
            "                interval_secs = DEC:'600'",
            "                NEWLINE:'\\n'))",
            "            (rbnx_af_inner",
            "              (rbnx_af_distance",
            "                DISTANCE:'distance'",
            "                ebgp = DEC:'20'",
            "                ibgp = DEC:'200'",
            "                local = DEC:'220'",
            "                NEWLINE:'\\n'))",
            "            (rbnx_af_inner",
            "              (rbnx_af_redistribute_direct",
            "                REDISTRIBUTE:'redistribute'",
            "                DIRECT:'direct'",
            "                ROUTE_MAP:'route-map'",
            "                mapname = (variable",
            "                  VARIABLE:'BLOBB'  <== mode:M_RouteMap)",
            "                NEWLINE:'\\n'))",
            "            (rbnx_af_inner",
            "              (rbnx_af_maximum_paths",
            "                MAXIMUM_PATHS:'maximum-paths'",
            "                numpaths = DEC:'32'",
            "                NEWLINE:'\\n'))",
            "            (rbnx_af_inner",
            "              (rbnx_af_maximum_paths",
            "                MAXIMUM_PATHS:'maximum-paths'",
            "                IBGP:'ibgp'",
            "                numpaths = DEC:'32'",
            "                NEWLINE:'\\n'))",
            "            (rbnx_af_inner",
            "              (rbnx_af_network",
            "                NETWORK:'network'",
            "                prefix = IP_PREFIX:'1.2.3.0/24'",
            "                ROUTE_MAP:'route-map'",
            "                mapname = (variable",
            "                  VARIABLE:'BLIBB'  <== mode:M_RouteMap)",
            "                NEWLINE:'\\n'))",
            "            (rbnx_af_inner",
            "              (rbnx_af_nexthop_trigger_delay",
            "                NEXTHOP:'nexthop'",
            "                TRIGGER_DELAY:'trigger-delay'",
            "                CRITICAL:'critical'",
            "                critical = DEC:'3000'",
            "                NON_CRITICAL:'non-critical'",
            "                noncritical = DEC:'10000'",
            "                NEWLINE:'\\n')))))",
            "      (router_bgp_nxos_toplevel",
            "        (rbnx_proc_vrf_common",
            "          (rbnx_address_family",
            "            ADDRESS_FAMILY:'address-family'",
            "            first = IPV6:'ipv6'",
            "            second = UNICAST:'unicast'",
            "            NEWLINE:'\\n'",
            "            (rbnx_af_inner",
            "              (rbnx_af_network",
            "                NETWORK:'network'",
            "                prefix6 = IPV6_PREFIX:'::ffff:1.2.3.0/120'",
            "                ROUTE_MAP:'route-map'",
            "                mapname = (variable",
            "                  VARIABLE:'BLIB'  <== mode:M_RouteMap)",
            "                NEWLINE:'\\n')))))",
            "      (router_bgp_nxos_toplevel",
            "        (rbnx_template_peer",
            "          TEMPLATE:'template'",
            "          PEER:'peer'",
            "          peer = (variable",
            "            VARIABLE:'PEER_BLLF')",
            "          NEWLINE:'\\n'",
            "          (rbnx_n_inner",
            "            (rbnx_n_common",
            "              (rbnx_n_remote_as",
            "                REMOTE_AS:'remote-as'",
            "                (bgp_asn",
            "                  asn = DEC:'12345')",
            "                NEWLINE:'\\n')))",
            "          (rbnx_n_inner",
            "            (rbnx_n_common",
            "              (rbnx_n_dynamic_capability",
            "                DYNAMIC_CAPABILITY:'dynamic-capability'",
            "                NEWLINE:'\\n')))",
            "          (rbnx_n_inner",
            "            (rbnx_n_common",
            "              (rbnx_n_timers",
            "                TIMERS:'timers'",
            "                keepalive_secs = DEC:'4'",
            "                holdtime_secs = DEC:'12'",
            "                NEWLINE:'\\n')))",
            "          (rbnx_n_inner",
            "            (rbnx_n_address_family",
            "              ADDRESS_FAMILY:'address-family'",
            "              first = IPV4:'ipv4'",
            "              second = UNICAST:'unicast'",
            "              NEWLINE:'\\n'",
            "              (rbnx_n_af_inner",
            "                (rbnx_n_af_next_hop_third_party",
            "                  NEXT_HOP_THIRD_PARTY:'next-hop-third-party'",
            "                  NEWLINE:'\\n'))",
            "              (rbnx_n_af_inner",
            "                (rbnx_n_af_route_map",
            "                  ROUTE_MAP:'route-map'",
            "                  mapname = (variable",
            "                    VARIABLE:'IN_BBB'  <== mode:M_RouteMap)",
            "                  IN:'in'",
            "                  NEWLINE:'\\n'))",
            "              (rbnx_n_af_inner",
            "                (rbnx_n_af_route_map",
            "                  ROUTE_MAP:'route-map'",
            "                  mapname = (variable",
            "                    VARIABLE:'EG_CCC'  <== mode:M_RouteMap)",
            "                  OUT:'out'",
            "                  NEWLINE:'\\n'))",
            "              (rbnx_n_af_inner",
            "                (rbnx_n_af_send_community",
            "                  SEND_COMMUNITY:'send-community'",
            "                  BOTH:'both'",
            "                  NEWLINE:'\\n'))",
            "              (rbnx_n_af_inner",
            "                (rbnx_n_af_soft_reconfiguration",
            "                  SOFT_RECONFIGURATION:'soft-reconfiguration'",
            "                  INBOUND:'inbound'",
            "                  NEWLINE:'\\n\\n\\n'))))))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/nexus_ntp" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'nexus_ntp'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_ntp",
            "      NO:'no'",
            "      NTP:'ntp'",
            "      (ntp_common",
            "        (ntp_null",
            "          ALLOW:'allow'",
            "          (null_rest_of_line",
            "            CONTROL:'control'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_ntp",
            "      NO:'no'",
            "      NTP:'ntp'",
            "      (ntp_common",
            "        (ntp_null",
            "          PASSIVE:'passive'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_ntp",
            "      NTP:'ntp'",
            "      (ntp_common",
            "        (ntp_server",
            "          SERVER:'server'",
            "          hostname = (variable",
            "            IP_ADDRESS:'10.1.2.3')",
            "          USE_VRF:'use-vrf'",
            "          vrf = (variable",
            "            MANAGEMENT:'management')",
            "          KEY:'key'",
            "          key = DEC:'12345'",
            "          VERSION:'version'",
            "          ver = DEC:'2'",
            "          SOURCE:'source'",
            "          src_interface = (interface_name",
            "            VARIABLE:'Management1')",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_ntp",
            "      NTP:'ntp'",
            "      (ntp_common",
            "        (ntp_server",
            "          SERVER:'server'",
            "          hostname = (variable",
            "            IP_ADDRESS:'1.2.3.4')",
            "          MINPOLL:'minpoll'",
            "          DEC:'10'",
            "          SOURCE:'source'",
            "          src_interface = (interface_name",
            "            VARIABLE:'Loopback0')",
            "          NEWLINE:'\\n'))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/nexus_ssh" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'nexus_ssh'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_ssh",
            "      SSH:'ssh'",
            "      (ssh_null",
            "        KEY:'key'",
            "        (null_rest_of_line",
            "          RSA:'rsa'",
            "          DEC:'2048'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_ssh",
            "      SSH:'ssh'",
            "      (ssh_null",
            "        LOGIN_ATTEMPTS:'login-attempts'",
            "        (null_rest_of_line",
            "          DEC:'3'",
            "          NEWLINE:'\\n'))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/no_aaa_group_server" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'no_aaa_group_server'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (no_aaa_group_server_stanza",
            "      NO:'no'",
            "      AAA:'aaa'",
            "      GROUP:'group'",
            "      SERVER:'server'",
            "      (null_rest_of_line",
            "        TACACS_PLUS:'tacacs+'",
            "        TACACS:'tacacs'",
            "        NEWLINE:'\\n\\n')))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/non_nexus_neighbor_af" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'non_nexus_neighbor_af'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (router_bgp_stanza",
            "      ROUTER:'router'",
            "      BGP:'bgp'",
            "      procnum = (bgp_asn",
            "        asn = DEC:'2')",
            "      NEWLINE:'\\n'",
            "      (router_bgp_stanza_tail",
            "        (bgp_tail",
            "          (null_bgp_tail",
            "            BGP:'bgp'",
            "            LOG_NEIGHBOR_CHANGES:'log-neighbor-changes'",
            "            (null_rest_of_line",
            "              NEWLINE:'\\n'))))",
            "      (router_bgp_stanza_tail",
            "        (neighbor_flat_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          ip = IP_ADDRESS:'10.0.0.0'  <== mode:M_NEIGHBOR",
            "          (remote_as_bgp_tail",
            "            REMOTE_AS:'remote-as'",
            "            remote = (bgp_asn",
            "              asn = DEC:'1')",
            "            NEWLINE:'\\n')))",
            "      (router_bgp_stanza_tail",
            "        (address_family_rb_stanza",
            "          (address_family_header",
            "            ADDRESS_FAMILY:'address-family'",
            "            af = (bgp_address_family",
            "              IPV4:'ipv4')",
            "            NEWLINE:'\\n')",
            "          (neighbor_flat_rb_stanza",
            "            NEIGHBOR:'neighbor'",
            "            ip = IP_ADDRESS:'10.0.0.0'  <== mode:M_NEIGHBOR",
            "            (bgp_tail",
            "              (activate_bgp_tail",
            "                ACTIVATE:'activate'",
            "                NEWLINE:'\\n')))",
            "          (neighbor_flat_rb_stanza",
            "            NEIGHBOR:'neighbor'",
            "            ip = IP_ADDRESS:'10.0.0.0'  <== mode:M_NEIGHBOR",
            "            (bgp_tail",
            "              (null_bgp_tail",
            "                SOFT_RECONFIGURATION:'soft-reconfiguration'",
            "                (null_rest_of_line",
            "                  INBOUND:'inbound'",
            "                  NEWLINE:'\\n'))))",
            "          (bgp_tail",
            "            (null_bgp_tail",
            "              NO:'no'",
            "              AUTO_SUMMARY:'auto-summary'",
            "              (null_rest_of_line",
            "                NEWLINE:'\\n')))",
            "          (bgp_tail",
            "            (null_bgp_tail",
            "              NO:'no'",
            "              SYNCHRONIZATION:'synchronization'",
            "              (null_rest_of_line",
            "                NEWLINE:'\\n')))",
            "          (bgp_tail",
            "            (network_bgp_tail",
            "              NETWORK:'network'",
            "              ip = IP_ADDRESS:'192.168.100.100'",
            "              MASK:'mask'",
            "              mask = IP_ADDRESS:'255.255.255.255'",
            "              NEWLINE:'\\n'))",
            "          (address_family_footer",
            "            EXIT_ADDRESS_FAMILY:'exit-address-family'",
            "            NEWLINE:'\\n')))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/nxos_acl" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'nxos_acl'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (extended_access_list_stanza",
            "      IP:'ip'",
            "      ACCESS_LIST:'access-list'",
            "      shortname = (variable",
            "        EXTENDED:'extended')",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (extended_access_list_stanza",
            "      IP:'ip'",
            "      ACCESS_LIST:'access-list'",
            "      shortname = (variable",
            "        STANDARD:'standard')",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (extended_access_list_stanza",
            "      IP:'ip'",
            "      ACCESS_LIST:'access-list'",
            "      shortname = (variable",
            "        VARIABLE:'blah')",
            "      NEWLINE:'\\n'",
            "      (extended_access_list_tail",
            "        num = DEC:'10'",
            "        ala = (access_list_action",
            "          PERMIT:'permit')",
            "        prot = (protocol",
            "          IP:'ip')",
            "        srcipr = (access_list_ip_range",
            "          ANY:'any')",
            "        dstipr = (access_list_ip_range",
            "          ANY:'any')",
            "        NEWLINE:'\\n')))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/nxos_bgp" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'nxos_bgp'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_feature",
            "      FEATURE:'feature'",
            "      (variable",
            "        PRIVILEGE:'privilege')",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (router_bgp_stanza",
            "      ROUTER:'router'",
            "      BGP:'bgp'",
            "      procnum = (bgp_asn",
            "        asn = DEC:'1')",
            "      NEWLINE:'\\n'",
            "      (router_bgp_nxos_toplevel",
            "        (rbnx_proc_vrf_common",
            "          (rbnx_bestpath",
            "            BESTPATH:'bestpath'",
            "            AS_PATH:'as-path'",
            "            MULTIPATH_RELAX:'multipath-relax'  <== mode:M_AsPath",
            "            NEWLINE:'\\n')))",
            "      (router_bgp_nxos_toplevel",
            "        (rbnx_proc_vrf_common",
            "          (rbnx_bestpath",
            "            BESTPATH:'bestpath'",
            "            COMPARE_ROUTERID:'compare-routerid'",
            "            NEWLINE:'\\n')))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/nxos_interface" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'nxos_interface'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_feature",
            "      FEATURE:'feature'",
            "      (variable",
            "        PRIVILEGE:'privilege')",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_interface",
            "      INTERFACE:'interface'",
            "      iname = (interface_name",
            "        name_prefix_alpha = M_Interface_PREFIX:'Ethernet'  <== mode:M_Interface",
            "        DEC:'0'  <== mode:M_Interface",
            "        FORWARD_SLASH:'/'  <== mode:M_Interface",
            "        (range",
            "          (subrange",
            "            low = DEC:'0'  <== mode:M_Interface)))",
            "      NEWLINE:'\\n'  <== mode:M_Interface",
            "      (if_inner",
            "        (if_ip_address",
            "          IP:'ip'",
            "          ADDRESS:'address'",
            "          prefix = IP_PREFIX:'1.2.3.4/24'",
            "          ROUTE_PREFERENCE:'route-preference'",
            "          pref = DEC:'10'",
            "          TAG:'tag'",
            "          tag = DEC:'12345'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          LINK:'link'",
            "          VARIABLE:'debounce'",
            "          VARIABLE:'link-up'",
            "          TIME:'time'",
            "          DEC:'0'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_single",
            "          LINKDEBOUNCE:'linkdebounce'",
            "          TIME:'time'",
            "          DEC:'100'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          MDIX:'mdix'",
            "          AUTO:'auto'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_interface",
            "      INTERFACE:'interface'",
            "      iname = (interface_name",
            "        name_prefix_alpha = M_Interface_PREFIX:'nve'  <== mode:M_Interface",
            "        (range",
            "          (subrange",
            "            low = DEC:'1'  <== mode:M_Interface)))",
            "      NEWLINE:'\\n'  <== mode:M_Interface",
            "      (if_inner",
            "        (if_shutdown",
            "          NO:'no'",
            "          SHUTDOWN:'shutdown'",
            "          NEWLINE:'\\n'))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/nxos_misc" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'nxos_misc'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_feature",
            "      FEATURE:'feature'",
            "      (variable",
            "        PRIVILEGE:'privilege')",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        IP:'ip'",
            "        ARP:'arp'",
            "        VARIABLE:'inspection'",
            "        VARIABLE:'log-buffer'",
            "        VARIABLE:'entries'",
            "        DEC:'23'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        NO:'no'",
            "        IP:'ip'",
            "        ARP:'arp'",
            "        VARIABLE:'inspection'",
            "        VARIABLE:'validate'",
            "        VARIABLE:'src-mac'",
            "        VARIABLE:'dst-mac'",
            "        IP:'ip'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        USERPASSPHRASE:'userpassphrase'",
            "        VARIABLE:'default-gracetime'",
            "        DEC:'12'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        USERPASSPHRASE:'userpassphrase'",
            "        VARIABLE:'default-lifetime'",
            "        DEC:'12'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        USERPASSPHRASE:'userpassphrase'",
            "        VARIABLE:'default-warntime'",
            "        DEC:'12'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        USERPASSPHRASE:'userpassphrase'",
            "        VARIABLE:'min-length'",
            "        DEC:'23'",
            "        VARIABLE:'max-length'",
            "        DEC:'45'",
            "        NEWLINE:'\\n')))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/nxos_ospf" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'nxos_ospf'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_feature",
            "      FEATURE:'feature'",
            "      (variable",
            "        PRIVILEGE:'privilege')",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_interface",
            "      INTERFACE:'interface'",
            "      iname = (interface_name",
            "        name_prefix_alpha = M_Interface_PREFIX:'ethernet'  <== mode:M_Interface",
            "        DEC:'0'  <== mode:M_Interface",
            "        FORWARD_SLASH:'/'  <== mode:M_Interface",
            "        (range",
            "          (subrange",
            "            low = DEC:'0'  <== mode:M_Interface)))",
            "      NEWLINE:'\\n'  <== mode:M_Interface",
            "      (if_inner",
            "        (if_ip_ospf_area",
            "          IP:'ip'",
            "          OSPF:'ospf'",
            "          procname = (variable",
            "            DEC:'1')",
            "          AREA:'area'",
            "          area = DEC:'1'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_ip_address",
            "          IP:'ip'",
            "          ADDRESS:'address'",
            "          prefix = IP_PREFIX:'1.1.1.2/31'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_router_ospf",
            "      ROUTER:'router'",
            "      OSPF:'ospf'",
            "      name = (variable",
            "        VARIABLE:'ignored')",
            "      NEWLINE:'\\n'",
            "      (ro_router_id",
            "        ROUTER_ID:'router-id'",
            "        ip = IP_ADDRESS:'5.6.7.8'",
            "        NEWLINE:'\\n')",
            "      (ro_vrf",
            "        VRF:'vrf'",
            "        name = (variable",
            "          VARIABLE:'OTHER')",
            "        NEWLINE:'\\n'",
            "        (ro_max_metric",
            "          MAX_METRIC:'max-metric'",
            "          ROUTER_LSA:'router-lsa'",
            "          external_lsa = EXTERNAL_LSA:'external-lsa'",
            "          on_startup = ON_STARTUP:'on-startup'",
            "          DEC:'111'",
            "          wait_for_bgp = WAIT_FOR:'wait-for'",
            "          BGP:'bgp'",
            "          bgptag = (variable_max_metric",
            "            DEC:'12345')",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_router_ospf",
            "      ROUTER:'router'",
            "      OSPF:'ospf'",
            "      name = (variable",
            "        DEC:'1')",
            "      NEWLINE:'\\n'",
            "      (ro_router_id",
            "        ROUTER_ID:'router-id'",
            "        ip = IP_ADDRESS:'1.2.3.4'",
            "        NEWLINE:'\\n')",
            "      (ro_vrf",
            "        VRF:'vrf'",
            "        name = (variable",
            "          VARIABLE:'OTHER')",
            "        NEWLINE:'\\n'",
            "        (ro_max_metric",
            "          MAX_METRIC:'max-metric'",
            "          ROUTER_LSA:'router-lsa'",
            "          external_lsa = EXTERNAL_LSA:'external-lsa'",
            "          on_startup = ON_STARTUP:'on-startup'",
            "          DEC:'86400'",
            "          wait_for_bgp = WAIT_FOR:'wait-for'",
            "          BGP:'bgp'",
            "          bgptag = (variable_max_metric",
            "            DEC:'12345')",
            "          NEWLINE:'\\n')",
            "        (ro_redistribute_connected",
            "          REDISTRIBUTE:'redistribute'",
            "          DIRECT:'direct'",
            "          ROUTE_MAP:'route-map'",
            "          map = VARIABLE:'RM_OSPF_DIRECT'  <== mode:M_RouteMap",
            "          NEWLINE:'\\n')",
            "        (ro_redistribute_static",
            "          REDISTRIBUTE:'redistribute'",
            "          STATIC:'static'",
            "          ROUTE_MAP:'route-map'",
            "          map = VARIABLE:'RM_OSPF_STATIC'  <== mode:M_RouteMap",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_router_ospf",
            "      ROUTER:'router'",
            "      OSPF:'ospf'",
            "      name = (variable",
            "        VARIABLE:'ignored')",
            "      NEWLINE:'\\n'",
            "      (ro_vrf",
            "        VRF:'vrf'",
            "        name = (variable",
            "          VARIABLE:'OTHER')",
            "        NEWLINE:'\\n'",
            "        (ro_redistribute_connected",
            "          REDISTRIBUTE:'redistribute'",
            "          DIRECT:'direct'",
            "          ROUTE_MAP:'route-map'",
            "          map = VARIABLE:'RM_OSPF_DIRECT'  <== mode:M_RouteMap",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_router_ospf",
            "      ROUTER:'router'",
            "      OSPF:'ospf'",
            "      name = (variable",
            "        DEC:'1')",
            "      NEWLINE:'\\n'",
            "      (ro_vrf",
            "        VRF:'vrf'",
            "        name = (variable",
            "          VARIABLE:'OTHER')",
            "        NEWLINE:'\\n')",
            "      (ro_area_stub",
            "        AREA:'area'",
            "        area_int = DEC:'1'",
            "        STUB:'stub'",
            "        NEWLINE:'\\n\\n')))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/nxos_route_map_continue" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'nxos_route_map_continue'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_feature",
            "      FEATURE:'feature'",
            "      (variable",
            "        PRIVILEGE:'privilege')",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (route_map_stanza",
            "      ROUTE_MAP:'route-map'",
            "      name = (variable",
            "        VARIABLE:'foobar'  <== mode:M_RouteMap)",
            "      rmt = (access_list_action",
            "        DENY:'deny')",
            "      num = DEC:'10'",
            "      NEWLINE:'\\n'",
            "      (rm_stanza",
            "        (match_rm_stanza",
            "          (match_tag_rm_stanza",
            "            MATCH:'match'",
            "            TAG:'tag'",
            "            DEC:'10'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (route_map_stanza",
            "      ROUTE_MAP:'route-map'",
            "      name = (variable",
            "        VARIABLE:'foobar'  <== mode:M_RouteMap)",
            "      rmt = (access_list_action",
            "        DENY:'deny')",
            "      num = DEC:'20'",
            "      NEWLINE:'\\n'",
            "      (rm_stanza",
            "        (match_rm_stanza",
            "          (match_tag_rm_stanza",
            "            MATCH:'match'",
            "            TAG:'tag'",
            "            DEC:'20'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (route_map_stanza",
            "      ROUTE_MAP:'route-map'",
            "      name = (variable",
            "        VARIABLE:'foobar'  <== mode:M_RouteMap)",
            "      rmt = (access_list_action",
            "        PERMIT:'permit')",
            "      num = DEC:'30'",
            "      NEWLINE:'\\n'",
            "      (rm_stanza",
            "        (match_rm_stanza",
            "          (match_tag_rm_stanza",
            "            MATCH:'match'",
            "            TAG:'tag'",
            "            DEC:'30'",
            "            NEWLINE:'\\n')))",
            "      (rm_stanza",
            "        (continue_rm_stanza",
            "          CONTINUE:'continue'",
            "          DEC:'50'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (route_map_stanza",
            "      ROUTE_MAP:'route-map'",
            "      name = (variable",
            "        VARIABLE:'foobar'  <== mode:M_RouteMap)",
            "      rmt = (access_list_action",
            "        DENY:'deny')",
            "      num = DEC:'40'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (route_map_stanza",
            "      ROUTE_MAP:'route-map'",
            "      name = (variable",
            "        VARIABLE:'foobar'  <== mode:M_RouteMap)",
            "      rmt = (access_list_action",
            "        PERMIT:'permit')",
            "      num = DEC:'50'",
            "      NEWLINE:'\\n'",
            "      (rm_stanza",
            "        (continue_rm_stanza",
            "          CONTINUE:'continue'",
            "          DEC:'60'",
            "          NEWLINE:'\\n'))",
            "      (rm_stanza",
            "        (set_rm_stanza",
            "          (set_community_additive_rm_stanza",
            "            SET:'set'",
            "            COMMUNITY:'community'",
            "            (community",
            "              STANDARD_COMMUNITY:'1:2')",
            "            (community",
            "              STANDARD_COMMUNITY:'3:4')",
            "            ADDITIVE:'additive'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (route_map_stanza",
            "      ROUTE_MAP:'route-map'",
            "      name = (variable",
            "        VARIABLE:'foobar'  <== mode:M_RouteMap)",
            "      rmt = (access_list_action",
            "        PERMIT:'permit')",
            "      num = DEC:'60'",
            "      NEWLINE:'\\n'",
            "      (rm_stanza",
            "        (match_rm_stanza",
            "          (match_tag_rm_stanza",
            "            MATCH:'match'",
            "            TAG:'tag'",
            "            DEC:'60'",
            "            NEWLINE:'\\n')))",
            "      (rm_stanza",
            "        (continue_rm_stanza",
            "          CONTINUE:'continue'",
            "          DEC:'70'",
            "          NEWLINE:'\\n'))",
            "      (rm_stanza",
            "        (set_rm_stanza",
            "          (set_local_preference_rm_stanza",
            "            SET:'set'",
            "            LOCAL_PREFERENCE:'local-preference'",
            "            pref = (int_expr",
            "              DEC:'150')",
            "            NEWLINE:'\\n')))",
            "      (rm_stanza",
            "        (set_rm_stanza",
            "          (set_community_additive_rm_stanza",
            "            SET:'set'",
            "            COMMUNITY:'community'",
            "            (community",
            "              STANDARD_COMMUNITY:'5:6')",
            "            (community",
            "              STANDARD_COMMUNITY:'7:8')",
            "            ADDITIVE:'additive'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (route_map_stanza",
            "      ROUTE_MAP:'route-map'",
            "      name = (variable",
            "        VARIABLE:'foobar'  <== mode:M_RouteMap)",
            "      rmt = (access_list_action",
            "        PERMIT:'permit')",
            "      num = DEC:'70'",
            "      NEWLINE:'\\n'",
            "      (rm_stanza",
            "        (match_rm_stanza",
            "          (match_tag_rm_stanza",
            "            MATCH:'match'",
            "            TAG:'tag'",
            "            DEC:'70'",
            "            NEWLINE:'\\n')))",
            "      (rm_stanza",
            "        (continue_rm_stanza",
            "          CONTINUE:'continue'",
            "          DEC:'80'",
            "          NEWLINE:'\\n'))",
            "      (rm_stanza",
            "        (set_rm_stanza",
            "          (set_local_preference_rm_stanza",
            "            SET:'set'",
            "            LOCAL_PREFERENCE:'local-preference'",
            "            pref = (int_expr",
            "              DEC:'200')",
            "            NEWLINE:'\\n')))",
            "      (rm_stanza",
            "        (set_rm_stanza",
            "          (set_community_additive_rm_stanza",
            "            SET:'set'",
            "            COMMUNITY:'community'",
            "            (community",
            "              STANDARD_COMMUNITY:'9:10')",
            "            (community",
            "              STANDARD_COMMUNITY:'11:12')",
            "            ADDITIVE:'additive'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (route_map_stanza",
            "      ROUTE_MAP:'route-map'",
            "      name = (variable",
            "        VARIABLE:'foobar'  <== mode:M_RouteMap)",
            "      rmt = (access_list_action",
            "        PERMIT:'permit')",
            "      num = DEC:'80'",
            "      NEWLINE:'\\n'",
            "      (rm_stanza",
            "        (match_rm_stanza",
            "          (match_tag_rm_stanza",
            "            MATCH:'match'",
            "            TAG:'tag'",
            "            DEC:'80'",
            "            NEWLINE:'\\n')))",
            "      (rm_stanza",
            "        (continue_rm_stanza",
            "          CONTINUE:'continue'",
            "          DEC:'90'",
            "          NEWLINE:'\\n'))",
            "      (rm_stanza",
            "        (set_rm_stanza",
            "          (set_local_preference_rm_stanza",
            "            SET:'set'",
            "            LOCAL_PREFERENCE:'local-preference'",
            "            pref = (int_expr",
            "              DEC:'250')",
            "            NEWLINE:'\\n')))",
            "      (rm_stanza",
            "        (set_rm_stanza",
            "          (set_community_additive_rm_stanza",
            "            SET:'set'",
            "            COMMUNITY:'community'",
            "            (community",
            "              STANDARD_COMMUNITY:'11:12')",
            "            (community",
            "              STANDARD_COMMUNITY:'13:14')",
            "            ADDITIVE:'additive'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (route_map_stanza",
            "      ROUTE_MAP:'route-map'",
            "      name = (variable",
            "        VARIABLE:'foobar'  <== mode:M_RouteMap)",
            "      rmt = (access_list_action",
            "        PERMIT:'permit')",
            "      num = DEC:'90'",
            "      NEWLINE:'\\n'",
            "      (rm_stanza",
            "        (match_rm_stanza",
            "          (match_tag_rm_stanza",
            "            MATCH:'match'",
            "            TAG:'tag'",
            "            DEC:'90'",
            "            NEWLINE:'\\n')))",
            "      (rm_stanza",
            "        (continue_rm_stanza",
            "          CONTINUE:'continue'",
            "          DEC:'100'",
            "          NEWLINE:'\\n'))",
            "      (rm_stanza",
            "        (set_rm_stanza",
            "          (set_local_preference_rm_stanza",
            "            SET:'set'",
            "            LOCAL_PREFERENCE:'local-preference'",
            "            pref = (int_expr",
            "              DEC:'300')",
            "            NEWLINE:'\\n')))",
            "      (rm_stanza",
            "        (set_rm_stanza",
            "          (set_community_additive_rm_stanza",
            "            SET:'set'",
            "            COMMUNITY:'community'",
            "            (community",
            "              STANDARD_COMMUNITY:'15:16')",
            "            (community",
            "              STANDARD_COMMUNITY:'17:18')",
            "            ADDITIVE:'additive'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (route_map_stanza",
            "      ROUTE_MAP:'route-map'",
            "      name = (variable",
            "        VARIABLE:'foobar'  <== mode:M_RouteMap)",
            "      rmt = (access_list_action",
            "        PERMIT:'permit')",
            "      num = DEC:'100'",
            "      NEWLINE:'\\n'",
            "      (rm_stanza",
            "        (match_rm_stanza",
            "          (match_tag_rm_stanza",
            "            MATCH:'match'",
            "            TAG:'tag'",
            "            DEC:'100'",
            "            NEWLINE:'\\n')))",
            "      (rm_stanza",
            "        (continue_rm_stanza",
            "          CONTINUE:'continue'",
            "          DEC:'120'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (route_map_stanza",
            "      ROUTE_MAP:'route-map'",
            "      name = (variable",
            "        VARIABLE:'foobar'  <== mode:M_RouteMap)",
            "      rmt = (access_list_action",
            "        PERMIT:'permit')",
            "      num = DEC:'110'",
            "      NEWLINE:'\\n'",
            "      (rm_stanza",
            "        (continue_rm_stanza",
            "          CONTINUE:'continue'",
            "          DEC:'120'",
            "          NEWLINE:'\\n'))",
            "      (rm_stanza",
            "        (set_rm_stanza",
            "          (set_local_preference_rm_stanza",
            "            SET:'set'",
            "            LOCAL_PREFERENCE:'local-preference'",
            "            pref = (int_expr",
            "              DEC:'100')",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (route_map_stanza",
            "      ROUTE_MAP:'route-map'",
            "      name = (variable",
            "        VARIABLE:'foobar'  <== mode:M_RouteMap)",
            "      rmt = (access_list_action",
            "        PERMIT:'permit')",
            "      num = DEC:'120'",
            "      NEWLINE:'\\n'",
            "      (rm_stanza",
            "        (match_rm_stanza",
            "          (match_tag_rm_stanza",
            "            MATCH:'match'",
            "            TAG:'tag'",
            "            DEC:'120'",
            "            NEWLINE:'\\n')))",
            "      (rm_stanza",
            "        (continue_rm_stanza",
            "          CONTINUE:'continue'",
            "          DEC:'130'",
            "          NEWLINE:'\\n'))",
            "      (rm_stanza",
            "        (set_rm_stanza",
            "          (set_local_preference_rm_stanza",
            "            SET:'set'",
            "            LOCAL_PREFERENCE:'local-preference'",
            "            pref = (int_expr",
            "              DEC:'5')",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (route_map_stanza",
            "      ROUTE_MAP:'route-map'",
            "      name = (variable",
            "        VARIABLE:'foobar'  <== mode:M_RouteMap)",
            "      rmt = (access_list_action",
            "        PERMIT:'permit')",
            "      num = DEC:'130'",
            "      NEWLINE:'\\n'",
            "      (rm_stanza",
            "        (match_rm_stanza",
            "          (match_tag_rm_stanza",
            "            MATCH:'match'",
            "            TAG:'tag'",
            "            DEC:'130'",
            "            NEWLINE:'\\n')))",
            "      (rm_stanza",
            "        (continue_rm_stanza",
            "          CONTINUE:'continue'",
            "          DEC:'140'",
            "          NEWLINE:'\\n'))",
            "      (rm_stanza",
            "        (set_rm_stanza",
            "          (set_local_preference_rm_stanza",
            "            SET:'set'",
            "            LOCAL_PREFERENCE:'local-preference'",
            "            pref = (int_expr",
            "              DEC:'50')",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (route_map_stanza",
            "      ROUTE_MAP:'route-map'",
            "      name = (variable",
            "        VARIABLE:'foobar'  <== mode:M_RouteMap)",
            "      rmt = (access_list_action",
            "        PERMIT:'permit')",
            "      num = DEC:'140'",
            "      NEWLINE:'\\n'",
            "      (rm_stanza",
            "        (match_rm_stanza",
            "          (match_tag_rm_stanza",
            "            MATCH:'match'",
            "            TAG:'tag'",
            "            DEC:'140'",
            "            NEWLINE:'\\n')))",
            "      (rm_stanza",
            "        (continue_rm_stanza",
            "          CONTINUE:'continue'",
            "          DEC:'150'",
            "          NEWLINE:'\\n'))",
            "      (rm_stanza",
            "        (set_rm_stanza",
            "          (set_local_preference_rm_stanza",
            "            SET:'set'",
            "            LOCAL_PREFERENCE:'local-preference'",
            "            pref = (int_expr",
            "              DEC:'100')",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (route_map_stanza",
            "      ROUTE_MAP:'route-map'",
            "      name = (variable",
            "        VARIABLE:'foobar'  <== mode:M_RouteMap)",
            "      rmt = (access_list_action",
            "        PERMIT:'permit')",
            "      num = DEC:'150'",
            "      NEWLINE:'\\n'",
            "      (rm_stanza",
            "        (match_rm_stanza",
            "          (match_tag_rm_stanza",
            "            MATCH:'match'",
            "            TAG:'tag'",
            "            DEC:'150'",
            "            NEWLINE:'\\n')))",
            "      (rm_stanza",
            "        (continue_rm_stanza",
            "          CONTINUE:'continue'",
            "          DEC:'160'",
            "          NEWLINE:'\\n'))",
            "      (rm_stanza",
            "        (set_rm_stanza",
            "          (set_local_preference_rm_stanza",
            "            SET:'set'",
            "            LOCAL_PREFERENCE:'local-preference'",
            "            pref = (int_expr",
            "              DEC:'150')",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (route_map_stanza",
            "      ROUTE_MAP:'route-map'",
            "      name = (variable",
            "        VARIABLE:'foobar'  <== mode:M_RouteMap)",
            "      rmt = (access_list_action",
            "        PERMIT:'permit')",
            "      num = DEC:'160'",
            "      NEWLINE:'\\n'",
            "      (rm_stanza",
            "        (match_rm_stanza",
            "          (match_tag_rm_stanza",
            "            MATCH:'match'",
            "            TAG:'tag'",
            "            DEC:'160'",
            "            NEWLINE:'\\n')))",
            "      (rm_stanza",
            "        (continue_rm_stanza",
            "          CONTINUE:'continue'",
            "          DEC:'170'",
            "          NEWLINE:'\\n'))",
            "      (rm_stanza",
            "        (set_rm_stanza",
            "          (set_local_preference_rm_stanza",
            "            SET:'set'",
            "            LOCAL_PREFERENCE:'local-preference'",
            "            pref = (int_expr",
            "              DEC:'200')",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (route_map_stanza",
            "      ROUTE_MAP:'route-map'",
            "      name = (variable",
            "        VARIABLE:'foobar'  <== mode:M_RouteMap)",
            "      rmt = (access_list_action",
            "        PERMIT:'permit')",
            "      num = DEC:'170'",
            "      NEWLINE:'\\n'",
            "      (rm_stanza",
            "        (match_rm_stanza",
            "          (match_tag_rm_stanza",
            "            MATCH:'match'",
            "            TAG:'tag'",
            "            DEC:'170'",
            "            NEWLINE:'\\n')))",
            "      (rm_stanza",
            "        (continue_rm_stanza",
            "          CONTINUE:'continue'",
            "          DEC:'180'",
            "          NEWLINE:'\\n'))",
            "      (rm_stanza",
            "        (set_rm_stanza",
            "          (set_local_preference_rm_stanza",
            "            SET:'set'",
            "            LOCAL_PREFERENCE:'local-preference'",
            "            pref = (int_expr",
            "              DEC:'250')",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (route_map_stanza",
            "      ROUTE_MAP:'route-map'",
            "      name = (variable",
            "        VARIABLE:'foobar'  <== mode:M_RouteMap)",
            "      rmt = (access_list_action",
            "        PERMIT:'permit')",
            "      num = DEC:'180'",
            "      NEWLINE:'\\n'",
            "      (rm_stanza",
            "        (match_rm_stanza",
            "          (match_tag_rm_stanza",
            "            MATCH:'match'",
            "            TAG:'tag'",
            "            DEC:'180'",
            "            NEWLINE:'\\n')))",
            "      (rm_stanza",
            "        (continue_rm_stanza",
            "          CONTINUE:'continue'",
            "          DEC:'190'",
            "          NEWLINE:'\\n'))",
            "      (rm_stanza",
            "        (set_rm_stanza",
            "          (set_local_preference_rm_stanza",
            "            SET:'set'",
            "            LOCAL_PREFERENCE:'local-preference'",
            "            pref = (int_expr",
            "              DEC:'300')",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (route_map_stanza",
            "      ROUTE_MAP:'route-map'",
            "      name = (variable",
            "        VARIABLE:'foobar'  <== mode:M_RouteMap)",
            "      rmt = (access_list_action",
            "        PERMIT:'permit')",
            "      num = DEC:'190'",
            "      NEWLINE:'\\n'",
            "      (rm_stanza",
            "        (match_rm_stanza",
            "          (match_tag_rm_stanza",
            "            MATCH:'match'",
            "            TAG:'tag'",
            "            DEC:'190'",
            "            NEWLINE:'\\n')))",
            "      (rm_stanza",
            "        (continue_rm_stanza",
            "          CONTINUE:'continue'",
            "          DEC:'200'",
            "          NEWLINE:'\\n'))",
            "      (rm_stanza",
            "        (set_rm_stanza",
            "          (set_local_preference_rm_stanza",
            "            SET:'set'",
            "            LOCAL_PREFERENCE:'local-preference'",
            "            pref = (int_expr",
            "              DEC:'350')",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (route_map_stanza",
            "      ROUTE_MAP:'route-map'",
            "      name = (variable",
            "        VARIABLE:'foobar'  <== mode:M_RouteMap)",
            "      rmt = (access_list_action",
            "        PERMIT:'permit')",
            "      num = DEC:'200'",
            "      NEWLINE:'\\n'",
            "      (rm_stanza",
            "        (match_rm_stanza",
            "          (match_tag_rm_stanza",
            "            MATCH:'match'",
            "            TAG:'tag'",
            "            DEC:'200'",
            "            NEWLINE:'\\n')))",
            "      (rm_stanza",
            "        (continue_rm_stanza",
            "          CONTINUE:'continue'",
            "          DEC:'210'",
            "          NEWLINE:'\\n'))",
            "      (rm_stanza",
            "        (set_rm_stanza",
            "          (set_local_preference_rm_stanza",
            "            SET:'set'",
            "            LOCAL_PREFERENCE:'local-preference'",
            "            pref = (int_expr",
            "              DEC:'500')",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (route_map_stanza",
            "      ROUTE_MAP:'route-map'",
            "      name = (variable",
            "        VARIABLE:'foobar'  <== mode:M_RouteMap)",
            "      rmt = (access_list_action",
            "        PERMIT:'permit')",
            "      num = DEC:'210'",
            "      NEWLINE:'\\n'",
            "      (rm_stanza",
            "        (match_rm_stanza",
            "          (match_tag_rm_stanza",
            "            MATCH:'match'",
            "            TAG:'tag'",
            "            DEC:'210'",
            "            NEWLINE:'\\n')))",
            "      (rm_stanza",
            "        (continue_rm_stanza",
            "          CONTINUE:'continue'",
            "          DEC:'220'",
            "          NEWLINE:'\\n'))",
            "      (rm_stanza",
            "        (set_rm_stanza",
            "          (set_local_preference_rm_stanza",
            "            SET:'set'",
            "            LOCAL_PREFERENCE:'local-preference'",
            "            pref = (int_expr",
            "              DEC:'1000')",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (route_map_stanza",
            "      ROUTE_MAP:'route-map'",
            "      name = (variable",
            "        VARIABLE:'foobar'  <== mode:M_RouteMap)",
            "      rmt = (access_list_action",
            "        PERMIT:'permit')",
            "      num = DEC:'220'",
            "      NEWLINE:'\\n'",
            "      (rm_stanza",
            "        (match_rm_stanza",
            "          (match_tag_rm_stanza",
            "            MATCH:'match'",
            "            TAG:'tag'",
            "            DEC:'220'",
            "            NEWLINE:'\\n')))",
            "      (rm_stanza",
            "        (continue_rm_stanza",
            "          CONTINUE:'continue'",
            "          DEC:'240'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (route_map_stanza",
            "      ROUTE_MAP:'route-map'",
            "      name = (variable",
            "        VARIABLE:'foobar'  <== mode:M_RouteMap)",
            "      rmt = (access_list_action",
            "        DENY:'deny')",
            "      num = DEC:'230'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (route_map_stanza",
            "      ROUTE_MAP:'route-map'",
            "      name = (variable",
            "        VARIABLE:'foobar'  <== mode:M_RouteMap)",
            "      rmt = (access_list_action",
            "        PERMIT:'permit')",
            "      num = DEC:'240'",
            "      NEWLINE:'\\n'",
            "      (rm_stanza",
            "        (match_rm_stanza",
            "          (match_tag_rm_stanza",
            "            MATCH:'match'",
            "            TAG:'tag'",
            "            DEC:'240'",
            "            NEWLINE:'\\n')))",
            "      (rm_stanza",
            "        (continue_rm_stanza",
            "          CONTINUE:'continue'",
            "          DEC:'250'",
            "          NEWLINE:'\\n'))",
            "      (rm_stanza",
            "        (set_rm_stanza",
            "          (set_community_additive_rm_stanza",
            "            SET:'set'",
            "            COMMUNITY:'community'",
            "            (community",
            "              STANDARD_COMMUNITY:'20:21')",
            "            ADDITIVE:'additive'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (route_map_stanza",
            "      ROUTE_MAP:'route-map'",
            "      name = (variable",
            "        VARIABLE:'foobar'  <== mode:M_RouteMap)",
            "      rmt = (access_list_action",
            "        PERMIT:'permit')",
            "      num = DEC:'250'",
            "      NEWLINE:'\\n'",
            "      (rm_stanza",
            "        (match_rm_stanza",
            "          (match_tag_rm_stanza",
            "            MATCH:'match'",
            "            TAG:'tag'",
            "            DEC:'250'",
            "            NEWLINE:'\\n')))",
            "      (rm_stanza",
            "        (continue_rm_stanza",
            "          CONTINUE:'continue'",
            "          DEC:'260'",
            "          NEWLINE:'\\n'))",
            "      (rm_stanza",
            "        (set_rm_stanza",
            "          (set_community_additive_rm_stanza",
            "            SET:'set'",
            "            COMMUNITY:'community'",
            "            (community",
            "              STANDARD_COMMUNITY:'22:23')",
            "            ADDITIVE:'additive'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (route_map_stanza",
            "      ROUTE_MAP:'route-map'",
            "      name = (variable",
            "        VARIABLE:'foobar'  <== mode:M_RouteMap)",
            "      rmt = (access_list_action",
            "        PERMIT:'permit')",
            "      num = DEC:'260'",
            "      NEWLINE:'\\n'",
            "      (rm_stanza",
            "        (match_rm_stanza",
            "          (match_tag_rm_stanza",
            "            MATCH:'match'",
            "            TAG:'tag'",
            "            DEC:'260'",
            "            NEWLINE:'\\n')))",
            "      (rm_stanza",
            "        (continue_rm_stanza",
            "          CONTINUE:'continue'",
            "          DEC:'270'",
            "          NEWLINE:'\\n'))",
            "      (rm_stanza",
            "        (set_rm_stanza",
            "          (set_community_additive_rm_stanza",
            "            SET:'set'",
            "            COMMUNITY:'community'",
            "            (community",
            "              STANDARD_COMMUNITY:'24:25')",
            "            ADDITIVE:'additive'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (route_map_stanza",
            "      ROUTE_MAP:'route-map'",
            "      name = (variable",
            "        VARIABLE:'foobar'  <== mode:M_RouteMap)",
            "      rmt = (access_list_action",
            "        PERMIT:'permit')",
            "      num = DEC:'270'",
            "      NEWLINE:'\\n'",
            "      (rm_stanza",
            "        (match_rm_stanza",
            "          (match_tag_rm_stanza",
            "            MATCH:'match'",
            "            TAG:'tag'",
            "            DEC:'270'",
            "            NEWLINE:'\\n')))",
            "      (rm_stanza",
            "        (continue_rm_stanza",
            "          CONTINUE:'continue'",
            "          DEC:'280'",
            "          NEWLINE:'\\n'))",
            "      (rm_stanza",
            "        (set_rm_stanza",
            "          (set_community_additive_rm_stanza",
            "            SET:'set'",
            "            COMMUNITY:'community'",
            "            (community",
            "              STANDARD_COMMUNITY:'26:27')",
            "            ADDITIVE:'additive'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (route_map_stanza",
            "      ROUTE_MAP:'route-map'",
            "      name = (variable",
            "        VARIABLE:'foobar'  <== mode:M_RouteMap)",
            "      rmt = (access_list_action",
            "        PERMIT:'permit')",
            "      num = DEC:'280'",
            "      NEWLINE:'\\n'",
            "      (rm_stanza",
            "        (match_rm_stanza",
            "          (match_tag_rm_stanza",
            "            MATCH:'match'",
            "            TAG:'tag'",
            "            DEC:'280'",
            "            NEWLINE:'\\n')))",
            "      (rm_stanza",
            "        (continue_rm_stanza",
            "          CONTINUE:'continue'",
            "          DEC:'290'",
            "          NEWLINE:'\\n'))",
            "      (rm_stanza",
            "        (set_rm_stanza",
            "          (set_community_additive_rm_stanza",
            "            SET:'set'",
            "            COMMUNITY:'community'",
            "            (community",
            "              STANDARD_COMMUNITY:'28:29')",
            "            ADDITIVE:'additive'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (route_map_stanza",
            "      ROUTE_MAP:'route-map'",
            "      name = (variable",
            "        VARIABLE:'foobar'  <== mode:M_RouteMap)",
            "      rmt = (access_list_action",
            "        PERMIT:'permit')",
            "      num = DEC:'290'",
            "      NEWLINE:'\\n'",
            "      (rm_stanza",
            "        (match_rm_stanza",
            "          (match_tag_rm_stanza",
            "            MATCH:'match'",
            "            TAG:'tag'",
            "            DEC:'290'",
            "            NEWLINE:'\\n')))",
            "      (rm_stanza",
            "        (continue_rm_stanza",
            "          CONTINUE:'continue'",
            "          DEC:'300'",
            "          NEWLINE:'\\n'))",
            "      (rm_stanza",
            "        (set_rm_stanza",
            "          (set_community_additive_rm_stanza",
            "            SET:'set'",
            "            COMMUNITY:'community'",
            "            (community",
            "              STANDARD_COMMUNITY:'30:31')",
            "            ADDITIVE:'additive'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (route_map_stanza",
            "      ROUTE_MAP:'route-map'",
            "      name = (variable",
            "        VARIABLE:'foobar'  <== mode:M_RouteMap)",
            "      rmt = (access_list_action",
            "        PERMIT:'permit')",
            "      num = DEC:'300'",
            "      NEWLINE:'\\n'",
            "      (rm_stanza",
            "        (continue_rm_stanza",
            "          CONTINUE:'continue'",
            "          DEC:'310'",
            "          NEWLINE:'\\n'))",
            "      (rm_stanza",
            "        (set_rm_stanza",
            "          (set_as_path_prepend_rm_stanza",
            "            SET:'set'",
            "            AS_PATH:'as-path'",
            "            PREPEND:'prepend'  <== mode:M_AsPath",
            "            (as_expr",
            "              DEC:'65000')",
            "            (as_expr",
            "              DEC:'65000')",
            "            (as_expr",
            "              DEC:'65000')",
            "            (as_expr",
            "              DEC:'65000')",
            "            (as_expr",
            "              DEC:'65000')",
            "            (as_expr",
            "              DEC:'65000')",
            "            (as_expr",
            "              DEC:'65000')",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (route_map_stanza",
            "      ROUTE_MAP:'route-map'",
            "      name = (variable",
            "        VARIABLE:'foobar'  <== mode:M_RouteMap)",
            "      rmt = (access_list_action",
            "        PERMIT:'permit')",
            "      num = DEC:'310'",
            "      NEWLINE:'\\n'))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/nxos_system" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'nxos_system'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_feature",
            "      FEATURE:'feature'",
            "      (variable",
            "        PRIVILEGE:'privilege')",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_system",
            "      NO:'no'",
            "      SYSTEM:'system'",
            "      (system_null",
            "        INTERFACE:'interface'",
            "        (null_rest_of_line",
            "          SHUTDOWN:'shutdown'  <== mode:M_Interface",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_system",
            "      NO:'no'",
            "      SYSTEM:'system'",
            "      (system_null",
            "        MODE:'mode'",
            "        (null_rest_of_line",
            "          MAINTENANCE:'maintenance'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_system",
            "      SYSTEM:'system'",
            "      (system_qos",
            "        QOS:'qos'",
            "        NEWLINE:'\\n'",
            "        (system_qos_null",
            "          FEX:'fex'",
            "          (null_rest_of_line",
            "            QUEUE_LIMIT:'queue-limit'",
            "            NEWLINE:'\\n'))",
            "        (system_qos_null",
            "          SERVICE_POLICY:'service-policy'",
            "          (null_rest_of_line",
            "            TYPE:'type'",
            "            QUEUING:'queuing'",
            "            INPUT:'input'",
            "            VARIABLE:'default-in-policy'",
            "            NEWLINE:'\\n'))",
            "        (system_qos_null",
            "          SERVICE_POLICY:'service-policy'",
            "          (null_rest_of_line",
            "            TYPE:'type'",
            "            QUEUING:'queuing'",
            "            OUTPUT:'output'",
            "            VARIABLE:'default-out-policy'",
            "            NEWLINE:'\\n'))",
            "        (system_qos_null",
            "          SERVICE_POLICY:'service-policy'",
            "          (null_rest_of_line",
            "            TYPE:'type'",
            "            NETWORK_QOS:'network-qos'",
            "            JUMBO:'jumbo'",
            "            NEWLINE:'\\n')))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/openflow" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      OPENFLOW:'openflow'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_openflow",
            "      OPENFLOW:'openflow'",
            "      (null_rest_of_line",
            "        NEWLINE:'\\n')",
            "      (of_null",
            "        DESCRIPTION:'description'",
            "        (null_rest_of_line",
            "          RAW_TEXT:' dmfilter:F01C01'  <== mode:M_Description",
            "          NEWLINE:'\\n'  <== mode:M_Description))",
            "      (of_null",
            "        CONTROLLER:'controller'",
            "        (null_rest_of_line",
            "          M_Interface_PREFIX:'tcp'  <== mode:M_Interface",
            "          COLON:':'  <== mode:M_Interface",
            "          DEC:'10'  <== mode:M_Interface",
            "          PERIOD:'.'  <== mode:M_Interface",
            "          DEC:'1'  <== mode:M_Interface",
            "          PERIOD:'.'  <== mode:M_Interface",
            "          DEC:'168'  <== mode:M_Interface",
            "          PERIOD:'.'  <== mode:M_Interface",
            "          DEC:'218'  <== mode:M_Interface",
            "          COLON:':'  <== mode:M_Interface",
            "          DEC:'6633'  <== mode:M_Interface",
            "          NEWLINE:'\\n'  <== mode:M_Interface))",
            "      (of_null",
            "        BIND:'bind'",
            "        (null_rest_of_line",
            "          INTERFACE:'interface'",
            "          M_Interface_PREFIX:'Ethernet'  <== mode:M_Interface",
            "          DEC:'1'  <== mode:M_Interface",
            "          NEWLINE:'\\n'  <== mode:M_Interface))",
            "      (of_null",
            "        DEFAULT_ACTION:'default-action'",
            "        (null_rest_of_line",
            "          DROP:'drop'",
            "          NEWLINE:'\\n'))",
            "      (of_null",
            "        ENABLE:'enable'",
            "        (null_rest_of_line",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        END:'end'",
            "        NEWLINE:'\\n\\n')))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/peer_template" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'peer_template'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_feature",
            "      FEATURE:'feature'",
            "      (variable",
            "        BGP:'bgp')",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (router_bgp_stanza",
            "      ROUTER:'router'",
            "      BGP:'bgp'",
            "      procnum = (bgp_asn",
            "        asn = DEC:'64601')",
            "      NEWLINE:'\\n'",
            "      (router_bgp_nxos_toplevel",
            "        (rbnx_proc_vrf_common",
            "          (rbnx_address_family",
            "            ADDRESS_FAMILY:'address-family'",
            "            first = IPV4:'ipv4'",
            "            second = UNICAST:'unicast'",
            "            NEWLINE:'\\n'",
            "            (rbnx_af_inner",
            "              (rbnx_af_network",
            "                NETWORK:'network'",
            "                prefix = IP_PREFIX:'10.98.25.0/25'",
            "                NEWLINE:'\\n'))",
            "            (rbnx_af_inner",
            "              (rbnx_af_network",
            "                NETWORK:'network'",
            "                prefix = IP_PREFIX:'100.78.0.0/29'",
            "                NEWLINE:'\\n'))",
            "            (rbnx_af_inner",
            "              (rbnx_af_network",
            "                NETWORK:'network'",
            "                prefix = IP_PREFIX:'100.78.3.0/29'",
            "                NEWLINE:'\\n'))",
            "            (rbnx_af_inner",
            "              (rbnx_af_network",
            "                NETWORK:'network'",
            "                prefix = IP_PREFIX:'100.93.104.127/32'",
            "                NEWLINE:'\\n'))",
            "            (rbnx_af_inner",
            "              (rbnx_af_maximum_paths",
            "                MAXIMUM_PATHS:'maximum-paths'",
            "                numpaths = DEC:'16'",
            "                NEWLINE:'\\n'))",
            "            (rbnx_af_inner",
            "              (rbnx_af_maximum_paths",
            "                MAXIMUM_PATHS:'maximum-paths'",
            "                IBGP:'ibgp'",
            "                numpaths = DEC:'16'",
            "                NEWLINE:'\\n')))))",
            "      (router_bgp_nxos_toplevel",
            "        (rbnx_template_peer",
            "          TEMPLATE:'template'",
            "          PEER:'peer'",
            "          peer = (variable",
            "            VARIABLE:'RAAS')",
            "          NEWLINE:'\\n'",
            "          (rbnx_n_inner",
            "            (rbnx_n_common",
            "              (rbnx_n_remote_as",
            "                REMOTE_AS:'remote-as'",
            "                (bgp_asn",
            "                  asn = DEC:'65511')",
            "                NEWLINE:'\\n')))",
            "          (rbnx_n_inner",
            "            (rbnx_n_common",
            "              (rbnx_n_update_source",
            "                UPDATE_SOURCE:'update-source'",
            "                (interface_name",
            "                  name_prefix_alpha = M_Interface_PREFIX:'loopback'  <== mode:M_Interface",
            "                  (range",
            "                    (subrange",
            "                      low = DEC:'1'  <== mode:M_Interface)))",
            "                NEWLINE:'\\n'  <== mode:M_Interface)))",
            "          (rbnx_n_inner",
            "            (rbnx_n_common",
            "              (rbnx_n_ebgp_multihop",
            "                EBGP_MULTIHOP:'ebgp-multihop'",
            "                ebgp_ttl = DEC:'2'",
            "                NEWLINE:'\\n')))",
            "          (rbnx_n_inner",
            "            (rbnx_n_address_family",
            "              ADDRESS_FAMILY:'address-family'",
            "              first = IPV4:'ipv4'",
            "              second = UNICAST:'unicast'",
            "              NEWLINE:'\\n'",
            "              (rbnx_n_af_inner",
            "                (rbnx_n_af_route_map",
            "                  ROUTE_MAP:'route-map'",
            "                  mapname = (variable",
            "                    VARIABLE:'PROTECT-LEAF'  <== mode:M_RouteMap)",
            "                  IN:'in'",
            "                  NEWLINE:'\\n'))",
            "              (rbnx_n_af_inner",
            "                (rbnx_n_af_maximum_prefix",
            "                  MAXIMUM_PREFIX:'maximum-prefix'",
            "                  limit = DEC:'8000'",
            "                  threshold_pct = DEC:'90'",
            "                  NEWLINE:'\\n'))))))",
            "      (router_bgp_nxos_toplevel",
            "        (rbnx_template_peer",
            "          TEMPLATE:'template'",
            "          PEER:'peer'",
            "          peer = (variable",
            "            VARIABLE:'SPINE')",
            "          NEWLINE:'\\n'",
            "          (rbnx_n_inner",
            "            (rbnx_n_common",
            "              (rbnx_n_remote_as",
            "                REMOTE_AS:'remote-as'",
            "                (bgp_asn",
            "                  asn = DEC:'64802')",
            "                NEWLINE:'\\n')))",
            "          (rbnx_n_inner",
            "            (rbnx_n_address_family",
            "              ADDRESS_FAMILY:'address-family'",
            "              first = IPV4:'ipv4'",
            "              second = UNICAST:'unicast'",
            "              NEWLINE:'\\n'",
            "              (rbnx_n_af_inner",
            "                (rbnx_n_af_allowas_in",
            "                  ALLOWAS_IN:'allowas-in'",
            "                  num = DEC:'1'",
            "                  NEWLINE:'\\n'))))))",
            "      (router_bgp_nxos_toplevel",
            "        (rbnx_proc_vrf_common",
            "          (rbnx_neighbor",
            "            NEIGHBOR:'neighbor'",
            "            ip = IP_ADDRESS:'100.93.100.16'  <== mode:M_NEIGHBOR",
            "            NEWLINE:'\\n'",
            "            (rbnx_n_inner",
            "              (rbnx_n_common",
            "                (rbnx_n_inherit",
            "                  INHERIT:'inherit'",
            "                  PEER:'peer'",
            "                  peer = (variable",
            "                    VARIABLE:'SPINE')",
            "                  NEWLINE:'\\n')))",
            "            (rbnx_n_inner",
            "              (rbnx_n_common",
            "                (rbnx_n_description",
            "                  DESCRIPTION:'description'",
            "                  desc = (variable",
            "                    RAW_TEXT:' a simple inheritance example'  <== mode:M_Description)",
            "                  NEWLINE:'\\n'  <== mode:M_Description))))))",
            "      (router_bgp_nxos_toplevel",
            "        (rbnx_proc_vrf_common",
            "          (rbnx_neighbor",
            "            NEIGHBOR:'neighbor'",
            "            prefix = IP_PREFIX:'10.98.25.0/25'  <== mode:M_NEIGHBOR",
            "            NEWLINE:'\\n'",
            "            (rbnx_n_inner",
            "              (rbnx_n_common",
            "                (rbnx_n_inherit",
            "                  INHERIT:'inherit'",
            "                  PEER:'peer'",
            "                  peer = (variable",
            "                    VARIABLE:'RAAS')",
            "                  NEWLINE:'\\n')))",
            "            (rbnx_n_inner",
            "              (rbnx_n_common",
            "                (rbnx_n_description",
            "                  DESCRIPTION:'description'",
            "                  desc = (variable",
            "                    RAW_TEXT:' inheritance in which the neighbor is a prefix'  <== mode:M_Description)",
            "                  NEWLINE:'\\n'  <== mode:M_Description)))",
            "            (rbnx_n_inner",
            "              (rbnx_n_common",
            "                (rbnx_n_maximum_peers",
            "                  MAXIMUM_PEERS:'maximum-peers'",
            "                  max = DEC:'32'",
            "                  NEWLINE:'\\n'))))))))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        END:'end'",
            "        NEWLINE:'\\n\\n')))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/pim" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      PIM:'pim'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (router_multicast_stanza",
            "      ROUTER:'router'",
            "      PIM:'pim'",
            "      NEWLINE:'\\n'",
            "      (router_multicast_tail",
            "        (null_inner",
            "          RP_ADDRESS:'rp-address'",
            "          (null_rest_of_line",
            "            IP_ADDRESS:'137.164.17.1'",
            "            NEWLINE:'\\n'))",
            "        (address_family_multicast_stanza",
            "          ADDRESS_FAMILY:'address-family'",
            "          IPV4:'ipv4'",
            "          NEWLINE:'\\n'",
            "          (address_family_multicast_tail",
            "            (ip_pim_tail",
            "              (pim_rp_address",
            "                RP_ADDRESS:'rp-address'",
            "                IP_ADDRESS:'137.164.16.1'",
            "                OVERRIDE:'override'",
            "                NEWLINE:'\\n'))",
            "            (ip_pim_tail",
            "              (pim_null",
            "                RPF_VECTOR:'rpf-vector'",
            "                (null_rest_of_line",
            "                  NEWLINE:'\\n')))))",
            "        (null_inner",
            "          LOG:'log'",
            "          (null_rest_of_line",
            "            NEIGHBOR:'neighbor'",
            "            CHANGES:'changes'  <== mode:M_NEIGHBOR",
            "            NEWLINE:'\\n'))",
            "        (interface_multicast_stanza",
            "          INTERFACE:'interface'",
            "          (interface_name",
            "            name_prefix_alpha = M_Interface_PREFIX:'Bundle-Ether'  <== mode:M_Interface",
            "            (range",
            "              (subrange",
            "                low = DEC:'5'  <== mode:M_Interface)))",
            "          NEWLINE:'\\n'  <== mode:M_Interface",
            "          (interface_multicast_tail",
            "            BSR_BORDER:'bsr-border'",
            "            (null_rest_of_line",
            "              NEWLINE:'\\n'))",
            "          (interface_multicast_tail",
            "            DR_PRIORITY:'dr-priority'",
            "            (null_rest_of_line",
            "              DEC:'200'",
            "              NEWLINE:'\\n')))",
            "        (interface_multicast_stanza",
            "          INTERFACE:'interface'",
            "          (interface_name",
            "            name_prefix_alpha = M_Interface_PREFIX:'Bundle-Ether'  <== mode:M_Interface",
            "            (range",
            "              (subrange",
            "                low = DEC:'6'  <== mode:M_Interface)))",
            "          NEWLINE:'\\n'  <== mode:M_Interface",
            "          (interface_multicast_tail",
            "            BSR_BORDER:'bsr-border'",
            "            (null_rest_of_line",
            "              NEWLINE:'\\n'))",
            "          (interface_multicast_tail",
            "            DISABLE:'disable'",
            "            (null_rest_of_line",
            "              NEWLINE:'\\n')))",
            "        (interface_multicast_stanza",
            "          INTERFACE:'interface'",
            "          (interface_name",
            "            name_prefix_alpha = M_Interface_PREFIX:'TenGigE'  <== mode:M_Interface",
            "            DEC:'0'  <== mode:M_Interface",
            "            FORWARD_SLASH:'/'  <== mode:M_Interface",
            "            DEC:'2'  <== mode:M_Interface",
            "            FORWARD_SLASH:'/'  <== mode:M_Interface",
            "            DEC:'0'  <== mode:M_Interface",
            "            FORWARD_SLASH:'/'  <== mode:M_Interface",
            "            (range",
            "              (subrange",
            "                low = DEC:'0'  <== mode:M_Interface)))",
            "          NEWLINE:'\\n'  <== mode:M_Interface)",
            "        (interface_multicast_stanza",
            "          INTERFACE:'interface'",
            "          (interface_name",
            "            name_prefix_alpha = M_Interface_PREFIX:'TenGigE'  <== mode:M_Interface",
            "            DEC:'0'  <== mode:M_Interface",
            "            FORWARD_SLASH:'/'  <== mode:M_Interface",
            "            DEC:'2'  <== mode:M_Interface",
            "            FORWARD_SLASH:'/'  <== mode:M_Interface",
            "            DEC:'0'  <== mode:M_Interface",
            "            FORWARD_SLASH:'/'  <== mode:M_Interface",
            "            (range",
            "              (subrange",
            "                low = DEC:'1'  <== mode:M_Interface)))",
            "          NEWLINE:'\\n'  <== mode:M_Interface))))",
            "  (stanza",
            "    (router_multicast_stanza",
            "      IPV6:'ipv6'",
            "      ROUTER:'router'",
            "      PIM:'pim'",
            "      NEWLINE:'\\n'",
            "      (router_multicast_tail)))",
            "  (stanza",
            "    (s_interface",
            "      INTERFACE:'interface'",
            "      iname = (interface_name",
            "        name_prefix_alpha = M_Interface_PREFIX:'loopback'  <== mode:M_Interface",
            "        (range",
            "          (subrange",
            "            low = DEC:'1'  <== mode:M_Interface)))",
            "      NEWLINE:'\\n'  <== mode:M_Interface",
            "      (if_inner",
            "        (if_null_block",
            "          PORT_NAME:'port-name'",
            "          VARIABLE:'riv-hpr3'",
            "          VARIABLE:'Primary'",
            "          VARIABLE:'Loopback'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_ip_address",
            "          IP:'ip'",
            "          ADDRESS:'address'",
            "          prefix = IP_PREFIX:'137.164.17.8/32'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          IP:'ip'",
            "          PIM_SPARSE:'pim-sparse'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_null_block",
            "          IPV6:'ipv6'",
            "          ADDRESS:'address'",
            "          IPV6_PREFIX:'2607:f380::108:9a41:1081/124'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_ipv6",
            "          IPV6:'ipv6'",
            "          (if_ipv6_inner",
            "            (if_ipv6_enable",
            "              ENABLE:'enable'",
            "              NEWLINE:'\\n'))))",
            "      (if_inner",
            "        (if_null_block",
            "          IPV6:'ipv6'",
            "          PIM_SPARSE:'pim-sparse'",
            "          NEWLINE:'\\n'))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/pim_snooping" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'pim_snooping'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_ip_pim",
            "      IP:'ip'",
            "      PIM:'pim'",
            "      (ip_pim_tail",
            "        (pim_null",
            "          SNOOPING:'snooping'",
            "          (null_rest_of_line",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (s_ip_pim",
            "      NO:'no'",
            "      IP:'ip'",
            "      PIM:'pim'",
            "      (ip_pim_tail",
            "        (pim_null",
            "          SNOOPING:'snooping'",
            "          (null_rest_of_line",
            "            VARIABLE:'dr-flood'",
            "            NEWLINE:'\\n')))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/prefix_list_ipv4" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'prefix_list_ipv4'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (ip_prefix_list_stanza",
            "      IPV4:'ipv4'",
            "      PREFIX_LIST:'prefix-list'",
            "      name = (variable",
            "        VARIABLE:'test'  <== mode:M_Name)",
            "      NEWLINE:'\\n'",
            "      (ip_prefix_list_tail",
            "        seqnum = DEC:'10'",
            "        action = (access_list_action",
            "          PERMIT:'permit')",
            "        prefix = IP_PREFIX:'192.168.100.2/31'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (ip_prefix_list_stanza",
            "      IP:'ip'",
            "      PREFIX_LIST:'prefix-list'",
            "      name = (variable",
            "        VARIABLE:'default'  <== mode:M_Name)",
            "      (ip_prefix_list_tail",
            "        action = (access_list_action",
            "          PERMIT:'permit')",
            "        prefix = IP_PREFIX:'0.0.0.0/0'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (route_map_stanza",
            "      ROUTE_MAP:'route-map'",
            "      name = (variable",
            "        VARIABLE:'to_elacc'  <== mode:M_RouteMap)",
            "      rmt = (access_list_action",
            "        PERMIT:'permit')",
            "      num = DEC:'10'",
            "      NEWLINE:'\\n'",
            "      (rm_stanza",
            "        (match_rm_stanza",
            "          (match_ip_prefix_list_rm_stanza",
            "            MATCH:'match'",
            "            IP:'ip'",
            "            ADDRESS:'address'",
            "            PREFIX_LIST:'prefix-list'",
            "            (variable",
            "              VARIABLE:'default'  <== mode:M_Words)",
            "            NEWLINE:'\\n'  <== mode:M_Words)))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/route_maps_in_two_address_families" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'route_maps_in_two_address_families'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_feature",
            "      FEATURE:'feature'",
            "      (variable",
            "        BGP:'bgp')",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (router_bgp_stanza",
            "      ROUTER:'router'",
            "      BGP:'bgp'",
            "      procnum = (bgp_asn",
            "        asn = DEC:'1')",
            "      NEWLINE:'\\n'",
            "      (router_bgp_nxos_toplevel",
            "        (rbnx_template_peer",
            "          TEMPLATE:'template'",
            "          PEER:'peer'",
            "          peer = (variable",
            "            VARIABLE:'ABC')",
            "          NEWLINE:'\\n'",
            "          (rbnx_n_inner",
            "            (rbnx_n_address_family",
            "              ADDRESS_FAMILY:'address-family'",
            "              first = IPV4:'ipv4'",
            "              second = UNICAST:'unicast'",
            "              NEWLINE:'\\n'",
            "              (rbnx_n_af_inner",
            "                (rbnx_n_af_send_community",
            "                  SEND_COMMUNITY:'send-community'",
            "                  NEWLINE:'\\n'))",
            "              (rbnx_n_af_inner",
            "                (rbnx_n_af_route_map",
            "                  ROUTE_MAP:'route-map'",
            "                  mapname = (variable",
            "                    VARIABLE:'FROM_ABC_V4'  <== mode:M_RouteMap)",
            "                  IN:'in'",
            "                  NEWLINE:'\\n'))",
            "              (rbnx_n_af_inner",
            "                (rbnx_n_af_maximum_prefix",
            "                  MAXIMUM_PREFIX:'maximum-prefix'",
            "                  limit = DEC:'200'",
            "                  threshold_pct = DEC:'90'",
            "                  NEWLINE:'\\n'))",
            "              (rbnx_n_af_inner",
            "                (rbnx_n_af_soft_reconfiguration",
            "                  SOFT_RECONFIGURATION:'soft-reconfiguration'",
            "                  INBOUND:'inbound'",
            "                  NEWLINE:'\\n'))))",
            "          (rbnx_n_inner",
            "            (rbnx_n_address_family",
            "              ADDRESS_FAMILY:'address-family'",
            "              first = IPV6:'ipv6'",
            "              second = UNICAST:'unicast'",
            "              NEWLINE:'\\n'",
            "              (rbnx_n_af_inner",
            "                (rbnx_n_af_send_community",
            "                  SEND_COMMUNITY:'send-community'",
            "                  NEWLINE:'\\n'))",
            "              (rbnx_n_af_inner",
            "                (rbnx_n_af_route_map",
            "                  ROUTE_MAP:'route-map'",
            "                  mapname = (variable",
            "                    VARIABLE:'FROM_ABC_V6'  <== mode:M_RouteMap)",
            "                  IN:'in'",
            "                  NEWLINE:'\\n'))",
            "              (rbnx_n_af_inner",
            "                (rbnx_n_af_maximum_prefix",
            "                  MAXIMUM_PREFIX:'maximum-prefix'",
            "                  limit = DEC:'200'",
            "                  threshold_pct = DEC:'90'",
            "                  NEWLINE:'\\n'))",
            "              (rbnx_n_af_inner",
            "                (rbnx_n_af_soft_reconfiguration",
            "                  SOFT_RECONFIGURATION:'soft-reconfiguration'",
            "                  INBOUND:'inbound'",
            "                  NEWLINE:'\\n'))))))",
            "      (router_bgp_nxos_toplevel",
            "        (rbnx_proc_vrf_common",
            "          (rbnx_neighbor",
            "            NEIGHBOR:'neighbor'",
            "            ip = IP_ADDRESS:'1.1.1.1'  <== mode:M_NEIGHBOR",
            "            REMOTE_AS:'remote-as'",
            "            (bgp_asn",
            "              asn = DEC:'2')",
            "            NEWLINE:'\\n'",
            "            (rbnx_n_inner",
            "              (rbnx_n_common",
            "                (rbnx_n_inherit",
            "                  INHERIT:'inherit'",
            "                  PEER:'peer'",
            "                  peer = (variable",
            "                    VARIABLE:'ABC')",
            "                  NEWLINE:'\\n'))))))))",
            "  (stanza",
            "    (ip_prefix_list_stanza",
            "      IP:'ip'",
            "      PREFIX_LIST:'prefix-list'",
            "      name = (variable",
            "        VARIABLE:'v4_list'  <== mode:M_Name)",
            "      (ip_prefix_list_tail",
            "        action = (access_list_action",
            "          PERMIT:'permit')",
            "        prefix = IP_PREFIX:'0.0.0.0/0'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (ipv6_prefix_list_stanza",
            "      IPV6:'ipv6'",
            "      PREFIX_LIST:'prefix-list'",
            "      name = (variable",
            "        VARIABLE:'v6_list'  <== mode:M_Name)",
            "      (ipv6_prefix_list_tail",
            "        action = (access_list_action",
            "          PERMIT:'permit')",
            "        prefix6 = IPV6_PREFIX:'::0/128'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (route_map_stanza",
            "      ROUTE_MAP:'route-map'",
            "      name = (variable",
            "        VARIABLE:'FROM_ABC_V4'  <== mode:M_RouteMap)",
            "      rmt = (access_list_action",
            "        PERMIT:'permit')",
            "      num = DEC:'100'",
            "      NEWLINE:'\\n'",
            "      (rm_stanza",
            "        (match_rm_stanza",
            "          (match_ip_prefix_list_rm_stanza",
            "            MATCH:'match'",
            "            IP:'ip'",
            "            ADDRESS:'address'",
            "            PREFIX_LIST:'prefix-list'",
            "            (variable",
            "              VARIABLE:'v4_list'  <== mode:M_Words)",
            "            NEWLINE:'\\n'  <== mode:M_Words)))))",
            "  (stanza",
            "    (route_map_stanza",
            "      ROUTE_MAP:'route-map'",
            "      name = (variable",
            "        VARIABLE:'FROM_ABC_V6'  <== mode:M_RouteMap)",
            "      rmt = (access_list_action",
            "        PERMIT:'permit')",
            "      num = DEC:'100'",
            "      NEWLINE:'\\n'",
            "      (rm_stanza",
            "        (match_rm_stanza",
            "          (match_ipv6_prefix_list_rm_stanza",
            "            MATCH:'match'",
            "            IPV6:'ipv6'",
            "            ADDRESS:'address'",
            "            PREFIX_LIST:'prefix-list'",
            "            (variable",
            "              VARIABLE:'v6_list'  <== mode:M_Words)",
            "            NEWLINE:'\\n'  <== mode:M_Words)))))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        END:'end'",
            "        NEWLINE:'\\n\\n')))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/route_policy_as_path" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'route_policy_as_path_set'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (route_policy_stanza",
            "      ROUTE_POLICY:'route-policy'",
            "      name = (variable",
            "        VARIABLE:'erick-test')",
            "      NEWLINE:'\\n'",
            "      (rp_stanza",
            "        (if_rp_stanza",
            "          IF:'if'",
            "          (boolean_rp_stanza",
            "            (boolean_and_rp_stanza",
            "              (boolean_not_rp_stanza",
            "                (boolean_simple_rp_stanza",
            "                  PAREN_LEFT:'('",
            "                  (boolean_rp_stanza",
            "                    (boolean_and_rp_stanza",
            "                      (boolean_not_rp_stanza",
            "                        (boolean_simple_rp_stanza",
            "                          (boolean_community_matches_any_rp_stanza",
            "                            COMMUNITY:'community'",
            "                            MATCHES_ANY:'matches-any'",
            "                            (rp_community_set",
            "                              name = (variable",
            "                                VARIABLE:'SOCAL-USERS')))))))",
            "                  PAREN_RIGHT:')'))))",
            "          THEN:'then'",
            "          NEWLINE:'\\n'",
            "          (rp_stanza",
            "            (set_rp_stanza",
            "              (prepend_as_path_rp_stanza",
            "                PREPEND:'prepend'",
            "                AS_PATH:'as-path'",
            "                as = (as_expr",
            "                  DEC:'64901'  <== mode:M_AsPath)",
            "                number = (int_expr",
            "                  DEC:'3')",
            "                NEWLINE:'\\n')))",
            "          (rp_stanza",
            "            (set_rp_stanza",
            "              (set_community_rp_stanza",
            "                SET:'set'",
            "                COMMUNITY:'community'",
            "                (rp_community_set",
            "                  name = (variable",
            "                    STANDARD_COMMUNITY:'13979:90'))",
            "                ADDITIVE:'additive'",
            "                NEWLINE:'\\n')))",
            "          (else_rp_stanza",
            "            ELSE:'else'",
            "            NEWLINE:'\\n'",
            "            (rp_stanza",
            "              (disposition_rp_stanza",
            "                PASS:'pass'",
            "                NEWLINE:'\\n')))",
            "          ENDIF:'endif'",
            "          NEWLINE:'\\n'))",
            "      END_POLICY:'end-policy'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (route_policy_stanza",
            "      ROUTE_POLICY:'route-policy'",
            "      name = (variable",
            "        VARIABLE:'to_fooey')",
            "      NEWLINE:'\\n'",
            "      (rp_stanza",
            "        (if_rp_stanza",
            "          IF:'if'",
            "          (boolean_rp_stanza",
            "            (boolean_and_rp_stanza",
            "              (boolean_not_rp_stanza",
            "                (boolean_simple_rp_stanza",
            "                  (boolean_destination_rp_stanza",
            "                    DESTINATION:'destination'",
            "                    IN:'in'",
            "                    (rp_prefix_set",
            "                      name = (variable",
            "                        VARIABLE:'classful_default')))))))",
            "          THEN:'then'",
            "          NEWLINE:'\\n'",
            "          (rp_stanza",
            "            (disposition_rp_stanza",
            "              DROP:'drop'",
            "              NEWLINE:'\\n'))",
            "          (elseif_rp_stanza",
            "            ELSEIF:'elseif'",
            "            (boolean_rp_stanza",
            "              (boolean_and_rp_stanza",
            "                (boolean_not_rp_stanza",
            "                  (boolean_simple_rp_stanza",
            "                    (boolean_as_path_passes_through_rp_stanza",
            "                      AS_PATH:'as-path'",
            "                      PASSES_THROUGH:'passes-through'  <== mode:M_AsPath",
            "                      (as_range_expr",
            "                        SINGLE_QUOTE:'''",
            "                        (rp_subrange",
            "                          first = (int_expr",
            "                            DEC:'5556'))",
            "                        SINGLE_QUOTE:'''))))))",
            "            THEN:'then'",
            "            NEWLINE:'\\n'",
            "            (rp_stanza",
            "              (disposition_rp_stanza",
            "                DROP:'drop'",
            "                NEWLINE:'\\n')))",
            "          (elseif_rp_stanza",
            "            ELSEIF:'elseif'",
            "            (boolean_rp_stanza",
            "              (boolean_and_rp_stanza",
            "                (boolean_not_rp_stanza",
            "                  (boolean_simple_rp_stanza",
            "                    (boolean_as_path_is_local_rp_stanza",
            "                      AS_PATH:'as-path'",
            "                      IS_LOCAL:'is-local'  <== mode:M_AsPath)))))",
            "            THEN:'then'",
            "            NEWLINE:'\\n'",
            "            (rp_stanza",
            "              (disposition_rp_stanza",
            "                DROP:'drop'",
            "                NEWLINE:'\\n')))",
            "          (elseif_rp_stanza",
            "            ELSEIF:'elseif'",
            "            (boolean_rp_stanza",
            "              (boolean_and_rp_stanza",
            "                (boolean_not_rp_stanza",
            "                  (boolean_simple_rp_stanza",
            "                    (boolean_community_matches_any_rp_stanza",
            "                      COMMUNITY:'community'",
            "                      MATCHES_ANY:'matches-any'",
            "                      (rp_community_set",
            "                        PAREN_LEFT:'('",
            "                        (community_set_elem",
            "                          (community",
            "                            STANDARD_COMMUNITY:'5555:65530'))",
            "                        COMMA:','",
            "                        (community_set_elem",
            "                          (community",
            "                            STANDARD_COMMUNITY:'5555:667'))",
            "                        COMMA:','",
            "                        (community_set_elem",
            "                          (community",
            "                            STANDARD_COMMUNITY:'5555:64000'))",
            "                        PAREN_RIGHT:')'))))))",
            "            THEN:'then'",
            "            NEWLINE:'\\n'",
            "            (rp_stanza",
            "              (disposition_rp_stanza",
            "                DROP:'drop'",
            "                NEWLINE:'\\n')))",
            "          (elseif_rp_stanza",
            "            ELSEIF:'elseif'",
            "            (boolean_rp_stanza",
            "              (boolean_and_rp_stanza",
            "                (boolean_not_rp_stanza",
            "                  (boolean_simple_rp_stanza",
            "                    PAREN_LEFT:'('",
            "                    (boolean_rp_stanza",
            "                      (boolean_and_rp_stanza",
            "                        (boolean_not_rp_stanza",
            "                          (boolean_simple_rp_stanza",
            "                            (boolean_as_path_originates_from_rp_stanza",
            "                              AS_PATH:'as-path'",
            "                              ORIGINATES_FROM:'originates-from'  <== mode:M_AsPath",
            "                              (as_range_expr",
            "                                SINGLE_QUOTE:'''",
            "                                (rp_subrange",
            "                                  first = (int_expr",
            "                                    DEC:'64527'))",
            "                                SINGLE_QUOTE:'''))))))",
            "                    PAREN_RIGHT:')'))))",
            "            THEN:'then'",
            "            NEWLINE:'\\n'",
            "            (rp_stanza",
            "              (set_rp_stanza",
            "                (set_community_rp_stanza",
            "                  SET:'set'",
            "                  COMMUNITY:'community'",
            "                  (rp_community_set",
            "                    PAREN_LEFT:'('",
            "                    (community_set_elem",
            "                      (community",
            "                        STANDARD_COMMUNITY:'14041:65011'))",
            "                    PAREN_RIGHT:')')",
            "                  NEWLINE:'\\n')))",
            "            (rp_stanza",
            "              (set_rp_stanza",
            "                (set_med_rp_stanza",
            "                  SET:'set'",
            "                  MED:'med'",
            "                  med = (int_expr",
            "                    IGP_COST:'igp-cost')",
            "                  NEWLINE:'\\n'))))",
            "          (elseif_rp_stanza",
            "            ELSEIF:'elseif'",
            "            (boolean_rp_stanza",
            "              (boolean_and_rp_stanza",
            "                (boolean_not_rp_stanza",
            "                  (boolean_simple_rp_stanza",
            "                    (boolean_destination_rp_stanza",
            "                      DESTINATION:'destination'",
            "                      IN:'in'",
            "                      (rp_prefix_set",
            "                        name = (variable",
            "                          VARIABLE:'CENIC_DC_Internal')))))))",
            "            THEN:'then'",
            "            NEWLINE:'\\n'",
            "            (rp_stanza",
            "              (set_rp_stanza",
            "                (set_community_rp_stanza",
            "                  SET:'set'",
            "                  COMMUNITY:'community'",
            "                  (rp_community_set",
            "                    PAREN_LEFT:'('",
            "                    (community_set_elem",
            "                      (community",
            "                        STANDARD_COMMUNITY:'5555:5555'))",
            "                    PAREN_RIGHT:')')",
            "                  ADDITIVE:'additive'",
            "                  NEWLINE:'\\n')))",
            "            (rp_stanza",
            "              (disposition_rp_stanza",
            "                PASS:'pass'",
            "                NEWLINE:'\\n')))",
            "          (elseif_rp_stanza",
            "            ELSEIF:'elseif'",
            "            (boolean_rp_stanza",
            "              (boolean_and_rp_stanza",
            "                (boolean_not_rp_stanza",
            "                  (boolean_simple_rp_stanza",
            "                    (boolean_community_matches_any_rp_stanza",
            "                      COMMUNITY:'community'",
            "                      MATCHES_ANY:'matches-any'",
            "                      (rp_community_set",
            "                        PAREN_LEFT:'('",
            "                        (community_set_elem",
            "                          (community",
            "                            STANDARD_COMMUNITY:'5555:5555'))",
            "                        COMMA:','",
            "                        (community_set_elem",
            "                          (community",
            "                            STANDARD_COMMUNITY:'5555:65439'))",
            "                        COMMA:','",
            "                        (community_set_elem",
            "                          (community",
            "                            STANDARD_COMMUNITY:'5555:65437'))",
            "                        COMMA:','",
            "                        (community_set_elem",
            "                          (community",
            "                            STANDARD_COMMUNITY:'5556:65418'))",
            "                        COMMA:','",
            "                        (community_set_elem",
            "                          (community",
            "                            STANDARD_COMMUNITY:'5556:65438'))",
            "                        COMMA:','",
            "                        (community_set_elem",
            "                          (community",
            "                            STANDARD_COMMUNITY:'5556:65436'))",
            "                        COMMA:','",
            "                        (community_set_elem",
            "                          prefix = (community_set_elem_half",
            "                            value = DEC:'5556')",
            "                          COLON:':'",
            "                          suffix = (community_set_elem_half",
            "                            BRACKET_LEFT:'['",
            "                            first = DEC:'65300'",
            "                            PERIOD:'.'",
            "                            PERIOD:'.'",
            "                            last = DEC:'65419'",
            "                            BRACKET_RIGHT:']'))",
            "                        PAREN_RIGHT:')'))))))",
            "            THEN:'then'",
            "            NEWLINE:'\\n'",
            "            (rp_stanza",
            "              (set_rp_stanza",
            "                (set_med_rp_stanza",
            "                  SET:'set'",
            "                  MED:'med'",
            "                  med = (int_expr",
            "                    DEC:'1000')",
            "                  NEWLINE:'\\n')))",
            "            (rp_stanza",
            "              (disposition_rp_stanza",
            "                PASS:'pass'",
            "                NEWLINE:'\\n')))",
            "          ENDIF:'endif'",
            "          NEWLINE:'\\n'))",
            "      END_POLICY:'end-policy'",
            "      NEWLINE:'\\n\\n'))",
            "  (stanza",
            "    (as_path_set_stanza",
            "      AS_PATH_SET:'as-path-set'",
            "      name = (variable",
            "        VARIABLE:'ama-coe-as-path')",
            "      NEWLINE:'\\n'",
            "      (as_path_set_elem",
            "        IOS_REGEX:'ios-regex'",
            "        AS_PATH_SET_REGEX:''^64666(_64666)*$''  <== mode:M_IosRegex)",
            "      NEWLINE:'\\n'",
            "      END_SET:'end-set'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (as_path_set_stanza",
            "      AS_PATH_SET:'as-path-set'",
            "      name = (variable",
            "        VARIABLE:'ama-coe-as-path2')",
            "      NEWLINE:'\\n'",
            "      (as_path_set_elem",
            "        IOS_REGEX:'ios-regex'",
            "        AS_PATH_SET_REGEX:''^64666(_64666)*$''  <== mode:M_IosRegex)",
            "      END_SET:'end-set'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (as_path_set_stanza",
            "      AS_PATH_SET:'as-path-set'",
            "      name = (variable",
            "        VARIABLE:'ama-coe-as-path3')",
            "      NEWLINE:'\\n'",
            "      (as_path_set_elem",
            "        IOS_REGEX:'ios-regex'",
            "        AS_PATH_SET_REGEX:''^64666(_64666)*$''  <== mode:M_IosRegex)",
            "      COMMA:','",
            "      NEWLINE:'\\n'",
            "      (as_path_set_elem",
            "        IOS_REGEX:'ios-regex'",
            "        AS_PATH_SET_REGEX:''^64666(_64666)*$''  <== mode:M_IosRegex)",
            "      COMMA:','",
            "      (as_path_set_elem",
            "        IOS_REGEX:'ios-regex'",
            "        AS_PATH_SET_REGEX:''^64666(_64666)*$''  <== mode:M_IosRegex)",
            "      NEWLINE:'\\n'",
            "      COMMA:','",
            "      (as_path_set_elem",
            "        IOS_REGEX:'ios-regex'",
            "        AS_PATH_SET_REGEX:''^$''  <== mode:M_IosRegex)",
            "      NEWLINE:'\\n'",
            "      END_SET:'end-set'",
            "      NEWLINE:'\\n'))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/route_policy_igp_cost" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'route_policy_igp_cost'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (route_policy_stanza",
            "      ROUTE_POLICY:'route-policy'",
            "      name = (variable",
            "        VARIABLE:'EBGP_CUST_FULL_v4')",
            "      NEWLINE:'\\n'",
            "      (rp_stanza",
            "        (if_rp_stanza",
            "          IF:'if'",
            "          (boolean_rp_stanza",
            "            (boolean_and_rp_stanza",
            "              (boolean_not_rp_stanza",
            "                (boolean_simple_rp_stanza",
            "                  PAREN_LEFT:'('",
            "                  (boolean_rp_stanza",
            "                    (boolean_rp_stanza",
            "                      (boolean_rp_stanza",
            "                        (boolean_rp_stanza",
            "                          (boolean_and_rp_stanza",
            "                            (boolean_not_rp_stanza",
            "                              (boolean_simple_rp_stanza",
            "                                PAREN_LEFT:'('",
            "                                (boolean_rp_stanza",
            "                                  (boolean_and_rp_stanza",
            "                                    (boolean_not_rp_stanza",
            "                                      (boolean_simple_rp_stanza",
            "                                        (boolean_community_matches_any_rp_stanza",
            "                                          COMMUNITY:'community'",
            "                                          MATCHES_ANY:'matches-any'",
            "                                          (rp_community_set",
            "                                            name = (variable",
            "                                              VARIABLE:'DC_CF_COMMODITY_PEER')))))))",
            "                                PAREN_RIGHT:')'))))",
            "                        OR:'or'",
            "                        (boolean_and_rp_stanza",
            "                          (boolean_not_rp_stanza",
            "                            (boolean_simple_rp_stanza",
            "                              PAREN_LEFT:'('",
            "                              (boolean_rp_stanza",
            "                                (boolean_and_rp_stanza",
            "                                  (boolean_not_rp_stanza",
            "                                    (boolean_simple_rp_stanza",
            "                                      (boolean_community_matches_any_rp_stanza",
            "                                        COMMUNITY:'community'",
            "                                        MATCHES_ANY:'matches-any'",
            "                                        (rp_community_set",
            "                                          name = (variable",
            "                                            VARIABLE:'DC_CF_ISP')))))))",
            "                              PAREN_RIGHT:')'))))",
            "                      OR:'or'",
            "                      (boolean_and_rp_stanza",
            "                        (boolean_not_rp_stanza",
            "                          (boolean_simple_rp_stanza",
            "                            PAREN_LEFT:'('",
            "                            (boolean_rp_stanza",
            "                              (boolean_and_rp_stanza",
            "                                (boolean_not_rp_stanza",
            "                                  (boolean_simple_rp_stanza",
            "                                    (boolean_community_matches_any_rp_stanza",
            "                                      COMMUNITY:'community'",
            "                                      MATCHES_ANY:'matches-any'",
            "                                      (rp_community_set",
            "                                        name = (variable",
            "                                          VARIABLE:'HPR_CF_RE_PEER')))))))",
            "                            PAREN_RIGHT:')'))))",
            "                    OR:'or'",
            "                    (boolean_and_rp_stanza",
            "                      (boolean_not_rp_stanza",
            "                        (boolean_simple_rp_stanza",
            "                          PAREN_LEFT:'('",
            "                          (boolean_rp_stanza",
            "                            (boolean_and_rp_stanza",
            "                              (boolean_not_rp_stanza",
            "                                (boolean_simple_rp_stanza",
            "                                  (boolean_community_matches_any_rp_stanza",
            "                                    COMMUNITY:'community'",
            "                                    MATCHES_ANY:'matches-any'",
            "                                    (rp_community_set",
            "                                      name = (variable",
            "                                        VARIABLE:'DC_AT_MEMBERS')))))))",
            "                          PAREN_RIGHT:')'))))",
            "                  PAREN_RIGHT:')'))))",
            "          THEN:'then'",
            "          NEWLINE:'\\n'",
            "          (rp_stanza",
            "            (set_rp_stanza",
            "              (set_med_rp_stanza",
            "                SET:'set'",
            "                MED:'med'",
            "                med = (int_expr",
            "                  IGP_COST:'igp-cost')",
            "                NEWLINE:'\\n')))",
            "          (elseif_rp_stanza",
            "            ELSEIF:'elseif'",
            "            (boolean_rp_stanza",
            "              (boolean_and_rp_stanza",
            "                (boolean_not_rp_stanza",
            "                  (boolean_simple_rp_stanza",
            "                    PAREN_LEFT:'('",
            "                    (boolean_rp_stanza",
            "                      (boolean_and_rp_stanza",
            "                        (boolean_not_rp_stanza",
            "                          (boolean_simple_rp_stanza",
            "                            (boolean_community_matches_any_rp_stanza",
            "                              COMMUNITY:'community'",
            "                              MATCHES_ANY:'matches-any'",
            "                              (rp_community_set",
            "                                name = (variable",
            "                                  VARIABLE:'No_Export')))))))",
            "                    PAREN_RIGHT:')'))))",
            "            THEN:'then'",
            "            NEWLINE:'\\n'",
            "            (rp_stanza",
            "              (disposition_rp_stanza",
            "                DROP:'drop'",
            "                NEWLINE:'\\n')))",
            "          (else_rp_stanza",
            "            ELSE:'else'",
            "            NEWLINE:'\\n'",
            "            (rp_stanza",
            "              (disposition_rp_stanza",
            "                DROP:'drop'",
            "                NEWLINE:'\\n')))",
            "          ENDIF:'endif'",
            "          NEWLINE:'\\n'))",
            "      END_POLICY:'end-policy'",
            "      NEWLINE:'\\n'))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/route_policy_metric_type" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'route_policy_metric_type'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (route_policy_stanza",
            "      ROUTE_POLICY:'route-policy'",
            "      name = (variable",
            "        VARIABLE:'to_csuchico')",
            "      NEWLINE:'\\n'",
            "      (rp_stanza",
            "        (if_rp_stanza",
            "          IF:'if'",
            "          (boolean_rp_stanza",
            "            (boolean_and_rp_stanza",
            "              (boolean_not_rp_stanza",
            "                (boolean_simple_rp_stanza",
            "                  (boolean_community_matches_any_rp_stanza",
            "                    COMMUNITY:'community'",
            "                    MATCHES_ANY:'matches-any'",
            "                    (rp_community_set",
            "                      name = (variable",
            "                        VARIABLE:'No_Export')))))))",
            "          THEN:'then'",
            "          NEWLINE:'\\n'",
            "          (rp_stanza",
            "            (disposition_rp_stanza",
            "              DROP:'drop'",
            "              NEWLINE:'\\n'))",
            "          (elseif_rp_stanza",
            "            ELSEIF:'elseif'",
            "            (boolean_rp_stanza",
            "              (boolean_and_rp_stanza",
            "                (boolean_not_rp_stanza",
            "                  (boolean_simple_rp_stanza",
            "                    (boolean_destination_rp_stanza",
            "                      DESTINATION:'destination'",
            "                      IN:'in'",
            "                      (rp_prefix_set",
            "                        name = (variable",
            "                          VARIABLE:'DC_Internal')))))))",
            "            THEN:'then'",
            "            NEWLINE:'\\n'",
            "            (rp_stanza",
            "              (set_rp_stanza",
            "                (set_metric_type_rp_stanza",
            "                  SET:'set'",
            "                  METRIC_TYPE:'metric-type'",
            "                  type = (rp_metric_type",
            "                    (rp_isis_metric_type",
            "                      INTERNAL:'internal'))",
            "                  NEWLINE:'\\n')))",
            "            (rp_stanza",
            "              (set_rp_stanza",
            "                (set_community_rp_stanza",
            "                  SET:'set'",
            "                  COMMUNITY:'community'",
            "                  (rp_community_set",
            "                    PAREN_LEFT:'('",
            "                    (community_set_elem",
            "                      (community",
            "                        STANDARD_COMMUNITY:'2152:2152'))",
            "                    PAREN_RIGHT:')')",
            "                  NEWLINE:'\\n'))))",
            "          (else_rp_stanza",
            "            ELSE:'else'",
            "            NEWLINE:'\\n'",
            "            (rp_stanza",
            "              (disposition_rp_stanza",
            "                DROP:'drop'",
            "                NEWLINE:'\\n')))",
            "          ENDIF:'endif'",
            "          NEWLINE:'\\n'))",
            "      END_POLICY:'end-policy'",
            "      NEWLINE:'\\n'))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/route_policy_param" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'route_policy_param'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (route_policy_stanza",
            "      ROUTE_POLICY:'route-policy'",
            "      name = (variable",
            "        VARIABLE:'cust_v4_in')",
            "      PAREN_LEFT:'('",
            "      varlist = (route_policy_params_list",
            "        (variable",
            "          RP_VARIABLE:'$cust_v4_pfx')",
            "        COMMA:','",
            "        (variable",
            "          RP_VARIABLE:'$cust_v4_as_path')",
            "        COMMA:','",
            "        (variable",
            "          RP_VARIABLE:'$cust_v4_no_auth')",
            "        COMMA:','",
            "        (variable",
            "          RP_VARIABLE:'$cust_v4_need_auth')",
            "        COMMA:','",
            "        (variable",
            "          RP_VARIABLE:'$hub_comm')",
            "        COMMA:','",
            "        (variable",
            "          RP_VARIABLE:'$cust_v4_isp_auth_comm'))",
            "      PAREN_RIGHT:')'",
            "      NEWLINE:'\\n'",
            "      (rp_stanza",
            "        (if_rp_stanza",
            "          IF:'if'",
            "          (boolean_rp_stanza",
            "            (boolean_and_rp_stanza",
            "              (boolean_not_rp_stanza",
            "                (boolean_simple_rp_stanza",
            "                  PAREN_LEFT:'('",
            "                  (boolean_rp_stanza",
            "                    (boolean_and_rp_stanza",
            "                      (boolean_and_rp_stanza",
            "                        (boolean_not_rp_stanza",
            "                          (boolean_simple_rp_stanza",
            "                            PAREN_LEFT:'('",
            "                            (boolean_rp_stanza",
            "                              (boolean_and_rp_stanza",
            "                                (boolean_not_rp_stanza",
            "                                  (boolean_simple_rp_stanza",
            "                                    (boolean_as_path_in_rp_stanza",
            "                                      AS_PATH:'as-path'",
            "                                      IN:'in'  <== mode:M_AsPath",
            "                                      expr = (as_path_set_expr",
            "                                        rpvar = RP_VARIABLE:'$cust_v4_as_path'))))))",
            "                            PAREN_RIGHT:')')))",
            "                      AND:'and'",
            "                      (boolean_not_rp_stanza",
            "                        (boolean_simple_rp_stanza",
            "                          PAREN_LEFT:'('",
            "                          (boolean_rp_stanza",
            "                            (boolean_and_rp_stanza",
            "                              (boolean_not_rp_stanza",
            "                                (boolean_simple_rp_stanza",
            "                                  (boolean_destination_rp_stanza",
            "                                    DESTINATION:'destination'",
            "                                    IN:'in'",
            "                                    (rp_prefix_set",
            "                                      name = (variable",
            "                                        RP_VARIABLE:'$cust_v4_pfx')))))))",
            "                          PAREN_RIGHT:')'))))",
            "                  PAREN_RIGHT:')'))))",
            "          THEN:'then'",
            "          NEWLINE:'\\n'",
            "          (rp_stanza",
            "            (apply_rp_stanza",
            "              APPLY:'apply'",
            "              name = (variable",
            "                VARIABLE:'global_cust_v4')",
            "              PAREN_LEFT:'('",
            "              varlist = (route_policy_params_list",
            "                (variable",
            "                  RP_VARIABLE:'$cust_v4_no_auth')",
            "                COMMA:','",
            "                (variable",
            "                  RP_VARIABLE:'$cust_v4_need_auth')",
            "                COMMA:','",
            "                (variable",
            "                  RP_VARIABLE:'$hub_comm')",
            "                COMMA:','",
            "                (variable",
            "                  RP_VARIABLE:'$cust_v4_isp_auth_comm'))",
            "              PAREN_RIGHT:')'",
            "              NEWLINE:'\\n'))",
            "          (else_rp_stanza",
            "            ELSE:'else'",
            "            NEWLINE:'\\n'",
            "            (rp_stanza",
            "              (disposition_rp_stanza",
            "                DROP:'drop'",
            "                NEWLINE:'\\n')))",
            "          ENDIF:'endif'",
            "          NEWLINE:'\\n'))",
            "      END_POLICY:'end-policy'",
            "      NEWLINE:'\\n\\n'))",
            "  (stanza",
            "    (route_policy_stanza",
            "      ROUTE_POLICY:'route-policy'",
            "      name = (variable",
            "        VARIABLE:'global_cust_v4')",
            "      PAREN_LEFT:'('",
            "      varlist = (route_policy_params_list",
            "        (variable",
            "          RP_VARIABLE:'$cust_v4_no_auth')",
            "        COMMA:','",
            "        (variable",
            "          RP_VARIABLE:'$cust_v4_need_auth')",
            "        COMMA:','",
            "        (variable",
            "          RP_VARIABLE:'$hub_comm')",
            "        COMMA:','",
            "        (variable",
            "          RP_VARIABLE:'$cust_v4_isp_auth_comm'))",
            "      PAREN_RIGHT:')'",
            "      NEWLINE:'\\n'",
            "      (rp_stanza",
            "        (if_rp_stanza",
            "          IF:'if'",
            "          (boolean_rp_stanza",
            "            (boolean_and_rp_stanza",
            "              (boolean_not_rp_stanza",
            "                (boolean_simple_rp_stanza",
            "                  PAREN_LEFT:'('",
            "                  (boolean_rp_stanza",
            "                    (boolean_and_rp_stanza",
            "                      (boolean_not_rp_stanza",
            "                        (boolean_simple_rp_stanza",
            "                          (boolean_community_matches_any_rp_stanza",
            "                            COMMUNITY:'community'",
            "                            MATCHES_ANY:'matches-any'",
            "                            (rp_community_set",
            "                              name = (variable",
            "                                VARIABLE:'blackhole-all')))))))",
            "                  PAREN_RIGHT:')'))))",
            "          THEN:'then'",
            "          NEWLINE:'\\n'",
            "          (rp_stanza",
            "            (apply_rp_stanza",
            "              APPLY:'apply'",
            "              name = (variable",
            "                VARIABLE:'bgp_standard')",
            "              NEWLINE:'\\n'))",
            "          (rp_stanza",
            "            (set_rp_stanza",
            "              (set_community_rp_stanza",
            "                SET:'set'",
            "                COMMUNITY:'community'",
            "                (rp_community_set",
            "                  PAREN_LEFT:'('",
            "                  (community_set_elem",
            "                    (community",
            "                      STANDARD_COMMUNITY:'2152:666'))",
            "                  COMMA:','",
            "                  (community_set_elem",
            "                    (community",
            "                      STANDARD_COMMUNITY:'2152:65498'))",
            "                  COMMA:','",
            "                  (community_set_elem",
            "                    prefix = (community_set_elem_half",
            "                      value = DEC:'2152')",
            "                    COLON:':'",
            "                    suffix = (community_set_elem_half",
            "                      var = RP_VARIABLE:'$hub_comm'))",
            "                  PAREN_RIGHT:')')",
            "                ADDITIVE:'additive'",
            "                NEWLINE:'\\n')))",
            "          (rp_stanza",
            "            (set_rp_stanza",
            "              (set_next_hop_rp_stanza",
            "                SET:'set'",
            "                NEXT_HOP:'next-hop'",
            "                IP_ADDRESS:'1.2.3.255'",
            "                NEWLINE:'\\n')))",
            "          (else_rp_stanza",
            "            ELSE:'else'",
            "            NEWLINE:'\\n'",
            "            (rp_stanza",
            "              (apply_rp_stanza",
            "                APPLY:'apply'",
            "                name = (variable",
            "                  VARIABLE:'bgp_standard')",
            "                NEWLINE:'\\n'))",
            "            (rp_stanza",
            "              (set_rp_stanza",
            "                (set_community_rp_stanza",
            "                  SET:'set'",
            "                  COMMUNITY:'community'",
            "                  (rp_community_set",
            "                    PAREN_LEFT:'('",
            "                    (community_set_elem",
            "                      (community",
            "                        STANDARD_COMMUNITY:'2152:65535'))",
            "                    COMMA:','",
            "                    (community_set_elem",
            "                      prefix = (community_set_elem_half",
            "                        value = DEC:'2152')",
            "                      COLON:':'",
            "                      suffix = (community_set_elem_half",
            "                        var = RP_VARIABLE:'$hub_comm'))",
            "                    PAREN_RIGHT:')')",
            "                  ADDITIVE:'additive'",
            "                  NEWLINE:'\\n'))))",
            "          ENDIF:'endif'",
            "          NEWLINE:'\\n'))",
            "      END_POLICY:'end-policy'",
            "      NEWLINE:'\\n'))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/router_msdp" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'router_msdp'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (router_multicast_stanza",
            "      ROUTER:'router'",
            "      MSDP:'msdp'",
            "      NEWLINE:'\\n'",
            "      (router_multicast_tail",
            "        (null_inner",
            "          SA_FILTER:'sa-filter'",
            "          (null_rest_of_line",
            "            IN:'in'",
            "            IP_ADDRESS:'137.164.27.74'",
            "            ROUTE_MAP:'route-map'",
            "            VARIABLE:'MSDP-SA-FILTER'  <== mode:M_RouteMap",
            "            VARIABLE:'rp-route-map'",
            "            VARIABLE:'MSDP-SA-RP-FILTER'",
            "            NEWLINE:'\\n')))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/set_inline_community" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'set_inline_community'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (route_policy_stanza",
            "      ROUTE_POLICY:'route-policy'",
            "      name = (variable",
            "        VARIABLE:'FOOBAR')",
            "      NEWLINE:'\\n'",
            "      (rp_stanza",
            "        (set_rp_stanza",
            "          (set_community_rp_stanza",
            "            SET:'set'",
            "            COMMUNITY:'community'",
            "            (rp_community_set",
            "              PAREN_LEFT:'('",
            "              (community_set_elem",
            "                (community",
            "                  STANDARD_COMMUNITY:'1:2'))",
            "              PAREN_RIGHT:')')",
            "            NEWLINE:'\\n')))",
            "      END_POLICY:'end-policy'",
            "      NEWLINE:'\\n'))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/statistics" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      STATISTICS:'statistics'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_statistics",
            "      STATISTICS:'statistics'",
            "      (null_rest_of_line",
            "        NEWLINE:'\\n')",
            "      (statistics_null",
            "        TM_VOQ_COLLECTION:'tm-voq-collection'",
            "        (null_rest_of_line",
            "          NEWLINE:'\\n'))",
            "      (statistics_null",
            "        EXTENDED_COUNTERS:'extended-counters'",
            "        (null_rest_of_line",
            "          PRIORITY:'priority'",
            "          ALL:'all'",
            "          NEWLINE:'\\n'))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/switchport_range" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'switchport_range'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_interface",
            "      INTERFACE:'interface'",
            "      iname = (interface_name",
            "        name_prefix_alpha = M_Interface_PREFIX:'FastEthernet'  <== mode:M_Interface",
            "        DEC:'0'  <== mode:M_Interface",
            "        FORWARD_SLASH:'/'  <== mode:M_Interface",
            "        (range",
            "          (subrange",
            "            low = DEC:'1'  <== mode:M_Interface)))",
            "      NEWLINE:'\\n'  <== mode:M_Interface",
            "      (if_inner",
            "        (if_switchport_mode",
            "          SWITCHPORT:'switchport'",
            "          MODE:'mode'",
            "          TRUNK:'trunk'",
            "          NEWLINE:'\\n'))",
            "      (if_inner",
            "        (if_switchport_trunk_allowed",
            "          SWITCHPORT:'switchport'",
            "          TRUNK:'trunk'",
            "          ALLOWED:'allowed'",
            "          VLAN:'vlan'",
            "          r = (range",
            "            (subrange",
            "              low = DEC:'12')",
            "            COMMA:','",
            "            (subrange",
            "              low = DEC:'34')",
            "            COMMA:','",
            "            (subrange",
            "              low = DEC:'56'",
            "              DASH:'-'",
            "              high = DEC:'78')",
            "            COMMA:','",
            "            (subrange",
            "              low = DEC:'99'))",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        END:'end'",
            "        NEWLINE:'\\n\\n')))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/syslog_source_interface" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'syslog_source_interface'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_null",
            "      (null_block",
            "        IP:'ip'",
            "        SYSLOG:'syslog'",
            "        (null_rest_of_line",
            "          SOURCE_INTERFACE:'source-interface'",
            "          M_Interface_PREFIX:'loopback'  <== mode:M_Interface",
            "          DEC:'1'  <== mode:M_Interface",
            "          NEWLINE:'\\n'  <== mode:M_Interface))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/taskgroup" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      TASKGROUP:'taskgroup'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_null",
            "      (null_block",
            "        TASKGROUP:'taskgroup'",
            "        (null_rest_of_line",
            "          VARIABLE:'priv2'",
            "          NEWLINE:'\\n')",
            "        (null_inner",
            "          TASK:'task'",
            "          (null_rest_of_line",
            "            VARIABLE:'read'",
            "            BGP:'bgp'",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          TASK:'task'",
            "          (null_rest_of_line",
            "            VARIABLE:'read'",
            "            VARIABLE:'rib'",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          TASK:'task'",
            "          (null_rest_of_line",
            "            VARIABLE:'read'",
            "            ROUTE_MAP:'route-map'",
            "            NEWLINE:'\\n'  <== mode:M_RouteMap))",
            "        (null_inner",
            "          TASK:'task'",
            "          (null_rest_of_line",
            "            VARIABLE:'read'",
            "            ROUTE_POLICY:'route-policy'",
            "            NEWLINE:'\\n'))",
            "        (null_inner",
            "          TASK_SPACE_EXECUTE:'task execute'",
            "          (null_rest_of_line",
            "            VARIABLE:'basic-services'",
            "            NEWLINE:'\\n')))))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/tcpflags" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'tcpflags'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (extended_access_list_stanza",
            "      ACCESS_LIST:'access-list'",
            "      num = ACL_NUM_EXTENDED:'100'",
            "      NEWLINE:'\\n'",
            "      (extended_access_list_tail",
            "        ala = (access_list_action",
            "          PERMIT:'permit')",
            "        prot = (protocol",
            "          TCP:'tcp')",
            "        srcipr = (access_list_ip_range",
            "          prefix = IP_PREFIX:'1.2.3.4/31')",
            "        dstipr = (access_list_ip_range",
            "          ANY:'any')",
            "        (extended_access_list_additional_feature",
            "          ACK:'ack')",
            "        NEWLINE:'\\n')",
            "      (extended_access_list_tail",
            "        ala = (access_list_action",
            "          PERMIT:'permit')",
            "        prot = (protocol",
            "          TCP:'tcp')",
            "        srcipr = (access_list_ip_range",
            "          prefix = IP_PREFIX:'1.2.3.4/31')",
            "        dstipr = (access_list_ip_range",
            "          ANY:'any')",
            "        (extended_access_list_additional_feature",
            "          RST:'rst')",
            "        NEWLINE:'\\n')",
            "      (extended_access_list_tail",
            "        ala = (access_list_action",
            "          PERMIT:'permit')",
            "        prot = (protocol",
            "          TCP:'tcp')",
            "        srcipr = (access_list_ip_range",
            "          prefix = IP_PREFIX:'1.2.3.4/31')",
            "        dstipr = (access_list_ip_range",
            "          ANY:'any')",
            "        (extended_access_list_additional_feature",
            "          SYN:'syn')",
            "        (extended_access_list_additional_feature",
            "          ACK:'ack')",
            "        (extended_access_list_additional_feature",
            "          URG:'urg')",
            "        (extended_access_list_additional_feature",
            "          PSH:'psh')",
            "        (extended_access_list_additional_feature",
            "          RST:'rst')",
            "        (extended_access_list_additional_feature",
            "          ECE:'ece')",
            "        (extended_access_list_additional_feature",
            "          FIN:'fin')",
            "        (extended_access_list_additional_feature",
            "          CWR:'cwr')",
            "        NEWLINE:'\\n')",
            "      (extended_access_list_tail",
            "        ala = (access_list_action",
            "          PERMIT:'permit')",
            "        prot = (protocol",
            "          TCP:'tcp')",
            "        srcipr = (access_list_ip_range",
            "          prefix = IP_PREFIX:'1.2.3.4/31')",
            "        dstipr = (access_list_ip_range",
            "          ANY:'any')",
            "        (extended_access_list_additional_feature",
            "          FIN:'fin')",
            "        NEWLINE:'\\n')",
            "      (extended_access_list_tail",
            "        ala = (access_list_action",
            "          PERMIT:'permit')",
            "        prot = (protocol",
            "          TCP:'tcp')",
            "        srcipr = (access_list_ip_range",
            "          prefix = IP_PREFIX:'1.2.3.4/31')",
            "        dstipr = (access_list_ip_range",
            "          ANY:'any')",
            "        (extended_access_list_additional_feature",
            "          FIN:'fin')",
            "        (extended_access_list_additional_feature",
            "          ACK:'ack')",
            "        NEWLINE:'\\n')))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/underscore_variable" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'underscore_variable'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (route_map_stanza",
            "      ROUTE_MAP:'route-map'",
            "      name = (variable",
            "        VARIABLE:'JKL_MNO_PQR'  <== mode:M_RouteMap)",
            "      rmt = (access_list_action",
            "        PERMIT:'permit')",
            "      num = DEC:'100'",
            "      NEWLINE:'\\n'",
            "      (rm_stanza",
            "        (match_rm_stanza",
            "          (match_ip_prefix_list_rm_stanza",
            "            MATCH:'match'",
            "            IP:'ip'",
            "            ADDRESS:'address'",
            "            PREFIX_LIST:'prefix-list'",
            "            (variable",
            "              VARIABLE:'ABC_DEF'  <== mode:M_Words)",
            "            (variable",
            "              VARIABLE:'_GHI'  <== mode:M_Words)",
            "            NEWLINE:'\\n'  <== mode:M_Words)))))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        END:'end'",
            "        NEWLINE:'\\n\\n')))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/variables" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'variables'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_interface",
            "      INTERFACE:'interface'",
            "      iname = (interface_name",
            "        name_prefix_alpha = M_Interface_PREFIX:'FastEthernet'  <== mode:M_Interface",
            "        DEC:'0'  <== mode:M_Interface",
            "        FORWARD_SLASH:'/'  <== mode:M_Interface",
            "        (range",
            "          (subrange",
            "            low = DEC:'0'  <== mode:M_Interface)))",
            "      NEWLINE:'\\n'  <== mode:M_Interface",
            "      (if_inner",
            "        (if_ip_access_group",
            "          IP:'ip'",
            "          ACCESS_GROUP:'access-group'",
            "          name = (variable",
            "            VARIABLE:'ABC_def.gh_vlan789_out_20000101')",
            "          OUT:'out'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        END:'end'",
            "        NEWLINE:'\\n\\n')))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/variables_dos" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'variables_dos'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_interface",
            "      INTERFACE:'interface'",
            "      iname = (interface_name",
            "        name_prefix_alpha = M_Interface_PREFIX:'FastEthernet'  <== mode:M_Interface",
            "        DEC:'0'  <== mode:M_Interface",
            "        FORWARD_SLASH:'/'  <== mode:M_Interface",
            "        (range",
            "          (subrange",
            "            low = DEC:'0'  <== mode:M_Interface)))",
            "      NEWLINE:'\\n'  <== mode:M_Interface",
            "      (if_inner",
            "        (if_ip_access_group",
            "          IP:'ip'",
            "          ACCESS_GROUP:'access-group'",
            "          name = (variable",
            "            VARIABLE:'ABC_def.gh_vlan789_out_20000101')",
            "          OUT:'out'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        END:'end'",
            "        NEWLINE:'\\n\\n')))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/vlan_access_map2" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'vlan_access_map4'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_flow",
            "      FLOW:'flow'",
            "      EXPORTER_MAP:'exporter-map'",
            "      (null_rest_of_line",
            "        VARIABLE:'FEM1'",
            "        NEWLINE:'\\n')",
            "      (flow_version",
            "        VERSION:'version'",
            "        (null_rest_of_line",
            "          VARIABLE:'v9'",
            "          NEWLINE:'\\n')",
            "        (flowv_null",
            "          OPTIONS:'options'",
            "          (null_rest_of_line",
            "            VARIABLE:'interface-table'",
            "            TIMEOUT:'timeout'",
            "            DEC:'60'",
            "            NEWLINE:'\\n')))))",
            "  (stanza",
            "    (router_bgp_stanza",
            "      ROUTER:'router'",
            "      BGP:'bgp'",
            "      procnum = (bgp_asn",
            "        asn = DEC:'410')",
            "      NEWLINE:'\\n'",
            "      (router_bgp_stanza_tail",
            "        (neighbor_flat_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          ip = IP_ADDRESS:'10.10.212.233'  <== mode:M_NEIGHBOR",
            "          (bgp_tail",
            "            (shutdown_bgp_tail",
            "              SHUTDOWN:'shut'",
            "              NEWLINE:'\\n'))))))",
            "  (stanza",
            "    (s_interface_line",
            "      INTERFACE:'interface'",
            "      BREAKOUT:'breakout'  <== mode:M_Interface",
            "      (null_rest_of_line",
            "        MODULE:'module'",
            "        DEC:'1'",
            "        PORT:'port'",
            "        DEC:'34'",
            "        DASH:'-'",
            "        DEC:'36'",
            "        MAP:'map'",
            "        VARIABLE:'10g-4x'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (route_policy_stanza",
            "      ROUTE_POLICY:'route-policy'",
            "      name = (variable",
            "        VARIABLE:'EBGP-PEER')",
            "      NEWLINE:'\\n'",
            "      (rp_stanza",
            "        (set_rp_stanza",
            "          (set_community_rp_stanza",
            "            SET:'set'",
            "            COMMUNITY:'community'",
            "            (rp_community_set",
            "              PAREN_LEFT:'('",
            "              (community_set_elem",
            "                (community",
            "                  STANDARD_COMMUNITY:'8075:51000'))",
            "              PAREN_RIGHT:')')",
            "            NEWLINE:'\\n')))",
            "      (rp_stanza",
            "        (disposition_rp_stanza",
            "          PASS:'pass'",
            "          NEWLINE:'\\n'))",
            "      END_POLICY:'end-policy'",
            "      NEWLINE:'\\n\\n'))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/vrf_context" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'vrf_context'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_vrf_context",
            "      VRF:'vrf'",
            "      CONTEXT:'context'",
            "      name = (variable",
            "        VARIABLE:'aa')",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_vrf_context",
            "      VRF:'vrf'",
            "      CONTEXT:'context'",
            "      name = (variable",
            "        MANAGEMENT:'management')",
            "      NEWLINE:'\\n'",
            "      (vrfc_ip_route",
            "        IP:'ip'",
            "        ROUTE:'route'",
            "        (ip_route_tail",
            "          prefix = IP_PREFIX:'0.0.0.0/0'",
            "          nexthopip = IP_ADDRESS:'1.2.3.4'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (s_spanning_tree",
            "      SPANNING_TREE:'spanning-tree'",
            "      (spanning_tree_null",
            "        MODE:'mode'",
            "        (null_rest_of_line",
            "          MST:'mst'",
            "          NEWLINE:'\\n'))))",
            "  (stanza",
            "    (ip_route_stanza",
            "      IP:'ip'",
            "      ROUTE:'route'",
            "      (ip_route_tail",
            "        prefix = IP_PREFIX:'1.1.1.0/24'",
            "        nexthopip = IP_ADDRESS:'5.6.7.8'",
            "        NEWLINE:'\\n')))",
            "  (stanza",
            "    (s_vrf_definition",
            "      VRF:'vrf'",
            "      name = (variable",
            "        VARIABLE:'LHCONE')",
            "      NEWLINE:'\\n'",
            "      (vrfd_null",
            "        RD:'rd'",
            "        (null_rest_of_line",
            "          DEC:'2153'",
            "          COLON:':'",
            "          DEC:'1001'",
            "          NEWLINE:'\\n'))",
            "      (vrfd_null",
            "        ROUTE_TARGET:'route-target'",
            "        (null_rest_of_line",
            "          EXPORT:'export'",
            "          DEC:'2153'",
            "          COLON:':'",
            "          DEC:'1001'",
            "          NEWLINE:'\\n'))",
            "      (vrfd_null",
            "        ROUTE_TARGET:'route-target'",
            "        (null_rest_of_line",
            "          IMPORT:'import'",
            "          DEC:'2153'",
            "          COLON:':'",
            "          DEC:'1001'",
            "          NEWLINE:'\\n'))",
            "      (vrfd_address_family",
            "        ADDRESS_FAMILY:'address-family'",
            "        IPV4:'ipv4'",
            "        MAX_ROUTE:'max-route'",
            "        DEC:'5121'",
            "        NEWLINE:'\\n'",
            "        EXIT_ADDRESS_FAMILY:'exit-address-family'",
            "        NEWLINE:'\\n')",
            "      (vrfd_address_family",
            "        ADDRESS_FAMILY:'address-family'",
            "        IPV6:'ipv6'",
            "        MAX_ROUTE:'max-route'",
            "        DEC:'129'",
            "        NEWLINE:'\\n'",
            "        EXIT_ADDRESS_FAMILY:'exit-address-family'",
            "        NEWLINE:'\\n')",
            "      EXIT_VRF:'exit-vrf'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_null",
            "      (null_single",
            "        END:'end'",
            "        NEWLINE:'\\n\\n')))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/vxlan" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VXLAN:'vxlan'",
            "      NEWLINE:'\\n'))",
            "  (stanza",
            "    (s_null",
            "      (null_block",
            "        VXLAN:'vxlan'",
            "        (null_rest_of_line",
            "          VARIABLE:'dummy-l2-tunnel-udp-port'",
            "          DEC:'1234'",
            "          NEWLINE:'\\n\\n'))))",
            "  EOF:<EOF>)"
          ]
        },
        "iptables/host1.iptables" : {
          "sentences" : [
            "(iptables_configuration",
            "  (declaration_table",
            "    ASTERISK:'*'",
            "    (table",
            "      TABLE_MANGLE:'mangle')",
            "    NEWLINE:'\\n')",
            "  (declaration_chain_policy",
            "    COLON:':'",
            "    (chain",
            "      custom_chain = VARIABLE:'PREROUTING')",
            "    (built_in_target",
            "      ACCEPT:'ACCEPT')",
            "    BRACKET_LEFT:'['",
            "    DEC:'16586'",
            "    COLON:':'",
            "    DEC:'1618694'",
            "    BRACKET_RIGHT:']'",
            "    NEWLINE:'\\n')",
            "  (declaration_chain_policy",
            "    COLON:':'",
            "    (chain",
            "      INPUT:'INPUT')",
            "    (built_in_target",
            "      ACCEPT:'ACCEPT')",
            "    BRACKET_LEFT:'['",
            "    DEC:'16586'",
            "    COLON:':'",
            "    DEC:'1618694'",
            "    BRACKET_RIGHT:']'",
            "    NEWLINE:'\\n')",
            "  (declaration_chain_policy",
            "    COLON:':'",
            "    (chain",
            "      FORWARD:'FORWARD')",
            "    (built_in_target",
            "      ACCEPT:'ACCEPT')",
            "    BRACKET_LEFT:'['",
            "    DEC:'0'",
            "    COLON:':'",
            "    DEC:'0'",
            "    BRACKET_RIGHT:']'",
            "    NEWLINE:'\\n')",
            "  (declaration_chain_policy",
            "    COLON:':'",
            "    (chain",
            "      OUTPUT:'OUTPUT')",
            "    (built_in_target",
            "      ACCEPT:'ACCEPT')",
            "    BRACKET_LEFT:'['",
            "    DEC:'18957'",
            "    COLON:':'",
            "    DEC:'2978114'",
            "    BRACKET_RIGHT:']'",
            "    NEWLINE:'\\n')",
            "  (declaration_chain_policy",
            "    COLON:':'",
            "    (chain",
            "      custom_chain = VARIABLE:'POSTROUTING')",
            "    (built_in_target",
            "      ACCEPT:'ACCEPT')",
            "    BRACKET_LEFT:'['",
            "    DEC:'18957'",
            "    COLON:':'",
            "    DEC:'2978114'",
            "    BRACKET_RIGHT:']'",
            "    NEWLINE:'\\n')",
            "  COMMIT:'COMMIT'",
            "  NEWLINE:'\\n'",
            "  (declaration_table",
            "    ASTERISK:'*'",
            "    (table",
            "      TABLE_FILTER:'filter')",
            "    NEWLINE:'\\n')",
            "  (declaration_chain_policy",
            "    COLON:':'",
            "    (chain",
            "      INPUT:'INPUT')",
            "    (built_in_target",
            "      ACCEPT:'ACCEPT')",
            "    BRACKET_LEFT:'['",
            "    DEC:'157'",
            "    COLON:':'",
            "    DEC:'11076'",
            "    BRACKET_RIGHT:']'",
            "    NEWLINE:'\\n')",
            "  (declaration_chain_policy",
            "    COLON:':'",
            "    (chain",
            "      OUTPUT:'OUTPUT')",
            "    (built_in_target",
            "      ACCEPT:'ACCEPT')",
            "    BRACKET_LEFT:'['",
            "    DEC:'114'",
            "    COLON:':'",
            "    DEC:'18840'",
            "    BRACKET_RIGHT:']'",
            "    NEWLINE:'\\n')",
            "  (command",
            "    (command_tail",
            "      (command_append",
            "        FLAG_APPEND:'-A'",
            "        (chain",
            "          INPUT:'INPUT')",
            "        (rule_spec",
            "          (match",
            "            OPTION_SOURCE:'-s'",
            "            (endpoint",
            "              IP_PREFIX:'1.2.3.4/32'))",
            "          (match",
            "            OPTION_PROTOCOL:'-p'",
            "            (protocol",
            "              TCP:'tcp'))",
            "          (match",
            "            OPTION_MATCH:'-m'",
            "            (match_module",
            "              (match_module_tcp",
            "                TCP:'tcp')))",
            "          (match",
            "            OPTION_DESTINATION_PORT:'--dport'",
            "            port = DEC:'22')",
            "          (action",
            "            OPTION_JUMP:'-j'",
            "            (built_in_target",
            "              ACCEPT:'ACCEPT')))))",
            "    NEWLINE:'\\n')",
            "  (command",
            "    (command_tail",
            "      (command_append",
            "        FLAG_APPEND:'-A'",
            "        (chain",
            "          INPUT:'INPUT')",
            "        (rule_spec",
            "          (match",
            "            OPTION_SOURCE:'-s'",
            "            (endpoint",
            "              IP_PREFIX:'11.22.33.44/32'))",
            "          (match",
            "            OPTION_PROTOCOL:'-p'",
            "            (protocol",
            "              TCP:'tcp'))",
            "          (match",
            "            OPTION_MATCH:'-m'",
            "            (match_module",
            "              (match_module_tcp",
            "                TCP:'tcp')))",
            "          (match",
            "            OPTION_DESTINATION_PORT:'--dport'",
            "            port = DEC:'25')",
            "          (action",
            "            OPTION_JUMP:'-j'",
            "            (built_in_target",
            "              ACCEPT:'ACCEPT')))))",
            "    NEWLINE:'\\n')",
            "  (command",
            "    (command_tail",
            "      (command_append",
            "        FLAG_APPEND:'-A'",
            "        (chain",
            "          INPUT:'INPUT')",
            "        (rule_spec",
            "          (match",
            "            OPTION_SOURCE:'-s'",
            "            (endpoint",
            "              IP_PREFIX:'111.222.111.222/32'))",
            "          (match",
            "            OPTION_PROTOCOL:'-p'",
            "            (protocol",
            "              TCP:'tcp'))",
            "          (match",
            "            OPTION_MATCH:'-m'",
            "            (match_module",
            "              (match_module_tcp",
            "                TCP:'tcp')))",
            "          (match",
            "            OPTION_DESTINATION_PORT:'--dport'",
            "            port = DEC:'80')",
            "          (action",
            "            OPTION_JUMP:'-j'",
            "            (built_in_target",
            "              ACCEPT:'ACCEPT')))))",
            "    NEWLINE:'\\n')",
            "  (command",
            "    (command_tail",
            "      (command_append",
            "        FLAG_APPEND:'-A'",
            "        (chain",
            "          INPUT:'INPUT')",
            "        (rule_spec",
            "          (match",
            "            OPTION_SOURCE:'-s'",
            "            (endpoint",
            "              IP_PREFIX:'4.3.2.1/32'))",
            "          (match",
            "            OPTION_PROTOCOL:'-p'",
            "            (protocol",
            "              TCP:'tcp'))",
            "          (match",
            "            OPTION_MATCH:'-m'",
            "            (match_module",
            "              (match_module_tcp",
            "                TCP:'tcp')))",
            "          (match",
            "            OPTION_DESTINATION_PORT:'--dport'",
            "            port = DEC:'110')",
            "          (action",
            "            OPTION_JUMP:'-j'",
            "            (built_in_target",
            "              ACCEPT:'ACCEPT')))))",
            "    NEWLINE:'\\n')",
            "  (command",
            "    (command_tail",
            "      (command_append",
            "        FLAG_APPEND:'-A'",
            "        (chain",
            "          INPUT:'INPUT')",
            "        (rule_spec",
            "          (match",
            "            OPTION_SOURCE:'-s'",
            "            (endpoint",
            "              IP_PREFIX:'44.22.33.11/32'))",
            "          (match",
            "            OPTION_PROTOCOL:'-p'",
            "            (protocol",
            "              TCP:'tcp'))",
            "          (match",
            "            OPTION_MATCH:'-m'",
            "            (match_module",
            "              (match_module_tcp",
            "                TCP:'tcp')))",
            "          (match",
            "            OPTION_DESTINATION_PORT:'--dport'",
            "            port = DEC:'143')",
            "          (action",
            "            OPTION_JUMP:'-j'",
            "            (built_in_target",
            "              ACCEPT:'ACCEPT')))))",
            "    NEWLINE:'\\n')",
            "  COMMIT:'COMMIT'",
            "  NEWLINE:'\\n'",
            "  (declaration_table",
            "    ASTERISK:'*'",
            "    (table",
            "      TABLE_NAT:'nat')",
            "    NEWLINE:'\\n')",
            "  (declaration_chain_policy",
            "    COLON:':'",
            "    (chain",
            "      custom_chain = VARIABLE:'PREROUTING')",
            "    (built_in_target",
            "      ACCEPT:'ACCEPT')",
            "    BRACKET_LEFT:'['",
            "    DEC:'1695'",
            "    COLON:':'",
            "    DEC:'100150'",
            "    BRACKET_RIGHT:']'",
            "    NEWLINE:'\\n')",
            "  (declaration_chain_policy",
            "    COLON:':'",
            "    (chain",
            "      custom_chain = VARIABLE:'POSTROUTING')",
            "    (built_in_target",
            "      ACCEPT:'ACCEPT')",
            "    BRACKET_LEFT:'['",
            "    DEC:'1626'",
            "    COLON:':'",
            "    DEC:'121319'",
            "    BRACKET_RIGHT:']'",
            "    NEWLINE:'\\n')",
            "  (declaration_chain_policy",
            "    COLON:':'",
            "    (chain",
            "      OUTPUT:'OUTPUT')",
            "    (built_in_target",
            "      ACCEPT:'ACCEPT')",
            "    BRACKET_LEFT:'['",
            "    DEC:'1626'",
            "    COLON:':'",
            "    DEC:'121319'",
            "    BRACKET_RIGHT:']'",
            "    NEWLINE:'\\n')",
            "  COMMIT:'COMMIT'",
            "  NEWLINE:'\\n')"
          ]
        },
        "iptables/host2.iptables" : {
          "sentences" : [
            "(iptables_configuration",
            "  (declaration_table",
            "    ASTERISK:'*'",
            "    (table",
            "      TABLE_MANGLE:'mangle')",
            "    NEWLINE:'\\n')",
            "  (command",
            "    (command_tail",
            "      (command_append",
            "        FLAG_APPEND:'-A'",
            "        (chain",
            "          custom_chain = VARIABLE:'PREROUTING')",
            "        (rule_spec",
            "          (match",
            "            OPTION_SOURCE:'-s'",
            "            (endpoint",
            "              IP_PREFIX:'2.128.0.101/32'))",
            "          (match",
            "            OPTION_IN_INTERFACE:'-i'",
            "            interface_name = VARIABLE:'eth0')",
            "          (action",
            "            OPTION_JUMP:'-j'",
            "            (built_in_target",
            "              ACCEPT:'ACCEPT')))))",
            "    NEWLINE:'\\n')",
            "  (command",
            "    (command_tail",
            "      (command_append",
            "        FLAG_APPEND:'-A'",
            "        (chain",
            "          custom_chain = VARIABLE:'PREROUTING')",
            "        (rule_spec",
            "          (action",
            "            OPTION_JUMP:'-j'",
            "            (built_in_target",
            "              DROP:'DROP')))))",
            "    NEWLINE:'\\n')",
            "  COMMIT:'COMMIT'",
            "  NEWLINE:'\\n')"
          ]
        }
      },
      "version" : "0.36.0",
      "warnings" : {
        "configs/arista_nat" : {
          "Parse warnings" : [
            {
              "Comment" : "Subnet of NAT pool pool2 does not contain last pool IP",
              "Line" : 9,
              "Parser_Context" : "[ip_nat_pool s_ip_nat stanza cisco_configuration]",
              "Text" : "ip nat pool pool2 1.1.1.1 1.1.1.2 netmask 255.255.255.255"
            },
            {
              "Comment" : "Subnet of NAT pool pool3 does not contain last pool IP",
              "Line" : 10,
              "Parser_Context" : "[ip_nat_pool s_ip_nat stanza cisco_configuration]",
              "Text" : "ip nat pool pool3 1.1.1.1 1.1.1.2 prefix-length 32"
            }
          ]
        },
        "configs/aruba_misc" : {
          "Parse warnings" : [
            {
              "Comment" : "This feature is not currently supported",
              "Line" : 90,
              "Parser_Context" : "[s_ip_default_gateway stanza cisco_configuration]",
              "Text" : "no ip default-gateway import cell"
            },
            {
              "Comment" : "This feature is not currently supported",
              "Line" : 91,
              "Parser_Context" : "[s_ip_default_gateway stanza cisco_configuration]",
              "Text" : "no ip default-gateway import pppoe"
            }
          ]
        },
        "configs/asa_acl" : {
          "Parse warnings" : [
            {
              "Comment" : "This feature is not currently supported",
              "Line" : 9,
              "Parser_Context" : "[access_list_ip_range extended_access_list_tail extended_access_list_stanza stanza cisco_configuration]",
              "Text" : "interface outside"
            }
          ]
        },
        "configs/asa_nat" : {
          "Parse warnings" : [
            {
              "Comment" : "This feature is not currently supported",
              "Line" : 6,
              "Parser_Context" : "[s_asa_twice_nat stanza cisco_configuration]",
              "Text" : "nat (any,any) source dynamic source-net pat-pool pool block-allocation round-robin"
            },
            {
              "Comment" : "This feature is not currently supported",
              "Line" : 7,
              "Parser_Context" : "[s_asa_twice_nat stanza cisco_configuration]",
              "Text" : "nat (inside,outside) source dynamic net1 net2 interface"
            },
            {
              "Comment" : "This feature is not currently supported",
              "Line" : 9,
              "Parser_Context" : "[s_asa_twice_nat stanza cisco_configuration]",
              "Text" : "nat (inside,outside) source static net1 net2 route-lookup"
            },
            {
              "Comment" : "This feature is not currently supported",
              "Line" : 10,
              "Parser_Context" : "[s_asa_twice_nat stanza cisco_configuration]",
              "Text" : "nat source dynamic source-net pat-pool pool extended flat include-reserve"
            },
            {
              "Comment" : "This feature is not currently supported",
              "Line" : 12,
              "Parser_Context" : "[s_asa_twice_nat stanza cisco_configuration]",
              "Text" : "nat source static net1 net2 dns no-proxy-arp unidirectional"
            },
            {
              "Comment" : "This feature is not currently supported",
              "Line" : 13,
              "Parser_Context" : "[s_asa_twice_nat stanza cisco_configuration]",
              "Text" : "nat source static net1 net2 service service1 service2"
            },
            {
              "Comment" : "This feature is not currently supported",
              "Line" : 16,
              "Parser_Context" : "[onn_dynamic on_nat o_network s_object stanza cisco_configuration]",
              "Text" : "dynamic interface"
            },
            {
              "Comment" : "This feature is not currently supported",
              "Line" : 17,
              "Parser_Context" : "[onn_dynamic on_nat o_network s_object stanza cisco_configuration]",
              "Text" : "dynamic 1.1.1.1"
            },
            {
              "Comment" : "This feature is not currently supported",
              "Line" : 18,
              "Parser_Context" : "[onn_dynamic on_nat o_network s_object stanza cisco_configuration]",
              "Text" : "dynamic source-mapped dns"
            },
            {
              "Comment" : "This feature is not currently supported",
              "Line" : 19,
              "Parser_Context" : "[onn_dynamic on_nat o_network s_object stanza cisco_configuration]",
              "Text" : "dynamic source-mapped interface"
            },
            {
              "Comment" : "This feature is not currently supported",
              "Line" : 20,
              "Parser_Context" : "[onn_dynamic on_nat o_network s_object stanza cisco_configuration]",
              "Text" : "dynamic pat-pool WORD interface flat"
            },
            {
              "Comment" : "This feature is not currently supported",
              "Line" : 21,
              "Parser_Context" : "[onn_static on_nat o_network s_object stanza cisco_configuration]",
              "Text" : "static interface"
            },
            {
              "Comment" : "This feature is not currently supported",
              "Line" : 22,
              "Parser_Context" : "[onn_static on_nat o_network s_object stanza cisco_configuration]",
              "Text" : "static source-mapped no-proxy-arp route-lookup"
            },
            {
              "Comment" : "This feature is not currently supported",
              "Line" : 23,
              "Parser_Context" : "[onn_static on_nat o_network s_object stanza cisco_configuration]",
              "Text" : "static source-mapped service sctp ftp bgp"
            }
          ],
          "Red flags" : [
            {
              "tag" : "MISCELLANEOUS",
              "text" : "Undefined network object or network object-group net1"
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "Undefined network object or network object-group interface"
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "Undefined network object or network object-group interface"
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "Undefined network object or network object-group net2"
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "Undefined network object or network object-group net1"
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "Undefined network object or network object-group net2"
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "Undefined network object or network object-group net1"
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "Undefined network object or network object-group net2"
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "Undefined network object or network object-group net3"
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "Undefined network object or network object-group net4"
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "Undefined network object or network object-group net1"
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "Undefined network object or network object-group net2"
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "Undefined network object or network object-group net1"
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "Undefined network object or network object-group net2"
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "Undefined network object or network object-group source-mapped"
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "Undefined network object or network object-group source-mapped"
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "Undefined network object or network object-group source-mapped"
            }
          ]
        },
        "configs/bgp_default_originate_policy" : {
          "Red flags" : [
            {
              "tag" : "MISCELLANEOUS",
              "text" : "Unimplemented: IOS-XR RPL functionsroute-policy cust_v4_in(ama-coe-v4, ama-coe-as-path, ama-coe-no-auth, ama-coe-need-auth, 65517, ama-coe-isp-authorized) in\n"
            }
          ]
        },
        "configs/cadant_acl" : {
          "Parse warnings" : [
            {
              "Comment" : "clause in IPv6 extended access list",
              "Line" : 22,
              "Parser_Context" : "[extended_ipv6_access_list_tail extended_ipv6_access_list_stanza stanza cisco_configuration]",
              "Text" : "123"
            },
            {
              "Comment" : "clause in IPv6 extended access list",
              "Line" : 24,
              "Parser_Context" : "[extended_ipv6_access_list_tail extended_ipv6_access_list_stanza stanza cisco_configuration]",
              "Text" : "nd-type"
            },
            {
              "Comment" : "clause in IPv6 extended access list",
              "Line" : 24,
              "Parser_Context" : "[extended_ipv6_access_list_tail extended_ipv6_access_list_stanza stanza cisco_configuration]",
              "Text" : "133"
            }
          ]
        },
        "configs/cisco_acl" : {
          "Parse warnings" : [
            {
              "Comment" : "clause in extended access list",
              "Line" : 10,
              "Parser_Context" : "[extended_access_list_tail extended_access_list_stanza stanza cisco_configuration]",
              "Text" : "ttl eq 255"
            },
            {
              "Comment" : "clause in extended access list",
              "Line" : 11,
              "Parser_Context" : "[extended_access_list_tail extended_access_list_stanza stanza cisco_configuration]",
              "Text" : "ttl eq 255"
            }
          ]
        },
        "configs/cisco_bgp" : {
          "Parse warnings" : [
            {
              "Comment" : "This feature is not currently supported",
              "Line" : 10,
              "Parser_Context" : "[filter_list_bgp_tail neighbor_flat_rb_stanza router_bgp_stanza_tail router_bgp_stanza stanza cisco_configuration]",
              "Text" : "filter-list 10 out"
            },
            {
              "Comment" : "This feature is not currently supported",
              "Line" : 14,
              "Parser_Context" : "[filter_list_bgp_tail neighbor_flat_rb_stanza router_bgp_stanza_tail router_bgp_stanza stanza cisco_configuration]",
              "Text" : "filter-list 20 in"
            },
            {
              "Comment" : "This feature is not currently supported",
              "Line" : 18,
              "Parser_Context" : "[filter_list_bgp_tail neighbor_flat_rb_stanza router_bgp_stanza_tail router_bgp_stanza stanza cisco_configuration]",
              "Text" : "filter-list 40 in"
            },
            {
              "Comment" : "This feature is not currently supported",
              "Line" : 29,
              "Parser_Context" : "[redistribute_ospf_bgp_tail bgp_tail router_bgp_stanza_tail router_bgp_stanza stanza cisco_configuration]",
              "Text" : "redistribute ospf abc"
            },
            {
              "Comment" : "This feature is not currently supported",
              "Line" : 30,
              "Parser_Context" : "[redistribute_ospf_bgp_tail bgp_tail router_bgp_stanza_tail router_bgp_stanza stanza cisco_configuration]",
              "Text" : "redistribute ospf 2"
            },
            {
              "Comment" : "This feature is not currently supported",
              "Line" : 31,
              "Parser_Context" : "[redistribute_ospf_bgp_tail bgp_tail router_bgp_stanza_tail router_bgp_stanza stanza cisco_configuration]",
              "Text" : "redistribute ospf 2 vrf vrf1"
            }
          ]
        },
        "configs/cisco_bgp_confederation" : {
          "Parse warnings" : [
            {
              "Comment" : "This feature is not currently supported",
              "Line" : 7,
              "Parser_Context" : "[bgp_confederation_rb_stanza router_bgp_stanza_tail router_bgp_stanza stanza cisco_configuration]",
              "Text" : "bgp confederation identifier 100"
            },
            {
              "Comment" : "This feature is not currently supported",
              "Line" : 8,
              "Parser_Context" : "[bgp_confederation_rb_stanza router_bgp_stanza_tail router_bgp_stanza stanza cisco_configuration]",
              "Text" : "bgp confederation peers 10 11"
            }
          ]
        },
        "configs/cisco_eigrp" : {
          "Parse warnings" : [
            {
              "Comment" : "This feature is not currently supported",
              "Line" : 13,
              "Parser_Context" : "[rec_metric_weights rec_address_family_tail rec_address_family re_classic_tail re_classic s_router_eigrp stanza cisco_configuration]",
              "Text" : "metric weights 0 1 2 3 4 5"
            },
            {
              "Comment" : "This feature is not currently supported",
              "Line" : 23,
              "Parser_Context" : "[rec_metric_weights re_classic_tail re_classic s_router_eigrp stanza cisco_configuration]",
              "Text" : "metric weights 0 1 2 3 4 5"
            },
            {
              "Comment" : "ISIS redistribution in EIGRP is not implemented",
              "Line" : 38,
              "Parser_Context" : "[re_redistribute_isis re_redistribute re_classic_tail re_classic s_router_eigrp stanza cisco_configuration]",
              "Text" : "redistribute isis route-map ISIS_TO_EIGRP"
            },
            {
              "Comment" : "This feature is not currently supported",
              "Line" : 39,
              "Parser_Context" : "[re_redistribute_ospf re_redistribute re_classic_tail re_classic s_router_eigrp stanza cisco_configuration]",
              "Text" : "redistribute ospf 4 route-map OSPF_TO_EIGRP"
            },
            {
              "Comment" : "This feature is not currently supported",
              "Line" : 119,
              "Parser_Context" : "[access_list_ip_range extended_access_list_tail extended_access_list_stanza stanza cisco_configuration]",
              "Text" : "addrgroup bleep_blorp"
            },
            {
              "Comment" : "This feature is not currently supported",
              "Line" : 122,
              "Parser_Context" : "[ren_address_family re_named_tail re_named s_router_eigrp stanza cisco_configuration]",
              "Text" : "address-family ipv4 multicast vrf autonomous-system autonomous-system 4\n  af-interface Ethernet0\n   add-paths 4\n   bandwidth-percent 75\n   dampening-change 75\n   dampening-interval 45\n   hold-time 40\n   passive-interface\n  exit-af-interface\n  eigrp default-route-tag 2\n  metric rib-scale 100\n  metric weights 0 1 2 3 4 5 6\n  network 1.1.1.100\n  remote-neighbors source GigabitEthernet0/0/1 unicast-listen lisp-encap 2\n  topology base\n   metric maximum-hops 10\n   offset-list 21 out 10\n   summary-metric 192.168.0.0/16 10000 10 255 1 1500 distance 20\n   traffic-share balanced\n   variance 4\n  exit-af-topology\n  topology VOICE tid 1000\n   no auto-summary\n  exit-af-topology\n  passive-interface default\n  no passive-interface FastEthernet0/1\n exit-address-family"
            },
            {
              "Comment" : "This feature is not currently supported",
              "Line" : 133,
              "Parser_Context" : "[ren_metric_weights ren_address_family_tail ren_address_family re_named_tail re_named s_router_eigrp stanza cisco_configuration]",
              "Text" : "metric weights 0 1 2 3 4 5 6"
            },
            {
              "Comment" : "This feature is not currently supported",
              "Line" : 151,
              "Parser_Context" : "[ren_metric_weights ren_service_family_tail ren_service_family re_named_tail re_named s_router_eigrp stanza cisco_configuration]",
              "Text" : "metric weights 0 1 2 3 4 5 6"
            }
          ]
        },
        "configs/cisco_interface" : {
          "Parse warnings" : [
            {
              "Comment" : "This feature is not currently supported",
              "Line" : 279,
              "Parser_Context" : "[if_zone_member if_inner s_interface stanza cisco_configuration]",
              "Text" : "zone-member t1"
            },
            {
              "Comment" : "This feature is not currently supported",
              "Line" : 315,
              "Parser_Context" : "[iftunnel_mode if_tunnel if_inner s_interface stanza cisco_configuration]",
              "Text" : "mode gre multipoint"
            }
          ]
        },
        "configs/cisco_ip_nat" : {
          "Parse warnings" : [
            {
              "Comment" : "Subnet of NAT pool abc does not contain last pool IP",
              "Line" : 4,
              "Parser_Context" : "[ip_nat_pool_range s_ip_nat stanza cisco_configuration]",
              "Text" : "ip nat pool abc prefix-length 32  \n range 10.1.2.3 10.1.2.4"
            },
            {
              "Comment" : "This feature is not currently supported",
              "Line" : 13,
              "Parser_Context" : "[ip_nat_source s_ip_nat stanza cisco_configuration]",
              "Text" : "ip nat outside source static 6.6.6.6 7.7.7.7 add-route no-alias"
            }
          ]
        },
        "configs/cisco_ipv6_access_list" : {
          "Parse warnings" : [
            {
              "Comment" : "clause in IPv6 extended access list",
              "Line" : 9,
              "Parser_Context" : "[extended_ipv6_access_list_tail extended_ipv6_access_list_stanza stanza cisco_configuration]",
              "Text" : "router"
            },
            {
              "Comment" : "clause in IPv6 extended access list",
              "Line" : 9,
              "Parser_Context" : "[extended_ipv6_access_list_tail extended_ipv6_access_list_stanza stanza cisco_configuration]",
              "Text" : "hoplimit"
            },
            {
              "Comment" : "clause in IPv6 extended access list",
              "Line" : 10,
              "Parser_Context" : "[extended_ipv6_access_list_tail extended_ipv6_access_list_stanza stanza cisco_configuration]",
              "Text" : "router"
            },
            {
              "Comment" : "clause in IPv6 extended access list",
              "Line" : 11,
              "Parser_Context" : "[extended_ipv6_access_list_tail extended_ipv6_access_list_stanza stanza cisco_configuration]",
              "Text" : "nd"
            },
            {
              "Comment" : "clause in IPv6 extended access list",
              "Line" : 12,
              "Parser_Context" : "[extended_ipv6_access_list_tail extended_ipv6_access_list_stanza stanza cisco_configuration]",
              "Text" : "nd"
            },
            {
              "Comment" : "clause in IPv6 extended access list",
              "Line" : 13,
              "Parser_Context" : "[extended_ipv6_access_list_tail extended_ipv6_access_list_stanza stanza cisco_configuration]",
              "Text" : "141"
            },
            {
              "Comment" : "clause in IPv6 extended access list",
              "Line" : 14,
              "Parser_Context" : "[extended_ipv6_access_list_tail extended_ipv6_access_list_stanza stanza cisco_configuration]",
              "Text" : "142"
            },
            {
              "Comment" : "clause in IPv6 extended access list",
              "Line" : 15,
              "Parser_Context" : "[extended_ipv6_access_list_tail extended_ipv6_access_list_stanza stanza cisco_configuration]",
              "Text" : "neighbor"
            },
            {
              "Comment" : "clause in IPv6 extended access list",
              "Line" : 20,
              "Parser_Context" : "[extended_ipv6_access_list_tail extended_ipv6_access_list_stanza stanza cisco_configuration]",
              "Text" : "mld-query"
            },
            {
              "Comment" : "clause in IPv6 extended access list",
              "Line" : 21,
              "Parser_Context" : "[extended_ipv6_access_list_tail extended_ipv6_access_list_stanza stanza cisco_configuration]",
              "Text" : "mld-report"
            },
            {
              "Comment" : "clause in IPv6 extended access list",
              "Line" : 22,
              "Parser_Context" : "[extended_ipv6_access_list_tail extended_ipv6_access_list_stanza stanza cisco_configuration]",
              "Text" : "mld-reduction"
            },
            {
              "Comment" : "clause in IPv6 extended access list",
              "Line" : 23,
              "Parser_Context" : "[extended_ipv6_access_list_tail extended_ipv6_access_list_stanza stanza cisco_configuration]",
              "Text" : "mldv2"
            }
          ]
        },
        "configs/cisco_ospf" : {
          "Parse warnings" : [
            {
              "Comment" : "This feature is not currently supported",
              "Line" : 26,
              "Parser_Context" : "[ro_area_filterlist s_router_ospf stanza cisco_configuration]",
              "Text" : "area 0.0.0.0 filter-list prefix filterName in"
            },
            {
              "Comment" : "This feature is not currently supported",
              "Line" : 27,
              "Parser_Context" : "[ro_area_filterlist s_router_ospf stanza cisco_configuration]",
              "Text" : "area 0.0.0.0 filter-list prefix filterName out"
            },
            {
              "Comment" : "This feature is not currently supported",
              "Line" : 52,
              "Parser_Context" : "[ro_distribute_list s_router_ospf stanza cisco_configuration]",
              "Text" : "distribute-list aclin in"
            },
            {
              "Comment" : "This feature is not currently supported",
              "Line" : 53,
              "Parser_Context" : "[ro_distribute_list s_router_ospf stanza cisco_configuration]",
              "Text" : "distribute-list aclin in ethernet0/0"
            },
            {
              "Comment" : "This feature is not currently supported",
              "Line" : 54,
              "Parser_Context" : "[ro_distribute_list s_router_ospf stanza cisco_configuration]",
              "Text" : "distribute-list aclout out"
            },
            {
              "Comment" : "This feature is not currently supported",
              "Line" : 55,
              "Parser_Context" : "[ro_distribute_list s_router_ospf stanza cisco_configuration]",
              "Text" : "distribute-list prefix plin in"
            },
            {
              "Comment" : "This feature is not currently supported",
              "Line" : 56,
              "Parser_Context" : "[ro_distribute_list s_router_ospf stanza cisco_configuration]",
              "Text" : "distribute-list prefix plout out"
            },
            {
              "Comment" : "This feature is not currently supported",
              "Line" : 57,
              "Parser_Context" : "[ro_distribute_list s_router_ospf stanza cisco_configuration]",
              "Text" : "distribute-list route-map rmin in"
            },
            {
              "Comment" : "This feature is not currently supported",
              "Line" : 58,
              "Parser_Context" : "[ro_distribute_list s_router_ospf stanza cisco_configuration]",
              "Text" : "distribute-list route-map rmout out"
            },
            {
              "Comment" : "This feature is not currently supported",
              "Line" : 65,
              "Parser_Context" : "[ro_maximum_paths s_router_ospf stanza cisco_configuration]",
              "Text" : "maximum-paths 32"
            },
            {
              "Comment" : "This feature is not currently supported",
              "Line" : 81,
              "Parser_Context" : "[ro_area_filterlist s_router_ospf stanza cisco_configuration]",
              "Text" : "area 0 filter-list prefix INFILTER in"
            },
            {
              "Comment" : "This feature is not currently supported",
              "Line" : 82,
              "Parser_Context" : "[ro_area_filterlist s_router_ospf stanza cisco_configuration]",
              "Text" : "area 0 filter-list prefix OUTFILTER out"
            }
          ]
        },
        "configs/cisco_ospf_multi_process" : {
          "Parse warnings" : [
            {
              "Comment" : "This feature is not currently supported",
              "Line" : 22,
              "Parser_Context" : "[ro_area_filterlist s_router_ospf stanza cisco_configuration]",
              "Text" : "area 0.0.0.0 filter-list prefix filterName in"
            },
            {
              "Comment" : "This feature is not currently supported",
              "Line" : 23,
              "Parser_Context" : "[ro_area_filterlist s_router_ospf stanza cisco_configuration]",
              "Text" : "area 0.0.0.0 filter-list prefix filterName out"
            }
          ]
        },
        "configs/cisco_route_map" : {
          "Parse warnings" : [
            {
              "Comment" : "This feature is not currently supported",
              "Line" : 33,
              "Parser_Context" : "[match_source_protocol_rm_stanza match_rm_stanza rm_stanza route_map_stanza stanza cisco_configuration]",
              "Text" : "match source-protocol ospf 1"
            },
            {
              "Comment" : "This feature is not currently supported",
              "Line" : 41,
              "Parser_Context" : "[match_source_protocol_rm_stanza match_rm_stanza rm_stanza route_map_stanza stanza cisco_configuration]",
              "Text" : "match source-protocol static"
            }
          ],
          "Red flags" : [
            {
              "tag" : "MISCELLANEOUS",
              "text" : "Route map 'MAP_NAME2' already contains clause numbered '20'. Duplicate clause will be merged with original clause."
            }
          ]
        },
        "configs/cisco_style_acl1" : {
          "Red flags" : [
            {
              "tag" : "MISCELLANEOUS",
              "text" : "No hostname set in file: 'configs/cisco_style_acl1'\n"
            }
          ]
        },
        "configs/cisco_style_acl2" : {
          "Red flags" : [
            {
              "tag" : "MISCELLANEOUS",
              "text" : "No hostname set in file: 'configs/cisco_style_acl2'\n"
            }
          ]
        },
        "configs/cisco_zone" : {
          "Parse warnings" : [
            {
              "Comment" : "This feature is not currently supported",
              "Line" : 10,
              "Parser_Context" : "[s_zone stanza cisco_configuration]",
              "Text" : "zone t1"
            }
          ]
        },
        "configs/cumulus_nclu" : {
          "Parse warnings" : [
            {
              "Comment" : "This feature is not currently supported",
              "Line" : 27,
              "Parser_Context" : "[brbr_vlan_aware bridge_bridge a_bridge s_net_add statement cumulus_nclu_configuration]",
              "Text" : "vlan-aware"
            },
            {
              "Comment" : "This feature is not currently supported",
              "Line" : 30,
              "Parser_Context" : "[a_dot1x s_net_add statement cumulus_nclu_configuration]",
              "Text" : "dot1x eap-reauth-period 0"
            },
            {
              "Comment" : "This feature is not currently supported",
              "Line" : 31,
              "Parser_Context" : "[a_dot1x s_net_add statement cumulus_nclu_configuration]",
              "Text" : "dot1x mab-activation-delay 30"
            },
            {
              "Comment" : "This feature is not currently supported",
              "Line" : 32,
              "Parser_Context" : "[a_dot1x s_net_add statement cumulus_nclu_configuration]",
              "Text" : "dot1x radius accounting-port 1234"
            },
            {
              "Comment" : "This feature is not currently supported",
              "Line" : 33,
              "Parser_Context" : "[a_dot1x s_net_add statement cumulus_nclu_configuration]",
              "Text" : "dot1x radius authentication-port 2345"
            },
            {
              "Comment" : "This feature is not currently supported",
              "Line" : 47,
              "Parser_Context" : "[a_ptp s_net_add statement cumulus_nclu_configuration]",
              "Text" : "ptp global domain-number 0"
            },
            {
              "Comment" : "This feature is not currently supported",
              "Line" : 48,
              "Parser_Context" : "[a_ptp s_net_add statement cumulus_nclu_configuration]",
              "Text" : "ptp global logging-level 5"
            },
            {
              "Comment" : "This feature is not currently supported",
              "Line" : 49,
              "Parser_Context" : "[a_ptp s_net_add statement cumulus_nclu_configuration]",
              "Text" : "ptp global path-trace-enabled no"
            },
            {
              "Comment" : "This feature is not currently supported",
              "Line" : 50,
              "Parser_Context" : "[a_ptp s_net_add statement cumulus_nclu_configuration]",
              "Text" : "ptp global priority1 255"
            },
            {
              "Comment" : "This feature is not currently supported",
              "Line" : 51,
              "Parser_Context" : "[a_ptp s_net_add statement cumulus_nclu_configuration]",
              "Text" : "ptp global slave-only no"
            },
            {
              "Comment" : "This feature is not currently supported",
              "Line" : 52,
              "Parser_Context" : "[a_ptp s_net_add statement cumulus_nclu_configuration]",
              "Text" : "ptp global summary-interval 0"
            },
            {
              "Comment" : "This feature is not currently supported",
              "Line" : 53,
              "Parser_Context" : "[a_ptp s_net_add statement cumulus_nclu_configuration]",
              "Text" : "ptp global time-stamping"
            },
            {
              "Comment" : "This feature is not currently supported",
              "Line" : 54,
              "Parser_Context" : "[a_ptp s_net_add statement cumulus_nclu_configuration]",
              "Text" : "ptp global use-syslog yes"
            },
            {
              "Comment" : "This feature is not currently supported",
              "Line" : 55,
              "Parser_Context" : "[a_ptp s_net_add statement cumulus_nclu_configuration]",
              "Text" : "ptp global verbose no"
            },
            {
              "Comment" : "This feature is not currently supported",
              "Line" : 56,
              "Parser_Context" : "[r_defaults_datacenter a_routing s_net_add statement cumulus_nclu_configuration]",
              "Text" : "defaults datacenter"
            },
            {
              "Comment" : "This feature is not currently supported",
              "Line" : 57,
              "Parser_Context" : "[r_log a_routing s_net_add statement cumulus_nclu_configuration]",
              "Text" : "log syslog informational"
            },
            {
              "Comment" : "This feature is not currently supported",
              "Line" : 60,
              "Parser_Context" : "[r_service_integrated_vtysh_config a_routing s_net_add statement cumulus_nclu_configuration]",
              "Text" : "service integrated-vtysh-config"
            },
            {
              "Comment" : "This feature is not currently supported",
              "Line" : 61,
              "Parser_Context" : "[a_snmp_server s_net_add statement cumulus_nclu_configuration]",
              "Text" : "snmp-server listening-address localhost"
            },
            {
              "Comment" : "This feature is not currently supported",
              "Line" : 62,
              "Parser_Context" : "[a_time s_net_add statement cumulus_nclu_configuration]",
              "Text" : "time ntp server 0.pool.ntp.example.com iburst"
            },
            {
              "Comment" : "This feature is not currently supported",
              "Line" : 63,
              "Parser_Context" : "[a_time s_net_add statement cumulus_nclu_configuration]",
              "Text" : "time ntp source eth0"
            },
            {
              "Comment" : "This feature is not currently supported",
              "Line" : 64,
              "Parser_Context" : "[a_time s_net_add statement cumulus_nclu_configuration]",
              "Text" : "time zone Etc/UTC"
            },
            {
              "Comment" : "This feature is not currently supported",
              "Line" : 68,
              "Parser_Context" : "[v_vlan_raw_device a_vlan s_net_add statement cumulus_nclu_configuration]",
              "Text" : "vlan-raw-device bridge"
            },
            {
              "Comment" : "This feature is not currently supported",
              "Line" : 76,
              "Parser_Context" : "[vxb_arp_nd_suppress vx_bridge a_vxlan s_net_add statement cumulus_nclu_configuration]",
              "Text" : "arp-nd-suppress on"
            },
            {
              "Comment" : "This feature is not currently supported",
              "Line" : 77,
              "Parser_Context" : "[vxb_learning vx_bridge a_vxlan s_net_add statement cumulus_nclu_configuration]",
              "Text" : "learning off"
            },
            {
              "Comment" : "This feature is not currently supported",
              "Line" : 78,
              "Parser_Context" : "[vx_stp a_vxlan s_net_add statement cumulus_nclu_configuration]",
              "Text" : "stp bpduguard"
            },
            {
              "Comment" : "This feature is not currently supported",
              "Line" : 79,
              "Parser_Context" : "[vx_stp a_vxlan s_net_add statement cumulus_nclu_configuration]",
              "Text" : "stp portbpdufilter"
            },
            {
              "Comment" : "This feature is not currently supported",
              "Line" : 86,
              "Parser_Context" : "[frr_username s_extra_configuration statement cumulus_nclu_configuration]",
              "Text" : "username cumulus nopassword\\n"
            }
          ],
          "Red flags" : [
            {
              "tag" : "MISCELLANEOUS",
              "text" : "Interface name 'vni10001' is invalid in: ports bond1,swp1,vni10001\n"
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "Cannot add illegal ports glob 'bond1,swp1,vni10001' to bridge in: ports bond1,swp1,vni10001\n"
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "All referenced vxlan instances must be created via 'net add vxlan <name> vxlan id <id>' before line: vxlan vni10001 bridge access 5\n"
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "All referenced vxlan instances must be created via 'net add vxlan <name> vxlan id <id>' before line: vxlan vni10001,10002-10003 bridge arp-nd-suppress on\n"
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "All referenced vxlan instances must be created via 'net add vxlan <name> vxlan id <id>' before line: vxlan vni10001,10002-10003 bridge learning off\n"
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "All referenced vxlan instances must be created via 'net add vxlan <name> vxlan id <id>' before line: vxlan vni10001,10002-10003 stp bpduguard\n"
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "All referenced vxlan instances must be created via 'net add vxlan <name> vxlan id <id>' before line: vxlan vni10001,10002-10003 stp portbpdufilter\n"
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "All referenced vxlan instances must be created via 'net add vxlan <name> vxlan id <id>' before line: vxlan vni10001,10002-10003 vxlan local-tunnelip 192.0.2.10\n"
            }
          ]
        },
        "configs/cumulus_nclu_invalid_bonds" : {
          "Red flags" : [
            {
              "tag" : "MISCELLANEOUS",
              "text" : "Invalid name 'lo' for bond in: bond lo bond slaves swp1\n"
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "Invalid name 'vrf1' for bond clashes with existing vrf in: bond vrf1 bond slaves swp2\n"
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "Invalid name 'eth0' for bond in: bond eth0 bond slaves swp3\n"
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "Invalid name 'swp4' for bond in: bond swp4 bond slaves swp5\n"
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "Invalid name 'bond1.1000' for bond in: bond bond1.1000 bond slaves swp6\n"
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "Invalid name 'vlan1' for bond in: bond vlan1 bond slaves swp7\n"
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "Invalid name 'v1' for bond clashes with existing vxlan in: bond v1 bond slaves swp8\n"
            }
          ]
        },
        "configs/cumulus_nclu_invalid_interfaces" : {
          "Red flags" : [
            {
              "tag" : "MISCELLANEOUS",
              "text" : "Interface name 'unknown_interface' is invalid in: slaves swp1,unknown_interface\n"
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "Interface name 'unknown_interface' is invalid in: interface unknown_interface ip address 10.0.0.1/24\n"
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "Loopback interface can only be configured via 'net add loopback' family of commands; following is invalid: interface lo ip address 10.0.2.1/24\n"
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "Subinterface name 'mgmt.1' is invalid since 'mgmt' is neither a physical nor a bond interface in: interface mgmt.1 ip address 10.0.3.1/24\n"
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "Subinterface name 'swp1.5000' is invalid since '5000' is not a valid VLAN number in: interface swp1.5000 ip address 10.0.4.1/24\n"
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "VRF loopback interface 'vrf1' can only be configured via 'net add vrf' family of commands; following is invalid: interface vrf1 ip address 10.0.5.1/24\n"
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "VXLAN interface 'v1' can only be configured via 'net add vxlan' family of commands; following is invalid: interface v1 ip address 10.0.6.1/24\n"
            }
          ]
        },
        "configs/cumulus_nclu_invalid_vrfs" : {
          "Red flags" : [
            {
              "tag" : "MISCELLANEOUS",
              "text" : "Invalid name 'lo' for vrf in: vrf lo,vrf1\n"
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "Invalid name 'bond1' for vrf clashes with existing bond interface in: vrf bond1\n"
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "Invalid name 'eth0' for vrf in: vrf eth0\n"
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "Invalid name 'swp2' for vrf in: vrf swp2\n"
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "Invalid name 'vrf1.1000' for vrf in: vrf vrf1.1000\n"
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "Invalid name 'vx1' for vrf clashes with existing vxlan in: vrf vx1\n"
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "Invalid name 'vlan1' for vrf in: vrf vlan1\n"
            }
          ]
        },
        "configs/cumulus_nclu_invalid_vxlans" : {
          "Red flags" : [
            {
              "tag" : "MISCELLANEOUS",
              "text" : "Invalid name 'lo' for vxlan in: vxlan lo vxlan id 10001\n"
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "Invalid name 'bond1' for vxlan clashes with existing bond interface in: vxlan bond1 vxlan id 10002\n"
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "Invalid name 'vrf1' for vxlan clashes with existing vrf in: vxlan vrf1 vxlan id 10003\n"
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "Invalid name 'eth0' for vxlan in: vxlan eth0 vxlan id 10004\n"
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "Invalid name 'swp0' for vxlan in: vxlan swp0 vxlan id 10005\n"
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "Invalid name 'vxlan1.1000' for vxlan in: vxlan vxlan1.1000 vxlan id 10006\n"
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "Invalid name 'vlan1' for vxlan in: vxlan vlan1 vxlan id 10007\n"
            }
          ]
        },
        "configs/f5_bigip_imish_malformed" : {
          "Red flags" : [
            {
              "tag" : "MISCELLANEOUS",
              "text" : "ge (min) arg '16' less than prefix-length '24' in: ip prefix-list pl1 seq 10 permit 10.0.0.0/24 ge 16\n"
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "le (max) arg '16' less than prefix-length '24' in: ip prefix-list pl1 seq 20 permit 10.0.0.0/24 le 16\n"
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "le (max) arg '26' less than ge (min) arg '28' in: ip prefix-list pl1 seq 30 permit 10.0.0.0/24 ge 28 le 26\n\n"
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "Cannot add description to non-existent neighbor: 'undeclared' in: 'neighbor undeclared description hello\n'"
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "Cannot assign bgp neighbor to non-existent peer-group: 'undefined-peer-group' in: 'neighbor 3.3.3.3 peer-group undefined-peer-group\n'"
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "Cannot assign remote-as to non-existent peer-group: 'undeclared-peer-group' in: 'neighbor undeclared-peer-group remote-as 3\n'"
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "Cannot assign outbound route-map to non-existent neighbor: 'undeclared-peer-group' in: 'neighbor undeclared-peer-group route-map rm1 out\n'"
            }
          ]
        },
        "configs/f5_bigip_structured_ltm" : {
          "Parse warnings" : [
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 6,
              "Parser_Context" : "[unrecognized statement f5_bigip_structured_configuration]",
              "Text" : "ltm global-settings connection"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 9,
              "Parser_Context" : "[unrecognized statement f5_bigip_structured_configuration]",
              "Text" : "ltm global-settings rule"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 10,
              "Parser_Context" : "[unrecognized statement f5_bigip_structured_configuration]",
              "Text" : "ltm default-node-monitor"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 13,
              "Parser_Context" : "[unrecognized statement f5_bigip_structured_configuration]",
              "Text" : "ltm ifile /Common/SOME_FILE"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 20,
              "Parser_Context" : "[unrecognized l_pool s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "description \"foo\""
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 21,
              "Parser_Context" : "[unrecognized l_pool s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "load-balancing-mode least-connections-member"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 25,
              "Parser_Context" : "[unrecognized lpm_member lp_members l_pool s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "description bar.baz"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 26,
              "Parser_Context" : "[unrecognized lpm_member lp_members l_pool s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "priority-group 2"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 32,
              "Parser_Context" : "[unrecognized l_pool s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "min-active-members 1"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 34,
              "Parser_Context" : "[unrecognized l_pool s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "service-down-action reset"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 35,
              "Parser_Context" : "[unrecognized l_pool s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "slow-ramp-time 123"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 38,
              "Parser_Context" : "[unrecognized l_rule s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "when HTTP_REQUEST priority 10"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 44,
              "Parser_Context" : "[unrecognized l_rule s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "when HTTP_REQUEST priority 10"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 50,
              "Parser_Context" : "[unrecognized l_rule s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "when HTTP_REQUEST priority 20"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 57,
              "Parser_Context" : "[unrecognized l_rule s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "when CLIENT_ACCEPTED"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 61,
              "Parser_Context" : "[unrecognized l_rule s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "when CLIENTSSL_HANDSHAKE"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 98,
              "Parser_Context" : "[unrecognized lvp_persistence lv_persist l_virtual s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "default yes"
            },
            {
              "Comment" : "This feature is not currently supported",
              "Line" : 97,
              "Parser_Context" : "[lvp_persistence lv_persist l_virtual s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "/Common/SOME_PROFILE {\n            default yes\n        }"
            },
            {
              "Comment" : "This feature is not currently supported",
              "Line" : 103,
              "Parser_Context" : "[lv_profiles_profile lv_profiles l_virtual s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "/Common/P1 { }"
            },
            {
              "Comment" : "This feature is not currently supported",
              "Line" : 104,
              "Parser_Context" : "[lv_profiles_profile lv_profiles l_virtual s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "/Common/P2 { }"
            },
            {
              "Comment" : "This feature is not currently supported",
              "Line" : 105,
              "Parser_Context" : "[lv_profiles_profile lv_profiles l_virtual s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "/Common/P3 { }"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 136,
              "Parser_Context" : "[unrecognized lm_http l_monitor s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "adaptive disabled"
            },
            {
              "Comment" : "This feature is not currently supported",
              "Line" : 137,
              "Parser_Context" : "[lmh_defaults_from lm_http l_monitor s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "defaults-from /Common/http"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 138,
              "Parser_Context" : "[unrecognized lm_http l_monitor s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "destination *:80"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 139,
              "Parser_Context" : "[unrecognized lm_http l_monitor s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "interval 5"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 140,
              "Parser_Context" : "[unrecognized lm_http l_monitor s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "ip-dscp 0"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 141,
              "Parser_Context" : "[unrecognized lm_http l_monitor s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "recv somerecvup"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 142,
              "Parser_Context" : "[unrecognized lm_http l_monitor s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "recv-disable none"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 143,
              "Parser_Context" : "[unrecognized lm_http l_monitor s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "send \"GET /some/path HTTP/1.1\nHost: somehost.example.com\nConnection: Close\n\n\""
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 148,
              "Parser_Context" : "[unrecognized lm_http l_monitor s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "time-until-up 0"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 149,
              "Parser_Context" : "[unrecognized lm_http l_monitor s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "timeout 12"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 152,
              "Parser_Context" : "[unrecognized lm_https l_monitor s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "adaptive disabled"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 153,
              "Parser_Context" : "[unrecognized lm_https l_monitor s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "cipherlist DEFAULT:+SHA:+3DES:+kEDH"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 154,
              "Parser_Context" : "[unrecognized lm_https l_monitor s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "compatibility enabled"
            },
            {
              "Comment" : "This feature is not currently supported",
              "Line" : 155,
              "Parser_Context" : "[lmhs_defaults_from lm_https l_monitor s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "defaults-from /Common/https"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 156,
              "Parser_Context" : "[unrecognized lm_https l_monitor s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "destination *:443"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 157,
              "Parser_Context" : "[unrecognized lm_https l_monitor s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "interval 5"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 158,
              "Parser_Context" : "[unrecognized lm_https l_monitor s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "ip-dscp 0"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 159,
              "Parser_Context" : "[unrecognized lm_https l_monitor s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "recv somerecvup"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 160,
              "Parser_Context" : "[unrecognized lm_https l_monitor s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "recv-disable none"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 161,
              "Parser_Context" : "[unrecognized lm_https l_monitor s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "send \"GET /some/path HTTP/1.1\nHost: somehost.example.com\nConnection: Close\n\n\""
            },
            {
              "Comment" : "This feature is not currently supported",
              "Line" : 166,
              "Parser_Context" : "[lmhs_ssl_profile lm_https l_monitor s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "ssl-profile /Common/SOME_SSL_PROFILE"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 167,
              "Parser_Context" : "[unrecognized lm_https l_monitor s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "time-until-up 0"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 168,
              "Parser_Context" : "[unrecognized lm_https l_monitor s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "timeout 16"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 171,
              "Parser_Context" : "[unrecognized lper_source_addr l_persistence s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "app-service none"
            },
            {
              "Comment" : "This feature is not currently supported",
              "Line" : 172,
              "Parser_Context" : "[lpersa_defaults_from lper_source_addr l_persistence s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "defaults-from /Common/source_addr"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 173,
              "Parser_Context" : "[unrecognized lper_source_addr l_persistence s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "timeout 60"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 176,
              "Parser_Context" : "[unrecognized lper_ssl l_persistence s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "app-service none"
            },
            {
              "Comment" : "This feature is not currently supported",
              "Line" : 177,
              "Parser_Context" : "[lperss_defaults_from lper_ssl l_persistence s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "defaults-from /Common/ssl"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 178,
              "Parser_Context" : "[unrecognized lper_ssl l_persistence s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "match-across-pools disabled"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 179,
              "Parser_Context" : "[unrecognized lper_ssl l_persistence s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "match-across-services disabled"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 180,
              "Parser_Context" : "[unrecognized lper_ssl l_persistence s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "match-across-virtuals disabled"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 181,
              "Parser_Context" : "[unrecognized lper_ssl l_persistence s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "override-connection-limit disabled"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 182,
              "Parser_Context" : "[unrecognized lper_ssl l_persistence s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "timeout 300"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 185,
              "Parser_Context" : "[unrecognized lprof_client_ssl l_profile s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "alert-timeout indefinite"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 186,
              "Parser_Context" : "[unrecognized lprof_client_ssl l_profile s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "allow-dynamic-record-sizing disabled"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 187,
              "Parser_Context" : "[unrecognized lprof_client_ssl l_profile s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "allow-non-ssl disabled"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 188,
              "Parser_Context" : "[unrecognized lprof_client_ssl l_profile s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "app-service none"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 189,
              "Parser_Context" : "[unrecognized lprof_client_ssl l_profile s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "cache-size 262144"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 190,
              "Parser_Context" : "[unrecognized lprof_client_ssl l_profile s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "cache-timeout 3600"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 191,
              "Parser_Context" : "[unrecognized lprof_client_ssl l_profile s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "cert /Common/example1.crt"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 192,
              "Parser_Context" : "[unrecognized lprof_client_ssl l_profile s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "cert-extension-includes"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 193,
              "Parser_Context" : "[unrecognized lprof_client_ssl l_profile s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "cert-key-chain"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 201,
              "Parser_Context" : "[unrecognized lprof_client_ssl l_profile s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "cert-lifespan 30"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 202,
              "Parser_Context" : "[unrecognized lprof_client_ssl l_profile s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "cert-lookup-by-ipaddr-port disabled"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 203,
              "Parser_Context" : "[unrecognized lprof_client_ssl l_profile s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "chain /Common/example4.crt"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 204,
              "Parser_Context" : "[unrecognized lprof_client_ssl l_profile s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "cipher-group none"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 205,
              "Parser_Context" : "[unrecognized lprof_client_ssl l_profile s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "ciphers !SSLv2:!EXPORT:!DHE+AES-GCM:!DHE+AES:!DHE+3DES:ECDHE+AES-GCM:ECDHE+AES:RSA+AES-GCM:RSA+AES:ECDHE+3DES:RSA+3DES:-MD5:DES-CBC3-SHA:-SSLv3:-RC4"
            },
            {
              "Comment" : "This feature is not currently supported",
              "Line" : 206,
              "Parser_Context" : "[lprofcs_defaults_from lprof_client_ssl l_profile s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "defaults-from /Common/clientssl"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 207,
              "Parser_Context" : "[unrecognized lprof_client_ssl l_profile s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "generic-alert enabled"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 208,
              "Parser_Context" : "[unrecognized lprof_client_ssl l_profile s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "handshake-timeout 10"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 209,
              "Parser_Context" : "[unrecognized lprof_client_ssl l_profile s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "inherit-certkeychain false"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 210,
              "Parser_Context" : "[unrecognized lprof_client_ssl l_profile s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "key foobar"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 211,
              "Parser_Context" : "[unrecognized lprof_client_ssl l_profile s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "max-active-handshakes indefinite"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 212,
              "Parser_Context" : "[unrecognized lprof_client_ssl l_profile s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "max-aggregate-renegotiation-per-minute indefinite"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 213,
              "Parser_Context" : "[unrecognized lprof_client_ssl l_profile s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "max-renegotiations-per-minute 5"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 214,
              "Parser_Context" : "[unrecognized lprof_client_ssl l_profile s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "maximum-record-size 16384"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 215,
              "Parser_Context" : "[unrecognized lprof_client_ssl l_profile s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "mod-ssl-methods disabled"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 216,
              "Parser_Context" : "[unrecognized lprof_client_ssl l_profile s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "mode enabled"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 217,
              "Parser_Context" : "[unrecognized lprof_client_ssl l_profile s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "ocsp-stapling enabled"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 218,
              "Parser_Context" : "[unrecognized lprof_client_ssl l_profile s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "options"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 219,
              "Parser_Context" : "[unrecognized lprof_client_ssl l_profile s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "passphrase $M$TheQuickBrownFoxJumpsOverTheLazyDogTheQuickBro="
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 220,
              "Parser_Context" : "[unrecognized lprof_client_ssl l_profile s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "peer-no-renegotiate-timeout 10"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 221,
              "Parser_Context" : "[unrecognized lprof_client_ssl l_profile s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "proxy-ca-cert /Common/example5.crt"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 222,
              "Parser_Context" : "[unrecognized lprof_client_ssl l_profile s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "proxy-ca-key /Common/example5.key"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 223,
              "Parser_Context" : "[unrecognized lprof_client_ssl l_profile s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "proxy-ssl disabled"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 224,
              "Parser_Context" : "[unrecognized lprof_client_ssl l_profile s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "proxy-ssl-passthrough disabled"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 225,
              "Parser_Context" : "[unrecognized lprof_client_ssl l_profile s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "renegotiate-max-record-delay indefinite"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 226,
              "Parser_Context" : "[unrecognized lprof_client_ssl l_profile s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "renegotiate-period indefinite"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 227,
              "Parser_Context" : "[unrecognized lprof_client_ssl l_profile s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "renegotiate-size indefinite"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 228,
              "Parser_Context" : "[unrecognized lprof_client_ssl l_profile s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "renegotiation enabled"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 229,
              "Parser_Context" : "[unrecognized lprof_client_ssl l_profile s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "secure-renegotiation require"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 230,
              "Parser_Context" : "[unrecognized lprof_client_ssl l_profile s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "server-name none"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 231,
              "Parser_Context" : "[unrecognized lprof_client_ssl l_profile s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "session-mirroring disabled"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 232,
              "Parser_Context" : "[unrecognized lprof_client_ssl l_profile s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "session-ticket disabled"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 233,
              "Parser_Context" : "[unrecognized lprof_client_ssl l_profile s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "session-ticket-timeout 0"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 234,
              "Parser_Context" : "[unrecognized lprof_client_ssl l_profile s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "sni-default false"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 235,
              "Parser_Context" : "[unrecognized lprof_client_ssl l_profile s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "sni-require false"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 236,
              "Parser_Context" : "[unrecognized lprof_client_ssl l_profile s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "ssl-forward-proxy disabled"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 237,
              "Parser_Context" : "[unrecognized lprof_client_ssl l_profile s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "ssl-forward-proxy-bypass disabled"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 238,
              "Parser_Context" : "[unrecognized lprof_client_ssl l_profile s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "ssl-sign-hash any"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 239,
              "Parser_Context" : "[unrecognized lprof_client_ssl l_profile s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "strict-resume disabled"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 240,
              "Parser_Context" : "[unrecognized lprof_client_ssl l_profile s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "unclean-shutdown enabled"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 243,
              "Parser_Context" : "[unrecognized lprof_ocsp_stapling_params l_profile s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "dns-resolver /Common/SOME_DNS_RESOLVER"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 244,
              "Parser_Context" : "[unrecognized lprof_ocsp_stapling_params l_profile s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "responder-url http://ocsp.example.com"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 245,
              "Parser_Context" : "[unrecognized lprof_ocsp_stapling_params l_profile s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "sign-hash sha1"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 246,
              "Parser_Context" : "[unrecognized lprof_ocsp_stapling_params l_profile s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "status-age 86400"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 247,
              "Parser_Context" : "[unrecognized lprof_ocsp_stapling_params l_profile s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "trusted-responders /Common/example6.crt"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 250,
              "Parser_Context" : "[unrecognized lprof_one_connect l_profile s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "app-service none"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 251,
              "Parser_Context" : "[unrecognized lprof_one_connect l_profile s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "idle-timeout-override disabled"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 252,
              "Parser_Context" : "[unrecognized lprof_one_connect l_profile s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "limit-type none"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 253,
              "Parser_Context" : "[unrecognized lprof_one_connect l_profile s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "max-age 86400"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 254,
              "Parser_Context" : "[unrecognized lprof_one_connect l_profile s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "max-reuse 12345"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 255,
              "Parser_Context" : "[unrecognized lprof_one_connect l_profile s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "max-size 123456"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 256,
              "Parser_Context" : "[unrecognized lprof_one_connect l_profile s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "source-mask any"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 259,
              "Parser_Context" : "[unrecognized lprof_server_ssl l_profile s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "alert-timeout indefinite"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 260,
              "Parser_Context" : "[unrecognized lprof_server_ssl l_profile s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "app-service none"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 261,
              "Parser_Context" : "[unrecognized lprof_server_ssl l_profile s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "cache-size 262144"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 262,
              "Parser_Context" : "[unrecognized lprof_server_ssl l_profile s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "cache-timeout 3600"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 263,
              "Parser_Context" : "[unrecognized lprof_server_ssl l_profile s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "cert /Common/example7.crt"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 264,
              "Parser_Context" : "[unrecognized lprof_server_ssl l_profile s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "chain none"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 265,
              "Parser_Context" : "[unrecognized lprof_server_ssl l_profile s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "cipher-group none"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 266,
              "Parser_Context" : "[unrecognized lprof_server_ssl l_profile s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "ciphers !SSLv2:!EXPORT:!DHE+AES-GCM:!DHE+AES:!DHE+3DES:ECDHE+AES-GCM:ECDHE+AES:RSA+AES-GCM:RSA+AES:ECDHE+3DES:RSA+3DES:-MD5:DES-CBC3-SHA:-SSLv3:-RC4"
            },
            {
              "Comment" : "This feature is not currently supported",
              "Line" : 267,
              "Parser_Context" : "[lprofss_defaults_from lprof_server_ssl l_profile s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "defaults-from /Common/serverssl"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 268,
              "Parser_Context" : "[unrecognized lprof_server_ssl l_profile s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "generic-alert enabled"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 269,
              "Parser_Context" : "[unrecognized lprof_server_ssl l_profile s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "handshake-timeout 10"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 270,
              "Parser_Context" : "[unrecognized lprof_server_ssl l_profile s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "key foobar"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 271,
              "Parser_Context" : "[unrecognized lprof_server_ssl l_profile s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "max-active-handshakes indefinite"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 272,
              "Parser_Context" : "[unrecognized lprof_server_ssl l_profile s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "mod-ssl-methods disabled"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 273,
              "Parser_Context" : "[unrecognized lprof_server_ssl l_profile s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "mode enabled"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 274,
              "Parser_Context" : "[unrecognized lprof_server_ssl l_profile s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "options"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 275,
              "Parser_Context" : "[unrecognized lprof_server_ssl l_profile s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "proxy-ssl disabled"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 276,
              "Parser_Context" : "[unrecognized lprof_server_ssl l_profile s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "proxy-ssl-passthrough disabled"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 277,
              "Parser_Context" : "[unrecognized lprof_server_ssl l_profile s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "renegotiate-period indefinite"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 278,
              "Parser_Context" : "[unrecognized lprof_server_ssl l_profile s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "renegotiate-size indefinite"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 279,
              "Parser_Context" : "[unrecognized lprof_server_ssl l_profile s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "renegotiation enabled"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 280,
              "Parser_Context" : "[unrecognized lprof_server_ssl l_profile s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "secure-renegotiation require-strict"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 281,
              "Parser_Context" : "[unrecognized lprof_server_ssl l_profile s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "server-name none"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 282,
              "Parser_Context" : "[unrecognized lprof_server_ssl l_profile s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "session-mirroring disabled"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 283,
              "Parser_Context" : "[unrecognized lprof_server_ssl l_profile s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "session-ticket disabled"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 284,
              "Parser_Context" : "[unrecognized lprof_server_ssl l_profile s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "sni-default false"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 285,
              "Parser_Context" : "[unrecognized lprof_server_ssl l_profile s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "sni-require false"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 286,
              "Parser_Context" : "[unrecognized lprof_server_ssl l_profile s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "ssl-forward-proxy disabled"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 287,
              "Parser_Context" : "[unrecognized lprof_server_ssl l_profile s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "ssl-forward-proxy-bypass disabled"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 288,
              "Parser_Context" : "[unrecognized lprof_server_ssl l_profile s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "ssl-sign-hash any"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 289,
              "Parser_Context" : "[unrecognized lprof_server_ssl l_profile s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "strict-resume disabled"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 290,
              "Parser_Context" : "[unrecognized lprof_server_ssl l_profile s_ltm statement f5_bigip_structured_configuration]",
              "Text" : "unclean-shutdown enabled"
            }
          ],
          "Red flags" : [
            {
              "tag" : "MISCELLANEOUS",
              "text" : "'pool' incompatible with 'ip-forward' mode already configured on virtual '/Common/SOME_VIRTUAL'"
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "'reject' mode incompatible with 'ip-forward' mode already configured on virtual '/Common/SOME_VIRTUAL'"
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "'translate-address enabled' incompatible with 'ip-forward' mode already configured on virtual '/Common/SOME_VIRTUAL'"
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "'translate-port enabled' incompatible with 'ip-forward' mode already configured on virtual '/Common/SOME_VIRTUAL'"
            }
          ]
        },
        "configs/f5_bigip_structured_malformed" : {
          "Red flags" : [
            {
              "tag" : "MISCELLANEOUS",
              "text" : "Cannot set gateway IP '172.16.0.1' for route '/Common/bad_gw' that is not on a directly-connected network in: gw 172.16.0.1\n"
            }
          ]
        },
        "configs/f5_bigip_structured_net" : {
          "Parse warnings" : [
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 6,
              "Parser_Context" : "[unrecognized s_net statement f5_bigip_structured_configuration]",
              "Text" : "fdb tunnel /Common/MYTUNNEL"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 7,
              "Parser_Context" : "[unrecognized s_net statement f5_bigip_structured_configuration]",
              "Text" : "fdb tunnel /Common/MYVLAN"
            },
            {
              "Comment" : "This feature is not currently supported",
              "Line" : 9,
              "Parser_Context" : "[ni_bundle net_interface s_net statement f5_bigip_structured_configuration]",
              "Text" : "bundle enabled"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 13,
              "Parser_Context" : "[unrecognized net_interface s_net statement f5_bigip_structured_configuration]",
              "Text" : "forward-error-correction auto"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 14,
              "Parser_Context" : "[unrecognized net_interface s_net statement f5_bigip_structured_configuration]",
              "Text" : "lldp-admin txrx"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 15,
              "Parser_Context" : "[unrecognized net_interface s_net statement f5_bigip_structured_configuration]",
              "Text" : "lldp-tlvmap 12304"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 17,
              "Parser_Context" : "[unrecognized s_net statement f5_bigip_structured_configuration]",
              "Text" : "lldp-globals"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 20,
              "Parser_Context" : "[unrecognized s_net statement f5_bigip_structured_configuration]",
              "Text" : "route-domain /Common/0"
            },
            {
              "Comment" : "This feature is not currently supported",
              "Line" : 29,
              "Parser_Context" : "[ns_allow_service net_self s_net statement f5_bigip_structured_configuration]",
              "Text" : "allow-service all"
            },
            {
              "Comment" : "This feature is not currently supported",
              "Line" : 30,
              "Parser_Context" : "[ns_traffic_group net_self s_net statement f5_bigip_structured_configuration]",
              "Text" : "traffic-group /Common/traffic-group-local-only"
            },
            {
              "Comment" : "This feature is not currently supported",
              "Line" : 38,
              "Parser_Context" : "[ns_address net_self s_net statement f5_bigip_structured_configuration]",
              "Text" : "address 1::1/64"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 41,
              "Parser_Context" : "[unrecognized s_net statement f5_bigip_structured_configuration]",
              "Text" : "self-allow"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 50,
              "Parser_Context" : "[unrecognized s_net statement f5_bigip_structured_configuration]",
              "Text" : "stp /Common/MYSTP"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 61,
              "Parser_Context" : "[unrecognized s_net statement f5_bigip_structured_configuration]",
              "Text" : "stp-globals"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 71,
              "Parser_Context" : "[unrecognized s_net statement f5_bigip_structured_configuration]",
              "Text" : "tunnels tunnel /Common/MYTUNNEL"
            }
          ]
        },
        "configs/f5_bigip_structured_net_routing_bgp" : {
          "Parse warnings" : [
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 26,
              "Parser_Context" : "[unrecognized nrbnnaf_ipv6 nrbnn_address_family nrbn_name nrb_neighbor nr_bgp net_routing s_net statement f5_bigip_structured_configuration]",
              "Text" : "capability"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 29,
              "Parser_Context" : "[unrecognized nrbnnaf_ipv6 nrbnn_address_family nrbn_name nrb_neighbor nr_bgp net_routing s_net statement f5_bigip_structured_configuration]",
              "Text" : "maximum-prefix"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 38,
              "Parser_Context" : "[unrecognized nrbn_name nrb_neighbor nr_bgp net_routing s_net statement f5_bigip_structured_configuration]",
              "Text" : "fall-over bfd"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 45,
              "Parser_Context" : "[unrecognized nrbnnaf_ipv4 nrbnn_address_family nrbn_name nrb_neighbor nr_bgp net_routing s_net statement f5_bigip_structured_configuration]",
              "Text" : "capability"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 48,
              "Parser_Context" : "[unrecognized nrbnnaf_ipv4 nrbnn_address_family nrbn_name nrb_neighbor nr_bgp net_routing s_net statement f5_bigip_structured_configuration]",
              "Text" : "maximum-prefix"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 61,
              "Parser_Context" : "[unrecognized nrbn_name nrb_neighbor nr_bgp net_routing s_net statement f5_bigip_structured_configuration]",
              "Text" : "fall-over bfd"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 66,
              "Parser_Context" : "[unrecognized nr_bgp net_routing s_net statement f5_bigip_structured_configuration]",
              "Text" : "profile /Common/bgp"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 67,
              "Parser_Context" : "[unrecognized nr_bgp net_routing s_net statement f5_bigip_structured_configuration]",
              "Text" : "route-domain /Common/0"
            },
            {
              "Comment" : "This feature is not currently supported",
              "Line" : 69,
              "Parser_Context" : "[nrb_router_id nr_bgp net_routing s_net statement f5_bigip_structured_configuration]",
              "Text" : "router-id dead:beef::1234"
            }
          ],
          "Red flags" : [
            {
              "tag" : "MISCELLANEOUS",
              "text" : "'invalidText' is neither IPv4 nor IPv6 address in: router-id invalidText\n"
            }
          ]
        },
        "configs/f5_bigip_structured_net_routing_prefix_list" : {
          "Parse warnings" : [
            {
              "Comment" : "This feature is not currently supported",
              "Line" : 20,
              "Parser_Context" : "[nrp_route_domain nr_prefix_list net_routing s_net statement f5_bigip_structured_configuration]",
              "Text" : "route-domain /Common/0"
            },
            {
              "Comment" : "This feature is not currently supported",
              "Line" : 35,
              "Parser_Context" : "[nrp_route_domain nr_prefix_list net_routing s_net statement f5_bigip_structured_configuration]",
              "Text" : "route-domain /Common/0"
            }
          ]
        },
        "configs/f5_bigip_structured_net_routing_route_map" : {
          "Parse warnings" : [
            {
              "Comment" : "This feature is not currently supported",
              "Line" : 43,
              "Parser_Context" : "[nrr_route_domain nr_route_map net_routing s_net statement f5_bigip_structured_configuration]",
              "Text" : "route-domain /Common/0"
            }
          ]
        },
        "configs/f5_bigip_structured_sys" : {
          "Parse warnings" : [
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 3,
              "Parser_Context" : "[unrecognized s_sys statement f5_bigip_structured_configuration]",
              "Text" : "dns"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 7,
              "Parser_Context" : "[unrecognized s_sys statement f5_bigip_structured_configuration]",
              "Text" : "feature-module cgnat"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 10,
              "Parser_Context" : "[unrecognized s_sys statement f5_bigip_structured_configuration]",
              "Text" : "folder /"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 17,
              "Parser_Context" : "[unrecognized s_sys statement f5_bigip_structured_configuration]",
              "Text" : "folder /Common"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 24,
              "Parser_Context" : "[unrecognized s_sys statement f5_bigip_structured_configuration]",
              "Text" : "folder /Common/Drafts"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 32,
              "Parser_Context" : "[unrecognized sys_global_settings s_sys statement f5_bigip_structured_configuration]",
              "Text" : "gui-security-banner-text \"hello\nworld\""
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 34,
              "Parser_Context" : "[unrecognized sys_global_settings s_sys statement f5_bigip_structured_configuration]",
              "Text" : "gui-setup disabled"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 37,
              "Parser_Context" : "[unrecognized s_sys statement f5_bigip_structured_configuration]",
              "Text" : "httpd"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 40,
              "Parser_Context" : "[unrecognized s_sys statement f5_bigip_structured_configuration]",
              "Text" : "management-dhcp /Common/sys-mgmt-dhcp-config"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 43,
              "Parser_Context" : "[unrecognized s_sys statement f5_bigip_structured_configuration]",
              "Text" : "management-ip 192.0.2.1/24"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 44,
              "Parser_Context" : "[unrecognized s_sys statement f5_bigip_structured_configuration]",
              "Text" : "management-route /Common/default"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 50,
              "Parser_Context" : "[unrecognized sys_ntp s_sys statement f5_bigip_structured_configuration]",
              "Text" : "timezone America/Seattle"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 52,
              "Parser_Context" : "[unrecognized s_sys statement f5_bigip_structured_configuration]",
              "Text" : "provision ltm"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 55,
              "Parser_Context" : "[unrecognized s_sys statement f5_bigip_structured_configuration]",
              "Text" : "snmp"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 98,
              "Parser_Context" : "[unrecognized s_sys statement f5_bigip_structured_configuration]",
              "Text" : "dynad key"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 101,
              "Parser_Context" : "[unrecognized s_sys statement f5_bigip_structured_configuration]",
              "Text" : "dynad settings"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 104,
              "Parser_Context" : "[unrecognized s_sys statement f5_bigip_structured_configuration]",
              "Text" : "fpga firmware-config"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 107,
              "Parser_Context" : "[unrecognized s_sys statement f5_bigip_structured_configuration]",
              "Text" : "sflow global-settings http"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 108,
              "Parser_Context" : "[unrecognized s_sys statement f5_bigip_structured_configuration]",
              "Text" : "sflow global-settings vlan"
            },
            {
              "Comment" : "This syntax is unrecognized",
              "Line" : 109,
              "Parser_Context" : "[unrecognized s_sys statement f5_bigip_structured_configuration]",
              "Text" : "turboflex profile-config"
            }
          ]
        },
        "configs/foundry_access_list" : {
          "Parse warnings" : [
            {
              "Comment" : "clause in IPv6 extended access list",
              "Line" : 11,
              "Parser_Context" : "[extended_ipv6_access_list_tail extended_ipv6_access_list_stanza stanza cisco_configuration]",
              "Text" : "133"
            },
            {
              "Comment" : "clause in IPv6 extended access list",
              "Line" : 12,
              "Parser_Context" : "[extended_ipv6_access_list_tail extended_ipv6_access_list_stanza stanza cisco_configuration]",
              "Text" : "134"
            },
            {
              "Comment" : "clause in IPv6 extended access list",
              "Line" : 13,
              "Parser_Context" : "[extended_ipv6_access_list_tail extended_ipv6_access_list_stanza stanza cisco_configuration]",
              "Text" : "135"
            },
            {
              "Comment" : "clause in IPv6 extended access list",
              "Line" : 14,
              "Parser_Context" : "[extended_ipv6_access_list_tail extended_ipv6_access_list_stanza stanza cisco_configuration]",
              "Text" : "136"
            },
            {
              "Comment" : "clause in IPv6 extended access list",
              "Line" : 15,
              "Parser_Context" : "[extended_ipv6_access_list_tail extended_ipv6_access_list_stanza stanza cisco_configuration]",
              "Text" : "141"
            },
            {
              "Comment" : "clause in IPv6 extended access list",
              "Line" : 16,
              "Parser_Context" : "[extended_ipv6_access_list_tail extended_ipv6_access_list_stanza stanza cisco_configuration]",
              "Text" : "142"
            }
          ]
        },
        "configs/ios_xr_bgp_neighbor_group" : {
          "Parse warnings" : [
            {
              "Comment" : "This feature is not currently supported",
              "Line" : 17,
              "Parser_Context" : "[use_session_group_bgp_tail session_group_rb_stanza router_bgp_stanza_tail router_bgp_stanza stanza cisco_configuration]",
              "Text" : "use session-group blabber"
            },
            {
              "Comment" : "This feature is not currently supported",
              "Line" : 94,
              "Parser_Context" : "[use_session_group_bgp_tail session_group_rb_stanza router_bgp_stanza_tail router_bgp_stanza stanza cisco_configuration]",
              "Text" : "use session-group CIAO"
            }
          ]
        },
        "configs/ios_xr_class_map" : {
          "Parse warnings" : [
            {
              "Comment" : "This feature is not currently supported",
              "Line" : 10,
              "Parser_Context" : "[cm_match s_class_map stanza cisco_configuration]",
              "Text" : "match not dscp ipv4 cs2 cs3 cs4"
            }
          ]
        },
        "configs/ios_xr_ospf" : {
          "Parse warnings" : [
            {
              "Comment" : "This feature is not currently supported",
              "Line" : 9,
              "Parser_Context" : "[ro_maximum_paths s_router_ospf stanza cisco_configuration]",
              "Text" : "maximum paths 16"
            }
          ],
          "Red flags" : [
            {
              "tag" : "MISCELLANEOUS",
              "text" : "OSPF: Interface: 'Bundle-Ethernet101' not declared before OSPF process"
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "OSPF: Interface: 'Bundle-Ethernet103' not declared before OSPF process"
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "OSPF: Interface: 'Bundle-Ethernet201' not declared before OSPF process"
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "OSPF: Interface: 'Loopback0' not declared before OSPF process"
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "OSPF: Interface: 'TenGigabitEthernet0/0/0/4' not declared before OSPF process"
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "OSPF: Interface: 'TenGigabitEthernet0/0/0/5' not declared before OSPF process"
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "OSPF: Interface: 'HundredGigabitEthernet0/2/0/0.292' not declared before OSPF process"
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "OSPF: Interface: 'HundredGigabitEthernet0/2/0/3' not declared before OSPF process"
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "OSPF: Interface: 'TenGigabitEthernet0/0/0/2' not declared before OSPF process"
            }
          ]
        },
        "configs/ios_xr_route_policy" : {
          "Red flags" : [
            {
              "tag" : "MISCELLANEOUS",
              "text" : "Could not convert to RoutePolicyStatement: set path-selection backup 1 install multipath-protect advertise\n"
            }
          ]
        },
        "configs/ip_default_route_classless" : {
          "Parse warnings" : [
            {
              "Comment" : "This feature is not currently supported",
              "Line" : 4,
              "Parser_Context" : "[s_ip_default_gateway stanza cisco_configuration]",
              "Text" : "ip default-gateway 128.125.253.254"
            }
          ]
        },
        "configs/juniper_firewall" : {
          "Red flags" : [
            {
              "tag" : "MISCELLANEOUS",
              "text" : "Missing mapping for icmp-type: 'mask-reply'"
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "Missing mapping for icmp-type: 'mask-request'"
            }
          ]
        },
        "configs/juniper_forwarding_options" : {
          "Red flags" : [
            {
              "tag" : "MISCELLANEOUS",
              "text" : "apply-groups statement at path: 'forwarding-options' refers to non-existent group: 'g1'\n"
            }
          ]
        },
        "configs/juniper_interfaces" : {
          "Parse warnings" : [
            {
              "Comment" : "This feature is not currently supported",
              "Line" : 19,
              "Parser_Context" : "[ifi_tcp_mss if_inet i_family i_common i_unit int_named s_interfaces s_common statement set_line_tail set_line flat_juniper_configuration]",
              "Text" : "tcp-mss 1400"
            }
          ]
        },
        "configs/juniper_isis" : {
          "Parse warnings" : [
            {
              "Comment" : "This feature is not currently supported",
              "Line" : 12,
              "Parser_Context" : "[isil_priority isi_level is_interface p_isis s_protocols s_common statement set_line_tail set_line flat_juniper_configuration]",
              "Text" : "priority 65"
            }
          ]
        },
        "configs/juniper_ospf" : {
          "Parse warnings" : [
            {
              "Comment" : "This feature is not currently supported",
              "Line" : 14,
              "Parser_Context" : "[oa_area_range o_area o_common p_ospf3 s_protocols s_common statement set_line_tail set_line flat_juniper_configuration]",
              "Text" : "area-range dead:beef::/56 override-metric 100"
            },
            {
              "Comment" : "This feature is not currently supported",
              "Line" : 14,
              "Parser_Context" : "[oa_area_range o_area o_common p_ospf3 s_protocols s_common statement set_line_tail set_line flat_juniper_configuration]",
              "Text" : "area-range dead:beef::/56 override-metric 100"
            }
          ]
        },
        "configs/juniper_policy_statement" : {
          "Parse warnings" : [
            {
              "Comment" : "This feature is not currently supported",
              "Line" : 4,
              "Parser_Context" : "[popsf_as_path_group pops_from pops_common pops_term po_policy_statement s_policy_options s_common statement set_line_tail set_line flat_juniper_configuration]",
              "Text" : "as-path-group AS_PATH_GROUP"
            }
          ],
          "Red flags" : [
            {
              "tag" : "MISCELLANEOUS",
              "text" : "unimplemented 'policy-options policy-statement term' from clause: family evpn"
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "unimplemented 'policy-options policy-statement term' from clause: family inet-mdt"
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "unimplemented 'policy-options policy-statement term' from clause: family inet-mvpn"
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "unimplemented 'policy-options policy-statement term' from clause: family inet-vpn"
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "unimplemented 'policy-options policy-statement term' from clause: family inet6-mvpn"
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "unimplemented 'policy-options policy-statement term' from clause: family inet6-vpn"
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "unimplemented 'policy-options policy-statement term' from clause: family iso"
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "unimplemented 'policy-options policy-statement term' from clause: family iso-vpn"
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "unimplemented 'policy-options policy-statement term' from clause: family route-target"
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "unimplemented 'policy-options policy-statement term' from clause: family traffic-engineering"
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "unimplemented 'policy-options policy-statement term' from clause: rib inet6.0"
            }
          ]
        },
        "configs/juniper_rib_groups" : {
          "Parse warnings" : [
            {
              "Comment" : "This feature is not currently supported",
              "Line" : 4,
              "Parser_Context" : "[roi_rib_group ro_interface_routes s_routing_options s_common statement set_line_tail set_line flat_juniper_configuration]",
              "Text" : "rib-group inet6 interface-routes-rib"
            }
          ]
        },
        "configs/juniper_routing_options" : {
          "Parse warnings" : [
            {
              "Comment" : "This feature is not currently supported",
              "Line" : 9,
              "Parser_Context" : "[roa_policy roa_common roa_route ro_aggregate s_routing_options s_common statement set_line_tail set_line flat_juniper_configuration]",
              "Text" : "policy AGGREGATE_ROUTE_POLICY"
            },
            {
              "Comment" : "This feature is not currently supported",
              "Line" : 10,
              "Parser_Context" : "[ro_confederation s_routing_options s_common statement set_line_tail set_line flat_juniper_configuration]",
              "Text" : "confederation 11111 members 22222"
            }
          ]
        },
        "configs/juniper_tacplus" : {
          "Red flags" : [
            {
              "tag" : "MISCELLANEOUS",
              "text" : "apply-groups statement at path: 'system tacplus-server 1.2.3.4' refers to non-existent group: 'bippety'\n"
            }
          ]
        },
        "configs/nxos_interface" : {
          "Parse warnings" : [
            {
              "Comment" : "Unsupported: route-preference declared in interface IP address",
              "Line" : 6,
              "Parser_Context" : "[if_ip_address if_inner s_interface stanza cisco_configuration]",
              "Text" : "ip address 1.2.3.4/24 route-preference 10 tag 12345"
            },
            {
              "Comment" : "Unsupported: tag declared in interface IP address",
              "Line" : 6,
              "Parser_Context" : "[if_ip_address if_inner s_interface stanza cisco_configuration]",
              "Text" : "ip address 1.2.3.4/24 route-preference 10 tag 12345"
            }
          ]
        },
        "configs/peer_template" : {
          "Parse warnings" : [
            {
              "Comment" : "This feature is not currently supported",
              "Line" : 24,
              "Parser_Context" : "[rbnx_n_af_allowas_in rbnx_n_af_inner rbnx_n_address_family rbnx_n_inner rbnx_template_peer router_bgp_nxos_toplevel router_bgp_stanza stanza cisco_configuration]",
              "Text" : "allowas-in 1"
            }
          ]
        },
        "iptables/host1.iptables" : {
          "Parse warnings" : [
            {
              "Comment" : "This feature is not currently supported",
              "Line" : 16,
              "Parser_Context" : "[rule_spec command_append command_tail command iptables_configuration]",
              "Text" : "-s 1.2.3.4/32 -p tcp -m tcp --dport 22 -j ACCEPT"
            },
            {
              "Comment" : "This feature is not currently supported",
              "Line" : 17,
              "Parser_Context" : "[rule_spec command_append command_tail command iptables_configuration]",
              "Text" : "-s 11.22.33.44/32 -p tcp -m tcp --dport 25 -j ACCEPT"
            },
            {
              "Comment" : "This feature is not currently supported",
              "Line" : 18,
              "Parser_Context" : "[rule_spec command_append command_tail command iptables_configuration]",
              "Text" : "-s 111.222.111.222/32 -p tcp -m tcp --dport 80 -j ACCEPT"
            },
            {
              "Comment" : "This feature is not currently supported",
              "Line" : 19,
              "Parser_Context" : "[rule_spec command_append command_tail command iptables_configuration]",
              "Text" : "-s 4.3.2.1/32 -p tcp -m tcp --dport 110 -j ACCEPT"
            },
            {
              "Comment" : "This feature is not currently supported",
              "Line" : 20,
              "Parser_Context" : "[rule_spec command_append command_tail command iptables_configuration]",
              "Text" : "-s 44.22.33.11/32 -p tcp -m tcp --dport 143 -j ACCEPT"
            }
          ]
        }
      }
    },
    {
      "class" : "org.batfish.datamodel.answers.ConvertConfigurationAnswerElement",
      "convertStatus" : {
        "aaa_accounting" : "PASSED",
        "aaa_authentication_login_default_tacacs_local" : "PASSED",
        "aaa_group_server_source_interface" : "PASSED",
        "access_list" : "PASSED",
        "address_family" : "WARNINGS",
        "aggaddress" : "PASSED",
        "arista-event-handler" : "PASSED",
        "arista_acl" : "PASSED",
        "arista_bgp" : "PASSED",
        "arista_dhcp_relay" : "PASSED",
        "arista_interface" : "PASSED",
        "arista_ip_route" : "PASSED",
        "arista_logging" : "PASSED",
        "arista_misc" : "PASSED",
        "arista_nat" : "PASSED",
        "arista_ospf" : "WARNINGS",
        "arista_queue_monitor" : "PASSED",
        "arista_username" : "PASSED",
        "arista_vrf" : "PASSED",
        "aruba_aaa" : "PASSED",
        "aruba_acl" : "PASSED",
        "aruba_airgroup" : "PASSED",
        "aruba_crypto" : "PASSED",
        "aruba_dhcp" : "PASSED",
        "aruba_interface" : "PASSED",
        "aruba_logging" : "PASSED",
        "aruba_misc" : "PASSED",
        "aruba_net" : "PASSED",
        "aruba_snmp" : "PASSED",
        "aruba_time_range" : "PASSED",
        "aruba_user_role" : "PASSED",
        "aruba_vlan" : "PASSED",
        "aruba_voice" : "PASSED",
        "aruba_vpn" : "PASSED",
        "as_path_prepend" : "PASSED",
        "asa_acl" : "PASSED",
        "asa_banner" : "PASSED",
        "asa_interface" : "PASSED",
        "asa_nat" : "PASSED",
        "asa_object_groups" : "PASSED",
        "asa_ospf" : "PASSED",
        "asa_ssh" : "PASSED",
        "aws_configs" : "WARNINGS",
        "banner" : "PASSED",
        "banner_dos" : "PASSED",
        "bgp-allow" : "PASSED",
        "bgp-disable" : "PASSED",
        "bgp-enforce-first-as" : "WARNINGS",
        "bgp_address_family" : "WARNINGS",
        "bgp_default_originate_policy" : "PASSED",
        "bgp_foundry" : "PASSED",
        "bgp_nsr" : "PASSED",
        "bgp_route_policy" : "WARNINGS",
        "cadant_acl" : "PASSED",
        "cadant_banner" : "PASSED",
        "cadant_bgp" : "PASSED",
        "cadant_cable" : "PASSED",
        "cadant_interface" : "PASSED",
        "cadant_ip_route" : "PASSED",
        "cadant_isis" : "PASSED",
        "cadant_line" : "PASSED",
        "cadant_logging" : "PASSED",
        "cadant_misc" : "PASSED",
        "cadant_prefix_list" : "PASSED",
        "cadant_qos" : "PASSED",
        "cadant_rip" : "PASSED",
        "cadant_route_map" : "PASSED",
        "cadant_snmp" : "PASSED",
        "cisco-zone" : "PASSED",
        "cisco_aaa" : "PASSED",
        "cisco_acl" : "PASSED",
        "cisco_additional_paths" : "PASSED",
        "cisco_authentication" : "PASSED",
        "cisco_bgp" : "WARNINGS",
        "cisco_bgp_confederation" : "PASSED",
        "cisco_cable" : "PASSED",
        "cisco_callhome" : "PASSED",
        "cisco_control_plane" : "PASSED",
        "cisco_controller" : "PASSED",
        "cisco_crypto" : "WARNINGS",
        "cisco_dhcp" : "PASSED",
        "cisco_domain" : "PASSED",
        "cisco_dot11" : "PASSED",
        "cisco_dot1x" : "PASSED",
        "cisco_dspfarm" : "PASSED",
        "cisco_dynamic_access_policy_record" : "PASSED",
        "cisco_eigrp" : "WARNINGS",
        "cisco_enable" : "PASSED",
        "cisco_flow" : "PASSED",
        "cisco_hardware" : "PASSED",
        "cisco_hsrp" : "PASSED",
        "cisco_interface" : "WARNINGS",
        "cisco_ios_neighbor" : "PASSED",
        "cisco_ip" : "PASSED",
        "cisco_ip_nat" : "PASSED",
        "cisco_ip_route" : "PASSED",
        "cisco_ipsla" : "PASSED",
        "cisco_ipv6" : "PASSED",
        "cisco_ipv6_access_list" : "PASSED",
        "cisco_isis" : "PASSED",
        "cisco_l2tp" : "PASSED",
        "cisco_line" : "PASSED",
        "cisco_logging" : "PASSED",
        "cisco_mac_acl" : "PASSED",
        "cisco_misc" : "PASSED",
        "cisco_monitor" : "PASSED",
        "cisco_mpls" : "PASSED",
        "cisco_multicast" : "PASSED",
        "cisco_ntp" : "PASSED",
        "cisco_nxos" : "PASSED",
        "cisco_nxos_bgp" : "WARNINGS",
        "cisco_ospf" : "WARNINGS",
        "cisco_ospf_ipv6" : "PASSED",
        "cisco_ospf_multi_process" : "WARNINGS",
        "cisco_ospfv3" : "PASSED",
        "cisco_pim" : "PASSED",
        "cisco_platform" : "PASSED",
        "cisco_privilege" : "PASSED",
        "cisco_qos" : "PASSED",
        "cisco_queue_monitor" : "PASSED",
        "cisco_redundancy" : "PASSED",
        "cisco_rip" : "PASSED",
        "cisco_role" : "PASSED",
        "cisco_route_map" : "PASSED",
        "cisco_sccp" : "PASSED",
        "cisco_snmp" : "PASSED",
        "cisco_spanning_tree" : "PASSED",
        "cisco_ssh" : "PASSED",
        "cisco_stcapp" : "PASSED",
        "cisco_style_acl1" : "PASSED",
        "cisco_style_acl2" : "PASSED",
        "cisco_system" : "PASSED",
        "cisco_tacacs" : "PASSED",
        "cisco_track" : "PASSED",
        "cisco_username" : "PASSED",
        "cisco_username_without_password" : "PASSED",
        "cisco_vdc" : "PASSED",
        "cisco_vlan" : "PASSED",
        "cisco_voice" : "PASSED",
        "cisco_vpdn" : "PASSED",
        "cisco_vpn" : "PASSED",
        "cisco_vrf" : "PASSED",
        "cisco_vrrp" : "PASSED",
        "cisco_webvpn" : "PASSED",
        "cisco_wsma" : "PASSED",
        "colon_in_vrf" : "PASSED",
        "commset" : "PASSED",
        "community-name-numbers" : "PASSED",
        "community-name-numbers_dos" : "PASSED",
        "community_list_named" : "PASSED",
        "community_set" : "PASSED",
        "cumulus_nclu" : "WARNINGS",
        "cumulus_nclu_invalid_bonds" : "PASSED",
        "cumulus_nclu_invalid_interfaces" : "PASSED",
        "cumulus_nclu_invalid_vrfs" : "PASSED",
        "cumulus_nclu_invalid_vxlans" : "PASSED",
        "eos_mlag" : "PASSED",
        "eos_trunk_group" : "PASSED",
        "f5_bigip_imish_malformed" : "WARNINGS",
        "f5_bigip_structured_ltm" : "WARNINGS",
        "f5_bigip_structured_malformed" : "WARNINGS",
        "f5_bigip_structured_net" : "PASSED",
        "f5_bigip_structured_net_routing_bgp" : "WARNINGS",
        "f5_bigip_structured_net_routing_prefix_list" : "PASSED",
        "f5_bigip_structured_net_routing_route_map" : "PASSED",
        "f5_bigip_structured_sys" : "PASSED",
        "f5_bigip_structured_with_imish" : "WARNINGS",
        "foundry_access_list" : "PASSED",
        "foundry_bgp" : "PASSED",
        "foundry_interface" : "PASSED",
        "foundry_misc" : "PASSED",
        "foundry_vlan_group" : "PASSED",
        "host1" : "PASSED",
        "host2" : "PASSED",
        "if_tag_is" : "PASSED",
        "interface-reth" : "PASSED",
        "interface_exit" : "PASSED",
        "interface_name" : "PASSED",
        "interface_sdr" : "PASSED",
        "interfacemtu" : "PASSED",
        "ios_bfd" : "PASSED",
        "ios_bgp" : "PASSED",
        "ios_interface" : "PASSED",
        "ios_standby" : "PASSED",
        "ios_template" : "PASSED",
        "ios_xr_acl" : "PASSED",
        "ios_xr_bgp" : "PASSED",
        "ios_xr_bgp_neighbor_group" : "WARNINGS",
        "ios_xr_class_map" : "PASSED",
        "ios_xr_isis" : "WARNINGS",
        "ios_xr_logging" : "PASSED",
        "ios_xr_misc" : "PASSED",
        "ios_xr_multipart" : "PASSED",
        "ios_xr_ntp" : "PASSED",
        "ios_xr_ospf" : "PASSED",
        "ios_xr_router_static" : "PASSED",
        "ios_xr_ssh" : "PASSED",
        "ios_xr_taskgroup" : "PASSED",
        "iosxrmulticast" : "PASSED",
        "ip_prefix_list_single_line" : "PASSED",
        "isr_crypto_gdoi" : "PASSED",
        "isr_voip" : "PASSED",
        "juniper-ospf" : "WARNINGS",
        "juniper-tcpflags" : "WARNINGS",
        "juniper_application" : "PASSED",
        "juniper_apply_macro" : "PASSED",
        "juniper_as_path_group" : "PASSED",
        "juniper_bgp" : "WARNINGS",
        "juniper_bgp_authentication" : "WARNINGS",
        "juniper_bgp_remove_private_as" : "PASSED",
        "juniper_extended_community" : "PASSED",
        "juniper_firewall" : "WARNINGS",
        "juniper_forwarding_options" : "PASSED",
        "juniper_interfaces" : "PASSED",
        "juniper_isis" : "PASSED",
        "juniper_l2_learning" : "PASSED",
        "juniper_misc" : "PASSED",
        "juniper_nat" : "PASSED",
        "juniper_ntp" : "PASSED",
        "juniper_ospf_stub_areas" : "WARNINGS",
        "juniper_passwords" : "PASSED",
        "juniper_policy_statement" : "PASSED",
        "juniper_relay" : "PASSED",
        "juniper_rib_groups" : "WARNINGS",
        "juniper_route_filter" : "PASSED",
        "juniper_routing_options" : "PASSED",
        "juniper_routing_policy" : "PASSED",
        "juniper_security" : "WARNINGS",
        "juniper_snmp" : "PASSED",
        "juniper_syslog" : "PASSED",
        "juniper_system" : "PASSED",
        "juniper_tacplus" : "PASSED",
        "juniper_trailing_space" : "PASSED",
        "juniper_vlan" : "PASSED",
        "l2vpn" : "PASSED",
        "local_v6_addr" : "PASSED",
        "mac_access_list" : "PASSED",
        "mcastrouting" : "PASSED",
        "mos_interface" : "PASSED",
        "mos_misc" : "PASSED",
        "msdp_originator_id" : "PASSED",
        "named_and_numbered_lists" : "PASSED",
        "neighbor_mix" : "WARNINGS",
        "neighbor_nxos" : "WARNINGS",
        "network6" : "PASSED",
        "nexus" : "PASSED",
        "nexus_bgp" : "WARNINGS",
        "nexus_ntp" : "PASSED",
        "nexus_ssh" : "PASSED",
        "no_aaa_group_server" : "PASSED",
        "no_ip_name_server" : "PASSED",
        "no_mask_reply" : "PASSED",
        "no_snmp_server" : "PASSED",
        "non_nexus_neighbor_af" : "WARNINGS",
        "nxos_acl" : "PASSED",
        "nxos_bgp" : "WARNINGS",
        "nxos_interface" : "PASSED",
        "nxos_misc" : "PASSED",
        "nxos_ospf" : "PASSED",
        "nxos_route_map_continue" : "PASSED",
        "nxos_system" : "PASSED",
        "openflow" : "PASSED",
        "ospf-disable" : "PASSED",
        "peer_template" : "WARNINGS",
        "pim" : "PASSED",
        "pim_snooping" : "PASSED",
        "prefix_list_ipv4" : "PASSED",
        "preset" : "PASSED",
        "route_maps_in_two_address_families" : "WARNINGS",
        "route_policy_as_path_set" : "PASSED",
        "route_policy_igp_cost" : "PASSED",
        "route_policy_metric_type" : "PASSED",
        "route_policy_param" : "PASSED",
        "router_msdp" : "PASSED",
        "rp" : "PASSED",
        "set_inline_community" : "PASSED",
        "statistics" : "PASSED",
        "switchport_range" : "PASSED",
        "syslog_source_interface" : "PASSED",
        "taskgroup" : "PASSED",
        "tcpflags" : "PASSED",
        "test" : "PASSED",
        "underscore_variable" : "PASSED",
        "variables" : "PASSED",
        "variables_dos" : "PASSED",
        "vlan_access_map4" : "PASSED",
        "vmx4" : "WARNINGS",
        "vrf_context" : "PASSED",
        "vxlan" : "PASSED"
      },
      "definedStructures" : {
        "configs/aaa_accounting" : { },
        "configs/aaa_authentication_login_default_tacacs_local" : { },
        "configs/aaa_group_server_source_interface" : { },
        "configs/access_list" : { },
        "configs/address_family" : { },
        "configs/arista-event-handler" : { },
        "configs/arista-logging" : { },
        "configs/arista_acl" : {
          "extended ipv4 access-list" : {
            "abcd" : {
              "definitionLines" : [
                4,
                5,
                6,
                7
              ],
              "numReferrers" : 0
            }
          }
        },
        "configs/arista_bgp" : {
          "route-map" : {
            "ROUTE_MAP" : {
              "definitionLines" : [
                15
              ],
              "numReferrers" : 1
            }
          }
        },
        "configs/arista_dhcp_relay" : {
          "interface" : {
            "Ethernet0" : {
              "definitionLines" : [
                9,
                10,
                11
              ],
              "numReferrers" : 1
            },
            "Ethernet1" : {
              "definitionLines" : [
                13,
                14
              ],
              "numReferrers" : 1
            }
          }
        },
        "configs/arista_interface" : {
          "interface" : {
            "Vlan1" : {
              "definitionLines" : [
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15
              ],
              "numReferrers" : 1
            }
          }
        },
        "configs/arista_ip_route" : {
          "interface" : {
            "Null0" : {
              "definitionLines" : [
                4
              ],
              "numReferrers" : 1
            }
          }
        },
        "configs/arista_misc" : {
          "standard ipv4 access-list" : {
            "sshabc" : {
              "definitionLines" : [
                25,
                26
              ],
              "numReferrers" : 1
            }
          }
        },
        "configs/arista_nat" : {
          "extended ipv4 access-list" : {
            "acl1" : {
              "definitionLines" : [
                5,
                6
              ],
              "numReferrers" : 1
            }
          },
          "interface" : {
            "Ethernet1" : {
              "definitionLines" : [
                12,
                13,
                14
              ],
              "numReferrers" : 1
            }
          },
          "nat pool" : {
            "pool1" : {
              "definitionLines" : [
                8
              ],
              "numReferrers" : 1
            },
            "pool2" : {
              "definitionLines" : [
                9
              ],
              "numReferrers" : 0
            },
            "pool3" : {
              "definitionLines" : [
                10
              ],
              "numReferrers" : 0
            }
          }
        },
        "configs/arista_ospf" : { },
        "configs/arista_queue_monitor" : { },
        "configs/arista_username" : { },
        "configs/arista_vrf" : { },
        "configs/aruba_aaa" : { },
        "configs/aruba_acl" : { },
        "configs/aruba_airgroup" : { },
        "configs/aruba_crypto" : {
          "crypto isakmp policy" : {
            "1" : {
              "definitionLines" : [
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20
              ],
              "numReferrers" : 1
            }
          },
          "crypto-dynamic-map-set" : {
            "abcd" : {
              "definitionLines" : [
                4,
                5,
                6
              ],
              "numReferrers" : 0
            }
          }
        },
        "configs/aruba_dhcp" : { },
        "configs/aruba_interface" : {
          "interface" : {
            "GigabitEthernet0/0/0" : {
              "definitionLines" : [
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19
              ],
              "numReferrers" : 1
            }
          }
        },
        "configs/aruba_logging" : { },
        "configs/aruba_misc" : { },
        "configs/aruba_net" : { },
        "configs/aruba_snmp" : { },
        "configs/aruba_time_range" : { },
        "configs/aruba_user_role" : { },
        "configs/aruba_vlan" : { },
        "configs/aruba_voice" : { },
        "configs/aruba_vpn" : { },
        "configs/as_path_prepend" : {
          "route-map" : {
            "rmap" : {
              "definitionLines" : [
                4,
                5
              ],
              "numReferrers" : 0
            }
          }
        },
        "configs/asa_acl" : {
          "extended ipv4 access-list" : {
            "inline_specifiers" : {
              "definitionLines" : [
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27,
                28,
                29,
                30,
                31
              ],
              "numReferrers" : 0
            },
            "outside" : {
              "definitionLines" : [
                9
              ],
              "numReferrers" : 0
            },
            "outside_in" : {
              "definitionLines" : [
                6
              ],
              "numReferrers" : 0
            }
          },
          "standard ipv4 access-list" : {
            "Local_LAN_Access" : {
              "definitionLines" : [
                7
              ],
              "numReferrers" : 0
            }
          }
        },
        "configs/asa_banner" : { },
        "configs/asa_interface" : {
          "interface" : {
            "GigabitEthernet0/1" : {
              "definitionLines" : [
                6,
                7
              ],
              "numReferrers" : 2
            },
            "ifname" : {
              "definitionLines" : [
                7
              ],
              "numReferrers" : 1
            }
          }
        },
        "configs/asa_nat" : {
          "object network" : {
            "source-real" : {
              "definitionLines" : [
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23
              ],
              "numReferrers" : 8
            }
          }
        },
        "configs/asa_object_groups" : {
          "extended ipv4 access-list" : {
            "ALLOW_SERVER02" : {
              "definitionLines" : [
                8
              ],
              "numReferrers" : 0
            }
          },
          "object network" : {
            "server02" : {
              "definitionLines" : [
                6,
                7
              ],
              "numReferrers" : 1
            }
          }
        },
        "configs/asa_ospf" : {
          "interface" : {
            "Ethernet0/0" : {
              "definitionLines" : [
                5,
                6,
                7,
                8
              ],
              "numReferrers" : 1
            },
            "blah" : {
              "definitionLines" : [
                7
              ],
              "numReferrers" : 1
            }
          }
        },
        "configs/asa_ssh" : { },
        "configs/banner" : { },
        "configs/banner_dos" : { },
        "configs/bgp_address_family" : {
          "bgp peer-group" : {
            "as1" : {
              "definitionLines" : [
                7
              ],
              "numReferrers" : 1
            },
            "as2" : {
              "definitionLines" : [
                9
              ],
              "numReferrers" : 1
            },
            "as3" : {
              "definitionLines" : [
                11
              ],
              "numReferrers" : 0
            },
            "dcp-rrs" : {
              "definitionLines" : [
                16
              ],
              "numReferrers" : 0
            }
          }
        },
        "configs/bgp_default_originate_policy" : {
          "bgp neighbor-group" : {
            "ama-coe" : {
              "definitionLines" : [
                5,
                6
              ],
              "numReferrers" : 0
            }
          }
        },
        "configs/bgp_foundry" : {
          "bgp peer-group" : {
            "ucr" : {
              "definitionLines" : [
                7
              ],
              "numReferrers" : 0
            }
          }
        },
        "configs/bgp_nsr" : { },
        "configs/bgp_route_policy" : { },
        "configs/cadant_acl" : {
          "extended ipv6 access-list" : {
            "ipv6-acl-foo" : {
              "definitionLines" : [
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27,
                28,
                29
              ],
              "numReferrers" : 0
            }
          },
          "standard ipv4 access-list" : {
            "50" : {
              "definitionLines" : [
                5,
                6,
                7,
                8
              ],
              "numReferrers" : 0
            },
            "51" : {
              "definitionLines" : [
                10,
                11,
                12
              ],
              "numReferrers" : 0
            },
            "99" : {
              "definitionLines" : [
                14,
                15,
                16
              ],
              "numReferrers" : 0
            }
          }
        },
        "configs/cadant_banner" : { },
        "configs/cadant_bgp" : { },
        "configs/cadant_cable" : {
          "docsis-policy" : {
            "1" : {
              "definitionLines" : [
                48
              ],
              "numReferrers" : 0
            }
          },
          "docsis-policy-rule" : {
            "1" : {
              "definitionLines" : [
                49,
                50,
                51,
                52,
                53,
                54
              ],
              "numReferrers" : 1
            }
          }
        },
        "configs/cadant_interface" : {
          "interface" : {
            "Ethernet6/0.0" : {
              "definitionLines" : [
                104,
                105,
                106,
                107,
                108,
                109,
                110,
                111,
                112,
                113,
                114,
                115,
                116,
                117,
                118,
                119,
                120,
                121,
                122,
                123
              ],
              "numReferrers" : 1
            },
            "Ethernet6/0.48" : {
              "definitionLines" : [
                124,
                125,
                126,
                127,
                128
              ],
              "numReferrers" : 1
            },
            "Ethernet6/1" : {
              "definitionLines" : [
                129,
                130,
                131,
                132,
                133
              ],
              "numReferrers" : 1
            },
            "cable-downstream1/2" : {
              "definitionLines" : [
                5,
                6,
                7
              ],
              "numReferrers" : 1
            },
            "cable-downstream1/2/3" : {
              "definitionLines" : [
                8,
                9,
                10,
                11,
                12,
                13,
                14
              ],
              "numReferrers" : 1
            },
            "cable-downstream5/0/0" : {
              "definitionLines" : [
                15,
                16,
                17,
                18,
                19,
                20
              ],
              "numReferrers" : 1
            },
            "cable-mac1" : {
              "definitionLines" : [
                39,
                42,
                43,
                44,
                45,
                46,
                47,
                48,
                49,
                50,
                51,
                52,
                53,
                54,
                55,
                56,
                57,
                58
              ],
              "numReferrers" : 2
            },
            "cable-mac1.1" : {
              "definitionLines" : [
                59,
                60,
                61,
                62,
                63,
                64,
                65,
                66,
                67,
                68,
                69,
                70,
                71,
                72,
                73,
                74,
                75,
                76,
                77,
                78,
                79,
                80,
                81,
                82,
                83,
                84,
                85,
                86,
                87
              ],
              "numReferrers" : 1
            },
            "cable-mac1.2" : {
              "definitionLines" : [
                88,
                89,
                90,
                91,
                92,
                93,
                94,
                95,
                96,
                97,
                98,
                99,
                100,
                101,
                102,
                103
              ],
              "numReferrers" : 1
            },
            "cable-mac2" : {
              "definitionLines" : [
                40
              ],
              "numReferrers" : 1
            },
            "cable-mac3" : {
              "definitionLines" : [
                41
              ],
              "numReferrers" : 1
            },
            "cable-upstream1/0/0" : {
              "definitionLines" : [
                21,
                22,
                23,
                24,
                25,
                26,
                27,
                28
              ],
              "numReferrers" : 1
            },
            "cable-upstream1/0/0.0" : {
              "definitionLines" : [
                31,
                32,
                33,
                34,
                35,
                36,
                37,
                38
              ],
              "numReferrers" : 1
            },
            "cable-upstream1/0/10" : {
              "definitionLines" : [
                29,
                30
              ],
              "numReferrers" : 2
            },
            "mgmt6/0" : {
              "definitionLines" : [
                134,
                135,
                136,
                137,
                138,
                139
              ],
              "numReferrers" : 1
            }
          }
        },
        "configs/cadant_ip_route" : { },
        "configs/cadant_isis" : { },
        "configs/cadant_line" : { },
        "configs/cadant_logging" : { },
        "configs/cadant_misc" : { },
        "configs/cadant_prefix_list" : {
          "ipv4 prefix-list" : {
            "A+C" : {
              "definitionLines" : [
                7
              ],
              "numReferrers" : 0
            },
            "foo" : {
              "definitionLines" : [
                5,
                6
              ],
              "numReferrers" : 0
            }
          },
          "ipv6 prefix-list" : {
            "bar" : {
              "definitionLines" : [
                8,
                9
              ],
              "numReferrers" : 0
            }
          }
        },
        "configs/cadant_qos" : { },
        "configs/cadant_rip" : { },
        "configs/cadant_route_map" : {
          "route-map" : {
            "bar" : {
              "definitionLines" : [
                9,
                10,
                11
              ],
              "numReferrers" : 0
            },
            "foo" : {
              "definitionLines" : [
                5,
                6,
                7
              ],
              "numReferrers" : 0
            }
          }
        },
        "configs/cadant_snmp" : { },
        "configs/cisco_aaa" : { },
        "configs/cisco_acl" : {
          "extended ipv4 access-list" : {
            "BLAH-BLAH" : {
              "definitionLines" : [
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27,
                28
              ],
              "numReferrers" : 0
            },
            "TEST" : {
              "definitionLines" : [
                66,
                67,
                68
              ],
              "numReferrers" : 0
            },
            "blah" : {
              "definitionLines" : [
                35,
                36
              ],
              "numReferrers" : 0
            },
            "extended" : {
              "definitionLines" : [
                31
              ],
              "numReferrers" : 0
            },
            "standard" : {
              "definitionLines" : [
                33
              ],
              "numReferrers" : 0
            },
            "test-codes" : {
              "definitionLines" : [
                62,
                63,
                64
              ],
              "numReferrers" : 0
            }
          },
          "ipv4 prefix-list" : {
            "allowprefix" : {
              "definitionLines" : [
                38,
                39
              ],
              "numReferrers" : 0
            },
            "allowprefix-asa" : {
              "definitionLines" : [
                41,
                42
              ],
              "numReferrers" : 0
            }
          }
        },
        "configs/cisco_additional_paths" : { },
        "configs/cisco_authentication" : { },
        "configs/cisco_bgp" : {
          "as-path access-list" : {
            "10" : {
              "definitionLines" : [
                4,
                5
              ],
              "numReferrers" : 1
            },
            "20" : {
              "definitionLines" : [
                6
              ],
              "numReferrers" : 1
            },
            "30" : {
              "definitionLines" : [
                7
              ],
              "numReferrers" : 0
            }
          },
          "bgp template peer-policy" : {
            "p1" : {
              "definitionLines" : [
                34,
                35,
                36,
                37
              ],
              "numReferrers" : 0
            }
          },
          "route-map" : {
            "AGGREGATE-MAP" : {
              "definitionLines" : [
                56
              ],
              "numReferrers" : 1
            },
            "CONNECTED-TO-BGP" : {
              "definitionLines" : [
                54
              ],
              "numReferrers" : 1
            },
            "UNSUPP-MAP" : {
              "definitionLines" : [
                58
              ],
              "numReferrers" : 1
            },
            "ospfv3_map" : {
              "definitionLines" : [
                52
              ],
              "numReferrers" : 1
            }
          },
          "standard ipv4 access-list" : {
            "5" : {
              "definitionLines" : [
                60
              ],
              "numReferrers" : 2
            }
          }
        },
        "configs/cisco_bgp_confederation" : { },
        "configs/cisco_cable" : {
          "cable service-class" : {
            "1" : {
              "definitionLines" : [
                88,
                89,
                90,
                91,
                92,
                93,
                94,
                95,
                96,
                97,
                98,
                99
              ],
              "numReferrers" : 0
            }
          },
          "depi-class" : {
            "depiclass1" : {
              "definitionLines" : [
                131,
                132
              ],
              "numReferrers" : 1
            }
          },
          "depi-tunnel" : {
            "bar1" : {
              "definitionLines" : [
                137,
                138,
                139,
                140,
                141
              ],
              "numReferrers" : 0
            },
            "foo1" : {
              "definitionLines" : [
                134,
                135
              ],
              "numReferrers" : 1
            }
          },
          "docsis-policy" : {
            "1" : {
              "definitionLines" : [
                42
              ],
              "numReferrers" : 1
            }
          },
          "docsis-policy-rule" : {
            "1" : {
              "definitionLines" : [
                48
              ],
              "numReferrers" : 1
            },
            "2" : {
              "definitionLines" : [
                49
              ],
              "numReferrers" : 0
            },
            "3" : {
              "definitionLines" : [
                50
              ],
              "numReferrers" : 0
            },
            "4" : {
              "definitionLines" : [
                51
              ],
              "numReferrers" : 0
            }
          },
          "interface" : {
            "Cable1/2/3" : {
              "definitionLines" : [
                143,
                144,
                145,
                146,
                147,
                148,
                149,
                150,
                151,
                152,
                153,
                154,
                155,
                156,
                157,
                158,
                159,
                160,
                161,
                162,
                163,
                164,
                165,
                166,
                167,
                168,
                169,
                170,
                171
              ],
              "numReferrers" : 1
            }
          }
        },
        "configs/cisco_callhome" : { },
        "configs/cisco_control_plane" : { },
        "configs/cisco_controller" : { },
        "configs/cisco_crypto" : {
          "crypto ipsec profile" : {
            "abcdefg" : {
              "definitionLines" : [
                158,
                159,
                160,
                161,
                162
              ],
              "numReferrers" : 0
            }
          },
          "crypto ipsec transform-set" : {
            "ESP-3DES-MD5" : {
              "definitionLines" : [
                167,
                168,
                169
              ],
              "numReferrers" : 0
            },
            "IPSEC_AES_256" : {
              "definitionLines" : [
                170
              ],
              "numReferrers" : 0
            },
            "cipts1" : {
              "definitionLines" : [
                171
              ],
              "numReferrers" : 0
            },
            "cipts2" : {
              "definitionLines" : [
                172
              ],
              "numReferrers" : 0
            },
            "noAuthHeader" : {
              "definitionLines" : [
                173
              ],
              "numReferrers" : 0
            }
          },
          "crypto isakmp policy" : {
            "1" : {
              "definitionLines" : [
                180,
                181,
                182,
                183,
                184,
                185
              ],
              "numReferrers" : 1
            }
          },
          "crypto isakmp profile" : {
            "myprofile" : {
              "definitionLines" : [
                187,
                188,
                189,
                190,
                191,
                192,
                193
              ],
              "numReferrers" : 1
            }
          },
          "crypto keyring" : {
            "VRF:ABC:DEF:GHI:1234" : {
              "definitionLines" : [
                212,
                213
              ],
              "numReferrers" : 0
            }
          },
          "crypto-dynamic-map-set" : {
            "asadynamicmaps" : {
              "definitionLines" : [
                94
              ],
              "numReferrers" : 0
            },
            "mydefaultcryptomap" : {
              "definitionLines" : [
                100,
                101
              ],
              "numReferrers" : 1
            },
            "mydynamicmap" : {
              "definitionLines" : [
                110,
                111
              ],
              "numReferrers" : 0
            }
          },
          "crypto-map-set" : {
            "VPN" : {
              "definitionLines" : [
                218,
                219,
                220,
                221,
                222,
                223
              ],
              "numReferrers" : 0
            },
            "VPNMAP" : {
              "definitionLines" : [
                233,
                234,
                235,
                236,
                237,
                238,
                239,
                240,
                241
              ],
              "numReferrers" : 0
            },
            "myothermap" : {
              "definitionLines" : [
                215
              ],
              "numReferrers" : 0
            }
          }
        },
        "configs/cisco_dhcp" : { },
        "configs/cisco_domain" : { },
        "configs/cisco_dot11" : { },
        "configs/cisco_dot1x" : { },
        "configs/cisco_dscpfarm" : { },
        "configs/cisco_dynamic_access_policy_record" : { },
        "configs/cisco_eigrp" : {
          "extended ipv4 access-list" : {
            "bippety" : {
              "definitionLines" : [
                49,
                50,
                51,
                52,
                53,
                54,
                55
              ],
              "numReferrers" : 0
            },
            "bloop_blop" : {
              "definitionLines" : [
                118,
                119
              ],
              "numReferrers" : 0
            }
          },
          "interface" : {
            "Ethernet0" : {
              "definitionLines" : [
                165
              ],
              "numReferrers" : 2
            }
          }
        },
        "configs/cisco_enable" : { },
        "configs/cisco_flow" : {
          "interface" : {
            "GigabitEthernet0/1" : {
              "definitionLines" : [
                52,
                53
              ],
              "numReferrers" : 1
            }
          }
        },
        "configs/cisco_hardware" : { },
        "configs/cisco_hsrp" : {
          "interface" : {
            "TenGigabitEthernet0/0/2/2" : {
              "definitionLines" : [
                33,
                34,
                35,
                36,
                37,
                38,
                39,
                40,
                41,
                42,
                43,
                44,
                45,
                46
              ],
              "numReferrers" : 1
            }
          }
        },
        "configs/cisco_interface" : {
          "extended ipv4 access-list" : {
            "abc" : {
              "definitionLines" : [
                4,
                5
              ],
              "numReferrers" : 1
            }
          },
          "interface" : {
            "Async1" : {
              "definitionLines" : [
                282
              ],
              "numReferrers" : 1
            },
            "Cable1/2/3:4" : {
              "definitionLines" : [
                284
              ],
              "numReferrers" : 1
            },
            "Crypto-Engine1/2/3" : {
              "definitionLines" : [
                286
              ],
              "numReferrers" : 1
            },
            "Dot11Radio0" : {
              "definitionLines" : [
                288
              ],
              "numReferrers" : 1
            },
            "Ethernet0" : {
              "definitionLines" : [
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27,
                28,
                29,
                30,
                31,
                32,
                33,
                34,
                35,
                36,
                37,
                38,
                39,
                40,
                41,
                42,
                43,
                44,
                45,
                46,
                47,
                48,
                49,
                50,
                51,
                52,
                53,
                54,
                55,
                56,
                57,
                58,
                59,
                60,
                61,
                62,
                63,
                64,
                65,
                66,
                67,
                68,
                69,
                70,
                71,
                72,
                73,
                74,
                75,
                76,
                77,
                78,
                79,
                80,
                81,
                82,
                83,
                84,
                85,
                86,
                87,
                88,
                89,
                90,
                91,
                92,
                93,
                94,
                95,
                96,
                97,
                98,
                99,
                100,
                101,
                102,
                103,
                104,
                105,
                106,
                107,
                108,
                109,
                110,
                111,
                112,
                113,
                114,
                115,
                116,
                117,
                118,
                119,
                120,
                121,
                122,
                123,
                124,
                125,
                126,
                127,
                128,
                129,
                130,
                131,
                132,
                133,
                134,
                135,
                136,
                137,
                138,
                139,
                140,
                141,
                142,
                143,
                144,
                145,
                146,
                147,
                148,
                149,
                150,
                151,
                152,
                153,
                154,
                155,
                156,
                157,
                158,
                159,
                160,
                161,
                162,
                163,
                164,
                165,
                166,
                167,
                168,
                169,
                170,
                171,
                172,
                173,
                174,
                175,
                176,
                177,
                178,
                179,
                180,
                181,
                182,
                183,
                184,
                185,
                186,
                187,
                188,
                189,
                190,
                191,
                192,
                193,
                194,
                195,
                196,
                197,
                198,
                199,
                200,
                201,
                202,
                203,
                204,
                205,
                206,
                207,
                208,
                209,
                210,
                211,
                212,
                213,
                214,
                215,
                216,
                217,
                218,
                219,
                220,
                221,
                222,
                223,
                224,
                225,
                226,
                227,
                228,
                229,
                230,
                231,
                232,
                233,
                234,
                235,
                236,
                237,
                238,
                239,
                240,
                241,
                242,
                243,
                244,
                245,
                246,
                247,
                248,
                249,
                250,
                251,
                252,
                253,
                254,
                255,
                256,
                257,
                258,
                259,
                260,
                261,
                262,
                263,
                264,
                265,
                266,
                267,
                268,
                269,
                270,
                271,
                272,
                273,
                274,
                275,
                276,
                277,
                278,
                279,
                280
              ],
              "numReferrers" : 1
            },
            "Ethernet1/11" : {
              "definitionLines" : [
                290
              ],
              "numReferrers" : 1
            },
            "Ethernet1/12" : {
              "definitionLines" : [
                346,
                347
              ],
              "numReferrers" : 1
            },
            "GigabitEthernet0/0" : {
              "definitionLines" : [
                292,
                293,
                294,
                295,
                296
              ],
              "numReferrers" : 1
            },
            "Loopback0" : {
              "definitionLines" : [
                298,
                299,
                300,
                301
              ],
              "numReferrers" : 1
            },
            "Modular-Cable1/2/3:4" : {
              "definitionLines" : [
                303
              ],
              "numReferrers" : 1
            },
            "Null0" : {
              "definitionLines" : [
                305
              ],
              "numReferrers" : 1
            },
            "Tunnel0" : {
              "definitionLines" : [
                309,
                310,
                311,
                312,
                313,
                314,
                315,
                316,
                317,
                318,
                319,
                320
              ],
              "numReferrers" : 1
            },
            "Vlan1" : {
              "definitionLines" : [
                330
              ],
              "numReferrers" : 1
            },
            "Vlan1005" : {
              "definitionLines" : [
                336
              ],
              "numReferrers" : 1
            },
            "Vlan1006" : {
              "definitionLines" : [
                338
              ],
              "numReferrers" : 1
            },
            "Vlan111" : {
              "definitionLines" : [
                321
              ],
              "numReferrers" : 1
            },
            "Vlan1234" : {
              "definitionLines" : [
                340
              ],
              "numReferrers" : 1
            },
            "Vlan2" : {
              "definitionLines" : [
                332
              ],
              "numReferrers" : 1
            },
            "Vlan3" : {
              "definitionLines" : [
                334
              ],
              "numReferrers" : 1
            },
            "Vlan4094" : {
              "definitionLines" : [
                342
              ],
              "numReferrers" : 1
            },
            "Wideband-Cable1/2/3:4" : {
              "definitionLines" : [
                344
              ],
              "numReferrers" : 1
            },
            "inside" : {
              "definitionLines" : [
                293
              ],
              "numReferrers" : 1
            },
            "tunnel-ip6" : {
              "definitionLines" : [
                307
              ],
              "numReferrers" : 1
            }
          },
          "vxlan" : {
            "Vxlan1" : {
              "definitionLines" : [
                323,
                324,
                325,
                326,
                327
              ],
              "numReferrers" : 1
            }
          }
        },
        "configs/cisco_ios_neighbor" : {
          "bgp peer-group" : {
            "8075-CORE" : {
              "definitionLines" : [
                6
              ],
              "numReferrers" : 0
            },
            "LEAF" : {
              "definitionLines" : [
                7
              ],
              "numReferrers" : 1
            }
          }
        },
        "configs/cisco_ip" : { },
        "configs/cisco_ip_nat" : {
          "nat pool" : {
            "abc" : {
              "definitionLines" : [
                4,
                5
              ],
              "numReferrers" : 0
            },
            "example-1-dynamic-nat-pool" : {
              "definitionLines" : [
                8
              ],
              "numReferrers" : 0
            },
            "example-2-dynamic-nat-pool" : {
              "definitionLines" : [
                10
              ],
              "numReferrers" : 0
            }
          }
        },
        "configs/cisco_ip_route" : { },
        "configs/cisco_ipsla" : { },
        "configs/cisco_ipv6" : { },
        "configs/cisco_ipv6_access_list" : {
          "extended ipv6 access-list" : {
            "RT404888-XO" : {
              "definitionLines" : [
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16
              ],
              "numReferrers" : 0
            },
            "abcdefg" : {
              "definitionLines" : [
                19,
                20,
                21,
                22,
                23
              ],
              "numReferrers" : 0
            }
          }
        },
        "configs/cisco_isis" : {
          "interface" : {
            "GigabitEthernet0/0/1" : {
              "definitionLines" : [
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27,
                28,
                29,
                30,
                31,
                32,
                33,
                34,
                35
              ],
              "numReferrers" : 1
            },
            "GigabitEthernet0/1" : {
              "definitionLines" : [
                4
              ],
              "numReferrers" : 1
            },
            "HundredGigabitEthernet0/0/0/0.2302" : {
              "definitionLines" : [
                8
              ],
              "numReferrers" : 1
            },
            "Serial4/0" : {
              "definitionLines" : [
                6
              ],
              "numReferrers" : 1
            }
          }
        },
        "configs/cisco_l2tp" : {
          "l2tp-class" : {
            "foobar" : {
              "definitionLines" : [
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20
              ],
              "numReferrers" : 0
            }
          }
        },
        "configs/cisco_line" : { },
        "configs/cisco_logging" : { },
        "configs/cisco_mac_acl" : {
          "mac acl" : {
            "1199" : {
              "definitionLines" : [
                5
              ],
              "numReferrers" : 0
            },
            "700" : {
              "definitionLines" : [
                4
              ],
              "numReferrers" : 0
            },
            "copp-system-p-acl-mac-cdp-udld-vtp" : {
              "definitionLines" : [
                6,
                7
              ],
              "numReferrers" : 0
            }
          }
        },
        "configs/cisco_misc" : {
          "class-map" : {
            "class-default" : {
              "definitionLines" : [
                210
              ],
              "numReferrers" : 1
            }
          },
          "object-group service" : {
            "SVCGRP-ICMP" : {
              "definitionLines" : [
                177,
                178
              ],
              "numReferrers" : 0
            }
          },
          "policy-map" : {
            "global_policy" : {
              "definitionLines" : [
                194,
                195,
                196,
                197,
                198,
                199,
                200,
                201,
                202,
                203,
                204,
                205,
                206,
                207,
                208,
                209,
                210,
                211
              ],
              "numReferrers" : 1
            }
          }
        },
        "configs/cisco_monitor" : { },
        "configs/cisco_mpls" : { },
        "configs/cisco_multicast" : { },
        "configs/cisco_noipns" : { },
        "configs/cisco_nomaskreply" : {
          "interface" : {
            "GigabitEthernet1" : {
              "definitionLines" : [
                4,
                5,
                6,
                7
              ],
              "numReferrers" : 1
            }
          }
        },
        "configs/cisco_nosnmp" : { },
        "configs/cisco_ntp" : { },
        "configs/cisco_nxos" : {
          "class-map" : {
            "copp-icmp" : {
              "definitionLines" : [
                8,
                9
              ],
              "numReferrers" : 0
            }
          },
          "extended ipv4 access-list" : {
            "copp-system-acl-icmp" : {
              "definitionLines" : [
                6,
                7
              ],
              "numReferrers" : 1
            }
          },
          "interface" : {
            "Ethernet2/1" : {
              "definitionLines" : [
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24
              ],
              "numReferrers" : 1
            }
          }
        },
        "configs/cisco_nxos_bgp" : {
          "route-map" : {
            "MATCH_ASN" : {
              "definitionLines" : [
                6,
                7
              ],
              "numReferrers" : 1
            }
          }
        },
        "configs/cisco_opsfv3" : {
          "interface" : {
            "Ethernet0/0" : {
              "definitionLines" : [
                4,
                5,
                6,
                7,
                8,
                9
              ],
              "numReferrers" : 1
            }
          }
        },
        "configs/cisco_ospf" : {
          "interface" : {
            "Ethernet0/0" : {
              "definitionLines" : [
                7,
                8,
                9,
                10,
                12,
                13,
                14,
                15
              ],
              "numReferrers" : 3
            },
            "Ethernet1/0" : {
              "definitionLines" : [
                17,
                18,
                19,
                20
              ],
              "numReferrers" : 1
            },
            "Loopback0" : {
              "definitionLines" : [
                4,
                5
              ],
              "numReferrers" : 1
            }
          }
        },
        "configs/cisco_ospf_ipv6" : {
          "interface" : {
            "Ethernet0/0" : {
              "definitionLines" : [
                4,
                5,
                6,
                7
              ],
              "numReferrers" : 2
            }
          }
        },
        "configs/cisco_ospf_multi_process" : {
          "interface" : {
            "Ethernet0/0" : {
              "definitionLines" : [
                4,
                5,
                6
              ],
              "numReferrers" : 1
            },
            "Ethernet1/0" : {
              "definitionLines" : [
                8,
                9,
                10
              ],
              "numReferrers" : 1
            },
            "Loopback0" : {
              "definitionLines" : [
                12,
                13
              ],
              "numReferrers" : 1
            }
          }
        },
        "configs/cisco_pim" : { },
        "configs/cisco_platform" : { },
        "configs/cisco_privilege" : { },
        "configs/cisco_qos" : {
          "class-map" : {
            "ABC" : {
              "definitionLines" : [
                5,
                6,
                7,
                8,
                9,
                10
              ],
              "numReferrers" : 0
            },
            "bippety" : {
              "definitionLines" : [
                11,
                12,
                13
              ],
              "numReferrers" : 0
            },
            "boop" : {
              "definitionLines" : [
                19,
                20,
                21
              ],
              "numReferrers" : 0
            },
            "boppety" : {
              "definitionLines" : [
                14,
                15,
                16,
                17
              ],
              "numReferrers" : 0
            },
            "cos_all" : {
              "definitionLines" : [
                23,
                24,
                25
              ],
              "numReferrers" : 0
            }
          },
          "object network" : {
            "obj_any" : {
              "definitionLines" : [
                31,
                32
              ],
              "numReferrers" : 0
            }
          },
          "object-group network" : {
            "1.2.3.4-24" : {
              "definitionLines" : [
                33,
                34
              ],
              "numReferrers" : 0
            },
            "dns_servers" : {
              "definitionLines" : [
                35,
                36,
                37
              ],
              "numReferrers" : 0
            },
            "ntp_servers" : {
              "definitionLines" : [
                38,
                39,
                40,
                41
              ],
              "numReferrers" : 0
            }
          },
          "policy-map type inspect" : {
            "pminspect" : {
              "definitionLines" : [
                42,
                43,
                44,
                45,
                46,
                47
              ],
              "numReferrers" : 0
            }
          },
          "service-template" : {
            "template_name" : {
              "definitionLines" : [
                142,
                143,
                144,
                145,
                146,
                147,
                148,
                149,
                150
              ],
              "numReferrers" : 0
            }
          }
        },
        "configs/cisco_queue_monitor" : { },
        "configs/cisco_redundancy" : { },
        "configs/cisco_rip" : { },
        "configs/cisco_role" : { },
        "configs/cisco_route_map" : {
          "as-path access-list" : {
            "AS_PATH_ACL1" : {
              "definitionLines" : [
                4,
                5
              ],
              "numReferrers" : 1
            },
            "AS_PATH_ACL2" : {
              "definitionLines" : [
                6
              ],
              "numReferrers" : 1
            },
            "AS_PATH_ACL_UNUSED" : {
              "definitionLines" : [
                7
              ],
              "numReferrers" : 0
            }
          },
          "route-map" : {
            "MAP_NAME1" : {
              "definitionLines" : [
                50,
                51
              ],
              "numReferrers" : 0
            },
            "MAP_NAME2" : {
              "definitionLines" : [
                53,
                54,
                56,
                57
              ],
              "numReferrers" : 0
            },
            "MSDP-SA-RP-FILTER" : {
              "definitionLines" : [
                24,
                25,
                26
              ],
              "numReferrers" : 0
            },
            "beeble" : {
              "definitionLines" : [
                35,
                36,
                37,
                38,
                40,
                41,
                42,
                43,
                44,
                45
              ],
              "numReferrers" : 0
            },
            "connected-to-bgp" : {
              "definitionLines" : [
                9,
                10,
                11,
                12,
                13,
                14,
                15
              ],
              "numReferrers" : 0
            },
            "ijfw$%^&****(((([]grr" : {
              "definitionLines" : [
                22
              ],
              "numReferrers" : 0
            },
            "mgmt" : {
              "definitionLines" : [
                31,
                32,
                33
              ],
              "numReferrers" : 0
            },
            "multicaststuff" : {
              "definitionLines" : [
                47,
                48
              ],
              "numReferrers" : 0
            },
            "next-hop-null" : {
              "definitionLines" : [
                28,
                29
              ],
              "numReferrers" : 0
            },
            "to_svl-hub-router" : {
              "definitionLines" : [
                17,
                18
              ],
              "numReferrers" : 0
            }
          }
        },
        "configs/cisco_sccp" : { },
        "configs/cisco_snmp" : { },
        "configs/cisco_spanning_tree" : { },
        "configs/cisco_ssh" : { },
        "configs/cisco_stcapp" : { },
        "configs/cisco_style_acl1" : {
          "extended ipv4 access-list" : {
            "blah" : {
              "definitionLines" : [
                1,
                2
              ],
              "numReferrers" : 0
            }
          }
        },
        "configs/cisco_style_acl2" : {
          "standard ipv4 access-list" : {
            "1" : {
              "definitionLines" : [
                1
              ],
              "numReferrers" : 0
            }
          }
        },
        "configs/cisco_system" : { },
        "configs/cisco_tacacs" : { },
        "configs/cisco_track" : {
          "track" : {
            "1" : {
              "definitionLines" : [
                4
              ],
              "numReferrers" : 0
            },
            "2" : {
              "definitionLines" : [
                5
              ],
              "numReferrers" : 0
            },
            "3" : {
              "definitionLines" : [
                6,
                7,
                8,
                9,
                10
              ],
              "numReferrers" : 0
            },
            "IPv6Loopback" : {
              "definitionLines" : [
                12,
                13,
                14,
                15
              ],
              "numReferrers" : 0
            }
          }
        },
        "configs/cisco_username" : { },
        "configs/cisco_username_without_password" : { },
        "configs/cisco_vdc" : { },
        "configs/cisco_vlan" : { },
        "configs/cisco_voice" : { },
        "configs/cisco_vpdn" : { },
        "configs/cisco_vpn" : { },
        "configs/cisco_vrf" : { },
        "configs/cisco_vrrp" : {
          "interface" : {
            "Ethernet0" : {
              "definitionLines" : [
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13
              ],
              "numReferrers" : 1
            }
          }
        },
        "configs/cisco_webvpn" : { },
        "configs/cisco_wsma" : { },
        "configs/cisco_zone" : {
          "zone" : {
            "t1" : {
              "definitionLines" : [
                10
              ],
              "numReferrers" : 0
            }
          },
          "zone security" : {
            "z1" : {
              "definitionLines" : [
                7
              ],
              "numReferrers" : 1
            },
            "z2" : {
              "definitionLines" : [
                8
              ],
              "numReferrers" : 1
            }
          },
          "zone-pair security" : {
            "zp1" : {
              "definitionLines" : [
                4,
                5
              ],
              "numReferrers" : 0
            }
          }
        },
        "configs/colon_in_vrf" : { },
        "configs/community_list_named" : {
          "ipv4 prefix-list" : {
            "PFX_LIST" : {
              "definitionLines" : [
                4
              ],
              "numReferrers" : 1
            }
          },
          "route-map" : {
            "TO_NEIGHBOR" : {
              "definitionLines" : [
                8,
                9,
                10
              ],
              "numReferrers" : 0
            }
          },
          "standard community-list" : {
            "COMM_LIST_NAME" : {
              "definitionLines" : [
                6
              ],
              "numReferrers" : 1
            }
          }
        },
        "configs/community_name_numbers" : {
          "route-map" : {
            "AAA1-BBB-CCC" : {
              "definitionLines" : [
                6,
                7,
                8,
                9,
                10
              ],
              "numReferrers" : 0
            }
          },
          "standard community-list" : {
            "9999-RRR" : {
              "definitionLines" : [
                4
              ],
              "numReferrers" : 1
            }
          }
        },
        "configs/community_name_numbers_dos" : {
          "route-map" : {
            "AAA1-BBB-CCC" : {
              "definitionLines" : [
                6,
                7,
                8,
                9,
                10
              ],
              "numReferrers" : 0
            }
          },
          "standard community-list" : {
            "9999-RRR" : {
              "definitionLines" : [
                4
              ],
              "numReferrers" : 1
            }
          }
        },
        "configs/community_set" : {
          "community-set" : {
            "190" : {
              "definitionLines" : [
                9,
                10,
                11,
                12
              ],
              "numReferrers" : 0
            },
            "foo" : {
              "definitionLines" : [
                5,
                6
              ],
              "numReferrers" : 0
            }
          }
        },
        "configs/cumulus_nclu" : {
          "bond" : {
            "bond1" : {
              "definitionLines" : [
                19
              ],
              "numReferrers" : 1
            },
            "bond2" : {
              "definitionLines" : [
                21
              ],
              "numReferrers" : 1
            }
          },
          "interface" : {
            "bond1.4094" : {
              "definitionLines" : [
                34
              ],
              "numReferrers" : 5
            },
            "eth0" : {
              "definitionLines" : [
                39
              ],
              "numReferrers" : 1
            },
            "swp1" : {
              "definitionLines" : [
                12
              ],
              "numReferrers" : 4
            },
            "swp2" : {
              "definitionLines" : [
                19
              ],
              "numReferrers" : 4
            },
            "swp3" : {
              "definitionLines" : [
                19
              ],
              "numReferrers" : 2
            },
            "swp4" : {
              "definitionLines" : [
                19
              ],
              "numReferrers" : 1
            },
            "swp5" : {
              "definitionLines" : [
                19
              ],
              "numReferrers" : 1
            },
            "swp6" : {
              "definitionLines" : [
                19
              ],
              "numReferrers" : 1
            },
            "swp7" : {
              "definitionLines" : [
                19
              ],
              "numReferrers" : 1
            },
            "swp8" : {
              "definitionLines" : [
                19
              ],
              "numReferrers" : 1
            }
          },
          "loopback" : {
            "lo" : {
              "definitionLines" : [
                44,
                45,
                46
              ],
              "numReferrers" : 4
            }
          },
          "route-map" : {
            "rm1" : {
              "definitionLines" : [
                59
              ],
              "numReferrers" : 1
            }
          },
          "vlan" : {
            "vlan4" : {
              "definitionLines" : [
                65
              ],
              "numReferrers" : 5
            }
          },
          "vrf" : {
            "mgmt" : {
              "definitionLines" : [
                34
              ],
              "numReferrers" : 5
            },
            "vrf1" : {
              "definitionLines" : [
                14
              ],
              "numReferrers" : 9
            }
          },
          "vxlan" : {
            "vni10001" : {
              "definitionLines" : [
                75
              ],
              "numReferrers" : 1
            }
          }
        },
        "configs/cumulus_nclu_invalid_bonds" : {
          "interface" : {
            "swp1" : {
              "definitionLines" : [
                6
              ],
              "numReferrers" : 1
            },
            "swp2" : {
              "definitionLines" : [
                9
              ],
              "numReferrers" : 1
            },
            "swp3" : {
              "definitionLines" : [
                11
              ],
              "numReferrers" : 1
            },
            "swp5" : {
              "definitionLines" : [
                12
              ],
              "numReferrers" : 1
            },
            "swp6" : {
              "definitionLines" : [
                14
              ],
              "numReferrers" : 1
            },
            "swp7" : {
              "definitionLines" : [
                16
              ],
              "numReferrers" : 1
            },
            "swp8" : {
              "definitionLines" : [
                19
              ],
              "numReferrers" : 1
            }
          },
          "vrf" : {
            "vrf1" : {
              "definitionLines" : [
                8
              ],
              "numReferrers" : 1
            }
          },
          "vxlan" : {
            "v1" : {
              "definitionLines" : [
                18
              ],
              "numReferrers" : 1
            }
          }
        },
        "configs/cumulus_nclu_invalid_interfaces" : {
          "bond" : {
            "bond1" : {
              "definitionLines" : [
                6
              ],
              "numReferrers" : 1
            }
          },
          "vrf" : {
            "vrf1" : {
              "definitionLines" : [
                16
              ],
              "numReferrers" : 1
            }
          },
          "vxlan" : {
            "v1" : {
              "definitionLines" : [
                19
              ],
              "numReferrers" : 1
            }
          }
        },
        "configs/cumulus_nclu_invalid_vrfs" : {
          "bond" : {
            "bond1" : {
              "definitionLines" : [
                8
              ],
              "numReferrers" : 1
            }
          },
          "interface" : {
            "swp1" : {
              "definitionLines" : [
                8
              ],
              "numReferrers" : 1
            }
          },
          "vxlan" : {
            "vx1" : {
              "definitionLines" : [
                16
              ],
              "numReferrers" : 1
            }
          }
        },
        "configs/cumulus_nclu_invalid_vxlans" : {
          "bond" : {
            "bond1" : {
              "definitionLines" : [
                8
              ],
              "numReferrers" : 1
            }
          },
          "interface" : {
            "swp0" : {
              "definitionLines" : [
                8
              ],
              "numReferrers" : 1
            }
          },
          "vrf" : {
            "vrf1" : {
              "definitionLines" : [
                11
              ],
              "numReferrers" : 1
            }
          }
        },
        "configs/eos_mlag" : {
          "interface" : {
            "Port-Channel1" : {
              "definitionLines" : [
                9,
                10,
                11
              ],
              "numReferrers" : 1
            },
            "Port-Channel2" : {
              "definitionLines" : [
                13,
                14,
                15
              ],
              "numReferrers" : 1
            }
          }
        },
        "configs/eos_trunk_group" : {
          "interface" : {
            "Port-Channel1" : {
              "definitionLines" : [
                34,
                35,
                36,
                37
              ],
              "numReferrers" : 1
            }
          }
        },
        "configs/f5_bigip_imish_malformed" : {
          "bgp neighbor" : {
            "2::2" : {
              "definitionLines" : [
                20
              ],
              "numReferrers" : 1
            },
            "3.3.3.3" : {
              "definitionLines" : [
                17
              ],
              "numReferrers" : 1
            }
          },
          "bgp process" : {
            "1" : {
              "definitionLines" : [
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22
              ],
              "numReferrers" : 1
            }
          },
          "prefix-list" : {
            "pl1" : {
              "definitionLines" : [
                9
              ],
              "numReferrers" : 0
            }
          }
        },
        "configs/f5_bigip_structured_ltm" : {
          "monitor http" : {
            "/Common/SOME_MONITOR1" : {
              "definitionLines" : [
                135,
                136,
                137,
                138,
                139,
                140,
                141,
                142,
                143,
                147,
                148,
                149,
                150
              ],
              "numReferrers" : 0
            }
          },
          "monitor https" : {
            "/Common/SOME_MONITOR2" : {
              "definitionLines" : [
                151,
                152,
                153,
                154,
                155,
                156,
                157,
                158,
                159,
                160,
                161,
                165,
                166,
                167,
                168,
                169
              ],
              "numReferrers" : 0
            }
          },
          "node" : {
            "/Common/SOME_LTM_NODE" : {
              "definitionLines" : [
                16,
                17,
                18
              ],
              "numReferrers" : 0
            }
          },
          "persistence source-addr" : {
            "/Common/SOME_PERSISTENCE_SOURCE_ADDR" : {
              "definitionLines" : [
                170,
                171,
                172,
                173,
                174
              ],
              "numReferrers" : 0
            }
          },
          "persistence ssl" : {
            "/Common/SOME_PERSISTENCE_SSL" : {
              "definitionLines" : [
                175,
                176,
                177,
                178,
                179,
                180,
                181,
                182,
                183
              ],
              "numReferrers" : 0
            }
          },
          "pool" : {
            "/Common/SOME_LTM_POOL" : {
              "definitionLines" : [
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27,
                28,
                29,
                30,
                31,
                32,
                33,
                34,
                35,
                36
              ],
              "numReferrers" : 0
            }
          },
          "profile client-ssl" : {
            "/Common/SOME_PROFILE_CLIENT_SSL" : {
              "definitionLines" : [
                184,
                185,
                186,
                187,
                188,
                189,
                190,
                191,
                192,
                193,
                194,
                195,
                196,
                197,
                198,
                199,
                200,
                201,
                202,
                203,
                204,
                205,
                206,
                207,
                208,
                209,
                210,
                211,
                212,
                213,
                214,
                215,
                216,
                217,
                218,
                219,
                220,
                221,
                222,
                223,
                224,
                225,
                226,
                227,
                228,
                229,
                230,
                231,
                232,
                233,
                234,
                235,
                236,
                237,
                238,
                239,
                240,
                241
              ],
              "numReferrers" : 0
            }
          },
          "profile ocsp-stapling-params" : {
            "/Common/SOME_PROFILE_OCSP_STAPLING_PARAMS" : {
              "definitionLines" : [
                242,
                243,
                244,
                245,
                246,
                247,
                248
              ],
              "numReferrers" : 0
            }
          },
          "profile one-connect" : {
            "/Common/oneconnect" : {
              "definitionLines" : [
                249,
                250,
                251,
                252,
                253,
                254,
                255,
                256,
                257
              ],
              "numReferrers" : 0
            }
          },
          "profile server-ssl" : {
            "/Common/SOME_PROFILE_SERVER_SSL" : {
              "definitionLines" : [
                258,
                259,
                260,
                261,
                262,
                263,
                264,
                265,
                266,
                267,
                268,
                269,
                270,
                271,
                272,
                273,
                274,
                275,
                276,
                277,
                278,
                279,
                280,
                281,
                282,
                283,
                284,
                285,
                286,
                287,
                288,
                289,
                290,
                291
              ],
              "numReferrers" : 0
            }
          },
          "rule" : {
            "/Common/SOME_RULE1" : {
              "definitionLines" : [
                37,
                38,
                39,
                40,
                41,
                42
              ],
              "numReferrers" : 1
            },
            "/Common/SOME_RULE2" : {
              "definitionLines" : [
                43,
                44,
                45,
                46,
                47,
                48
              ],
              "numReferrers" : 0
            },
            "/Common/SOME_RULE3" : {
              "definitionLines" : [
                49,
                50,
                51,
                52,
                53,
                54,
                55
              ],
              "numReferrers" : 0
            },
            "/Common/SOME_RULE4" : {
              "definitionLines" : [
                56,
                57,
                58,
                59,
                61,
                62,
                63,
                64,
                65,
                66
              ],
              "numReferrers" : 0
            }
          },
          "snat" : {
            "/Common/SOME_SNAT" : {
              "definitionLines" : [
                67,
                68,
                69,
                70,
                71,
                72,
                73,
                74,
                75,
                76,
                77,
                78
              ],
              "numReferrers" : 1
            }
          },
          "snat-translation" : {
            "/Common/192.0.2.4" : {
              "definitionLines" : [
                79,
                80,
                81,
                82
              ],
              "numReferrers" : 0
            }
          },
          "snatpool" : {
            "/Common/SOME_SNATPOOL" : {
              "definitionLines" : [
                83,
                84,
                85,
                86,
                87,
                88
              ],
              "numReferrers" : 2
            }
          },
          "virtual" : {
            "/Common/SOME_VIRTUAL" : {
              "definitionLines" : [
                89,
                90,
                91,
                92,
                93,
                94,
                95,
                96,
                97,
                98,
                99,
                100,
                101,
                102,
                103,
                104,
                105,
                106,
                107,
                108,
                109,
                110,
                111,
                112,
                113,
                114,
                115,
                116,
                117,
                118,
                119,
                120,
                121,
                122,
                123,
                124
              ],
              "numReferrers" : 1
            }
          },
          "virtual-address" : {
            "/Common/192.0.2.8" : {
              "definitionLines" : [
                125,
                126,
                127,
                128,
                129,
                130,
                131,
                132,
                133,
                134
              ],
              "numReferrers" : 0
            }
          }
        },
        "configs/f5_bigip_structured_malformed" : {
          "route" : {
            "/Common/bad_gw" : {
              "definitionLines" : [
                15,
                16,
                17,
                18
              ],
              "numReferrers" : 1
            },
            "/Common/missing_gw" : {
              "definitionLines" : [
                11,
                12,
                13
              ],
              "numReferrers" : 1
            },
            "/Common/missing_network" : {
              "definitionLines" : [
                30,
                31,
                32
              ],
              "numReferrers" : 1
            },
            "/Common/mixed_protocols1" : {
              "definitionLines" : [
                20,
                21,
                22,
                23
              ],
              "numReferrers" : 1
            },
            "/Common/mixed_protocols2" : {
              "definitionLines" : [
                25,
                26,
                27,
                28
              ],
              "numReferrers" : 1
            }
          },
          "self" : {
            "/Common/self1" : {
              "definitionLines" : [
                7,
                8,
                9
              ],
              "numReferrers" : 1
            }
          }
        },
        "configs/f5_bigip_structured_net" : {
          "interface" : {
            "1.0" : {
              "definitionLines" : [
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16
              ],
              "numReferrers" : 2
            },
            "2.0" : {
              "definitionLines" : [
                66
              ],
              "numReferrers" : 1
            },
            "3.0" : {
              "definitionLines" : [
                67
              ],
              "numReferrers" : 1
            }
          },
          "route" : {
            "/Common/route1" : {
              "definitionLines" : [
                33,
                34,
                35,
                36
              ],
              "numReferrers" : 1
            }
          },
          "self" : {
            "/Common/MYSELF" : {
              "definitionLines" : [
                27,
                28,
                29,
                30,
                31,
                32
              ],
              "numReferrers" : 1
            },
            "/Common/MYSELF6" : {
              "definitionLines" : [
                37,
                38,
                39,
                40
              ],
              "numReferrers" : 1
            }
          },
          "trunk" : {
            "trunk1" : {
              "definitionLines" : [
                64,
                65,
                66,
                67,
                68,
                69,
                70
              ],
              "numReferrers" : 0
            }
          },
          "vlan" : {
            "/Common/MYVLAN" : {
              "definitionLines" : [
                75,
                76,
                77,
                78,
                79,
                80
              ],
              "numReferrers" : 2
            }
          }
        },
        "configs/f5_bigip_structured_net_routing_bgp" : {
          "bgp neighbor" : {
            "192.0.2.1" : {
              "definitionLines" : [
                42,
                43,
                44,
                45,
                46,
                47,
                48,
                49,
                50,
                51,
                52,
                53,
                54,
                55,
                56,
                57,
                58,
                59,
                60,
                61,
                62,
                63,
                64
              ],
              "numReferrers" : 1
            },
            "dead:beef::1" : {
              "definitionLines" : [
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27,
                28,
                29,
                30,
                31,
                32,
                33,
                34,
                35,
                36,
                37,
                38,
                39,
                40,
                41
              ],
              "numReferrers" : 1
            }
          },
          "bgp process" : {
            "/Common/my_bgp" : {
              "definitionLines" : [
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27,
                28,
                29,
                30,
                31,
                32,
                33,
                34,
                35,
                36,
                37,
                38,
                39,
                40,
                41,
                42,
                43,
                44,
                45,
                46,
                47,
                48,
                49,
                50,
                51,
                52,
                53,
                54,
                55,
                56,
                57,
                58,
                59,
                60,
                61,
                62,
                63,
                64,
                65,
                66,
                67,
                68,
                69,
                70,
                71
              ],
              "numReferrers" : 1
            }
          }
        },
        "configs/f5_bigip_structured_net_routing_prefix_list" : {
          "prefix-list" : {
            "/Common/MY_IPV4_PREFIX_LIST" : {
              "definitionLines" : [
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21
              ],
              "numReferrers" : 0
            },
            "/Common/MY_IPV6_PREFIX_LIST" : {
              "definitionLines" : [
                22,
                23,
                24,
                25,
                26,
                27,
                28,
                29,
                30,
                31,
                32,
                33,
                34,
                35,
                36
              ],
              "numReferrers" : 0
            }
          }
        },
        "configs/f5_bigip_structured_net_routing_route_map" : {
          "route-map" : {
            "/Common/MY_ROUTE_MAP" : {
              "definitionLines" : [
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27,
                28,
                29,
                30,
                31,
                32,
                33,
                34,
                35,
                36,
                37,
                38,
                39,
                40,
                41,
                42,
                43,
                44
              ],
              "numReferrers" : 0
            }
          }
        },
        "configs/f5_bigip_structured_sys" : { },
        "configs/f5_bigip_structured_with_imish" : {
          "access-list" : {
            "acl1" : {
              "definitionLines" : [
                8
              ],
              "numReferrers" : 1
            },
            "acl2" : {
              "definitionLines" : [
                9
              ],
              "numReferrers" : 0
            }
          },
          "bgp neighbor" : {
            "10.0.0.1" : {
              "definitionLines" : [
                41
              ],
              "numReferrers" : 1
            },
            "1:2:3:4:5:6:7::" : {
              "definitionLines" : [
                36
              ],
              "numReferrers" : 1
            },
            "1:2:3:4:5:6:9.8.7.6" : {
              "definitionLines" : [
                40
              ],
              "numReferrers" : 1
            },
            "1:2:3::" : {
              "definitionLines" : [
                34
              ],
              "numReferrers" : 1
            },
            "1:2:3::4:5:6" : {
              "definitionLines" : [
                35
              ],
              "numReferrers" : 1
            },
            "1:2::3:4.5.6.7" : {
              "definitionLines" : [
                39
              ],
              "numReferrers" : 1
            },
            "::1:2:3:4:5:6" : {
              "definitionLines" : [
                37
              ],
              "numReferrers" : 1
            },
            "::1:2:3:4:5:6:7" : {
              "definitionLines" : [
                38
              ],
              "numReferrers" : 1
            }
          },
          "bgp process" : {
            "65500" : {
              "definitionLines" : [
                23,
                24,
                25,
                26,
                27,
                28,
                29,
                30,
                31,
                32,
                33,
                34,
                35,
                36,
                37,
                38,
                39,
                40,
                41,
                42,
                43,
                44,
                45,
                46,
                47
              ],
              "numReferrers" : 1
            }
          },
          "peer-group" : {
            "pg1" : {
              "definitionLines" : [
                29
              ],
              "numReferrers" : 0
            }
          },
          "prefix-list" : {
            "pl1" : {
              "definitionLines" : [
                19,
                20,
                21
              ],
              "numReferrers" : 1
            }
          },
          "route-map" : {
            "rm1" : {
              "definitionLines" : [
                51,
                52,
                53,
                54,
                55,
                56,
                57,
                58,
                60
              ],
              "numReferrers" : 1
            }
          }
        },
        "configs/foundry_access_list" : {
          "extended ipv6 access-list" : {
            "RT404888-Caltech" : {
              "definitionLines" : [
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17
              ],
              "numReferrers" : 0
            }
          }
        },
        "configs/foundry_bgp" : {
          "bgp peer-group" : {
            "bippety" : {
              "definitionLines" : [
                11
              ],
              "numReferrers" : 0
            },
            "boop" : {
              "definitionLines" : [
                18
              ],
              "numReferrers" : 0
            }
          }
        },
        "configs/foundry_interface" : {
          "interface" : {
            "Ethernet1/15" : {
              "definitionLines" : [
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20
              ],
              "numReferrers" : 1
            }
          }
        },
        "configs/foundry_misc" : {
          "policy-map" : {
            "limitarp" : {
              "definitionLines" : [
                41,
                42
              ],
              "numReferrers" : 0
            }
          }
        },
        "configs/foundry_vlan_group" : { },
        "configs/gh-2658-juniper-vrf-import-export.cfg" : {
          "bgp group" : {
            "overlay" : {
              "definitionLines" : [
                136,
                137,
                138,
                139,
                140,
                143,
                144,
                145,
                146,
                148,
                149,
                150,
                151,
                152
              ],
              "numReferrers" : 4
            },
            "underlay" : {
              "definitionLines" : [
                118,
                120,
                121,
                122,
                123,
                125,
                126,
                127,
                129,
                130,
                132,
                133
              ],
              "numReferrers" : 3
            }
          },
          "interface" : {
            "fxp0" : {
              "definitionLines" : [
                75,
                76,
                77,
                78
              ],
              "numReferrers" : 1
            },
            "fxp0.0" : {
              "definitionLines" : [
                76,
                77,
                78
              ],
              "numReferrers" : 1
            },
            "irb" : {
              "definitionLines" : [
                82,
                83,
                84,
                85,
                86,
                88
              ],
              "numReferrers" : 3
            },
            "irb.100" : {
              "definitionLines" : [
                83,
                84,
                85,
                86,
                88
              ],
              "numReferrers" : 3
            },
            "lo0" : {
              "definitionLines" : [
                91,
                92,
                93,
                94,
                97,
                98,
                99
              ],
              "numReferrers" : 2
            },
            "lo0.0" : {
              "definitionLines" : [
                92,
                93,
                94
              ],
              "numReferrers" : 3
            },
            "lo0.1" : {
              "definitionLines" : [
                97,
                98,
                99
              ],
              "numReferrers" : 2
            },
            "xe-0/0/2" : {
              "definitionLines" : [
                53,
                54,
                55,
                56
              ],
              "numReferrers" : 1
            },
            "xe-0/0/2.0" : {
              "definitionLines" : [
                54,
                55,
                56
              ],
              "numReferrers" : 1
            },
            "xe-0/0/3" : {
              "definitionLines" : [
                60,
                61,
                62,
                63
              ],
              "numReferrers" : 1
            },
            "xe-0/0/3.0" : {
              "definitionLines" : [
                61,
                62,
                63
              ],
              "numReferrers" : 1
            },
            "xe-0/0/4" : {
              "definitionLines" : [
                67,
                68,
                69,
                70,
                71
              ],
              "numReferrers" : 2
            },
            "xe-0/0/4.0" : {
              "definitionLines" : [
                69,
                70,
                71
              ],
              "numReferrers" : 1
            }
          },
          "policy-statement" : {
            "export-loopback" : {
              "definitionLines" : [
                161,
                162,
                163,
                164
              ],
              "numReferrers" : 1
            },
            "fabric" : {
              "definitionLines" : [
                167,
                168,
                169,
                170,
                171,
                173,
                175,
                176,
                177,
                179,
                180,
                181
              ],
              "numReferrers" : 1
            },
            "lbpp" : {
              "definitionLines" : [
                184,
                185,
                186,
                187
              ],
              "numReferrers" : 1
            }
          },
          "routing-instance" : {
            "fabric" : {
              "definitionLines" : [
                200,
                201,
                202,
                203,
                204,
                205,
                206,
                207,
                208,
                209,
                210,
                211,
                213,
                214,
                217,
                218,
                221,
                222,
                223,
                224,
                225,
                226,
                229,
                230,
                231,
                232,
                233
              ],
              "numReferrers" : 0
            },
            "vr" : {
              "definitionLines" : [
                196,
                197,
                198
              ],
              "numReferrers" : 0
            }
          }
        },
        "configs/host2" : {
          "interface" : {
            "Ethernet0" : {
              "definitionLines" : [
                4,
                5
              ],
              "numReferrers" : 1
            },
            "Ethernet1" : {
              "definitionLines" : [
                7,
                8
              ],
              "numReferrers" : 1
            }
          }
        },
        "configs/if_tag_is" : {
          "route-policy" : {
            "FOO" : {
              "definitionLines" : [
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21
              ],
              "numReferrers" : 0
            }
          }
        },
        "configs/interface_exit" : {
          "interface" : {
            "Vlan303" : {
              "definitionLines" : [
                17,
                18,
                19,
                20,
                21,
                22,
                23
              ],
              "numReferrers" : 1
            },
            "Vlan803" : {
              "definitionLines" : [
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16
              ],
              "numReferrers" : 1
            }
          }
        },
        "configs/interface_name" : {
          "interface" : {
            "FastEthernet12/13" : {
              "definitionLines" : [
                3
              ],
              "numReferrers" : 1
            },
            "HundredGigabitEthernet0/6/0/8" : {
              "definitionLines" : [
                10,
                11
              ],
              "numReferrers" : 1
            },
            "Port-Channel1" : {
              "definitionLines" : [
                7
              ],
              "numReferrers" : 1
            },
            "Vlan100" : {
              "definitionLines" : [
                5
              ],
              "numReferrers" : 1
            }
          }
        },
        "configs/interface_sdr" : {
          "interface" : {
            "Loopback0" : {
              "definitionLines" : [
                4,
                5,
                6,
                7,
                8,
                9,
                10
              ],
              "numReferrers" : 1
            }
          }
        },
        "configs/ios_bfd" : {
          "bfd-template" : {
            "GRE" : {
              "definitionLines" : [
                4,
                5,
                6
              ],
              "numReferrers" : 0
            }
          }
        },
        "configs/ios_bgp" : { },
        "configs/ios_bgp_aggregate_address" : {
          "ipv4 prefix-list" : {
            "ScienceDMZ-networks" : {
              "definitionLines" : [
                14
              ],
              "numReferrers" : 0
            }
          },
          "ipv6 prefix-list" : {
            "ScienceDMZ-networks" : {
              "definitionLines" : [
                16,
                17
              ],
              "numReferrers" : 0
            }
          }
        },
        "configs/ios_interface" : {
          "interface" : {
            "GigabitEthernet1/0/1" : {
              "definitionLines" : [
                4,
                5,
                6
              ],
              "numReferrers" : 1
            }
          }
        },
        "configs/ios_standby" : {
          "interface" : {
            "Vlan1000" : {
              "definitionLines" : [
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12
              ],
              "numReferrers" : 1
            }
          }
        },
        "configs/ios_template" : { },
        "configs/ios_xr_acl" : { },
        "configs/ios_xr_bgp" : { },
        "configs/ios_xr_bgp_neighbor_group" : {
          "bgp af-group" : {
            "blabbety" : {
              "definitionLines" : [
                10,
                11,
                12,
                13
              ],
              "numReferrers" : 0
            },
            "blappety" : {
              "definitionLines" : [
                5,
                6,
                7,
                8
              ],
              "numReferrers" : 0
            }
          },
          "bgp neighbor-group" : {
            "BGPMonitor" : {
              "definitionLines" : [
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27,
                28,
                29
              ],
              "numReferrers" : 1
            },
            "foobar-iBGP_border_ipv4" : {
              "definitionLines" : [
                56,
                57,
                58,
                59,
                60,
                61,
                62,
                63,
                64
              ],
              "numReferrers" : 1
            },
            "foobar-iBGP_border_ipv6" : {
              "definitionLines" : [
                67,
                68,
                69,
                70,
                71,
                72,
                73,
                74
              ],
              "numReferrers" : 0
            },
            "foobar-iBGP_ipv4" : {
              "definitionLines" : [
                32,
                33,
                34,
                35,
                36
              ],
              "numReferrers" : 2
            },
            "foobar-iBGP_ipv6" : {
              "definitionLines" : [
                46,
                47,
                48,
                49,
                50,
                51,
                52,
                53
              ],
              "numReferrers" : 0
            }
          },
          "bgp session-group" : {
            "OLA" : {
              "definitionLines" : [
                92,
                93,
                94,
                95
              ],
              "numReferrers" : 0
            },
            "blibber" : {
              "definitionLines" : [
                15,
                16,
                17,
                18
              ],
              "numReferrers" : 0
            }
          }
        },
        "configs/ios_xr_class_map" : {
          "class-map" : {
            "ABC" : {
              "definitionLines" : [
                5,
                6,
                7
              ],
              "numReferrers" : 0
            },
            "ABCD" : {
              "definitionLines" : [
                9,
                10,
                11
              ],
              "numReferrers" : 0
            }
          }
        },
        "configs/ios_xr_community_set" : {
          "community-set" : {
            "EBGP-PEER" : {
              "definitionLines" : [
                40,
                41,
                42,
                43
              ],
              "numReferrers" : 0
            },
            "all_community" : {
              "definitionLines" : [
                7,
                8,
                9
              ],
              "numReferrers" : 0
            },
            "cenic_default_network_community" : {
              "definitionLines" : [
                31,
                32,
                33
              ],
              "numReferrers" : 0
            },
            "community_52" : {
              "definitionLines" : [
                4,
                5,
                6
              ],
              "numReferrers" : 0
            },
            "dc_and_isp_blackhole_community" : {
              "definitionLines" : [
                28,
                29,
                30
              ],
              "numReferrers" : 0
            },
            "dc_and_isp_routes_community" : {
              "definitionLines" : [
                25,
                26,
                27
              ],
              "numReferrers" : 0
            },
            "hpr_blackhole_community" : {
              "definitionLines" : [
                13,
                14,
                15
              ],
              "numReferrers" : 0
            },
            "hpr_routes_community" : {
              "definitionLines" : [
                10,
                11,
                12
              ],
              "numReferrers" : 0
            },
            "ucla_blackhole_community" : {
              "definitionLines" : [
                16,
                17,
                18
              ],
              "numReferrers" : 0
            },
            "ucla_to_dc_and_isp_community_ipv4" : {
              "definitionLines" : [
                34,
                35,
                36
              ],
              "numReferrers" : 0
            },
            "ucla_to_dc_and_isp_community_ipv6" : {
              "definitionLines" : [
                37,
                38,
                39
              ],
              "numReferrers" : 0
            },
            "ucla_to_hpr_community_ipv4" : {
              "definitionLines" : [
                19,
                20,
                21
              ],
              "numReferrers" : 0
            },
            "ucla_to_hpr_community_ipv6" : {
              "definitionLines" : [
                22,
                23,
                24
              ],
              "numReferrers" : 0
            }
          }
        },
        "configs/ios_xr_isis" : { },
        "configs/ios_xr_l2vpn" : { },
        "configs/ios_xr_logging" : { },
        "configs/ios_xr_misc" : { },
        "configs/ios_xr_multicast" : { },
        "configs/ios_xr_multicast_routing" : { },
        "configs/ios_xr_multipart" : { },
        "configs/ios_xr_ntp" : { },
        "configs/ios_xr_ospf" : { },
        "configs/ios_xr_prefix_set" : {
          "prefix-set" : {
            "default_route" : {
              "definitionLines" : [
                4,
                5,
                6
              ],
              "numReferrers" : 0
            },
            "ucla_networks" : {
              "definitionLines" : [
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18
              ],
              "numReferrers" : 0
            }
          }
        },
        "configs/ios_xr_route_policy" : {
          "route-policy" : {
            "EBGP-PEER-AS2828-LAX-PNI-OUT" : {
              "definitionLines" : [
                86,
                87,
                88,
                89,
                90,
                91,
                92,
                93,
                94,
                95,
                96,
                97,
                98,
                99,
                100,
                101,
                102,
                103,
                104
              ],
              "numReferrers" : 0
            },
            "EBGP-PEER-AS6461-LAX-PNI-IN" : {
              "definitionLines" : [
                56,
                57,
                58,
                59,
                60,
                61,
                62,
                63,
                64
              ],
              "numReferrers" : 0
            },
            "EBGP-PEER-SANITY-IN" : {
              "definitionLines" : [
                75,
                76,
                77,
                78,
                79,
                80,
                81,
                82,
                83,
                84,
                85
              ],
              "numReferrers" : 0
            },
            "aaaa" : {
              "definitionLines" : [
                27,
                28,
                29,
                30,
                31
              ],
              "numReferrers" : 0
            },
            "barbar_to_fooey_community_ipv4" : {
              "definitionLines" : [
                50,
                51,
                52,
                53,
                54,
                55
              ],
              "numReferrers" : 0
            },
            "doodlepop" : {
              "definitionLines" : [
                157,
                158,
                159,
                160,
                161,
                162,
                163,
                164,
                165,
                166
              ],
              "numReferrers" : 0
            },
            "drop_community_5555" : {
              "definitionLines" : [
                32,
                33,
                34,
                35,
                36,
                37
              ],
              "numReferrers" : 0
            },
            "fooey_blackhole" : {
              "definitionLines" : [
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11
              ],
              "numReferrers" : 0
            },
            "fooey_to_barbar_ipv4" : {
              "definitionLines" : [
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19
              ],
              "numReferrers" : 0
            },
            "fooey_to_barbar_ipv6" : {
              "definitionLines" : [
                20,
                21,
                22,
                23,
                24,
                25,
                26
              ],
              "numReferrers" : 0
            },
            "ospf_default_ipv4" : {
              "definitionLines" : [
                38,
                39,
                40,
                41,
                42
              ],
              "numReferrers" : 0
            },
            "perfsonar_andsn_ipv4" : {
              "definitionLines" : [
                43,
                44,
                45,
                46,
                47,
                48,
                49
              ],
              "numReferrers" : 0
            },
            "redistribute-static-isis" : {
              "definitionLines" : [
                65,
                66,
                67,
                68,
                69,
                70,
                71,
                72,
                73,
                74
              ],
              "numReferrers" : 0
            },
            "routetype" : {
              "definitionLines" : [
                168,
                169,
                170,
                171,
                172,
                173,
                174
              ],
              "numReferrers" : 0
            },
            "to_chillmap" : {
              "definitionLines" : [
                106,
                107,
                108,
                109,
                110,
                111,
                112,
                113,
                114,
                115,
                116,
                117,
                118,
                119,
                120,
                121,
                122,
                123,
                124,
                125,
                126,
                127,
                128,
                129,
                130,
                131,
                132,
                133,
                134,
                135,
                136,
                137,
                138,
                139,
                140,
                141,
                142,
                143,
                144,
                145,
                146,
                147,
                148,
                149,
                150,
                151,
                152,
                153,
                154,
                155
              ],
              "numReferrers" : 0
            }
          }
        },
        "configs/ios_xr_router_static" : {
          "interface" : {
            "Null0" : {
              "definitionLines" : [
                6
              ],
              "numReferrers" : 7
            }
          }
        },
        "configs/ios_xr_ssh" : { },
        "configs/ios_xr_taskgroup" : { },
        "configs/ip_default_route_classless" : { },
        "configs/ip_prefix_list_single_line" : {
          "ipv4 prefix-list" : {
            "DENY-IPV4-ANY-IN" : {
              "definitionLines" : [
                4
              ],
              "numReferrers" : 0
            }
          }
        },
        "configs/isr_crypto" : { },
        "configs/isr_voip" : { },
        "configs/juniper-interfaces" : {
          "interface" : {
            "xe-0/0/0" : {
              "definitionLines" : [
                4
              ],
              "numReferrers" : 2
            },
            "xe-0/0/0:0" : {
              "definitionLines" : [
                4,
                5,
                15
              ],
              "numReferrers" : 4
            },
            "xe-0/0/0:0.0" : {
              "definitionLines" : [
                5,
                15
              ],
              "numReferrers" : 3
            }
          }
        },
        "configs/juniper-tcpflags" : {
          "firewall filter" : {
            "foo" : {
              "definitionLines" : [
                4
              ],
              "numReferrers" : 0
            }
          }
        },
        "configs/juniper_application" : {
          "application" : {
            "APP" : {
              "definitionLines" : [
                4
              ],
              "numReferrers" : 0
            }
          }
        },
        "configs/juniper_apply_macro" : { },
        "configs/juniper_as_path_group" : {
          "as-path-group" : {
            "AS_PATH_GROUP1" : {
              "definitionLines" : [
                5,
                6
              ],
              "numReferrers" : 0
            }
          },
          "as-path-group as-path" : {
            "AS_PATH_REGEX_NAME1" : {
              "definitionLines" : [
                5
              ],
              "numReferrers" : 0
            },
            "AS_PATH_REGEX_NAME2" : {
              "definitionLines" : [
                6
              ],
              "numReferrers" : 0
            }
          }
        },
        "configs/juniper_bgp" : {
          "bgp group" : {
            "someinternalipv4group" : {
              "definitionLines" : [
                27,
                28,
                29,
                30,
                31,
                32,
                33,
                34,
                35
              ],
              "numReferrers" : 2
            },
            "someinternalipv6group" : {
              "definitionLines" : [
                36,
                37,
                38,
                39,
                40,
                41,
                42,
                43
              ],
              "numReferrers" : 1
            },
            "someipv4bgpgroup" : {
              "definitionLines" : [
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19
              ],
              "numReferrers" : 3
            },
            "someipv6bgpgroup" : {
              "definitionLines" : [
                20,
                21,
                22,
                23,
                24,
                25,
                26
              ],
              "numReferrers" : 1
            }
          }
        },
        "configs/juniper_bgp_allow" : {
          "bgp group" : {
            "GROUP" : {
              "definitionLines" : [
                6,
                7,
                8
              ],
              "numReferrers" : 1
            }
          }
        },
        "configs/juniper_bgp_authentication" : {
          "authentication-key-chain" : {
            "bgp-auth" : {
              "definitionLines" : [
                12,
                13,
                14,
                15,
                16,
                17,
                18
              ],
              "numReferrers" : 1
            }
          },
          "bgp group" : {
            "ext" : {
              "definitionLines" : [
                6,
                7,
                8,
                10,
                11
              ],
              "numReferrers" : 1
            },
            "ext1" : {
              "definitionLines" : [
                20,
                21,
                22,
                23
              ],
              "numReferrers" : 1
            }
          }
        },
        "configs/juniper_bgp_disable" : {
          "bgp group" : {
            "GROUP" : {
              "definitionLines" : [
                4
              ],
              "numReferrers" : 0
            }
          }
        },
        "configs/juniper_bgp_enforce_fist_as" : {
          "bgp group" : {
            "MYGROUP" : {
              "definitionLines" : [
                5,
                6,
                7,
                8
              ],
              "numReferrers" : 1
            }
          }
        },
        "configs/juniper_bgp_remove_private_as" : {
          "bgp group" : {
            "someipv4bgpgroup" : {
              "definitionLines" : [
                5,
                9,
                10,
                11,
                12
              ],
              "numReferrers" : 0
            },
            "someipv6bgpgroup" : {
              "definitionLines" : [
                7,
                13,
                14,
                15,
                16
              ],
              "numReferrers" : 0
            }
          }
        },
        "configs/juniper_extended_community" : { },
        "configs/juniper_firewall" : {
          "firewall filter" : {
            "ISP-INBOUND-L2" : {
              "definitionLines" : [
                40
              ],
              "numReferrers" : 0
            },
            "blah" : {
              "definitionLines" : [
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27,
                30,
                31,
                33
              ],
              "numReferrers" : 0
            },
            "blah6" : {
              "definitionLines" : [
                35,
                36,
                37
              ],
              "numReferrers" : 0
            },
            "f1" : {
              "definitionLines" : [
                4
              ],
              "numReferrers" : 0
            }
          }
        },
        "configs/juniper_forwarding_options" : {
          "dhcp-relay server-group" : {
            "dhcpgrp" : {
              "definitionLines" : [
                24,
                25
              ],
              "numReferrers" : 0
            },
            "test2" : {
              "definitionLines" : [
                26
              ],
              "numReferrers" : 2
            }
          }
        },
        "configs/juniper_interfaces" : {
          "interface" : {
            "ae0" : {
              "definitionLines" : [
                5
              ],
              "numReferrers" : 1
            },
            "ae0.0" : {
              "definitionLines" : [
                5
              ],
              "numReferrers" : 1
            },
            "fab0" : {
              "definitionLines" : [
                6
              ],
              "numReferrers" : 1
            },
            "ge-0/0/0" : {
              "definitionLines" : [
                7
              ],
              "numReferrers" : 1
            },
            "ge-1/0/0" : {
              "definitionLines" : [
                8
              ],
              "numReferrers" : 1
            },
            "ge-2/0/0" : {
              "definitionLines" : [
                9,
                10
              ],
              "numReferrers" : 2
            },
            "ge-2/0/0.0" : {
              "definitionLines" : [
                9
              ],
              "numReferrers" : 1
            },
            "ge-2/0/0.1" : {
              "definitionLines" : [
                10
              ],
              "numReferrers" : 1
            },
            "ge-3/0/0" : {
              "definitionLines" : [
                11
              ],
              "numReferrers" : 1
            },
            "ge-3/0/0.0" : {
              "definitionLines" : [
                11
              ],
              "numReferrers" : 1
            },
            "ge-4/0/0" : {
              "definitionLines" : [
                12
              ],
              "numReferrers" : 1
            },
            "ge-4/0/0.0" : {
              "definitionLines" : [
                12
              ],
              "numReferrers" : 1
            },
            "ge-5/0/0" : {
              "definitionLines" : [
                13
              ],
              "numReferrers" : 1
            },
            "ge-5/0/0.0" : {
              "definitionLines" : [
                13
              ],
              "numReferrers" : 1
            },
            "irb" : {
              "definitionLines" : [
                16,
                17,
                18,
                19
              ],
              "numReferrers" : 4
            },
            "irb.5" : {
              "definitionLines" : [
                16,
                17,
                18,
                19
              ],
              "numReferrers" : 4
            },
            "vme" : {
              "definitionLines" : [
                22
              ],
              "numReferrers" : 1
            },
            "vme.0" : {
              "definitionLines" : [
                22
              ],
              "numReferrers" : 1
            },
            "xe-0/0/0:0" : {
              "definitionLines" : [
                14,
                15
              ],
              "numReferrers" : 2
            },
            "xe-0/0/0:0.0" : {
              "definitionLines" : [
                15
              ],
              "numReferrers" : 1
            },
            "xe-0/0/5:0" : {
              "definitionLines" : [
                20
              ],
              "numReferrers" : 1
            },
            "xe-0/0/5:0.0" : {
              "definitionLines" : [
                20
              ],
              "numReferrers" : 1
            },
            "xe-0/0/6" : {
              "definitionLines" : [
                21
              ],
              "numReferrers" : 1
            }
          },
          "routing-instance" : {
            "SOME_INSTANCE" : {
              "definitionLines" : [
                24
              ],
              "numReferrers" : 0
            }
          },
          "vlan" : {
            "unused-vlan" : {
              "definitionLines" : [
                26,
                27
              ],
              "numReferrers" : 0
            }
          }
        },
        "configs/juniper_isis" : {
          "interface" : {
            "ge-0/0/0" : {
              "definitionLines" : [
                6
              ],
              "numReferrers" : 1
            },
            "ge-0/0/0.0" : {
              "definitionLines" : [
                6
              ],
              "numReferrers" : 8
            }
          }
        },
        "configs/juniper_l2_learning" : { },
        "configs/juniper_misc" : {
          "routing-instance" : {
            "ROUTING_INSTANCE" : {
              "definitionLines" : [
                9
              ],
              "numReferrers" : 0
            }
          }
        },
        "configs/juniper_nat" : {
          "interface" : {
            "ge-0/0/0" : {
              "definitionLines" : [
                33
              ],
              "numReferrers" : 1
            },
            "ge-0/0/0.0" : {
              "definitionLines" : [
                33
              ],
              "numReferrers" : 2
            }
          },
          "nat pool" : {
            "POOL" : {
              "definitionLines" : [
                6,
                23
              ],
              "numReferrers" : 0
            }
          },
          "nat rule" : {
            "DST-RULE" : {
              "definitionLines" : [
                27,
                28,
                29,
                30,
                31
              ],
              "numReferrers" : 0
            },
            "SRC-RULE1" : {
              "definitionLines" : [
                11,
                12,
                13,
                14,
                15
              ],
              "numReferrers" : 0
            },
            "SRC-RULE2" : {
              "definitionLines" : [
                17,
                18
              ],
              "numReferrers" : 0
            },
            "SRC-RULE3" : {
              "definitionLines" : [
                20,
                21
              ],
              "numReferrers" : 0
            }
          },
          "nat rule set" : {
            "DST-NAT" : {
              "definitionLines" : [
                25,
                27,
                28,
                29,
                30,
                31
              ],
              "numReferrers" : 0
            },
            "SRC-NAT" : {
              "definitionLines" : [
                8,
                9,
                11,
                12,
                13,
                14,
                15,
                17,
                18,
                20,
                21
              ],
              "numReferrers" : 0
            }
          }
        },
        "configs/juniper_ntp" : { },
        "configs/juniper_ospf" : { },
        "configs/juniper_ospf_disable" : {
          "interface" : {
            "ge-0/0/0" : {
              "definitionLines" : [
                4
              ],
              "numReferrers" : 1
            },
            "ge-0/0/0.0" : {
              "definitionLines" : [
                4
              ],
              "numReferrers" : 2
            }
          }
        },
        "configs/juniper_ospf_stub_areas" : { },
        "configs/juniper_passwords" : { },
        "configs/juniper_policy_statement" : {
          "as-path" : {
            "ORIGINATED_IN_65535" : {
              "definitionLines" : [
                38
              ],
              "numReferrers" : 1
            },
            "UNUSED_ORIGINATED_IN_65535" : {
              "definitionLines" : [
                39
              ],
              "numReferrers" : 0
            }
          },
          "policy-statement" : {
            "POLICY-NAME" : {
              "definitionLines" : [
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27,
                28,
                29,
                30,
                31,
                32,
                33,
                34,
                35,
                36
              ],
              "numReferrers" : 0
            }
          }
        },
        "configs/juniper_relay" : {
          "dhcp-relay server-group" : {
            "site-dhcp" : {
              "definitionLines" : [
                4
              ],
              "numReferrers" : 2
            }
          }
        },
        "configs/juniper_reth_interfaces" : {
          "interface" : {
            "ge-0/0/0" : {
              "definitionLines" : [
                4,
                5
              ],
              "numReferrers" : 2
            },
            "ge-0/0/0.0" : {
              "definitionLines" : [
                4
              ],
              "numReferrers" : 1
            },
            "ge-0/0/1" : {
              "definitionLines" : [
                6,
                7
              ],
              "numReferrers" : 2
            },
            "ge-0/0/1.0" : {
              "definitionLines" : [
                6
              ],
              "numReferrers" : 1
            },
            "reth0" : {
              "definitionLines" : [
                8
              ],
              "numReferrers" : 1
            },
            "reth0.3" : {
              "definitionLines" : [
                8
              ],
              "numReferrers" : 1
            }
          }
        },
        "configs/juniper_rib_groups" : {
          "bgp group" : {
            "BGP_GROUP" : {
              "definitionLines" : [
                15,
                16,
                18,
                19,
                21,
                22,
                24,
                25
              ],
              "numReferrers" : 4
            }
          },
          "logical-system" : {
            "LOGICALSYSTEM" : {
              "definitionLines" : [
                17,
                18,
                19,
                20,
                21,
                22
              ],
              "numReferrers" : 0
            }
          },
          "rib-group" : {
            "bgp-rib-group" : {
              "definitionLines" : [
                11,
                12
              ],
              "numReferrers" : 0
            },
            "interface-routes-rib" : {
              "definitionLines" : [
                5,
                6,
                7,
                8,
                9
              ],
              "numReferrers" : 0
            }
          },
          "routing-instance" : {
            "ROUTING_INSTANCE_NAME" : {
              "definitionLines" : [
                20,
                21,
                22,
                23,
                24,
                25
              ],
              "numReferrers" : 0
            }
          }
        },
        "configs/juniper_route_filter" : {
          "policy-statement" : {
            "route-filter-test-v4" : {
              "definitionLines" : [
                4,
                5,
                6,
                7,
                8,
                9
              ],
              "numReferrers" : 0
            },
            "route-filter-test-v6" : {
              "definitionLines" : [
                11,
                12,
                13,
                14,
                15,
                16
              ],
              "numReferrers" : 0
            }
          }
        },
        "configs/juniper_routing_options" : {
          "policy-statement" : {
            "POLICY" : {
              "definitionLines" : [
                20
              ],
              "numReferrers" : 1
            }
          }
        },
        "configs/juniper_routing_policy" : {
          "interface" : {
            "ge-0/0/0" : {
              "definitionLines" : [
                4,
                5
              ],
              "numReferrers" : 2
            },
            "ge-0/0/0.0" : {
              "definitionLines" : [
                4,
                5
              ],
              "numReferrers" : 3
            }
          },
          "policy-statement" : {
            "POLICY-NAME" : {
              "definitionLines" : [
                7,
                8,
                9,
                10
              ],
              "numReferrers" : 0
            }
          }
        },
        "configs/juniper_security" : {
          "address-book" : {
            "notglobalAttached" : {
              "definitionLines" : [
                9,
                10
              ],
              "numReferrers" : 1
            },
            "notglobalUnattached" : {
              "definitionLines" : [
                11
              ],
              "numReferrers" : 0
            }
          },
          "ike policy" : {
            "1.2.3.4" : {
              "definitionLines" : [
                14
              ],
              "numReferrers" : 0
            }
          },
          "ike proposal" : {
            "PROPOSAL" : {
              "definitionLines" : [
                13
              ],
              "numReferrers" : 1
            }
          }
        },
        "configs/juniper_snmp" : { },
        "configs/juniper_syslog" : { },
        "configs/juniper_system" : {
          "security-profile" : {
            "ls1" : {
              "definitionLines" : [
                16,
                17,
                18,
                19,
                20,
                21
              ],
              "numReferrers" : 0
            }
          }
        },
        "configs/juniper_tacplus" : { },
        "configs/juniper_trailing_space" : { },
        "configs/juniper_vlan" : {
          "interface" : {
            "xe-0/0/0" : {
              "definitionLines" : [
                10,
                11,
                12,
                13,
                14
              ],
              "numReferrers" : 5
            },
            "xe-0/0/0.0" : {
              "definitionLines" : [
                10,
                11,
                12,
                13,
                14
              ],
              "numReferrers" : 5
            }
          },
          "vlan" : {
            "VLAN30" : {
              "definitionLines" : [
                5,
                6
              ],
              "numReferrers" : 1
            },
            "VLAN40" : {
              "definitionLines" : [
                7,
                8
              ],
              "numReferrers" : 1
            }
          }
        },
        "configs/local_v6_addr" : {
          "bgp peer-group" : {
            "NEIGH" : {
              "definitionLines" : [
                5
              ],
              "numReferrers" : 0
            }
          }
        },
        "configs/mac_access_list" : {
          "mac acl" : {
            "STPDENY" : {
              "definitionLines" : [
                13,
                14,
                15,
                16
              ],
              "numReferrers" : 0
            },
            "filtermac" : {
              "definitionLines" : [
                8
              ],
              "numReferrers" : 0
            },
            "ipmi_test" : {
              "definitionLines" : [
                9,
                10,
                11
              ],
              "numReferrers" : 0
            },
            "permitCDP" : {
              "definitionLines" : [
                4,
                5,
                6,
                7
              ],
              "numReferrers" : 0
            }
          }
        },
        "configs/mos_interface" : {
          "interface" : {
            "Ethernet1" : {
              "definitionLines" : [
                6,
                7
              ],
              "numReferrers" : 1
            },
            "Ethernet2" : {
              "definitionLines" : [
                9,
                10,
                11,
                12,
                13,
                14
              ],
              "numReferrers" : 1
            },
            "Management1" : {
              "definitionLines" : [
                16
              ],
              "numReferrers" : 1
            },
            "ap1" : {
              "definitionLines" : [
                4
              ],
              "numReferrers" : 1
            }
          }
        },
        "configs/mos_misc" : { },
        "configs/msdp_originator_id" : { },
        "configs/named_and_numbered_lists" : {
          "route-map" : {
            "foo" : {
              "definitionLines" : [
                4,
                5
              ],
              "numReferrers" : 0
            }
          }
        },
        "configs/neighbor_mix" : { },
        "configs/neighbor_nxos" : { },
        "configs/network6" : { },
        "configs/nexus" : { },
        "configs/nexus_bgp" : {
          "bgp template peer" : {
            "PEER_BLLF" : {
              "definitionLines" : [
                23,
                24,
                25,
                26,
                27,
                28,
                29,
                30,
                31,
                32
              ],
              "numReferrers" : 0
            }
          }
        },
        "configs/nexus_ntp" : { },
        "configs/nexus_ssh" : { },
        "configs/no_aaa_group_server" : { },
        "configs/non_nexus_neighbor_af" : { },
        "configs/nxos_acl" : {
          "extended ipv4 access-list" : {
            "blah" : {
              "definitionLines" : [
                9,
                10
              ],
              "numReferrers" : 0
            },
            "extended" : {
              "definitionLines" : [
                5
              ],
              "numReferrers" : 0
            },
            "standard" : {
              "definitionLines" : [
                7
              ],
              "numReferrers" : 0
            }
          }
        },
        "configs/nxos_bgp" : { },
        "configs/nxos_interface" : {
          "interface" : {
            "Ethernet0/0" : {
              "definitionLines" : [
                5,
                6,
                7,
                8,
                9
              ],
              "numReferrers" : 1
            },
            "nve1" : {
              "definitionLines" : [
                11,
                12
              ],
              "numReferrers" : 1
            }
          }
        },
        "configs/nxos_misc" : { },
        "configs/nxos_ospf" : {
          "interface" : {
            "Ethernet0/0" : {
              "definitionLines" : [
                5,
                6,
                7
              ],
              "numReferrers" : 1
            }
          }
        },
        "configs/nxos_route_map_continue" : {
          "route-map" : {
            "foobar" : {
              "definitionLines" : [
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27,
                28,
                29,
                30,
                31,
                32,
                33,
                34,
                35,
                36,
                37,
                38,
                39,
                40,
                41,
                42,
                43,
                44,
                45,
                46,
                47,
                48,
                49,
                50,
                51,
                52,
                53,
                54,
                55,
                56,
                57,
                58,
                59,
                60,
                61,
                62,
                63,
                64,
                65,
                66,
                67,
                68,
                69,
                70,
                71,
                72,
                73,
                74,
                75,
                76,
                77,
                78,
                79,
                80,
                81,
                82,
                83,
                84,
                85,
                86,
                87,
                88,
                89,
                90,
                91,
                92,
                93,
                94,
                95,
                96,
                97,
                98,
                99,
                100,
                101,
                102,
                103,
                104,
                105,
                106,
                107,
                108,
                109,
                110,
                111,
                112,
                113,
                114
              ],
              "numReferrers" : 0
            }
          }
        },
        "configs/nxos_system" : { },
        "configs/openflow" : { },
        "configs/peer_template" : {
          "bgp template peer" : {
            "RAAS" : {
              "definitionLines" : [
                14,
                15,
                16,
                17,
                18,
                19,
                20
              ],
              "numReferrers" : 1
            },
            "SPINE" : {
              "definitionLines" : [
                21,
                22,
                23,
                24
              ],
              "numReferrers" : 1
            }
          }
        },
        "configs/pim" : {
          "interface" : {
            "Loopback1" : {
              "definitionLines" : [
                25,
                26,
                27,
                28,
                29,
                30,
                31
              ],
              "numReferrers" : 1
            }
          }
        },
        "configs/pim_snooping" : { },
        "configs/prefix_list_ipv4" : {
          "ipv4 prefix-list" : {
            "default" : {
              "definitionLines" : [
                7
              ],
              "numReferrers" : 1
            },
            "test" : {
              "definitionLines" : [
                4,
                5
              ],
              "numReferrers" : 0
            }
          },
          "route-map" : {
            "to_elacc" : {
              "definitionLines" : [
                9,
                10
              ],
              "numReferrers" : 0
            }
          }
        },
        "configs/route_maps_in_two_address_families" : {
          "bgp template peer" : {
            "ABC" : {
              "definitionLines" : [
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17
              ],
              "numReferrers" : 1
            }
          },
          "ipv4 prefix-list" : {
            "v4_list" : {
              "definitionLines" : [
                21
              ],
              "numReferrers" : 1
            }
          },
          "ipv6 prefix-list" : {
            "v6_list" : {
              "definitionLines" : [
                22
              ],
              "numReferrers" : 1
            }
          },
          "route-map" : {
            "FROM_ABC_V4" : {
              "definitionLines" : [
                24,
                25
              ],
              "numReferrers" : 1
            },
            "FROM_ABC_V6" : {
              "definitionLines" : [
                27,
                28
              ],
              "numReferrers" : 1
            }
          }
        },
        "configs/route_policy_as_path" : {
          "as-path-set" : {
            "ama-coe-as-path" : {
              "definitionLines" : [
                34,
                35,
                36
              ],
              "numReferrers" : 0
            },
            "ama-coe-as-path2" : {
              "definitionLines" : [
                37,
                38
              ],
              "numReferrers" : 0
            },
            "ama-coe-as-path3" : {
              "definitionLines" : [
                39,
                40,
                41,
                42,
                43
              ],
              "numReferrers" : 0
            }
          },
          "route-policy" : {
            "erick-test" : {
              "definitionLines" : [
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11
              ],
              "numReferrers" : 0
            },
            "to_fooey" : {
              "definitionLines" : [
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27,
                28,
                29,
                30,
                31,
                32
              ],
              "numReferrers" : 0
            }
          }
        },
        "configs/route_policy_igp_cost" : {
          "route-policy" : {
            "EBGP_CUST_FULL_v4" : {
              "definitionLines" : [
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12
              ],
              "numReferrers" : 0
            }
          }
        },
        "configs/route_policy_metric_type" : {
          "route-policy" : {
            "to_csuchico" : {
              "definitionLines" : [
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13
              ],
              "numReferrers" : 0
            }
          }
        },
        "configs/route_policy_param" : {
          "route-policy" : {
            "cust_v4_in" : {
              "definitionLines" : [
                4,
                5,
                6,
                7,
                8,
                9,
                10
              ],
              "numReferrers" : 0
            },
            "global_cust_v4" : {
              "definitionLines" : [
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21
              ],
              "numReferrers" : 0
            }
          }
        },
        "configs/router_msdp" : { },
        "configs/set_inline_community" : {
          "route-policy" : {
            "FOOBAR" : {
              "definitionLines" : [
                4,
                5,
                6
              ],
              "numReferrers" : 0
            }
          }
        },
        "configs/statistics" : { },
        "configs/switchport_range" : {
          "interface" : {
            "FastEthernet0/1" : {
              "definitionLines" : [
                4,
                5,
                6
              ],
              "numReferrers" : 1
            }
          }
        },
        "configs/syslog_source_interface" : { },
        "configs/taskgroup" : { },
        "configs/tcpflags" : {
          "extended ipv4 access-list" : {
            "100" : {
              "definitionLines" : [
                4,
                5,
                6,
                7,
                8,
                9
              ],
              "numReferrers" : 0
            }
          }
        },
        "configs/underscore_variable" : {
          "route-map" : {
            "JKL_MNO_PQR" : {
              "definitionLines" : [
                4,
                5
              ],
              "numReferrers" : 0
            }
          }
        },
        "configs/variables" : {
          "interface" : {
            "FastEthernet0/0" : {
              "definitionLines" : [
                4,
                5
              ],
              "numReferrers" : 1
            }
          }
        },
        "configs/variables_dos" : {
          "interface" : {
            "FastEthernet0/0" : {
              "definitionLines" : [
                4,
                5
              ],
              "numReferrers" : 1
            }
          }
        },
        "configs/vlan_access_map2" : {
          "route-policy" : {
            "EBGP-PEER" : {
              "definitionLines" : [
                27,
                28,
                29,
                30
              ],
              "numReferrers" : 0
            }
          }
        },
        "configs/vrf_context" : { },
        "configs/vxlan" : { },
        "hosts/host1.json" : { }
      },
      "referencedStructures" : {
        "configs/arista_bgp" : {
          "bgp peer-group" : {
            "UNDEFINED_PEER_GROUP" : {
              "bgp neighbor statement" : [
                11
              ]
            }
          },
          "route-map" : {
            "ROUTE_MAP" : {
              "bgp redistribute ospfv3 route-map" : [
                12
              ]
            },
            "UNDEFINED_MAP" : {
              "bgp redistribute ospfv3 route-map" : [
                13
              ]
            }
          }
        },
        "configs/arista_dhcp_relay" : {
          "interface" : {
            "Ethernet0" : {
              "interface" : [
                9
              ]
            },
            "Ethernet1" : {
              "interface" : [
                13
              ]
            }
          }
        },
        "configs/arista_interface" : {
          "interface" : {
            "Vlan1" : {
              "interface" : [
                4
              ]
            }
          },
          "policy-map" : {
            "pbr-pmap" : {
              "interface service-policy" : [
                8
              ]
            },
            "qos-pmap" : {
              "interface service-policy" : [
                9
              ]
            }
          }
        },
        "configs/arista_ip_route" : {
          "interface" : {
            "Null0" : {
              "ip route next-hop interface" : [
                4
              ]
            }
          }
        },
        "configs/arista_misc" : {
          "ipv4 acl" : {
            "abc" : {
              "management telnet ip access-group" : [
                36
              ]
            },
            "sshabc" : {
              "management ssh ip access-group" : [
                30
              ]
            }
          }
        },
        "configs/arista_nat" : {
          "interface" : {
            "Ethernet1" : {
              "interface" : [
                12
              ]
            }
          },
          "ipv4 acl" : {
            "acl1" : {
              "ip nat source dynamic access-list" : [
                14
              ]
            }
          },
          "nat pool" : {
            "pool1" : {
              "ip nat source pool" : [
                14
              ]
            }
          }
        },
        "configs/aruba_crypto" : {
          "crypto ipsec transform-set" : {
            "\"" : {
              "crypto dynamic-map transform-set" : [
                5
              ]
            },
            "bar" : {
              "crypto dynamic-map transform-set" : [
                5
              ]
            },
            "baz" : {
              "crypto dynamic-map transform-set" : [
                5
              ]
            },
            "foo" : {
              "crypto dynamic-map transform-set" : [
                5
              ]
            }
          },
          "crypto isakmp policy" : {
            "1" : {
              "isakmp policy" : [
                12
              ]
            }
          }
        },
        "configs/aruba_interface" : {
          "interface" : {
            "GigabitEthernet0/0/0" : {
              "interface" : [
                4
              ]
            }
          }
        },
        "configs/asa_acl" : {
          "object-group network" : {
            "drawbridge_hosts" : {
              "extended access-list network object-group" : [
                9
              ]
            }
          }
        },
        "configs/asa_interface" : {
          "interface" : {
            "GigabitEthernet0/1" : {
              "interface" : [
                6
              ],
              "service-policy interface" : [
                8
              ]
            },
            "ifname" : {
              "interface" : [
                7
              ]
            }
          },
          "policy-map" : {
            "some-interface-policy" : {
              "service-policy interface policy" : [
                8
              ]
            }
          }
        },
        "configs/asa_nat" : {
          "interface" : {
            "inside" : {
              "object nat real interface" : [
                16,
                17,
                18,
                19
              ],
              "twice nat real interface" : [
                7,
                8,
                9
              ]
            },
            "outside" : {
              "object nat mapped interface" : [
                16,
                17,
                18,
                20
              ],
              "twice nat mapped interface" : [
                7,
                8,
                9
              ]
            }
          },
          "object network" : {
            "interface" : {
              "twice nat mapped destination network object" : [
                8
              ],
              "twice nat mapped source network object" : [
                8
              ]
            },
            "net1" : {
              "twice nat real source network object" : [
                8,
                9,
                11,
                12,
                13
              ]
            },
            "net2" : {
              "twice nat mapped source network object" : [
                9,
                11,
                12,
                13
              ],
              "twice nat real destination network object" : [
                8
              ]
            },
            "net3" : {
              "twice nat mapped destination network object" : [
                11
              ]
            },
            "net4" : {
              "twice nat real destination network object" : [
                11
              ]
            },
            "source-mapped" : {
              "object nat mapped source network object" : [
                18,
                22,
                23
              ]
            },
            "source-real" : {
              "object nat real source network object" : [
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23
              ]
            }
          }
        },
        "configs/asa_object_groups" : {
          "object network" : {
            "server02" : {
              "extended access-list network object" : [
                8
              ]
            }
          }
        },
        "configs/asa_ospf" : {
          "interface" : {
            "Ethernet0/0" : {
              "interface" : [
                5
              ]
            },
            "blah" : {
              "interface" : [
                7
              ]
            }
          }
        },
        "configs/bgp_address_family" : {
          "bgp peer-group" : {
            "as1" : {
              "bgp neighbor peer-group" : [
                13
              ]
            },
            "as2" : {
              "bgp neighbor peer-group" : [
                15
              ]
            }
          },
          "interface" : {
            "Loopback0" : {
              "update-source interface" : [
                14
              ]
            }
          },
          "route-map" : {
            "as1_to_as2" : {
              "bgp outbound route-map" : [
                26
              ]
            },
            "as1_to_as3" : {
              "bgp outbound route-map" : [
                28
              ]
            },
            "as2_to_as1" : {
              "bgp inbound route-map" : [
                27
              ]
            },
            "as3_to_as1" : {
              "bgp inbound route-map" : [
                29
              ]
            }
          },
          "undeclared bgp peer" : {
            "13.16.3.16" : {
              "bgp neighbor without remote-as" : [
                17
              ]
            }
          }
        },
        "configs/bgp_default_originate_policy" : {
          "route-policy" : {
            "EBGP_CUST_FULL_v4" : {
              "bgp neighbor route-policy out" : [
                13
              ]
            },
            "cust_v4_in" : {
              "bgp neighbor route-policy in" : [
                11
              ]
            }
          }
        },
        "configs/bgp_foundry" : {
          "route-map" : {
            "from_ucr" : {
              "bgp inbound route-map" : [
                10
              ]
            },
            "tag-bbone-prefixes" : {
              "bgp ipv4 network statement route-map" : [
                15
              ]
            }
          }
        },
        "configs/bgp_route_policy" : {
          "bgp neighbor-group" : {
            "EBGP-PEER-SVL-PNI" : {
              "bgp use neighbor-group" : [
                20
              ]
            }
          },
          "route-policy" : {
            "EBGP-PEER-AS11164-SVL-PNI-IN" : {
              "bgp neighbor route-policy in" : [
                24
              ]
            },
            "EBGP-PEER-AS11164-SVL-PNI-OUT" : {
              "bgp neighbor route-policy out" : [
                26
              ]
            }
          }
        },
        "configs/cadant_bgp" : {
          "interface" : {
            "Loopback15" : {
              "update-source interface" : [
                12,
                17
              ]
            }
          },
          "route-map" : {
            "blarp" : {
              "bgp outbound route-map" : [
                28
              ]
            },
            "blerp" : {
              "bgp outbound ipv6 route-map" : [
                35
              ]
            }
          },
          "undeclared bgp peer" : {
            "1.2.3.4" : {
              "bgp neighbor without remote-as" : [
                26,
                27,
                28,
                39
              ]
            },
            "dead:beef:0:0:0:0:0:1" : {
              "bgp neighbor without remote-as" : [
                33,
                34,
                35,
                40
              ]
            }
          }
        },
        "configs/cadant_cable" : {
          "docsis-policy-rule" : {
            "1" : {
              "cable load-balance docsis-policy rule" : [
                48
              ]
            }
          }
        },
        "configs/cadant_interface" : {
          "interface" : {
            "Ethernet6/0.0" : {
              "interface" : [
                104
              ]
            },
            "Ethernet6/0.48" : {
              "interface" : [
                124
              ]
            },
            "Ethernet6/1" : {
              "interface" : [
                129
              ]
            },
            "cable-downstream1/2" : {
              "interface" : [
                5
              ]
            },
            "cable-downstream1/2/3" : {
              "interface" : [
                8
              ]
            },
            "cable-downstream5/0/0" : {
              "interface" : [
                15
              ]
            },
            "cable-mac1" : {
              "interface" : [
                39,
                42
              ]
            },
            "cable-mac1.1" : {
              "interface" : [
                59
              ]
            },
            "cable-mac1.2" : {
              "interface" : [
                88
              ]
            },
            "cable-mac2" : {
              "interface" : [
                40
              ]
            },
            "cable-mac3" : {
              "interface" : [
                41
              ]
            },
            "cable-upstream1/0/0" : {
              "interface" : [
                21
              ]
            },
            "cable-upstream1/0/0.0" : {
              "interface" : [
                31
              ]
            },
            "cable-upstream1/0/10" : {
              "interface" : [
                29,
                30
              ]
            },
            "mgmt6/0" : {
              "interface" : [
                134
              ]
            }
          },
          "ipv4/6 acl" : {
            "fleep-acl" : {
              "interface ip inband access-group" : [
                130
              ]
            }
          },
          "ipv6 acl" : {
            "bar-filter" : {
              "interface ipv6 traffic-filter out" : [
                86
              ]
            },
            "foo-filter" : {
              "interface ipv6 traffic-filter in" : [
                85
              ]
            }
          }
        },
        "configs/cadant_isis" : {
          "ipv4/6 acl" : {
            "blah-acl-99" : {
              "router isis distribute-list acl" : [
                15
              ]
            },
            "blah-ipv6-access-list" : {
              "router isis distribute-list acl" : [
                20
              ]
            }
          }
        },
        "configs/cadant_misc" : {
          "interface" : {
            "Loopback0" : {
              "ntp source-interface" : [
                80
              ],
              "tacacs source-interface" : [
                94
              ]
            }
          }
        },
        "configs/cadant_rip" : {
          "ipv4/6 acl" : {
            "blah-std-acl" : {
              "router rip distribute-list" : [
                6
              ]
            }
          }
        },
        "configs/cadant_route_map" : {
          "ipv4 prefix-list" : {
            "bar-prefix-list" : {
              "route-map match ipv4 prefix-list" : [
                6
              ]
            }
          },
          "ipv6 prefix-list" : {
            "baz-ipv6-prefix-list" : {
              "route-map match ipv6 prefix-list" : [
                10
              ]
            }
          }
        },
        "configs/cadant_snmp" : {
          "interface" : {
            "Loopback0" : {
              "snmp-server source-interface" : [
                18
              ]
            }
          },
          "ipv4 acl" : {
            "52" : {
              "snmp server community ipv4 acl" : [
                7
              ]
            }
          }
        },
        "configs/cisco_additional_paths" : {
          "undeclared bgp peer" : {
            "1.2.3.4" : {
              "bgp neighbor without remote-as" : [
                8,
                9
              ]
            }
          }
        },
        "configs/cisco_bgp" : {
          "as-path access-list" : {
            "10" : {
              "bgp neighbor filter-list access-list" : [
                10
              ]
            },
            "20" : {
              "bgp neighbor filter-list access-list" : [
                14
              ]
            },
            "40" : {
              "bgp neighbor filter-list access-list" : [
                18
              ]
            }
          },
          "bgp template peer-policy" : {
            "p2" : {
              "inherited BGP peer-policy" : [
                35
              ]
            },
            "p3" : {
              "inherited BGP peer-policy" : [
                36
              ]
            }
          },
          "ipv4 acl" : {
            "5" : {
              "bgp neighbor distribute-list access-list in" : [
                40
              ],
              "bgp neighbor distribute-list access-list out" : [
                41
              ]
            }
          },
          "route-map" : {
            "AGGREGATE-MAP" : {
              "bgp vrf aggregate-address attribute-map" : [
                48
              ]
            },
            "CONNECTED-TO-BGP" : {
              "bgp redistribute connected route-map" : [
                49
              ]
            },
            "UNSUPP-MAP" : {
              "bgp unsuppress-map" : [
                39
              ]
            },
            "abcdefg" : {
              "bgp redistribute static route-map" : [
                32
              ]
            },
            "blah" : {
              "bgp redistribute rip route-map" : [
                33
              ]
            },
            "bloop" : {
              "bgp redistribute connected route-map" : [
                27
              ]
            },
            "ospfv3_map" : {
              "bgp redistribute ospfv3 route-map" : [
                44
              ]
            }
          },
          "undeclared bgp peer" : {
            "10.0.0.1" : {
              "bgp neighbor without remote-as" : [
                38,
                39,
                40,
                41
              ]
            },
            "10.20.2.2" : {
              "bgp neighbor without remote-as" : [
                10
              ]
            },
            "192.168.3.2" : {
              "bgp neighbor without remote-as" : [
                14
              ]
            },
            "192.168.4.2" : {
              "bgp neighbor without remote-as" : [
                18
              ]
            }
          }
        },
        "configs/cisco_cable" : {
          "cable service-class" : {
            "barfoo" : {
              "cable qos enforce-rule service-class" : [
                77
              ]
            },
            "foobar" : {
              "cable qos enforce-rule service-class" : [
                78
              ]
            }
          },
          "depi-class" : {
            "depiclass1" : {
              "depi-tunnel depi-class" : [
                138
              ]
            }
          },
          "depi-tunnel" : {
            "depitun0" : {
              "controller rf-channel depi-tunnel" : [
                124
              ]
            },
            "foo1" : {
              "depi-tunnel protect-tunnel" : [
                141
              ]
            }
          },
          "docsis-policy" : {
            "1" : {
              "cable load-balance docsis-group docsis-policy" : [
                30
              ]
            }
          },
          "docsis-policy-rule" : {
            "1" : {
              "cable load-balance docsis-policy rule" : [
                42
              ]
            }
          },
          "interface" : {
            "Cable1/2/3" : {
              "interface" : [
                143
              ]
            }
          },
          "l2tp-class" : {
            "l2tpclass1" : {
              "depi-tunnel l2tp-class" : [
                140
              ]
            }
          }
        },
        "configs/cisco_control_plane" : {
          "policy-map" : {
            "copp-policy" : {
              "control-plane service-policy input" : [
                5
              ]
            },
            "copp-policy-out" : {
              "control-plane service-policy output" : [
                6
              ]
            }
          }
        },
        "configs/cisco_crypto" : {
          "crypto ipsec transform-set" : {
            "ESP-3DES-MD5" : {
              "crypto dynamic-map transform-set" : [
                101,
                105,
                111
              ]
            },
            "ESP-3DES-MD5-trans" : {
              "crypto dynamic-map transform-set" : [
                101
              ]
            },
            "ESP-3DES-SHA" : {
              "crypto dynamic-map transform-set" : [
                101,
                105,
                111
              ]
            },
            "ESP-3DES-SHA-TRANS" : {
              "crypto dynamic-map transform-set" : [
                101
              ]
            },
            "ESP-AES-128-MD5" : {
              "crypto dynamic-map transform-set" : [
                105
              ]
            },
            "ESP-AES-128-SHA" : {
              "crypto dynamic-map transform-set" : [
                105
              ]
            },
            "ESP-AES-192-MD5" : {
              "crypto dynamic-map transform-set" : [
                105
              ]
            },
            "ESP-AES-192-SHA" : {
              "crypto dynamic-map transform-set" : [
                105
              ]
            },
            "ESP-AES-256-MD5" : {
              "crypto dynamic-map transform-set" : [
                105
              ]
            },
            "ESP-AES-256-SHA" : {
              "crypto dynamic-map transform-set" : [
                105
              ]
            },
            "ESP-DES-MD5" : {
              "crypto dynamic-map transform-set" : [
                105
              ]
            },
            "ESP-DES-SHA" : {
              "crypto dynamic-map transform-set" : [
                105
              ]
            },
            "bleep" : {
              "crypto map ipsec-isakmp transform-set" : [
                222
              ]
            },
            "hijklmnop" : {
              "ipsec profile set transform-set" : [
                159
              ]
            },
            "mytransformset" : {
              "crypto map ipsec-isakmp transform-set" : [
                241
              ]
            }
          },
          "crypto isakmp policy" : {
            "1" : {
              "isakmp policy" : [
                180
              ]
            }
          },
          "crypto isakmp profile" : {
            "myisakmpprofile" : {
              "crypto map ipsec-isakmp isakmp-profile" : [
                237
              ]
            },
            "myprofile" : {
              "isakmp profile" : [
                187
              ]
            },
            "someOtherprofile" : {
              "ipsec profile set isakmp-profile" : [
                162
              ]
            }
          },
          "crypto keyring" : {
            "VRF:MMS:RMT:UPM:1143" : {
              "isakmp profile keyring" : [
                188
              ]
            }
          },
          "crypto-dynamic-map-set" : {
            "bippety" : {
              "crypto map ipsec-isakmp crypto-dynamic-map-set" : [
                224
              ]
            },
            "mydefaultcryptomap" : {
              "crypto map ipsec-isakmp crypto-dynamic-map-set" : [
                215
              ]
            }
          },
          "ipv4/6 acl" : {
            "myvpnacl" : {
              "crypto map ipsec-isakmp acl" : [
                235
              ]
            },
            "someacl" : {
              "crypto map ipsec-isakmp acl" : [
                219
              ]
            }
          }
        },
        "configs/cisco_domain" : {
          "interface" : {
            "Loopback666" : {
              "domain lookup source-interface" : [
                5
              ]
            }
          }
        },
        "configs/cisco_eigrp" : {
          "interface" : {
            "Ethernet0" : {
              "eigrp address-family af-interface" : [
                123
              ],
              "interface" : [
                165
              ]
            },
            "FastEthernet0/1" : {
              "eigrp passive-interface" : [
                147
              ]
            },
            "GigabitEthernet1/5/3" : {
              "eigrp passive-interface" : [
                27
              ]
            },
            "GigabitEthernet2/5/3" : {
              "eigrp passive-interface" : [
                28
              ]
            },
            "Port-Channel34" : {
              "eigrp passive-interface" : [
                29
              ]
            },
            "Port-Channel35" : {
              "eigrp passive-interface" : [
                30
              ]
            }
          },
          "route-map" : {
            "BGP_TO_EIGRP" : {
              "eigrp redistribute bgp route-map" : [
                35
              ]
            },
            "CONNECTED_TO_EIGRP" : {
              "eigrp redistribute connected route-map" : [
                36
              ]
            },
            "EIGRP_TO_EIGRP" : {
              "eigrp redistribute eigrp route-map" : [
                37
              ]
            },
            "ISIS_TO_EIGRP" : {
              "eigrp redistribute isis route-map" : [
                38
              ]
            },
            "OSPF_TO_EIGRP" : {
              "eigrp redistribute ospf route-map" : [
                39
              ]
            },
            "RIP_TO_EIGRP" : {
              "eigrp redistribute rip route-map" : [
                40
              ]
            },
            "STATIC_TO_EIGRP" : {
              "eigrp redistribute static route-map" : [
                41
              ]
            }
          }
        },
        "configs/cisco_flow" : {
          "interface" : {
            "GigabitEthernet0/1" : {
              "interface" : [
                52
              ]
            }
          }
        },
        "configs/cisco_hsrp" : {
          "interface" : {
            "TenGigabitEthernet0/0/2/2" : {
              "interface" : [
                33
              ]
            }
          }
        },
        "configs/cisco_interface" : {
          "interface" : {
            "Async1" : {
              "interface" : [
                282
              ]
            },
            "Cable1/2/3:4" : {
              "interface" : [
                284
              ]
            },
            "Cellular0" : {
              "tunnel source" : [
                318
              ]
            },
            "Crypto-Engine1/2/3" : {
              "interface" : [
                286
              ]
            },
            "Dot11Radio0" : {
              "interface" : [
                288
              ]
            },
            "Ethernet0" : {
              "interface" : [
                7
              ],
              "tunnel source" : [
                319
              ]
            },
            "Ethernet1/11" : {
              "interface" : [
                290
              ]
            },
            "Ethernet1/12" : {
              "interface" : [
                346
              ]
            },
            "GigabitEthernet0/0" : {
              "interface" : [
                292
              ]
            },
            "Loopback0" : {
              "interface" : [
                298
              ]
            },
            "Loopback1" : {
              "vxlan source-interface" : [
                324
              ]
            },
            "Modular-Cable1/2/3:4" : {
              "interface" : [
                303
              ]
            },
            "Null0" : {
              "interface" : [
                305
              ]
            },
            "Tunnel0" : {
              "interface" : [
                309
              ]
            },
            "Vlan1" : {
              "interface" : [
                330
              ]
            },
            "Vlan1005" : {
              "interface" : [
                336
              ]
            },
            "Vlan1006" : {
              "interface" : [
                338
              ]
            },
            "Vlan111" : {
              "interface" : [
                321
              ]
            },
            "Vlan1234" : {
              "interface" : [
                340
              ]
            },
            "Vlan2" : {
              "interface" : [
                332
              ]
            },
            "Vlan3" : {
              "interface" : [
                334
              ]
            },
            "Vlan4094" : {
              "interface" : [
                342
              ]
            },
            "Wideband-Cable1/2/3:4" : {
              "interface" : [
                344
              ]
            },
            "inside" : {
              "interface" : [
                293
              ]
            },
            "tunnel-ip6" : {
              "interface" : [
                307
              ]
            }
          },
          "ipv4 acl" : {
            "167" : {
              "interface ip verify access-list" : [
                130
              ]
            },
            "310-systems" : {
              "interface outgoing ip access-list" : [
                138
              ]
            },
            "abc" : {
              "ip nat source dynamic access-list" : [
                93
              ]
            },
            "ag1" : {
              "interface incoming ip access-list" : [
                56
              ]
            },
            "ag2" : {
              "interface outgoing ip access-list" : [
                57
              ]
            },
            "def" : {
              "ip nat source dynamic access-list" : [
                92
              ]
            },
            "mynatacl" : {
              "ip nat destination acl" : [
                89
              ]
            }
          },
          "ipv4/6 acl" : {
            "1" : {
              "interface igmp access-group acl" : [
                78
              ]
            },
            "hpaccesslist" : {
              "interface igmp host-proxy access-list" : [
                80
              ]
            }
          },
          "nat pool" : {
            "beeble" : {
              "ip nat source pool" : [
                93
              ]
            }
          },
          "route-map" : {
            "SITEMAP" : {
              "interface ip vrf sitemap" : [
                136
              ]
            },
            "eigrp-leak-map" : {
              "interface summary-address eigrp leak-map" : [
                126
              ]
            }
          },
          "vxlan" : {
            "Vxlan1" : {
              "vxlan" : [
                323
              ]
            }
          },
          "zone" : {
            "t1" : {
              "interface zone-member" : [
                279
              ]
            }
          },
          "zone security" : {
            "z1" : {
              "interface zone-member security" : [
                280
              ]
            }
          }
        },
        "configs/cisco_ios_neighbor" : {
          "bgp peer-group" : {
            "LEAF" : {
              "bgp listen range peer-group" : [
                8
              ]
            }
          }
        },
        "configs/cisco_ip" : {
          "ipv4/6 acl" : {
            "wccp-cachelist" : {
              "ip wccp group-list" : [
                11
              ]
            },
            "wccp-redir" : {
              "ip wccp redirect-list" : [
                11
              ]
            }
          }
        },
        "configs/cisco_ip_route" : {
          "interface" : {
            "Dialer1" : {
              "ip route next-hop interface" : [
                14
              ]
            },
            "Dialer2" : {
              "ip route next-hop interface" : [
                15
              ]
            },
            "GigabitEthernet3/0/0.212" : {
              "ip route next-hop interface" : [
                6
              ]
            },
            "Loopback66" : {
              "ip route next-hop interface" : [
                12
              ]
            },
            "Loopback99" : {
              "ip route next-hop interface" : [
                13
              ]
            },
            "POS5/3:10" : {
              "ip route next-hop interface" : [
                10
              ]
            },
            "Serial5/0:2" : {
              "ip route next-hop interface" : [
                7
              ]
            },
            "Serial5/1:5" : {
              "ip route next-hop interface" : [
                9
              ]
            }
          }
        },
        "configs/cisco_isis" : {
          "interface" : {
            "GigabitEthernet0/0/1" : {
              "interface" : [
                10
              ]
            },
            "GigabitEthernet0/1" : {
              "interface" : [
                4
              ]
            },
            "HundredGigabitEthernet0/0/0/0.2302" : {
              "interface" : [
                8
              ]
            },
            "Serial4/0" : {
              "interface" : [
                6
              ]
            }
          }
        },
        "configs/cisco_line" : {
          "ipv4 acl" : {
            "40" : {
              "line access-class list" : [
                6,
                26
              ]
            },
            "99" : {
              "line access-class list" : [
                56
              ]
            },
            "vty-acl" : {
              "line access-class list" : [
                22
              ]
            }
          },
          "ipv6 acl" : {
            "ipv6-vty-acl" : {
              "line access-class ipv6 list" : [
                61
              ]
            }
          }
        },
        "configs/cisco_misc" : {
          "class-map" : {
            "ICMP-cmap" : {
              "policy-map class" : [
                206
              ]
            },
            "TCP-cmap" : {
              "policy-map class" : [
                208
              ]
            },
            "class-default" : {
              "policy-map class" : [
                210
              ]
            },
            "inspection_default" : {
              "policy-map class" : [
                195
              ]
            }
          },
          "ipv4/6 acl" : {
            "cops-acl" : {
              "cops listener access-list" : [
                42
              ]
            }
          },
          "policy-map" : {
            "global_policy" : {
              "service-policy global" : [
                237
              ]
            }
          }
        },
        "configs/cisco_nomaskreply" : {
          "interface" : {
            "GigabitEthernet1" : {
              "interface" : [
                4
              ]
            }
          }
        },
        "configs/cisco_ntp" : {
          "interface" : {
            "Loopback0" : {
              "ntp source-interface" : [
                7
              ]
            }
          },
          "ipv4 acl" : {
            "ntp-peer-group" : {
              "ntp access-group" : [
                4
              ]
            }
          }
        },
        "configs/cisco_nxos" : {
          "acl" : {
            "copp-system-acl-icmp" : {
              "class-map access-group" : [
                9
              ]
            }
          },
          "interface" : {
            "Ethernet2/1" : {
              "interface" : [
                11
              ]
            }
          }
        },
        "configs/cisco_nxos_bgp" : {
          "route-map" : {
            "AGG6_MAP" : {
              "bgp address-family aggregate-address advertise-map" : [
                21
              ]
            },
            "MATCH_ASN" : {
              "bgp neighbor remote-as route-map" : [
                10
              ]
            }
          }
        },
        "configs/cisco_opsfv3" : {
          "interface" : {
            "Ethernet0/0" : {
              "interface" : [
                4
              ]
            }
          }
        },
        "configs/cisco_ospf" : {
          "interface" : {
            "Ethernet0/0" : {
              "interface" : [
                7,
                12
              ],
              "router ospf distribute-list in" : [
                53
              ]
            },
            "Ethernet1/0" : {
              "interface" : [
                17
              ]
            },
            "Loopback0" : {
              "interface" : [
                4
              ]
            }
          },
          "ipv4 prefix-list" : {
            "INFILTER" : {
              "ospf area filter-list" : [
                81
              ]
            },
            "OUTFILTER" : {
              "ospf area filter-list" : [
                82
              ]
            },
            "filterName" : {
              "ospf area filter-list" : [
                26,
                27
              ]
            },
            "plin" : {
              "router ospf distribute-list prefix in" : [
                55
              ]
            },
            "plout" : {
              "router ospf distribute-list prefix out" : [
                56
              ]
            }
          },
          "ipv4/6 acl" : {
            "aclin" : {
              "router ospf distribute-list in" : [
                52,
                53
              ]
            },
            "aclout" : {
              "router ospf distribute-list out" : [
                54
              ]
            }
          },
          "route-map" : {
            "DEFAULT_ORIGINATE_OSPF" : {
              "ospf default-originate route-map" : [
                47
              ]
            },
            "DIRECT_OSPF" : {
              "ospf redistribute connected route-map" : [
                67
              ]
            },
            "eigrp-ospf-route-map" : {
              "ospf redistribute eigrp route-map" : [
                68
              ]
            },
            "rmin" : {
              "router ospf distribute-list route-map in" : [
                57
              ]
            },
            "rmout" : {
              "router ospf distribute-list route-map out" : [
                58
              ]
            }
          }
        },
        "configs/cisco_ospf_ipv6" : {
          "interface" : {
            "Ethernet0/0" : {
              "interface" : [
                4
              ],
              "ipv6 router ospf distribute-list prefix-list out" : [
                15
              ]
            }
          },
          "ipv6 prefix-list" : {
            "SWITCHLAN" : {
              "ipv6 router ospf distribute-list prefix-list in" : [
                14
              ]
            },
            "SWITCHLAN-OUT" : {
              "ipv6 router ospf distribute-list prefix-list out" : [
                15
              ]
            }
          }
        },
        "configs/cisco_ospf_multi_process" : {
          "interface" : {
            "Ethernet0/0" : {
              "interface" : [
                4
              ]
            },
            "Ethernet1/0" : {
              "interface" : [
                8
              ]
            },
            "Loopback0" : {
              "interface" : [
                12
              ]
            }
          },
          "ipv4 prefix-list" : {
            "filterName" : {
              "ospf area filter-list" : [
                22,
                23
              ]
            }
          }
        },
        "configs/cisco_pim" : {
          "ipv4 acl" : {
            "foobar" : {
              "pim rp-address" : [
                7
              ]
            },
            "foobarmap" : {
              "pim rp-address" : [
                8
              ]
            }
          }
        },
        "configs/cisco_qos" : {
          "acl" : {
            "boop" : {
              "class-map access-group" : [
                20
              ]
            },
            "boop2" : {
              "class-map access-list" : [
                21
              ]
            }
          },
          "class-map" : {
            "MY_CLASS_1" : {
              "policy-map event class" : [
                129
              ]
            },
            "MY_CLASS_2" : {
              "policy-map event class" : [
                131
              ]
            },
            "bippetyboo-drop" : {
              "policy-map class" : [
                50
              ]
            },
            "bippetyboo-ndrop" : {
              "policy-map class" : [
                66
              ]
            },
            "bippetyboo-ndrop-fcoe" : {
              "policy-map class" : [
                62
              ]
            },
            "bleefee" : {
              "policy-map class" : [
                102
              ]
            },
            "bleefee2" : {
              "policy-map class" : [
                107
              ]
            },
            "blerf" : {
              "policy-map class" : [
                98
              ]
            },
            "c-bleeb-drop" : {
              "policy-map class" : [
                109
              ]
            },
            "c-bleeb-ndrop-fcoe" : {
              "policy-map class" : [
                114
              ]
            },
            "c-foob-drop" : {
              "policy-map class" : [
                81
              ]
            },
            "c-foob-ndrop" : {
              "policy-map class" : [
                93
              ]
            },
            "c-foob-ndrop-fcoe" : {
              "policy-map class" : [
                89
              ]
            },
            "fffoooddd" : {
              "policy-map class" : [
                72
              ]
            },
            "floop" : {
              "policy-map class" : [
                119
              ]
            }
          },
          "class-map type inspect" : {
            "cinspect" : {
              "policy-map type inspect class type inspect" : [
                43
              ]
            }
          },
          "policy-map" : {
            "prioritize_backbone" : {
              "policy-map class service-policy" : [
                74
              ]
            }
          },
          "service-template" : {
            "DEF" : {
              "class-map activate-service-template" : [
                9
              ]
            },
            "GHI" : {
              "class-map service-template" : [
                10
              ]
            },
            "my_TEMPLATE_NAME" : {
              "policy-map event class activate" : [
                130
              ]
            }
          }
        },
        "configs/cisco_rip" : {
          "ipv4/6 acl" : {
            "some-ACL" : {
              "router rip distribute-list" : [
                10,
                11,
                12,
                13
              ]
            }
          }
        },
        "configs/cisco_route_map" : {
          "as-path access-list" : {
            "AS_PATH_ACL1" : {
              "route-map match as-path access-list" : [
                51
              ]
            },
            "AS_PATH_ACL2" : {
              "route-map match as-path access-list" : [
                54
              ]
            },
            "AS_PATH_UNDEF" : {
              "route-map match as-path access-list" : [
                57
              ]
            }
          },
          "ipv4 acl" : {
            "test" : {
              "route-map match ipv4 access-list" : [
                26
              ]
            }
          },
          "ipv4 prefix-list" : {
            "bobble" : {
              "route-map match ipv4 prefix-list" : [
                36
              ]
            },
            "hpr-connector-subnets" : {
              "route-map match ipv4 prefix-list" : [
                10
              ]
            }
          }
        },
        "configs/cisco_snmp" : {
          "interface" : {
            "Loopback0" : {
              "snmp-server source-interface" : [
                87
              ]
            },
            "Vlan1" : {
              "snmp-server source-interface" : [
                89
              ]
            },
            "mgmt0" : {
              "snmp-server source-interface" : [
                88
              ]
            }
          },
          "ipv4 acl" : {
            "1" : {
              "snmp server community ipv4 acl" : [
                9
              ]
            },
            "2" : {
              "snmp server community ipv4 acl" : [
                8,
                10
              ]
            },
            "customer-snmp" : {
              "snmp server community ipv4 acl" : [
                14
              ]
            },
            "dummyacl" : {
              "snmp server community ipv4 acl" : [
                13
              ]
            },
            "snmp-acl" : {
              "snmp server community ipv4 acl" : [
                7,
                11
              ]
            },
            "snmp-arpa-acl" : {
              "snmp server community ipv4 acl" : [
                12
              ]
            },
            "to-VTY" : {
              "snmp server community ipv4 acl" : [
                16
              ]
            }
          },
          "ipv4/6 acl" : {
            "8" : {
              "snmp server file transfer acl" : [
                67
              ],
              "snmp server tftp-server list" : [
                92
              ]
            },
            "Loopback0" : {
              "snmp-server trap-source" : [
                94,
                95
              ]
            }
          },
          "ipv6 acl" : {
            "dummyacl" : {
              "snmp server community ipv6 acl" : [
                15
              ]
            },
            "to-VTY" : {
              "snmp server community ipv6 acl" : [
                16
              ]
            }
          }
        },
        "configs/cisco_system" : {
          "policy-map" : {
            "POLICY" : {
              "system service-policy" : [
                21
              ]
            }
          }
        },
        "configs/cisco_tacacs" : {
          "interface" : {
            "Loopback0" : {
              "ip tacacs source-interface" : [
                6,
                7
              ],
              "tacacs source-interface" : [
                26
              ]
            }
          }
        },
        "configs/cisco_track" : {
          "interface" : {
            "GigabitEthernet0/0" : {
              "track interface" : [
                4
              ]
            },
            "GigabitEthernet0/1" : {
              "track interface" : [
                5
              ]
            }
          }
        },
        "configs/cisco_vrrp" : {
          "interface" : {
            "Ethernet0" : {
              "interface" : [
                4
              ]
            },
            "GigabitEthernet0/0/0/19" : {
              "router vrrp interface" : [
                16
              ]
            },
            "ManagementEthernet0/RSP0/CPU0/0" : {
              "router vrrp interface" : [
                26
              ]
            },
            "ManagementEthernet0/RSP1/CPU0/0" : {
              "router vrrp interface" : [
                28
              ]
            }
          }
        },
        "configs/cisco_zone" : {
          "policy-map type inspect" : {
            "p1" : {
              "zone-pair service-policy type inspect" : [
                5
              ]
            }
          },
          "zone security" : {
            "z1" : {
              "zone-pair security source" : [
                4
              ]
            },
            "z2" : {
              "zone-pair security destination" : [
                4
              ]
            }
          }
        },
        "configs/colon_in_vrf" : {
          "route-map" : {
            "RMT_PBI" : {
              "bgp redistribute connected route-map" : [
                6
              ]
            }
          }
        },
        "configs/community_list_named" : {
          "community-list" : {
            "COMM_LIST_NAME" : {
              "route-map set community additive" : [
                10
              ]
            }
          },
          "ipv4 prefix-list" : {
            "PFX_LIST" : {
              "route-map match ipv4 prefix-list" : [
                9
              ]
            }
          }
        },
        "configs/community_name_numbers" : {
          "community-list" : {
            "9999-RRR" : {
              "route-map match community-list" : [
                7
              ]
            }
          }
        },
        "configs/community_name_numbers_dos" : {
          "community-list" : {
            "9999-RRR" : {
              "route-map match community-list" : [
                7
              ]
            }
          }
        },
        "configs/cumulus_nclu" : {
          "abstract interface" : {
            "lo" : {
              "route-map match interface" : [
                59
              ]
            },
            "swp1" : {
              "bgp neighbor interface" : [
                12
              ]
            }
          },
          "bond" : {
            "bond1" : {
              "bond self-reference" : [
                19
              ]
            },
            "bond2" : {
              "bond self-reference" : [
                21
              ]
            }
          },
          "interface" : {
            "bond1.4094" : {
              "interface self-reference" : [
                34,
                35,
                36,
                37,
                38
              ]
            },
            "eth0" : {
              "interface self-reference" : [
                39
              ]
            },
            "swp1" : {
              "bgp neighbor interface" : [
                12
              ],
              "bond slave" : [
                19
              ],
              "interface self-reference" : [
                40,
                43
              ]
            },
            "swp2" : {
              "bond slave" : [
                19
              ],
              "interface self-reference" : [
                41,
                42,
                43
              ]
            },
            "swp3" : {
              "bond slave" : [
                19
              ],
              "interface self-reference" : [
                43
              ]
            },
            "swp4" : {
              "bond slave" : [
                19
              ]
            },
            "swp5" : {
              "bond slave" : [
                19
              ]
            },
            "swp6" : {
              "bond slave" : [
                19
              ]
            },
            "swp7" : {
              "bond slave" : [
                19
              ]
            },
            "swp8" : {
              "bond slave" : [
                19
              ]
            }
          },
          "loopback" : {
            "lo" : {
              "loopback self-reference" : [
                44,
                45,
                46
              ]
            }
          },
          "route-map" : {
            "rm1" : {
              "bgp ipv4 unicast redistribute connected route-map" : [
                7
              ]
            }
          },
          "vlan" : {
            "vlan4" : {
              "vlan self-reference" : [
                65,
                66,
                67,
                68,
                69
              ]
            }
          },
          "vrf" : {
            "mgmt" : {
              "interface clag backup-ip vrf" : [
                34
              ],
              "interface vrf" : [
                39
              ],
              "vrf self-reference" : [
                70,
                71,
                73
              ]
            },
            "vrf1" : {
              "bgp vrf" : [
                14,
                15,
                16,
                17,
                18
              ],
              "vlan vrf" : [
                69
              ],
              "vrf self-reference" : [
                72,
                73,
                87
              ]
            }
          },
          "vxlan" : {
            "vni10001" : {
              "vxlan self-reference" : [
                75
              ]
            }
          }
        },
        "configs/cumulus_nclu_invalid_bonds" : {
          "interface" : {
            "swp1" : {
              "bond slave" : [
                6
              ]
            },
            "swp2" : {
              "bond slave" : [
                9
              ]
            },
            "swp3" : {
              "bond slave" : [
                11
              ]
            },
            "swp5" : {
              "bond slave" : [
                12
              ]
            },
            "swp6" : {
              "bond slave" : [
                14
              ]
            },
            "swp7" : {
              "bond slave" : [
                16
              ]
            },
            "swp8" : {
              "bond slave" : [
                19
              ]
            }
          },
          "vrf" : {
            "vrf1" : {
              "vrf self-reference" : [
                8
              ]
            }
          },
          "vxlan" : {
            "v1" : {
              "vxlan self-reference" : [
                18
              ]
            }
          }
        },
        "configs/cumulus_nclu_invalid_interfaces" : {
          "bond" : {
            "bond1" : {
              "bond self-reference" : [
                6
              ]
            }
          },
          "vrf" : {
            "vrf1" : {
              "vrf self-reference" : [
                16
              ]
            }
          },
          "vxlan" : {
            "v1" : {
              "vxlan self-reference" : [
                19
              ]
            }
          }
        },
        "configs/cumulus_nclu_invalid_vrfs" : {
          "bond" : {
            "bond1" : {
              "bond self-reference" : [
                8
              ]
            }
          },
          "interface" : {
            "swp1" : {
              "bond slave" : [
                8
              ]
            }
          },
          "vxlan" : {
            "vx1" : {
              "vxlan self-reference" : [
                16
              ]
            }
          }
        },
        "configs/cumulus_nclu_invalid_vxlans" : {
          "bond" : {
            "bond1" : {
              "bond self-reference" : [
                8
              ]
            }
          },
          "interface" : {
            "swp0" : {
              "bond slave" : [
                8
              ]
            }
          },
          "vrf" : {
            "vrf1" : {
              "vrf self-reference" : [
                11
              ]
            }
          }
        },
        "configs/eos_mlag" : {
          "interface" : {
            "Port-Channel1" : {
              "interface" : [
                9
              ],
              "mlag configuration peer-link" : [
                21
              ]
            },
            "Port-Channel2" : {
              "interface" : [
                13
              ]
            },
            "Vlan4094" : {
              "mlag configuration local-interface" : [
                19
              ]
            }
          }
        },
        "configs/eos_trunk_group" : {
          "interface" : {
            "Port-Channel1" : {
              "interface" : [
                34
              ]
            }
          }
        },
        "configs/f5_bigip_imish_malformed" : {
          "bgp neighbor" : {
            "2::2" : {
              "bgp neighbor self-reference" : [
                20
              ]
            },
            "3.3.3.3" : {
              "bgp neighbor self-reference" : [
                17
              ]
            }
          },
          "bgp process" : {
            "1" : {
              "bgp process self-reference" : [
                15
              ]
            }
          },
          "peer-group" : {
            "undefined-peer-group" : {
              "neighbor peer-group" : [
                18
              ]
            }
          },
          "route-map" : {
            "rm1" : {
              "bgp neighbor address-family ipv6 route-map out" : [
                21
              ],
              "neighbor peer-group route-map out" : [
                22
              ]
            }
          }
        },
        "configs/f5_bigip_structured_ltm" : {
          "monitor" : {
            "/Common/SOME_MONITOR" : {
              "pool monitor" : [
                33
              ]
            }
          },
          "node" : {
            "/Common/bar" : {
              "pool member" : [
                28
              ]
            },
            "/Common/foo" : {
              "pool member" : [
                23
              ]
            }
          },
          "persistence" : {
            "/Common/SOME_PROFILE" : {
              "virtual persist persistence" : [
                97
              ]
            }
          },
          "pool" : {
            "/Common/SOME_POOL" : {
              "virtual pool" : [
                101
              ]
            }
          },
          "profile" : {
            "/Common/P1" : {
              "virtual profile" : [
                103
              ]
            },
            "/Common/P2" : {
              "virtual profile" : [
                104
              ]
            },
            "/Common/P3" : {
              "virtual profile" : [
                105
              ]
            }
          },
          "profile server-ssl" : {
            "/Common/SOME_SSL_PROFILE" : {
              "monitor https ssl-profile" : [
                166
              ]
            }
          },
          "rule" : {
            "/Common/SOME_RULE1" : {
              "virtual rules rule" : [
                109
              ]
            }
          },
          "snat" : {
            "/Common/SOME_SNAT" : {
              "snat self-reference" : [
                67
              ]
            }
          },
          "snat-translation" : {
            "/Common/192.0.2.5" : {
              "snatpool members member" : [
                85
              ]
            },
            "/Common/192.0.2.6" : {
              "snatpool members member" : [
                86
              ]
            }
          },
          "snatpool" : {
            "/Common/SOME_SNATPOOL" : {
              "snat snatpool" : [
                71
              ],
              "virtual source-address-translation pool" : [
                113
              ]
            }
          },
          "virtual" : {
            "/Common/SOME_VIRTUAL" : {
              "virtual self-reference" : [
                89
              ]
            }
          },
          "virtual-address" : {
            "/Common/192.0.2.7" : {
              "virtual destination" : [
                90
              ]
            }
          },
          "vlan" : {
            "/Common/MY_VLAN" : {
              "virtual vlans vlan" : [
                120
              ]
            },
            "/Common/SOME_VLAN" : {
              "snat vlans vlan" : [
                74
              ]
            }
          }
        },
        "configs/f5_bigip_structured_malformed" : {
          "route" : {
            "/Common/bad_gw" : {
              "route self-reference" : [
                15
              ]
            },
            "/Common/missing_gw" : {
              "route self-reference" : [
                11
              ]
            },
            "/Common/missing_network" : {
              "route self-reference" : [
                30
              ]
            },
            "/Common/mixed_protocols1" : {
              "route self-reference" : [
                20
              ]
            },
            "/Common/mixed_protocols2" : {
              "route self-reference" : [
                25
              ]
            }
          },
          "self" : {
            "/Common/self1" : {
              "self self-reference" : [
                7
              ]
            }
          }
        },
        "configs/f5_bigip_structured_net" : {
          "interface" : {
            "1.0" : {
              "interface self-reference" : [
                8
              ]
            },
            "2.0" : {
              "trunk interfaces interface" : [
                66
              ]
            },
            "3.0" : {
              "trunk interfaces interface" : [
                67
              ]
            }
          },
          "route" : {
            "/Common/route1" : {
              "route self-reference" : [
                33
              ]
            }
          },
          "self" : {
            "/Common/MYSELF" : {
              "self self-reference" : [
                27
              ]
            },
            "/Common/MYSELF6" : {
              "self self-reference" : [
                37
              ]
            }
          },
          "vlan" : {
            "/Common/MYVLAN" : {
              "self vlan" : [
                31,
                39
              ]
            }
          },
          "vlan member interface" : {
            "1.0" : {
              "vlan interface" : [
                77
              ]
            }
          }
        },
        "configs/f5_bigip_structured_net_routing_bgp" : {
          "bgp neighbor" : {
            "192.0.2.1" : {
              "bgp neighbor self-reference" : [
                42
              ]
            },
            "dead:beef::1" : {
              "bgp neighbor self-reference" : [
                20
              ]
            }
          },
          "bgp process" : {
            "/Common/my_bgp" : {
              "bgp process self-reference" : [
                7
              ]
            }
          },
          "route-map" : {
            "/Common/MY_IPV4_OUT" : {
              "bgp neighbor address-family ipv6 route-map out" : [
                52
              ]
            },
            "/Common/MY_IPV6_OUT" : {
              "bgp neighbor address-family ipv6 route-map out" : [
                33
              ]
            },
            "/Common/MY_KERNEL_OUT" : {
              "bgp address-family redistribute kernel route-map" : [
                12
              ]
            }
          },
          "vlan" : {
            "SOME_VLAN" : {
              "bgp neighbor update-source" : [
                40,
                63
              ]
            }
          }
        },
        "configs/f5_bigip_structured_net_routing_route_map" : {
          "prefix-list" : {
            "/Common/MY_PREFIX_LIST" : {
              "route-map match ipv4 address prefix-list" : [
                14
              ]
            },
            "/Common/MY_PREFIX_LIST2" : {
              "route-map match ipv4 address prefix-list" : [
                29
              ]
            }
          }
        },
        "configs/f5_bigip_structured_with_imish" : {
          "access-list" : {
            "acl1" : {
              "route-map match ip address" : [
                52
              ]
            }
          },
          "bgp neighbor" : {
            "10.0.0.1" : {
              "bgp neighbor self-reference" : [
                41
              ]
            },
            "1:2:3:4:5:6:7::" : {
              "bgp neighbor self-reference" : [
                36
              ]
            },
            "1:2:3:4:5:6:9.8.7.6" : {
              "bgp neighbor self-reference" : [
                40
              ]
            },
            "1:2:3::" : {
              "bgp neighbor self-reference" : [
                34
              ]
            },
            "1:2:3::4:5:6" : {
              "bgp neighbor self-reference" : [
                35
              ]
            },
            "1:2::3:4.5.6.7" : {
              "bgp neighbor self-reference" : [
                39
              ]
            },
            "::1:2:3:4:5:6" : {
              "bgp neighbor self-reference" : [
                37
              ]
            },
            "::1:2:3:4:5:6:7" : {
              "bgp neighbor self-reference" : [
                38
              ]
            }
          },
          "bgp process" : {
            "65500" : {
              "bgp process self-reference" : [
                23
              ]
            }
          },
          "peer-group" : {
            "pg1" : {
              "neighbor peer-group" : [
                44
              ]
            }
          },
          "prefix-list" : {
            "pl1" : {
              "route-map match ipv4 address prefix-list" : [
                53
              ]
            }
          },
          "route-map" : {
            "rm1" : {
              "router bgp redistribute kernel route-map" : [
                47
              ]
            }
          }
        },
        "configs/foundry_bgp" : {
          "interface" : {
            "Loopback1" : {
              "update-source interface" : [
                16
              ]
            }
          }
        },
        "configs/foundry_interface" : {
          "interface" : {
            "Ethernet1/15" : {
              "interface" : [
                5
              ]
            }
          }
        },
        "configs/foundry_misc" : {
          "interface" : {
            "Ethernet13/10" : {
              "ip route next-hop interface" : [
                39
              ]
            }
          },
          "ipv4 acl" : {
            "blib" : {
              "ssh ipv4 access-list" : [
                31
              ]
            }
          },
          "ipv6 acl" : {
            "blob" : {
              "ssh ipv6 access-list" : [
                32
              ]
            }
          }
        },
        "configs/gh-2658-juniper-vrf-import-export.cfg" : {
          "bgp group" : {
            "overlay" : {
              "bgp group neighbor" : [
                149,
                150,
                151,
                152
              ]
            },
            "underlay" : {
              "bgp group neighbor" : [
                126,
                129,
                132
              ]
            }
          },
          "interface" : {
            "fxp0" : {
              "interface" : [
                75
              ]
            },
            "fxp0.0" : {
              "interface" : [
                76
              ]
            },
            "irb" : {
              "interface" : [
                82
              ]
            },
            "irb.100" : {
              "interface" : [
                83
              ]
            },
            "lo0" : {
              "interface" : [
                91
              ]
            },
            "lo0.0" : {
              "interface" : [
                92
              ],
              "policy-statement from interface" : [
                163
              ],
              "routing-instances vtep-source-interface" : [
                201
              ]
            },
            "lo0.1" : {
              "interface" : [
                97
              ],
              "routing-instance interface" : [
                198
              ]
            },
            "xe-0/0/2" : {
              "interface" : [
                53
              ]
            },
            "xe-0/0/2.0" : {
              "interface" : [
                54
              ]
            },
            "xe-0/0/3" : {
              "interface" : [
                60
              ]
            },
            "xe-0/0/3.0" : {
              "interface" : [
                61
              ]
            },
            "xe-0/0/4" : {
              "interface" : [
                67
              ]
            },
            "xe-0/0/4.0" : {
              "interface" : [
                69
              ]
            }
          },
          "policy-statement" : {
            "export-loopback" : {
              "bgp export policy-statement" : [
                120
              ]
            },
            "fabric" : {
              "routing-instance vrf-import" : [
                203
              ]
            },
            "lbpp" : {
              "forwarding-table export policy-statement" : [
                112
              ]
            }
          }
        },
        "configs/host2" : {
          "interface" : {
            "Ethernet0" : {
              "interface" : [
                4
              ]
            },
            "Ethernet1" : {
              "interface" : [
                7
              ]
            }
          }
        },
        "configs/interface_exit" : {
          "interface" : {
            "Vlan303" : {
              "interface" : [
                17
              ]
            },
            "Vlan803" : {
              "interface" : [
                4
              ]
            }
          }
        },
        "configs/interface_name" : {
          "interface" : {
            "FastEthernet12/13" : {
              "interface" : [
                3
              ]
            },
            "HundredGigabitEthernet0/6/0/8" : {
              "interface" : [
                10
              ]
            },
            "Port-Channel1" : {
              "interface" : [
                7
              ]
            },
            "Vlan100" : {
              "interface" : [
                5
              ]
            }
          }
        },
        "configs/interface_sdr" : {
          "interface" : {
            "Loopback0" : {
              "interface" : [
                4
              ]
            }
          }
        },
        "configs/ios_bgp" : {
          "ipv6 prefix-list" : {
            "VPNV6_PL" : {
              "bgp inbound ipv6 prefix-list" : [
                11
              ]
            }
          },
          "route-map" : {
            "ADVERTISE_MAP" : {
              "bgp address-family aggregate-address advertise-map" : [
                5
              ]
            },
            "EXIST_MAP" : {
              "bgp neighbor advertise-map exist-map" : [
                5
              ]
            }
          },
          "undeclared bgp peer" : {
            "1.2.3.4" : {
              "bgp neighbor without remote-as" : [
                5
              ]
            }
          },
          "undeclared bgp peer-group" : {
            "UNDEFINED_PEER_GROUP" : {
              "bgp peer-group referenced before defined" : [
                8
              ]
            }
          }
        },
        "configs/ios_interface" : {
          "interface" : {
            "GigabitEthernet1/0/1" : {
              "interface" : [
                4
              ]
            }
          },
          "policy-map" : {
            "FOOBAR" : {
              "interface service-policy" : [
                5
              ]
            }
          }
        },
        "configs/ios_standby" : {
          "interface" : {
            "Vlan1000" : {
              "interface" : [
                5
              ]
            }
          },
          "track" : {
            "1" : {
              "interface standby track" : [
                12
              ]
            }
          }
        },
        "configs/ios_xr_bgp" : {
          "route-policy" : {
            "ADDITIONAL_PATHS_POLICY" : {
              "bgp additional-paths selection route-policy" : [
                8
              ]
            },
            "AGGREGATE_POLICY" : {
              "aggregate-address route-policy" : [
                10
              ]
            }
          }
        },
        "configs/ios_xr_bgp_neighbor_group" : {
          "bgp neighbor-group" : {
            "BGPMonitor" : {
              "bgp use neighbor-group" : [
                33
              ]
            },
            "foobar-iBGP_border_ipv4" : {
              "bgp use neighbor-group" : [
                87
              ]
            },
            "foobar-iBGP_ipv4" : {
              "bgp use neighbor-group" : [
                78,
                83
              ]
            }
          },
          "bgp session-group" : {
            "CIAO" : {
              "bgp use session-group" : [
                94
              ]
            },
            "bippety" : {
              "bgp use session-group" : [
                34
              ]
            },
            "blabber" : {
              "bgp use session-group" : [
                17
              ]
            },
            "excellect-group" : {
              "bgp use session-group" : [
                88
              ]
            }
          },
          "interface" : {
            "Loopback0" : {
              "update-source interface" : [
                22,
                36,
                48,
                58,
                69
              ]
            }
          },
          "route-policy" : {
            "advertise_fooey_dc_and_isp_routes_ipv4" : {
              "bgp neighbor route-policy out" : [
                25,
                29
              ]
            },
            "advertise_fooey_routes_only" : {
              "bgp neighbor route-policy out" : [
                39
              ]
            },
            "deny_bgp_routes" : {
              "bgp neighbor route-policy in" : [
                24,
                28
              ]
            },
            "deny_default_network_ipv4" : {
              "bgp neighbor route-policy out" : [
                60
              ]
            }
          }
        },
        "configs/ios_xr_multicast" : {
          "ipv4 acl" : {
            "MSDP_filter" : {
              "msdp peer sa-list" : [
                29,
                30,
                46,
                47
              ]
            }
          }
        },
        "configs/ios_xr_multipart" : {
          "ipv4 acl" : {
            "GNS-VTY-ACCESS" : {
              "ssh ipv4 access-list" : [
                31
              ]
            }
          }
        },
        "configs/ios_xr_ospf" : {
          "interface" : {
            "Bundle-Ethernet101" : {
              "router ospf area interface" : [
                17
              ]
            },
            "Bundle-Ethernet103" : {
              "router ospf area interface" : [
                23
              ]
            },
            "Bundle-Ethernet201" : {
              "router ospf area interface" : [
                27
              ]
            },
            "HundredGigabitEthernet0/2/0/0.292" : {
              "router ospf area interface" : [
                41
              ]
            },
            "HundredGigabitEthernet0/2/0/3" : {
              "router ospf area interface" : [
                43
              ]
            },
            "Loopback0" : {
              "router ospf area interface" : [
                32
              ]
            },
            "TenGigabitEthernet0/0/0/2" : {
              "router ospf area interface" : [
                50
              ]
            },
            "TenGigabitEthernet0/0/0/4" : {
              "router ospf area interface" : [
                35
              ]
            },
            "TenGigabitEthernet0/0/0/5" : {
              "router ospf area interface" : [
                38
              ]
            }
          }
        },
        "configs/ios_xr_route_policy" : {
          "as-path-set" : {
            "chill-as-path" : {
              "route-policy as-path in" : [
                123
              ]
            },
            "chill_aspath_141_deny" : {
              "route-policy as-path in" : [
                129
              ]
            },
            "chill_aspath_141_permit" : {
              "route-policy as-path in" : [
                143
              ]
            },
            "chill_aspath_142_permit" : {
              "route-policy as-path in" : [
                145
              ]
            },
            "xo-deny-as" : {
              "route-policy as-path in" : [
                90
              ]
            }
          },
          "community-set" : {
            "CF_fooey_Associates-chillmap" : {
              "route-policy community matches-any" : [
                145
              ]
            },
            "DC_AT_CHILL" : {
              "route-policy community matches-any" : [
                150
              ]
            },
            "EBGP-CUST-EXT" : {
              "route-policy community matches-any" : [
                98
              ]
            },
            "EBGP-CUST-NOEXP-PEER-NA" : {
              "route-policy community matches-any" : [
                88
              ]
            },
            "barbar_to_fooey_community_ipv4" : {
              "route-policy set community" : [
                52
              ]
            },
            "blackhole-all" : {
              "route-policy community matches-any" : [
                107,
                158
              ]
            },
            "blackhole-isp" : {
              "route-policy community matches-any" : [
                110
              ]
            },
            "chillmap" : {
              "route-policy community matches-any" : [
                141
              ]
            },
            "community_5555" : {
              "route-policy community matches-any" : [
                33
              ],
              "route-policy delete community [not] in" : [
                34
              ]
            },
            "fooey_blackhole_community" : {
              "route-policy community matches-any" : [
                5
              ]
            },
            "fooey_routes_community" : {
              "route-policy community matches-any" : [
                16
              ]
            },
            "scenes_No_Export" : {
              "route-policy community matches-any" : [
                120
              ]
            },
            "to-peers-backbone" : {
              "route-policy community matches-any" : [
                137
              ]
            },
            "wrn-expanded" : {
              "route-policy community matches-any" : [
                129,
                143
              ]
            },
            "wrn-squelch-40027" : {
              "route-policy community matches-any" : [
                126
              ]
            }
          },
          "prefix-set" : {
            "EBGP-PEER-BOGONS" : {
              "route-policy prefix-set" : [
                78
              ]
            },
            "EBGP-PEER-OTHER-UNDESIRABLES" : {
              "route-policy prefix-set" : [
                78
              ]
            },
            "EBGP-PEER-TOO-SPECIFIC" : {
              "route-policy prefix-set" : [
                80
              ]
            },
            "barbar_blackhole_routes" : {
              "route-policy prefix-set" : [
                5,
                51
              ]
            },
            "barbar_networks_ipv4" : {
              "route-policy prefix-set" : [
                51
              ]
            },
            "barbar_networks_ipv6" : {
              "route-policy prefix-set" : [
                21
              ]
            },
            "bippetyboppety_ipv4" : {
              "route-policy prefix-set" : [
                44,
                51
              ]
            },
            "local-peer-aggregates" : {
              "route-policy prefix-set" : [
                68
              ]
            },
            "null" : {
              "route-policy prefix-set" : [
                114
              ]
            },
            "remote-router-loopbacks" : {
              "route-policy prefix-set" : [
                66
              ]
            }
          }
        },
        "configs/ios_xr_router_static" : {
          "interface" : {
            "GigabitEthernet0/2/1/5.290" : {
              "router static route" : [
                16
              ]
            },
            "Null0" : {
              "router static route" : [
                6,
                9,
                10,
                11,
                12,
                14,
                15
              ]
            },
            "TenGigabitEthernet0/0/2/3" : {
              "router static route" : [
                7
              ]
            }
          }
        },
        "configs/ios_xr_ssh" : {
          "ipv4 acl" : {
            "ACL99" : {
              "ssh ipv4 access-list" : [
                6
              ]
            }
          },
          "ipv6 acl" : {
            "ipv6-vty-acl" : {
              "ssh ipv6 access-list" : [
                6
              ]
            }
          }
        },
        "configs/juniper-interfaces" : {
          "interface" : {
            "xe-0/0/0" : {
              "interface" : [
                4
              ]
            },
            "xe-0/0/0:0" : {
              "interface" : [
                4,
                5,
                15
              ]
            },
            "xe-0/0/0:0.0" : {
              "interface" : [
                5,
                15
              ],
              "ospf area interface" : [
                17
              ]
            }
          }
        },
        "configs/juniper_as_path_group" : {
          "as-path-group as-path" : {
            "AS_PATH_REGEX_NAME1" : {
              "as-path-group as-path" : [
                5
              ]
            },
            "AS_PATH_REGEX_NAME2" : {
              "as-path-group as-path" : [
                6
              ]
            }
          }
        },
        "configs/juniper_bgp" : {
          "bgp group" : {
            "someinternalipv4group" : {
              "bgp group neighbor" : [
                32,
                33
              ]
            },
            "someinternalipv6group" : {
              "bgp group neighbor" : [
                41
              ]
            },
            "someipv4bgpgroup" : {
              "bgp group neighbor" : [
                15,
                16,
                17
              ]
            },
            "someipv6bgpgroup" : {
              "bgp group neighbor" : [
                24
              ]
            }
          },
          "policy-statement" : {
            "someexportpolicy" : {
              "bgp export policy-statement" : [
                10,
                20,
                27,
                36
              ]
            },
            "someimportpolicy" : {
              "bgp import policy-statement" : [
                13,
                22,
                29,
                38
              ]
            }
          }
        },
        "configs/juniper_bgp_allow" : {
          "bgp group" : {
            "GROUP" : {
              "bgp group allow" : [
                8
              ]
            }
          }
        },
        "configs/juniper_bgp_authentication" : {
          "authentication-key-chain" : {
            "bgp-auth" : {
              "authentication-key-chains policy" : [
                10
              ]
            },
            "bgp-auth1" : {
              "authentication-key-chains policy" : [
                23
              ]
            }
          },
          "bgp group" : {
            "ext" : {
              "bgp group neighbor" : [
                8
              ]
            },
            "ext1" : {
              "bgp group neighbor" : [
                22
              ]
            }
          }
        },
        "configs/juniper_bgp_enforce_fist_as" : {
          "bgp group" : {
            "MYGROUP" : {
              "bgp group neighbor" : [
                7
              ]
            }
          }
        },
        "configs/juniper_firewall" : {
          "routing-instance" : {
            "OTHER_INSTANCE" : {
              "firewall filter then routing-instance" : [
                33
              ]
            }
          }
        },
        "configs/juniper_forwarding_options" : {
          "dhcp-relay server-group" : {
            "site-dhcp" : {
              "dhcp relay group active-server-group" : [
                8,
                13
              ]
            },
            "test2" : {
              "dhcp relay group active-server-group" : [
                9,
                17
              ]
            }
          },
          "interface" : {
            "et-0/0/10.0" : {
              "fowarding-options dhcp-relay group interface" : [
                15
              ]
            },
            "ge-0/2/5.0" : {
              "fowarding-options dhcp-relay group interface" : [
                18
              ]
            },
            "xe-1/0/0.0" : {
              "fowarding-options dhcp-relay group interface" : [
                10
              ]
            }
          }
        },
        "configs/juniper_interfaces" : {
          "interface" : {
            "ae0" : {
              "interface" : [
                5
              ]
            },
            "ae0.0" : {
              "interface" : [
                5
              ]
            },
            "fab0" : {
              "interface" : [
                6
              ]
            },
            "ge-0/0/0" : {
              "interface" : [
                7
              ]
            },
            "ge-0/0/1" : {
              "routing-instance interface" : [
                24
              ]
            },
            "ge-1/0/0" : {
              "interface" : [
                8
              ]
            },
            "ge-2/0/0" : {
              "interface" : [
                9,
                10
              ]
            },
            "ge-2/0/0.0" : {
              "interface" : [
                9
              ]
            },
            "ge-2/0/0.1" : {
              "interface" : [
                10
              ]
            },
            "ge-3/0/0" : {
              "interface" : [
                11
              ]
            },
            "ge-3/0/0.0" : {
              "interface" : [
                11
              ]
            },
            "ge-4/0/0" : {
              "interface" : [
                12
              ]
            },
            "ge-4/0/0.0" : {
              "interface" : [
                12
              ]
            },
            "ge-5/0/0" : {
              "interface" : [
                13
              ]
            },
            "ge-5/0/0.0" : {
              "interface" : [
                13
              ]
            },
            "irb" : {
              "interface" : [
                16,
                17,
                18,
                19
              ]
            },
            "irb.5" : {
              "interface" : [
                16,
                17,
                18,
                19
              ]
            },
            "vme" : {
              "interface" : [
                22
              ]
            },
            "vme.0" : {
              "interface" : [
                22
              ]
            },
            "xe-0/0/0:0" : {
              "interface" : [
                14,
                15
              ]
            },
            "xe-0/0/0:0.0" : {
              "interface" : [
                15
              ]
            },
            "xe-0/0/5:0" : {
              "interface" : [
                20
              ]
            },
            "xe-0/0/5:0.0" : {
              "interface" : [
                20
              ]
            },
            "xe-0/0/6" : {
              "interface" : [
                21
              ]
            }
          },
          "vlan" : {
            "bippetyboppety" : {
              "interface vlan" : [
                20
              ]
            }
          }
        },
        "configs/juniper_isis" : {
          "interface" : {
            "ge-0/0/0" : {
              "interface" : [
                6
              ]
            },
            "ge-0/0/0.0" : {
              "interface" : [
                6
              ],
              "isis interface" : [
                8,
                9,
                10,
                11,
                12,
                13,
                14
              ]
            }
          }
        },
        "configs/juniper_misc" : {
          "interface" : {
            "lo0.0" : {
              "routing-instances vtep-source-interface" : [
                9
              ]
            }
          }
        },
        "configs/juniper_nat" : {
          "interface" : {
            "ge-0/0/0" : {
              "interface" : [
                33
              ]
            },
            "ge-0/0/0.0" : {
              "interface" : [
                33
              ],
              "security zones security-zone interfaces" : [
                34
              ]
            }
          }
        },
        "configs/juniper_ospf" : {
          "interface" : {
            "ae16.0" : {
              "ospf area interface" : [
                17,
                18,
                19,
                20,
                22,
                23
              ]
            },
            "xe-0/0/1.0" : {
              "ospf area interface" : [
                15
              ]
            },
            "xe-0/0/20:0.0" : {
              "ospf area interface" : [
                3,
                4,
                5,
                6
              ]
            },
            "xe-0/0/21:0.0" : {
              "ospf area interface" : [
                7
              ]
            }
          }
        },
        "configs/juniper_ospf_disable" : {
          "interface" : {
            "ge-0/0/0" : {
              "interface" : [
                4
              ]
            },
            "ge-0/0/0.0" : {
              "interface" : [
                4
              ],
              "ospf area interface" : [
                6
              ]
            }
          }
        },
        "configs/juniper_policy_statement" : {
          "as-path" : {
            "ORIGINATED_IN_65535" : {
              "policy-statement from as-path" : [
                34
              ]
            }
          },
          "as-path-group" : {
            "AS_PATH_GROUP" : {
              "policy-statement from as-path-group" : [
                4
              ]
            }
          },
          "routing-instance" : {
            "FORWARDING" : {
              "policy-statement from instance" : [
                17
              ]
            }
          }
        },
        "configs/juniper_relay" : {
          "dhcp-relay server-group" : {
            "site-dhcp" : {
              "dhcp relay group active-server-group" : [
                5,
                6
              ]
            }
          },
          "interface" : {
            "irb.10" : {
              "fowarding-options dhcp-relay group interface" : [
                7
              ]
            },
            "irb.20" : {
              "fowarding-options dhcp-relay group interface" : [
                8
              ]
            }
          }
        },
        "configs/juniper_reth_interfaces" : {
          "interface" : {
            "ge-0/0/0" : {
              "interface" : [
                4,
                5
              ]
            },
            "ge-0/0/0.0" : {
              "interface" : [
                4
              ]
            },
            "ge-0/0/1" : {
              "interface" : [
                6,
                7
              ]
            },
            "ge-0/0/1.0" : {
              "interface" : [
                6
              ]
            },
            "reth0" : {
              "interface" : [
                8
              ]
            },
            "reth0.3" : {
              "interface" : [
                8
              ]
            }
          }
        },
        "configs/juniper_rib_groups" : {
          "bgp group" : {
            "BGP_GROUP" : {
              "bgp group neighbor" : [
                16,
                19,
                22,
                25
              ]
            }
          },
          "rib-group" : {
            "bgp-rib-group" : {
              "bgp family inet unicast rib-group" : [
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25
              ]
            },
            "interface-routes-rib" : {
              "routing-options interface-routes" : [
                3,
                4
              ]
            }
          }
        },
        "configs/juniper_routing_options" : {
          "policy-statement" : {
            "AGGREGATE_ROUTE_POLICY" : {
              "aggregate route policy" : [
                9
              ]
            },
            "POLICY" : {
              "routing-options instance-import" : [
                17
              ]
            }
          }
        },
        "configs/juniper_routing_policy" : {
          "interface" : {
            "ge-0/0/0" : {
              "interface" : [
                4,
                5
              ]
            },
            "ge-0/0/0.0" : {
              "interface" : [
                4,
                5
              ],
              "policy-statement from interface" : [
                7
              ]
            },
            "ge-0/0/0.99" : {
              "policy-statement from interface" : [
                9
              ]
            }
          }
        },
        "configs/juniper_security" : {
          "address-book" : {
            "notglobalAttached" : {
              "address-book attach zone" : [
                10
              ]
            }
          },
          "ike proposal" : {
            "PROPOSAL" : {
              "ike policy ike proposal" : [
                14
              ]
            }
          }
        },
        "configs/juniper_snmp" : {
          "prefix-list" : {
            "bippetyboo" : {
              "snmp community prefix-list" : [
                5
              ]
            }
          }
        },
        "configs/juniper_system" : {
          "logical-system" : {
            "ls905" : {
              "security-profile logical-system" : [
                21
              ]
            }
          }
        },
        "configs/juniper_vlan" : {
          "interface" : {
            "vlan.30" : {
              "vlan l3-interface" : [
                6
              ]
            },
            "vlan.40" : {
              "vlan l3-interface" : [
                8
              ]
            },
            "xe-0/0/0" : {
              "interface" : [
                10,
                11,
                12,
                13,
                14
              ]
            },
            "xe-0/0/0.0" : {
              "interface" : [
                10,
                11,
                12,
                13,
                14
              ]
            }
          },
          "vlan" : {
            "VLAN30" : {
              "interface vlan" : [
                11
              ]
            },
            "VLAN40" : {
              "interface vlan" : [
                12
              ]
            }
          }
        },
        "configs/mos_interface" : {
          "interface" : {
            "Ethernet1" : {
              "interface" : [
                6
              ]
            },
            "Ethernet2" : {
              "interface" : [
                9
              ]
            },
            "Management1" : {
              "interface" : [
                16
              ]
            },
            "ap1" : {
              "interface" : [
                4
              ]
            }
          }
        },
        "configs/named_and_numbered_lists" : {
          "ipv4 acl" : {
            "1" : {
              "route-map match ipv4 access-list" : [
                5
              ]
            },
            "2" : {
              "route-map match ipv4 access-list" : [
                5
              ]
            },
            "4" : {
              "route-map match ipv4 access-list" : [
                5
              ]
            },
            "456def" : {
              "route-map match ipv4 access-list" : [
                5
              ]
            },
            "5" : {
              "route-map match ipv4 access-list" : [
                5
              ]
            },
            "95qrs5" : {
              "route-map match ipv4 access-list" : [
                5
              ]
            },
            "a4" : {
              "route-map match ipv4 access-list" : [
                5
              ]
            },
            "abc123" : {
              "route-map match ipv4 access-list" : [
                5
              ]
            }
          }
        },
        "configs/neighbor_nxos" : {
          "bgp template peer" : {
            "KLMN" : {
              "inherited BGP peer" : [
                8
              ]
            }
          }
        },
        "configs/nexus_bgp" : {
          "route-map" : {
            "BLIB" : {
              "bgp otherwise in/outbound route-map" : [
                22
              ]
            },
            "BLIBB" : {
              "bgp otherwise in/outbound route-map" : [
                19
              ]
            },
            "BLOBB" : {
              "bgp redistribute connected route-map" : [
                16
              ]
            },
            "EG_CCC" : {
              "bgp outbound route-map" : [
                30
              ]
            },
            "IN_BBB" : {
              "bgp inbound route-map" : [
                29
              ]
            }
          }
        },
        "configs/nxos_interface" : {
          "interface" : {
            "Ethernet0/0" : {
              "interface" : [
                5
              ]
            },
            "nve1" : {
              "interface" : [
                11
              ]
            }
          }
        },
        "configs/nxos_ospf" : {
          "interface" : {
            "Ethernet0/0" : {
              "interface" : [
                5
              ]
            }
          },
          "route-map" : {
            "RM_OSPF_DIRECT" : {
              "ospf redistribute connected route-map" : [
                20,
                25
              ]
            },
            "RM_OSPF_STATIC" : {
              "ospf redistribute static route-map" : [
                21
              ]
            }
          }
        },
        "configs/peer_template" : {
          "bgp template peer" : {
            "RAAS" : {
              "inherited BGP peer" : [
                29
              ]
            },
            "SPINE" : {
              "inherited BGP peer" : [
                26
              ]
            }
          },
          "interface" : {
            "Loopback1" : {
              "update-source interface" : [
                16
              ]
            }
          },
          "route-map" : {
            "PROTECT-LEAF" : {
              "bgp inbound route-map" : [
                19
              ]
            }
          }
        },
        "configs/pim" : {
          "interface" : {
            "Loopback1" : {
              "interface" : [
                25
              ]
            }
          }
        },
        "configs/prefix_list_ipv4" : {
          "ipv4 prefix-list" : {
            "default" : {
              "route-map match ipv4 prefix-list" : [
                10
              ]
            }
          }
        },
        "configs/route_maps_in_two_address_families" : {
          "bgp template peer" : {
            "ABC" : {
              "inherited BGP peer" : [
                19
              ]
            }
          },
          "ipv4 prefix-list" : {
            "v4_list" : {
              "route-map match ipv4 prefix-list" : [
                25
              ]
            }
          },
          "ipv6 prefix-list" : {
            "v6_list" : {
              "route-map match ipv6 prefix-list" : [
                28
              ]
            }
          },
          "route-map" : {
            "FROM_ABC_V4" : {
              "bgp inbound route-map" : [
                10
              ]
            },
            "FROM_ABC_V6" : {
              "bgp inbound route-map" : [
                15
              ]
            }
          }
        },
        "configs/route_policy_as_path" : {
          "community-set" : {
            "13979:90" : {
              "route-policy set community" : [
                7
              ]
            },
            "SOCAL-USERS" : {
              "route-policy community matches-any" : [
                5
              ]
            }
          },
          "prefix-set" : {
            "CENIC_DC_Internal" : {
              "route-policy prefix-set" : [
                25
              ]
            },
            "classful_default" : {
              "route-policy prefix-set" : [
                14
              ]
            }
          }
        },
        "configs/route_policy_igp_cost" : {
          "community-set" : {
            "DC_AT_MEMBERS" : {
              "route-policy community matches-any" : [
                5
              ]
            },
            "DC_CF_COMMODITY_PEER" : {
              "route-policy community matches-any" : [
                5
              ]
            },
            "DC_CF_ISP" : {
              "route-policy community matches-any" : [
                5
              ]
            },
            "HPR_CF_RE_PEER" : {
              "route-policy community matches-any" : [
                5
              ]
            },
            "No_Export" : {
              "route-policy community matches-any" : [
                7
              ]
            }
          }
        },
        "configs/route_policy_metric_type" : {
          "community-set" : {
            "No_Export" : {
              "route-policy community matches-any" : [
                5
              ]
            }
          },
          "prefix-set" : {
            "DC_Internal" : {
              "route-policy prefix-set" : [
                7
              ]
            }
          }
        },
        "configs/route_policy_param" : {
          "community-set" : {
            "blackhole-all" : {
              "route-policy community matches-any" : [
                13
              ]
            }
          },
          "prefix-set" : {
            "$cust_v4_pfx" : {
              "route-policy prefix-set" : [
                5
              ]
            }
          }
        },
        "configs/switchport_range" : {
          "interface" : {
            "FastEthernet0/1" : {
              "interface" : [
                4
              ]
            }
          }
        },
        "configs/underscore_variable" : {
          "ipv4 prefix-list" : {
            "ABC_DEF" : {
              "route-map match ipv4 prefix-list" : [
                5
              ]
            },
            "_GHI" : {
              "route-map match ipv4 prefix-list" : [
                5
              ]
            }
          }
        },
        "configs/variables" : {
          "interface" : {
            "FastEthernet0/0" : {
              "interface" : [
                4
              ]
            }
          },
          "ipv4 acl" : {
            "ABC_def.gh_vlan789_out_20000101" : {
              "interface outgoing ip access-list" : [
                5
              ]
            }
          }
        },
        "configs/variables_dos" : {
          "interface" : {
            "FastEthernet0/0" : {
              "interface" : [
                4
              ]
            }
          },
          "ipv4 acl" : {
            "ABC_def.gh_vlan789_out_20000101" : {
              "interface outgoing ip access-list" : [
                5
              ]
            }
          }
        },
        "configs/vlan_access_map2" : {
          "undeclared bgp peer" : {
            "10.10.212.233" : {
              "bgp neighbor without remote-as" : [
                20
              ]
            }
          }
        }
      },
      "undefinedReferences" : {
        "configs/arista_bgp" : {
          "bgp peer-group" : {
            "UNDEFINED_PEER_GROUP" : {
              "bgp neighbor statement" : [
                11
              ]
            }
          },
          "route-map" : {
            "UNDEFINED_MAP" : {
              "bgp redistribute ospfv3 route-map" : [
                13
              ]
            }
          }
        },
        "configs/arista_interface" : {
          "policy-map" : {
            "pbr-pmap" : {
              "interface service-policy" : [
                8
              ]
            },
            "qos-pmap" : {
              "interface service-policy" : [
                9
              ]
            }
          }
        },
        "configs/arista_misc" : {
          "ipv4 acl" : {
            "abc" : {
              "management telnet ip access-group" : [
                36
              ]
            }
          }
        },
        "configs/asa_acl" : {
          "object-group network" : {
            "drawbridge_hosts" : {
              "extended access-list network object-group" : [
                9
              ]
            }
          }
        },
        "configs/asa_interface" : {
          "policy-map" : {
            "some-interface-policy" : {
              "service-policy interface policy" : [
                8
              ]
            }
          }
        },
        "configs/asa_nat" : {
          "interface" : {
            "inside" : {
              "object nat real interface" : [
                16,
                17,
                18,
                19
              ],
              "twice nat real interface" : [
                7,
                8,
                9
              ]
            },
            "outside" : {
              "object nat mapped interface" : [
                16,
                17,
                18,
                20
              ],
              "twice nat mapped interface" : [
                7,
                8,
                9
              ]
            }
          },
          "object network" : {
            "interface" : {
              "twice nat mapped destination network object" : [
                8
              ],
              "twice nat mapped source network object" : [
                8
              ]
            },
            "net1" : {
              "twice nat real source network object" : [
                8,
                9,
                11,
                12,
                13
              ]
            },
            "net2" : {
              "twice nat mapped source network object" : [
                9,
                11,
                12,
                13
              ],
              "twice nat real destination network object" : [
                8
              ]
            },
            "net3" : {
              "twice nat mapped destination network object" : [
                11
              ]
            },
            "net4" : {
              "twice nat real destination network object" : [
                11
              ]
            },
            "source-mapped" : {
              "object nat mapped source network object" : [
                18,
                22,
                23
              ]
            }
          }
        },
        "configs/bgp_address_family" : {
          "interface" : {
            "Loopback0" : {
              "update-source interface" : [
                14
              ]
            }
          },
          "route-map" : {
            "as1_to_as2" : {
              "bgp outbound route-map" : [
                26
              ]
            },
            "as1_to_as3" : {
              "bgp outbound route-map" : [
                28
              ]
            },
            "as2_to_as1" : {
              "bgp inbound route-map" : [
                27
              ]
            },
            "as3_to_as1" : {
              "bgp inbound route-map" : [
                29
              ]
            }
          },
          "undeclared bgp peer" : {
            "13.16.3.16" : {
              "bgp neighbor without remote-as" : [
                17
              ]
            }
          }
        },
        "configs/bgp_default_originate_policy" : {
          "route-policy" : {
            "EBGP_CUST_FULL_v4" : {
              "bgp neighbor route-policy out" : [
                13
              ]
            },
            "cust_v4_in" : {
              "bgp neighbor route-policy in" : [
                11
              ]
            }
          }
        },
        "configs/bgp_foundry" : {
          "route-map" : {
            "from_ucr" : {
              "bgp inbound route-map" : [
                10
              ]
            },
            "tag-bbone-prefixes" : {
              "bgp ipv4 network statement route-map" : [
                15
              ]
            }
          }
        },
        "configs/bgp_route_policy" : {
          "bgp neighbor-group" : {
            "EBGP-PEER-SVL-PNI" : {
              "bgp use neighbor-group" : [
                20
              ]
            }
          },
          "route-policy" : {
            "EBGP-PEER-AS11164-SVL-PNI-IN" : {
              "bgp neighbor route-policy in" : [
                24
              ]
            },
            "EBGP-PEER-AS11164-SVL-PNI-OUT" : {
              "bgp neighbor route-policy out" : [
                26
              ]
            }
          }
        },
        "configs/cadant_bgp" : {
          "interface" : {
            "Loopback15" : {
              "update-source interface" : [
                12,
                17
              ]
            }
          },
          "route-map" : {
            "blarp" : {
              "bgp outbound route-map" : [
                28
              ]
            },
            "blerp" : {
              "bgp outbound ipv6 route-map" : [
                35
              ]
            }
          },
          "undeclared bgp peer" : {
            "1.2.3.4" : {
              "bgp neighbor without remote-as" : [
                26,
                27,
                28,
                39
              ]
            },
            "dead:beef:0:0:0:0:0:1" : {
              "bgp neighbor without remote-as" : [
                33,
                34,
                35,
                40
              ]
            }
          }
        },
        "configs/cadant_interface" : {
          "ipv4/6 acl" : {
            "fleep-acl" : {
              "interface ip inband access-group" : [
                130
              ]
            }
          },
          "ipv6 acl" : {
            "bar-filter" : {
              "interface ipv6 traffic-filter out" : [
                86
              ]
            },
            "foo-filter" : {
              "interface ipv6 traffic-filter in" : [
                85
              ]
            }
          }
        },
        "configs/cadant_isis" : {
          "ipv4/6 acl" : {
            "blah-acl-99" : {
              "router isis distribute-list acl" : [
                15
              ]
            },
            "blah-ipv6-access-list" : {
              "router isis distribute-list acl" : [
                20
              ]
            }
          }
        },
        "configs/cadant_misc" : {
          "interface" : {
            "Loopback0" : {
              "ntp source-interface" : [
                80
              ],
              "tacacs source-interface" : [
                94
              ]
            }
          }
        },
        "configs/cadant_rip" : {
          "ipv4/6 acl" : {
            "blah-std-acl" : {
              "router rip distribute-list" : [
                6
              ]
            }
          }
        },
        "configs/cadant_route_map" : {
          "ipv4 prefix-list" : {
            "bar-prefix-list" : {
              "route-map match ipv4 prefix-list" : [
                6
              ]
            }
          },
          "ipv6 prefix-list" : {
            "baz-ipv6-prefix-list" : {
              "route-map match ipv6 prefix-list" : [
                10
              ]
            }
          }
        },
        "configs/cadant_snmp" : {
          "interface" : {
            "Loopback0" : {
              "snmp-server source-interface" : [
                18
              ]
            }
          },
          "ipv4 acl" : {
            "52" : {
              "snmp server community ipv4 acl" : [
                7
              ]
            }
          }
        },
        "configs/cisco_additional_paths" : {
          "undeclared bgp peer" : {
            "1.2.3.4" : {
              "bgp neighbor without remote-as" : [
                8,
                9
              ]
            }
          }
        },
        "configs/cisco_bgp" : {
          "as-path access-list" : {
            "40" : {
              "bgp neighbor filter-list access-list" : [
                18
              ]
            }
          },
          "bgp template peer-policy" : {
            "p2" : {
              "inherited BGP peer-policy" : [
                35
              ]
            },
            "p3" : {
              "inherited BGP peer-policy" : [
                36
              ]
            }
          },
          "route-map" : {
            "abcdefg" : {
              "bgp redistribute static route-map" : [
                32
              ]
            },
            "blah" : {
              "bgp redistribute rip route-map" : [
                33
              ]
            },
            "bloop" : {
              "bgp redistribute connected route-map" : [
                27
              ]
            }
          },
          "undeclared bgp peer" : {
            "10.0.0.1" : {
              "bgp neighbor without remote-as" : [
                38,
                39,
                40,
                41
              ]
            },
            "10.20.2.2" : {
              "bgp neighbor without remote-as" : [
                10
              ]
            },
            "192.168.3.2" : {
              "bgp neighbor without remote-as" : [
                14
              ]
            },
            "192.168.4.2" : {
              "bgp neighbor without remote-as" : [
                18
              ]
            }
          }
        },
        "configs/cisco_cable" : {
          "cable service-class" : {
            "barfoo" : {
              "cable qos enforce-rule service-class" : [
                77
              ]
            },
            "foobar" : {
              "cable qos enforce-rule service-class" : [
                78
              ]
            }
          },
          "depi-tunnel" : {
            "depitun0" : {
              "controller rf-channel depi-tunnel" : [
                124
              ]
            }
          },
          "l2tp-class" : {
            "l2tpclass1" : {
              "depi-tunnel l2tp-class" : [
                140
              ]
            }
          }
        },
        "configs/cisco_control_plane" : {
          "policy-map" : {
            "copp-policy" : {
              "control-plane service-policy input" : [
                5
              ]
            },
            "copp-policy-out" : {
              "control-plane service-policy output" : [
                6
              ]
            }
          }
        },
        "configs/cisco_crypto" : {
          "crypto ipsec transform-set" : {
            "bleep" : {
              "crypto map ipsec-isakmp transform-set" : [
                222
              ]
            },
            "hijklmnop" : {
              "ipsec profile set transform-set" : [
                159
              ]
            },
            "mytransformset" : {
              "crypto map ipsec-isakmp transform-set" : [
                241
              ]
            }
          },
          "crypto isakmp profile" : {
            "myisakmpprofile" : {
              "crypto map ipsec-isakmp isakmp-profile" : [
                237
              ]
            },
            "someOtherprofile" : {
              "ipsec profile set isakmp-profile" : [
                162
              ]
            }
          },
          "crypto keyring" : {
            "VRF:MMS:RMT:UPM:1143" : {
              "isakmp profile keyring" : [
                188
              ]
            }
          },
          "crypto-dynamic-map-set" : {
            "bippety" : {
              "crypto map ipsec-isakmp crypto-dynamic-map-set" : [
                224
              ]
            }
          },
          "ipv4/6 acl" : {
            "myvpnacl" : {
              "crypto map ipsec-isakmp acl" : [
                235
              ]
            },
            "someacl" : {
              "crypto map ipsec-isakmp acl" : [
                219
              ]
            }
          }
        },
        "configs/cisco_domain" : {
          "interface" : {
            "Loopback666" : {
              "domain lookup source-interface" : [
                5
              ]
            }
          }
        },
        "configs/cisco_eigrp" : {
          "interface" : {
            "FastEthernet0/1" : {
              "eigrp passive-interface" : [
                147
              ]
            },
            "GigabitEthernet1/5/3" : {
              "eigrp passive-interface" : [
                27
              ]
            },
            "GigabitEthernet2/5/3" : {
              "eigrp passive-interface" : [
                28
              ]
            },
            "Port-Channel34" : {
              "eigrp passive-interface" : [
                29
              ]
            },
            "Port-Channel35" : {
              "eigrp passive-interface" : [
                30
              ]
            }
          },
          "route-map" : {
            "BGP_TO_EIGRP" : {
              "eigrp redistribute bgp route-map" : [
                35
              ]
            },
            "CONNECTED_TO_EIGRP" : {
              "eigrp redistribute connected route-map" : [
                36
              ]
            },
            "EIGRP_TO_EIGRP" : {
              "eigrp redistribute eigrp route-map" : [
                37
              ]
            },
            "ISIS_TO_EIGRP" : {
              "eigrp redistribute isis route-map" : [
                38
              ]
            },
            "OSPF_TO_EIGRP" : {
              "eigrp redistribute ospf route-map" : [
                39
              ]
            },
            "RIP_TO_EIGRP" : {
              "eigrp redistribute rip route-map" : [
                40
              ]
            },
            "STATIC_TO_EIGRP" : {
              "eigrp redistribute static route-map" : [
                41
              ]
            }
          }
        },
        "configs/cisco_interface" : {
          "interface" : {
            "Loopback1" : {
              "vxlan source-interface" : [
                324
              ]
            }
          },
          "ipv4 acl" : {
            "167" : {
              "interface ip verify access-list" : [
                130
              ]
            },
            "310-systems" : {
              "interface outgoing ip access-list" : [
                138
              ]
            },
            "ag1" : {
              "interface incoming ip access-list" : [
                56
              ]
            },
            "ag2" : {
              "interface outgoing ip access-list" : [
                57
              ]
            },
            "def" : {
              "ip nat source dynamic access-list" : [
                92
              ]
            },
            "mynatacl" : {
              "ip nat destination acl" : [
                89
              ]
            }
          },
          "ipv4/6 acl" : {
            "1" : {
              "interface igmp access-group acl" : [
                78
              ]
            },
            "hpaccesslist" : {
              "interface igmp host-proxy access-list" : [
                80
              ]
            }
          },
          "nat pool" : {
            "beeble" : {
              "ip nat source pool" : [
                93
              ]
            }
          },
          "route-map" : {
            "SITEMAP" : {
              "interface ip vrf sitemap" : [
                136
              ]
            },
            "eigrp-leak-map" : {
              "interface summary-address eigrp leak-map" : [
                126
              ]
            }
          },
          "zone security" : {
            "z1" : {
              "interface zone-member security" : [
                280
              ]
            }
          }
        },
        "configs/cisco_ip" : {
          "ipv4/6 acl" : {
            "wccp-cachelist" : {
              "ip wccp group-list" : [
                11
              ]
            },
            "wccp-redir" : {
              "ip wccp redirect-list" : [
                11
              ]
            }
          }
        },
        "configs/cisco_ip_route" : {
          "interface" : {
            "Dialer1" : {
              "ip route next-hop interface" : [
                14
              ]
            },
            "Dialer2" : {
              "ip route next-hop interface" : [
                15
              ]
            },
            "GigabitEthernet3/0/0.212" : {
              "ip route next-hop interface" : [
                6
              ]
            },
            "Loopback66" : {
              "ip route next-hop interface" : [
                12
              ]
            },
            "Loopback99" : {
              "ip route next-hop interface" : [
                13
              ]
            },
            "POS5/3:10" : {
              "ip route next-hop interface" : [
                10
              ]
            },
            "Serial5/0:2" : {
              "ip route next-hop interface" : [
                7
              ]
            },
            "Serial5/1:5" : {
              "ip route next-hop interface" : [
                9
              ]
            }
          }
        },
        "configs/cisco_line" : {
          "ipv4 acl" : {
            "40" : {
              "line access-class list" : [
                6,
                26
              ]
            },
            "99" : {
              "line access-class list" : [
                56
              ]
            },
            "vty-acl" : {
              "line access-class list" : [
                22
              ]
            }
          },
          "ipv6 acl" : {
            "ipv6-vty-acl" : {
              "line access-class ipv6 list" : [
                61
              ]
            }
          }
        },
        "configs/cisco_misc" : {
          "class-map" : {
            "ICMP-cmap" : {
              "policy-map class" : [
                206
              ]
            },
            "TCP-cmap" : {
              "policy-map class" : [
                208
              ]
            },
            "inspection_default" : {
              "policy-map class" : [
                195
              ]
            }
          },
          "ipv4/6 acl" : {
            "cops-acl" : {
              "cops listener access-list" : [
                42
              ]
            }
          }
        },
        "configs/cisco_ntp" : {
          "interface" : {
            "Loopback0" : {
              "ntp source-interface" : [
                7
              ]
            }
          },
          "ipv4 acl" : {
            "ntp-peer-group" : {
              "ntp access-group" : [
                4
              ]
            }
          }
        },
        "configs/cisco_nxos_bgp" : {
          "route-map" : {
            "AGG6_MAP" : {
              "bgp address-family aggregate-address advertise-map" : [
                21
              ]
            }
          }
        },
        "configs/cisco_ospf" : {
          "ipv4 prefix-list" : {
            "plin" : {
              "router ospf distribute-list prefix in" : [
                55
              ]
            },
            "plout" : {
              "router ospf distribute-list prefix out" : [
                56
              ]
            }
          },
          "ipv4/6 acl" : {
            "aclin" : {
              "router ospf distribute-list in" : [
                52,
                53
              ]
            },
            "aclout" : {
              "router ospf distribute-list out" : [
                54
              ]
            }
          },
          "route-map" : {
            "DEFAULT_ORIGINATE_OSPF" : {
              "ospf default-originate route-map" : [
                47
              ]
            },
            "DIRECT_OSPF" : {
              "ospf redistribute connected route-map" : [
                67
              ]
            },
            "eigrp-ospf-route-map" : {
              "ospf redistribute eigrp route-map" : [
                68
              ]
            },
            "rmin" : {
              "router ospf distribute-list route-map in" : [
                57
              ]
            },
            "rmout" : {
              "router ospf distribute-list route-map out" : [
                58
              ]
            }
          }
        },
        "configs/cisco_ospf_ipv6" : {
          "ipv6 prefix-list" : {
            "SWITCHLAN" : {
              "ipv6 router ospf distribute-list prefix-list in" : [
                14
              ]
            },
            "SWITCHLAN-OUT" : {
              "ipv6 router ospf distribute-list prefix-list out" : [
                15
              ]
            }
          }
        },
        "configs/cisco_pim" : {
          "ipv4 acl" : {
            "foobar" : {
              "pim rp-address" : [
                7
              ]
            },
            "foobarmap" : {
              "pim rp-address" : [
                8
              ]
            }
          }
        },
        "configs/cisco_qos" : {
          "acl" : {
            "boop" : {
              "class-map access-group" : [
                20
              ]
            },
            "boop2" : {
              "class-map access-list" : [
                21
              ]
            }
          },
          "class-map" : {
            "MY_CLASS_1" : {
              "policy-map event class" : [
                129
              ]
            },
            "MY_CLASS_2" : {
              "policy-map event class" : [
                131
              ]
            },
            "bippetyboo-drop" : {
              "policy-map class" : [
                50
              ]
            },
            "bippetyboo-ndrop" : {
              "policy-map class" : [
                66
              ]
            },
            "bippetyboo-ndrop-fcoe" : {
              "policy-map class" : [
                62
              ]
            },
            "bleefee" : {
              "policy-map class" : [
                102
              ]
            },
            "bleefee2" : {
              "policy-map class" : [
                107
              ]
            },
            "blerf" : {
              "policy-map class" : [
                98
              ]
            },
            "c-bleeb-drop" : {
              "policy-map class" : [
                109
              ]
            },
            "c-bleeb-ndrop-fcoe" : {
              "policy-map class" : [
                114
              ]
            },
            "c-foob-drop" : {
              "policy-map class" : [
                81
              ]
            },
            "c-foob-ndrop" : {
              "policy-map class" : [
                93
              ]
            },
            "c-foob-ndrop-fcoe" : {
              "policy-map class" : [
                89
              ]
            },
            "fffoooddd" : {
              "policy-map class" : [
                72
              ]
            },
            "floop" : {
              "policy-map class" : [
                119
              ]
            }
          },
          "class-map type inspect" : {
            "cinspect" : {
              "policy-map type inspect class type inspect" : [
                43
              ]
            }
          },
          "policy-map" : {
            "prioritize_backbone" : {
              "policy-map class service-policy" : [
                74
              ]
            }
          },
          "service-template" : {
            "DEF" : {
              "class-map activate-service-template" : [
                9
              ]
            },
            "GHI" : {
              "class-map service-template" : [
                10
              ]
            },
            "my_TEMPLATE_NAME" : {
              "policy-map event class activate" : [
                130
              ]
            }
          }
        },
        "configs/cisco_rip" : {
          "ipv4/6 acl" : {
            "some-ACL" : {
              "router rip distribute-list" : [
                10,
                11,
                12,
                13
              ]
            }
          }
        },
        "configs/cisco_route_map" : {
          "as-path access-list" : {
            "AS_PATH_UNDEF" : {
              "route-map match as-path access-list" : [
                57
              ]
            }
          },
          "ipv4 acl" : {
            "test" : {
              "route-map match ipv4 access-list" : [
                26
              ]
            }
          },
          "ipv4 prefix-list" : {
            "bobble" : {
              "route-map match ipv4 prefix-list" : [
                36
              ]
            },
            "hpr-connector-subnets" : {
              "route-map match ipv4 prefix-list" : [
                10
              ]
            }
          }
        },
        "configs/cisco_snmp" : {
          "interface" : {
            "Loopback0" : {
              "snmp-server source-interface" : [
                87
              ]
            },
            "Vlan1" : {
              "snmp-server source-interface" : [
                89
              ]
            },
            "mgmt0" : {
              "snmp-server source-interface" : [
                88
              ]
            }
          },
          "ipv4 acl" : {
            "1" : {
              "snmp server community ipv4 acl" : [
                9
              ]
            },
            "2" : {
              "snmp server community ipv4 acl" : [
                8,
                10
              ]
            },
            "customer-snmp" : {
              "snmp server community ipv4 acl" : [
                14
              ]
            },
            "dummyacl" : {
              "snmp server community ipv4 acl" : [
                13
              ]
            },
            "snmp-acl" : {
              "snmp server community ipv4 acl" : [
                7,
                11
              ]
            },
            "snmp-arpa-acl" : {
              "snmp server community ipv4 acl" : [
                12
              ]
            },
            "to-VTY" : {
              "snmp server community ipv4 acl" : [
                16
              ]
            }
          },
          "ipv4/6 acl" : {
            "8" : {
              "snmp server file transfer acl" : [
                67
              ],
              "snmp server tftp-server list" : [
                92
              ]
            }
          },
          "ipv6 acl" : {
            "dummyacl" : {
              "snmp server community ipv6 acl" : [
                15
              ]
            },
            "to-VTY" : {
              "snmp server community ipv6 acl" : [
                16
              ]
            }
          }
        },
        "configs/cisco_tacacs" : {
          "interface" : {
            "Loopback0" : {
              "ip tacacs source-interface" : [
                6,
                7
              ],
              "tacacs source-interface" : [
                26
              ]
            }
          }
        },
        "configs/cisco_track" : {
          "interface" : {
            "GigabitEthernet0/0" : {
              "track interface" : [
                4
              ]
            },
            "GigabitEthernet0/1" : {
              "track interface" : [
                5
              ]
            }
          }
        },
        "configs/cisco_vrrp" : {
          "interface" : {
            "GigabitEthernet0/0/0/19" : {
              "router vrrp interface" : [
                16
              ]
            },
            "ManagementEthernet0/RSP0/CPU0/0" : {
              "router vrrp interface" : [
                26
              ]
            },
            "ManagementEthernet0/RSP1/CPU0/0" : {
              "router vrrp interface" : [
                28
              ]
            }
          }
        },
        "configs/cisco_zone" : {
          "policy-map type inspect" : {
            "p1" : {
              "zone-pair service-policy type inspect" : [
                5
              ]
            }
          }
        },
        "configs/colon_in_vrf" : {
          "route-map" : {
            "RMT_PBI" : {
              "bgp redistribute connected route-map" : [
                6
              ]
            }
          }
        },
        "configs/f5_bigip_imish_malformed" : {
          "route-map" : {
            "rm1" : {
              "bgp neighbor address-family ipv6 route-map out" : [
                21
              ],
              "neighbor peer-group route-map out" : [
                22
              ]
            }
          }
        },
        "configs/f5_bigip_structured_ltm" : {
          "monitor" : {
            "/Common/SOME_MONITOR" : {
              "pool monitor" : [
                33
              ]
            }
          },
          "node" : {
            "/Common/bar" : {
              "pool member" : [
                28
              ]
            },
            "/Common/foo" : {
              "pool member" : [
                23
              ]
            }
          },
          "persistence" : {
            "/Common/SOME_PROFILE" : {
              "virtual persist persistence" : [
                97
              ]
            }
          },
          "pool" : {
            "/Common/SOME_POOL" : {
              "virtual pool" : [
                101
              ]
            }
          },
          "profile" : {
            "/Common/P1" : {
              "virtual profile" : [
                103
              ]
            },
            "/Common/P2" : {
              "virtual profile" : [
                104
              ]
            },
            "/Common/P3" : {
              "virtual profile" : [
                105
              ]
            }
          },
          "profile server-ssl" : {
            "/Common/SOME_SSL_PROFILE" : {
              "monitor https ssl-profile" : [
                166
              ]
            }
          },
          "snat-translation" : {
            "/Common/192.0.2.5" : {
              "snatpool members member" : [
                85
              ]
            },
            "/Common/192.0.2.6" : {
              "snatpool members member" : [
                86
              ]
            }
          },
          "virtual-address" : {
            "/Common/192.0.2.7" : {
              "virtual destination" : [
                90
              ]
            }
          },
          "vlan" : {
            "/Common/MY_VLAN" : {
              "virtual vlans vlan" : [
                120
              ]
            },
            "/Common/SOME_VLAN" : {
              "snat vlans vlan" : [
                74
              ]
            }
          }
        },
        "configs/f5_bigip_structured_net_routing_bgp" : {
          "route-map" : {
            "/Common/MY_IPV4_OUT" : {
              "bgp neighbor address-family ipv6 route-map out" : [
                52
              ]
            },
            "/Common/MY_IPV6_OUT" : {
              "bgp neighbor address-family ipv6 route-map out" : [
                33
              ]
            },
            "/Common/MY_KERNEL_OUT" : {
              "bgp address-family redistribute kernel route-map" : [
                12
              ]
            }
          },
          "vlan" : {
            "SOME_VLAN" : {
              "bgp neighbor update-source" : [
                40,
                63
              ]
            }
          }
        },
        "configs/f5_bigip_structured_net_routing_route_map" : {
          "prefix-list" : {
            "/Common/MY_PREFIX_LIST" : {
              "route-map match ipv4 address prefix-list" : [
                14
              ]
            },
            "/Common/MY_PREFIX_LIST2" : {
              "route-map match ipv4 address prefix-list" : [
                29
              ]
            }
          }
        },
        "configs/foundry_bgp" : {
          "interface" : {
            "Loopback1" : {
              "update-source interface" : [
                16
              ]
            }
          }
        },
        "configs/foundry_misc" : {
          "interface" : {
            "Ethernet13/10" : {
              "ip route next-hop interface" : [
                39
              ]
            }
          },
          "ipv4 acl" : {
            "blib" : {
              "ssh ipv4 access-list" : [
                31
              ]
            }
          },
          "ipv6 acl" : {
            "blob" : {
              "ssh ipv6 access-list" : [
                32
              ]
            }
          }
        },
        "configs/ios_bgp" : {
          "ipv6 prefix-list" : {
            "VPNV6_PL" : {
              "bgp inbound ipv6 prefix-list" : [
                11
              ]
            }
          },
          "route-map" : {
            "ADVERTISE_MAP" : {
              "bgp address-family aggregate-address advertise-map" : [
                5
              ]
            },
            "EXIST_MAP" : {
              "bgp neighbor advertise-map exist-map" : [
                5
              ]
            }
          },
          "undeclared bgp peer" : {
            "1.2.3.4" : {
              "bgp neighbor without remote-as" : [
                5
              ]
            }
          },
          "undeclared bgp peer-group" : {
            "UNDEFINED_PEER_GROUP" : {
              "bgp peer-group referenced before defined" : [
                8
              ]
            }
          }
        },
        "configs/ios_interface" : {
          "policy-map" : {
            "FOOBAR" : {
              "interface service-policy" : [
                5
              ]
            }
          }
        },
        "configs/ios_standby" : {
          "track" : {
            "1" : {
              "interface standby track" : [
                12
              ]
            }
          }
        },
        "configs/ios_xr_bgp" : {
          "route-policy" : {
            "ADDITIONAL_PATHS_POLICY" : {
              "bgp additional-paths selection route-policy" : [
                8
              ]
            },
            "AGGREGATE_POLICY" : {
              "aggregate-address route-policy" : [
                10
              ]
            }
          }
        },
        "configs/ios_xr_bgp_neighbor_group" : {
          "bgp session-group" : {
            "CIAO" : {
              "bgp use session-group" : [
                94
              ]
            },
            "bippety" : {
              "bgp use session-group" : [
                34
              ]
            },
            "blabber" : {
              "bgp use session-group" : [
                17
              ]
            },
            "excellect-group" : {
              "bgp use session-group" : [
                88
              ]
            }
          },
          "interface" : {
            "Loopback0" : {
              "update-source interface" : [
                22,
                36,
                48,
                58,
                69
              ]
            }
          },
          "route-policy" : {
            "advertise_fooey_dc_and_isp_routes_ipv4" : {
              "bgp neighbor route-policy out" : [
                25,
                29
              ]
            },
            "advertise_fooey_routes_only" : {
              "bgp neighbor route-policy out" : [
                39
              ]
            },
            "deny_bgp_routes" : {
              "bgp neighbor route-policy in" : [
                24,
                28
              ]
            },
            "deny_default_network_ipv4" : {
              "bgp neighbor route-policy out" : [
                60
              ]
            }
          }
        },
        "configs/ios_xr_multicast" : {
          "ipv4 acl" : {
            "MSDP_filter" : {
              "msdp peer sa-list" : [
                29,
                30,
                46,
                47
              ]
            }
          }
        },
        "configs/ios_xr_multipart" : {
          "ipv4 acl" : {
            "GNS-VTY-ACCESS" : {
              "ssh ipv4 access-list" : [
                31
              ]
            }
          }
        },
        "configs/ios_xr_ospf" : {
          "interface" : {
            "Bundle-Ethernet101" : {
              "router ospf area interface" : [
                17
              ]
            },
            "Bundle-Ethernet103" : {
              "router ospf area interface" : [
                23
              ]
            },
            "Bundle-Ethernet201" : {
              "router ospf area interface" : [
                27
              ]
            },
            "HundredGigabitEthernet0/2/0/0.292" : {
              "router ospf area interface" : [
                41
              ]
            },
            "HundredGigabitEthernet0/2/0/3" : {
              "router ospf area interface" : [
                43
              ]
            },
            "Loopback0" : {
              "router ospf area interface" : [
                32
              ]
            },
            "TenGigabitEthernet0/0/0/2" : {
              "router ospf area interface" : [
                50
              ]
            },
            "TenGigabitEthernet0/0/0/4" : {
              "router ospf area interface" : [
                35
              ]
            },
            "TenGigabitEthernet0/0/0/5" : {
              "router ospf area interface" : [
                38
              ]
            }
          }
        },
        "configs/ios_xr_route_policy" : {
          "as-path-set" : {
            "chill-as-path" : {
              "route-policy as-path in" : [
                123
              ]
            },
            "chill_aspath_141_deny" : {
              "route-policy as-path in" : [
                129
              ]
            },
            "chill_aspath_141_permit" : {
              "route-policy as-path in" : [
                143
              ]
            },
            "chill_aspath_142_permit" : {
              "route-policy as-path in" : [
                145
              ]
            },
            "xo-deny-as" : {
              "route-policy as-path in" : [
                90
              ]
            }
          },
          "community-set" : {
            "CF_fooey_Associates-chillmap" : {
              "route-policy community matches-any" : [
                145
              ]
            },
            "DC_AT_CHILL" : {
              "route-policy community matches-any" : [
                150
              ]
            },
            "EBGP-CUST-EXT" : {
              "route-policy community matches-any" : [
                98
              ]
            },
            "EBGP-CUST-NOEXP-PEER-NA" : {
              "route-policy community matches-any" : [
                88
              ]
            },
            "barbar_to_fooey_community_ipv4" : {
              "route-policy set community" : [
                52
              ]
            },
            "blackhole-all" : {
              "route-policy community matches-any" : [
                107,
                158
              ]
            },
            "blackhole-isp" : {
              "route-policy community matches-any" : [
                110
              ]
            },
            "chillmap" : {
              "route-policy community matches-any" : [
                141
              ]
            },
            "community_5555" : {
              "route-policy community matches-any" : [
                33
              ],
              "route-policy delete community [not] in" : [
                34
              ]
            },
            "fooey_blackhole_community" : {
              "route-policy community matches-any" : [
                5
              ]
            },
            "fooey_routes_community" : {
              "route-policy community matches-any" : [
                16
              ]
            },
            "scenes_No_Export" : {
              "route-policy community matches-any" : [
                120
              ]
            },
            "to-peers-backbone" : {
              "route-policy community matches-any" : [
                137
              ]
            },
            "wrn-expanded" : {
              "route-policy community matches-any" : [
                129,
                143
              ]
            },
            "wrn-squelch-40027" : {
              "route-policy community matches-any" : [
                126
              ]
            }
          },
          "prefix-set" : {
            "EBGP-PEER-BOGONS" : {
              "route-policy prefix-set" : [
                78
              ]
            },
            "EBGP-PEER-OTHER-UNDESIRABLES" : {
              "route-policy prefix-set" : [
                78
              ]
            },
            "EBGP-PEER-TOO-SPECIFIC" : {
              "route-policy prefix-set" : [
                80
              ]
            },
            "barbar_blackhole_routes" : {
              "route-policy prefix-set" : [
                5,
                51
              ]
            },
            "barbar_networks_ipv4" : {
              "route-policy prefix-set" : [
                51
              ]
            },
            "barbar_networks_ipv6" : {
              "route-policy prefix-set" : [
                21
              ]
            },
            "bippetyboppety_ipv4" : {
              "route-policy prefix-set" : [
                44,
                51
              ]
            },
            "local-peer-aggregates" : {
              "route-policy prefix-set" : [
                68
              ]
            },
            "null" : {
              "route-policy prefix-set" : [
                114
              ]
            },
            "remote-router-loopbacks" : {
              "route-policy prefix-set" : [
                66
              ]
            }
          }
        },
        "configs/ios_xr_router_static" : {
          "interface" : {
            "GigabitEthernet0/2/1/5.290" : {
              "router static route" : [
                16
              ]
            },
            "TenGigabitEthernet0/0/2/3" : {
              "router static route" : [
                7
              ]
            }
          }
        },
        "configs/ios_xr_ssh" : {
          "ipv4 acl" : {
            "ACL99" : {
              "ssh ipv4 access-list" : [
                6
              ]
            }
          },
          "ipv6 acl" : {
            "ipv6-vty-acl" : {
              "ssh ipv6 access-list" : [
                6
              ]
            }
          }
        },
        "configs/juniper_bgp" : {
          "policy-statement" : {
            "someexportpolicy" : {
              "bgp export policy-statement" : [
                10,
                20,
                27,
                36
              ]
            },
            "someimportpolicy" : {
              "bgp import policy-statement" : [
                13,
                22,
                29,
                38
              ]
            }
          }
        },
        "configs/juniper_bgp_authentication" : {
          "authentication-key-chain" : {
            "bgp-auth1" : {
              "authentication-key-chains policy" : [
                23
              ]
            }
          }
        },
        "configs/juniper_forwarding_options" : {
          "dhcp-relay server-group" : {
            "site-dhcp" : {
              "dhcp relay group active-server-group" : [
                8,
                13
              ]
            }
          },
          "interface" : {
            "et-0/0/10.0" : {
              "fowarding-options dhcp-relay group interface" : [
                15
              ]
            },
            "ge-0/2/5.0" : {
              "fowarding-options dhcp-relay group interface" : [
                18
              ]
            },
            "xe-1/0/0.0" : {
              "fowarding-options dhcp-relay group interface" : [
                10
              ]
            }
          }
        },
        "configs/juniper_interfaces" : {
          "interface" : {
            "ge-0/0/1" : {
              "routing-instance interface" : [
                24
              ]
            }
          },
          "vlan" : {
            "bippetyboppety" : {
              "interface vlan" : [
                20
              ]
            }
          }
        },
        "configs/juniper_misc" : {
          "interface" : {
            "lo0.0" : {
              "routing-instances vtep-source-interface" : [
                9
              ]
            }
          }
        },
        "configs/juniper_ospf" : {
          "interface" : {
            "ae16.0" : {
              "ospf area interface" : [
                17,
                18,
                19,
                20,
                22,
                23
              ]
            },
            "xe-0/0/1.0" : {
              "ospf area interface" : [
                15
              ]
            },
            "xe-0/0/20:0.0" : {
              "ospf area interface" : [
                3,
                4,
                5,
                6
              ]
            },
            "xe-0/0/21:0.0" : {
              "ospf area interface" : [
                7
              ]
            }
          }
        },
        "configs/juniper_policy_statement" : {
          "routing-instance" : {
            "FORWARDING" : {
              "policy-statement from instance" : [
                17
              ]
            }
          }
        },
        "configs/juniper_relay" : {
          "interface" : {
            "irb.10" : {
              "fowarding-options dhcp-relay group interface" : [
                7
              ]
            },
            "irb.20" : {
              "fowarding-options dhcp-relay group interface" : [
                8
              ]
            }
          }
        },
        "configs/juniper_routing_policy" : {
          "interface" : {
            "ge-0/0/0.99" : {
              "policy-statement from interface" : [
                9
              ]
            }
          }
        },
        "configs/juniper_snmp" : {
          "prefix-list" : {
            "bippetyboo" : {
              "snmp community prefix-list" : [
                5
              ]
            }
          }
        },
        "configs/juniper_system" : {
          "logical-system" : {
            "ls905" : {
              "security-profile logical-system" : [
                21
              ]
            }
          }
        },
        "configs/named_and_numbered_lists" : {
          "ipv4 acl" : {
            "1" : {
              "route-map match ipv4 access-list" : [
                5
              ]
            },
            "2" : {
              "route-map match ipv4 access-list" : [
                5
              ]
            },
            "4" : {
              "route-map match ipv4 access-list" : [
                5
              ]
            },
            "456def" : {
              "route-map match ipv4 access-list" : [
                5
              ]
            },
            "5" : {
              "route-map match ipv4 access-list" : [
                5
              ]
            },
            "95qrs5" : {
              "route-map match ipv4 access-list" : [
                5
              ]
            },
            "a4" : {
              "route-map match ipv4 access-list" : [
                5
              ]
            },
            "abc123" : {
              "route-map match ipv4 access-list" : [
                5
              ]
            }
          }
        },
        "configs/neighbor_nxos" : {
          "bgp template peer" : {
            "KLMN" : {
              "inherited BGP peer" : [
                8
              ]
            }
          }
        },
        "configs/nexus_bgp" : {
          "route-map" : {
            "BLIB" : {
              "bgp otherwise in/outbound route-map" : [
                22
              ]
            },
            "BLIBB" : {
              "bgp otherwise in/outbound route-map" : [
                19
              ]
            },
            "BLOBB" : {
              "bgp redistribute connected route-map" : [
                16
              ]
            },
            "EG_CCC" : {
              "bgp outbound route-map" : [
                30
              ]
            },
            "IN_BBB" : {
              "bgp inbound route-map" : [
                29
              ]
            }
          }
        },
        "configs/nxos_ospf" : {
          "route-map" : {
            "RM_OSPF_DIRECT" : {
              "ospf redistribute connected route-map" : [
                20,
                25
              ]
            },
            "RM_OSPF_STATIC" : {
              "ospf redistribute static route-map" : [
                21
              ]
            }
          }
        },
        "configs/peer_template" : {
          "interface" : {
            "Loopback1" : {
              "update-source interface" : [
                16
              ]
            }
          },
          "route-map" : {
            "PROTECT-LEAF" : {
              "bgp inbound route-map" : [
                19
              ]
            }
          }
        },
        "configs/route_policy_as_path" : {
          "community-set" : {
            "13979:90" : {
              "route-policy set community" : [
                7
              ]
            },
            "SOCAL-USERS" : {
              "route-policy community matches-any" : [
                5
              ]
            }
          },
          "prefix-set" : {
            "CENIC_DC_Internal" : {
              "route-policy prefix-set" : [
                25
              ]
            },
            "classful_default" : {
              "route-policy prefix-set" : [
                14
              ]
            }
          }
        },
        "configs/route_policy_igp_cost" : {
          "community-set" : {
            "DC_AT_MEMBERS" : {
              "route-policy community matches-any" : [
                5
              ]
            },
            "DC_CF_COMMODITY_PEER" : {
              "route-policy community matches-any" : [
                5
              ]
            },
            "DC_CF_ISP" : {
              "route-policy community matches-any" : [
                5
              ]
            },
            "HPR_CF_RE_PEER" : {
              "route-policy community matches-any" : [
                5
              ]
            },
            "No_Export" : {
              "route-policy community matches-any" : [
                7
              ]
            }
          }
        },
        "configs/route_policy_metric_type" : {
          "community-set" : {
            "No_Export" : {
              "route-policy community matches-any" : [
                5
              ]
            }
          },
          "prefix-set" : {
            "DC_Internal" : {
              "route-policy prefix-set" : [
                7
              ]
            }
          }
        },
        "configs/route_policy_param" : {
          "community-set" : {
            "blackhole-all" : {
              "route-policy community matches-any" : [
                13
              ]
            }
          },
          "prefix-set" : {
            "$cust_v4_pfx" : {
              "route-policy prefix-set" : [
                5
              ]
            }
          }
        },
        "configs/underscore_variable" : {
          "ipv4 prefix-list" : {
            "ABC_DEF" : {
              "route-map match ipv4 prefix-list" : [
                5
              ]
            },
            "_GHI" : {
              "route-map match ipv4 prefix-list" : [
                5
              ]
            }
          }
        },
        "configs/variables" : {
          "ipv4 acl" : {
            "ABC_def.gh_vlan789_out_20000101" : {
              "interface outgoing ip access-list" : [
                5
              ]
            }
          }
        },
        "configs/variables_dos" : {
          "ipv4 acl" : {
            "ABC_def.gh_vlan789_out_20000101" : {
              "interface outgoing ip access-list" : [
                5
              ]
            }
          }
        },
        "configs/vlan_access_map2" : {
          "undeclared bgp peer" : {
            "10.10.212.233" : {
              "bgp neighbor without remote-as" : [
                20
              ]
            }
          }
        }
      },
      "version" : "0.36.0",
      "warnings" : {
        "address_family" : {
          "Red flags" : [
            {
              "tag" : "MISCELLANEOUS",
              "text" : "Could not determine update source for BGP neighbor: '1.2.3.4'"
            }
          ]
        },
        "arista_ospf" : {
          "Red flags" : [
            {
              "tag" : "MISCELLANEOUS",
              "text" : "No candidates for OSPF router-id"
            }
          ]
        },
        "bgp-enforce-first-as" : {
          "Red flags" : [
            {
              "tag" : "MISCELLANEOUS",
              "text" : "Could not determine local ip for bgp peering with neighbor ip: 1.1.1.1"
            }
          ]
        },
        "bgp_address_family" : {
          "Red flags" : [
            {
              "tag" : "MISCELLANEOUS",
              "text" : "Could not determine update source for BGP neighbor: '1.10.1.1'"
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "Could not determine update source for BGP neighbor: '10.12.11.2'"
            }
          ]
        },
        "bgp_route_policy" : {
          "Red flags" : [
            {
              "tag" : "MISCELLANEOUS",
              "text" : "Could not determine update source for BGP neighbor: '64.57.21.1'"
            }
          ]
        },
        "cisco_bgp" : {
          "Red flags" : [
            {
              "tag" : "MISCELLANEOUS",
              "text" : "Could not determine update source for BGP neighbor: '10.0.1.2'"
            }
          ]
        },
        "cisco_crypto" : {
          "Red flags" : [
            {
              "tag" : "MISCELLANEOUS",
              "text" : "Cannot find keyring VRF:MMS:RMT:UPM:1143 for ISAKMP profile myprofile"
            }
          ]
        },
        "cisco_eigrp" : {
          "Red flags" : [
            {
              "tag" : "MISCELLANEOUS",
              "text" : "No candidates for EIGRP (AS 4) router-id"
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "No candidates for EIGRP (AS 6) router-id"
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "No candidates for EIGRP (AS 65500) router-id"
            }
          ]
        },
        "cisco_interface" : {
          "Red flags" : [
            {
              "tag" : "MISCELLANEOUS",
              "text" : "Interface: 'Ethernet0' contains OSPF settings, but there is no OSPF process"
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "Interface: 'Ethernet0' contains EIGRP settings but is not part of an EIGRP process"
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "Interface: 'inside' contains OSPF settings, but there is no OSPF process"
            }
          ]
        },
        "cisco_nxos_bgp" : {
          "Red flags" : [
            {
              "tag" : "MISCELLANEOUS",
              "text" : "Router-id is not manually configured for BGP process in VRF default. Unable to infer default router-id as no interfaces have IP addresses"
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "No supported address-family configured for BGP neighbor 4.4.4.4 in vrf default"
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "No supported address-family configured for BGP neighbor 3.3.3.3 in vrf default"
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "BGP neighbor 2.2.2.2 in vrf default: could not determine update source"
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "No supported address-family configured for BGP neighbor 123.123.123.0/24 in vrf default"
            }
          ]
        },
        "cisco_ospf" : {
          "Red flags" : [
            {
              "tag" : "MISCELLANEOUS",
              "text" : "Interface: 'Ethernet1/0' contains OSPF settings, but there is no OSPF process"
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "OSPF process default:1 in cisco_ospf uses distribute-list of type ROUTE_MAP, only prefix-lists are supported in dist-lists by Batfish"
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "OSPF process default:1 in cisco_ospf uses distribute-list of type ACCESS_LIST, only prefix-lists are supported in dist-lists by Batfish"
            }
          ]
        },
        "cisco_ospf_multi_process" : {
          "Red flags" : [
            {
              "tag" : "1",
              "text" : "Multiple OSPF processes are not supported, choosing the last defined OSPF process with id %s"
            }
          ]
        },
        "cumulus_nclu" : {
          "Red flags" : [
            {
              "tag" : "MISCELLANEOUS",
              "text" : "No support for VLAN switching options on non-'bridge bridge' port: 'swp2'"
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "No support for VLAN switching options on non-'bridge bridge' port: 'swp1'"
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "No support for VLAN switching options on non-'bridge bridge' port: 'bond2'"
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "No support for VLAN switching options on non-'bridge bridge' port: 'bond1'"
            }
          ]
        },
        "f5_bigip_imish_malformed" : {
          "Red flags" : [
            {
              "tag" : "MISCELLANEOUS",
              "text" : "Could not determine update source for BGP neighbor: '3.3.3.3'"
            }
          ]
        },
        "f5_bigip_structured_ltm" : {
          "Red flags" : [
            {
              "tag" : "MISCELLANEOUS",
              "text" : "Virtual '/Common/SOME_VIRTUAL' refers to missing destination '/Common/192.0.2.7'"
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "Virtual '/Common/SOME_VIRTUAL' refers to missing destination '/Common/192.0.2.7'"
            }
          ]
        },
        "f5_bigip_structured_malformed" : {
          "Red flags" : [
            {
              "tag" : "MISCELLANEOUS",
              "text" : "Cannot convert /Common/mixed_protocols1 to static route because it has mixed IPv4 and IPv6 information"
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "Cannot convert /Common/missing_gw to static route because it is missing default gateway"
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "Cannot convert /Common/missing_network to static route because it is missing network"
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "Cannot convert /Common/mixed_protocols2 to static route because it has mixed IPv4 and IPv6 information"
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "Cannot convert /Common/bad_gw to static route because it is missing default gateway"
            }
          ]
        },
        "f5_bigip_structured_net_routing_bgp" : {
          "Red flags" : [
            {
              "tag" : "MISCELLANEOUS",
              "text" : "Could not determine update source for BGP neighbor: '192.0.2.1'"
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "Ignoring reference to missing outbound route-map: /Common/MY_IPV4_OUT"
            }
          ]
        },
        "f5_bigip_structured_with_imish" : {
          "Red flags" : [
            {
              "tag" : "MISCELLANEOUS",
              "text" : "Could not determine update source for BGP neighbor: '10.0.0.1'"
            }
          ]
        },
        "ios_xr_bgp_neighbor_group" : {
          "Red flags" : [
            {
              "tag" : "MISCELLANEOUS",
              "text" : "Could not determine update source for BGP neighbor: '1.2.1.2'"
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "Could not determine update source for BGP neighbor: '1.2.1.3'"
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "Could not determine update source for BGP neighbor: '1.2.1.1'"
            }
          ]
        },
        "ios_xr_isis" : {
          "Red flags" : [
            {
              "tag" : "MISCELLANEOUS",
              "text" : "Cannot create IS-IS process without specifying net-address"
            }
          ]
        },
        "juniper-ospf" : {
          "Red flags" : [
            {
              "tag" : "MISCELLANEOUS",
              "text" : "Cannot assign interface ae16.0 to area 0.1.2.3 because it has no IP address."
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "Cannot assign interface xe-0/0/1.0 to area 0.1.2.3 because it has no IP address."
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "Cannot assign interface xe-0/0/20:0.0 to area 0.1.2.3 because it has no IP address."
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "Cannot assign interface xe-0/0/21:0.0 to area 0.1.2.3 because it has no IP address."
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "No candidates for OSPF router-id"
            }
          ]
        },
        "juniper-tcpflags" : {
          "Red flags" : [
            {
              "tag" : "MISCELLANEOUS",
              "text" : "missing action in firewall filter: 'foo', term: 'bar'"
            }
          ]
        },
        "juniper_bgp" : {
          "Red flags" : [
            {
              "tag" : "MISCELLANEOUS",
              "text" : "Missing local-as for neighbor: 1.2.3.5/32"
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "Currently do not support mixed multipath-multiple-as/non-multipath-multiple-as bgpgroups on Juniper - FORCING NON-MULTIPATH-MULTIPLE-AS"
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "Missing local-as for neighbor: 3.4.5.6/32"
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "Could not determine local ip for bgp peering with neighbor ip: 3.4.5.7"
            }
          ]
        },
        "juniper_bgp_authentication" : {
          "Red flags" : [
            {
              "tag" : "MISCELLANEOUS",
              "text" : "Both authentication-key and authentication-key-chain specified for neighbor 172.16.2.1/32"
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "Could not determine local ip for bgp peering with neighbor ip: 172.16.2.1"
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "Could not determine local ip for bgp peering with neighbor ip: 172.16.2.2"
            }
          ]
        },
        "juniper_firewall" : {
          "Red flags" : [
            {
              "tag" : "MISCELLANEOUS",
              "text" : "missing action in firewall filter: 'blah', term: 'blorp'"
            }
          ]
        },
        "juniper_ospf_stub_areas" : {
          "Red flags" : [
            {
              "tag" : "MISCELLANEOUS",
              "text" : "No candidates for OSPF router-id"
            }
          ]
        },
        "juniper_rib_groups" : {
          "Red flags" : [
            {
              "tag" : "MISCELLANEOUS",
              "text" : "Missing local-as for neighbor: 1.1.1.1/32"
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "Missing local-as for neighbor: 1.1.1.1/32"
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "Missing local-as for neighbor: 1.1.1.1/32"
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "Missing local-as for neighbor: 1.1.1.1/32"
            }
          ]
        },
        "juniper_rib_groups~logical_system~logicalsystem" : {
          "Red flags" : [
            {
              "tag" : "MISCELLANEOUS",
              "text" : "Missing local-as for neighbor: 1.1.1.1/32"
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "Missing local-as for neighbor: 1.1.1.1/32"
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "Missing local-as for neighbor: 1.1.1.1/32"
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "Missing local-as for neighbor: 1.1.1.1/32"
            }
          ]
        },
        "juniper_security" : {
          "Red flags" : [
            {
              "tag" : "MISCELLANEOUS",
              "text" : "missing action in firewall filter: 'zone~A~to~zone~B', term: '123-4'"
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "missing action in firewall filter: '~GLOBAL_SECURITY_POLICY~', term: 'p1'"
            }
          ]
        },
        "nat-08c21704416f06046" : {
          "Red flags" : [
            {
              "tag" : "MISCELLANEOUS",
              "text" : "NAT functionality not yet implemented for nat-08c21704416f06046"
            }
          ]
        },
        "nat-09fd8f73171d2d9a3" : {
          "Red flags" : [
            {
              "tag" : "MISCELLANEOUS",
              "text" : "NAT functionality not yet implemented for nat-09fd8f73171d2d9a3"
            }
          ]
        },
        "neighbor_mix" : {
          "Red flags" : [
            {
              "tag" : "MISCELLANEOUS",
              "text" : "Could not determine update source for BGP neighbor: '1.1.1.1'"
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "Could not determine update source for BGP neighbor: '3.3.3.3'"
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "Could not determine update source for BGP neighbor: '4.4.4.4'"
            }
          ]
        },
        "neighbor_nxos" : {
          "Red flags" : [
            {
              "tag" : "MISCELLANEOUS",
              "text" : "Router-id is not manually configured for BGP process in VRF default. Unable to infer default router-id as no interfaces have IP addresses"
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "No supported address-family configured for BGP neighbor 10.1.1.0/25 in vrf default"
            }
          ]
        },
        "nexus_bgp" : {
          "Red flags" : [
            {
              "tag" : "MISCELLANEOUS",
              "text" : "Router-id is not manually configured for BGP process in VRF default. Unable to infer default router-id as no interfaces have IP addresses"
            }
          ]
        },
        "non_nexus_neighbor_af" : {
          "Red flags" : [
            {
              "tag" : "MISCELLANEOUS",
              "text" : "Could not determine update source for BGP neighbor: '10.0.0.0'"
            }
          ]
        },
        "nxos_bgp" : {
          "Red flags" : [
            {
              "tag" : "MISCELLANEOUS",
              "text" : "Router-id is not manually configured for BGP process in VRF default. Unable to infer default router-id as no interfaces have IP addresses"
            }
          ]
        },
        "peer_template" : {
          "Red flags" : [
            {
              "tag" : "MISCELLANEOUS",
              "text" : "Router-id is not manually configured for BGP process in VRF default. Unable to infer default router-id as no interfaces have IP addresses"
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "BGP neighbor 100.93.100.16 in vrf default: could not determine update source"
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "BGP neighbor 10.98.25.0/25 in vrf default: configured update-source Loopback1 does not exist or is not associated with this vrf"
            }
          ]
        },
        "route_maps_in_two_address_families" : {
          "Red flags" : [
            {
              "tag" : "MISCELLANEOUS",
              "text" : "Router-id is not manually configured for BGP process in VRF default. Unable to infer default router-id as no interfaces have IP addresses"
            },
            {
              "tag" : "MISCELLANEOUS",
              "text" : "BGP neighbor 1.1.1.1 in vrf default: could not determine update source"
            }
          ]
        },
        "vmx4" : {
          "Red flags" : [
            {
              "tag" : "MISCELLANEOUS",
              "text" : "Currently do not support mixed multipath-multiple-as/non-multipath-multiple-as bgpgroups on Juniper - FORCING NON-MULTIPATH-MULTIPLE-AS"
            }
          ]
        }
      }
    },
    {
      "class" : "org.batfish.datamodel.answers.InitInfoAnswerElement",
      "parseStatus" : {
        "configs/aaa_accounting" : "PASSED",
        "configs/aaa_authentication_login_default_tacacs_local" : "PASSED",
        "configs/aaa_group_server_source_interface" : "PASSED",
        "configs/access_list" : "PASSED",
        "configs/address_family" : "PASSED",
        "configs/arista-event-handler" : "PASSED",
        "configs/arista-logging" : "PASSED",
        "configs/arista_acl" : "PASSED",
        "configs/arista_bgp" : "PASSED",
        "configs/arista_dhcp_relay" : "PASSED",
        "configs/arista_interface" : "PASSED",
        "configs/arista_ip_route" : "PASSED",
        "configs/arista_misc" : "PASSED",
        "configs/arista_nat" : "PASSED",
        "configs/arista_ospf" : "PASSED",
        "configs/arista_queue_monitor" : "PASSED",
        "configs/arista_username" : "PASSED",
        "configs/arista_vrf" : "PASSED",
        "configs/aruba_aaa" : "PASSED",
        "configs/aruba_acl" : "PASSED",
        "configs/aruba_airgroup" : "PASSED",
        "configs/aruba_crypto" : "PASSED",
        "configs/aruba_dhcp" : "PASSED",
        "configs/aruba_interface" : "PASSED",
        "configs/aruba_logging" : "PASSED",
        "configs/aruba_misc" : "PASSED",
        "configs/aruba_net" : "PASSED",
        "configs/aruba_snmp" : "PASSED",
        "configs/aruba_time_range" : "PASSED",
        "configs/aruba_user_role" : "PASSED",
        "configs/aruba_vlan" : "PASSED",
        "configs/aruba_voice" : "PASSED",
        "configs/aruba_vpn" : "PASSED",
        "configs/as_path_prepend" : "PASSED",
        "configs/asa_acl" : "PASSED",
        "configs/asa_banner" : "PASSED",
        "configs/asa_interface" : "PASSED",
        "configs/asa_nat" : "PASSED",
        "configs/asa_object_groups" : "PASSED",
        "configs/asa_ospf" : "PASSED",
        "configs/asa_ssh" : "PASSED",
        "configs/banner" : "PASSED",
        "configs/banner_dos" : "PASSED",
        "configs/bgp_address_family" : "PASSED",
        "configs/bgp_default_originate_policy" : "PASSED",
        "configs/bgp_foundry" : "PASSED",
        "configs/bgp_nsr" : "PASSED",
        "configs/bgp_route_policy" : "PASSED",
        "configs/cadant_acl" : "PASSED",
        "configs/cadant_banner" : "PASSED",
        "configs/cadant_bgp" : "PASSED",
        "configs/cadant_cable" : "PASSED",
        "configs/cadant_interface" : "PASSED",
        "configs/cadant_ip_route" : "PASSED",
        "configs/cadant_isis" : "PASSED",
        "configs/cadant_line" : "PASSED",
        "configs/cadant_logging" : "PASSED",
        "configs/cadant_misc" : "PASSED",
        "configs/cadant_prefix_list" : "PASSED",
        "configs/cadant_qos" : "PASSED",
        "configs/cadant_rip" : "PASSED",
        "configs/cadant_route_map" : "PASSED",
        "configs/cadant_snmp" : "PASSED",
        "configs/cisco_aaa" : "PASSED",
        "configs/cisco_acl" : "PASSED",
        "configs/cisco_additional_paths" : "PASSED",
        "configs/cisco_authentication" : "PASSED",
        "configs/cisco_bgp" : "PASSED",
        "configs/cisco_bgp_confederation" : "PASSED",
        "configs/cisco_cable" : "PASSED",
        "configs/cisco_callhome" : "PASSED",
        "configs/cisco_control_plane" : "PASSED",
        "configs/cisco_controller" : "PASSED",
        "configs/cisco_crypto" : "PASSED",
        "configs/cisco_dhcp" : "PASSED",
        "configs/cisco_domain" : "PASSED",
        "configs/cisco_dot11" : "PASSED",
        "configs/cisco_dot1x" : "PASSED",
        "configs/cisco_dscpfarm" : "PASSED",
        "configs/cisco_dynamic_access_policy_record" : "PASSED",
        "configs/cisco_eigrp" : "PASSED",
        "configs/cisco_enable" : "PASSED",
        "configs/cisco_flow" : "PASSED",
        "configs/cisco_hardware" : "PASSED",
        "configs/cisco_hsrp" : "PASSED",
        "configs/cisco_interface" : "PASSED",
        "configs/cisco_ios_neighbor" : "PASSED",
        "configs/cisco_ip" : "PASSED",
        "configs/cisco_ip_nat" : "PASSED",
        "configs/cisco_ip_route" : "PASSED",
        "configs/cisco_ipsla" : "PASSED",
        "configs/cisco_ipv6" : "PASSED",
        "configs/cisco_ipv6_access_list" : "PASSED",
        "configs/cisco_isis" : "PASSED",
        "configs/cisco_l2tp" : "PASSED",
        "configs/cisco_line" : "PASSED",
        "configs/cisco_logging" : "PASSED",
        "configs/cisco_mac_acl" : "PASSED",
        "configs/cisco_misc" : "PASSED",
        "configs/cisco_monitor" : "PASSED",
        "configs/cisco_mpls" : "PASSED",
        "configs/cisco_multicast" : "PASSED",
        "configs/cisco_noipns" : "PASSED",
        "configs/cisco_nomaskreply" : "PASSED",
        "configs/cisco_nosnmp" : "PASSED",
        "configs/cisco_ntp" : "PASSED",
        "configs/cisco_nxos" : "PASSED",
        "configs/cisco_nxos_bgp" : "PASSED",
        "configs/cisco_opsfv3" : "PASSED",
        "configs/cisco_ospf" : "PASSED",
        "configs/cisco_ospf_ipv6" : "PASSED",
        "configs/cisco_ospf_multi_process" : "PASSED",
        "configs/cisco_pim" : "PASSED",
        "configs/cisco_platform" : "PASSED",
        "configs/cisco_privilege" : "PASSED",
        "configs/cisco_qos" : "PASSED",
        "configs/cisco_queue_monitor" : "PASSED",
        "configs/cisco_redundancy" : "PASSED",
        "configs/cisco_rip" : "PASSED",
        "configs/cisco_role" : "PASSED",
        "configs/cisco_route_map" : "PASSED",
        "configs/cisco_sccp" : "PASSED",
        "configs/cisco_snmp" : "PASSED",
        "configs/cisco_spanning_tree" : "PASSED",
        "configs/cisco_ssh" : "PASSED",
        "configs/cisco_stcapp" : "PASSED",
        "configs/cisco_style_acl1" : "PASSED",
        "configs/cisco_style_acl2" : "PASSED",
        "configs/cisco_system" : "PASSED",
        "configs/cisco_tacacs" : "PASSED",
        "configs/cisco_track" : "PASSED",
        "configs/cisco_username" : "PASSED",
        "configs/cisco_username_without_password" : "PASSED",
        "configs/cisco_vdc" : "PASSED",
        "configs/cisco_vlan" : "PASSED",
        "configs/cisco_voice" : "PASSED",
        "configs/cisco_vpdn" : "PASSED",
        "configs/cisco_vpn" : "PASSED",
        "configs/cisco_vrf" : "PASSED",
        "configs/cisco_vrrp" : "PASSED",
        "configs/cisco_webvpn" : "PASSED",
        "configs/cisco_wsma" : "PASSED",
        "configs/cisco_zone" : "PASSED",
        "configs/colon_in_vrf" : "PASSED",
        "configs/community_list_named" : "PASSED",
        "configs/community_name_numbers" : "PASSED",
        "configs/community_name_numbers_dos" : "PASSED",
        "configs/community_set" : "PASSED",
        "configs/cumulus_nclu" : "PASSED",
        "configs/cumulus_nclu_invalid_bonds" : "PASSED",
        "configs/cumulus_nclu_invalid_interfaces" : "PASSED",
        "configs/cumulus_nclu_invalid_vrfs" : "PASSED",
        "configs/cumulus_nclu_invalid_vxlans" : "PASSED",
        "configs/eos_mlag" : "PASSED",
        "configs/eos_trunk_group" : "PASSED",
        "configs/f5_bigip_imish_malformed" : "PASSED",
        "configs/f5_bigip_structured_ltm" : "PARTIALLY_UNRECOGNIZED",
        "configs/f5_bigip_structured_malformed" : "PASSED",
        "configs/f5_bigip_structured_net" : "PARTIALLY_UNRECOGNIZED",
        "configs/f5_bigip_structured_net_routing_bgp" : "PARTIALLY_UNRECOGNIZED",
        "configs/f5_bigip_structured_net_routing_prefix_list" : "PASSED",
        "configs/f5_bigip_structured_net_routing_route_map" : "PASSED",
        "configs/f5_bigip_structured_sys" : "PARTIALLY_UNRECOGNIZED",
        "configs/f5_bigip_structured_with_imish" : "PASSED",
        "configs/foundry_access_list" : "PASSED",
        "configs/foundry_bgp" : "PASSED",
        "configs/foundry_interface" : "PASSED",
        "configs/foundry_misc" : "PASSED",
        "configs/foundry_vlan_group" : "PASSED",
        "configs/gh-2658-juniper-vrf-import-export.cfg" : "PASSED",
        "configs/host2" : "PASSED",
        "configs/if_tag_is" : "PASSED",
        "configs/interface_exit" : "PASSED",
        "configs/interface_name" : "PASSED",
        "configs/interface_sdr" : "PASSED",
        "configs/ios_bfd" : "PASSED",
        "configs/ios_bgp" : "PASSED",
        "configs/ios_bgp_aggregate_address" : "PASSED",
        "configs/ios_interface" : "PASSED",
        "configs/ios_standby" : "PASSED",
        "configs/ios_template" : "PASSED",
        "configs/ios_xr_acl" : "PASSED",
        "configs/ios_xr_bgp" : "PASSED",
        "configs/ios_xr_bgp_neighbor_group" : "PASSED",
        "configs/ios_xr_class_map" : "PASSED",
        "configs/ios_xr_community_set" : "PASSED",
        "configs/ios_xr_isis" : "PASSED",
        "configs/ios_xr_l2vpn" : "PASSED",
        "configs/ios_xr_logging" : "PASSED",
        "configs/ios_xr_misc" : "PASSED",
        "configs/ios_xr_multicast" : "PASSED",
        "configs/ios_xr_multicast_routing" : "PASSED",
        "configs/ios_xr_multipart" : "PASSED",
        "configs/ios_xr_ntp" : "PASSED",
        "configs/ios_xr_ospf" : "PASSED",
        "configs/ios_xr_prefix_set" : "PASSED",
        "configs/ios_xr_route_policy" : "PASSED",
        "configs/ios_xr_router_static" : "PASSED",
        "configs/ios_xr_ssh" : "PASSED",
        "configs/ios_xr_taskgroup" : "PASSED",
        "configs/ip_default_route_classless" : "PASSED",
        "configs/ip_prefix_list_single_line" : "PASSED",
        "configs/isr_crypto" : "PASSED",
        "configs/isr_voip" : "PASSED",
        "configs/juniper-interfaces" : "PASSED",
        "configs/juniper-tcpflags" : "PASSED",
        "configs/juniper_application" : "PASSED",
        "configs/juniper_apply_macro" : "PASSED",
        "configs/juniper_as_path_group" : "PASSED",
        "configs/juniper_bgp" : "PASSED",
        "configs/juniper_bgp_allow" : "PASSED",
        "configs/juniper_bgp_authentication" : "PASSED",
        "configs/juniper_bgp_disable" : "PASSED",
        "configs/juniper_bgp_enforce_fist_as" : "PASSED",
        "configs/juniper_bgp_remove_private_as" : "PASSED",
        "configs/juniper_extended_community" : "PASSED",
        "configs/juniper_firewall" : "PASSED",
        "configs/juniper_forwarding_options" : "PASSED",
        "configs/juniper_interfaces" : "PASSED",
        "configs/juniper_isis" : "PASSED",
        "configs/juniper_l2_learning" : "PASSED",
        "configs/juniper_misc" : "PASSED",
        "configs/juniper_nat" : "PASSED",
        "configs/juniper_ntp" : "PASSED",
        "configs/juniper_ospf" : "PASSED",
        "configs/juniper_ospf_disable" : "PASSED",
        "configs/juniper_ospf_stub_areas" : "PASSED",
        "configs/juniper_passwords" : "PASSED",
        "configs/juniper_policy_statement" : "PASSED",
        "configs/juniper_relay" : "PASSED",
        "configs/juniper_reth_interfaces" : "PASSED",
        "configs/juniper_rib_groups" : "PASSED",
        "configs/juniper_route_filter" : "PASSED",
        "configs/juniper_routing_options" : "PASSED",
        "configs/juniper_routing_policy" : "PASSED",
        "configs/juniper_security" : "PASSED",
        "configs/juniper_snmp" : "PASSED",
        "configs/juniper_syslog" : "PASSED",
        "configs/juniper_system" : "PASSED",
        "configs/juniper_tacplus" : "PASSED",
        "configs/juniper_trailing_space" : "PASSED",
        "configs/juniper_vlan" : "PASSED",
        "configs/local_v6_addr" : "PASSED",
        "configs/mac_access_list" : "PASSED",
        "configs/mos_application" : "UNSUPPORTED",
        "configs/mos_interface" : "PASSED",
        "configs/mos_misc" : "PASSED",
        "configs/msdp_originator_id" : "PASSED",
        "configs/named_and_numbered_lists" : "PASSED",
        "configs/neighbor_mix" : "PASSED",
        "configs/neighbor_nxos" : "PASSED",
        "configs/network6" : "PASSED",
        "configs/nexus" : "PASSED",
        "configs/nexus_bgp" : "PASSED",
        "configs/nexus_ntp" : "PASSED",
        "configs/nexus_ssh" : "PASSED",
        "configs/no_aaa_group_server" : "PASSED",
        "configs/non_nexus_neighbor_af" : "PASSED",
        "configs/nxos_acl" : "PASSED",
        "configs/nxos_bgp" : "PASSED",
        "configs/nxos_interface" : "PASSED",
        "configs/nxos_misc" : "PASSED",
        "configs/nxos_ospf" : "PASSED",
        "configs/nxos_route_map_continue" : "PASSED",
        "configs/nxos_system" : "PASSED",
        "configs/openflow" : "PASSED",
        "configs/peer_template" : "PASSED",
        "configs/pim" : "PASSED",
        "configs/pim_snooping" : "PASSED",
        "configs/prefix_list_ipv4" : "PASSED",
        "configs/route_maps_in_two_address_families" : "PASSED",
        "configs/route_policy_as_path" : "PASSED",
        "configs/route_policy_igp_cost" : "PASSED",
        "configs/route_policy_metric_type" : "PASSED",
        "configs/route_policy_param" : "PASSED",
        "configs/router_msdp" : "PASSED",
        "configs/set_inline_community" : "PASSED",
        "configs/statistics" : "PASSED",
        "configs/switchport_range" : "PASSED",
        "configs/syslog_source_interface" : "PASSED",
        "configs/taskgroup" : "PASSED",
        "configs/tcpflags" : "PASSED",
        "configs/underscore_variable" : "PASSED",
        "configs/variables" : "PASSED",
        "configs/variables_dos" : "PASSED",
        "configs/vlan_access_map2" : "PASSED",
        "configs/vrf_context" : "PASSED",
        "configs/vxlan" : "PASSED",
        "hosts/host1.json" : "PASSED",
        "hosts/host2.json" : "PASSED",
        "hosts/hostEmpty.json" : "EMPTY",
        "iptables/host1.iptables" : "PASSED",
        "iptables/host2.iptables" : "PASSED"
      }
    }
  ],
  "status" : "SUCCESS",
  "summary" : {
    "numFailed" : 0,
    "numPassed" : 0,
    "numResults" : 0
  }
}