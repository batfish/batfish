{
  "answerElements" : [
    {
      "class" : "org.batfish.datamodel.answers.ParseVendorConfigurationAnswerElement",
      "fileFormats" : {
        "configs/as1border1.cfg" : "FLAT_JUNIPER",
        "configs/as1border2.cfg" : "FLAT_JUNIPER",
        "configs/as1core1.cfg" : "CISCO_IOS",
        "configs/as2border1.cfg" : "CISCO_IOS",
        "configs/as2border2.cfg" : "CISCO_IOS",
        "configs/as2core1.cfg" : "CISCO_IOS",
        "configs/as2core2.cfg" : "CISCO_IOS",
        "configs/as2dept1.cfg" : "CISCO_IOS",
        "configs/as2dist1.cfg" : "CISCO_IOS",
        "configs/as2dist2.cfg" : "CISCO_IOS",
        "configs/as2host1.cfg" : "CISCO_IOS",
        "configs/as3border1.cfg" : "CISCO_IOS",
        "configs/as3border2.cfg" : "CISCO_IOS",
        "configs/as3core1.cfg" : "CISCO_IOS"
      },
      "fileMap" : {
        "as1border1" : [
          "configs/as1border1.cfg"
        ],
        "as1border2" : [
          "configs/as1border2.cfg"
        ],
        "as1core1" : [
          "configs/as1core1.cfg"
        ],
        "as2border1" : [
          "configs/as2border1.cfg"
        ],
        "as2border2" : [
          "configs/as2border2.cfg"
        ],
        "as2core1" : [
          "configs/as2core1.cfg"
        ],
        "as2core2" : [
          "configs/as2core2.cfg"
        ],
        "as2dept1" : [
          "configs/as2dept1.cfg"
        ],
        "as2dist1" : [
          "configs/as2dist1.cfg"
        ],
        "as2dist2" : [
          "configs/as2dist2.cfg"
        ],
        "as2host1" : [
          "configs/as2host1.cfg"
        ],
        "as3border1" : [
          "configs/as3border1.cfg"
        ],
        "as3border2" : [
          "configs/as3border2.cfg"
        ],
        "as3core1" : [
          "configs/as3core1.cfg"
        ]
      },
      "parseStatus" : {
        "configs/as1border1.cfg" : "PASSED",
        "configs/as1border2.cfg" : "PASSED",
        "configs/as1core1.cfg" : "PASSED",
        "configs/as2border1.cfg" : "PASSED",
        "configs/as2border2.cfg" : "PASSED",
        "configs/as2core1.cfg" : "PASSED",
        "configs/as2core2.cfg" : "PASSED",
        "configs/as2dept1.cfg" : "PASSED",
        "configs/as2dist1.cfg" : "PASSED",
        "configs/as2dist2.cfg" : "PASSED",
        "configs/as2host1.cfg" : "PASSED",
        "configs/as3border1.cfg" : "PASSED",
        "configs/as3border2.cfg" : "PASSED",
        "configs/as3core1.cfg" : "PASSED"
      },
      "parseTrees" : {
        "configs/as1border1.cfg" : {
          "sentences" : [
            "(flat_juniper_configuration",
            "  (set_line*",
            "    SET:'set'",
            "    (set_line_tail*",
            "      (statement*",
            "        (s_common*",
            "          (s_system*",
            "            SYSTEM:'system'",
            "            (sy_host_name",
            "              HOST_NAME:'host-name'",
            "              name = (junos_name*",
            "                NAME:'as1border1'  <== mode:M_Name))))))",
            "    NEWLINE:'\\n')",
            "  (set_line*",
            "    SET:'set'",
            "    (set_line_tail*",
            "      (statement*",
            "        (s_common*",
            "          (s_interfaces*",
            "            INTERFACES:'interfaces'",
            "            (int_named",
            "              (interface_id*",
            "                INTERFACE_ID:'lo0'  <== mode:M_Interface)",
            "              (i_unit",
            "                UNIT:'unit'",
            "                num = (dec*",
            "                  UINT8:'0')",
            "                (i_common*",
            "                  (i_family*",
            "                    FAMILY:'family'",
            "                    (if_inet*",
            "                      INET:'inet'",
            "                      (ifi_address",
            "                        ADDRESS:'address'",
            "                        (ip_prefix*",
            "                          IP_PREFIX:'1.1.1.1/32')))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line*",
            "    SET:'set'",
            "    (set_line_tail*",
            "      (statement*",
            "        (s_common*",
            "          (s_interfaces*",
            "            INTERFACES:'interfaces'",
            "            (int_named",
            "              (interface_id*",
            "                INTERFACE_ID:'fe-0/0/0'  <== mode:M_Interface)",
            "              (i_unit",
            "                UNIT:'unit'",
            "                num = (dec*",
            "                  UINT8:'0')",
            "                (i_common*",
            "                  (i_family*",
            "                    FAMILY:'family'",
            "                    (if_inet*",
            "                      INET:'inet'",
            "                      (ifi_address",
            "                        ADDRESS:'address'",
            "                        (ip_prefix*",
            "                          IP_PREFIX:'1.0.1.1/24')))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line*",
            "    SET:'set'",
            "    (set_line_tail*",
            "      (statement*",
            "        (s_common*",
            "          (s_interfaces*",
            "            INTERFACES:'interfaces'",
            "            (int_named",
            "              (interface_id*",
            "                INTERFACE_ID:'fe-0/0/1'  <== mode:M_Interface)",
            "              (i_unit",
            "                UNIT:'unit'",
            "                num = (dec*",
            "                  UINT8:'0')",
            "                (i_common*",
            "                  (i_family*",
            "                    FAMILY:'family'",
            "                    (if_inet*",
            "                      INET:'inet'",
            "                      (ifi_address",
            "                        ADDRESS:'address'",
            "                        (ip_prefix*",
            "                          IP_PREFIX:'10.12.11.1/24')))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line*",
            "    SET:'set'",
            "    (set_line_tail*",
            "      (statement*",
            "        (s_common*",
            "          (s_protocols*",
            "            PROTOCOLS:'protocols'",
            "            (p_ospf*",
            "              OSPF:'ospf'",
            "              (o_common*",
            "                (o_area",
            "                  AREA:'area'",
            "                  area_ip = (ip_address*",
            "                    IP_ADDRESS:'0.0.0.1')",
            "                  (oa_interface",
            "                    INTERFACE:'interface'",
            "                    id = (interface_id*",
            "                      INTERFACE_ID:'lo0.0'  <== mode:M_Interface)",
            "                    (apply*)))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line*",
            "    SET:'set'",
            "    (set_line_tail*",
            "      (statement*",
            "        (s_common*",
            "          (s_protocols*",
            "            PROTOCOLS:'protocols'",
            "            (p_ospf*",
            "              OSPF:'ospf'",
            "              (o_common*",
            "                (o_area",
            "                  AREA:'area'",
            "                  area_ip = (ip_address*",
            "                    IP_ADDRESS:'0.0.0.1')",
            "                  (oa_interface",
            "                    INTERFACE:'interface'",
            "                    id = (interface_id*",
            "                      INTERFACE_ID:'fe-0/0/0.0'  <== mode:M_Interface)",
            "                    (apply*)))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line*",
            "    SET:'set'",
            "    (set_line_tail*",
            "      (statement*",
            "        (s_common*",
            "          (s_protocols*",
            "            PROTOCOLS:'protocols'",
            "            (p_ospf*",
            "              OSPF:'ospf'",
            "              (o_common*",
            "                (o_export",
            "                  EXPORT:'export'",
            "                  expr = (policy_expression*",
            "                    (junos_name*",
            "                      NAME:'ospf-redistribute-connected'  <== mode:M_PolicyExpression)))))))))",
            "    NEWLINE:'\\n'  <== mode:M_PolicyExpression)",
            "  (set_line*",
            "    SET:'set'",
            "    (set_line_tail*",
            "      (statement*",
            "        (s_common*",
            "          (s_protocols*",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_common*",
            "                (b_local_as*",
            "                  LOCAL_AS:'local-as'",
            "                  (bl_number",
            "                    asn = (bgp_asn*",
            "                      asn = (uint32*",
            "                        UINT8:'1'  <== mode:M_BgpAsn))))))))))",
            "    NEWLINE:'\\n'  <== mode:M_BgpAsn2)",
            "  (set_line*",
            "    SET:'set'",
            "    (set_line_tail*",
            "      (statement*",
            "        (s_common*",
            "          (s_protocols*",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_group",
            "                GROUP:'group'",
            "                name = (junos_name*",
            "                  NAME:'as1'  <== mode:M_Name)",
            "                (b_common*",
            "                  (b_type",
            "                    TYPE:'type'",
            "                    INTERNAL:'internal'))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line*",
            "    SET:'set'",
            "    (set_line_tail*",
            "      (statement*",
            "        (s_common*",
            "          (s_protocols*",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_group",
            "                GROUP:'group'",
            "                name = (junos_name*",
            "                  NAME:'as1'  <== mode:M_Name)",
            "                (b_common*",
            "                  (b_local_address",
            "                    LOCAL_ADDRESS:'local-address'",
            "                    (ip_address*",
            "                      IP_ADDRESS:'1.1.1.1')))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line*",
            "    SET:'set'",
            "    (set_line_tail*",
            "      (statement*",
            "        (s_common*",
            "          (s_protocols*",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_group",
            "                GROUP:'group'",
            "                name = (junos_name*",
            "                  NAME:'as1'  <== mode:M_Name)",
            "                (b_common*",
            "                  (b_peer_as*",
            "                    PEER_AS:'peer-as'",
            "                    (bpa_as",
            "                      asn = (bgp_asn*",
            "                        asn = (uint32*",
            "                          UINT8:'1'  <== mode:M_BgpAsn)))))))))))",
            "    NEWLINE:'\\n'  <== mode:M_BgpAsn2)",
            "  (set_line*",
            "    SET:'set'",
            "    (set_line_tail*",
            "      (statement*",
            "        (s_common*",
            "          (s_protocols*",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_group",
            "                GROUP:'group'",
            "                name = (junos_name*",
            "                  NAME:'as1'  <== mode:M_Name)",
            "                (b_common*",
            "                  (b_export",
            "                    EXPORT:'export'",
            "                    expr = (policy_expression*",
            "                      (junos_name*",
            "                        NAME:'as1_to_as1'  <== mode:M_PolicyExpression))))))))))",
            "    NEWLINE:'\\n'  <== mode:M_PolicyExpression)",
            "  (set_line*",
            "    SET:'set'",
            "    (set_line_tail*",
            "      (statement*",
            "        (s_common*",
            "          (s_protocols*",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_group",
            "                GROUP:'group'",
            "                name = (junos_name*",
            "                  NAME:'as1'  <== mode:M_Name)",
            "                (b_neighbor",
            "                  NEIGHBOR:'neighbor'",
            "                  (ip_address*",
            "                    IP_ADDRESS:'1.10.1.1')",
            "                  (b_common*",
            "                    (apply*)))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line*",
            "    SET:'set'",
            "    (set_line_tail*",
            "      (statement*",
            "        (s_common*",
            "          (s_protocols*",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_group",
            "                GROUP:'group'",
            "                name = (junos_name*",
            "                  NAME:'as2'  <== mode:M_Name)",
            "                (b_common*",
            "                  (b_type",
            "                    TYPE:'type'",
            "                    EXTERNAL:'external'))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line*",
            "    SET:'set'",
            "    (set_line_tail*",
            "      (statement*",
            "        (s_common*",
            "          (s_protocols*",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_group",
            "                GROUP:'group'",
            "                name = (junos_name*",
            "                  NAME:'as2'  <== mode:M_Name)",
            "                (b_common*",
            "                  (b_peer_as*",
            "                    PEER_AS:'peer-as'",
            "                    (bpa_as",
            "                      asn = (bgp_asn*",
            "                        asn = (uint32*",
            "                          UINT8:'2'  <== mode:M_BgpAsn)))))))))))",
            "    NEWLINE:'\\n'  <== mode:M_BgpAsn2)",
            "  (set_line*",
            "    SET:'set'",
            "    (set_line_tail*",
            "      (statement*",
            "        (s_common*",
            "          (s_protocols*",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_group",
            "                GROUP:'group'",
            "                name = (junos_name*",
            "                  NAME:'as2'  <== mode:M_Name)",
            "                (b_common*",
            "                  (b_export",
            "                    EXPORT:'export'",
            "                    expr = (policy_expression*",
            "                      (junos_name*",
            "                        NAME:'as1_to_as2'  <== mode:M_PolicyExpression))))))))))",
            "    NEWLINE:'\\n'  <== mode:M_PolicyExpression)",
            "  (set_line*",
            "    SET:'set'",
            "    (set_line_tail*",
            "      (statement*",
            "        (s_common*",
            "          (s_protocols*",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_group",
            "                GROUP:'group'",
            "                name = (junos_name*",
            "                  NAME:'as2'  <== mode:M_Name)",
            "                (b_common*",
            "                  (b_import",
            "                    IMPORT:'import'",
            "                    expr = (policy_expression*",
            "                      (junos_name*",
            "                        NAME:'as2_to_as1'  <== mode:M_PolicyExpression))))))))))",
            "    NEWLINE:'\\n'  <== mode:M_PolicyExpression)",
            "  (set_line*",
            "    SET:'set'",
            "    (set_line_tail*",
            "      (statement*",
            "        (s_common*",
            "          (s_protocols*",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_group",
            "                GROUP:'group'",
            "                name = (junos_name*",
            "                  NAME:'as2'  <== mode:M_Name)",
            "                (b_neighbor",
            "                  NEIGHBOR:'neighbor'",
            "                  (ip_address*",
            "                    IP_ADDRESS:'10.12.11.2')",
            "                  (b_common*",
            "                    (apply*)))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line*",
            "    SET:'set'",
            "    (set_line_tail*",
            "      (statement*",
            "        (s_common*",
            "          (s_protocols*",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_group",
            "                GROUP:'group'",
            "                name = (junos_name*",
            "                  NAME:'xanadu'  <== mode:M_Name)",
            "                (b_common*",
            "                  (b_type",
            "                    TYPE:'type'",
            "                    EXTERNAL:'external'))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line*",
            "    SET:'set'",
            "    (set_line_tail*",
            "      (statement*",
            "        (s_common*",
            "          (s_protocols*",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_group",
            "                GROUP:'group'",
            "                name = (junos_name*",
            "                  NAME:'xanadu'  <== mode:M_Name)",
            "                (b_common*",
            "                  (b_peer_as*",
            "                    PEER_AS:'peer-as'",
            "                    (bpa_as",
            "                      asn = (bgp_asn*",
            "                        asn = (uint32*",
            "                          UINT16:'555'  <== mode:M_BgpAsn)))))))))))",
            "    NEWLINE:'\\n'  <== mode:M_BgpAsn2)",
            "  (set_line*",
            "    SET:'set'",
            "    (set_line_tail*",
            "      (statement*",
            "        (s_common*",
            "          (s_protocols*",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_group",
            "                GROUP:'group'",
            "                name = (junos_name*",
            "                  NAME:'xanadu'  <== mode:M_Name)",
            "                (b_common*",
            "                  (b_export",
            "                    EXPORT:'export'",
            "                    expr = (policy_expression*",
            "                      (junos_name*",
            "                        NAME:'match_original_prefixes'  <== mode:M_PolicyExpression))))))))))",
            "    NEWLINE:'\\n'  <== mode:M_PolicyExpression)",
            "  (set_line*",
            "    SET:'set'",
            "    (set_line_tail*",
            "      (statement*",
            "        (s_common*",
            "          (s_protocols*",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_group",
            "                GROUP:'group'",
            "                name = (junos_name*",
            "                  NAME:'xanadu'  <== mode:M_Name)",
            "                (b_neighbor",
            "                  NEIGHBOR:'neighbor'",
            "                  (ip_address*",
            "                    IP_ADDRESS:'5.6.7.8')",
            "                  (b_common*",
            "                    (apply*)))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line*",
            "    SET:'set'",
            "    (set_line_tail*",
            "      (statement*",
            "        (s_common*",
            "          (s_protocols*",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_group",
            "                GROUP:'group'",
            "                name = (junos_name*",
            "                  NAME:'bad-ebgp'  <== mode:M_Name)",
            "                (b_common*",
            "                  (b_type",
            "                    TYPE:'type'",
            "                    EXTERNAL:'external'))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line*",
            "    SET:'set'",
            "    (set_line_tail*",
            "      (statement*",
            "        (s_common*",
            "          (s_protocols*",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_group",
            "                GROUP:'group'",
            "                name = (junos_name*",
            "                  NAME:'bad-ebgp'  <== mode:M_Name)",
            "                (b_common*",
            "                  (b_peer_as*",
            "                    PEER_AS:'peer-as'",
            "                    (bpa_as",
            "                      asn = (bgp_asn*",
            "                        asn = (uint32*",
            "                          UINT16:'666'  <== mode:M_BgpAsn)))))))))))",
            "    NEWLINE:'\\n'  <== mode:M_BgpAsn2)",
            "  (set_line*",
            "    SET:'set'",
            "    (set_line_tail*",
            "      (statement*",
            "        (s_common*",
            "          (s_protocols*",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_group",
            "                GROUP:'group'",
            "                name = (junos_name*",
            "                  NAME:'bad-ebgp'  <== mode:M_Name)",
            "                (b_common*",
            "                  (b_export",
            "                    EXPORT:'export'",
            "                    expr = (policy_expression*",
            "                      (junos_name*",
            "                        NAME:'match_original_prefixes'  <== mode:M_PolicyExpression))))))))))",
            "    NEWLINE:'\\n'  <== mode:M_PolicyExpression)",
            "  (set_line*",
            "    SET:'set'",
            "    (set_line_tail*",
            "      (statement*",
            "        (s_common*",
            "          (s_protocols*",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_group",
            "                GROUP:'group'",
            "                name = (junos_name*",
            "                  NAME:'bad-ebgp'  <== mode:M_Name)",
            "                (b_neighbor",
            "                  NEIGHBOR:'neighbor'",
            "                  (ip_address*",
            "                    IP_ADDRESS:'3.2.2.2')",
            "                  (b_common*",
            "                    (apply*)))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line*",
            "    SET:'set'",
            "    (set_line_tail*",
            "      (statement*",
            "        (s_common*",
            "          (s_policy_options*",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_policy_statement",
            "              POLICY_STATEMENT:'policy-statement'",
            "              name = (junos_name*",
            "                NAME:'ospf-redistribute-connected'  <== mode:M_Name)",
            "              (pops_common",
            "                (pops_from*",
            "                  FROM:'from'",
            "                  (popsf_protocol",
            "                    PROTOCOL:'protocol'",
            "                    DIRECT:'direct'))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line*",
            "    SET:'set'",
            "    (set_line_tail*",
            "      (statement*",
            "        (s_common*",
            "          (s_policy_options*",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_policy_statement",
            "              POLICY_STATEMENT:'policy-statement'",
            "              name = (junos_name*",
            "                NAME:'ospf-redistribute-connected'  <== mode:M_Name)",
            "              (pops_common",
            "                (pops_then*",
            "                  THEN:'then'",
            "                  (popst_common*",
            "                    (popst_accept",
            "                      ACCEPT:'accept')))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line*",
            "    SET:'set'",
            "    (set_line_tail*",
            "      (statement*",
            "        (s_common*",
            "          (s_policy_options*",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_policy_statement",
            "              POLICY_STATEMENT:'policy-statement'",
            "              name = (junos_name*",
            "                NAME:'as1_to_as1'  <== mode:M_Name)",
            "              (pops_term",
            "                TERM:'term'",
            "                name = (junos_name*",
            "                  NAME:'forward'  <== mode:M_Name)",
            "                (pops_common",
            "                  (pops_from*",
            "                    FROM:'from'",
            "                    (popsf_protocol",
            "                      PROTOCOL:'protocol'",
            "                      BGP:'bgp')))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line*",
            "    SET:'set'",
            "    (set_line_tail*",
            "      (statement*",
            "        (s_common*",
            "          (s_policy_options*",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_policy_statement",
            "              POLICY_STATEMENT:'policy-statement'",
            "              name = (junos_name*",
            "                NAME:'as1_to_as1'  <== mode:M_Name)",
            "              (pops_term",
            "                TERM:'term'",
            "                name = (junos_name*",
            "                  NAME:'forward'  <== mode:M_Name)",
            "                (pops_common",
            "                  (pops_then*",
            "                    THEN:'then'",
            "                    (popst_common*",
            "                      (popst_accept",
            "                        ACCEPT:'accept'))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line*",
            "    SET:'set'",
            "    (set_line_tail*",
            "      (statement*",
            "        (s_common*",
            "          (s_policy_options*",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_policy_statement",
            "              POLICY_STATEMENT:'policy-statement'",
            "              name = (junos_name*",
            "                NAME:'as1_to_as1'  <== mode:M_Name)",
            "              (pops_term",
            "                TERM:'term'",
            "                name = (junos_name*",
            "                  NAME:'originate'  <== mode:M_Name)",
            "                (pops_common",
            "                  (pops_from*",
            "                    FROM:'from'",
            "                    (popsf_prefix_list",
            "                      PREFIX_LIST:'prefix-list'",
            "                      name = (junos_name*",
            "                        NAME:'original_prefixes'  <== mode:M_Name))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line*",
            "    SET:'set'",
            "    (set_line_tail*",
            "      (statement*",
            "        (s_common*",
            "          (s_policy_options*",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_policy_statement",
            "              POLICY_STATEMENT:'policy-statement'",
            "              name = (junos_name*",
            "                NAME:'as1_to_as1'  <== mode:M_Name)",
            "              (pops_term",
            "                TERM:'term'",
            "                name = (junos_name*",
            "                  NAME:'originate'  <== mode:M_Name)",
            "                (pops_common",
            "                  (pops_then*",
            "                    THEN:'then'",
            "                    (popst_common*",
            "                      (popst_accept",
            "                        ACCEPT:'accept'))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line*",
            "    SET:'set'",
            "    (set_line_tail*",
            "      (statement*",
            "        (s_common*",
            "          (s_policy_options*",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_policy_statement",
            "              POLICY_STATEMENT:'policy-statement'",
            "              name = (junos_name*",
            "                NAME:'as1_to_as2'  <== mode:M_Name)",
            "              (pops_term",
            "                TERM:'term'",
            "                name = (junos_name*",
            "                  NAME:'originate'  <== mode:M_Name)",
            "                (pops_common",
            "                  (pops_from*",
            "                    FROM:'from'",
            "                    (popsf_prefix_list",
            "                      PREFIX_LIST:'prefix-list'",
            "                      name = (junos_name*",
            "                        NAME:'original_prefixes'  <== mode:M_Name))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line*",
            "    SET:'set'",
            "    (set_line_tail*",
            "      (statement*",
            "        (s_common*",
            "          (s_policy_options*",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_policy_statement",
            "              POLICY_STATEMENT:'policy-statement'",
            "              name = (junos_name*",
            "                NAME:'as1_to_as2'  <== mode:M_Name)",
            "              (pops_term",
            "                TERM:'term'",
            "                name = (junos_name*",
            "                  NAME:'originate'  <== mode:M_Name)",
            "                (pops_common",
            "                  (pops_then*",
            "                    THEN:'then'",
            "                    (popst_common*",
            "                      (popst_community_add",
            "                        COMMUNITY:'community'",
            "                        ADD:'add'",
            "                        name = (junos_name*",
            "                          NAME:'as1_to_as2_community'  <== mode:M_Name)))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line*",
            "    SET:'set'",
            "    (set_line_tail*",
            "      (statement*",
            "        (s_common*",
            "          (s_policy_options*",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_policy_statement",
            "              POLICY_STATEMENT:'policy-statement'",
            "              name = (junos_name*",
            "                NAME:'as1_to_as2'  <== mode:M_Name)",
            "              (pops_term",
            "                TERM:'term'",
            "                name = (junos_name*",
            "                  NAME:'originate'  <== mode:M_Name)",
            "                (pops_common",
            "                  (pops_then*",
            "                    THEN:'then'",
            "                    (popst_common*",
            "                      (popst_metric",
            "                        METRIC:'metric'",
            "                        metric = (dec*",
            "                          UINT8:'50')))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line*",
            "    SET:'set'",
            "    (set_line_tail*",
            "      (statement*",
            "        (s_common*",
            "          (s_policy_options*",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_policy_statement",
            "              POLICY_STATEMENT:'policy-statement'",
            "              name = (junos_name*",
            "                NAME:'as1_to_as2'  <== mode:M_Name)",
            "              (pops_term",
            "                TERM:'term'",
            "                name = (junos_name*",
            "                  NAME:'originate'  <== mode:M_Name)",
            "                (pops_common",
            "                  (pops_then*",
            "                    THEN:'then'",
            "                    (popst_common*",
            "                      (popst_accept",
            "                        ACCEPT:'accept'))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line*",
            "    SET:'set'",
            "    (set_line_tail*",
            "      (statement*",
            "        (s_common*",
            "          (s_policy_options*",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_policy_statement",
            "              POLICY_STATEMENT:'policy-statement'",
            "              name = (junos_name*",
            "                NAME:'as1_to_as2'  <== mode:M_Name)",
            "              (pops_term",
            "                TERM:'term'",
            "                name = (junos_name*",
            "                  NAME:'as3'  <== mode:M_Name)",
            "                (pops_common",
            "                  (pops_from*",
            "                    FROM:'from'",
            "                    (popsf_prefix_list",
            "                      PREFIX_LIST:'prefix-list'",
            "                      name = (junos_name*",
            "                        NAME:'as3_prefixes'  <== mode:M_Name))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line*",
            "    SET:'set'",
            "    (set_line_tail*",
            "      (statement*",
            "        (s_common*",
            "          (s_policy_options*",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_policy_statement",
            "              POLICY_STATEMENT:'policy-statement'",
            "              name = (junos_name*",
            "                NAME:'as1_to_as2'  <== mode:M_Name)",
            "              (pops_term",
            "                TERM:'term'",
            "                name = (junos_name*",
            "                  NAME:'as3'  <== mode:M_Name)",
            "                (pops_common",
            "                  (pops_then*",
            "                    THEN:'then'",
            "                    (popst_common*",
            "                      (popst_community_add",
            "                        COMMUNITY:'community'",
            "                        ADD:'add'",
            "                        name = (junos_name*",
            "                          NAME:'as1_to_as2_community'  <== mode:M_Name)))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line*",
            "    SET:'set'",
            "    (set_line_tail*",
            "      (statement*",
            "        (s_common*",
            "          (s_policy_options*",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_policy_statement",
            "              POLICY_STATEMENT:'policy-statement'",
            "              name = (junos_name*",
            "                NAME:'as1_to_as2'  <== mode:M_Name)",
            "              (pops_term",
            "                TERM:'term'",
            "                name = (junos_name*",
            "                  NAME:'as3'  <== mode:M_Name)",
            "                (pops_common",
            "                  (pops_then*",
            "                    THEN:'then'",
            "                    (popst_common*",
            "                      (popst_metric",
            "                        METRIC:'metric'",
            "                        metric = (dec*",
            "                          UINT8:'50')))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line*",
            "    SET:'set'",
            "    (set_line_tail*",
            "      (statement*",
            "        (s_common*",
            "          (s_policy_options*",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_policy_statement",
            "              POLICY_STATEMENT:'policy-statement'",
            "              name = (junos_name*",
            "                NAME:'as1_to_as2'  <== mode:M_Name)",
            "              (pops_term",
            "                TERM:'term'",
            "                name = (junos_name*",
            "                  NAME:'as3'  <== mode:M_Name)",
            "                (pops_common",
            "                  (pops_then*",
            "                    THEN:'then'",
            "                    (popst_common*",
            "                      (popst_accept",
            "                        ACCEPT:'accept'))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line*",
            "    SET:'set'",
            "    (set_line_tail*",
            "      (statement*",
            "        (s_common*",
            "          (s_policy_options*",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_policy_statement",
            "              POLICY_STATEMENT:'policy-statement'",
            "              name = (junos_name*",
            "                NAME:'as2_to_as1'  <== mode:M_Name)",
            "              (pops_term",
            "                TERM:'term'",
            "                name = (junos_name*",
            "                  NAME:'1'  <== mode:M_Name)",
            "                (pops_common",
            "                  (pops_from*",
            "                    FROM:'from'",
            "                    (popsf_community",
            "                      COMMUNITY:'community'",
            "                      name = (junos_name*",
            "                        NAME:'as2_to_as1_community'  <== mode:M_Name))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line*",
            "    SET:'set'",
            "    (set_line_tail*",
            "      (statement*",
            "        (s_common*",
            "          (s_policy_options*",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_policy_statement",
            "              POLICY_STATEMENT:'policy-statement'",
            "              name = (junos_name*",
            "                NAME:'as2_to_as1'  <== mode:M_Name)",
            "              (pops_term",
            "                TERM:'term'",
            "                name = (junos_name*",
            "                  NAME:'1'  <== mode:M_Name)",
            "                (pops_common",
            "                  (pops_then*",
            "                    THEN:'then'",
            "                    (popst_common*",
            "                      (popst_local_preference",
            "                        LOCAL_PREFERENCE:'local-preference'",
            "                        localpref = (uint32*",
            "                          UINT16:'350')))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line*",
            "    SET:'set'",
            "    (set_line_tail*",
            "      (statement*",
            "        (s_common*",
            "          (s_policy_options*",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_policy_statement",
            "              POLICY_STATEMENT:'policy-statement'",
            "              name = (junos_name*",
            "                NAME:'as2_to_as1'  <== mode:M_Name)",
            "              (pops_term",
            "                TERM:'term'",
            "                name = (junos_name*",
            "                  NAME:'1'  <== mode:M_Name)",
            "                (pops_common",
            "                  (pops_then*",
            "                    THEN:'then'",
            "                    (popst_common*",
            "                      (popst_accept",
            "                        ACCEPT:'accept'))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line*",
            "    SET:'set'",
            "    (set_line_tail*",
            "      (statement*",
            "        (s_common*",
            "          (s_policy_options*",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_policy_statement",
            "              POLICY_STATEMENT:'policy-statement'",
            "              name = (junos_name*",
            "                NAME:'match_original_prefixes'  <== mode:M_Name)",
            "              (pops_term",
            "                TERM:'term'",
            "                name = (junos_name*",
            "                  NAME:'1'  <== mode:M_Name)",
            "                (pops_common",
            "                  (pops_from*",
            "                    FROM:'from'",
            "                    (popsf_prefix_list",
            "                      PREFIX_LIST:'prefix-list'",
            "                      name = (junos_name*",
            "                        NAME:'original_prefixes'  <== mode:M_Name))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line*",
            "    SET:'set'",
            "    (set_line_tail*",
            "      (statement*",
            "        (s_common*",
            "          (s_policy_options*",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_policy_statement",
            "              POLICY_STATEMENT:'policy-statement'",
            "              name = (junos_name*",
            "                NAME:'match_original_prefixes'  <== mode:M_Name)",
            "              (pops_term",
            "                TERM:'term'",
            "                name = (junos_name*",
            "                  NAME:'1'  <== mode:M_Name)",
            "                (pops_common",
            "                  (pops_then*",
            "                    THEN:'then'",
            "                    (popst_common*",
            "                      (popst_accept",
            "                        ACCEPT:'accept'))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line*",
            "    SET:'set'",
            "    (set_line_tail*",
            "      (statement*",
            "        (s_common*",
            "          (s_policy_options*",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_prefix_list",
            "              PREFIX_LIST:'prefix-list'",
            "              name = (junos_name*",
            "                NAME:'original_prefixes'  <== mode:M_Name)",
            "              (poplt_network",
            "                network = (ip_prefix_default_32*",
            "                  IP_PREFIX:'1.0.1.0/24')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line*",
            "    SET:'set'",
            "    (set_line_tail*",
            "      (statement*",
            "        (s_common*",
            "          (s_policy_options*",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_prefix_list",
            "              PREFIX_LIST:'prefix-list'",
            "              name = (junos_name*",
            "                NAME:'original_prefixes'  <== mode:M_Name)",
            "              (poplt_network",
            "                network = (ip_prefix_default_32*",
            "                  IP_PREFIX:'1.0.2.0/24')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line*",
            "    SET:'set'",
            "    (set_line_tail*",
            "      (statement*",
            "        (s_common*",
            "          (s_policy_options*",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_prefix_list",
            "              PREFIX_LIST:'prefix-list'",
            "              name = (junos_name*",
            "                NAME:'as3_prefixes'  <== mode:M_Name)",
            "              (poplt_network",
            "                network = (ip_prefix_default_32*",
            "                  IP_PREFIX:'3.0.1.0/24')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line*",
            "    SET:'set'",
            "    (set_line_tail*",
            "      (statement*",
            "        (s_common*",
            "          (s_policy_options*",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_prefix_list",
            "              PREFIX_LIST:'prefix-list'",
            "              name = (junos_name*",
            "                NAME:'as3_prefixes'  <== mode:M_Name)",
            "              (poplt_network",
            "                network = (ip_prefix_default_32*",
            "                  IP_PREFIX:'3.0.2.0/24')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line*",
            "    SET:'set'",
            "    (set_line_tail*",
            "      (statement*",
            "        (s_common*",
            "          (s_policy_options*",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_community",
            "              COMMUNITY:'community'",
            "              name = (junos_name*",
            "                NAME:'as1_to_as2_community'  <== mode:M_Name)",
            "              (poc_members",
            "                MEMBERS:'members'",
            "                member = (poc_members_member*",
            "                  (literal_or_regex_community*",
            "                    LITERAL_OR_REGEX_COMMUNITY:'1:2'  <== mode:M_Members))))))))",
            "    NEWLINE:'\\n'  <== mode:M_Members)",
            "  (set_line*",
            "    SET:'set'",
            "    (set_line_tail*",
            "      (statement*",
            "        (s_common*",
            "          (s_policy_options*",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_community",
            "              COMMUNITY:'community'",
            "              name = (junos_name*",
            "                NAME:'as2_to_as1_community'  <== mode:M_Name)",
            "              (poc_members",
            "                MEMBERS:'members'",
            "                member = (poc_members_member*",
            "                  (literal_or_regex_community*",
            "                    LITERAL_OR_REGEX_COMMUNITY:'2:*'  <== mode:M_Members))))))))",
            "    NEWLINE:'\\n'  <== mode:M_Members)",
            "  (set_line*",
            "    SET:'set'",
            "    (set_line_tail*",
            "      (statement*",
            "        (s_common*",
            "          (s_routing_options",
            "            ROUTING_OPTIONS:'routing-options'",
            "            (ro_router_id",
            "              ROUTER_ID:'router-id'",
            "              id = (ip_address*",
            "                IP_ADDRESS:'1.1.1.1'))))))",
            "    NEWLINE:'\\n\\n')",
            "  EOF:<EOF>)"
          ]
        },
        "configs/as1border2.cfg" : {
          "sentences" : [
            "(flat_juniper_configuration",
            "  (set_line*",
            "    SET:'set'",
            "    (set_line_tail*",
            "      (statement*",
            "        (s_common*",
            "          (s_system*",
            "            SYSTEM:'system'",
            "            (sy_host_name",
            "              HOST_NAME:'host-name'",
            "              name = (junos_name*",
            "                NAME:'as1border2'  <== mode:M_Name))))))",
            "    NEWLINE:'\\n')",
            "  (set_line*",
            "    SET:'set'",
            "    (set_line_tail*",
            "      (statement*",
            "        (s_common*",
            "          (s_interfaces*",
            "            INTERFACES:'interfaces'",
            "            (int_named",
            "              (interface_id*",
            "                INTERFACE_ID:'lo0'  <== mode:M_Interface)",
            "              (i_unit",
            "                UNIT:'unit'",
            "                num = (dec*",
            "                  UINT8:'0')",
            "                (i_common*",
            "                  (i_family*",
            "                    FAMILY:'family'",
            "                    (if_inet*",
            "                      INET:'inet'",
            "                      (ifi_address",
            "                        ADDRESS:'address'",
            "                        (ip_prefix*",
            "                          IP_PREFIX:'1.2.2.2/32')))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line*",
            "    SET:'set'",
            "    (set_line_tail*",
            "      (statement*",
            "        (s_common*",
            "          (s_interfaces*",
            "            INTERFACES:'interfaces'",
            "            (int_named",
            "              (interface_id*",
            "                INTERFACE_ID:'fe-0/0/0'  <== mode:M_Interface)",
            "              (i_unit",
            "                UNIT:'unit'",
            "                num = (dec*",
            "                  UINT8:'0')",
            "                (i_common*",
            "                  (i_family*",
            "                    FAMILY:'family'",
            "                    (if_inet*",
            "                      INET:'inet'",
            "                      (ifi_address",
            "                        ADDRESS:'address'",
            "                        (ip_prefix*",
            "                          IP_PREFIX:'1.0.2.1/24')))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line*",
            "    SET:'set'",
            "    (set_line_tail*",
            "      (statement*",
            "        (s_common*",
            "          (s_interfaces*",
            "            INTERFACES:'interfaces'",
            "            (int_named",
            "              (interface_id*",
            "                INTERFACE_ID:'fe-0/0/1'  <== mode:M_Interface)",
            "              (i_unit",
            "                UNIT:'unit'",
            "                num = (dec*",
            "                  UINT8:'0')",
            "                (i_common*",
            "                  (i_family*",
            "                    FAMILY:'family'",
            "                    (if_inet*",
            "                      INET:'inet'",
            "                      (ifi_address",
            "                        ADDRESS:'address'",
            "                        (ip_prefix*",
            "                          IP_PREFIX:'10.13.22.1/24')))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line*",
            "    SET:'set'",
            "    (set_line_tail*",
            "      (statement*",
            "        (s_common*",
            "          (s_interfaces*",
            "            INTERFACES:'interfaces'",
            "            (int_named",
            "              (interface_id*",
            "                INTERFACE_ID:'fe-0/0/2'  <== mode:M_Interface)",
            "              (i_unit",
            "                UNIT:'unit'",
            "                num = (dec*",
            "                  UINT8:'0')",
            "                (i_common*",
            "                  (i_family*",
            "                    FAMILY:'family'",
            "                    (if_inet*",
            "                      INET:'inet'",
            "                      (ifi_address",
            "                        ADDRESS:'address'",
            "                        (ip_prefix*",
            "                          IP_PREFIX:'10.14.22.1/24')))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line*",
            "    SET:'set'",
            "    (set_line_tail*",
            "      (statement*",
            "        (s_common*",
            "          (s_protocols*",
            "            PROTOCOLS:'protocols'",
            "            (p_ospf*",
            "              OSPF:'ospf'",
            "              (o_common*",
            "                (o_area",
            "                  AREA:'area'",
            "                  area_ip = (ip_address*",
            "                    IP_ADDRESS:'0.0.0.1')",
            "                  (oa_interface",
            "                    INTERFACE:'interface'",
            "                    id = (interface_id*",
            "                      INTERFACE_ID:'lo0.0'  <== mode:M_Interface)",
            "                    (apply*)))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line*",
            "    SET:'set'",
            "    (set_line_tail*",
            "      (statement*",
            "        (s_common*",
            "          (s_protocols*",
            "            PROTOCOLS:'protocols'",
            "            (p_ospf*",
            "              OSPF:'ospf'",
            "              (o_common*",
            "                (o_area",
            "                  AREA:'area'",
            "                  area_ip = (ip_address*",
            "                    IP_ADDRESS:'0.0.0.1')",
            "                  (oa_interface",
            "                    INTERFACE:'interface'",
            "                    id = (interface_id*",
            "                      INTERFACE_ID:'fe-0/0/0.0'  <== mode:M_Interface)",
            "                    (apply*)))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line*",
            "    SET:'set'",
            "    (set_line_tail*",
            "      (statement*",
            "        (s_common*",
            "          (s_protocols*",
            "            PROTOCOLS:'protocols'",
            "            (p_ospf*",
            "              OSPF:'ospf'",
            "              (o_common*",
            "                (o_export",
            "                  EXPORT:'export'",
            "                  expr = (policy_expression*",
            "                    (junos_name*",
            "                      NAME:'ospf-redistribute-connected'  <== mode:M_PolicyExpression)))))))))",
            "    NEWLINE:'\\n'  <== mode:M_PolicyExpression)",
            "  (set_line*",
            "    SET:'set'",
            "    (set_line_tail*",
            "      (statement*",
            "        (s_common*",
            "          (s_protocols*",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_common*",
            "                (b_local_as*",
            "                  LOCAL_AS:'local-as'",
            "                  (bl_number",
            "                    asn = (bgp_asn*",
            "                      asn = (uint32*",
            "                        UINT8:'1'  <== mode:M_BgpAsn))))))))))",
            "    NEWLINE:'\\n'  <== mode:M_BgpAsn2)",
            "  (set_line*",
            "    SET:'set'",
            "    (set_line_tail*",
            "      (statement*",
            "        (s_common*",
            "          (s_protocols*",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_group",
            "                GROUP:'group'",
            "                name = (junos_name*",
            "                  NAME:'as1'  <== mode:M_Name)",
            "                (b_common*",
            "                  (b_type",
            "                    TYPE:'type'",
            "                    INTERNAL:'internal'))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line*",
            "    SET:'set'",
            "    (set_line_tail*",
            "      (statement*",
            "        (s_common*",
            "          (s_protocols*",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_group",
            "                GROUP:'group'",
            "                name = (junos_name*",
            "                  NAME:'as1'  <== mode:M_Name)",
            "                (b_common*",
            "                  (b_local_address",
            "                    LOCAL_ADDRESS:'local-address'",
            "                    (ip_address*",
            "                      IP_ADDRESS:'1.2.2.2')))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line*",
            "    SET:'set'",
            "    (set_line_tail*",
            "      (statement*",
            "        (s_common*",
            "          (s_protocols*",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_group",
            "                GROUP:'group'",
            "                name = (junos_name*",
            "                  NAME:'as1'  <== mode:M_Name)",
            "                (b_common*",
            "                  (b_peer_as*",
            "                    PEER_AS:'peer-as'",
            "                    (bpa_as",
            "                      asn = (bgp_asn*",
            "                        asn = (uint32*",
            "                          UINT8:'1'  <== mode:M_BgpAsn)))))))))))",
            "    NEWLINE:'\\n'  <== mode:M_BgpAsn2)",
            "  (set_line*",
            "    SET:'set'",
            "    (set_line_tail*",
            "      (statement*",
            "        (s_common*",
            "          (s_protocols*",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_group",
            "                GROUP:'group'",
            "                name = (junos_name*",
            "                  NAME:'as1'  <== mode:M_Name)",
            "                (b_common*",
            "                  (b_export",
            "                    EXPORT:'export'",
            "                    expr = (policy_expression*",
            "                      (junos_name*",
            "                        NAME:'as1_to_as1'  <== mode:M_PolicyExpression))))))))))",
            "    NEWLINE:'\\n'  <== mode:M_PolicyExpression)",
            "  (set_line*",
            "    SET:'set'",
            "    (set_line_tail*",
            "      (statement*",
            "        (s_common*",
            "          (s_protocols*",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_group",
            "                GROUP:'group'",
            "                name = (junos_name*",
            "                  NAME:'as1'  <== mode:M_Name)",
            "                (b_neighbor",
            "                  NEIGHBOR:'neighbor'",
            "                  (ip_address*",
            "                    IP_ADDRESS:'1.10.1.1')",
            "                  (b_common*",
            "                    (apply*)))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line*",
            "    SET:'set'",
            "    (set_line_tail*",
            "      (statement*",
            "        (s_common*",
            "          (s_protocols*",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_group",
            "                GROUP:'group'",
            "                name = (junos_name*",
            "                  NAME:'as3'  <== mode:M_Name)",
            "                (b_common*",
            "                  (b_type",
            "                    TYPE:'type'",
            "                    EXTERNAL:'external'))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line*",
            "    SET:'set'",
            "    (set_line_tail*",
            "      (statement*",
            "        (s_common*",
            "          (s_protocols*",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_group",
            "                GROUP:'group'",
            "                name = (junos_name*",
            "                  NAME:'as3'  <== mode:M_Name)",
            "                (b_common*",
            "                  (b_peer_as*",
            "                    PEER_AS:'peer-as'",
            "                    (bpa_as",
            "                      asn = (bgp_asn*",
            "                        asn = (uint32*",
            "                          UINT8:'3'  <== mode:M_BgpAsn)))))))))))",
            "    NEWLINE:'\\n'  <== mode:M_BgpAsn2)",
            "  (set_line*",
            "    SET:'set'",
            "    (set_line_tail*",
            "      (statement*",
            "        (s_common*",
            "          (s_protocols*",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_group",
            "                GROUP:'group'",
            "                name = (junos_name*",
            "                  NAME:'as3'  <== mode:M_Name)",
            "                (b_common*",
            "                  (b_export",
            "                    EXPORT:'export'",
            "                    expr = (policy_expression*",
            "                      (junos_name*",
            "                        NAME:'as1_to_as3'  <== mode:M_PolicyExpression))))))))))",
            "    NEWLINE:'\\n'  <== mode:M_PolicyExpression)",
            "  (set_line*",
            "    SET:'set'",
            "    (set_line_tail*",
            "      (statement*",
            "        (s_common*",
            "          (s_protocols*",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_group",
            "                GROUP:'group'",
            "                name = (junos_name*",
            "                  NAME:'as3'  <== mode:M_Name)",
            "                (b_common*",
            "                  (b_import",
            "                    IMPORT:'import'",
            "                    expr = (policy_expression*",
            "                      (junos_name*",
            "                        NAME:'as3_to_as1'  <== mode:M_PolicyExpression))))))))))",
            "    NEWLINE:'\\n'  <== mode:M_PolicyExpression)",
            "  (set_line*",
            "    SET:'set'",
            "    (set_line_tail*",
            "      (statement*",
            "        (s_common*",
            "          (s_protocols*",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_group",
            "                GROUP:'group'",
            "                name = (junos_name*",
            "                  NAME:'as3'  <== mode:M_Name)",
            "                (b_neighbor",
            "                  NEIGHBOR:'neighbor'",
            "                  (ip_address*",
            "                    IP_ADDRESS:'10.13.22.3')",
            "                  (b_common*",
            "                    (apply*)))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line*",
            "    SET:'set'",
            "    (set_line_tail*",
            "      (statement*",
            "        (s_common*",
            "          (s_protocols*",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_group",
            "                GROUP:'group'",
            "                name = (junos_name*",
            "                  NAME:'as4'  <== mode:M_Name)",
            "                (b_common*",
            "                  (b_type",
            "                    TYPE:'type'",
            "                    EXTERNAL:'external'))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line*",
            "    SET:'set'",
            "    (set_line_tail*",
            "      (statement*",
            "        (s_common*",
            "          (s_protocols*",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_group",
            "                GROUP:'group'",
            "                name = (junos_name*",
            "                  NAME:'as4'  <== mode:M_Name)",
            "                (b_common*",
            "                  (b_peer_as*",
            "                    PEER_AS:'peer-as'",
            "                    (bpa_as",
            "                      asn = (bgp_asn*",
            "                        asn = (uint32*",
            "                          UINT8:'4'  <== mode:M_BgpAsn)))))))))))",
            "    NEWLINE:'\\n'  <== mode:M_BgpAsn2)",
            "  (set_line*",
            "    SET:'set'",
            "    (set_line_tail*",
            "      (statement*",
            "        (s_common*",
            "          (s_protocols*",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_group",
            "                GROUP:'group'",
            "                name = (junos_name*",
            "                  NAME:'as4'  <== mode:M_Name)",
            "                (b_common*",
            "                  (b_export",
            "                    EXPORT:'export'",
            "                    expr = (policy_expression*",
            "                      (junos_name*",
            "                        NAME:'as1_to_as4'  <== mode:M_PolicyExpression))))))))))",
            "    NEWLINE:'\\n'  <== mode:M_PolicyExpression)",
            "  (set_line*",
            "    SET:'set'",
            "    (set_line_tail*",
            "      (statement*",
            "        (s_common*",
            "          (s_protocols*",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_group",
            "                GROUP:'group'",
            "                name = (junos_name*",
            "                  NAME:'as4'  <== mode:M_Name)",
            "                (b_common*",
            "                  (b_import",
            "                    IMPORT:'import'",
            "                    expr = (policy_expression*",
            "                      (junos_name*",
            "                        NAME:'as4_to_as1'  <== mode:M_PolicyExpression))))))))))",
            "    NEWLINE:'\\n'  <== mode:M_PolicyExpression)",
            "  (set_line*",
            "    SET:'set'",
            "    (set_line_tail*",
            "      (statement*",
            "        (s_common*",
            "          (s_protocols*",
            "            PROTOCOLS:'protocols'",
            "            (p_bgp",
            "              BGP:'bgp'",
            "              (b_group",
            "                GROUP:'group'",
            "                name = (junos_name*",
            "                  NAME:'as4'  <== mode:M_Name)",
            "                (b_neighbor",
            "                  NEIGHBOR:'neighbor'",
            "                  (ip_address*",
            "                    IP_ADDRESS:'10.14.22.4')",
            "                  (b_common*",
            "                    (apply*)))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line*",
            "    SET:'set'",
            "    (set_line_tail*",
            "      (statement*",
            "        (s_common*",
            "          (s_policy_options*",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_policy_statement",
            "              POLICY_STATEMENT:'policy-statement'",
            "              name = (junos_name*",
            "                NAME:'ospf-redistribute-connected'  <== mode:M_Name)",
            "              (pops_common",
            "                (pops_from*",
            "                  FROM:'from'",
            "                  (popsf_protocol",
            "                    PROTOCOL:'protocol'",
            "                    DIRECT:'direct'))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line*",
            "    SET:'set'",
            "    (set_line_tail*",
            "      (statement*",
            "        (s_common*",
            "          (s_policy_options*",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_policy_statement",
            "              POLICY_STATEMENT:'policy-statement'",
            "              name = (junos_name*",
            "                NAME:'ospf-redistribute-connected'  <== mode:M_Name)",
            "              (pops_common",
            "                (pops_then*",
            "                  THEN:'then'",
            "                  (popst_common*",
            "                    (popst_accept",
            "                      ACCEPT:'accept')))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line*",
            "    SET:'set'",
            "    (set_line_tail*",
            "      (statement*",
            "        (s_common*",
            "          (s_policy_options*",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_policy_statement",
            "              POLICY_STATEMENT:'policy-statement'",
            "              name = (junos_name*",
            "                NAME:'as1_to_as1'  <== mode:M_Name)",
            "              (pops_term",
            "                TERM:'term'",
            "                name = (junos_name*",
            "                  NAME:'forward'  <== mode:M_Name)",
            "                (pops_common",
            "                  (pops_from*",
            "                    FROM:'from'",
            "                    (popsf_protocol",
            "                      PROTOCOL:'protocol'",
            "                      BGP:'bgp')))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line*",
            "    SET:'set'",
            "    (set_line_tail*",
            "      (statement*",
            "        (s_common*",
            "          (s_policy_options*",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_policy_statement",
            "              POLICY_STATEMENT:'policy-statement'",
            "              name = (junos_name*",
            "                NAME:'as1_to_as1'  <== mode:M_Name)",
            "              (pops_term",
            "                TERM:'term'",
            "                name = (junos_name*",
            "                  NAME:'forward'  <== mode:M_Name)",
            "                (pops_common",
            "                  (pops_then*",
            "                    THEN:'then'",
            "                    (popst_common*",
            "                      (popst_accept",
            "                        ACCEPT:'accept'))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line*",
            "    SET:'set'",
            "    (set_line_tail*",
            "      (statement*",
            "        (s_common*",
            "          (s_policy_options*",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_policy_statement",
            "              POLICY_STATEMENT:'policy-statement'",
            "              name = (junos_name*",
            "                NAME:'as1_to_as1'  <== mode:M_Name)",
            "              (pops_term",
            "                TERM:'term'",
            "                name = (junos_name*",
            "                  NAME:'originate'  <== mode:M_Name)",
            "                (pops_common",
            "                  (pops_from*",
            "                    FROM:'from'",
            "                    (popsf_prefix_list",
            "                      PREFIX_LIST:'prefix-list'",
            "                      name = (junos_name*",
            "                        NAME:'original_prefixes'  <== mode:M_Name))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line*",
            "    SET:'set'",
            "    (set_line_tail*",
            "      (statement*",
            "        (s_common*",
            "          (s_policy_options*",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_policy_statement",
            "              POLICY_STATEMENT:'policy-statement'",
            "              name = (junos_name*",
            "                NAME:'as1_to_as1'  <== mode:M_Name)",
            "              (pops_term",
            "                TERM:'term'",
            "                name = (junos_name*",
            "                  NAME:'originate'  <== mode:M_Name)",
            "                (pops_common",
            "                  (pops_then*",
            "                    THEN:'then'",
            "                    (popst_common*",
            "                      (popst_accept",
            "                        ACCEPT:'accept'))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line*",
            "    SET:'set'",
            "    (set_line_tail*",
            "      (statement*",
            "        (s_common*",
            "          (s_policy_options*",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_policy_statement",
            "              POLICY_STATEMENT:'policy-statement'",
            "              name = (junos_name*",
            "                NAME:'as1_to_as3'  <== mode:M_Name)",
            "              (pops_term",
            "                TERM:'term'",
            "                name = (junos_name*",
            "                  NAME:'originate'  <== mode:M_Name)",
            "                (pops_common",
            "                  (pops_from*",
            "                    FROM:'from'",
            "                    (popsf_prefix_list",
            "                      PREFIX_LIST:'prefix-list'",
            "                      name = (junos_name*",
            "                        NAME:'original_prefixes'  <== mode:M_Name))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line*",
            "    SET:'set'",
            "    (set_line_tail*",
            "      (statement*",
            "        (s_common*",
            "          (s_policy_options*",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_policy_statement",
            "              POLICY_STATEMENT:'policy-statement'",
            "              name = (junos_name*",
            "                NAME:'as1_to_as3'  <== mode:M_Name)",
            "              (pops_term",
            "                TERM:'term'",
            "                name = (junos_name*",
            "                  NAME:'originate'  <== mode:M_Name)",
            "                (pops_common",
            "                  (pops_then*",
            "                    THEN:'then'",
            "                    (popst_common*",
            "                      (popst_community_add",
            "                        COMMUNITY:'community'",
            "                        ADD:'add'",
            "                        name = (junos_name*",
            "                          NAME:'as1_to_as3_community'  <== mode:M_Name)))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line*",
            "    SET:'set'",
            "    (set_line_tail*",
            "      (statement*",
            "        (s_common*",
            "          (s_policy_options*",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_policy_statement",
            "              POLICY_STATEMENT:'policy-statement'",
            "              name = (junos_name*",
            "                NAME:'as1_to_as3'  <== mode:M_Name)",
            "              (pops_term",
            "                TERM:'term'",
            "                name = (junos_name*",
            "                  NAME:'originate'  <== mode:M_Name)",
            "                (pops_common",
            "                  (pops_then*",
            "                    THEN:'then'",
            "                    (popst_common*",
            "                      (popst_metric",
            "                        METRIC:'metric'",
            "                        metric = (dec*",
            "                          UINT8:'50')))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line*",
            "    SET:'set'",
            "    (set_line_tail*",
            "      (statement*",
            "        (s_common*",
            "          (s_policy_options*",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_policy_statement",
            "              POLICY_STATEMENT:'policy-statement'",
            "              name = (junos_name*",
            "                NAME:'as1_to_as3'  <== mode:M_Name)",
            "              (pops_term",
            "                TERM:'term'",
            "                name = (junos_name*",
            "                  NAME:'originate'  <== mode:M_Name)",
            "                (pops_common",
            "                  (pops_then*",
            "                    THEN:'then'",
            "                    (popst_common*",
            "                      (popst_accept",
            "                        ACCEPT:'accept'))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line*",
            "    SET:'set'",
            "    (set_line_tail*",
            "      (statement*",
            "        (s_common*",
            "          (s_policy_options*",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_policy_statement",
            "              POLICY_STATEMENT:'policy-statement'",
            "              name = (junos_name*",
            "                NAME:'as1_to_as3'  <== mode:M_Name)",
            "              (pops_term",
            "                TERM:'term'",
            "                name = (junos_name*",
            "                  NAME:'as3'  <== mode:M_Name)",
            "                (pops_common",
            "                  (pops_from*",
            "                    FROM:'from'",
            "                    (popsf_prefix_list",
            "                      PREFIX_LIST:'prefix-list'",
            "                      name = (junos_name*",
            "                        NAME:'as2_prefixes'  <== mode:M_Name))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line*",
            "    SET:'set'",
            "    (set_line_tail*",
            "      (statement*",
            "        (s_common*",
            "          (s_policy_options*",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_policy_statement",
            "              POLICY_STATEMENT:'policy-statement'",
            "              name = (junos_name*",
            "                NAME:'as1_to_as3'  <== mode:M_Name)",
            "              (pops_term",
            "                TERM:'term'",
            "                name = (junos_name*",
            "                  NAME:'as3'  <== mode:M_Name)",
            "                (pops_common",
            "                  (pops_then*",
            "                    THEN:'then'",
            "                    (popst_common*",
            "                      (popst_community_add",
            "                        COMMUNITY:'community'",
            "                        ADD:'add'",
            "                        name = (junos_name*",
            "                          NAME:'as1_to_as3_community'  <== mode:M_Name)))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line*",
            "    SET:'set'",
            "    (set_line_tail*",
            "      (statement*",
            "        (s_common*",
            "          (s_policy_options*",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_policy_statement",
            "              POLICY_STATEMENT:'policy-statement'",
            "              name = (junos_name*",
            "                NAME:'as1_to_as3'  <== mode:M_Name)",
            "              (pops_term",
            "                TERM:'term'",
            "                name = (junos_name*",
            "                  NAME:'as3'  <== mode:M_Name)",
            "                (pops_common",
            "                  (pops_then*",
            "                    THEN:'then'",
            "                    (popst_common*",
            "                      (popst_metric",
            "                        METRIC:'metric'",
            "                        metric = (dec*",
            "                          UINT8:'50')))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line*",
            "    SET:'set'",
            "    (set_line_tail*",
            "      (statement*",
            "        (s_common*",
            "          (s_policy_options*",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_policy_statement",
            "              POLICY_STATEMENT:'policy-statement'",
            "              name = (junos_name*",
            "                NAME:'as1_to_as3'  <== mode:M_Name)",
            "              (pops_term",
            "                TERM:'term'",
            "                name = (junos_name*",
            "                  NAME:'as3'  <== mode:M_Name)",
            "                (pops_common",
            "                  (pops_then*",
            "                    THEN:'then'",
            "                    (popst_common*",
            "                      (popst_accept",
            "                        ACCEPT:'accept'))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line*",
            "    SET:'set'",
            "    (set_line_tail*",
            "      (statement*",
            "        (s_common*",
            "          (s_policy_options*",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_policy_statement",
            "              POLICY_STATEMENT:'policy-statement'",
            "              name = (junos_name*",
            "                NAME:'as3_to_as1'  <== mode:M_Name)",
            "              (pops_term",
            "                TERM:'term'",
            "                name = (junos_name*",
            "                  NAME:'1'  <== mode:M_Name)",
            "                (pops_common",
            "                  (pops_from*",
            "                    FROM:'from'",
            "                    (popsf_community",
            "                      COMMUNITY:'community'",
            "                      name = (junos_name*",
            "                        NAME:'as3_to_as1_community'  <== mode:M_Name))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line*",
            "    SET:'set'",
            "    (set_line_tail*",
            "      (statement*",
            "        (s_common*",
            "          (s_policy_options*",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_policy_statement",
            "              POLICY_STATEMENT:'policy-statement'",
            "              name = (junos_name*",
            "                NAME:'as3_to_as1'  <== mode:M_Name)",
            "              (pops_term",
            "                TERM:'term'",
            "                name = (junos_name*",
            "                  NAME:'1'  <== mode:M_Name)",
            "                (pops_common",
            "                  (pops_then*",
            "                    THEN:'then'",
            "                    (popst_common*",
            "                      (popst_local_preference",
            "                        LOCAL_PREFERENCE:'local-preference'",
            "                        localpref = (uint32*",
            "                          UINT16:'350')))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line*",
            "    SET:'set'",
            "    (set_line_tail*",
            "      (statement*",
            "        (s_common*",
            "          (s_policy_options*",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_policy_statement",
            "              POLICY_STATEMENT:'policy-statement'",
            "              name = (junos_name*",
            "                NAME:'as3_to_as1'  <== mode:M_Name)",
            "              (pops_term",
            "                TERM:'term'",
            "                name = (junos_name*",
            "                  NAME:'1'  <== mode:M_Name)",
            "                (pops_common",
            "                  (pops_then*",
            "                    THEN:'then'",
            "                    (popst_common*",
            "                      (popst_accept",
            "                        ACCEPT:'accept'))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line*",
            "    SET:'set'",
            "    (set_line_tail*",
            "      (statement*",
            "        (s_common*",
            "          (s_policy_options*",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_policy_statement",
            "              POLICY_STATEMENT:'policy-statement'",
            "              name = (junos_name*",
            "                NAME:'as1_to_as4'  <== mode:M_Name)",
            "              (pops_term",
            "                TERM:'term'",
            "                name = (junos_name*",
            "                  NAME:'originate'  <== mode:M_Name)",
            "                (pops_common",
            "                  (pops_from*",
            "                    FROM:'from'",
            "                    (popsf_prefix_list",
            "                      PREFIX_LIST:'prefix-list'",
            "                      name = (junos_name*",
            "                        NAME:'original_prefixes'  <== mode:M_Name))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line*",
            "    SET:'set'",
            "    (set_line_tail*",
            "      (statement*",
            "        (s_common*",
            "          (s_policy_options*",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_policy_statement",
            "              POLICY_STATEMENT:'policy-statement'",
            "              name = (junos_name*",
            "                NAME:'as1_to_as4'  <== mode:M_Name)",
            "              (pops_term",
            "                TERM:'term'",
            "                name = (junos_name*",
            "                  NAME:'originate'  <== mode:M_Name)",
            "                (pops_common",
            "                  (pops_then*",
            "                    THEN:'then'",
            "                    (popst_common*",
            "                      (popst_community_add",
            "                        COMMUNITY:'community'",
            "                        ADD:'add'",
            "                        name = (junos_name*",
            "                          NAME:'as1_to_as4_community'  <== mode:M_Name)))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line*",
            "    SET:'set'",
            "    (set_line_tail*",
            "      (statement*",
            "        (s_common*",
            "          (s_policy_options*",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_policy_statement",
            "              POLICY_STATEMENT:'policy-statement'",
            "              name = (junos_name*",
            "                NAME:'as1_to_as4'  <== mode:M_Name)",
            "              (pops_term",
            "                TERM:'term'",
            "                name = (junos_name*",
            "                  NAME:'originate'  <== mode:M_Name)",
            "                (pops_common",
            "                  (pops_then*",
            "                    THEN:'then'",
            "                    (popst_common*",
            "                      (popst_metric",
            "                        METRIC:'metric'",
            "                        metric = (dec*",
            "                          UINT8:'50')))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line*",
            "    SET:'set'",
            "    (set_line_tail*",
            "      (statement*",
            "        (s_common*",
            "          (s_policy_options*",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_policy_statement",
            "              POLICY_STATEMENT:'policy-statement'",
            "              name = (junos_name*",
            "                NAME:'as1_to_as4'  <== mode:M_Name)",
            "              (pops_term",
            "                TERM:'term'",
            "                name = (junos_name*",
            "                  NAME:'originate'  <== mode:M_Name)",
            "                (pops_common",
            "                  (pops_then*",
            "                    THEN:'then'",
            "                    (popst_common*",
            "                      (popst_accept",
            "                        ACCEPT:'accept'))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line*",
            "    SET:'set'",
            "    (set_line_tail*",
            "      (statement*",
            "        (s_common*",
            "          (s_policy_options*",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_policy_statement",
            "              POLICY_STATEMENT:'policy-statement'",
            "              name = (junos_name*",
            "                NAME:'as1_to_as4'  <== mode:M_Name)",
            "              (pops_term",
            "                TERM:'term'",
            "                name = (junos_name*",
            "                  NAME:'as3'  <== mode:M_Name)",
            "                (pops_common",
            "                  (pops_then*",
            "                    THEN:'then'",
            "                    (popst_common*",
            "                      (popst_community_add",
            "                        COMMUNITY:'community'",
            "                        ADD:'add'",
            "                        name = (junos_name*",
            "                          NAME:'as1_to_as4_community'  <== mode:M_Name)))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line*",
            "    SET:'set'",
            "    (set_line_tail*",
            "      (statement*",
            "        (s_common*",
            "          (s_policy_options*",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_policy_statement",
            "              POLICY_STATEMENT:'policy-statement'",
            "              name = (junos_name*",
            "                NAME:'as1_to_as4'  <== mode:M_Name)",
            "              (pops_term",
            "                TERM:'term'",
            "                name = (junos_name*",
            "                  NAME:'as3'  <== mode:M_Name)",
            "                (pops_common",
            "                  (pops_then*",
            "                    THEN:'then'",
            "                    (popst_common*",
            "                      (popst_metric",
            "                        METRIC:'metric'",
            "                        metric = (dec*",
            "                          UINT8:'50')))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line*",
            "    SET:'set'",
            "    (set_line_tail*",
            "      (statement*",
            "        (s_common*",
            "          (s_policy_options*",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_policy_statement",
            "              POLICY_STATEMENT:'policy-statement'",
            "              name = (junos_name*",
            "                NAME:'as1_to_as4'  <== mode:M_Name)",
            "              (pops_term",
            "                TERM:'term'",
            "                name = (junos_name*",
            "                  NAME:'as3'  <== mode:M_Name)",
            "                (pops_common",
            "                  (pops_then*",
            "                    THEN:'then'",
            "                    (popst_common*",
            "                      (popst_accept",
            "                        ACCEPT:'accept'))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line*",
            "    SET:'set'",
            "    (set_line_tail*",
            "      (statement*",
            "        (s_common*",
            "          (s_policy_options*",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_policy_statement",
            "              POLICY_STATEMENT:'policy-statement'",
            "              name = (junos_name*",
            "                NAME:'as4_to_as1'  <== mode:M_Name)",
            "              (pops_term",
            "                TERM:'term'",
            "                name = (junos_name*",
            "                  NAME:'1'  <== mode:M_Name)",
            "                (pops_common",
            "                  (pops_from*",
            "                    FROM:'from'",
            "                    (popsf_community",
            "                      COMMUNITY:'community'",
            "                      name = (junos_name*",
            "                        NAME:'as4_to_as1_community'  <== mode:M_Name))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line*",
            "    SET:'set'",
            "    (set_line_tail*",
            "      (statement*",
            "        (s_common*",
            "          (s_policy_options*",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_policy_statement",
            "              POLICY_STATEMENT:'policy-statement'",
            "              name = (junos_name*",
            "                NAME:'as4_to_as1'  <== mode:M_Name)",
            "              (pops_term",
            "                TERM:'term'",
            "                name = (junos_name*",
            "                  NAME:'1'  <== mode:M_Name)",
            "                (pops_common",
            "                  (pops_from*",
            "                    FROM:'from'",
            "                    (popsf_prefix_list_filter",
            "                      PREFIX_LIST_FILTER:'prefix-list-filter'",
            "                      name = (junos_name*",
            "                        NAME:'as4_prefixes'  <== mode:M_Name)",
            "                      (popsfpl_orlonger*",
            "                        ORLONGER:'orlonger'))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line*",
            "    SET:'set'",
            "    (set_line_tail*",
            "      (statement*",
            "        (s_common*",
            "          (s_policy_options*",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_policy_statement",
            "              POLICY_STATEMENT:'policy-statement'",
            "              name = (junos_name*",
            "                NAME:'as4_to_as1'  <== mode:M_Name)",
            "              (pops_term",
            "                TERM:'term'",
            "                name = (junos_name*",
            "                  NAME:'1'  <== mode:M_Name)",
            "                (pops_common",
            "                  (pops_then*",
            "                    THEN:'then'",
            "                    (popst_common*",
            "                      (popst_local_preference",
            "                        LOCAL_PREFERENCE:'local-preference'",
            "                        localpref = (uint32*",
            "                          UINT16:'350')))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line*",
            "    SET:'set'",
            "    (set_line_tail*",
            "      (statement*",
            "        (s_common*",
            "          (s_policy_options*",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_policy_statement",
            "              POLICY_STATEMENT:'policy-statement'",
            "              name = (junos_name*",
            "                NAME:'as4_to_as1'  <== mode:M_Name)",
            "              (pops_term",
            "                TERM:'term'",
            "                name = (junos_name*",
            "                  NAME:'1'  <== mode:M_Name)",
            "                (pops_common",
            "                  (pops_then*",
            "                    THEN:'then'",
            "                    (popst_common*",
            "                      (popst_accept",
            "                        ACCEPT:'accept'))))))))))",
            "    NEWLINE:'\\n')",
            "  (set_line*",
            "    SET:'set'",
            "    (set_line_tail*",
            "      (statement*",
            "        (s_common*",
            "          (s_policy_options*",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_prefix_list",
            "              PREFIX_LIST:'prefix-list'",
            "              name = (junos_name*",
            "                NAME:'original_prefixes'  <== mode:M_Name)",
            "              (poplt_network",
            "                network = (ip_prefix_default_32*",
            "                  IP_PREFIX:'1.0.1.0/24')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line*",
            "    SET:'set'",
            "    (set_line_tail*",
            "      (statement*",
            "        (s_common*",
            "          (s_policy_options*",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_prefix_list",
            "              PREFIX_LIST:'prefix-list'",
            "              name = (junos_name*",
            "                NAME:'original_prefixes'  <== mode:M_Name)",
            "              (poplt_network",
            "                network = (ip_prefix_default_32*",
            "                  IP_PREFIX:'1.0.2.0/24')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line*",
            "    SET:'set'",
            "    (set_line_tail*",
            "      (statement*",
            "        (s_common*",
            "          (s_policy_options*",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_prefix_list",
            "              PREFIX_LIST:'prefix-list'",
            "              name = (junos_name*",
            "                NAME:'as2_prefixes'  <== mode:M_Name)",
            "              (poplt_network",
            "                network = (ip_prefix_default_32*",
            "                  IP_PREFIX:'2.0.0.0/8')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line*",
            "    SET:'set'",
            "    (set_line_tail*",
            "      (statement*",
            "        (s_common*",
            "          (s_policy_options*",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_prefix_list",
            "              PREFIX_LIST:'prefix-list'",
            "              name = (junos_name*",
            "                NAME:'as2_prefixes'  <== mode:M_Name)",
            "              (poplt_network",
            "                network = (ip_prefix_default_32*",
            "                  IP_PREFIX:'2.128.0.0/16')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line*",
            "    SET:'set'",
            "    (set_line_tail*",
            "      (statement*",
            "        (s_common*",
            "          (s_policy_options*",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_prefix_list",
            "              PREFIX_LIST:'prefix-list'",
            "              name = (junos_name*",
            "                NAME:'as4_prefixes'  <== mode:M_Name)",
            "              (poplt_network",
            "                network = (ip_prefix_default_32*",
            "                  IP_PREFIX:'4.0.0.0/8')))))))",
            "    NEWLINE:'\\n')",
            "  (set_line*",
            "    SET:'set'",
            "    (set_line_tail*",
            "      (statement*",
            "        (s_common*",
            "          (s_policy_options*",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_community",
            "              COMMUNITY:'community'",
            "              name = (junos_name*",
            "                NAME:'as1_to_as3_community'  <== mode:M_Name)",
            "              (poc_members",
            "                MEMBERS:'members'",
            "                member = (poc_members_member*",
            "                  (literal_or_regex_community*",
            "                    LITERAL_OR_REGEX_COMMUNITY:'1:3'  <== mode:M_Members))))))))",
            "    NEWLINE:'\\n'  <== mode:M_Members)",
            "  (set_line*",
            "    SET:'set'",
            "    (set_line_tail*",
            "      (statement*",
            "        (s_common*",
            "          (s_policy_options*",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_community",
            "              COMMUNITY:'community'",
            "              name = (junos_name*",
            "                NAME:'as3_to_as1_community'  <== mode:M_Name)",
            "              (poc_members",
            "                MEMBERS:'members'",
            "                member = (poc_members_member*",
            "                  (literal_or_regex_community*",
            "                    LITERAL_OR_REGEX_COMMUNITY:'3:*'  <== mode:M_Members))))))))",
            "    NEWLINE:'\\n'  <== mode:M_Members)",
            "  (set_line*",
            "    SET:'set'",
            "    (set_line_tail*",
            "      (statement*",
            "        (s_common*",
            "          (s_policy_options*",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_community",
            "              COMMUNITY:'community'",
            "              name = (junos_name*",
            "                NAME:'as1_to_as4_community'  <== mode:M_Name)",
            "              (poc_members",
            "                MEMBERS:'members'",
            "                member = (poc_members_member*",
            "                  (literal_or_regex_community*",
            "                    LITERAL_OR_REGEX_COMMUNITY:'1:4'  <== mode:M_Members))))))))",
            "    NEWLINE:'\\n'  <== mode:M_Members)",
            "  (set_line*",
            "    SET:'set'",
            "    (set_line_tail*",
            "      (statement*",
            "        (s_common*",
            "          (s_policy_options*",
            "            POLICY_OPTIONS:'policy-options'",
            "            (po_community",
            "              COMMUNITY:'community'",
            "              name = (junos_name*",
            "                NAME:'as4_to_as1_community'  <== mode:M_Name)",
            "              (poc_members",
            "                MEMBERS:'members'",
            "                member = (poc_members_member*",
            "                  (literal_or_regex_community*",
            "                    LITERAL_OR_REGEX_COMMUNITY:'4:*'  <== mode:M_Members))))))))",
            "    NEWLINE:'\\n'  <== mode:M_Members)",
            "  (set_line*",
            "    SET:'set'",
            "    (set_line_tail*",
            "      (statement*",
            "        (s_common*",
            "          (s_routing_options",
            "            ROUTING_OPTIONS:'routing-options'",
            "            (ro_router_id",
            "              ROUTER_ID:'router-id'",
            "              id = (ip_address*",
            "                IP_ADDRESS:'1.2.2.2'))))))",
            "    NEWLINE:'\\n\\n')",
            "  EOF:<EOF>)"
          ]
        },
        "configs/as1core1.cfg" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        VERSION:'version'",
            "        FLOAT:'12.4'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_service",
            "      SERVICE:'service'",
            "      (variable*",
            "        VARIABLE:'timestamps')",
            "      (variable*",
            "        DEBUG:'debug')",
            "      (variable*",
            "        VARIABLE:'datetime')",
            "      (variable*",
            "        MSEC:'msec')",
            "      NEWLINE:'\\n'))",
            "  (stanza*",
            "    (s_service",
            "      SERVICE:'service'",
            "      (variable*",
            "        VARIABLE:'timestamps')",
            "      (variable*",
            "        LOG:'log')",
            "      (variable*",
            "        VARIABLE:'datetime')",
            "      (variable*",
            "        MSEC:'msec')",
            "      NEWLINE:'\\n'))",
            "  (stanza*",
            "    (s_service",
            "      NO:'no'",
            "      SERVICE:'service'",
            "      (variable*",
            "        VARIABLE:'password-encryption')",
            "      NEWLINE:'\\n'))",
            "  (stanza*",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'as1core1'",
            "      NEWLINE:'\\n'))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        BOOT_START_MARKER:'boot-start-marker'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        BOOT_END_MARKER:'boot-end-marker'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_aaa",
            "      NO:'no'",
            "      AAA:'aaa'",
            "      (aaa_new_model",
            "        NEW_MODEL:'new-model'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        MEMORY_SIZE:'memory-size'",
            "        VARIABLE:'iomem'",
            "        UINT8:'5'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        IP:'ip'",
            "        CEF:'cef'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_ip_domain",
            "      NO:'no'",
            "      IP:'ip'",
            "      DOMAIN:'domain'",
            "      (ip_domain_lookup",
            "        LOOKUP:'lookup'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_ip_domain",
            "      IP:'ip'",
            "      DOMAIN:'domain'",
            "      (ip_domain_name",
            "        NAME:'name'",
            "        hostname = (variable_hostname*",
            "          VARIABLE:'lab.local'  <== mode:M_Name)",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        IP:'ip'",
            "        AUTH_PROXY:'auth-proxy'",
            "        VARIABLE:'max-nodata-conns'",
            "        UINT8:'3'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        IP:'ip'",
            "        ADMISSION:'admission'",
            "        VARIABLE:'max-nodata-conns'",
            "        UINT8:'3'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_interface*",
            "      INTERFACE:'interface'",
            "      (s_interface_definition",
            "        iname = (interface_name*",
            "          name_prefix_alpha = M_Interface_PREFIX:'Loopback'  <== mode:M_Interface",
            "          (range*",
            "            (subrange*",
            "              low = (dec*",
            "                DEC:'0'  <== mode:M_Interface))))",
            "        NEWLINE:'\\n'  <== mode:M_Interface",
            "        (if_inner*",
            "          (if_ip_address",
            "            IP:'ip'",
            "            ADDRESS:'address'",
            "            ip = IP_ADDRESS:'1.10.1.1'",
            "            subnet = IP_ADDRESS:'255.255.255.255'",
            "            NEWLINE:'\\n')))))",
            "  (stanza*",
            "    (s_interface*",
            "      INTERFACE:'interface'",
            "      (s_interface_definition",
            "        iname = (interface_name*",
            "          name_prefix_alpha = M_Interface_PREFIX:'FastEthernet'  <== mode:M_Interface",
            "          DEC:'0'  <== mode:M_Interface",
            "          FORWARD_SLASH:'/'  <== mode:M_Interface",
            "          (range*",
            "            (subrange*",
            "              low = (dec*",
            "                DEC:'0'  <== mode:M_Interface))))",
            "        NEWLINE:'\\n'  <== mode:M_Interface",
            "        (if_inner*",
            "          (if_ip_address",
            "            IP:'ip'",
            "            ADDRESS:'address'",
            "            ip = IP_ADDRESS:'1.0.1.2'",
            "            subnet = IP_ADDRESS:'255.255.255.0'",
            "            NEWLINE:'\\n'))",
            "        (if_inner*",
            "          (if_null_block*",
            "            DUPLEX:'duplex'",
            "            AUTO:'auto'",
            "            NEWLINE:'\\n'))",
            "        (if_inner*",
            "          (if_speed_auto*",
            "            SPEED:'speed'",
            "            AUTO:'auto'",
            "            NEWLINE:'\\n')))))",
            "  (stanza*",
            "    (s_interface*",
            "      INTERFACE:'interface'",
            "      (s_interface_definition",
            "        iname = (interface_name*",
            "          name_prefix_alpha = M_Interface_PREFIX:'FastEthernet'  <== mode:M_Interface",
            "          DEC:'0'  <== mode:M_Interface",
            "          FORWARD_SLASH:'/'  <== mode:M_Interface",
            "          (range*",
            "            (subrange*",
            "              low = (dec*",
            "                DEC:'1'  <== mode:M_Interface))))",
            "        NEWLINE:'\\n'  <== mode:M_Interface",
            "        (if_inner*",
            "          (if_ip_address",
            "            IP:'ip'",
            "            ADDRESS:'address'",
            "            ip = IP_ADDRESS:'1.0.2.2'",
            "            subnet = IP_ADDRESS:'255.255.255.0'",
            "            NEWLINE:'\\n'))",
            "        (if_inner*",
            "          (if_null_block*",
            "            DUPLEX:'duplex'",
            "            AUTO:'auto'",
            "            NEWLINE:'\\n'))",
            "        (if_inner*",
            "          (if_speed_auto*",
            "            SPEED:'speed'",
            "            AUTO:'auto'",
            "            NEWLINE:'\\n')))))",
            "  (stanza*",
            "    (s_router_ospf",
            "      ROUTER:'router'",
            "      OSPF:'ospf'",
            "      name = (variable*",
            "        UINT8:'1')",
            "      NEWLINE:'\\n'",
            "      (ro_inner*",
            "        (ro_router_id",
            "          ROUTER_ID:'router-id'",
            "          ip = IP_ADDRESS:'1.10.1.1'",
            "          NEWLINE:'\\n'))",
            "      (ro_inner*",
            "        (ro_common*",
            "          (ro_null*",
            "            LOG_ADJACENCY_CHANGES:'log-adjacency-changes'",
            "            (null_rest_of_line*",
            "              NEWLINE:'\\n'))))",
            "      (ro_inner*",
            "        (ro_network",
            "          NETWORK:'network'",
            "          ip = IP_ADDRESS:'1.0.0.0'",
            "          wildcard = IP_ADDRESS:'0.255.255.255'",
            "          AREA:'area'",
            "          area_int = (dec*",
            "            UINT8:'1')",
            "          NEWLINE:'\\n'))))",
            "  (stanza*",
            "    (router_bgp_stanza",
            "      ROUTER:'router'",
            "      BGP:'bgp'",
            "      procnum = (bgp_asn*",
            "        asn = (uint32*",
            "          UINT8:'1'))",
            "      NEWLINE:'\\n'",
            "      (router_bgp_stanza_tail*",
            "        (router_id_rb_stanza*",
            "          BGP:'bgp'",
            "          (router_id_bgp_tail",
            "            ROUTER_ID:'router-id'",
            "            routerid = IP_ADDRESS:'1.10.1.1'",
            "            NEWLINE:'\\n')))",
            "      (router_bgp_stanza_tail*",
            "        (bgp_rb_stanza*",
            "          BGP:'bgp'",
            "          (bgp_log_neighbor_changes_rb_stanza_null*",
            "            LOG_NEIGHBOR_CHANGES:'log-neighbor-changes'",
            "            (null_rest_of_line*",
            "              NEWLINE:'\\n'))))",
            "      (router_bgp_stanza_tail*",
            "        (peer_group_creation_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          name = VARIABLE:'as1'  <== mode:M_NEIGHBOR",
            "          PEER_GROUP:'peer-group'",
            "          NEWLINE:'\\n'  <== mode:M_NEIGHBOR))",
            "      (router_bgp_stanza_tail*",
            "        (neighbor_flat_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          peergroup = VARIABLE:'as1'  <== mode:M_NEIGHBOR",
            "          (remote_as_bgp_tail",
            "            REMOTE_AS:'remote-as'",
            "            remote = (bgp_asn*",
            "              asn = (uint32*",
            "                UINT8:'1'))",
            "            NEWLINE:'\\n')))",
            "      (router_bgp_stanza_tail*",
            "        (peer_group_assignment_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          address = IP_ADDRESS:'1.1.1.1'  <== mode:M_NEIGHBOR",
            "          PEER_GROUP:'peer-group'",
            "          name = (variable*",
            "            VARIABLE:'as1'  <== mode:M_NEIGHBOR)",
            "          NEWLINE:'\\n'))",
            "      (router_bgp_stanza_tail*",
            "        (neighbor_flat_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          ip = IP_ADDRESS:'1.1.1.1'  <== mode:M_NEIGHBOR",
            "          (bgp_tail*",
            "            (update_source_bgp_tail",
            "              UPDATE_SOURCE:'update-source'",
            "              source = (interface_name*",
            "                name_prefix_alpha = M_Interface_PREFIX:'Loopback'  <== mode:M_Interface",
            "                (range*",
            "                  (subrange*",
            "                    low = (dec*",
            "                      DEC:'0'  <== mode:M_Interface))))",
            "              NEWLINE:'\\n'  <== mode:M_Interface))))",
            "      (router_bgp_stanza_tail*",
            "        (peer_group_assignment_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          address = IP_ADDRESS:'1.2.2.2'  <== mode:M_NEIGHBOR",
            "          PEER_GROUP:'peer-group'",
            "          name = (variable*",
            "            VARIABLE:'as1'  <== mode:M_NEIGHBOR)",
            "          NEWLINE:'\\n'))",
            "      (router_bgp_stanza_tail*",
            "        (neighbor_flat_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          ip = IP_ADDRESS:'1.2.2.2'  <== mode:M_NEIGHBOR",
            "          (bgp_tail*",
            "            (update_source_bgp_tail",
            "              UPDATE_SOURCE:'update-source'",
            "              source = (interface_name*",
            "                name_prefix_alpha = M_Interface_PREFIX:'Loopback'  <== mode:M_Interface",
            "                (range*",
            "                  (subrange*",
            "                    low = (dec*",
            "                      DEC:'0'  <== mode:M_Interface))))",
            "              NEWLINE:'\\n'  <== mode:M_Interface))))",
            "      (router_bgp_stanza_tail*",
            "        (bgp_tail*",
            "          (maximum_paths_bgp_tail",
            "            MAXIMUM_PATHS:'maximum-paths'",
            "            paths = (dec*",
            "              UINT8:'5')",
            "            NEWLINE:'\\n')))",
            "      (router_bgp_stanza_tail*",
            "        (address_family_rb_stanza",
            "          (address_family_header",
            "            ADDRESS_FAMILY:'address-family'",
            "            af = (bgp_address_family*",
            "              IPV4:'ipv4')",
            "            NEWLINE:'\\n')",
            "          (address_family_inner*",
            "            (neighbor_flat_rb_stanza",
            "              NEIGHBOR:'neighbor'",
            "              peergroup = VARIABLE:'as1'  <== mode:M_NEIGHBOR",
            "              (bgp_tail*",
            "                (send_community_bgp_tail",
            "                  SEND_COMMUNITY:'send-community'",
            "                  NEWLINE:'\\n'))))",
            "          (address_family_inner*",
            "            (neighbor_flat_rb_stanza",
            "              NEIGHBOR:'neighbor'",
            "              peergroup = VARIABLE:'as1'  <== mode:M_NEIGHBOR",
            "              (bgp_tail*",
            "                (route_reflector_client_bgp_tail",
            "                  ROUTE_REFLECTOR_CLIENT:'route-reflector-client'",
            "                  NEWLINE:'\\n'))))",
            "          (address_family_inner*",
            "            (neighbor_flat_rb_stanza",
            "              NEIGHBOR:'neighbor'",
            "              ip = IP_ADDRESS:'1.1.1.1'  <== mode:M_NEIGHBOR",
            "              (bgp_tail*",
            "                (activate_bgp_tail",
            "                  ACTIVATE:'activate'",
            "                  NEWLINE:'\\n'))))",
            "          (address_family_inner*",
            "            (neighbor_flat_rb_stanza",
            "              NEIGHBOR:'neighbor'",
            "              ip = IP_ADDRESS:'1.2.2.2'  <== mode:M_NEIGHBOR",
            "              (bgp_tail*",
            "                (activate_bgp_tail",
            "                  ACTIVATE:'activate'",
            "                  NEWLINE:'\\n'))))",
            "          (address_family_inner*",
            "            (bgp_tail*",
            "              (maximum_paths_bgp_tail",
            "                MAXIMUM_PATHS:'maximum-paths'",
            "                paths = (dec*",
            "                  UINT8:'5')",
            "                NEWLINE:'\\n')))",
            "          (address_family_inner*",
            "            (bgp_tail*",
            "              (null_bgp_tail*",
            "                NO:'no'",
            "                AUTO_SUMMARY:'auto-summary'",
            "                (null_rest_of_line*",
            "                  NEWLINE:'\\n'))))",
            "          (address_family_inner*",
            "            (bgp_tail*",
            "              (null_bgp_tail*",
            "                NO:'no'",
            "                SYNCHRONIZATION:'synchronization'",
            "                (null_rest_of_line*",
            "                  NEWLINE:'\\n'))))",
            "          (address_family_inner*",
            "            (bgp_tail*",
            "              (bgp_bgp_tail*",
            "                BGP:'bgp'",
            "                (bgp_dampening_bgp_tail_null*",
            "                  DAMPENING:'dampening'",
            "                  (null_rest_of_line*",
            "                    NEWLINE:'\\n')))))",
            "          (address_family_footer*",
            "            EXIT_ADDRESS_FAMILY:'exit-address-family'",
            "            NEWLINE:'\\n')))))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        IP:'ip'",
            "        FORWARD_PROTOCOL:'forward-protocol'",
            "        ND:'nd'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        NO:'no'",
            "        IP:'ip'",
            "        HTTP:'http'",
            "        SERVER:'server'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        NO:'no'",
            "        IP:'ip'",
            "        HTTP:'http'",
            "        VARIABLE:'secure-server'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_control_plane*",
            "      CONTROL_PLANE:'control-plane'",
            "      NEWLINE:'\\n'))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        MGCP:'mgcp'",
            "        VARIABLE:'behavior'",
            "        VARIABLE:'g729-variants'",
            "        VARIABLE:'static-pt'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_gatekeeper*",
            "      GATEKEEPER:'gatekeeper'",
            "      NEWLINE:'\\n'",
            "      (gk_null*",
            "        SHUTDOWN:'shutdown'",
            "        (null_rest_of_line*",
            "          NEWLINE:'\\n'))))",
            "  (stanza*",
            "    (s_line",
            "      LINE:'line'",
            "      (line_type*",
            "        CON:'con')",
            "      first = (dec*",
            "        UINT8:'0')",
            "      NEWLINE:'\\n'",
            "      (l_exec_timeout",
            "        EXEC_TIMEOUT:'exec-timeout'",
            "        minutes = (dec*",
            "          UINT8:'0')",
            "        seconds = (dec*",
            "          UINT8:'0')",
            "        NEWLINE:'\\n')",
            "      (l_null*",
            "        PRIVILEGE:'privilege'",
            "        (null_rest_of_line*",
            "          LEVEL:'level'",
            "          UINT8:'15'",
            "          NEWLINE:'\\n'))",
            "      (l_null*",
            "        LOGGING:'logging'",
            "        (null_rest_of_line*",
            "          SYNCHRONOUS:'synchronous'",
            "          NEWLINE:'\\n'))))",
            "  (stanza*",
            "    (s_line",
            "      LINE:'line'",
            "      (line_type*",
            "        AUX:'aux')",
            "      first = (dec*",
            "        UINT8:'0')",
            "      NEWLINE:'\\n'",
            "      (l_exec_timeout",
            "        EXEC_TIMEOUT:'exec-timeout'",
            "        minutes = (dec*",
            "          UINT8:'0')",
            "        seconds = (dec*",
            "          UINT8:'0')",
            "        NEWLINE:'\\n')",
            "      (l_null*",
            "        PRIVILEGE:'privilege'",
            "        (null_rest_of_line*",
            "          LEVEL:'level'",
            "          UINT8:'15'",
            "          NEWLINE:'\\n'))",
            "      (l_null*",
            "        LOGGING:'logging'",
            "        (null_rest_of_line*",
            "          SYNCHRONOUS:'synchronous'",
            "          NEWLINE:'\\n'))))",
            "  (stanza*",
            "    (s_line",
            "      LINE:'line'",
            "      (line_type*",
            "        VTY:'vty')",
            "      first = (dec*",
            "        UINT8:'0')",
            "      last = (dec*",
            "        UINT8:'4')",
            "      NEWLINE:'\\n'))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        END:'end'",
            "        NEWLINE:'\\n\\n')))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/as2border1.cfg" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        VERSION:'version'",
            "        FLOAT:'12.4'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_service",
            "      SERVICE:'service'",
            "      (variable*",
            "        VARIABLE:'timestamps')",
            "      (variable*",
            "        DEBUG:'debug')",
            "      (variable*",
            "        VARIABLE:'datetime')",
            "      (variable*",
            "        MSEC:'msec')",
            "      NEWLINE:'\\n'))",
            "  (stanza*",
            "    (s_service",
            "      SERVICE:'service'",
            "      (variable*",
            "        VARIABLE:'timestamps')",
            "      (variable*",
            "        LOG:'log')",
            "      (variable*",
            "        VARIABLE:'datetime')",
            "      (variable*",
            "        MSEC:'msec')",
            "      NEWLINE:'\\n'))",
            "  (stanza*",
            "    (s_service",
            "      NO:'no'",
            "      SERVICE:'service'",
            "      (variable*",
            "        VARIABLE:'password-encryption')",
            "      NEWLINE:'\\n'))",
            "  (stanza*",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'as2border1'",
            "      NEWLINE:'\\n'))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        BOOT_START_MARKER:'boot-start-marker'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        BOOT_END_MARKER:'boot-end-marker'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_aaa",
            "      NO:'no'",
            "      AAA:'aaa'",
            "      (aaa_new_model",
            "        NEW_MODEL:'new-model'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        MEMORY_SIZE:'memory-size'",
            "        VARIABLE:'iomem'",
            "        UINT8:'5'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        IP:'ip'",
            "        CEF:'cef'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_ip_domain",
            "      NO:'no'",
            "      IP:'ip'",
            "      DOMAIN:'domain'",
            "      (ip_domain_lookup",
            "        LOOKUP:'lookup'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_ip_domain",
            "      IP:'ip'",
            "      DOMAIN:'domain'",
            "      (ip_domain_name",
            "        NAME:'name'",
            "        hostname = (variable_hostname*",
            "          VARIABLE:'lab.local'  <== mode:M_Name)",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        IP:'ip'",
            "        AUTH_PROXY:'auth-proxy'",
            "        VARIABLE:'max-nodata-conns'",
            "        UINT8:'3'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        IP:'ip'",
            "        ADMISSION:'admission'",
            "        VARIABLE:'max-nodata-conns'",
            "        UINT8:'3'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_interface*",
            "      INTERFACE:'interface'",
            "      (s_interface_definition",
            "        iname = (interface_name*",
            "          name_prefix_alpha = M_Interface_PREFIX:'Loopback'  <== mode:M_Interface",
            "          (range*",
            "            (subrange*",
            "              low = (dec*",
            "                DEC:'0'  <== mode:M_Interface))))",
            "        NEWLINE:'\\n'  <== mode:M_Interface",
            "        (if_inner*",
            "          (if_ip_address",
            "            IP:'ip'",
            "            ADDRESS:'address'",
            "            ip = IP_ADDRESS:'2.1.1.1'",
            "            subnet = IP_ADDRESS:'255.255.255.255'",
            "            NEWLINE:'\\n')))))",
            "  (stanza*",
            "    (s_interface*",
            "      INTERFACE:'interface'",
            "      (s_interface_definition",
            "        iname = (interface_name*",
            "          name_prefix_alpha = M_Interface_PREFIX:'FastEthernet'  <== mode:M_Interface",
            "          DEC:'0'  <== mode:M_Interface",
            "          FORWARD_SLASH:'/'  <== mode:M_Interface",
            "          (range*",
            "            (subrange*",
            "              low = (dec*",
            "                DEC:'0'  <== mode:M_Interface))))",
            "        NEWLINE:'\\n'  <== mode:M_Interface",
            "        (if_inner*",
            "          (if_ip_address",
            "            IP:'ip'",
            "            ADDRESS:'address'",
            "            ip = IP_ADDRESS:'10.12.11.2'",
            "            subnet = IP_ADDRESS:'255.255.255.0'",
            "            NEWLINE:'\\n'))",
            "        (if_inner*",
            "          (if_ip_access_group",
            "            IP:'ip'",
            "            ACCESS_GROUP:'access-group'",
            "            name = (variable*",
            "              VARIABLE:'BLOCK_SPOOF_IN')",
            "            IN:'in'",
            "            NEWLINE:'\\n'))",
            "        (if_inner*",
            "          (if_null_block*",
            "            DUPLEX:'duplex'",
            "            AUTO:'auto'",
            "            NEWLINE:'\\n'))",
            "        (if_inner*",
            "          (if_speed_auto*",
            "            SPEED:'speed'",
            "            AUTO:'auto'",
            "            NEWLINE:'\\n')))))",
            "  (stanza*",
            "    (s_interface*",
            "      INTERFACE:'interface'",
            "      (s_interface_definition",
            "        iname = (interface_name*",
            "          name_prefix_alpha = M_Interface_PREFIX:'FastEthernet'  <== mode:M_Interface",
            "          DEC:'0'  <== mode:M_Interface",
            "          FORWARD_SLASH:'/'  <== mode:M_Interface",
            "          (range*",
            "            (subrange*",
            "              low = (dec*",
            "                DEC:'1'  <== mode:M_Interface))))",
            "        NEWLINE:'\\n'  <== mode:M_Interface",
            "        (if_inner*",
            "          (if_ip_address",
            "            IP:'ip'",
            "            ADDRESS:'address'",
            "            ip = IP_ADDRESS:'2.12.11.1'",
            "            subnet = IP_ADDRESS:'255.255.255.0'",
            "            NEWLINE:'\\n'))",
            "        (if_inner*",
            "          (if_null_block*",
            "            DUPLEX:'duplex'",
            "            AUTO:'auto'",
            "            NEWLINE:'\\n'))",
            "        (if_inner*",
            "          (if_speed_auto*",
            "            SPEED:'speed'",
            "            AUTO:'auto'",
            "            NEWLINE:'\\n')))))",
            "  (stanza*",
            "    (s_interface*",
            "      INTERFACE:'interface'",
            "      (s_interface_definition",
            "        iname = (interface_name*",
            "          name_prefix_alpha = M_Interface_PREFIX:'FastEthernet'  <== mode:M_Interface",
            "          DEC:'1'  <== mode:M_Interface",
            "          FORWARD_SLASH:'/'  <== mode:M_Interface",
            "          (range*",
            "            (subrange*",
            "              low = (dec*",
            "                DEC:'0'  <== mode:M_Interface))))",
            "        NEWLINE:'\\n'  <== mode:M_Interface",
            "        (if_inner*",
            "          (if_ip_address",
            "            IP:'ip'",
            "            ADDRESS:'address'",
            "            ip = IP_ADDRESS:'2.12.12.1'",
            "            subnet = IP_ADDRESS:'255.255.255.0'",
            "            NEWLINE:'\\n'))",
            "        (if_inner*",
            "          (if_null_block*",
            "            DUPLEX:'duplex'",
            "            AUTO:'auto'",
            "            NEWLINE:'\\n'))",
            "        (if_inner*",
            "          (if_speed_auto*",
            "            SPEED:'speed'",
            "            AUTO:'auto'",
            "            NEWLINE:'\\n')))))",
            "  (stanza*",
            "    (s_router_ospf",
            "      ROUTER:'router'",
            "      OSPF:'ospf'",
            "      name = (variable*",
            "        UINT8:'1')",
            "      NEWLINE:'\\n'",
            "      (ro_inner*",
            "        (ro_router_id",
            "          ROUTER_ID:'router-id'",
            "          ip = IP_ADDRESS:'2.1.1.1'",
            "          NEWLINE:'\\n'))",
            "      (ro_inner*",
            "        (ro_common*",
            "          (ro_null*",
            "            LOG_ADJACENCY_CHANGES:'log-adjacency-changes'",
            "            (null_rest_of_line*",
            "              NEWLINE:'\\n'))))",
            "      (ro_inner*",
            "        (ro_redistribute_connected",
            "          REDISTRIBUTE:'redistribute'",
            "          CONNECTED:'connected'",
            "          subnets = SUBNETS:'subnets'",
            "          NEWLINE:'\\n'))",
            "      (ro_inner*",
            "        (ro_network",
            "          NETWORK:'network'",
            "          ip = IP_ADDRESS:'2.0.0.0'",
            "          wildcard = IP_ADDRESS:'0.255.255.255'",
            "          AREA:'area'",
            "          area_int = (dec*",
            "            UINT8:'1')",
            "          NEWLINE:'\\n'))))",
            "  (stanza*",
            "    (router_bgp_stanza",
            "      ROUTER:'router'",
            "      BGP:'bgp'",
            "      procnum = (bgp_asn*",
            "        asn = (uint32*",
            "          UINT8:'2'))",
            "      NEWLINE:'\\n'",
            "      (router_bgp_stanza_tail*",
            "        (router_id_rb_stanza*",
            "          BGP:'bgp'",
            "          (router_id_bgp_tail",
            "            ROUTER_ID:'router-id'",
            "            routerid = IP_ADDRESS:'2.1.1.1'",
            "            NEWLINE:'\\n')))",
            "      (router_bgp_stanza_tail*",
            "        (bgp_rb_stanza*",
            "          BGP:'bgp'",
            "          (bgp_log_neighbor_changes_rb_stanza_null*",
            "            LOG_NEIGHBOR_CHANGES:'log-neighbor-changes'",
            "            (null_rest_of_line*",
            "              NEWLINE:'\\n'))))",
            "      (router_bgp_stanza_tail*",
            "        (peer_group_creation_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          name = VARIABLE:'as1'  <== mode:M_NEIGHBOR",
            "          PEER_GROUP:'peer-group'",
            "          NEWLINE:'\\n'  <== mode:M_NEIGHBOR))",
            "      (router_bgp_stanza_tail*",
            "        (neighbor_flat_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          peergroup = VARIABLE:'as1'  <== mode:M_NEIGHBOR",
            "          (remote_as_bgp_tail",
            "            REMOTE_AS:'remote-as'",
            "            remote = (bgp_asn*",
            "              asn = (uint32*",
            "                UINT8:'1'))",
            "            NEWLINE:'\\n')))",
            "      (router_bgp_stanza_tail*",
            "        (peer_group_creation_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          name = VARIABLE:'as2'  <== mode:M_NEIGHBOR",
            "          PEER_GROUP:'peer-group'",
            "          NEWLINE:'\\n'  <== mode:M_NEIGHBOR))",
            "      (router_bgp_stanza_tail*",
            "        (neighbor_flat_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          peergroup = VARIABLE:'as2'  <== mode:M_NEIGHBOR",
            "          (remote_as_bgp_tail",
            "            REMOTE_AS:'remote-as'",
            "            remote = (bgp_asn*",
            "              asn = (uint32*",
            "                UINT8:'2'))",
            "            NEWLINE:'\\n')))",
            "      (router_bgp_stanza_tail*",
            "        (peer_group_creation_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          name = VARIABLE:'as3'  <== mode:M_NEIGHBOR",
            "          PEER_GROUP:'peer-group'",
            "          NEWLINE:'\\n'  <== mode:M_NEIGHBOR))",
            "      (router_bgp_stanza_tail*",
            "        (neighbor_flat_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          peergroup = VARIABLE:'as3'  <== mode:M_NEIGHBOR",
            "          (remote_as_bgp_tail",
            "            REMOTE_AS:'remote-as'",
            "            remote = (bgp_asn*",
            "              asn = (uint32*",
            "                UINT8:'3'))",
            "            NEWLINE:'\\n')))",
            "      (router_bgp_stanza_tail*",
            "        (peer_group_assignment_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          address = IP_ADDRESS:'2.1.2.1'  <== mode:M_NEIGHBOR",
            "          PEER_GROUP:'peer-group'",
            "          name = (variable*",
            "            VARIABLE:'as2'  <== mode:M_NEIGHBOR)",
            "          NEWLINE:'\\n'))",
            "      (router_bgp_stanza_tail*",
            "        (peer_group_assignment_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          address = IP_ADDRESS:'2.1.2.2'  <== mode:M_NEIGHBOR",
            "          PEER_GROUP:'peer-group'",
            "          name = (variable*",
            "            VARIABLE:'as2'  <== mode:M_NEIGHBOR)",
            "          NEWLINE:'\\n'))",
            "      (router_bgp_stanza_tail*",
            "        (neighbor_flat_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          ip = IP_ADDRESS:'2.1.2.1'  <== mode:M_NEIGHBOR",
            "          (bgp_tail*",
            "            (update_source_bgp_tail",
            "              UPDATE_SOURCE:'update-source'",
            "              source = (interface_name*",
            "                name_prefix_alpha = M_Interface_PREFIX:'Loopback'  <== mode:M_Interface",
            "                (range*",
            "                  (subrange*",
            "                    low = (dec*",
            "                      DEC:'0'  <== mode:M_Interface))))",
            "              NEWLINE:'\\n'  <== mode:M_Interface))))",
            "      (router_bgp_stanza_tail*",
            "        (neighbor_flat_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          ip = IP_ADDRESS:'2.1.2.2'  <== mode:M_NEIGHBOR",
            "          (bgp_tail*",
            "            (update_source_bgp_tail",
            "              UPDATE_SOURCE:'update-source'",
            "              source = (interface_name*",
            "                name_prefix_alpha = M_Interface_PREFIX:'Loopback'  <== mode:M_Interface",
            "                (range*",
            "                  (subrange*",
            "                    low = (dec*",
            "                      DEC:'0'  <== mode:M_Interface))))",
            "              NEWLINE:'\\n'  <== mode:M_Interface))))",
            "      (router_bgp_stanza_tail*",
            "        (peer_group_assignment_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          address = IP_ADDRESS:'10.12.11.1'  <== mode:M_NEIGHBOR",
            "          PEER_GROUP:'peer-group'",
            "          name = (variable*",
            "            VARIABLE:'as1'  <== mode:M_NEIGHBOR)",
            "          NEWLINE:'\\n'))",
            "      (router_bgp_stanza_tail*",
            "        (bgp_tail*",
            "          (maximum_paths_bgp_tail",
            "            MAXIMUM_PATHS:'maximum-paths'",
            "            paths = (dec*",
            "              UINT8:'5')",
            "            NEWLINE:'\\n')))",
            "      (router_bgp_stanza_tail*",
            "        (address_family_rb_stanza",
            "          (address_family_header",
            "            ADDRESS_FAMILY:'address-family'",
            "            af = (bgp_address_family*",
            "              IPV4:'ipv4')",
            "            NEWLINE:'\\n')",
            "          (address_family_inner*",
            "            (aggregate_address_rb_stanza",
            "              AGGREGATE_ADDRESS:'aggregate-address'",
            "              network = IP_ADDRESS:'2.0.0.0'",
            "              subnet = IP_ADDRESS:'255.0.0.0'",
            "              (agg_summary_only",
            "                SUMMARY_ONLY:'summary-only')",
            "              NEWLINE:'\\n'))",
            "          (address_family_inner*",
            "            (neighbor_flat_rb_stanza",
            "              NEIGHBOR:'neighbor'",
            "              peergroup = VARIABLE:'as1'  <== mode:M_NEIGHBOR",
            "              (bgp_tail*",
            "                (send_community_bgp_tail",
            "                  SEND_COMMUNITY:'send-community'",
            "                  NEWLINE:'\\n'))))",
            "          (address_family_inner*",
            "            (neighbor_flat_rb_stanza",
            "              NEIGHBOR:'neighbor'",
            "              peergroup = VARIABLE:'as2'  <== mode:M_NEIGHBOR",
            "              (bgp_tail*",
            "                (send_community_bgp_tail",
            "                  SEND_COMMUNITY:'send-community'",
            "                  NEWLINE:'\\n'))))",
            "          (address_family_inner*",
            "            (neighbor_flat_rb_stanza",
            "              NEIGHBOR:'neighbor'",
            "              peergroup = VARIABLE:'as3'  <== mode:M_NEIGHBOR",
            "              (bgp_tail*",
            "                (send_community_bgp_tail",
            "                  SEND_COMMUNITY:'send-community'",
            "                  NEWLINE:'\\n'))))",
            "          (address_family_inner*",
            "            (neighbor_flat_rb_stanza",
            "              NEIGHBOR:'neighbor'",
            "              peergroup = VARIABLE:'as1'  <== mode:M_NEIGHBOR",
            "              (bgp_tail*",
            "                (route_map_bgp_tail",
            "                  ROUTE_MAP:'route-map'",
            "                  name = (variable*",
            "                    VARIABLE:'as2_to_as1'  <== mode:M_RouteMap)",
            "                  OUT:'out'",
            "                  NEWLINE:'\\n'))))",
            "          (address_family_inner*",
            "            (neighbor_flat_rb_stanza",
            "              NEIGHBOR:'neighbor'",
            "              peergroup = VARIABLE:'as1'  <== mode:M_NEIGHBOR",
            "              (bgp_tail*",
            "                (route_map_bgp_tail",
            "                  ROUTE_MAP:'route-map'",
            "                  name = (variable*",
            "                    VARIABLE:'as1_to_as2'  <== mode:M_RouteMap)",
            "                  IN:'in'",
            "                  NEWLINE:'\\n'))))",
            "          (address_family_inner*",
            "            (neighbor_flat_rb_stanza",
            "              NEIGHBOR:'neighbor'",
            "              peergroup = VARIABLE:'as3'  <== mode:M_NEIGHBOR",
            "              (bgp_tail*",
            "                (route_map_bgp_tail",
            "                  ROUTE_MAP:'route-map'",
            "                  name = (variable*",
            "                    VARIABLE:'as2_to_as3'  <== mode:M_RouteMap)",
            "                  OUT:'out'",
            "                  NEWLINE:'\\n'))))",
            "          (address_family_inner*",
            "            (neighbor_flat_rb_stanza",
            "              NEIGHBOR:'neighbor'",
            "              peergroup = VARIABLE:'as3'  <== mode:M_NEIGHBOR",
            "              (bgp_tail*",
            "                (route_map_bgp_tail",
            "                  ROUTE_MAP:'route-map'",
            "                  name = (variable*",
            "                    VARIABLE:'as3_to_as2'  <== mode:M_RouteMap)",
            "                  IN:'in'",
            "                  NEWLINE:'\\n'))))",
            "          (address_family_inner*",
            "            (neighbor_flat_rb_stanza",
            "              NEIGHBOR:'neighbor'",
            "              ip = IP_ADDRESS:'2.1.2.1'  <== mode:M_NEIGHBOR",
            "              (bgp_tail*",
            "                (activate_bgp_tail",
            "                  ACTIVATE:'activate'",
            "                  NEWLINE:'\\n'))))",
            "          (address_family_inner*",
            "            (neighbor_flat_rb_stanza",
            "              NEIGHBOR:'neighbor'",
            "              ip = IP_ADDRESS:'2.1.2.2'  <== mode:M_NEIGHBOR",
            "              (bgp_tail*",
            "                (activate_bgp_tail",
            "                  ACTIVATE:'activate'",
            "                  NEWLINE:'\\n'))))",
            "          (address_family_inner*",
            "            (neighbor_flat_rb_stanza",
            "              NEIGHBOR:'neighbor'",
            "              ip = IP_ADDRESS:'10.12.11.1'  <== mode:M_NEIGHBOR",
            "              (bgp_tail*",
            "                (activate_bgp_tail",
            "                  ACTIVATE:'activate'",
            "                  NEWLINE:'\\n'))))",
            "          (address_family_inner*",
            "            (bgp_tail*",
            "              (maximum_paths_bgp_tail",
            "                MAXIMUM_PATHS:'maximum-paths'",
            "                paths = (dec*",
            "                  UINT8:'5')",
            "                NEWLINE:'\\n')))",
            "          (address_family_inner*",
            "            (bgp_tail*",
            "              (null_bgp_tail*",
            "                NO:'no'",
            "                AUTO_SUMMARY:'auto-summary'",
            "                (null_rest_of_line*",
            "                  NEWLINE:'\\n'))))",
            "          (address_family_inner*",
            "            (bgp_tail*",
            "              (null_bgp_tail*",
            "                NO:'no'",
            "                SYNCHRONIZATION:'synchronization'",
            "                (null_rest_of_line*",
            "                  NEWLINE:'\\n'))))",
            "          (address_family_inner*",
            "            (bgp_tail*",
            "              (bgp_bgp_tail*",
            "                BGP:'bgp'",
            "                (bgp_dampening_bgp_tail_null*",
            "                  DAMPENING:'dampening'",
            "                  (null_rest_of_line*",
            "                    NEWLINE:'\\n')))))",
            "          (address_family_footer*",
            "            EXIT_ADDRESS_FAMILY:'exit-address-family'",
            "            NEWLINE:'\\n')))))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        IP:'ip'",
            "        FORWARD_PROTOCOL:'forward-protocol'",
            "        ND:'nd'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        IP:'ip'",
            "        BGP_COMMUNITY:'bgp-community'",
            "        VARIABLE:'new-format'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (ip_community_list_expanded_stanza",
            "      IP:'ip'",
            "      COMMUNITY_LIST:'community-list'",
            "      EXPANDED:'expanded'",
            "      name = (variable*",
            "        VARIABLE:'as1_community')",
            "      (ip_community_list_expanded_tail",
            "        ala = (access_list_action*",
            "          PERMIT:'permit')",
            "        VARIABLE:'_1:'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (ip_community_list_expanded_stanza",
            "      IP:'ip'",
            "      COMMUNITY_LIST:'community-list'",
            "      EXPANDED:'expanded'",
            "      name = (variable*",
            "        VARIABLE:'as2_community')",
            "      (ip_community_list_expanded_tail",
            "        ala = (access_list_action*",
            "          PERMIT:'permit')",
            "        VARIABLE:'_2:'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (ip_community_list_expanded_stanza",
            "      IP:'ip'",
            "      COMMUNITY_LIST:'community-list'",
            "      EXPANDED:'expanded'",
            "      name = (variable*",
            "        VARIABLE:'as3_community')",
            "      (ip_community_list_expanded_tail",
            "        ala = (access_list_action*",
            "          PERMIT:'permit')",
            "        VARIABLE:'_3:'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        NO:'no'",
            "        IP:'ip'",
            "        HTTP:'http'",
            "        SERVER:'server'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        NO:'no'",
            "        IP:'ip'",
            "        HTTP:'http'",
            "        VARIABLE:'secure-server'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (extended_access_list_stanza",
            "      IP:'ip'",
            "      ACCESS_LIST:'access-list'",
            "      EXTENDED:'extended'",
            "      name = (variable_aclname*",
            "        VARIABLE:'BLOCK_SPOOF_IN')",
            "      NEWLINE:'\\n'",
            "      (extended_access_list_tail",
            "        ala = (access_list_action*",
            "          DENY:'deny')",
            "        prot = (protocol*",
            "          IP:'ip')",
            "        srcipr = (access_list_ip_range*",
            "          ip = IP_ADDRESS:'2.0.0.0'",
            "          wildcard = IP_ADDRESS:'0.255.255.255')",
            "        dstipr = (access_list_ip_range*",
            "          ANY:'any')",
            "        NEWLINE:'\\n')",
            "      (extended_access_list_tail",
            "        ala = (access_list_action*",
            "          PERMIT:'permit')",
            "        prot = (protocol*",
            "          IP:'ip')",
            "        srcipr = (access_list_ip_range*",
            "          ANY:'any')",
            "        dstipr = (access_list_ip_range*",
            "          ANY:'any')",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (ip_prefix_list_stanza",
            "      IP:'ip'",
            "      PREFIX_LIST:'prefix-list'",
            "      name = (variable*",
            "        VARIABLE:'inbound_route_filter'  <== mode:M_Name)",
            "      (ip_prefix_list_tail",
            "        SEQ:'seq'",
            "        seqnum = (dec*",
            "          UINT8:'5')",
            "        action = (access_list_action*",
            "          DENY:'deny')",
            "        prefix = IP_PREFIX:'2.0.0.0/8'",
            "        LE:'le'",
            "        maxpl = (dec*",
            "          UINT8:'32')",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (ip_prefix_list_stanza",
            "      IP:'ip'",
            "      PREFIX_LIST:'prefix-list'",
            "      name = (variable*",
            "        VARIABLE:'inbound_route_filter'  <== mode:M_Name)",
            "      (ip_prefix_list_tail",
            "        SEQ:'seq'",
            "        seqnum = (dec*",
            "          UINT8:'10')",
            "        action = (access_list_action*",
            "          PERMIT:'permit')",
            "        prefix = IP_PREFIX:'0.0.0.0/0'",
            "        LE:'le'",
            "        maxpl = (dec*",
            "          UINT8:'32')",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (extended_access_list_stanza",
            "      ACCESS_LIST:'access-list'",
            "      num = ACL_NUM_EXTENDED:'101'",
            "      (extended_access_list_tail",
            "        ala = (access_list_action*",
            "          PERMIT:'permit')",
            "        prot = (protocol*",
            "          IP:'ip')",
            "        srcipr = (access_list_ip_range*",
            "          HOST:'host'",
            "          ip = IP_ADDRESS:'1.0.1.0')",
            "        dstipr = (access_list_ip_range*",
            "          HOST:'host'",
            "          ip = IP_ADDRESS:'255.255.255.0')",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (extended_access_list_stanza",
            "      ACCESS_LIST:'access-list'",
            "      num = ACL_NUM_EXTENDED:'101'",
            "      (extended_access_list_tail",
            "        ala = (access_list_action*",
            "          PERMIT:'permit')",
            "        prot = (protocol*",
            "          IP:'ip')",
            "        srcipr = (access_list_ip_range*",
            "          HOST:'host'",
            "          ip = IP_ADDRESS:'1.0.2.0')",
            "        dstipr = (access_list_ip_range*",
            "          HOST:'host'",
            "          ip = IP_ADDRESS:'255.255.255.0')",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (extended_access_list_stanza",
            "      ACCESS_LIST:'access-list'",
            "      num = ACL_NUM_EXTENDED:'102'",
            "      (extended_access_list_tail",
            "        ala = (access_list_action*",
            "          PERMIT:'permit')",
            "        prot = (protocol*",
            "          IP:'ip')",
            "        srcipr = (access_list_ip_range*",
            "          HOST:'host'",
            "          ip = IP_ADDRESS:'2.0.0.0')",
            "        dstipr = (access_list_ip_range*",
            "          HOST:'host'",
            "          ip = IP_ADDRESS:'255.0.0.0')",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (extended_access_list_stanza",
            "      ACCESS_LIST:'access-list'",
            "      num = ACL_NUM_EXTENDED:'102'",
            "      (extended_access_list_tail",
            "        ala = (access_list_action*",
            "          PERMIT:'permit')",
            "        prot = (protocol*",
            "          IP:'ip')",
            "        srcipr = (access_list_ip_range*",
            "          HOST:'host'",
            "          ip = IP_ADDRESS:'2.128.0.0')",
            "        dstipr = (access_list_ip_range*",
            "          HOST:'host'",
            "          ip = IP_ADDRESS:'255.255.0.0')",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (extended_access_list_stanza",
            "      ACCESS_LIST:'access-list'",
            "      num = ACL_NUM_EXTENDED:'103'",
            "      (extended_access_list_tail",
            "        ala = (access_list_action*",
            "          PERMIT:'permit')",
            "        prot = (protocol*",
            "          IP:'ip')",
            "        srcipr = (access_list_ip_range*",
            "          HOST:'host'",
            "          ip = IP_ADDRESS:'3.0.1.0')",
            "        dstipr = (access_list_ip_range*",
            "          HOST:'host'",
            "          ip = IP_ADDRESS:'255.255.255.0')",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (extended_access_list_stanza",
            "      ACCESS_LIST:'access-list'",
            "      num = ACL_NUM_EXTENDED:'103'",
            "      (extended_access_list_tail",
            "        ala = (access_list_action*",
            "          PERMIT:'permit')",
            "        prot = (protocol*",
            "          IP:'ip')",
            "        srcipr = (access_list_ip_range*",
            "          HOST:'host'",
            "          ip = IP_ADDRESS:'3.0.2.0')",
            "        dstipr = (access_list_ip_range*",
            "          HOST:'host'",
            "          ip = IP_ADDRESS:'255.255.255.0')",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (route_map_stanza",
            "      ROUTE_MAP:'route-map'",
            "      name = (variable*",
            "        VARIABLE:'as2_to_as1'  <== mode:M_RouteMap)",
            "      rmt = (access_list_action*",
            "        PERMIT:'permit')",
            "      num = (dec*",
            "        UINT8:'2')",
            "      NEWLINE:'\\n'",
            "      (rm_stanza*",
            "        (match_rm_stanza*",
            "          MATCH:'match'",
            "          (match_ip_access_list_rm_stanza",
            "            IP:'ip'",
            "            ADDRESS:'address'",
            "            (variable_access_list*",
            "              UINT8:'102')",
            "            NEWLINE:'\\n')))",
            "      (rm_stanza*",
            "        (set_rm_stanza*",
            "          (set_metric_rm_stanza",
            "            SET:'set'",
            "            METRIC:'metric'",
            "            metric = (int_expr*",
            "              (dec*",
            "                UINT8:'50'))",
            "            NEWLINE:'\\n')))",
            "      (rm_stanza*",
            "        (set_rm_stanza*",
            "          (set_community_additive_rm_stanza",
            "            SET:'set'",
            "            COMMUNITY:'community'",
            "            (community*",
            "              STANDARD_COMMUNITY:'2:2')",
            "            ADDITIVE:'additive'",
            "            NEWLINE:'\\n')))))",
            "  (stanza*",
            "    (route_map_stanza",
            "      ROUTE_MAP:'route-map'",
            "      name = (variable*",
            "        VARIABLE:'as2_to_as1'  <== mode:M_RouteMap)",
            "      rmt = (access_list_action*",
            "        PERMIT:'permit')",
            "      num = (dec*",
            "        UINT8:'3')",
            "      NEWLINE:'\\n'",
            "      (rm_stanza*",
            "        (match_rm_stanza*",
            "          MATCH:'match'",
            "          (match_ip_access_list_rm_stanza",
            "            IP:'ip'",
            "            ADDRESS:'address'",
            "            (variable_access_list*",
            "              UINT8:'103')",
            "            NEWLINE:'\\n')))",
            "      (rm_stanza*",
            "        (set_rm_stanza*",
            "          (set_metric_rm_stanza",
            "            SET:'set'",
            "            METRIC:'metric'",
            "            metric = (int_expr*",
            "              (dec*",
            "                UINT8:'100'))",
            "            NEWLINE:'\\n')))",
            "      (rm_stanza*",
            "        (set_rm_stanza*",
            "          (set_community_additive_rm_stanza",
            "            SET:'set'",
            "            COMMUNITY:'community'",
            "            (community*",
            "              STANDARD_COMMUNITY:'2:3')",
            "            ADDITIVE:'additive'",
            "            NEWLINE:'\\n')))))",
            "  (stanza*",
            "    (route_map_stanza",
            "      ROUTE_MAP:'route-map'",
            "      name = (variable*",
            "        VARIABLE:'as1_to_as2'  <== mode:M_RouteMap)",
            "      rmt = (access_list_action*",
            "        PERMIT:'permit')",
            "      num = (dec*",
            "        UINT8:'100')",
            "      NEWLINE:'\\n'",
            "      (rm_stanza*",
            "        (match_rm_stanza*",
            "          MATCH:'match'",
            "          (match_community_list_rm_stanza",
            "            COMMUNITY:'community'",
            "            (variable*",
            "              VARIABLE:'as1_community')",
            "            NEWLINE:'\\n')))",
            "      (rm_stanza*",
            "        (set_rm_stanza*",
            "          (set_local_preference_rm_stanza",
            "            SET:'set'",
            "            LOCAL_PREFERENCE:'local-preference'",
            "            pref = (int_expr*",
            "              (dec*",
            "                UINT16:'350'))",
            "            NEWLINE:'\\n')))))",
            "  (stanza*",
            "    (route_map_stanza",
            "      ROUTE_MAP:'route-map'",
            "      name = (variable*",
            "        VARIABLE:'as2_to_as3'  <== mode:M_RouteMap)",
            "      rmt = (access_list_action*",
            "        PERMIT:'permit')",
            "      num = (dec*",
            "        UINT8:'1')",
            "      NEWLINE:'\\n'",
            "      (rm_stanza*",
            "        (match_rm_stanza*",
            "          MATCH:'match'",
            "          (match_ip_access_list_rm_stanza",
            "            IP:'ip'",
            "            ADDRESS:'address'",
            "            (variable_access_list*",
            "              UINT8:'101')",
            "            NEWLINE:'\\n')))",
            "      (rm_stanza*",
            "        (set_rm_stanza*",
            "          (set_metric_rm_stanza",
            "            SET:'set'",
            "            METRIC:'metric'",
            "            metric = (int_expr*",
            "              (dec*",
            "                UINT8:'50'))",
            "            NEWLINE:'\\n')))",
            "      (rm_stanza*",
            "        (set_rm_stanza*",
            "          (set_community_additive_rm_stanza",
            "            SET:'set'",
            "            COMMUNITY:'community'",
            "            (community*",
            "              STANDARD_COMMUNITY:'2:3')",
            "            ADDITIVE:'additive'",
            "            NEWLINE:'\\n')))))",
            "  (stanza*",
            "    (route_map_stanza",
            "      ROUTE_MAP:'route-map'",
            "      name = (variable*",
            "        VARIABLE:'as2_to_as3'  <== mode:M_RouteMap)",
            "      rmt = (access_list_action*",
            "        PERMIT:'permit')",
            "      num = (dec*",
            "        UINT8:'2')",
            "      NEWLINE:'\\n'",
            "      (rm_stanza*",
            "        (match_rm_stanza*",
            "          MATCH:'match'",
            "          (match_ip_access_list_rm_stanza",
            "            IP:'ip'",
            "            ADDRESS:'address'",
            "            (variable_access_list*",
            "              UINT8:'102')",
            "            NEWLINE:'\\n')))",
            "      (rm_stanza*",
            "        (set_rm_stanza*",
            "          (set_metric_rm_stanza",
            "            SET:'set'",
            "            METRIC:'metric'",
            "            metric = (int_expr*",
            "              (dec*",
            "                UINT8:'50'))",
            "            NEWLINE:'\\n')))",
            "      (rm_stanza*",
            "        (set_rm_stanza*",
            "          (set_community_additive_rm_stanza",
            "            SET:'set'",
            "            COMMUNITY:'community'",
            "            (community*",
            "              STANDARD_COMMUNITY:'2:3')",
            "            ADDITIVE:'additive'",
            "            NEWLINE:'\\n')))))",
            "  (stanza*",
            "    (route_map_stanza",
            "      ROUTE_MAP:'route-map'",
            "      name = (variable*",
            "        VARIABLE:'as3_to_as2'  <== mode:M_RouteMap)",
            "      rmt = (access_list_action*",
            "        PERMIT:'permit')",
            "      num = (dec*",
            "        UINT8:'100')",
            "      NEWLINE:'\\n'",
            "      (rm_stanza*",
            "        (match_rm_stanza*",
            "          MATCH:'match'",
            "          (match_community_list_rm_stanza",
            "            COMMUNITY:'community'",
            "            (variable*",
            "              VARIABLE:'as3_community')",
            "            NEWLINE:'\\n')))",
            "      (rm_stanza*",
            "        (set_rm_stanza*",
            "          (set_local_preference_rm_stanza",
            "            SET:'set'",
            "            LOCAL_PREFERENCE:'local-preference'",
            "            pref = (int_expr*",
            "              (dec*",
            "                UINT16:'350'))",
            "            NEWLINE:'\\n')))))",
            "  (stanza*",
            "    (s_control_plane*",
            "      CONTROL_PLANE:'control-plane'",
            "      NEWLINE:'\\n'))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        MGCP:'mgcp'",
            "        VARIABLE:'behavior'",
            "        VARIABLE:'g729-variants'",
            "        VARIABLE:'static-pt'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_gatekeeper*",
            "      GATEKEEPER:'gatekeeper'",
            "      NEWLINE:'\\n'",
            "      (gk_null*",
            "        SHUTDOWN:'shutdown'",
            "        (null_rest_of_line*",
            "          NEWLINE:'\\n'))))",
            "  (stanza*",
            "    (s_line",
            "      LINE:'line'",
            "      (line_type*",
            "        CON:'con')",
            "      first = (dec*",
            "        UINT8:'0')",
            "      NEWLINE:'\\n'",
            "      (l_exec_timeout",
            "        EXEC_TIMEOUT:'exec-timeout'",
            "        minutes = (dec*",
            "          UINT8:'0')",
            "        seconds = (dec*",
            "          UINT8:'0')",
            "        NEWLINE:'\\n')",
            "      (l_null*",
            "        PRIVILEGE:'privilege'",
            "        (null_rest_of_line*",
            "          LEVEL:'level'",
            "          UINT8:'15'",
            "          NEWLINE:'\\n'))",
            "      (l_null*",
            "        LOGGING:'logging'",
            "        (null_rest_of_line*",
            "          SYNCHRONOUS:'synchronous'",
            "          NEWLINE:'\\n'))))",
            "  (stanza*",
            "    (s_line",
            "      LINE:'line'",
            "      (line_type*",
            "        AUX:'aux')",
            "      first = (dec*",
            "        UINT8:'0')",
            "      NEWLINE:'\\n'",
            "      (l_exec_timeout",
            "        EXEC_TIMEOUT:'exec-timeout'",
            "        minutes = (dec*",
            "          UINT8:'0')",
            "        seconds = (dec*",
            "          UINT8:'0')",
            "        NEWLINE:'\\n')",
            "      (l_null*",
            "        PRIVILEGE:'privilege'",
            "        (null_rest_of_line*",
            "          LEVEL:'level'",
            "          UINT8:'15'",
            "          NEWLINE:'\\n'))",
            "      (l_null*",
            "        LOGGING:'logging'",
            "        (null_rest_of_line*",
            "          SYNCHRONOUS:'synchronous'",
            "          NEWLINE:'\\n'))))",
            "  (stanza*",
            "    (s_line",
            "      LINE:'line'",
            "      (line_type*",
            "        VTY:'vty')",
            "      first = (dec*",
            "        UINT8:'0')",
            "      last = (dec*",
            "        UINT8:'4')",
            "      NEWLINE:'\\n'))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        END:'end'",
            "        NEWLINE:'\\n\\n')))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/as2border2.cfg" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        VERSION:'version'",
            "        FLOAT:'12.4'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_service",
            "      SERVICE:'service'",
            "      (variable*",
            "        VARIABLE:'timestamps')",
            "      (variable*",
            "        DEBUG:'debug')",
            "      (variable*",
            "        VARIABLE:'datetime')",
            "      (variable*",
            "        MSEC:'msec')",
            "      NEWLINE:'\\n'))",
            "  (stanza*",
            "    (s_service",
            "      SERVICE:'service'",
            "      (variable*",
            "        VARIABLE:'timestamps')",
            "      (variable*",
            "        LOG:'log')",
            "      (variable*",
            "        VARIABLE:'datetime')",
            "      (variable*",
            "        MSEC:'msec')",
            "      NEWLINE:'\\n'))",
            "  (stanza*",
            "    (s_service",
            "      NO:'no'",
            "      SERVICE:'service'",
            "      (variable*",
            "        VARIABLE:'password-encryption')",
            "      NEWLINE:'\\n'))",
            "  (stanza*",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'as2border2'",
            "      NEWLINE:'\\n'))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        BOOT_START_MARKER:'boot-start-marker'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        BOOT_END_MARKER:'boot-end-marker'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_aaa",
            "      NO:'no'",
            "      AAA:'aaa'",
            "      (aaa_new_model",
            "        NEW_MODEL:'new-model'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        MEMORY_SIZE:'memory-size'",
            "        VARIABLE:'iomem'",
            "        UINT8:'5'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        IP:'ip'",
            "        CEF:'cef'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_ip_domain",
            "      NO:'no'",
            "      IP:'ip'",
            "      DOMAIN:'domain'",
            "      (ip_domain_lookup",
            "        LOOKUP:'lookup'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_ip_domain",
            "      IP:'ip'",
            "      DOMAIN:'domain'",
            "      (ip_domain_name",
            "        NAME:'name'",
            "        hostname = (variable_hostname*",
            "          VARIABLE:'lab.local'  <== mode:M_Name)",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        IP:'ip'",
            "        AUTH_PROXY:'auth-proxy'",
            "        VARIABLE:'max-nodata-conns'",
            "        UINT8:'3'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        IP:'ip'",
            "        ADMISSION:'admission'",
            "        VARIABLE:'max-nodata-conns'",
            "        UINT8:'3'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_interface*",
            "      INTERFACE:'interface'",
            "      (s_interface_definition",
            "        iname = (interface_name*",
            "          name_prefix_alpha = M_Interface_PREFIX:'Loopback'  <== mode:M_Interface",
            "          (range*",
            "            (subrange*",
            "              low = (dec*",
            "                DEC:'0'  <== mode:M_Interface))))",
            "        NEWLINE:'\\n'  <== mode:M_Interface",
            "        (if_inner*",
            "          (if_ip_address",
            "            IP:'ip'",
            "            ADDRESS:'address'",
            "            ip = IP_ADDRESS:'2.1.1.2'",
            "            subnet = IP_ADDRESS:'255.255.255.255'",
            "            NEWLINE:'\\n')))))",
            "  (stanza*",
            "    (s_interface*",
            "      INTERFACE:'interface'",
            "      (s_interface_definition",
            "        iname = (interface_name*",
            "          name_prefix_alpha = M_Interface_PREFIX:'FastEthernet'  <== mode:M_Interface",
            "          DEC:'0'  <== mode:M_Interface",
            "          FORWARD_SLASH:'/'  <== mode:M_Interface",
            "          (range*",
            "            (subrange*",
            "              low = (dec*",
            "                DEC:'0'  <== mode:M_Interface))))",
            "        NEWLINE:'\\n'  <== mode:M_Interface",
            "        (if_inner*",
            "          (if_ip_address",
            "            IP:'ip'",
            "            ADDRESS:'address'",
            "            ip = IP_ADDRESS:'10.23.21.2'",
            "            subnet = IP_ADDRESS:'255.255.255.0'",
            "            NEWLINE:'\\n'))",
            "        (if_inner*",
            "          (if_ip_access_group",
            "            IP:'ip'",
            "            ACCESS_GROUP:'access-group'",
            "            name = (variable*",
            "              VARIABLE:'BLOCK_SPOOF_IN')",
            "            IN:'in'",
            "            NEWLINE:'\\n'))",
            "        (if_inner*",
            "          (if_null_block*",
            "            DUPLEX:'duplex'",
            "            AUTO:'auto'",
            "            NEWLINE:'\\n'))",
            "        (if_inner*",
            "          (if_speed_auto*",
            "            SPEED:'speed'",
            "            AUTO:'auto'",
            "            NEWLINE:'\\n')))))",
            "  (stanza*",
            "    (s_interface*",
            "      INTERFACE:'interface'",
            "      (s_interface_definition",
            "        iname = (interface_name*",
            "          name_prefix_alpha = M_Interface_PREFIX:'FastEthernet'  <== mode:M_Interface",
            "          DEC:'0'  <== mode:M_Interface",
            "          FORWARD_SLASH:'/'  <== mode:M_Interface",
            "          (range*",
            "            (subrange*",
            "              low = (dec*",
            "                DEC:'1'  <== mode:M_Interface))))",
            "        NEWLINE:'\\n'  <== mode:M_Interface",
            "        (if_inner*",
            "          (if_ip_address",
            "            IP:'ip'",
            "            ADDRESS:'address'",
            "            ip = IP_ADDRESS:'2.12.21.1'",
            "            subnet = IP_ADDRESS:'255.255.255.0'",
            "            NEWLINE:'\\n'))",
            "        (if_inner*",
            "          (if_null_block*",
            "            DUPLEX:'duplex'",
            "            AUTO:'auto'",
            "            NEWLINE:'\\n'))",
            "        (if_inner*",
            "          (if_speed_auto*",
            "            SPEED:'speed'",
            "            AUTO:'auto'",
            "            NEWLINE:'\\n')))))",
            "  (stanza*",
            "    (s_interface*",
            "      INTERFACE:'interface'",
            "      (s_interface_definition",
            "        iname = (interface_name*",
            "          name_prefix_alpha = M_Interface_PREFIX:'FastEthernet'  <== mode:M_Interface",
            "          DEC:'1'  <== mode:M_Interface",
            "          FORWARD_SLASH:'/'  <== mode:M_Interface",
            "          (range*",
            "            (subrange*",
            "              low = (dec*",
            "                DEC:'0'  <== mode:M_Interface))))",
            "        NEWLINE:'\\n'  <== mode:M_Interface",
            "        (if_inner*",
            "          (if_ip_address",
            "            IP:'ip'",
            "            ADDRESS:'address'",
            "            ip = IP_ADDRESS:'2.12.22.1'",
            "            subnet = IP_ADDRESS:'255.255.255.0'",
            "            NEWLINE:'\\n'))",
            "        (if_inner*",
            "          (if_null_block*",
            "            DUPLEX:'duplex'",
            "            AUTO:'auto'",
            "            NEWLINE:'\\n'))",
            "        (if_inner*",
            "          (if_speed_auto*",
            "            SPEED:'speed'",
            "            AUTO:'auto'",
            "            NEWLINE:'\\n')))))",
            "  (stanza*",
            "    (s_router_ospf",
            "      ROUTER:'router'",
            "      OSPF:'ospf'",
            "      name = (variable*",
            "        UINT8:'1')",
            "      NEWLINE:'\\n'",
            "      (ro_inner*",
            "        (ro_router_id",
            "          ROUTER_ID:'router-id'",
            "          ip = IP_ADDRESS:'2.1.1.2'",
            "          NEWLINE:'\\n'))",
            "      (ro_inner*",
            "        (ro_common*",
            "          (ro_null*",
            "            LOG_ADJACENCY_CHANGES:'log-adjacency-changes'",
            "            (null_rest_of_line*",
            "              NEWLINE:'\\n'))))",
            "      (ro_inner*",
            "        (ro_redistribute_connected",
            "          REDISTRIBUTE:'redistribute'",
            "          CONNECTED:'connected'",
            "          subnets = SUBNETS:'subnets'",
            "          NEWLINE:'\\n'))",
            "      (ro_inner*",
            "        (ro_network",
            "          NETWORK:'network'",
            "          ip = IP_ADDRESS:'2.0.0.0'",
            "          wildcard = IP_ADDRESS:'0.255.255.255'",
            "          AREA:'area'",
            "          area_int = (dec*",
            "            UINT8:'1')",
            "          NEWLINE:'\\n'))))",
            "  (stanza*",
            "    (router_bgp_stanza",
            "      ROUTER:'router'",
            "      BGP:'bgp'",
            "      procnum = (bgp_asn*",
            "        asn = (uint32*",
            "          UINT8:'2'))",
            "      NEWLINE:'\\n'",
            "      (router_bgp_stanza_tail*",
            "        (router_id_rb_stanza*",
            "          BGP:'bgp'",
            "          (router_id_bgp_tail",
            "            ROUTER_ID:'router-id'",
            "            routerid = IP_ADDRESS:'2.1.1.2'",
            "            NEWLINE:'\\n')))",
            "      (router_bgp_stanza_tail*",
            "        (bgp_rb_stanza*",
            "          BGP:'bgp'",
            "          (bgp_log_neighbor_changes_rb_stanza_null*",
            "            LOG_NEIGHBOR_CHANGES:'log-neighbor-changes'",
            "            (null_rest_of_line*",
            "              NEWLINE:'\\n'))))",
            "      (router_bgp_stanza_tail*",
            "        (peer_group_creation_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          name = VARIABLE:'as1'  <== mode:M_NEIGHBOR",
            "          PEER_GROUP:'peer-group'",
            "          NEWLINE:'\\n'  <== mode:M_NEIGHBOR))",
            "      (router_bgp_stanza_tail*",
            "        (neighbor_flat_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          peergroup = VARIABLE:'as1'  <== mode:M_NEIGHBOR",
            "          (remote_as_bgp_tail",
            "            REMOTE_AS:'remote-as'",
            "            remote = (bgp_asn*",
            "              asn = (uint32*",
            "                UINT8:'1'))",
            "            NEWLINE:'\\n')))",
            "      (router_bgp_stanza_tail*",
            "        (peer_group_creation_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          name = VARIABLE:'as2'  <== mode:M_NEIGHBOR",
            "          PEER_GROUP:'peer-group'",
            "          NEWLINE:'\\n'  <== mode:M_NEIGHBOR))",
            "      (router_bgp_stanza_tail*",
            "        (neighbor_flat_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          peergroup = VARIABLE:'as2'  <== mode:M_NEIGHBOR",
            "          (remote_as_bgp_tail",
            "            REMOTE_AS:'remote-as'",
            "            remote = (bgp_asn*",
            "              asn = (uint32*",
            "                UINT8:'2'))",
            "            NEWLINE:'\\n')))",
            "      (router_bgp_stanza_tail*",
            "        (peer_group_creation_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          name = VARIABLE:'as3'  <== mode:M_NEIGHBOR",
            "          PEER_GROUP:'peer-group'",
            "          NEWLINE:'\\n'  <== mode:M_NEIGHBOR))",
            "      (router_bgp_stanza_tail*",
            "        (neighbor_flat_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          peergroup = VARIABLE:'as3'  <== mode:M_NEIGHBOR",
            "          (remote_as_bgp_tail",
            "            REMOTE_AS:'remote-as'",
            "            remote = (bgp_asn*",
            "              asn = (uint32*",
            "                UINT8:'3'))",
            "            NEWLINE:'\\n')))",
            "      (router_bgp_stanza_tail*",
            "        (peer_group_assignment_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          address = IP_ADDRESS:'2.1.2.1'  <== mode:M_NEIGHBOR",
            "          PEER_GROUP:'peer-group'",
            "          name = (variable*",
            "            VARIABLE:'as2'  <== mode:M_NEIGHBOR)",
            "          NEWLINE:'\\n'))",
            "      (router_bgp_stanza_tail*",
            "        (peer_group_assignment_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          address = IP_ADDRESS:'2.1.2.2'  <== mode:M_NEIGHBOR",
            "          PEER_GROUP:'peer-group'",
            "          name = (variable*",
            "            VARIABLE:'as2'  <== mode:M_NEIGHBOR)",
            "          NEWLINE:'\\n'))",
            "      (router_bgp_stanza_tail*",
            "        (neighbor_flat_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          ip = IP_ADDRESS:'2.1.2.1'  <== mode:M_NEIGHBOR",
            "          (bgp_tail*",
            "            (update_source_bgp_tail",
            "              UPDATE_SOURCE:'update-source'",
            "              source = (interface_name*",
            "                name_prefix_alpha = M_Interface_PREFIX:'Loopback'  <== mode:M_Interface",
            "                (range*",
            "                  (subrange*",
            "                    low = (dec*",
            "                      DEC:'0'  <== mode:M_Interface))))",
            "              NEWLINE:'\\n'  <== mode:M_Interface))))",
            "      (router_bgp_stanza_tail*",
            "        (neighbor_flat_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          ip = IP_ADDRESS:'2.1.2.2'  <== mode:M_NEIGHBOR",
            "          (bgp_tail*",
            "            (update_source_bgp_tail",
            "              UPDATE_SOURCE:'update-source'",
            "              source = (interface_name*",
            "                name_prefix_alpha = M_Interface_PREFIX:'Loopback'  <== mode:M_Interface",
            "                (range*",
            "                  (subrange*",
            "                    low = (dec*",
            "                      DEC:'0'  <== mode:M_Interface))))",
            "              NEWLINE:'\\n'  <== mode:M_Interface))))",
            "      (router_bgp_stanza_tail*",
            "        (peer_group_assignment_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          address = IP_ADDRESS:'10.23.21.3'  <== mode:M_NEIGHBOR",
            "          PEER_GROUP:'peer-group'",
            "          name = (variable*",
            "            VARIABLE:'as3'  <== mode:M_NEIGHBOR)",
            "          NEWLINE:'\\n'))",
            "      (router_bgp_stanza_tail*",
            "        (bgp_tail*",
            "          (maximum_paths_bgp_tail",
            "            MAXIMUM_PATHS:'maximum-paths'",
            "            paths = (dec*",
            "              UINT8:'5')",
            "            NEWLINE:'\\n')))",
            "      (router_bgp_stanza_tail*",
            "        (address_family_rb_stanza",
            "          (address_family_header",
            "            ADDRESS_FAMILY:'address-family'",
            "            af = (bgp_address_family*",
            "              IPV4:'ipv4')",
            "            NEWLINE:'\\n')",
            "          (address_family_inner*",
            "            (aggregate_address_rb_stanza",
            "              AGGREGATE_ADDRESS:'aggregate-address'",
            "              network = IP_ADDRESS:'2.0.0.0'",
            "              subnet = IP_ADDRESS:'255.0.0.0'",
            "              (agg_summary_only",
            "                SUMMARY_ONLY:'summary-only')",
            "              NEWLINE:'\\n'))",
            "          (address_family_inner*",
            "            (neighbor_flat_rb_stanza",
            "              NEIGHBOR:'neighbor'",
            "              peergroup = VARIABLE:'as1'  <== mode:M_NEIGHBOR",
            "              (bgp_tail*",
            "                (send_community_bgp_tail",
            "                  SEND_COMMUNITY:'send-community'",
            "                  NEWLINE:'\\n'))))",
            "          (address_family_inner*",
            "            (neighbor_flat_rb_stanza",
            "              NEIGHBOR:'neighbor'",
            "              peergroup = VARIABLE:'as2'  <== mode:M_NEIGHBOR",
            "              (bgp_tail*",
            "                (send_community_bgp_tail",
            "                  SEND_COMMUNITY:'send-community'",
            "                  NEWLINE:'\\n'))))",
            "          (address_family_inner*",
            "            (neighbor_flat_rb_stanza",
            "              NEIGHBOR:'neighbor'",
            "              peergroup = VARIABLE:'as3'  <== mode:M_NEIGHBOR",
            "              (bgp_tail*",
            "                (send_community_bgp_tail",
            "                  SEND_COMMUNITY:'send-community'",
            "                  NEWLINE:'\\n'))))",
            "          (address_family_inner*",
            "            (neighbor_flat_rb_stanza",
            "              NEIGHBOR:'neighbor'",
            "              peergroup = VARIABLE:'as1'  <== mode:M_NEIGHBOR",
            "              (bgp_tail*",
            "                (route_map_bgp_tail",
            "                  ROUTE_MAP:'route-map'",
            "                  name = (variable*",
            "                    VARIABLE:'as2_to_as1'  <== mode:M_RouteMap)",
            "                  OUT:'out'",
            "                  NEWLINE:'\\n'))))",
            "          (address_family_inner*",
            "            (neighbor_flat_rb_stanza",
            "              NEIGHBOR:'neighbor'",
            "              peergroup = VARIABLE:'as1'  <== mode:M_NEIGHBOR",
            "              (bgp_tail*",
            "                (route_map_bgp_tail",
            "                  ROUTE_MAP:'route-map'",
            "                  name = (variable*",
            "                    VARIABLE:'as1_to_as2'  <== mode:M_RouteMap)",
            "                  IN:'in'",
            "                  NEWLINE:'\\n'))))",
            "          (address_family_inner*",
            "            (neighbor_flat_rb_stanza",
            "              NEIGHBOR:'neighbor'",
            "              peergroup = VARIABLE:'as3'  <== mode:M_NEIGHBOR",
            "              (bgp_tail*",
            "                (route_map_bgp_tail",
            "                  ROUTE_MAP:'route-map'",
            "                  name = (variable*",
            "                    VARIABLE:'as2_to_as3'  <== mode:M_RouteMap)",
            "                  OUT:'out'",
            "                  NEWLINE:'\\n'))))",
            "          (address_family_inner*",
            "            (neighbor_flat_rb_stanza",
            "              NEIGHBOR:'neighbor'",
            "              peergroup = VARIABLE:'as3'  <== mode:M_NEIGHBOR",
            "              (bgp_tail*",
            "                (route_map_bgp_tail",
            "                  ROUTE_MAP:'route-map'",
            "                  name = (variable*",
            "                    VARIABLE:'as3_to_as2'  <== mode:M_RouteMap)",
            "                  IN:'in'",
            "                  NEWLINE:'\\n'))))",
            "          (address_family_inner*",
            "            (neighbor_flat_rb_stanza",
            "              NEIGHBOR:'neighbor'",
            "              ip = IP_ADDRESS:'2.1.2.1'  <== mode:M_NEIGHBOR",
            "              (bgp_tail*",
            "                (activate_bgp_tail",
            "                  ACTIVATE:'activate'",
            "                  NEWLINE:'\\n'))))",
            "          (address_family_inner*",
            "            (neighbor_flat_rb_stanza",
            "              NEIGHBOR:'neighbor'",
            "              ip = IP_ADDRESS:'2.1.2.2'  <== mode:M_NEIGHBOR",
            "              (bgp_tail*",
            "                (activate_bgp_tail",
            "                  ACTIVATE:'activate'",
            "                  NEWLINE:'\\n'))))",
            "          (address_family_inner*",
            "            (neighbor_flat_rb_stanza",
            "              NEIGHBOR:'neighbor'",
            "              ip = IP_ADDRESS:'10.23.21.3'  <== mode:M_NEIGHBOR",
            "              (bgp_tail*",
            "                (activate_bgp_tail",
            "                  ACTIVATE:'activate'",
            "                  NEWLINE:'\\n'))))",
            "          (address_family_inner*",
            "            (bgp_tail*",
            "              (maximum_paths_bgp_tail",
            "                MAXIMUM_PATHS:'maximum-paths'",
            "                paths = (dec*",
            "                  UINT8:'5')",
            "                NEWLINE:'\\n')))",
            "          (address_family_inner*",
            "            (bgp_tail*",
            "              (null_bgp_tail*",
            "                NO:'no'",
            "                AUTO_SUMMARY:'auto-summary'",
            "                (null_rest_of_line*",
            "                  NEWLINE:'\\n'))))",
            "          (address_family_inner*",
            "            (bgp_tail*",
            "              (null_bgp_tail*",
            "                NO:'no'",
            "                SYNCHRONIZATION:'synchronization'",
            "                (null_rest_of_line*",
            "                  NEWLINE:'\\n'))))",
            "          (address_family_inner*",
            "            (bgp_tail*",
            "              (bgp_bgp_tail*",
            "                BGP:'bgp'",
            "                (bgp_dampening_bgp_tail_null*",
            "                  DAMPENING:'dampening'",
            "                  (null_rest_of_line*",
            "                    NEWLINE:'\\n')))))",
            "          (address_family_footer*",
            "            EXIT_ADDRESS_FAMILY:'exit-address-family'",
            "            NEWLINE:'\\n')))))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        IP:'ip'",
            "        FORWARD_PROTOCOL:'forward-protocol'",
            "        ND:'nd'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        IP:'ip'",
            "        BGP_COMMUNITY:'bgp-community'",
            "        VARIABLE:'new-format'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (ip_community_list_expanded_stanza",
            "      IP:'ip'",
            "      COMMUNITY_LIST:'community-list'",
            "      EXPANDED:'expanded'",
            "      name = (variable*",
            "        VARIABLE:'as1_community')",
            "      (ip_community_list_expanded_tail",
            "        ala = (access_list_action*",
            "          PERMIT:'permit')",
            "        VARIABLE:'_1:'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (ip_community_list_expanded_stanza",
            "      IP:'ip'",
            "      COMMUNITY_LIST:'community-list'",
            "      EXPANDED:'expanded'",
            "      name = (variable*",
            "        VARIABLE:'as2_community')",
            "      (ip_community_list_expanded_tail",
            "        ala = (access_list_action*",
            "          PERMIT:'permit')",
            "        VARIABLE:'_2:'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (ip_community_list_expanded_stanza",
            "      IP:'ip'",
            "      COMMUNITY_LIST:'community-list'",
            "      EXPANDED:'expanded'",
            "      name = (variable*",
            "        VARIABLE:'as3_community')",
            "      (ip_community_list_expanded_tail",
            "        ala = (access_list_action*",
            "          PERMIT:'permit')",
            "        VARIABLE:'_3:'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        NO:'no'",
            "        IP:'ip'",
            "        HTTP:'http'",
            "        SERVER:'server'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        NO:'no'",
            "        IP:'ip'",
            "        HTTP:'http'",
            "        VARIABLE:'secure-server'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (extended_access_list_stanza",
            "      IP:'ip'",
            "      ACCESS_LIST:'access-list'",
            "      EXTENDED:'extended'",
            "      name = (variable_aclname*",
            "        VARIABLE:'BLOCK_SPOOF_IN')",
            "      NEWLINE:'\\n'",
            "      (extended_access_list_tail",
            "        ala = (access_list_action*",
            "          DENY:'deny')",
            "        prot = (protocol*",
            "          IP:'ip')",
            "        srcipr = (access_list_ip_range*",
            "          ip = IP_ADDRESS:'2.0.0.0'",
            "          wildcard = IP_ADDRESS:'0.255.255.255')",
            "        dstipr = (access_list_ip_range*",
            "          ANY:'any')",
            "        NEWLINE:'\\n')",
            "      (extended_access_list_tail",
            "        ala = (access_list_action*",
            "          PERMIT:'permit')",
            "        prot = (protocol*",
            "          IP:'ip')",
            "        srcipr = (access_list_ip_range*",
            "          ANY:'any')",
            "        dstipr = (access_list_ip_range*",
            "          ANY:'any')",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (ip_prefix_list_stanza",
            "      IP:'ip'",
            "      PREFIX_LIST:'prefix-list'",
            "      name = (variable*",
            "        VARIABLE:'inbound_route_filter'  <== mode:M_Name)",
            "      (ip_prefix_list_tail",
            "        SEQ:'seq'",
            "        seqnum = (dec*",
            "          UINT8:'5')",
            "        action = (access_list_action*",
            "          DENY:'deny')",
            "        prefix = IP_PREFIX:'2.0.0.0/8'",
            "        LE:'le'",
            "        maxpl = (dec*",
            "          UINT8:'32')",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (ip_prefix_list_stanza",
            "      IP:'ip'",
            "      PREFIX_LIST:'prefix-list'",
            "      name = (variable*",
            "        VARIABLE:'inbound_route_filter'  <== mode:M_Name)",
            "      (ip_prefix_list_tail",
            "        SEQ:'seq'",
            "        seqnum = (dec*",
            "          UINT8:'10')",
            "        action = (access_list_action*",
            "          PERMIT:'permit')",
            "        prefix = IP_PREFIX:'0.0.0.0/0'",
            "        LE:'le'",
            "        maxpl = (dec*",
            "          UINT8:'32')",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (extended_access_list_stanza",
            "      ACCESS_LIST:'access-list'",
            "      num = ACL_NUM_EXTENDED:'101'",
            "      (extended_access_list_tail",
            "        ala = (access_list_action*",
            "          PERMIT:'permit')",
            "        prot = (protocol*",
            "          IP:'ip')",
            "        srcipr = (access_list_ip_range*",
            "          HOST:'host'",
            "          ip = IP_ADDRESS:'1.0.1.0')",
            "        dstipr = (access_list_ip_range*",
            "          HOST:'host'",
            "          ip = IP_ADDRESS:'255.255.255.0')",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (extended_access_list_stanza",
            "      ACCESS_LIST:'access-list'",
            "      num = ACL_NUM_EXTENDED:'101'",
            "      (extended_access_list_tail",
            "        ala = (access_list_action*",
            "          PERMIT:'permit')",
            "        prot = (protocol*",
            "          IP:'ip')",
            "        srcipr = (access_list_ip_range*",
            "          HOST:'host'",
            "          ip = IP_ADDRESS:'1.0.2.0')",
            "        dstipr = (access_list_ip_range*",
            "          HOST:'host'",
            "          ip = IP_ADDRESS:'255.255.255.0')",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (extended_access_list_stanza",
            "      ACCESS_LIST:'access-list'",
            "      num = ACL_NUM_EXTENDED:'102'",
            "      (extended_access_list_tail",
            "        ala = (access_list_action*",
            "          PERMIT:'permit')",
            "        prot = (protocol*",
            "          IP:'ip')",
            "        srcipr = (access_list_ip_range*",
            "          HOST:'host'",
            "          ip = IP_ADDRESS:'2.0.0.0')",
            "        dstipr = (access_list_ip_range*",
            "          HOST:'host'",
            "          ip = IP_ADDRESS:'255.0.0.0')",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (extended_access_list_stanza",
            "      ACCESS_LIST:'access-list'",
            "      num = ACL_NUM_EXTENDED:'102'",
            "      (extended_access_list_tail",
            "        ala = (access_list_action*",
            "          PERMIT:'permit')",
            "        prot = (protocol*",
            "          IP:'ip')",
            "        srcipr = (access_list_ip_range*",
            "          HOST:'host'",
            "          ip = IP_ADDRESS:'2.128.0.0')",
            "        dstipr = (access_list_ip_range*",
            "          HOST:'host'",
            "          ip = IP_ADDRESS:'255.255.0.0')",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (extended_access_list_stanza",
            "      ACCESS_LIST:'access-list'",
            "      num = ACL_NUM_EXTENDED:'103'",
            "      (extended_access_list_tail",
            "        ala = (access_list_action*",
            "          PERMIT:'permit')",
            "        prot = (protocol*",
            "          IP:'ip')",
            "        srcipr = (access_list_ip_range*",
            "          HOST:'host'",
            "          ip = IP_ADDRESS:'3.0.1.0')",
            "        dstipr = (access_list_ip_range*",
            "          HOST:'host'",
            "          ip = IP_ADDRESS:'255.255.255.0')",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (extended_access_list_stanza",
            "      ACCESS_LIST:'access-list'",
            "      num = ACL_NUM_EXTENDED:'103'",
            "      (extended_access_list_tail",
            "        ala = (access_list_action*",
            "          PERMIT:'permit')",
            "        prot = (protocol*",
            "          IP:'ip')",
            "        srcipr = (access_list_ip_range*",
            "          HOST:'host'",
            "          ip = IP_ADDRESS:'3.0.2.0')",
            "        dstipr = (access_list_ip_range*",
            "          HOST:'host'",
            "          ip = IP_ADDRESS:'255.255.255.0')",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (route_map_stanza",
            "      ROUTE_MAP:'route-map'",
            "      name = (variable*",
            "        VARIABLE:'as2_to_as1'  <== mode:M_RouteMap)",
            "      rmt = (access_list_action*",
            "        PERMIT:'permit')",
            "      num = (dec*",
            "        UINT8:'2')",
            "      NEWLINE:'\\n'",
            "      (rm_stanza*",
            "        (match_rm_stanza*",
            "          MATCH:'match'",
            "          (match_ip_access_list_rm_stanza",
            "            IP:'ip'",
            "            ADDRESS:'address'",
            "            (variable_access_list*",
            "              UINT8:'102')",
            "            NEWLINE:'\\n')))",
            "      (rm_stanza*",
            "        (set_rm_stanza*",
            "          (set_metric_rm_stanza",
            "            SET:'set'",
            "            METRIC:'metric'",
            "            metric = (int_expr*",
            "              (dec*",
            "                UINT8:'50'))",
            "            NEWLINE:'\\n')))",
            "      (rm_stanza*",
            "        (set_rm_stanza*",
            "          (set_community_additive_rm_stanza",
            "            SET:'set'",
            "            COMMUNITY:'community'",
            "            (community*",
            "              STANDARD_COMMUNITY:'2:1')",
            "            ADDITIVE:'additive'",
            "            NEWLINE:'\\n')))))",
            "  (stanza*",
            "    (route_map_stanza",
            "      ROUTE_MAP:'route-map'",
            "      name = (variable*",
            "        VARIABLE:'as2_to_as1'  <== mode:M_RouteMap)",
            "      rmt = (access_list_action*",
            "        PERMIT:'permit')",
            "      num = (dec*",
            "        UINT8:'3')",
            "      NEWLINE:'\\n'",
            "      (rm_stanza*",
            "        (match_rm_stanza*",
            "          MATCH:'match'",
            "          (match_ip_access_list_rm_stanza",
            "            IP:'ip'",
            "            ADDRESS:'address'",
            "            (variable_access_list*",
            "              UINT8:'103')",
            "            NEWLINE:'\\n')))",
            "      (rm_stanza*",
            "        (set_rm_stanza*",
            "          (set_metric_rm_stanza",
            "            SET:'set'",
            "            METRIC:'metric'",
            "            metric = (int_expr*",
            "              (dec*",
            "                UINT8:'50'))",
            "            NEWLINE:'\\n')))",
            "      (rm_stanza*",
            "        (set_rm_stanza*",
            "          (set_community_additive_rm_stanza",
            "            SET:'set'",
            "            COMMUNITY:'community'",
            "            (community*",
            "              STANDARD_COMMUNITY:'2:1')",
            "            ADDITIVE:'additive'",
            "            NEWLINE:'\\n')))))",
            "  (stanza*",
            "    (route_map_stanza",
            "      ROUTE_MAP:'route-map'",
            "      name = (variable*",
            "        VARIABLE:'as1_to_as2'  <== mode:M_RouteMap)",
            "      rmt = (access_list_action*",
            "        PERMIT:'permit')",
            "      num = (dec*",
            "        UINT8:'100')",
            "      NEWLINE:'\\n'",
            "      (rm_stanza*",
            "        (match_rm_stanza*",
            "          MATCH:'match'",
            "          (match_community_list_rm_stanza",
            "            COMMUNITY:'community'",
            "            (variable*",
            "              VARIABLE:'as1_community')",
            "            NEWLINE:'\\n')))",
            "      (rm_stanza*",
            "        (set_rm_stanza*",
            "          (set_local_preference_rm_stanza",
            "            SET:'set'",
            "            LOCAL_PREFERENCE:'local-preference'",
            "            pref = (int_expr*",
            "              (dec*",
            "                UINT16:'350'))",
            "            NEWLINE:'\\n')))",
            "      (rm_stanza*",
            "        (set_rm_stanza*",
            "          (set_community_additive_rm_stanza",
            "            SET:'set'",
            "            COMMUNITY:'community'",
            "            (community*",
            "              STANDARD_COMMUNITY:'1:2')",
            "            ADDITIVE:'additive'",
            "            NEWLINE:'\\n')))))",
            "  (stanza*",
            "    (route_map_stanza",
            "      ROUTE_MAP:'route-map'",
            "      name = (variable*",
            "        VARIABLE:'as2_to_as3'  <== mode:M_RouteMap)",
            "      rmt = (access_list_action*",
            "        PERMIT:'permit')",
            "      num = (dec*",
            "        UINT8:'1')",
            "      NEWLINE:'\\n'",
            "      (rm_stanza*",
            "        (match_rm_stanza*",
            "          MATCH:'match'",
            "          (match_ip_access_list_rm_stanza",
            "            IP:'ip'",
            "            ADDRESS:'address'",
            "            (variable_access_list*",
            "              UINT8:'101')",
            "            NEWLINE:'\\n')))",
            "      (rm_stanza*",
            "        (set_rm_stanza*",
            "          (set_metric_rm_stanza",
            "            SET:'set'",
            "            METRIC:'metric'",
            "            metric = (int_expr*",
            "              (dec*",
            "                UINT8:'50'))",
            "            NEWLINE:'\\n')))",
            "      (rm_stanza*",
            "        (set_rm_stanza*",
            "          (set_community_additive_rm_stanza",
            "            SET:'set'",
            "            COMMUNITY:'community'",
            "            (community*",
            "              STANDARD_COMMUNITY:'2:3')",
            "            ADDITIVE:'additive'",
            "            NEWLINE:'\\n')))))",
            "  (stanza*",
            "    (route_map_stanza",
            "      ROUTE_MAP:'route-map'",
            "      name = (variable*",
            "        VARIABLE:'as2_to_as3'  <== mode:M_RouteMap)",
            "      rmt = (access_list_action*",
            "        PERMIT:'permit')",
            "      num = (dec*",
            "        UINT8:'2')",
            "      NEWLINE:'\\n'",
            "      (rm_stanza*",
            "        (match_rm_stanza*",
            "          MATCH:'match'",
            "          (match_ip_access_list_rm_stanza",
            "            IP:'ip'",
            "            ADDRESS:'address'",
            "            (variable_access_list*",
            "              UINT8:'102')",
            "            NEWLINE:'\\n')))",
            "      (rm_stanza*",
            "        (set_rm_stanza*",
            "          (set_metric_rm_stanza",
            "            SET:'set'",
            "            METRIC:'metric'",
            "            metric = (int_expr*",
            "              (dec*",
            "                UINT8:'50'))",
            "            NEWLINE:'\\n')))",
            "      (rm_stanza*",
            "        (set_rm_stanza*",
            "          (set_community_additive_rm_stanza",
            "            SET:'set'",
            "            COMMUNITY:'community'",
            "            (community*",
            "              STANDARD_COMMUNITY:'2:3')",
            "            ADDITIVE:'additive'",
            "            NEWLINE:'\\n')))))",
            "  (stanza*",
            "    (route_map_stanza",
            "      ROUTE_MAP:'route-map'",
            "      name = (variable*",
            "        VARIABLE:'as3_to_as2'  <== mode:M_RouteMap)",
            "      rmt = (access_list_action*",
            "        PERMIT:'permit')",
            "      num = (dec*",
            "        UINT8:'100')",
            "      NEWLINE:'\\n'",
            "      (rm_stanza*",
            "        (match_rm_stanza*",
            "          MATCH:'match'",
            "          (match_community_list_rm_stanza",
            "            COMMUNITY:'community'",
            "            (variable*",
            "              VARIABLE:'as3_community')",
            "            NEWLINE:'\\n')))",
            "      (rm_stanza*",
            "        (set_rm_stanza*",
            "          (set_local_preference_rm_stanza",
            "            SET:'set'",
            "            LOCAL_PREFERENCE:'local-preference'",
            "            pref = (int_expr*",
            "              (dec*",
            "                UINT16:'350'))",
            "            NEWLINE:'\\n')))",
            "      (rm_stanza*",
            "        (set_rm_stanza*",
            "          (set_community_additive_rm_stanza",
            "            SET:'set'",
            "            COMMUNITY:'community'",
            "            (community*",
            "              STANDARD_COMMUNITY:'3:2')",
            "            ADDITIVE:'additive'",
            "            NEWLINE:'\\n')))))",
            "  (stanza*",
            "    (s_control_plane*",
            "      CONTROL_PLANE:'control-plane'",
            "      NEWLINE:'\\n'))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        MGCP:'mgcp'",
            "        VARIABLE:'behavior'",
            "        VARIABLE:'g729-variants'",
            "        VARIABLE:'static-pt'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_gatekeeper*",
            "      GATEKEEPER:'gatekeeper'",
            "      NEWLINE:'\\n'",
            "      (gk_null*",
            "        SHUTDOWN:'shutdown'",
            "        (null_rest_of_line*",
            "          NEWLINE:'\\n'))))",
            "  (stanza*",
            "    (s_line",
            "      LINE:'line'",
            "      (line_type*",
            "        CON:'con')",
            "      first = (dec*",
            "        UINT8:'0')",
            "      NEWLINE:'\\n'",
            "      (l_exec_timeout",
            "        EXEC_TIMEOUT:'exec-timeout'",
            "        minutes = (dec*",
            "          UINT8:'0')",
            "        seconds = (dec*",
            "          UINT8:'0')",
            "        NEWLINE:'\\n')",
            "      (l_null*",
            "        PRIVILEGE:'privilege'",
            "        (null_rest_of_line*",
            "          LEVEL:'level'",
            "          UINT8:'15'",
            "          NEWLINE:'\\n'))",
            "      (l_null*",
            "        LOGGING:'logging'",
            "        (null_rest_of_line*",
            "          SYNCHRONOUS:'synchronous'",
            "          NEWLINE:'\\n'))))",
            "  (stanza*",
            "    (s_line",
            "      LINE:'line'",
            "      (line_type*",
            "        AUX:'aux')",
            "      first = (dec*",
            "        UINT8:'0')",
            "      NEWLINE:'\\n'",
            "      (l_exec_timeout",
            "        EXEC_TIMEOUT:'exec-timeout'",
            "        minutes = (dec*",
            "          UINT8:'0')",
            "        seconds = (dec*",
            "          UINT8:'0')",
            "        NEWLINE:'\\n')",
            "      (l_null*",
            "        PRIVILEGE:'privilege'",
            "        (null_rest_of_line*",
            "          LEVEL:'level'",
            "          UINT8:'15'",
            "          NEWLINE:'\\n'))",
            "      (l_null*",
            "        LOGGING:'logging'",
            "        (null_rest_of_line*",
            "          SYNCHRONOUS:'synchronous'",
            "          NEWLINE:'\\n'))))",
            "  (stanza*",
            "    (s_line",
            "      LINE:'line'",
            "      (line_type*",
            "        VTY:'vty')",
            "      first = (dec*",
            "        UINT8:'0')",
            "      last = (dec*",
            "        UINT8:'4')",
            "      NEWLINE:'\\n'))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        END:'end'",
            "        NEWLINE:'\\n\\n')))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/as2core1.cfg" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        VERSION:'version'",
            "        FLOAT:'12.4'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_service",
            "      SERVICE:'service'",
            "      (variable*",
            "        VARIABLE:'timestamps')",
            "      (variable*",
            "        DEBUG:'debug')",
            "      (variable*",
            "        VARIABLE:'datetime')",
            "      (variable*",
            "        MSEC:'msec')",
            "      NEWLINE:'\\n'))",
            "  (stanza*",
            "    (s_service",
            "      SERVICE:'service'",
            "      (variable*",
            "        VARIABLE:'timestamps')",
            "      (variable*",
            "        LOG:'log')",
            "      (variable*",
            "        VARIABLE:'datetime')",
            "      (variable*",
            "        MSEC:'msec')",
            "      NEWLINE:'\\n'))",
            "  (stanza*",
            "    (s_service",
            "      NO:'no'",
            "      SERVICE:'service'",
            "      (variable*",
            "        VARIABLE:'password-encryption')",
            "      NEWLINE:'\\n'))",
            "  (stanza*",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'as2core1'",
            "      NEWLINE:'\\n'))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        BOOT_START_MARKER:'boot-start-marker'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        BOOT_END_MARKER:'boot-end-marker'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_aaa",
            "      NO:'no'",
            "      AAA:'aaa'",
            "      (aaa_new_model",
            "        NEW_MODEL:'new-model'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        MEMORY_SIZE:'memory-size'",
            "        VARIABLE:'iomem'",
            "        UINT8:'5'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        IP:'ip'",
            "        CEF:'cef'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_ip_domain",
            "      NO:'no'",
            "      IP:'ip'",
            "      DOMAIN:'domain'",
            "      (ip_domain_lookup",
            "        LOOKUP:'lookup'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_ip_domain",
            "      IP:'ip'",
            "      DOMAIN:'domain'",
            "      (ip_domain_name",
            "        NAME:'name'",
            "        hostname = (variable_hostname*",
            "          VARIABLE:'lab.local'  <== mode:M_Name)",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        IP:'ip'",
            "        AUTH_PROXY:'auth-proxy'",
            "        VARIABLE:'max-nodata-conns'",
            "        UINT8:'3'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        IP:'ip'",
            "        ADMISSION:'admission'",
            "        VARIABLE:'max-nodata-conns'",
            "        UINT8:'3'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_interface*",
            "      INTERFACE:'interface'",
            "      (s_interface_definition",
            "        iname = (interface_name*",
            "          name_prefix_alpha = M_Interface_PREFIX:'Loopback'  <== mode:M_Interface",
            "          (range*",
            "            (subrange*",
            "              low = (dec*",
            "                DEC:'0'  <== mode:M_Interface))))",
            "        NEWLINE:'\\n'  <== mode:M_Interface",
            "        (if_inner*",
            "          (if_ip_address",
            "            IP:'ip'",
            "            ADDRESS:'address'",
            "            ip = IP_ADDRESS:'2.1.2.1'",
            "            subnet = IP_ADDRESS:'255.255.255.255'",
            "            NEWLINE:'\\n')))))",
            "  (stanza*",
            "    (s_interface*",
            "      INTERFACE:'interface'",
            "      (s_interface_definition",
            "        iname = (interface_name*",
            "          name_prefix_alpha = M_Interface_PREFIX:'FastEthernet'  <== mode:M_Interface",
            "          DEC:'0'  <== mode:M_Interface",
            "          FORWARD_SLASH:'/'  <== mode:M_Interface",
            "          (range*",
            "            (subrange*",
            "              low = (dec*",
            "                DEC:'0'  <== mode:M_Interface))))",
            "        NEWLINE:'\\n'  <== mode:M_Interface",
            "        (if_inner*",
            "          (if_ip_address",
            "            IP:'ip'",
            "            ADDRESS:'address'",
            "            ip = IP_ADDRESS:'2.12.11.2'",
            "            subnet = IP_ADDRESS:'255.255.255.0'",
            "            NEWLINE:'\\n'))",
            "        (if_inner*",
            "          (if_null_block*",
            "            DUPLEX:'duplex'",
            "            AUTO:'auto'",
            "            NEWLINE:'\\n'))",
            "        (if_inner*",
            "          (if_speed_auto*",
            "            SPEED:'speed'",
            "            AUTO:'auto'",
            "            NEWLINE:'\\n')))))",
            "  (stanza*",
            "    (s_interface*",
            "      INTERFACE:'interface'",
            "      (s_interface_definition",
            "        iname = (interface_name*",
            "          name_prefix_alpha = M_Interface_PREFIX:'FastEthernet'  <== mode:M_Interface",
            "          DEC:'0'  <== mode:M_Interface",
            "          FORWARD_SLASH:'/'  <== mode:M_Interface",
            "          (range*",
            "            (subrange*",
            "              low = (dec*",
            "                DEC:'1'  <== mode:M_Interface))))",
            "        NEWLINE:'\\n'  <== mode:M_Interface",
            "        (if_inner*",
            "          (if_ip_address",
            "            IP:'ip'",
            "            ADDRESS:'address'",
            "            ip = IP_ADDRESS:'2.12.21.2'",
            "            subnet = IP_ADDRESS:'255.255.255.0'",
            "            NEWLINE:'\\n'))",
            "        (if_inner*",
            "          (if_null_block*",
            "            DUPLEX:'duplex'",
            "            AUTO:'auto'",
            "            NEWLINE:'\\n'))",
            "        (if_inner*",
            "          (if_speed_auto*",
            "            SPEED:'speed'",
            "            AUTO:'auto'",
            "            NEWLINE:'\\n')))))",
            "  (stanza*",
            "    (s_interface*",
            "      INTERFACE:'interface'",
            "      (s_interface_definition",
            "        iname = (interface_name*",
            "          name_prefix_alpha = M_Interface_PREFIX:'FastEthernet'  <== mode:M_Interface",
            "          DEC:'1'  <== mode:M_Interface",
            "          FORWARD_SLASH:'/'  <== mode:M_Interface",
            "          (range*",
            "            (subrange*",
            "              low = (dec*",
            "                DEC:'0'  <== mode:M_Interface))))",
            "        NEWLINE:'\\n'  <== mode:M_Interface",
            "        (if_inner*",
            "          (if_ip_address",
            "            IP:'ip'",
            "            ADDRESS:'address'",
            "            ip = IP_ADDRESS:'2.23.12.2'",
            "            subnet = IP_ADDRESS:'255.255.255.0'",
            "            NEWLINE:'\\n'))",
            "        (if_inner*",
            "          (if_ip_access_group",
            "            IP:'ip'",
            "            ACCESS_GROUP:'access-group'",
            "            name = (variable*",
            "              VARIABLE:'blocktelnet')",
            "            IN:'in'",
            "            NEWLINE:'\\n'))",
            "        (if_inner*",
            "          (if_null_block*",
            "            DUPLEX:'duplex'",
            "            AUTO:'auto'",
            "            NEWLINE:'\\n'))",
            "        (if_inner*",
            "          (if_speed_auto*",
            "            SPEED:'speed'",
            "            AUTO:'auto'",
            "            NEWLINE:'\\n')))))",
            "  (stanza*",
            "    (s_interface*",
            "      INTERFACE:'interface'",
            "      (s_interface_definition",
            "        iname = (interface_name*",
            "          name_prefix_alpha = M_Interface_PREFIX:'FastEthernet'  <== mode:M_Interface",
            "          DEC:'2'  <== mode:M_Interface",
            "          FORWARD_SLASH:'/'  <== mode:M_Interface",
            "          (range*",
            "            (subrange*",
            "              low = (dec*",
            "                DEC:'0'  <== mode:M_Interface))))",
            "        NEWLINE:'\\n'  <== mode:M_Interface",
            "        (if_inner*",
            "          (if_ip_address",
            "            IP:'ip'",
            "            ADDRESS:'address'",
            "            ip = IP_ADDRESS:'2.23.11.2'",
            "            subnet = IP_ADDRESS:'255.255.255.0'",
            "            NEWLINE:'\\n'))",
            "        (if_inner*",
            "          (if_ip_access_group",
            "            IP:'ip'",
            "            ACCESS_GROUP:'access-group'",
            "            name = (variable*",
            "              VARIABLE:'blocktelnet')",
            "            IN:'in'",
            "            NEWLINE:'\\n'))",
            "        (if_inner*",
            "          (if_null_block*",
            "            DUPLEX:'duplex'",
            "            AUTO:'auto'",
            "            NEWLINE:'\\n'))",
            "        (if_inner*",
            "          (if_speed_auto*",
            "            SPEED:'speed'",
            "            AUTO:'auto'",
            "            NEWLINE:'\\n')))))",
            "  (stanza*",
            "    (s_router_ospf",
            "      ROUTER:'router'",
            "      OSPF:'ospf'",
            "      name = (variable*",
            "        UINT8:'1')",
            "      NEWLINE:'\\n'",
            "      (ro_inner*",
            "        (ro_router_id",
            "          ROUTER_ID:'router-id'",
            "          ip = IP_ADDRESS:'2.1.2.1'",
            "          NEWLINE:'\\n'))",
            "      (ro_inner*",
            "        (ro_common*",
            "          (ro_null*",
            "            LOG_ADJACENCY_CHANGES:'log-adjacency-changes'",
            "            (null_rest_of_line*",
            "              NEWLINE:'\\n'))))",
            "      (ro_inner*",
            "        (ro_network",
            "          NETWORK:'network'",
            "          ip = IP_ADDRESS:'2.0.0.0'",
            "          wildcard = IP_ADDRESS:'0.255.255.255'",
            "          AREA:'area'",
            "          area_int = (dec*",
            "            UINT8:'1')",
            "          NEWLINE:'\\n'))))",
            "  (stanza*",
            "    (router_bgp_stanza",
            "      ROUTER:'router'",
            "      BGP:'bgp'",
            "      procnum = (bgp_asn*",
            "        asn = (uint32*",
            "          UINT8:'2'))",
            "      NEWLINE:'\\n'",
            "      (router_bgp_stanza_tail*",
            "        (router_id_rb_stanza*",
            "          BGP:'bgp'",
            "          (router_id_bgp_tail",
            "            ROUTER_ID:'router-id'",
            "            routerid = IP_ADDRESS:'2.1.2.1'",
            "            NEWLINE:'\\n')))",
            "      (router_bgp_stanza_tail*",
            "        (bgp_rb_stanza*",
            "          BGP:'bgp'",
            "          (bgp_log_neighbor_changes_rb_stanza_null*",
            "            LOG_NEIGHBOR_CHANGES:'log-neighbor-changes'",
            "            (null_rest_of_line*",
            "              NEWLINE:'\\n'))))",
            "      (router_bgp_stanza_tail*",
            "        (peer_group_creation_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          name = VARIABLE:'as2'  <== mode:M_NEIGHBOR",
            "          PEER_GROUP:'peer-group'",
            "          NEWLINE:'\\n'  <== mode:M_NEIGHBOR))",
            "      (router_bgp_stanza_tail*",
            "        (neighbor_flat_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          peergroup = VARIABLE:'as2'  <== mode:M_NEIGHBOR",
            "          (remote_as_bgp_tail",
            "            REMOTE_AS:'remote-as'",
            "            remote = (bgp_asn*",
            "              asn = (uint32*",
            "                UINT8:'2'))",
            "            NEWLINE:'\\n')))",
            "      (router_bgp_stanza_tail*",
            "        (peer_group_assignment_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          address = IP_ADDRESS:'2.1.1.1'  <== mode:M_NEIGHBOR",
            "          PEER_GROUP:'peer-group'",
            "          name = (variable*",
            "            VARIABLE:'as2'  <== mode:M_NEIGHBOR)",
            "          NEWLINE:'\\n'))",
            "      (router_bgp_stanza_tail*",
            "        (neighbor_flat_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          ip = IP_ADDRESS:'2.1.1.1'  <== mode:M_NEIGHBOR",
            "          (bgp_tail*",
            "            (update_source_bgp_tail",
            "              UPDATE_SOURCE:'update-source'",
            "              source = (interface_name*",
            "                name_prefix_alpha = M_Interface_PREFIX:'Loopback'  <== mode:M_Interface",
            "                (range*",
            "                  (subrange*",
            "                    low = (dec*",
            "                      DEC:'0'  <== mode:M_Interface))))",
            "              NEWLINE:'\\n'  <== mode:M_Interface))))",
            "      (router_bgp_stanza_tail*",
            "        (peer_group_assignment_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          address = IP_ADDRESS:'2.1.1.2'  <== mode:M_NEIGHBOR",
            "          PEER_GROUP:'peer-group'",
            "          name = (variable*",
            "            VARIABLE:'as2'  <== mode:M_NEIGHBOR)",
            "          NEWLINE:'\\n'))",
            "      (router_bgp_stanza_tail*",
            "        (neighbor_flat_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          ip = IP_ADDRESS:'2.1.1.2'  <== mode:M_NEIGHBOR",
            "          (bgp_tail*",
            "            (update_source_bgp_tail",
            "              UPDATE_SOURCE:'update-source'",
            "              source = (interface_name*",
            "                name_prefix_alpha = M_Interface_PREFIX:'Loopback'  <== mode:M_Interface",
            "                (range*",
            "                  (subrange*",
            "                    low = (dec*",
            "                      DEC:'0'  <== mode:M_Interface))))",
            "              NEWLINE:'\\n'  <== mode:M_Interface))))",
            "      (router_bgp_stanza_tail*",
            "        (peer_group_assignment_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          address = IP_ADDRESS:'2.1.3.1'  <== mode:M_NEIGHBOR",
            "          PEER_GROUP:'peer-group'",
            "          name = (variable*",
            "            VARIABLE:'as2'  <== mode:M_NEIGHBOR)",
            "          NEWLINE:'\\n'))",
            "      (router_bgp_stanza_tail*",
            "        (neighbor_flat_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          ip = IP_ADDRESS:'2.1.3.1'  <== mode:M_NEIGHBOR",
            "          (bgp_tail*",
            "            (update_source_bgp_tail",
            "              UPDATE_SOURCE:'update-source'",
            "              source = (interface_name*",
            "                name_prefix_alpha = M_Interface_PREFIX:'Loopback'  <== mode:M_Interface",
            "                (range*",
            "                  (subrange*",
            "                    low = (dec*",
            "                      DEC:'0'  <== mode:M_Interface))))",
            "              NEWLINE:'\\n'  <== mode:M_Interface))))",
            "      (router_bgp_stanza_tail*",
            "        (peer_group_assignment_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          address = IP_ADDRESS:'2.1.3.2'  <== mode:M_NEIGHBOR",
            "          PEER_GROUP:'peer-group'",
            "          name = (variable*",
            "            VARIABLE:'as2'  <== mode:M_NEIGHBOR)",
            "          NEWLINE:'\\n'))",
            "      (router_bgp_stanza_tail*",
            "        (neighbor_flat_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          ip = IP_ADDRESS:'2.1.3.2'  <== mode:M_NEIGHBOR",
            "          (bgp_tail*",
            "            (update_source_bgp_tail",
            "              UPDATE_SOURCE:'update-source'",
            "              source = (interface_name*",
            "                name_prefix_alpha = M_Interface_PREFIX:'Loopback'  <== mode:M_Interface",
            "                (range*",
            "                  (subrange*",
            "                    low = (dec*",
            "                      DEC:'0'  <== mode:M_Interface))))",
            "              NEWLINE:'\\n'  <== mode:M_Interface))))",
            "      (router_bgp_stanza_tail*",
            "        (bgp_tail*",
            "          (maximum_paths_bgp_tail",
            "            MAXIMUM_PATHS:'maximum-paths'",
            "            paths = (dec*",
            "              UINT8:'5')",
            "            NEWLINE:'\\n')))",
            "      (router_bgp_stanza_tail*",
            "        (address_family_rb_stanza",
            "          (address_family_header",
            "            ADDRESS_FAMILY:'address-family'",
            "            af = (bgp_address_family*",
            "              IPV4:'ipv4')",
            "            NEWLINE:'\\n')",
            "          (address_family_inner*",
            "            (neighbor_flat_rb_stanza",
            "              NEIGHBOR:'neighbor'",
            "              peergroup = VARIABLE:'as2'  <== mode:M_NEIGHBOR",
            "              (bgp_tail*",
            "                (send_community_bgp_tail",
            "                  SEND_COMMUNITY:'send-community'",
            "                  NEWLINE:'\\n'))))",
            "          (address_family_inner*",
            "            (neighbor_flat_rb_stanza",
            "              NEIGHBOR:'neighbor'",
            "              peergroup = VARIABLE:'as2'  <== mode:M_NEIGHBOR",
            "              (bgp_tail*",
            "                (route_reflector_client_bgp_tail",
            "                  ROUTE_REFLECTOR_CLIENT:'route-reflector-client'",
            "                  NEWLINE:'\\n'))))",
            "          (address_family_inner*",
            "            (neighbor_flat_rb_stanza",
            "              NEIGHBOR:'neighbor'",
            "              ip = IP_ADDRESS:'2.1.1.1'  <== mode:M_NEIGHBOR",
            "              (bgp_tail*",
            "                (activate_bgp_tail",
            "                  ACTIVATE:'activate'",
            "                  NEWLINE:'\\n'))))",
            "          (address_family_inner*",
            "            (neighbor_flat_rb_stanza",
            "              NEIGHBOR:'neighbor'",
            "              ip = IP_ADDRESS:'2.1.1.2'  <== mode:M_NEIGHBOR",
            "              (bgp_tail*",
            "                (activate_bgp_tail",
            "                  ACTIVATE:'activate'",
            "                  NEWLINE:'\\n'))))",
            "          (address_family_inner*",
            "            (neighbor_flat_rb_stanza",
            "              NEIGHBOR:'neighbor'",
            "              ip = IP_ADDRESS:'2.1.3.1'  <== mode:M_NEIGHBOR",
            "              (bgp_tail*",
            "                (activate_bgp_tail",
            "                  ACTIVATE:'activate'",
            "                  NEWLINE:'\\n'))))",
            "          (address_family_inner*",
            "            (neighbor_flat_rb_stanza",
            "              NEIGHBOR:'neighbor'",
            "              ip = IP_ADDRESS:'2.1.3.2'  <== mode:M_NEIGHBOR",
            "              (bgp_tail*",
            "                (activate_bgp_tail",
            "                  ACTIVATE:'activate'",
            "                  NEWLINE:'\\n'))))",
            "          (address_family_inner*",
            "            (bgp_tail*",
            "              (maximum_paths_bgp_tail",
            "                MAXIMUM_PATHS:'maximum-paths'",
            "                paths = (dec*",
            "                  UINT8:'5')",
            "                NEWLINE:'\\n')))",
            "          (address_family_inner*",
            "            (bgp_tail*",
            "              (null_bgp_tail*",
            "                NO:'no'",
            "                AUTO_SUMMARY:'auto-summary'",
            "                (null_rest_of_line*",
            "                  NEWLINE:'\\n'))))",
            "          (address_family_inner*",
            "            (bgp_tail*",
            "              (null_bgp_tail*",
            "                NO:'no'",
            "                SYNCHRONIZATION:'synchronization'",
            "                (null_rest_of_line*",
            "                  NEWLINE:'\\n'))))",
            "          (address_family_inner*",
            "            (bgp_tail*",
            "              (bgp_bgp_tail*",
            "                BGP:'bgp'",
            "                (bgp_dampening_bgp_tail_null*",
            "                  DAMPENING:'dampening'",
            "                  (null_rest_of_line*",
            "                    NEWLINE:'\\n')))))",
            "          (address_family_footer*",
            "            EXIT_ADDRESS_FAMILY:'exit-address-family'",
            "            NEWLINE:'\\n')))))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        IP:'ip'",
            "        FORWARD_PROTOCOL:'forward-protocol'",
            "        ND:'nd'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        NO:'no'",
            "        IP:'ip'",
            "        HTTP:'http'",
            "        SERVER:'server'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        NO:'no'",
            "        IP:'ip'",
            "        HTTP:'http'",
            "        VARIABLE:'secure-server'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (extended_access_list_stanza",
            "      IP:'ip'",
            "      ACCESS_LIST:'access-list'",
            "      EXTENDED:'extended'",
            "      name = (variable_aclname*",
            "        VARIABLE:'blocktelnet')",
            "      NEWLINE:'\\n'",
            "      (extended_access_list_tail",
            "        ala = (access_list_action*",
            "          DENY:'deny')",
            "        prot = (protocol*",
            "          TCP:'tcp')",
            "        srcipr = (access_list_ip_range*",
            "          ANY:'any')",
            "        dstipr = (access_list_ip_range*",
            "          ANY:'any')",
            "        alps_dst = (eacl_port_specifier*",
            "          (port_specifier_literal*",
            "            EQ:'eq'",
            "            (port*",
            "              named = (named_port*",
            "                TELNET:'telnet'))))",
            "        NEWLINE:'\\n')",
            "      (extended_access_list_tail",
            "        ala = (access_list_action*",
            "          PERMIT:'permit')",
            "        prot = (protocol*",
            "          IP:'ip')",
            "        srcipr = (access_list_ip_range*",
            "          ANY:'any')",
            "        dstipr = (access_list_ip_range*",
            "          ANY:'any')",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_control_plane*",
            "      CONTROL_PLANE:'control-plane'",
            "      NEWLINE:'\\n'))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        MGCP:'mgcp'",
            "        VARIABLE:'behavior'",
            "        VARIABLE:'g729-variants'",
            "        VARIABLE:'static-pt'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_gatekeeper*",
            "      GATEKEEPER:'gatekeeper'",
            "      NEWLINE:'\\n'",
            "      (gk_null*",
            "        SHUTDOWN:'shutdown'",
            "        (null_rest_of_line*",
            "          NEWLINE:'\\n'))))",
            "  (stanza*",
            "    (s_line",
            "      LINE:'line'",
            "      (line_type*",
            "        CON:'con')",
            "      first = (dec*",
            "        UINT8:'0')",
            "      NEWLINE:'\\n'",
            "      (l_exec_timeout",
            "        EXEC_TIMEOUT:'exec-timeout'",
            "        minutes = (dec*",
            "          UINT8:'0')",
            "        seconds = (dec*",
            "          UINT8:'0')",
            "        NEWLINE:'\\n')",
            "      (l_null*",
            "        PRIVILEGE:'privilege'",
            "        (null_rest_of_line*",
            "          LEVEL:'level'",
            "          UINT8:'15'",
            "          NEWLINE:'\\n'))",
            "      (l_null*",
            "        LOGGING:'logging'",
            "        (null_rest_of_line*",
            "          SYNCHRONOUS:'synchronous'",
            "          NEWLINE:'\\n'))))",
            "  (stanza*",
            "    (s_line",
            "      LINE:'line'",
            "      (line_type*",
            "        AUX:'aux')",
            "      first = (dec*",
            "        UINT8:'0')",
            "      NEWLINE:'\\n'",
            "      (l_exec_timeout",
            "        EXEC_TIMEOUT:'exec-timeout'",
            "        minutes = (dec*",
            "          UINT8:'0')",
            "        seconds = (dec*",
            "          UINT8:'0')",
            "        NEWLINE:'\\n')",
            "      (l_null*",
            "        PRIVILEGE:'privilege'",
            "        (null_rest_of_line*",
            "          LEVEL:'level'",
            "          UINT8:'15'",
            "          NEWLINE:'\\n'))",
            "      (l_null*",
            "        LOGGING:'logging'",
            "        (null_rest_of_line*",
            "          SYNCHRONOUS:'synchronous'",
            "          NEWLINE:'\\n'))))",
            "  (stanza*",
            "    (s_line",
            "      LINE:'line'",
            "      (line_type*",
            "        VTY:'vty')",
            "      first = (dec*",
            "        UINT8:'0')",
            "      last = (dec*",
            "        UINT8:'4')",
            "      NEWLINE:'\\n'))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        END:'end'",
            "        NEWLINE:'\\n\\n')))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/as2core2.cfg" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        VERSION:'version'",
            "        FLOAT:'12.4'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_service",
            "      SERVICE:'service'",
            "      (variable*",
            "        VARIABLE:'timestamps')",
            "      (variable*",
            "        DEBUG:'debug')",
            "      (variable*",
            "        VARIABLE:'datetime')",
            "      (variable*",
            "        MSEC:'msec')",
            "      NEWLINE:'\\n'))",
            "  (stanza*",
            "    (s_service",
            "      SERVICE:'service'",
            "      (variable*",
            "        VARIABLE:'timestamps')",
            "      (variable*",
            "        LOG:'log')",
            "      (variable*",
            "        VARIABLE:'datetime')",
            "      (variable*",
            "        MSEC:'msec')",
            "      NEWLINE:'\\n'))",
            "  (stanza*",
            "    (s_service",
            "      NO:'no'",
            "      SERVICE:'service'",
            "      (variable*",
            "        VARIABLE:'password-encryption')",
            "      NEWLINE:'\\n'))",
            "  (stanza*",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'as2core2'",
            "      NEWLINE:'\\n'))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        BOOT_START_MARKER:'boot-start-marker'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        BOOT_END_MARKER:'boot-end-marker'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_aaa",
            "      NO:'no'",
            "      AAA:'aaa'",
            "      (aaa_new_model",
            "        NEW_MODEL:'new-model'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        MEMORY_SIZE:'memory-size'",
            "        VARIABLE:'iomem'",
            "        UINT8:'5'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        IP:'ip'",
            "        CEF:'cef'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_ip_domain",
            "      NO:'no'",
            "      IP:'ip'",
            "      DOMAIN:'domain'",
            "      (ip_domain_lookup",
            "        LOOKUP:'lookup'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_ip_domain",
            "      IP:'ip'",
            "      DOMAIN:'domain'",
            "      (ip_domain_name",
            "        NAME:'name'",
            "        hostname = (variable_hostname*",
            "          VARIABLE:'lab.local'  <== mode:M_Name)",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        IP:'ip'",
            "        AUTH_PROXY:'auth-proxy'",
            "        VARIABLE:'max-nodata-conns'",
            "        UINT8:'3'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        IP:'ip'",
            "        ADMISSION:'admission'",
            "        VARIABLE:'max-nodata-conns'",
            "        UINT8:'3'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_interface*",
            "      INTERFACE:'interface'",
            "      (s_interface_definition",
            "        iname = (interface_name*",
            "          name_prefix_alpha = M_Interface_PREFIX:'Loopback'  <== mode:M_Interface",
            "          (range*",
            "            (subrange*",
            "              low = (dec*",
            "                DEC:'0'  <== mode:M_Interface))))",
            "        NEWLINE:'\\n'  <== mode:M_Interface",
            "        (if_inner*",
            "          (if_ip_address",
            "            IP:'ip'",
            "            ADDRESS:'address'",
            "            ip = IP_ADDRESS:'2.1.2.2'",
            "            subnet = IP_ADDRESS:'255.255.255.255'",
            "            NEWLINE:'\\n')))))",
            "  (stanza*",
            "    (s_interface*",
            "      INTERFACE:'interface'",
            "      (s_interface_definition",
            "        iname = (interface_name*",
            "          name_prefix_alpha = M_Interface_PREFIX:'FastEthernet'  <== mode:M_Interface",
            "          DEC:'0'  <== mode:M_Interface",
            "          FORWARD_SLASH:'/'  <== mode:M_Interface",
            "          (range*",
            "            (subrange*",
            "              low = (dec*",
            "                DEC:'0'  <== mode:M_Interface))))",
            "        NEWLINE:'\\n'  <== mode:M_Interface",
            "        (if_inner*",
            "          (if_ip_address",
            "            IP:'ip'",
            "            ADDRESS:'address'",
            "            ip = IP_ADDRESS:'2.12.22.2'",
            "            subnet = IP_ADDRESS:'255.255.255.0'",
            "            NEWLINE:'\\n'))",
            "        (if_inner*",
            "          (if_null_block*",
            "            DUPLEX:'duplex'",
            "            AUTO:'auto'",
            "            NEWLINE:'\\n'))",
            "        (if_inner*",
            "          (if_speed_auto*",
            "            SPEED:'speed'",
            "            AUTO:'auto'",
            "            NEWLINE:'\\n')))))",
            "  (stanza*",
            "    (s_interface*",
            "      INTERFACE:'interface'",
            "      (s_interface_definition",
            "        iname = (interface_name*",
            "          name_prefix_alpha = M_Interface_PREFIX:'FastEthernet'  <== mode:M_Interface",
            "          DEC:'0'  <== mode:M_Interface",
            "          FORWARD_SLASH:'/'  <== mode:M_Interface",
            "          (range*",
            "            (subrange*",
            "              low = (dec*",
            "                DEC:'1'  <== mode:M_Interface))))",
            "        NEWLINE:'\\n'  <== mode:M_Interface",
            "        (if_inner*",
            "          (if_ip_address",
            "            IP:'ip'",
            "            ADDRESS:'address'",
            "            ip = IP_ADDRESS:'2.12.12.2'",
            "            subnet = IP_ADDRESS:'255.255.255.0'",
            "            NEWLINE:'\\n'))",
            "        (if_inner*",
            "          (if_null_block*",
            "            DUPLEX:'duplex'",
            "            AUTO:'auto'",
            "            NEWLINE:'\\n'))",
            "        (if_inner*",
            "          (if_speed_auto*",
            "            SPEED:'speed'",
            "            AUTO:'auto'",
            "            NEWLINE:'\\n')))))",
            "  (stanza*",
            "    (s_interface*",
            "      INTERFACE:'interface'",
            "      (s_interface_definition",
            "        iname = (interface_name*",
            "          name_prefix_alpha = M_Interface_PREFIX:'FastEthernet'  <== mode:M_Interface",
            "          DEC:'1'  <== mode:M_Interface",
            "          FORWARD_SLASH:'/'  <== mode:M_Interface",
            "          (range*",
            "            (subrange*",
            "              low = (dec*",
            "                DEC:'0'  <== mode:M_Interface))))",
            "        NEWLINE:'\\n'  <== mode:M_Interface",
            "        (if_inner*",
            "          (if_ip_address",
            "            IP:'ip'",
            "            ADDRESS:'address'",
            "            ip = IP_ADDRESS:'2.23.21.2'",
            "            subnet = IP_ADDRESS:'255.255.255.0'",
            "            NEWLINE:'\\n'))",
            "        (if_inner*",
            "          (if_null_block*",
            "            DUPLEX:'duplex'",
            "            AUTO:'auto'",
            "            NEWLINE:'\\n'))",
            "        (if_inner*",
            "          (if_speed_auto*",
            "            SPEED:'speed'",
            "            AUTO:'auto'",
            "            NEWLINE:'\\n')))))",
            "  (stanza*",
            "    (s_interface*",
            "      INTERFACE:'interface'",
            "      (s_interface_definition",
            "        iname = (interface_name*",
            "          name_prefix_alpha = M_Interface_PREFIX:'FastEthernet'  <== mode:M_Interface",
            "          DEC:'2'  <== mode:M_Interface",
            "          FORWARD_SLASH:'/'  <== mode:M_Interface",
            "          (range*",
            "            (subrange*",
            "              low = (dec*",
            "                DEC:'0'  <== mode:M_Interface))))",
            "        NEWLINE:'\\n'  <== mode:M_Interface",
            "        (if_inner*",
            "          (if_ip_address",
            "            IP:'ip'",
            "            ADDRESS:'address'",
            "            ip = IP_ADDRESS:'2.23.22.2'",
            "            subnet = IP_ADDRESS:'255.255.255.0'",
            "            NEWLINE:'\\n'))",
            "        (if_inner*",
            "          (if_null_block*",
            "            DUPLEX:'duplex'",
            "            AUTO:'auto'",
            "            NEWLINE:'\\n'))",
            "        (if_inner*",
            "          (if_speed_auto*",
            "            SPEED:'speed'",
            "            AUTO:'auto'",
            "            NEWLINE:'\\n')))))",
            "  (stanza*",
            "    (s_router_ospf",
            "      ROUTER:'router'",
            "      OSPF:'ospf'",
            "      name = (variable*",
            "        UINT8:'1')",
            "      NEWLINE:'\\n'",
            "      (ro_inner*",
            "        (ro_router_id",
            "          ROUTER_ID:'router-id'",
            "          ip = IP_ADDRESS:'2.1.2.2'",
            "          NEWLINE:'\\n'))",
            "      (ro_inner*",
            "        (ro_common*",
            "          (ro_null*",
            "            LOG_ADJACENCY_CHANGES:'log-adjacency-changes'",
            "            (null_rest_of_line*",
            "              NEWLINE:'\\n'))))",
            "      (ro_inner*",
            "        (ro_network",
            "          NETWORK:'network'",
            "          ip = IP_ADDRESS:'2.0.0.0'",
            "          wildcard = IP_ADDRESS:'0.255.255.255'",
            "          AREA:'area'",
            "          area_int = (dec*",
            "            UINT8:'1')",
            "          NEWLINE:'\\n'))))",
            "  (stanza*",
            "    (router_bgp_stanza",
            "      ROUTER:'router'",
            "      BGP:'bgp'",
            "      procnum = (bgp_asn*",
            "        asn = (uint32*",
            "          UINT8:'2'))",
            "      NEWLINE:'\\n'",
            "      (router_bgp_stanza_tail*",
            "        (router_id_rb_stanza*",
            "          BGP:'bgp'",
            "          (router_id_bgp_tail",
            "            ROUTER_ID:'router-id'",
            "            routerid = IP_ADDRESS:'2.1.2.2'",
            "            NEWLINE:'\\n')))",
            "      (router_bgp_stanza_tail*",
            "        (bgp_rb_stanza*",
            "          BGP:'bgp'",
            "          (bgp_log_neighbor_changes_rb_stanza_null*",
            "            LOG_NEIGHBOR_CHANGES:'log-neighbor-changes'",
            "            (null_rest_of_line*",
            "              NEWLINE:'\\n'))))",
            "      (router_bgp_stanza_tail*",
            "        (peer_group_creation_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          name = VARIABLE:'as2'  <== mode:M_NEIGHBOR",
            "          PEER_GROUP:'peer-group'",
            "          NEWLINE:'\\n'  <== mode:M_NEIGHBOR))",
            "      (router_bgp_stanza_tail*",
            "        (neighbor_flat_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          peergroup = VARIABLE:'as2'  <== mode:M_NEIGHBOR",
            "          (remote_as_bgp_tail",
            "            REMOTE_AS:'remote-as'",
            "            remote = (bgp_asn*",
            "              asn = (uint32*",
            "                UINT8:'2'))",
            "            NEWLINE:'\\n')))",
            "      (router_bgp_stanza_tail*",
            "        (neighbor_flat_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          peergroup = VARIABLE:'as2'  <== mode:M_NEIGHBOR",
            "          (bgp_tail*",
            "            (route_map_bgp_tail",
            "              ROUTE_MAP:'route-map'",
            "              name = (variable*",
            "                VARIABLE:'filter-bogons'  <== mode:M_RouteMap)",
            "              IN:'in'",
            "              NEWLINE:'\\n'))))",
            "      (router_bgp_stanza_tail*",
            "        (peer_group_assignment_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          address = IP_ADDRESS:'2.1.1.1'  <== mode:M_NEIGHBOR",
            "          PEER_GROUP:'peer-group'",
            "          name = (variable*",
            "            VARIABLE:'as2'  <== mode:M_NEIGHBOR)",
            "          NEWLINE:'\\n'))",
            "      (router_bgp_stanza_tail*",
            "        (neighbor_flat_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          ip = IP_ADDRESS:'2.1.1.1'  <== mode:M_NEIGHBOR",
            "          (bgp_tail*",
            "            (update_source_bgp_tail",
            "              UPDATE_SOURCE:'update-source'",
            "              source = (interface_name*",
            "                name_prefix_alpha = M_Interface_PREFIX:'Loopback'  <== mode:M_Interface",
            "                (range*",
            "                  (subrange*",
            "                    low = (dec*",
            "                      DEC:'0'  <== mode:M_Interface))))",
            "              NEWLINE:'\\n'  <== mode:M_Interface))))",
            "      (router_bgp_stanza_tail*",
            "        (peer_group_assignment_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          address = IP_ADDRESS:'2.1.1.2'  <== mode:M_NEIGHBOR",
            "          PEER_GROUP:'peer-group'",
            "          name = (variable*",
            "            VARIABLE:'as2'  <== mode:M_NEIGHBOR)",
            "          NEWLINE:'\\n'))",
            "      (router_bgp_stanza_tail*",
            "        (neighbor_flat_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          ip = IP_ADDRESS:'2.1.1.2'  <== mode:M_NEIGHBOR",
            "          (bgp_tail*",
            "            (update_source_bgp_tail",
            "              UPDATE_SOURCE:'update-source'",
            "              source = (interface_name*",
            "                name_prefix_alpha = M_Interface_PREFIX:'Loopback'  <== mode:M_Interface",
            "                (range*",
            "                  (subrange*",
            "                    low = (dec*",
            "                      DEC:'0'  <== mode:M_Interface))))",
            "              NEWLINE:'\\n'  <== mode:M_Interface))))",
            "      (router_bgp_stanza_tail*",
            "        (peer_group_assignment_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          address = IP_ADDRESS:'2.1.3.1'  <== mode:M_NEIGHBOR",
            "          PEER_GROUP:'peer-group'",
            "          name = (variable*",
            "            VARIABLE:'as2'  <== mode:M_NEIGHBOR)",
            "          NEWLINE:'\\n'))",
            "      (router_bgp_stanza_tail*",
            "        (neighbor_flat_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          ip = IP_ADDRESS:'2.1.3.1'  <== mode:M_NEIGHBOR",
            "          (bgp_tail*",
            "            (update_source_bgp_tail",
            "              UPDATE_SOURCE:'update-source'",
            "              source = (interface_name*",
            "                name_prefix_alpha = M_Interface_PREFIX:'Loopback'  <== mode:M_Interface",
            "                (range*",
            "                  (subrange*",
            "                    low = (dec*",
            "                      DEC:'0'  <== mode:M_Interface))))",
            "              NEWLINE:'\\n'  <== mode:M_Interface))))",
            "      (router_bgp_stanza_tail*",
            "        (peer_group_assignment_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          address = IP_ADDRESS:'2.1.3.2'  <== mode:M_NEIGHBOR",
            "          PEER_GROUP:'peer-group'",
            "          name = (variable*",
            "            VARIABLE:'as2'  <== mode:M_NEIGHBOR)",
            "          NEWLINE:'\\n'))",
            "      (router_bgp_stanza_tail*",
            "        (neighbor_flat_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          ip = IP_ADDRESS:'2.1.3.2'  <== mode:M_NEIGHBOR",
            "          (bgp_tail*",
            "            (update_source_bgp_tail",
            "              UPDATE_SOURCE:'update-source'",
            "              source = (interface_name*",
            "                name_prefix_alpha = M_Interface_PREFIX:'Loopback'  <== mode:M_Interface",
            "                (range*",
            "                  (subrange*",
            "                    low = (dec*",
            "                      DEC:'0'  <== mode:M_Interface))))",
            "              NEWLINE:'\\n'  <== mode:M_Interface))))",
            "      (router_bgp_stanza_tail*",
            "        (bgp_tail*",
            "          (maximum_paths_bgp_tail",
            "            MAXIMUM_PATHS:'maximum-paths'",
            "            paths = (dec*",
            "              UINT8:'5')",
            "            NEWLINE:'\\n')))",
            "      (router_bgp_stanza_tail*",
            "        (address_family_rb_stanza",
            "          (address_family_header",
            "            ADDRESS_FAMILY:'address-family'",
            "            af = (bgp_address_family*",
            "              IPV4:'ipv4')",
            "            NEWLINE:'\\n')",
            "          (address_family_inner*",
            "            (neighbor_flat_rb_stanza",
            "              NEIGHBOR:'neighbor'",
            "              peergroup = VARIABLE:'as2'  <== mode:M_NEIGHBOR",
            "              (bgp_tail*",
            "                (send_community_bgp_tail",
            "                  SEND_COMMUNITY:'send-community'",
            "                  NEWLINE:'\\n'))))",
            "          (address_family_inner*",
            "            (neighbor_flat_rb_stanza",
            "              NEIGHBOR:'neighbor'",
            "              peergroup = VARIABLE:'as2'  <== mode:M_NEIGHBOR",
            "              (bgp_tail*",
            "                (route_reflector_client_bgp_tail",
            "                  ROUTE_REFLECTOR_CLIENT:'route-reflector-client'",
            "                  NEWLINE:'\\n'))))",
            "          (address_family_inner*",
            "            (neighbor_flat_rb_stanza",
            "              NEIGHBOR:'neighbor'",
            "              ip = IP_ADDRESS:'2.1.1.1'  <== mode:M_NEIGHBOR",
            "              (bgp_tail*",
            "                (activate_bgp_tail",
            "                  ACTIVATE:'activate'",
            "                  NEWLINE:'\\n'))))",
            "          (address_family_inner*",
            "            (neighbor_flat_rb_stanza",
            "              NEIGHBOR:'neighbor'",
            "              ip = IP_ADDRESS:'2.1.1.2'  <== mode:M_NEIGHBOR",
            "              (bgp_tail*",
            "                (activate_bgp_tail",
            "                  ACTIVATE:'activate'",
            "                  NEWLINE:'\\n'))))",
            "          (address_family_inner*",
            "            (neighbor_flat_rb_stanza",
            "              NEIGHBOR:'neighbor'",
            "              ip = IP_ADDRESS:'2.1.3.1'  <== mode:M_NEIGHBOR",
            "              (bgp_tail*",
            "                (activate_bgp_tail",
            "                  ACTIVATE:'activate'",
            "                  NEWLINE:'\\n'))))",
            "          (address_family_inner*",
            "            (neighbor_flat_rb_stanza",
            "              NEIGHBOR:'neighbor'",
            "              ip = IP_ADDRESS:'2.1.3.2'  <== mode:M_NEIGHBOR",
            "              (bgp_tail*",
            "                (activate_bgp_tail",
            "                  ACTIVATE:'activate'",
            "                  NEWLINE:'\\n'))))",
            "          (address_family_inner*",
            "            (bgp_tail*",
            "              (maximum_paths_bgp_tail",
            "                MAXIMUM_PATHS:'maximum-paths'",
            "                paths = (dec*",
            "                  UINT8:'5')",
            "                NEWLINE:'\\n')))",
            "          (address_family_inner*",
            "            (bgp_tail*",
            "              (null_bgp_tail*",
            "                NO:'no'",
            "                AUTO_SUMMARY:'auto-summary'",
            "                (null_rest_of_line*",
            "                  NEWLINE:'\\n'))))",
            "          (address_family_inner*",
            "            (bgp_tail*",
            "              (null_bgp_tail*",
            "                NO:'no'",
            "                SYNCHRONIZATION:'synchronization'",
            "                (null_rest_of_line*",
            "                  NEWLINE:'\\n'))))",
            "          (address_family_inner*",
            "            (bgp_tail*",
            "              (bgp_bgp_tail*",
            "                BGP:'bgp'",
            "                (bgp_dampening_bgp_tail_null*",
            "                  DAMPENING:'dampening'",
            "                  (null_rest_of_line*",
            "                    NEWLINE:'\\n')))))",
            "          (address_family_footer*",
            "            EXIT_ADDRESS_FAMILY:'exit-address-family'",
            "            NEWLINE:'\\n')))))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        IP:'ip'",
            "        FORWARD_PROTOCOL:'forward-protocol'",
            "        ND:'nd'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        NO:'no'",
            "        IP:'ip'",
            "        HTTP:'http'",
            "        SERVER:'server'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        NO:'no'",
            "        IP:'ip'",
            "        HTTP:'http'",
            "        VARIABLE:'secure-server'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_control_plane*",
            "      CONTROL_PLANE:'control-plane'",
            "      NEWLINE:'\\n'))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        MGCP:'mgcp'",
            "        VARIABLE:'behavior'",
            "        VARIABLE:'g729-variants'",
            "        VARIABLE:'static-pt'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_gatekeeper*",
            "      GATEKEEPER:'gatekeeper'",
            "      NEWLINE:'\\n'",
            "      (gk_null*",
            "        SHUTDOWN:'shutdown'",
            "        (null_rest_of_line*",
            "          NEWLINE:'\\n'))))",
            "  (stanza*",
            "    (s_line",
            "      LINE:'line'",
            "      (line_type*",
            "        CON:'con')",
            "      first = (dec*",
            "        UINT8:'0')",
            "      NEWLINE:'\\n'",
            "      (l_exec_timeout",
            "        EXEC_TIMEOUT:'exec-timeout'",
            "        minutes = (dec*",
            "          UINT8:'0')",
            "        seconds = (dec*",
            "          UINT8:'0')",
            "        NEWLINE:'\\n')",
            "      (l_null*",
            "        PRIVILEGE:'privilege'",
            "        (null_rest_of_line*",
            "          LEVEL:'level'",
            "          UINT8:'15'",
            "          NEWLINE:'\\n'))",
            "      (l_null*",
            "        LOGGING:'logging'",
            "        (null_rest_of_line*",
            "          SYNCHRONOUS:'synchronous'",
            "          NEWLINE:'\\n'))))",
            "  (stanza*",
            "    (s_line",
            "      LINE:'line'",
            "      (line_type*",
            "        AUX:'aux')",
            "      first = (dec*",
            "        UINT8:'0')",
            "      NEWLINE:'\\n'",
            "      (l_exec_timeout",
            "        EXEC_TIMEOUT:'exec-timeout'",
            "        minutes = (dec*",
            "          UINT8:'0')",
            "        seconds = (dec*",
            "          UINT8:'0')",
            "        NEWLINE:'\\n')",
            "      (l_null*",
            "        PRIVILEGE:'privilege'",
            "        (null_rest_of_line*",
            "          LEVEL:'level'",
            "          UINT8:'15'",
            "          NEWLINE:'\\n'))",
            "      (l_null*",
            "        LOGGING:'logging'",
            "        (null_rest_of_line*",
            "          SYNCHRONOUS:'synchronous'",
            "          NEWLINE:'\\n'))))",
            "  (stanza*",
            "    (s_line",
            "      LINE:'line'",
            "      (line_type*",
            "        VTY:'vty')",
            "      first = (dec*",
            "        UINT8:'0')",
            "      last = (dec*",
            "        UINT8:'4')",
            "      NEWLINE:'\\n'))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        END:'end'",
            "        NEWLINE:'\\n\\n')))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/as2dept1.cfg" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        VERSION:'version'",
            "        FLOAT:'12.4'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_service",
            "      SERVICE:'service'",
            "      (variable*",
            "        VARIABLE:'timestamps')",
            "      (variable*",
            "        DEBUG:'debug')",
            "      (variable*",
            "        VARIABLE:'datetime')",
            "      (variable*",
            "        MSEC:'msec')",
            "      NEWLINE:'\\n'))",
            "  (stanza*",
            "    (s_service",
            "      SERVICE:'service'",
            "      (variable*",
            "        VARIABLE:'timestamps')",
            "      (variable*",
            "        LOG:'log')",
            "      (variable*",
            "        VARIABLE:'datetime')",
            "      (variable*",
            "        MSEC:'msec')",
            "      NEWLINE:'\\n'))",
            "  (stanza*",
            "    (s_service",
            "      NO:'no'",
            "      SERVICE:'service'",
            "      (variable*",
            "        VARIABLE:'password-encryption')",
            "      NEWLINE:'\\n'))",
            "  (stanza*",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'as2dept1'",
            "      NEWLINE:'\\n'))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        BOOT_START_MARKER:'boot-start-marker'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        BOOT_END_MARKER:'boot-end-marker'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_aaa",
            "      NO:'no'",
            "      AAA:'aaa'",
            "      (aaa_new_model",
            "        NEW_MODEL:'new-model'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        MEMORY_SIZE:'memory-size'",
            "        VARIABLE:'iomem'",
            "        UINT8:'5'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        IP:'ip'",
            "        CEF:'cef'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_ip_domain",
            "      NO:'no'",
            "      IP:'ip'",
            "      DOMAIN:'domain'",
            "      (ip_domain_lookup",
            "        LOOKUP:'lookup'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_ip_domain",
            "      IP:'ip'",
            "      DOMAIN:'domain'",
            "      (ip_domain_name",
            "        NAME:'name'",
            "        hostname = (variable_hostname*",
            "          VARIABLE:'lab.local'  <== mode:M_Name)",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        IP:'ip'",
            "        AUTH_PROXY:'auth-proxy'",
            "        VARIABLE:'max-nodata-conns'",
            "        UINT8:'3'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        IP:'ip'",
            "        ADMISSION:'admission'",
            "        VARIABLE:'max-nodata-conns'",
            "        UINT8:'3'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_interface*",
            "      INTERFACE:'interface'",
            "      (s_interface_definition",
            "        iname = (interface_name*",
            "          name_prefix_alpha = M_Interface_PREFIX:'Loopback'  <== mode:M_Interface",
            "          (range*",
            "            (subrange*",
            "              low = (dec*",
            "                DEC:'0'  <== mode:M_Interface))))",
            "        NEWLINE:'\\n'  <== mode:M_Interface",
            "        (if_inner*",
            "          (if_ip_address",
            "            IP:'ip'",
            "            ADDRESS:'address'",
            "            ip = IP_ADDRESS:'2.1.4.1'",
            "            subnet = IP_ADDRESS:'255.255.255.255'",
            "            NEWLINE:'\\n')))))",
            "  (stanza*",
            "    (s_interface*",
            "      INTERFACE:'interface'",
            "      (s_interface_definition",
            "        iname = (interface_name*",
            "          name_prefix_alpha = M_Interface_PREFIX:'FastEthernet'  <== mode:M_Interface",
            "          DEC:'0'  <== mode:M_Interface",
            "          FORWARD_SLASH:'/'  <== mode:M_Interface",
            "          (range*",
            "            (subrange*",
            "              low = (dec*",
            "                DEC:'0'  <== mode:M_Interface))))",
            "        NEWLINE:'\\n'  <== mode:M_Interface",
            "        (if_inner*",
            "          (if_ip_address",
            "            IP:'ip'",
            "            ADDRESS:'address'",
            "            ip = IP_ADDRESS:'2.34.101.4'",
            "            subnet = IP_ADDRESS:'255.255.255.0'",
            "            NEWLINE:'\\n'))",
            "        (if_inner*",
            "          (if_null_block*",
            "            DUPLEX:'duplex'",
            "            AUTO:'auto'",
            "            NEWLINE:'\\n'))",
            "        (if_inner*",
            "          (if_speed_auto*",
            "            SPEED:'speed'",
            "            AUTO:'auto'",
            "            NEWLINE:'\\n')))))",
            "  (stanza*",
            "    (s_interface*",
            "      INTERFACE:'interface'",
            "      (s_interface_definition",
            "        iname = (interface_name*",
            "          name_prefix_alpha = M_Interface_PREFIX:'FastEthernet'  <== mode:M_Interface",
            "          DEC:'0'  <== mode:M_Interface",
            "          FORWARD_SLASH:'/'  <== mode:M_Interface",
            "          (range*",
            "            (subrange*",
            "              low = (dec*",
            "                DEC:'1'  <== mode:M_Interface))))",
            "        NEWLINE:'\\n'  <== mode:M_Interface",
            "        (if_inner*",
            "          (if_ip_address",
            "            IP:'ip'",
            "            ADDRESS:'address'",
            "            ip = IP_ADDRESS:'2.34.201.4'",
            "            subnet = IP_ADDRESS:'255.255.255.0'",
            "            NEWLINE:'\\n'))",
            "        (if_inner*",
            "          (if_null_block*",
            "            DUPLEX:'duplex'",
            "            AUTO:'auto'",
            "            NEWLINE:'\\n'))",
            "        (if_inner*",
            "          (if_speed_auto*",
            "            SPEED:'speed'",
            "            AUTO:'auto'",
            "            NEWLINE:'\\n')))))",
            "  (stanza*",
            "    (s_interface*",
            "      INTERFACE:'interface'",
            "      (s_interface_definition",
            "        iname = (interface_name*",
            "          name_prefix_alpha = M_Interface_PREFIX:'FastEthernet'  <== mode:M_Interface",
            "          DEC:'1'  <== mode:M_Interface",
            "          FORWARD_SLASH:'/'  <== mode:M_Interface",
            "          (range*",
            "            (subrange*",
            "              low = (dec*",
            "                DEC:'0'  <== mode:M_Interface))))",
            "        NEWLINE:'\\n'  <== mode:M_Interface",
            "        (if_inner*",
            "          (if_ip_address",
            "            IP:'ip'",
            "            ADDRESS:'address'",
            "            ip = IP_ADDRESS:'2.128.0.1'",
            "            subnet = IP_ADDRESS:'255.255.0.0'",
            "            NEWLINE:'\\n'))",
            "        (if_inner*",
            "          (if_ip_access_group",
            "            IP:'ip'",
            "            ACCESS_GROUP:'access-group'",
            "            name = (variable*",
            "              VARIABLE:'RESTRICT_HOST_TRAFFIC_IN')",
            "            IN:'in'",
            "            NEWLINE:'\\n'))",
            "        (if_inner*",
            "          (if_null_block*",
            "            DUPLEX:'duplex'",
            "            AUTO:'auto'",
            "            NEWLINE:'\\n'))",
            "        (if_inner*",
            "          (if_speed_auto*",
            "            SPEED:'speed'",
            "            AUTO:'auto'",
            "            NEWLINE:'\\n')))))",
            "  (stanza*",
            "    (router_bgp_stanza",
            "      ROUTER:'router'",
            "      BGP:'bgp'",
            "      procnum = (bgp_asn*",
            "        asn = (uint32*",
            "          UINT16:'65001'))",
            "      NEWLINE:'\\n'",
            "      (router_bgp_stanza_tail*",
            "        (router_id_rb_stanza*",
            "          BGP:'bgp'",
            "          (router_id_bgp_tail",
            "            ROUTER_ID:'router-id'",
            "            routerid = IP_ADDRESS:'2.1.4.1'",
            "            NEWLINE:'\\n')))",
            "      (router_bgp_stanza_tail*",
            "        (bgp_rb_stanza*",
            "          BGP:'bgp'",
            "          (bgp_log_neighbor_changes_rb_stanza_null*",
            "            LOG_NEIGHBOR_CHANGES:'log-neighbor-changes'",
            "            (null_rest_of_line*",
            "              NEWLINE:'\\n'))))",
            "      (router_bgp_stanza_tail*",
            "        (peer_group_creation_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          name = VARIABLE:'as2'  <== mode:M_NEIGHBOR",
            "          PEER_GROUP:'peer-group'",
            "          NEWLINE:'\\n'  <== mode:M_NEIGHBOR))",
            "      (router_bgp_stanza_tail*",
            "        (neighbor_flat_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          peergroup = VARIABLE:'as2'  <== mode:M_NEIGHBOR",
            "          (remote_as_bgp_tail",
            "            REMOTE_AS:'remote-as'",
            "            remote = (bgp_asn*",
            "              asn = (uint32*",
            "                UINT8:'2'))",
            "            NEWLINE:'\\n')))",
            "      (router_bgp_stanza_tail*",
            "        (peer_group_assignment_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          address = IP_ADDRESS:'2.34.101.3'  <== mode:M_NEIGHBOR",
            "          PEER_GROUP:'peer-group'",
            "          name = (variable*",
            "            VARIABLE:'as2'  <== mode:M_NEIGHBOR)",
            "          NEWLINE:'\\n'))",
            "      (router_bgp_stanza_tail*",
            "        (peer_group_assignment_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          address = IP_ADDRESS:'2.34.201.3'  <== mode:M_NEIGHBOR",
            "          PEER_GROUP:'peer-group'",
            "          name = (variable*",
            "            VARIABLE:'as2'  <== mode:M_NEIGHBOR)",
            "          NEWLINE:'\\n'))",
            "      (router_bgp_stanza_tail*",
            "        (bgp_tail*",
            "          (maximum_paths_bgp_tail",
            "            MAXIMUM_PATHS:'maximum-paths'",
            "            paths = (dec*",
            "              UINT8:'5')",
            "            NEWLINE:'\\n')))",
            "      (router_bgp_stanza_tail*",
            "        (address_family_rb_stanza",
            "          (address_family_header",
            "            ADDRESS_FAMILY:'address-family'",
            "            af = (bgp_address_family*",
            "              IPV4:'ipv4')",
            "            NEWLINE:'\\n')",
            "          (address_family_inner*",
            "            (neighbor_flat_rb_stanza",
            "              NEIGHBOR:'neighbor'",
            "              peergroup = VARIABLE:'as2'  <== mode:M_NEIGHBOR",
            "              (bgp_tail*",
            "                (send_community_bgp_tail",
            "                  SEND_COMMUNITY:'send-community'",
            "                  NEWLINE:'\\n'))))",
            "          (address_family_inner*",
            "            (neighbor_flat_rb_stanza",
            "              NEIGHBOR:'neighbor'",
            "              peergroup = VARIABLE:'as2'  <== mode:M_NEIGHBOR",
            "              (bgp_tail*",
            "                (route_map_bgp_tail",
            "                  ROUTE_MAP:'route-map'",
            "                  name = (variable*",
            "                    VARIABLE:'as2_to_dept'  <== mode:M_RouteMap)",
            "                  IN:'in'",
            "                  NEWLINE:'\\n'))))",
            "          (address_family_inner*",
            "            (neighbor_flat_rb_stanza",
            "              NEIGHBOR:'neighbor'",
            "              peergroup = VARIABLE:'as2'  <== mode:M_NEIGHBOR",
            "              (bgp_tail*",
            "                (route_map_bgp_tail",
            "                  ROUTE_MAP:'route-map'",
            "                  name = (variable*",
            "                    VARIABLE:'dept_to_as2'  <== mode:M_RouteMap)",
            "                  OUT:'out'",
            "                  NEWLINE:'\\n'))))",
            "          (address_family_inner*",
            "            (neighbor_flat_rb_stanza",
            "              NEIGHBOR:'neighbor'",
            "              ip = IP_ADDRESS:'2.34.101.3'  <== mode:M_NEIGHBOR",
            "              (bgp_tail*",
            "                (activate_bgp_tail",
            "                  ACTIVATE:'activate'",
            "                  NEWLINE:'\\n'))))",
            "          (address_family_inner*",
            "            (neighbor_flat_rb_stanza",
            "              NEIGHBOR:'neighbor'",
            "              ip = IP_ADDRESS:'2.34.201.3'  <== mode:M_NEIGHBOR",
            "              (bgp_tail*",
            "                (activate_bgp_tail",
            "                  ACTIVATE:'activate'",
            "                  NEWLINE:'\\n'))))",
            "          (address_family_inner*",
            "            (bgp_tail*",
            "              (maximum_paths_bgp_tail",
            "                MAXIMUM_PATHS:'maximum-paths'",
            "                paths = (dec*",
            "                  UINT8:'5')",
            "                NEWLINE:'\\n')))",
            "          (address_family_inner*",
            "            (bgp_tail*",
            "              (null_bgp_tail*",
            "                NO:'no'",
            "                AUTO_SUMMARY:'auto-summary'",
            "                (null_rest_of_line*",
            "                  NEWLINE:'\\n'))))",
            "          (address_family_inner*",
            "            (bgp_tail*",
            "              (null_bgp_tail*",
            "                NO:'no'",
            "                SYNCHRONIZATION:'synchronization'",
            "                (null_rest_of_line*",
            "                  NEWLINE:'\\n'))))",
            "          (address_family_inner*",
            "            (bgp_tail*",
            "              (bgp_bgp_tail*",
            "                BGP:'bgp'",
            "                (bgp_dampening_bgp_tail_null*",
            "                  DAMPENING:'dampening'",
            "                  (null_rest_of_line*",
            "                    NEWLINE:'\\n')))))",
            "          (address_family_inner*",
            "            (bgp_tail*",
            "              (network_bgp_tail",
            "                NETWORK:'network'",
            "                ip = IP_ADDRESS:'2.128.0.0'",
            "                MASK:'mask'",
            "                mask = IP_ADDRESS:'255.255.0.0'",
            "                NEWLINE:'\\n')))",
            "          (address_family_footer*",
            "            EXIT_ADDRESS_FAMILY:'exit-address-family'",
            "            NEWLINE:'\\n')))))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        IP:'ip'",
            "        FORWARD_PROTOCOL:'forward-protocol'",
            "        ND:'nd'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        IP:'ip'",
            "        BGP_COMMUNITY:'bgp-community'",
            "        VARIABLE:'new-format'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (ip_community_list_expanded_stanza",
            "      IP:'ip'",
            "      COMMUNITY_LIST:'community-list'",
            "      EXPANDED:'expanded'",
            "      name = (variable*",
            "        VARIABLE:'as2_community')",
            "      (ip_community_list_expanded_tail",
            "        ala = (access_list_action*",
            "          PERMIT:'permit')",
            "        VARIABLE:'_2:'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        NO:'no'",
            "        IP:'ip'",
            "        HTTP:'http'",
            "        SERVER:'server'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        NO:'no'",
            "        IP:'ip'",
            "        HTTP:'http'",
            "        VARIABLE:'secure-server'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (extended_access_list_stanza",
            "      IP:'ip'",
            "      ACCESS_LIST:'access-list'",
            "      EXTENDED:'extended'",
            "      name = (variable_aclname*",
            "        VARIABLE:'RESTRICT_HOST_TRAFFIC_OUT')",
            "      NEWLINE:'\\n'",
            "      (extended_access_list_tail",
            "        ala = (access_list_action*",
            "          PERMIT:'permit')",
            "        prot = (protocol*",
            "          IP:'ip')",
            "        srcipr = (access_list_ip_range*",
            "          ANY:'any')",
            "        dstipr = (access_list_ip_range*",
            "          ip = IP_ADDRESS:'2.128.0.0'",
            "          wildcard = IP_ADDRESS:'0.0.255.255')",
            "        NEWLINE:'\\n')",
            "      (extended_access_list_tail",
            "        ala = (access_list_action*",
            "          DENY:'deny')",
            "        prot = (protocol*",
            "          IP:'ip')",
            "        srcipr = (access_list_ip_range*",
            "          ANY:'any')",
            "        dstipr = (access_list_ip_range*",
            "          ANY:'any')",
            "        NEWLINE:'\\n')",
            "      (extended_access_list_tail",
            "        ala = (access_list_action*",
            "          PERMIT:'permit')",
            "        prot = (protocol*",
            "          ICMP:'icmp')",
            "        srcipr = (access_list_ip_range*",
            "          ANY:'any')",
            "        dstipr = (access_list_ip_range*",
            "          ANY:'any')",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (extended_access_list_stanza",
            "      IP:'ip'",
            "      ACCESS_LIST:'access-list'",
            "      EXTENDED:'extended'",
            "      name = (variable_aclname*",
            "        VARIABLE:'RESTRICT_HOST_TRAFFIC_IN')",
            "      NEWLINE:'\\n'",
            "      (extended_access_list_tail",
            "        ala = (access_list_action*",
            "          PERMIT:'permit')",
            "        prot = (protocol*",
            "          IP:'ip')",
            "        srcipr = (access_list_ip_range*",
            "          ip = IP_ADDRESS:'2.128.0.0'",
            "          wildcard = IP_ADDRESS:'0.0.255.255')",
            "        dstipr = (access_list_ip_range*",
            "          ANY:'any')",
            "        NEWLINE:'\\n')",
            "      (extended_access_list_tail",
            "        ala = (access_list_action*",
            "          DENY:'deny')",
            "        prot = (protocol*",
            "          IP:'ip')",
            "        srcipr = (access_list_ip_range*",
            "          ANY:'any')",
            "        dstipr = (access_list_ip_range*",
            "          ANY:'any')",
            "        NEWLINE:'\\n')",
            "      (extended_access_list_tail",
            "        ala = (access_list_action*",
            "          PERMIT:'permit')",
            "        prot = (protocol*",
            "          ICMP:'icmp')",
            "        srcipr = (access_list_ip_range*",
            "          ANY:'any')",
            "        dstipr = (access_list_ip_range*",
            "          ANY:'any')",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (extended_access_list_stanza",
            "      ACCESS_LIST:'access-list'",
            "      num = ACL_NUM_EXTENDED:'102'",
            "      (extended_access_list_tail",
            "        ala = (access_list_action*",
            "          PERMIT:'permit')",
            "        prot = (protocol*",
            "          IP:'ip')",
            "        srcipr = (access_list_ip_range*",
            "          HOST:'host'",
            "          ip = IP_ADDRESS:'2.128.0.0')",
            "        dstipr = (access_list_ip_range*",
            "          HOST:'host'",
            "          ip = IP_ADDRESS:'255.255.0.0')",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (extended_access_list_stanza",
            "      ACCESS_LIST:'access-list'",
            "      num = ACL_NUM_EXTENDED:'105'",
            "      (extended_access_list_tail",
            "        ala = (access_list_action*",
            "          PERMIT:'permit')",
            "        prot = (protocol*",
            "          IP:'ip')",
            "        srcipr = (access_list_ip_range*",
            "          HOST:'host'",
            "          ip = IP_ADDRESS:'1.0.1.0')",
            "        dstipr = (access_list_ip_range*",
            "          HOST:'host'",
            "          ip = IP_ADDRESS:'255.255.255.0')",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (extended_access_list_stanza",
            "      ACCESS_LIST:'access-list'",
            "      num = ACL_NUM_EXTENDED:'105'",
            "      (extended_access_list_tail",
            "        ala = (access_list_action*",
            "          PERMIT:'permit')",
            "        prot = (protocol*",
            "          IP:'ip')",
            "        srcipr = (access_list_ip_range*",
            "          HOST:'host'",
            "          ip = IP_ADDRESS:'1.0.2.0')",
            "        dstipr = (access_list_ip_range*",
            "          HOST:'host'",
            "          ip = IP_ADDRESS:'255.255.255.0')",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (extended_access_list_stanza",
            "      ACCESS_LIST:'access-list'",
            "      num = ACL_NUM_EXTENDED:'105'",
            "      (extended_access_list_tail",
            "        ala = (access_list_action*",
            "          PERMIT:'permit')",
            "        prot = (protocol*",
            "          IP:'ip')",
            "        srcipr = (access_list_ip_range*",
            "          HOST:'host'",
            "          ip = IP_ADDRESS:'3.0.1.0')",
            "        dstipr = (access_list_ip_range*",
            "          HOST:'host'",
            "          ip = IP_ADDRESS:'255.255.255.0')",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (extended_access_list_stanza",
            "      ACCESS_LIST:'access-list'",
            "      num = ACL_NUM_EXTENDED:'105'",
            "      (extended_access_list_tail",
            "        ala = (access_list_action*",
            "          PERMIT:'permit')",
            "        prot = (protocol*",
            "          IP:'ip')",
            "        srcipr = (access_list_ip_range*",
            "          HOST:'host'",
            "          ip = IP_ADDRESS:'3.0.2.0')",
            "        dstipr = (access_list_ip_range*",
            "          HOST:'host'",
            "          ip = IP_ADDRESS:'255.255.255.0')",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (route_map_stanza",
            "      ROUTE_MAP:'route-map'",
            "      name = (variable*",
            "        VARIABLE:'dept_to_as2'  <== mode:M_RouteMap)",
            "      rmt = (access_list_action*",
            "        PERMIT:'permit')",
            "      num = (dec*",
            "        UINT8:'100')",
            "      NEWLINE:'\\n'",
            "      (rm_stanza*",
            "        (match_rm_stanza*",
            "          MATCH:'match'",
            "          (match_ip_access_list_rm_stanza",
            "            IP:'ip'",
            "            ADDRESS:'address'",
            "            (variable_access_list*",
            "              UINT8:'102')",
            "            NEWLINE:'\\n')))",
            "      (rm_stanza*",
            "        (set_rm_stanza*",
            "          (set_metric_rm_stanza",
            "            SET:'set'",
            "            METRIC:'metric'",
            "            metric = (int_expr*",
            "              (dec*",
            "                UINT8:'50'))",
            "            NEWLINE:'\\n')))",
            "      (rm_stanza*",
            "        (set_rm_stanza*",
            "          (set_community_additive_rm_stanza",
            "            SET:'set'",
            "            COMMUNITY:'community'",
            "            (community*",
            "              STANDARD_COMMUNITY:'65001:2')",
            "            ADDITIVE:'additive'",
            "            NEWLINE:'\\n')))))",
            "  (stanza*",
            "    (route_map_stanza",
            "      ROUTE_MAP:'route-map'",
            "      name = (variable*",
            "        VARIABLE:'as2_to_dept'  <== mode:M_RouteMap)",
            "      rmt = (access_list_action*",
            "        PERMIT:'permit')",
            "      num = (dec*",
            "        UINT8:'100')",
            "      NEWLINE:'\\n'",
            "      (rm_stanza*",
            "        (match_rm_stanza*",
            "          MATCH:'match'",
            "          (match_community_list_rm_stanza",
            "            COMMUNITY:'community'",
            "            (variable*",
            "              VARIABLE:'as2_community')",
            "            NEWLINE:'\\n')))",
            "      (rm_stanza*",
            "        (set_rm_stanza*",
            "          (set_local_preference_rm_stanza",
            "            SET:'set'",
            "            LOCAL_PREFERENCE:'local-preference'",
            "            pref = (int_expr*",
            "              (dec*",
            "                UINT16:'350'))",
            "            NEWLINE:'\\n')))))",
            "  (stanza*",
            "    (s_control_plane*",
            "      CONTROL_PLANE:'control-plane'",
            "      NEWLINE:'\\n'))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        MGCP:'mgcp'",
            "        VARIABLE:'behavior'",
            "        VARIABLE:'g729-variants'",
            "        VARIABLE:'static-pt'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_gatekeeper*",
            "      GATEKEEPER:'gatekeeper'",
            "      NEWLINE:'\\n'",
            "      (gk_null*",
            "        SHUTDOWN:'shutdown'",
            "        (null_rest_of_line*",
            "          NEWLINE:'\\n'))))",
            "  (stanza*",
            "    (s_line",
            "      LINE:'line'",
            "      (line_type*",
            "        CON:'con')",
            "      first = (dec*",
            "        UINT8:'0')",
            "      NEWLINE:'\\n'",
            "      (l_exec_timeout",
            "        EXEC_TIMEOUT:'exec-timeout'",
            "        minutes = (dec*",
            "          UINT8:'0')",
            "        seconds = (dec*",
            "          UINT8:'0')",
            "        NEWLINE:'\\n')",
            "      (l_null*",
            "        PRIVILEGE:'privilege'",
            "        (null_rest_of_line*",
            "          LEVEL:'level'",
            "          UINT8:'15'",
            "          NEWLINE:'\\n'))",
            "      (l_null*",
            "        LOGGING:'logging'",
            "        (null_rest_of_line*",
            "          SYNCHRONOUS:'synchronous'",
            "          NEWLINE:'\\n'))))",
            "  (stanza*",
            "    (s_line",
            "      LINE:'line'",
            "      (line_type*",
            "        AUX:'aux')",
            "      first = (dec*",
            "        UINT8:'0')",
            "      NEWLINE:'\\n'",
            "      (l_exec_timeout",
            "        EXEC_TIMEOUT:'exec-timeout'",
            "        minutes = (dec*",
            "          UINT8:'0')",
            "        seconds = (dec*",
            "          UINT8:'0')",
            "        NEWLINE:'\\n')",
            "      (l_null*",
            "        PRIVILEGE:'privilege'",
            "        (null_rest_of_line*",
            "          LEVEL:'level'",
            "          UINT8:'15'",
            "          NEWLINE:'\\n'))",
            "      (l_null*",
            "        LOGGING:'logging'",
            "        (null_rest_of_line*",
            "          SYNCHRONOUS:'synchronous'",
            "          NEWLINE:'\\n'))))",
            "  (stanza*",
            "    (s_line",
            "      LINE:'line'",
            "      (line_type*",
            "        VTY:'vty')",
            "      first = (dec*",
            "        UINT8:'0')",
            "      last = (dec*",
            "        UINT8:'4')",
            "      NEWLINE:'\\n'))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        END:'end'",
            "        NEWLINE:'\\n\\n')))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/as2dist1.cfg" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        VERSION:'version'",
            "        FLOAT:'12.4'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_service",
            "      SERVICE:'service'",
            "      (variable*",
            "        VARIABLE:'timestamps')",
            "      (variable*",
            "        DEBUG:'debug')",
            "      (variable*",
            "        VARIABLE:'datetime')",
            "      (variable*",
            "        MSEC:'msec')",
            "      NEWLINE:'\\n'))",
            "  (stanza*",
            "    (s_service",
            "      SERVICE:'service'",
            "      (variable*",
            "        VARIABLE:'timestamps')",
            "      (variable*",
            "        LOG:'log')",
            "      (variable*",
            "        VARIABLE:'datetime')",
            "      (variable*",
            "        MSEC:'msec')",
            "      NEWLINE:'\\n'))",
            "  (stanza*",
            "    (s_service",
            "      NO:'no'",
            "      SERVICE:'service'",
            "      (variable*",
            "        VARIABLE:'password-encryption')",
            "      NEWLINE:'\\n'))",
            "  (stanza*",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'as2dist1'",
            "      NEWLINE:'\\n'))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        BOOT_START_MARKER:'boot-start-marker'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        BOOT_END_MARKER:'boot-end-marker'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_aaa",
            "      NO:'no'",
            "      AAA:'aaa'",
            "      (aaa_new_model",
            "        NEW_MODEL:'new-model'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        MEMORY_SIZE:'memory-size'",
            "        VARIABLE:'iomem'",
            "        UINT8:'5'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        IP:'ip'",
            "        CEF:'cef'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_ip_domain",
            "      NO:'no'",
            "      IP:'ip'",
            "      DOMAIN:'domain'",
            "      (ip_domain_lookup",
            "        LOOKUP:'lookup'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_ip_domain",
            "      IP:'ip'",
            "      DOMAIN:'domain'",
            "      (ip_domain_name",
            "        NAME:'name'",
            "        hostname = (variable_hostname*",
            "          VARIABLE:'lab.local'  <== mode:M_Name)",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        IP:'ip'",
            "        AUTH_PROXY:'auth-proxy'",
            "        VARIABLE:'max-nodata-conns'",
            "        UINT8:'3'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        IP:'ip'",
            "        ADMISSION:'admission'",
            "        VARIABLE:'max-nodata-conns'",
            "        UINT8:'3'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_interface*",
            "      INTERFACE:'interface'",
            "      (s_interface_definition",
            "        iname = (interface_name*",
            "          name_prefix_alpha = M_Interface_PREFIX:'Loopback'  <== mode:M_Interface",
            "          (range*",
            "            (subrange*",
            "              low = (dec*",
            "                DEC:'0'  <== mode:M_Interface))))",
            "        NEWLINE:'\\n'  <== mode:M_Interface",
            "        (if_inner*",
            "          (if_ip_address",
            "            IP:'ip'",
            "            ADDRESS:'address'",
            "            ip = IP_ADDRESS:'2.1.3.1'",
            "            subnet = IP_ADDRESS:'255.255.255.255'",
            "            NEWLINE:'\\n')))))",
            "  (stanza*",
            "    (s_interface*",
            "      INTERFACE:'interface'",
            "      (s_interface_definition",
            "        iname = (interface_name*",
            "          name_prefix_alpha = M_Interface_PREFIX:'FastEthernet'  <== mode:M_Interface",
            "          DEC:'0'  <== mode:M_Interface",
            "          FORWARD_SLASH:'/'  <== mode:M_Interface",
            "          (range*",
            "            (subrange*",
            "              low = (dec*",
            "                DEC:'0'  <== mode:M_Interface))))",
            "        NEWLINE:'\\n'  <== mode:M_Interface",
            "        (if_inner*",
            "          (if_ip_address",
            "            IP:'ip'",
            "            ADDRESS:'address'",
            "            ip = IP_ADDRESS:'2.23.21.3'",
            "            subnet = IP_ADDRESS:'255.255.255.0'",
            "            NEWLINE:'\\n'))",
            "        (if_inner*",
            "          (if_null_block*",
            "            DUPLEX:'duplex'",
            "            AUTO:'auto'",
            "            NEWLINE:'\\n'))",
            "        (if_inner*",
            "          (if_speed_auto*",
            "            SPEED:'speed'",
            "            AUTO:'auto'",
            "            NEWLINE:'\\n')))))",
            "  (stanza*",
            "    (s_interface*",
            "      INTERFACE:'interface'",
            "      (s_interface_definition",
            "        iname = (interface_name*",
            "          name_prefix_alpha = M_Interface_PREFIX:'FastEthernet'  <== mode:M_Interface",
            "          DEC:'0'  <== mode:M_Interface",
            "          FORWARD_SLASH:'/'  <== mode:M_Interface",
            "          (range*",
            "            (subrange*",
            "              low = (dec*",
            "                DEC:'1'  <== mode:M_Interface))))",
            "        NEWLINE:'\\n'  <== mode:M_Interface",
            "        (if_inner*",
            "          (if_ip_address",
            "            IP:'ip'",
            "            ADDRESS:'address'",
            "            ip = IP_ADDRESS:'2.23.11.3'",
            "            subnet = IP_ADDRESS:'255.255.255.0'",
            "            NEWLINE:'\\n'))",
            "        (if_inner*",
            "          (if_null_block*",
            "            DUPLEX:'duplex'",
            "            AUTO:'auto'",
            "            NEWLINE:'\\n'))",
            "        (if_inner*",
            "          (if_speed_auto*",
            "            SPEED:'speed'",
            "            AUTO:'auto'",
            "            NEWLINE:'\\n')))))",
            "  (stanza*",
            "    (s_interface*",
            "      INTERFACE:'interface'",
            "      (s_interface_definition",
            "        iname = (interface_name*",
            "          name_prefix_alpha = M_Interface_PREFIX:'FastEthernet'  <== mode:M_Interface",
            "          DEC:'1'  <== mode:M_Interface",
            "          FORWARD_SLASH:'/'  <== mode:M_Interface",
            "          (range*",
            "            (subrange*",
            "              low = (dec*",
            "                DEC:'0'  <== mode:M_Interface))))",
            "        NEWLINE:'\\n'  <== mode:M_Interface",
            "        (if_inner*",
            "          (if_ip_address",
            "            IP:'ip'",
            "            ADDRESS:'address'",
            "            ip = IP_ADDRESS:'2.34.101.3'",
            "            subnet = IP_ADDRESS:'255.255.255.0'",
            "            NEWLINE:'\\n'))",
            "        (if_inner*",
            "          (if_null_block*",
            "            DUPLEX:'duplex'",
            "            AUTO:'auto'",
            "            NEWLINE:'\\n'))",
            "        (if_inner*",
            "          (if_speed_auto*",
            "            SPEED:'speed'",
            "            AUTO:'auto'",
            "            NEWLINE:'\\n')))))",
            "  (stanza*",
            "    (s_router_ospf",
            "      ROUTER:'router'",
            "      OSPF:'ospf'",
            "      name = (variable*",
            "        UINT8:'1')",
            "      NEWLINE:'\\n'",
            "      (ro_inner*",
            "        (ro_router_id",
            "          ROUTER_ID:'router-id'",
            "          ip = IP_ADDRESS:'2.1.3.1'",
            "          NEWLINE:'\\n'))",
            "      (ro_inner*",
            "        (ro_common*",
            "          (ro_null*",
            "            LOG_ADJACENCY_CHANGES:'log-adjacency-changes'",
            "            (null_rest_of_line*",
            "              NEWLINE:'\\n'))))",
            "      (ro_inner*",
            "        (ro_redistribute_connected",
            "          REDISTRIBUTE:'redistribute'",
            "          CONNECTED:'connected'",
            "          subnets = SUBNETS:'subnets'",
            "          NEWLINE:'\\n'))",
            "      (ro_inner*",
            "        (ro_network",
            "          NETWORK:'network'",
            "          ip = IP_ADDRESS:'2.1.0.0'",
            "          wildcard = IP_ADDRESS:'0.0.255.255'",
            "          AREA:'area'",
            "          area_int = (dec*",
            "            UINT8:'1')",
            "          NEWLINE:'\\n'))",
            "      (ro_inner*",
            "        (ro_network",
            "          NETWORK:'network'",
            "          ip = IP_ADDRESS:'2.23.0.0'",
            "          wildcard = IP_ADDRESS:'0.0.255.255'",
            "          AREA:'area'",
            "          area_int = (dec*",
            "            UINT8:'1')",
            "          NEWLINE:'\\n'))))",
            "  (stanza*",
            "    (router_bgp_stanza",
            "      ROUTER:'router'",
            "      BGP:'bgp'",
            "      procnum = (bgp_asn*",
            "        asn = (uint32*",
            "          UINT8:'2'))",
            "      NEWLINE:'\\n'",
            "      (router_bgp_stanza_tail*",
            "        (router_id_rb_stanza*",
            "          BGP:'bgp'",
            "          (router_id_bgp_tail",
            "            ROUTER_ID:'router-id'",
            "            routerid = IP_ADDRESS:'2.1.3.1'",
            "            NEWLINE:'\\n')))",
            "      (router_bgp_stanza_tail*",
            "        (bgp_rb_stanza*",
            "          BGP:'bgp'",
            "          (bgp_log_neighbor_changes_rb_stanza_null*",
            "            LOG_NEIGHBOR_CHANGES:'log-neighbor-changes'",
            "            (null_rest_of_line*",
            "              NEWLINE:'\\n'))))",
            "      (router_bgp_stanza_tail*",
            "        (peer_group_creation_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          name = VARIABLE:'as2'  <== mode:M_NEIGHBOR",
            "          PEER_GROUP:'peer-group'",
            "          NEWLINE:'\\n'  <== mode:M_NEIGHBOR))",
            "      (router_bgp_stanza_tail*",
            "        (neighbor_flat_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          peergroup = VARIABLE:'as2'  <== mode:M_NEIGHBOR",
            "          (remote_as_bgp_tail",
            "            REMOTE_AS:'remote-as'",
            "            remote = (bgp_asn*",
            "              asn = (uint32*",
            "                UINT8:'2'))",
            "            NEWLINE:'\\n')))",
            "      (router_bgp_stanza_tail*",
            "        (peer_group_creation_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          name = VARIABLE:'dept'  <== mode:M_NEIGHBOR",
            "          PEER_GROUP:'peer-group'",
            "          NEWLINE:'\\n'  <== mode:M_NEIGHBOR))",
            "      (router_bgp_stanza_tail*",
            "        (neighbor_flat_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          peergroup = VARIABLE:'dept'  <== mode:M_NEIGHBOR",
            "          (remote_as_bgp_tail",
            "            REMOTE_AS:'remote-as'",
            "            remote = (bgp_asn*",
            "              asn = (uint32*",
            "                UINT16:'65001'))",
            "            NEWLINE:'\\n')))",
            "      (router_bgp_stanza_tail*",
            "        (peer_group_assignment_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          address = IP_ADDRESS:'2.1.2.1'  <== mode:M_NEIGHBOR",
            "          PEER_GROUP:'peer-group'",
            "          name = (variable*",
            "            VARIABLE:'as2'  <== mode:M_NEIGHBOR)",
            "          NEWLINE:'\\n'))",
            "      (router_bgp_stanza_tail*",
            "        (neighbor_flat_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          ip = IP_ADDRESS:'2.1.2.1'  <== mode:M_NEIGHBOR",
            "          (bgp_tail*",
            "            (update_source_bgp_tail",
            "              UPDATE_SOURCE:'update-source'",
            "              source = (interface_name*",
            "                name_prefix_alpha = M_Interface_PREFIX:'Loopback'  <== mode:M_Interface",
            "                (range*",
            "                  (subrange*",
            "                    low = (dec*",
            "                      DEC:'0'  <== mode:M_Interface))))",
            "              NEWLINE:'\\n'  <== mode:M_Interface))))",
            "      (router_bgp_stanza_tail*",
            "        (peer_group_assignment_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          address = IP_ADDRESS:'2.1.2.2'  <== mode:M_NEIGHBOR",
            "          PEER_GROUP:'peer-group'",
            "          name = (variable*",
            "            VARIABLE:'as2'  <== mode:M_NEIGHBOR)",
            "          NEWLINE:'\\n'))",
            "      (router_bgp_stanza_tail*",
            "        (neighbor_flat_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          ip = IP_ADDRESS:'2.1.2.2'  <== mode:M_NEIGHBOR",
            "          (bgp_tail*",
            "            (update_source_bgp_tail",
            "              UPDATE_SOURCE:'update-source'",
            "              source = (interface_name*",
            "                name_prefix_alpha = M_Interface_PREFIX:'Loopback'  <== mode:M_Interface",
            "                (range*",
            "                  (subrange*",
            "                    low = (dec*",
            "                      DEC:'0'  <== mode:M_Interface))))",
            "              NEWLINE:'\\n'  <== mode:M_Interface))))",
            "      (router_bgp_stanza_tail*",
            "        (peer_group_assignment_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          address = IP_ADDRESS:'2.34.101.4'  <== mode:M_NEIGHBOR",
            "          PEER_GROUP:'peer-group'",
            "          name = (variable*",
            "            VARIABLE:'dept'  <== mode:M_NEIGHBOR)",
            "          NEWLINE:'\\n'))",
            "      (router_bgp_stanza_tail*",
            "        (bgp_tail*",
            "          (maximum_paths_bgp_tail",
            "            MAXIMUM_PATHS:'maximum-paths'",
            "            paths = (dec*",
            "              UINT8:'5')",
            "            NEWLINE:'\\n')))",
            "      (router_bgp_stanza_tail*",
            "        (address_family_rb_stanza",
            "          (address_family_header",
            "            ADDRESS_FAMILY:'address-family'",
            "            af = (bgp_address_family*",
            "              IPV4:'ipv4')",
            "            NEWLINE:'\\n')",
            "          (address_family_inner*",
            "            (neighbor_flat_rb_stanza",
            "              NEIGHBOR:'neighbor'",
            "              peergroup = VARIABLE:'as2'  <== mode:M_NEIGHBOR",
            "              (bgp_tail*",
            "                (send_community_bgp_tail",
            "                  SEND_COMMUNITY:'send-community'",
            "                  NEWLINE:'\\n'))))",
            "          (address_family_inner*",
            "            (neighbor_flat_rb_stanza",
            "              NEIGHBOR:'neighbor'",
            "              peergroup = VARIABLE:'dept'  <== mode:M_NEIGHBOR",
            "              (bgp_tail*",
            "                (send_community_bgp_tail",
            "                  SEND_COMMUNITY:'send-community'",
            "                  NEWLINE:'\\n'))))",
            "          (address_family_inner*",
            "            (neighbor_flat_rb_stanza",
            "              NEIGHBOR:'neighbor'",
            "              peergroup = VARIABLE:'dept'  <== mode:M_NEIGHBOR",
            "              (bgp_tail*",
            "                (route_map_bgp_tail",
            "                  ROUTE_MAP:'route-map'",
            "                  name = (variable*",
            "                    VARIABLE:'as2_to_dept'  <== mode:M_RouteMap)",
            "                  OUT:'out'",
            "                  NEWLINE:'\\n'))))",
            "          (address_family_inner*",
            "            (neighbor_flat_rb_stanza",
            "              NEIGHBOR:'neighbor'",
            "              peergroup = VARIABLE:'dept'  <== mode:M_NEIGHBOR",
            "              (bgp_tail*",
            "                (route_map_bgp_tail",
            "                  ROUTE_MAP:'route-map'",
            "                  name = (variable*",
            "                    VARIABLE:'dept_to_as2'  <== mode:M_RouteMap)",
            "                  IN:'in'",
            "                  NEWLINE:'\\n'))))",
            "          (address_family_inner*",
            "            (neighbor_flat_rb_stanza",
            "              NEIGHBOR:'neighbor'",
            "              ip = IP_ADDRESS:'2.1.2.1'  <== mode:M_NEIGHBOR",
            "              (bgp_tail*",
            "                (activate_bgp_tail",
            "                  ACTIVATE:'activate'",
            "                  NEWLINE:'\\n'))))",
            "          (address_family_inner*",
            "            (neighbor_flat_rb_stanza",
            "              NEIGHBOR:'neighbor'",
            "              ip = IP_ADDRESS:'2.1.2.2'  <== mode:M_NEIGHBOR",
            "              (bgp_tail*",
            "                (activate_bgp_tail",
            "                  ACTIVATE:'activate'",
            "                  NEWLINE:'\\n'))))",
            "          (address_family_inner*",
            "            (neighbor_flat_rb_stanza",
            "              NEIGHBOR:'neighbor'",
            "              ip = IP_ADDRESS:'2.34.101.4'  <== mode:M_NEIGHBOR",
            "              (bgp_tail*",
            "                (activate_bgp_tail",
            "                  ACTIVATE:'activate'",
            "                  NEWLINE:'\\n'))))",
            "          (address_family_inner*",
            "            (bgp_tail*",
            "              (maximum_paths_bgp_tail",
            "                MAXIMUM_PATHS:'maximum-paths'",
            "                paths = (dec*",
            "                  UINT8:'5')",
            "                NEWLINE:'\\n')))",
            "          (address_family_inner*",
            "            (bgp_tail*",
            "              (null_bgp_tail*",
            "                NO:'no'",
            "                AUTO_SUMMARY:'auto-summary'",
            "                (null_rest_of_line*",
            "                  NEWLINE:'\\n'))))",
            "          (address_family_inner*",
            "            (bgp_tail*",
            "              (null_bgp_tail*",
            "                NO:'no'",
            "                SYNCHRONIZATION:'synchronization'",
            "                (null_rest_of_line*",
            "                  NEWLINE:'\\n'))))",
            "          (address_family_inner*",
            "            (bgp_tail*",
            "              (bgp_bgp_tail*",
            "                BGP:'bgp'",
            "                (bgp_dampening_bgp_tail_null*",
            "                  DAMPENING:'dampening'",
            "                  (null_rest_of_line*",
            "                    NEWLINE:'\\n')))))",
            "          (address_family_footer*",
            "            EXIT_ADDRESS_FAMILY:'exit-address-family'",
            "            NEWLINE:'\\n')))))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        IP:'ip'",
            "        FORWARD_PROTOCOL:'forward-protocol'",
            "        ND:'nd'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        IP:'ip'",
            "        BGP_COMMUNITY:'bgp-community'",
            "        VARIABLE:'new-format'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (ip_community_list_expanded_stanza",
            "      IP:'ip'",
            "      COMMUNITY_LIST:'community-list'",
            "      EXPANDED:'expanded'",
            "      name = (variable*",
            "        VARIABLE:'dept_community')",
            "      (ip_community_list_expanded_tail",
            "        ala = (access_list_action*",
            "          PERMIT:'permit')",
            "        VARIABLE:'_65001:'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        NO:'no'",
            "        IP:'ip'",
            "        HTTP:'http'",
            "        SERVER:'server'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        NO:'no'",
            "        IP:'ip'",
            "        HTTP:'http'",
            "        VARIABLE:'secure-server'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (extended_access_list_stanza",
            "      ACCESS_LIST:'access-list'",
            "      num = ACL_NUM_EXTENDED:'102'",
            "      (extended_access_list_tail",
            "        ala = (access_list_action*",
            "          PERMIT:'permit')",
            "        prot = (protocol*",
            "          IP:'ip')",
            "        srcipr = (access_list_ip_range*",
            "          HOST:'host'",
            "          ip = IP_ADDRESS:'2.128.0.0')",
            "        dstipr = (access_list_ip_range*",
            "          HOST:'host'",
            "          ip = IP_ADDRESS:'255.255.0.0')",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (extended_access_list_stanza",
            "      ACCESS_LIST:'access-list'",
            "      num = ACL_NUM_EXTENDED:'105'",
            "      (extended_access_list_tail",
            "        ala = (access_list_action*",
            "          PERMIT:'permit')",
            "        prot = (protocol*",
            "          IP:'ip')",
            "        srcipr = (access_list_ip_range*",
            "          HOST:'host'",
            "          ip = IP_ADDRESS:'1.0.1.0')",
            "        dstipr = (access_list_ip_range*",
            "          HOST:'host'",
            "          ip = IP_ADDRESS:'255.255.255.0')",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (extended_access_list_stanza",
            "      ACCESS_LIST:'access-list'",
            "      num = ACL_NUM_EXTENDED:'105'",
            "      (extended_access_list_tail",
            "        ala = (access_list_action*",
            "          PERMIT:'permit')",
            "        prot = (protocol*",
            "          IP:'ip')",
            "        srcipr = (access_list_ip_range*",
            "          HOST:'host'",
            "          ip = IP_ADDRESS:'1.0.2.0')",
            "        dstipr = (access_list_ip_range*",
            "          HOST:'host'",
            "          ip = IP_ADDRESS:'255.255.255.0')",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (extended_access_list_stanza",
            "      ACCESS_LIST:'access-list'",
            "      num = ACL_NUM_EXTENDED:'105'",
            "      (extended_access_list_tail",
            "        ala = (access_list_action*",
            "          PERMIT:'permit')",
            "        prot = (protocol*",
            "          IP:'ip')",
            "        srcipr = (access_list_ip_range*",
            "          HOST:'host'",
            "          ip = IP_ADDRESS:'3.0.1.0')",
            "        dstipr = (access_list_ip_range*",
            "          HOST:'host'",
            "          ip = IP_ADDRESS:'255.255.255.0')",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (extended_access_list_stanza",
            "      ACCESS_LIST:'access-list'",
            "      num = ACL_NUM_EXTENDED:'105'",
            "      (extended_access_list_tail",
            "        ala = (access_list_action*",
            "          PERMIT:'permit')",
            "        prot = (protocol*",
            "          IP:'ip')",
            "        srcipr = (access_list_ip_range*",
            "          HOST:'host'",
            "          ip = IP_ADDRESS:'3.0.2.0')",
            "        dstipr = (access_list_ip_range*",
            "          HOST:'host'",
            "          ip = IP_ADDRESS:'255.255.255.0')",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (route_map_stanza",
            "      ROUTE_MAP:'route-map'",
            "      name = (variable*",
            "        VARIABLE:'as2_to_dept'  <== mode:M_RouteMap)",
            "      rmt = (access_list_action*",
            "        PERMIT:'permit')",
            "      num = (dec*",
            "        UINT8:'100')",
            "      NEWLINE:'\\n'",
            "      (rm_stanza*",
            "        (match_rm_stanza*",
            "          MATCH:'match'",
            "          (match_ip_access_list_rm_stanza",
            "            IP:'ip'",
            "            ADDRESS:'address'",
            "            (variable_access_list*",
            "              UINT8:'105')",
            "            NEWLINE:'\\n')))",
            "      (rm_stanza*",
            "        (set_rm_stanza*",
            "          (set_metric_rm_stanza",
            "            SET:'set'",
            "            METRIC:'metric'",
            "            metric = (int_expr*",
            "              (dec*",
            "                UINT8:'50'))",
            "            NEWLINE:'\\n')))",
            "      (rm_stanza*",
            "        (set_rm_stanza*",
            "          (set_community_additive_rm_stanza",
            "            SET:'set'",
            "            COMMUNITY:'community'",
            "            (community*",
            "              STANDARD_COMMUNITY:'2:65001')",
            "            ADDITIVE:'additive'",
            "            NEWLINE:'\\n')))))",
            "  (stanza*",
            "    (route_map_stanza",
            "      ROUTE_MAP:'route-map'",
            "      name = (variable*",
            "        VARIABLE:'dept_to_as2'  <== mode:M_RouteMap)",
            "      rmt = (access_list_action*",
            "        PERMIT:'permit')",
            "      num = (dec*",
            "        UINT8:'100')",
            "      NEWLINE:'\\n'",
            "      (rm_stanza*",
            "        (match_rm_stanza*",
            "          MATCH:'match'",
            "          (match_community_list_rm_stanza",
            "            COMMUNITY:'community'",
            "            (variable*",
            "              VARIABLE:'dept_community')",
            "            NEWLINE:'\\n')))",
            "      (rm_stanza*",
            "        (set_rm_stanza*",
            "          (set_local_preference_rm_stanza",
            "            SET:'set'",
            "            LOCAL_PREFERENCE:'local-preference'",
            "            pref = (int_expr*",
            "              (dec*",
            "                UINT16:'350'))",
            "            NEWLINE:'\\n')))))",
            "  (stanza*",
            "    (s_control_plane*",
            "      CONTROL_PLANE:'control-plane'",
            "      NEWLINE:'\\n'))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        MGCP:'mgcp'",
            "        VARIABLE:'behavior'",
            "        VARIABLE:'g729-variants'",
            "        VARIABLE:'static-pt'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_gatekeeper*",
            "      GATEKEEPER:'gatekeeper'",
            "      NEWLINE:'\\n'",
            "      (gk_null*",
            "        SHUTDOWN:'shutdown'",
            "        (null_rest_of_line*",
            "          NEWLINE:'\\n'))))",
            "  (stanza*",
            "    (s_line",
            "      LINE:'line'",
            "      (line_type*",
            "        CON:'con')",
            "      first = (dec*",
            "        UINT8:'0')",
            "      NEWLINE:'\\n'",
            "      (l_exec_timeout",
            "        EXEC_TIMEOUT:'exec-timeout'",
            "        minutes = (dec*",
            "          UINT8:'0')",
            "        seconds = (dec*",
            "          UINT8:'0')",
            "        NEWLINE:'\\n')",
            "      (l_null*",
            "        PRIVILEGE:'privilege'",
            "        (null_rest_of_line*",
            "          LEVEL:'level'",
            "          UINT8:'15'",
            "          NEWLINE:'\\n'))",
            "      (l_null*",
            "        LOGGING:'logging'",
            "        (null_rest_of_line*",
            "          SYNCHRONOUS:'synchronous'",
            "          NEWLINE:'\\n'))))",
            "  (stanza*",
            "    (s_line",
            "      LINE:'line'",
            "      (line_type*",
            "        AUX:'aux')",
            "      first = (dec*",
            "        UINT8:'0')",
            "      NEWLINE:'\\n'",
            "      (l_exec_timeout",
            "        EXEC_TIMEOUT:'exec-timeout'",
            "        minutes = (dec*",
            "          UINT8:'0')",
            "        seconds = (dec*",
            "          UINT8:'0')",
            "        NEWLINE:'\\n')",
            "      (l_null*",
            "        PRIVILEGE:'privilege'",
            "        (null_rest_of_line*",
            "          LEVEL:'level'",
            "          UINT8:'15'",
            "          NEWLINE:'\\n'))",
            "      (l_null*",
            "        LOGGING:'logging'",
            "        (null_rest_of_line*",
            "          SYNCHRONOUS:'synchronous'",
            "          NEWLINE:'\\n'))))",
            "  (stanza*",
            "    (s_line",
            "      LINE:'line'",
            "      (line_type*",
            "        VTY:'vty')",
            "      first = (dec*",
            "        UINT8:'0')",
            "      last = (dec*",
            "        UINT8:'4')",
            "      NEWLINE:'\\n'))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        END:'end'",
            "        NEWLINE:'\\n\\n')))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/as2dist2.cfg" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        VERSION:'version'",
            "        FLOAT:'12.4'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_service",
            "      SERVICE:'service'",
            "      (variable*",
            "        VARIABLE:'timestamps')",
            "      (variable*",
            "        DEBUG:'debug')",
            "      (variable*",
            "        VARIABLE:'datetime')",
            "      (variable*",
            "        MSEC:'msec')",
            "      NEWLINE:'\\n'))",
            "  (stanza*",
            "    (s_service",
            "      SERVICE:'service'",
            "      (variable*",
            "        VARIABLE:'timestamps')",
            "      (variable*",
            "        LOG:'log')",
            "      (variable*",
            "        VARIABLE:'datetime')",
            "      (variable*",
            "        MSEC:'msec')",
            "      NEWLINE:'\\n'))",
            "  (stanza*",
            "    (s_service",
            "      NO:'no'",
            "      SERVICE:'service'",
            "      (variable*",
            "        VARIABLE:'password-encryption')",
            "      NEWLINE:'\\n'))",
            "  (stanza*",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'as2dist2'",
            "      NEWLINE:'\\n'))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        BOOT_START_MARKER:'boot-start-marker'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        BOOT_END_MARKER:'boot-end-marker'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_aaa",
            "      NO:'no'",
            "      AAA:'aaa'",
            "      (aaa_new_model",
            "        NEW_MODEL:'new-model'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        MEMORY_SIZE:'memory-size'",
            "        VARIABLE:'iomem'",
            "        UINT8:'5'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        IP:'ip'",
            "        CEF:'cef'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_ip_domain",
            "      NO:'no'",
            "      IP:'ip'",
            "      DOMAIN:'domain'",
            "      (ip_domain_lookup",
            "        LOOKUP:'lookup'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_ip_domain",
            "      IP:'ip'",
            "      DOMAIN:'domain'",
            "      (ip_domain_name",
            "        NAME:'name'",
            "        hostname = (variable_hostname*",
            "          VARIABLE:'lab.local'  <== mode:M_Name)",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        IP:'ip'",
            "        AUTH_PROXY:'auth-proxy'",
            "        VARIABLE:'max-nodata-conns'",
            "        UINT8:'3'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        IP:'ip'",
            "        ADMISSION:'admission'",
            "        VARIABLE:'max-nodata-conns'",
            "        UINT8:'3'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_interface*",
            "      INTERFACE:'interface'",
            "      (s_interface_definition",
            "        iname = (interface_name*",
            "          name_prefix_alpha = M_Interface_PREFIX:'Loopback'  <== mode:M_Interface",
            "          (range*",
            "            (subrange*",
            "              low = (dec*",
            "                DEC:'0'  <== mode:M_Interface))))",
            "        NEWLINE:'\\n'  <== mode:M_Interface",
            "        (if_inner*",
            "          (if_ip_address",
            "            IP:'ip'",
            "            ADDRESS:'address'",
            "            ip = IP_ADDRESS:'2.1.3.2'",
            "            subnet = IP_ADDRESS:'255.255.255.255'",
            "            NEWLINE:'\\n')))))",
            "  (stanza*",
            "    (s_interface*",
            "      INTERFACE:'interface'",
            "      (s_interface_definition",
            "        iname = (interface_name*",
            "          name_prefix_alpha = M_Interface_PREFIX:'FastEthernet'  <== mode:M_Interface",
            "          DEC:'0'  <== mode:M_Interface",
            "          FORWARD_SLASH:'/'  <== mode:M_Interface",
            "          (range*",
            "            (subrange*",
            "              low = (dec*",
            "                DEC:'0'  <== mode:M_Interface))))",
            "        NEWLINE:'\\n'  <== mode:M_Interface",
            "        (if_inner*",
            "          (if_ip_address",
            "            IP:'ip'",
            "            ADDRESS:'address'",
            "            ip = IP_ADDRESS:'2.23.22.3'",
            "            subnet = IP_ADDRESS:'255.255.255.0'",
            "            NEWLINE:'\\n'))",
            "        (if_inner*",
            "          (if_null_block*",
            "            DUPLEX:'duplex'",
            "            AUTO:'auto'",
            "            NEWLINE:'\\n'))",
            "        (if_inner*",
            "          (if_speed_auto*",
            "            SPEED:'speed'",
            "            AUTO:'auto'",
            "            NEWLINE:'\\n')))))",
            "  (stanza*",
            "    (s_interface*",
            "      INTERFACE:'interface'",
            "      (s_interface_definition",
            "        iname = (interface_name*",
            "          name_prefix_alpha = M_Interface_PREFIX:'FastEthernet'  <== mode:M_Interface",
            "          DEC:'0'  <== mode:M_Interface",
            "          FORWARD_SLASH:'/'  <== mode:M_Interface",
            "          (range*",
            "            (subrange*",
            "              low = (dec*",
            "                DEC:'1'  <== mode:M_Interface))))",
            "        NEWLINE:'\\n'  <== mode:M_Interface",
            "        (if_inner*",
            "          (if_ip_address",
            "            IP:'ip'",
            "            ADDRESS:'address'",
            "            ip = IP_ADDRESS:'2.23.12.3'",
            "            subnet = IP_ADDRESS:'255.255.255.0'",
            "            NEWLINE:'\\n'))",
            "        (if_inner*",
            "          (if_null_block*",
            "            DUPLEX:'duplex'",
            "            AUTO:'auto'",
            "            NEWLINE:'\\n'))",
            "        (if_inner*",
            "          (if_speed_auto*",
            "            SPEED:'speed'",
            "            AUTO:'auto'",
            "            NEWLINE:'\\n')))))",
            "  (stanza*",
            "    (s_interface*",
            "      INTERFACE:'interface'",
            "      (s_interface_definition",
            "        iname = (interface_name*",
            "          name_prefix_alpha = M_Interface_PREFIX:'FastEthernet'  <== mode:M_Interface",
            "          DEC:'1'  <== mode:M_Interface",
            "          FORWARD_SLASH:'/'  <== mode:M_Interface",
            "          (range*",
            "            (subrange*",
            "              low = (dec*",
            "                DEC:'0'  <== mode:M_Interface))))",
            "        NEWLINE:'\\n'  <== mode:M_Interface",
            "        (if_inner*",
            "          (if_ip_address",
            "            IP:'ip'",
            "            ADDRESS:'address'",
            "            ip = IP_ADDRESS:'2.34.201.3'",
            "            subnet = IP_ADDRESS:'255.255.255.0'",
            "            NEWLINE:'\\n'))",
            "        (if_inner*",
            "          (if_null_block*",
            "            DUPLEX:'duplex'",
            "            AUTO:'auto'",
            "            NEWLINE:'\\n'))",
            "        (if_inner*",
            "          (if_speed_auto*",
            "            SPEED:'speed'",
            "            AUTO:'auto'",
            "            NEWLINE:'\\n')))))",
            "  (stanza*",
            "    (s_router_ospf",
            "      ROUTER:'router'",
            "      OSPF:'ospf'",
            "      name = (variable*",
            "        UINT8:'1')",
            "      NEWLINE:'\\n'",
            "      (ro_inner*",
            "        (ro_router_id",
            "          ROUTER_ID:'router-id'",
            "          ip = IP_ADDRESS:'2.1.3.2'",
            "          NEWLINE:'\\n'))",
            "      (ro_inner*",
            "        (ro_common*",
            "          (ro_null*",
            "            LOG_ADJACENCY_CHANGES:'log-adjacency-changes'",
            "            (null_rest_of_line*",
            "              NEWLINE:'\\n'))))",
            "      (ro_inner*",
            "        (ro_redistribute_connected",
            "          REDISTRIBUTE:'redistribute'",
            "          CONNECTED:'connected'",
            "          subnets = SUBNETS:'subnets'",
            "          NEWLINE:'\\n'))",
            "      (ro_inner*",
            "        (ro_network",
            "          NETWORK:'network'",
            "          ip = IP_ADDRESS:'2.1.0.0'",
            "          wildcard = IP_ADDRESS:'0.0.255.255'",
            "          AREA:'area'",
            "          area_int = (dec*",
            "            UINT8:'1')",
            "          NEWLINE:'\\n'))",
            "      (ro_inner*",
            "        (ro_network",
            "          NETWORK:'network'",
            "          ip = IP_ADDRESS:'2.23.0.0'",
            "          wildcard = IP_ADDRESS:'0.0.255.255'",
            "          AREA:'area'",
            "          area_int = (dec*",
            "            UINT8:'1')",
            "          NEWLINE:'\\n'))))",
            "  (stanza*",
            "    (router_bgp_stanza",
            "      ROUTER:'router'",
            "      BGP:'bgp'",
            "      procnum = (bgp_asn*",
            "        asn = (uint32*",
            "          UINT8:'2'))",
            "      NEWLINE:'\\n'",
            "      (router_bgp_stanza_tail*",
            "        (router_id_rb_stanza*",
            "          BGP:'bgp'",
            "          (router_id_bgp_tail",
            "            ROUTER_ID:'router-id'",
            "            routerid = IP_ADDRESS:'2.1.3.2'",
            "            NEWLINE:'\\n')))",
            "      (router_bgp_stanza_tail*",
            "        (bgp_rb_stanza*",
            "          BGP:'bgp'",
            "          (bgp_log_neighbor_changes_rb_stanza_null*",
            "            LOG_NEIGHBOR_CHANGES:'log-neighbor-changes'",
            "            (null_rest_of_line*",
            "              NEWLINE:'\\n'))))",
            "      (router_bgp_stanza_tail*",
            "        (peer_group_creation_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          name = VARIABLE:'as2'  <== mode:M_NEIGHBOR",
            "          PEER_GROUP:'peer-group'",
            "          NEWLINE:'\\n'  <== mode:M_NEIGHBOR))",
            "      (router_bgp_stanza_tail*",
            "        (neighbor_flat_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          peergroup = VARIABLE:'as2'  <== mode:M_NEIGHBOR",
            "          (remote_as_bgp_tail",
            "            REMOTE_AS:'remote-as'",
            "            remote = (bgp_asn*",
            "              asn = (uint32*",
            "                UINT8:'2'))",
            "            NEWLINE:'\\n')))",
            "      (router_bgp_stanza_tail*",
            "        (peer_group_creation_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          name = VARIABLE:'dept'  <== mode:M_NEIGHBOR",
            "          PEER_GROUP:'peer-group'",
            "          NEWLINE:'\\n'  <== mode:M_NEIGHBOR))",
            "      (router_bgp_stanza_tail*",
            "        (neighbor_flat_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          peergroup = VARIABLE:'dept'  <== mode:M_NEIGHBOR",
            "          (remote_as_bgp_tail",
            "            REMOTE_AS:'remote-as'",
            "            remote = (bgp_asn*",
            "              asn = (uint32*",
            "                UINT16:'65001'))",
            "            NEWLINE:'\\n')))",
            "      (router_bgp_stanza_tail*",
            "        (peer_group_assignment_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          address = IP_ADDRESS:'2.1.2.1'  <== mode:M_NEIGHBOR",
            "          PEER_GROUP:'peer-group'",
            "          name = (variable*",
            "            VARIABLE:'as2'  <== mode:M_NEIGHBOR)",
            "          NEWLINE:'\\n'))",
            "      (router_bgp_stanza_tail*",
            "        (neighbor_flat_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          ip = IP_ADDRESS:'2.1.2.1'  <== mode:M_NEIGHBOR",
            "          (bgp_tail*",
            "            (update_source_bgp_tail",
            "              UPDATE_SOURCE:'update-source'",
            "              source = (interface_name*",
            "                name_prefix_alpha = M_Interface_PREFIX:'Loopback'  <== mode:M_Interface",
            "                (range*",
            "                  (subrange*",
            "                    low = (dec*",
            "                      DEC:'0'  <== mode:M_Interface))))",
            "              NEWLINE:'\\n'  <== mode:M_Interface))))",
            "      (router_bgp_stanza_tail*",
            "        (peer_group_assignment_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          address = IP_ADDRESS:'2.1.2.2'  <== mode:M_NEIGHBOR",
            "          PEER_GROUP:'peer-group'",
            "          name = (variable*",
            "            VARIABLE:'as2'  <== mode:M_NEIGHBOR)",
            "          NEWLINE:'\\n'))",
            "      (router_bgp_stanza_tail*",
            "        (neighbor_flat_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          ip = IP_ADDRESS:'2.1.2.2'  <== mode:M_NEIGHBOR",
            "          (bgp_tail*",
            "            (update_source_bgp_tail",
            "              UPDATE_SOURCE:'update-source'",
            "              source = (interface_name*",
            "                name_prefix_alpha = M_Interface_PREFIX:'Loopback'  <== mode:M_Interface",
            "                (range*",
            "                  (subrange*",
            "                    low = (dec*",
            "                      DEC:'0'  <== mode:M_Interface))))",
            "              NEWLINE:'\\n'  <== mode:M_Interface))))",
            "      (router_bgp_stanza_tail*",
            "        (peer_group_assignment_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          address = IP_ADDRESS:'2.34.201.4'  <== mode:M_NEIGHBOR",
            "          PEER_GROUP:'peer-group'",
            "          name = (variable*",
            "            VARIABLE:'dept'  <== mode:M_NEIGHBOR)",
            "          NEWLINE:'\\n'))",
            "      (router_bgp_stanza_tail*",
            "        (bgp_tail*",
            "          (maximum_paths_bgp_tail",
            "            MAXIMUM_PATHS:'maximum-paths'",
            "            paths = (dec*",
            "              UINT8:'5')",
            "            NEWLINE:'\\n')))",
            "      (router_bgp_stanza_tail*",
            "        (address_family_rb_stanza",
            "          (address_family_header",
            "            ADDRESS_FAMILY:'address-family'",
            "            af = (bgp_address_family*",
            "              IPV4:'ipv4')",
            "            NEWLINE:'\\n')",
            "          (address_family_inner*",
            "            (neighbor_flat_rb_stanza",
            "              NEIGHBOR:'neighbor'",
            "              peergroup = VARIABLE:'as2'  <== mode:M_NEIGHBOR",
            "              (bgp_tail*",
            "                (send_community_bgp_tail",
            "                  SEND_COMMUNITY:'send-community'",
            "                  NEWLINE:'\\n'))))",
            "          (address_family_inner*",
            "            (neighbor_flat_rb_stanza",
            "              NEIGHBOR:'neighbor'",
            "              peergroup = VARIABLE:'dept'  <== mode:M_NEIGHBOR",
            "              (bgp_tail*",
            "                (send_community_bgp_tail",
            "                  SEND_COMMUNITY:'send-community'",
            "                  NEWLINE:'\\n'))))",
            "          (address_family_inner*",
            "            (neighbor_flat_rb_stanza",
            "              NEIGHBOR:'neighbor'",
            "              peergroup = VARIABLE:'dept'  <== mode:M_NEIGHBOR",
            "              (bgp_tail*",
            "                (route_map_bgp_tail",
            "                  ROUTE_MAP:'route-map'",
            "                  name = (variable*",
            "                    VARIABLE:'as2_to_dept'  <== mode:M_RouteMap)",
            "                  OUT:'out'",
            "                  NEWLINE:'\\n'))))",
            "          (address_family_inner*",
            "            (neighbor_flat_rb_stanza",
            "              NEIGHBOR:'neighbor'",
            "              peergroup = VARIABLE:'dept'  <== mode:M_NEIGHBOR",
            "              (bgp_tail*",
            "                (route_map_bgp_tail",
            "                  ROUTE_MAP:'route-map'",
            "                  name = (variable*",
            "                    VARIABLE:'dept_to_as2'  <== mode:M_RouteMap)",
            "                  IN:'in'",
            "                  NEWLINE:'\\n'))))",
            "          (address_family_inner*",
            "            (neighbor_flat_rb_stanza",
            "              NEIGHBOR:'neighbor'",
            "              ip = IP_ADDRESS:'2.1.2.1'  <== mode:M_NEIGHBOR",
            "              (bgp_tail*",
            "                (activate_bgp_tail",
            "                  ACTIVATE:'activate'",
            "                  NEWLINE:'\\n'))))",
            "          (address_family_inner*",
            "            (neighbor_flat_rb_stanza",
            "              NEIGHBOR:'neighbor'",
            "              ip = IP_ADDRESS:'2.1.2.2'  <== mode:M_NEIGHBOR",
            "              (bgp_tail*",
            "                (activate_bgp_tail",
            "                  ACTIVATE:'activate'",
            "                  NEWLINE:'\\n'))))",
            "          (address_family_inner*",
            "            (neighbor_flat_rb_stanza",
            "              NEIGHBOR:'neighbor'",
            "              ip = IP_ADDRESS:'2.34.201.4'  <== mode:M_NEIGHBOR",
            "              (bgp_tail*",
            "                (activate_bgp_tail",
            "                  ACTIVATE:'activate'",
            "                  NEWLINE:'\\n'))))",
            "          (address_family_inner*",
            "            (bgp_tail*",
            "              (maximum_paths_bgp_tail",
            "                MAXIMUM_PATHS:'maximum-paths'",
            "                paths = (dec*",
            "                  UINT8:'5')",
            "                NEWLINE:'\\n')))",
            "          (address_family_inner*",
            "            (bgp_tail*",
            "              (null_bgp_tail*",
            "                NO:'no'",
            "                AUTO_SUMMARY:'auto-summary'",
            "                (null_rest_of_line*",
            "                  NEWLINE:'\\n'))))",
            "          (address_family_inner*",
            "            (bgp_tail*",
            "              (null_bgp_tail*",
            "                NO:'no'",
            "                SYNCHRONIZATION:'synchronization'",
            "                (null_rest_of_line*",
            "                  NEWLINE:'\\n'))))",
            "          (address_family_inner*",
            "            (bgp_tail*",
            "              (bgp_bgp_tail*",
            "                BGP:'bgp'",
            "                (bgp_dampening_bgp_tail_null*",
            "                  DAMPENING:'dampening'",
            "                  (null_rest_of_line*",
            "                    NEWLINE:'\\n')))))",
            "          (address_family_footer*",
            "            EXIT_ADDRESS_FAMILY:'exit-address-family'",
            "            NEWLINE:'\\n')))))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        IP:'ip'",
            "        FORWARD_PROTOCOL:'forward-protocol'",
            "        ND:'nd'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        IP:'ip'",
            "        BGP_COMMUNITY:'bgp-community'",
            "        VARIABLE:'new-format'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (ip_community_list_expanded_stanza",
            "      IP:'ip'",
            "      COMMUNITY_LIST:'community-list'",
            "      EXPANDED:'expanded'",
            "      name = (variable*",
            "        VARIABLE:'dept_community')",
            "      (ip_community_list_expanded_tail",
            "        ala = (access_list_action*",
            "          PERMIT:'permit')",
            "        VARIABLE:'_65001:'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        NO:'no'",
            "        IP:'ip'",
            "        HTTP:'http'",
            "        SERVER:'server'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        NO:'no'",
            "        IP:'ip'",
            "        HTTP:'http'",
            "        VARIABLE:'secure-server'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (extended_access_list_stanza",
            "      ACCESS_LIST:'access-list'",
            "      num = ACL_NUM_EXTENDED:'102'",
            "      (extended_access_list_tail",
            "        ala = (access_list_action*",
            "          PERMIT:'permit')",
            "        prot = (protocol*",
            "          IP:'ip')",
            "        srcipr = (access_list_ip_range*",
            "          HOST:'host'",
            "          ip = IP_ADDRESS:'2.128.0.0')",
            "        dstipr = (access_list_ip_range*",
            "          HOST:'host'",
            "          ip = IP_ADDRESS:'255.255.0.0')",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (extended_access_list_stanza",
            "      ACCESS_LIST:'access-list'",
            "      num = ACL_NUM_EXTENDED:'105'",
            "      (extended_access_list_tail",
            "        ala = (access_list_action*",
            "          PERMIT:'permit')",
            "        prot = (protocol*",
            "          IP:'ip')",
            "        srcipr = (access_list_ip_range*",
            "          HOST:'host'",
            "          ip = IP_ADDRESS:'1.0.1.0')",
            "        dstipr = (access_list_ip_range*",
            "          HOST:'host'",
            "          ip = IP_ADDRESS:'255.255.255.0')",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (extended_access_list_stanza",
            "      ACCESS_LIST:'access-list'",
            "      num = ACL_NUM_EXTENDED:'105'",
            "      (extended_access_list_tail",
            "        ala = (access_list_action*",
            "          PERMIT:'permit')",
            "        prot = (protocol*",
            "          IP:'ip')",
            "        srcipr = (access_list_ip_range*",
            "          HOST:'host'",
            "          ip = IP_ADDRESS:'1.0.2.0')",
            "        dstipr = (access_list_ip_range*",
            "          HOST:'host'",
            "          ip = IP_ADDRESS:'255.255.255.0')",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (extended_access_list_stanza",
            "      ACCESS_LIST:'access-list'",
            "      num = ACL_NUM_EXTENDED:'105'",
            "      (extended_access_list_tail",
            "        ala = (access_list_action*",
            "          PERMIT:'permit')",
            "        prot = (protocol*",
            "          IP:'ip')",
            "        srcipr = (access_list_ip_range*",
            "          HOST:'host'",
            "          ip = IP_ADDRESS:'3.0.1.0')",
            "        dstipr = (access_list_ip_range*",
            "          HOST:'host'",
            "          ip = IP_ADDRESS:'255.255.255.0')",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (extended_access_list_stanza",
            "      ACCESS_LIST:'access-list'",
            "      num = ACL_NUM_EXTENDED:'105'",
            "      (extended_access_list_tail",
            "        ala = (access_list_action*",
            "          PERMIT:'permit')",
            "        prot = (protocol*",
            "          IP:'ip')",
            "        srcipr = (access_list_ip_range*",
            "          HOST:'host'",
            "          ip = IP_ADDRESS:'3.0.2.0')",
            "        dstipr = (access_list_ip_range*",
            "          HOST:'host'",
            "          ip = IP_ADDRESS:'255.255.255.0')",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (route_map_stanza",
            "      ROUTE_MAP:'route-map'",
            "      name = (variable*",
            "        VARIABLE:'as2_to_dept'  <== mode:M_RouteMap)",
            "      rmt = (access_list_action*",
            "        PERMIT:'permit')",
            "      num = (dec*",
            "        UINT8:'100')",
            "      NEWLINE:'\\n'",
            "      (rm_stanza*",
            "        (match_rm_stanza*",
            "          MATCH:'match'",
            "          (match_ip_access_list_rm_stanza",
            "            IP:'ip'",
            "            ADDRESS:'address'",
            "            (variable_access_list*",
            "              UINT8:'105')",
            "            NEWLINE:'\\n')))",
            "      (rm_stanza*",
            "        (set_rm_stanza*",
            "          (set_metric_rm_stanza",
            "            SET:'set'",
            "            METRIC:'metric'",
            "            metric = (int_expr*",
            "              (dec*",
            "                UINT8:'50'))",
            "            NEWLINE:'\\n')))",
            "      (rm_stanza*",
            "        (set_rm_stanza*",
            "          (set_community_additive_rm_stanza",
            "            SET:'set'",
            "            COMMUNITY:'community'",
            "            (community*",
            "              STANDARD_COMMUNITY:'2:65001')",
            "            ADDITIVE:'additive'",
            "            NEWLINE:'\\n')))))",
            "  (stanza*",
            "    (route_map_stanza",
            "      ROUTE_MAP:'route-map'",
            "      name = (variable*",
            "        VARIABLE:'dept_to_as2'  <== mode:M_RouteMap)",
            "      rmt = (access_list_action*",
            "        PERMIT:'permit')",
            "      num = (dec*",
            "        UINT8:'100')",
            "      NEWLINE:'\\n'",
            "      (rm_stanza*",
            "        (match_rm_stanza*",
            "          MATCH:'match'",
            "          (match_community_list_rm_stanza",
            "            COMMUNITY:'community'",
            "            (variable*",
            "              VARIABLE:'dept_community')",
            "            NEWLINE:'\\n')))",
            "      (rm_stanza*",
            "        (set_rm_stanza*",
            "          (set_local_preference_rm_stanza",
            "            SET:'set'",
            "            LOCAL_PREFERENCE:'local-preference'",
            "            pref = (int_expr*",
            "              (dec*",
            "                UINT16:'350'))",
            "            NEWLINE:'\\n')))))",
            "  (stanza*",
            "    (s_control_plane*",
            "      CONTROL_PLANE:'control-plane'",
            "      NEWLINE:'\\n'))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        MGCP:'mgcp'",
            "        VARIABLE:'behavior'",
            "        VARIABLE:'g729-variants'",
            "        VARIABLE:'static-pt'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_gatekeeper*",
            "      GATEKEEPER:'gatekeeper'",
            "      NEWLINE:'\\n'",
            "      (gk_null*",
            "        SHUTDOWN:'shutdown'",
            "        (null_rest_of_line*",
            "          NEWLINE:'\\n'))))",
            "  (stanza*",
            "    (s_line",
            "      LINE:'line'",
            "      (line_type*",
            "        CON:'con')",
            "      first = (dec*",
            "        UINT8:'0')",
            "      NEWLINE:'\\n'",
            "      (l_exec_timeout",
            "        EXEC_TIMEOUT:'exec-timeout'",
            "        minutes = (dec*",
            "          UINT8:'0')",
            "        seconds = (dec*",
            "          UINT8:'0')",
            "        NEWLINE:'\\n')",
            "      (l_null*",
            "        PRIVILEGE:'privilege'",
            "        (null_rest_of_line*",
            "          LEVEL:'level'",
            "          UINT8:'15'",
            "          NEWLINE:'\\n'))",
            "      (l_null*",
            "        LOGGING:'logging'",
            "        (null_rest_of_line*",
            "          SYNCHRONOUS:'synchronous'",
            "          NEWLINE:'\\n'))))",
            "  (stanza*",
            "    (s_line",
            "      LINE:'line'",
            "      (line_type*",
            "        AUX:'aux')",
            "      first = (dec*",
            "        UINT8:'0')",
            "      NEWLINE:'\\n'",
            "      (l_exec_timeout",
            "        EXEC_TIMEOUT:'exec-timeout'",
            "        minutes = (dec*",
            "          UINT8:'0')",
            "        seconds = (dec*",
            "          UINT8:'0')",
            "        NEWLINE:'\\n')",
            "      (l_null*",
            "        PRIVILEGE:'privilege'",
            "        (null_rest_of_line*",
            "          LEVEL:'level'",
            "          UINT8:'15'",
            "          NEWLINE:'\\n'))",
            "      (l_null*",
            "        LOGGING:'logging'",
            "        (null_rest_of_line*",
            "          SYNCHRONOUS:'synchronous'",
            "          NEWLINE:'\\n'))))",
            "  (stanza*",
            "    (s_line",
            "      LINE:'line'",
            "      (line_type*",
            "        VTY:'vty')",
            "      first = (dec*",
            "        UINT8:'0')",
            "      last = (dec*",
            "        UINT8:'4')",
            "      NEWLINE:'\\n'))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        END:'end'",
            "        NEWLINE:'\\n\\n')))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/as2host1.cfg" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        VERSION:'version'",
            "        FLOAT:'12.4'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_service",
            "      SERVICE:'service'",
            "      (variable*",
            "        VARIABLE:'timestamps')",
            "      (variable*",
            "        DEBUG:'debug')",
            "      (variable*",
            "        VARIABLE:'datetime')",
            "      (variable*",
            "        MSEC:'msec')",
            "      NEWLINE:'\\n'))",
            "  (stanza*",
            "    (s_service",
            "      SERVICE:'service'",
            "      (variable*",
            "        VARIABLE:'timestamps')",
            "      (variable*",
            "        LOG:'log')",
            "      (variable*",
            "        VARIABLE:'datetime')",
            "      (variable*",
            "        MSEC:'msec')",
            "      NEWLINE:'\\n'))",
            "  (stanza*",
            "    (s_service",
            "      NO:'no'",
            "      SERVICE:'service'",
            "      (variable*",
            "        VARIABLE:'password-encryption')",
            "      NEWLINE:'\\n'))",
            "  (stanza*",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'as2host1'",
            "      NEWLINE:'\\n'))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        BOOT_START_MARKER:'boot-start-marker'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        BOOT_END_MARKER:'boot-end-marker'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_aaa",
            "      NO:'no'",
            "      AAA:'aaa'",
            "      (aaa_new_model",
            "        NEW_MODEL:'new-model'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        MEMORY_SIZE:'memory-size'",
            "        VARIABLE:'iomem'",
            "        UINT8:'5'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        IP:'ip'",
            "        CEF:'cef'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_ip_domain",
            "      NO:'no'",
            "      IP:'ip'",
            "      DOMAIN:'domain'",
            "      (ip_domain_lookup",
            "        LOOKUP:'lookup'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_ip_domain",
            "      IP:'ip'",
            "      DOMAIN:'domain'",
            "      (ip_domain_name",
            "        NAME:'name'",
            "        hostname = (variable_hostname*",
            "          VARIABLE:'lab.local'  <== mode:M_Name)",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        IP:'ip'",
            "        AUTH_PROXY:'auth-proxy'",
            "        VARIABLE:'max-nodata-conns'",
            "        UINT8:'3'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        IP:'ip'",
            "        ADMISSION:'admission'",
            "        VARIABLE:'max-nodata-conns'",
            "        UINT8:'3'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_interface*",
            "      INTERFACE:'interface'",
            "      (s_interface_definition",
            "        iname = (interface_name*",
            "          name_prefix_alpha = M_Interface_PREFIX:'Loopback'  <== mode:M_Interface",
            "          (range*",
            "            (subrange*",
            "              low = (dec*",
            "                DEC:'0'  <== mode:M_Interface))))",
            "        NEWLINE:'\\n'  <== mode:M_Interface",
            "        (if_inner*",
            "          (if_ip_address",
            "            IP:'ip'",
            "            ADDRESS:'address'",
            "            ip = IP_ADDRESS:'2.1.1.2'",
            "            subnet = IP_ADDRESS:'255.255.255.255'",
            "            NEWLINE:'\\n')))))",
            "  (stanza*",
            "    (s_interface*",
            "      INTERFACE:'interface'",
            "      (s_interface_definition",
            "        iname = (interface_name*",
            "          name_prefix_alpha = M_Interface_PREFIX:'FastEthernet'  <== mode:M_Interface",
            "          DEC:'0'  <== mode:M_Interface",
            "          FORWARD_SLASH:'/'  <== mode:M_Interface",
            "          (range*",
            "            (subrange*",
            "              low = (dec*",
            "                DEC:'0'  <== mode:M_Interface))))",
            "        NEWLINE:'\\n'  <== mode:M_Interface",
            "        (if_inner*",
            "          (if_ip_address",
            "            IP:'ip'",
            "            ADDRESS:'address'",
            "            ip = IP_ADDRESS:'2.128.0.101'",
            "            subnet = IP_ADDRESS:'255.255.0.0'",
            "            NEWLINE:'\\n'))",
            "        (if_inner*",
            "          (if_null_block*",
            "            DUPLEX:'duplex'",
            "            AUTO:'auto'",
            "            NEWLINE:'\\n'))",
            "        (if_inner*",
            "          (if_speed_auto*",
            "            SPEED:'speed'",
            "            AUTO:'auto'",
            "            NEWLINE:'\\n')))))",
            "  (stanza*",
            "    (s_interface*",
            "      INTERFACE:'interface'",
            "      (s_interface_definition",
            "        iname = (interface_name*",
            "          name_prefix_alpha = M_Interface_PREFIX:'FastEthernet'  <== mode:M_Interface",
            "          DEC:'0'  <== mode:M_Interface",
            "          FORWARD_SLASH:'/'  <== mode:M_Interface",
            "          (range*",
            "            (subrange*",
            "              low = (dec*",
            "                DEC:'1'  <== mode:M_Interface))))",
            "        NEWLINE:'\\n'  <== mode:M_Interface",
            "        (if_inner*",
            "          (if_no*",
            "            NO:'no'",
            "            (if_no_ip*",
            "              IP:'ip'",
            "              (if_no_ip_address*",
            "                ADDRESS:'address'",
            "                NEWLINE:'\\n'))))",
            "        (if_inner*",
            "          (if_shutdown",
            "            SHUTDOWN:'shutdown'",
            "            NEWLINE:'\\n'))",
            "        (if_inner*",
            "          (if_null_block*",
            "            DUPLEX:'duplex'",
            "            AUTO:'auto'",
            "            NEWLINE:'\\n'))",
            "        (if_inner*",
            "          (if_speed_auto*",
            "            SPEED:'speed'",
            "            AUTO:'auto'",
            "            NEWLINE:'\\n')))))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        IP:'ip'",
            "        FORWARD_PROTOCOL:'forward-protocol'",
            "        ND:'nd'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (ip_route_stanza",
            "      IP:'ip'",
            "      ROUTE:'route'",
            "      (ip_route_tail",
            "        address = IP_ADDRESS:'0.0.0.0'",
            "        mask = IP_ADDRESS:'0.0.0.0'",
            "        nexthopip = IP_ADDRESS:'2.128.0.1'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        NO:'no'",
            "        IP:'ip'",
            "        HTTP:'http'",
            "        SERVER:'server'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        NO:'no'",
            "        IP:'ip'",
            "        HTTP:'http'",
            "        VARIABLE:'secure-server'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_control_plane*",
            "      CONTROL_PLANE:'control-plane'",
            "      NEWLINE:'\\n'))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        MGCP:'mgcp'",
            "        VARIABLE:'behavior'",
            "        VARIABLE:'g729-variants'",
            "        VARIABLE:'static-pt'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_gatekeeper*",
            "      GATEKEEPER:'gatekeeper'",
            "      NEWLINE:'\\n'",
            "      (gk_null*",
            "        SHUTDOWN:'shutdown'",
            "        (null_rest_of_line*",
            "          NEWLINE:'\\n'))))",
            "  (stanza*",
            "    (s_line",
            "      LINE:'line'",
            "      (line_type*",
            "        CON:'con')",
            "      first = (dec*",
            "        UINT8:'0')",
            "      NEWLINE:'\\n'",
            "      (l_exec_timeout",
            "        EXEC_TIMEOUT:'exec-timeout'",
            "        minutes = (dec*",
            "          UINT8:'0')",
            "        seconds = (dec*",
            "          UINT8:'0')",
            "        NEWLINE:'\\n')",
            "      (l_null*",
            "        PRIVILEGE:'privilege'",
            "        (null_rest_of_line*",
            "          LEVEL:'level'",
            "          UINT8:'15'",
            "          NEWLINE:'\\n'))",
            "      (l_null*",
            "        LOGGING:'logging'",
            "        (null_rest_of_line*",
            "          SYNCHRONOUS:'synchronous'",
            "          NEWLINE:'\\n'))))",
            "  (stanza*",
            "    (s_line",
            "      LINE:'line'",
            "      (line_type*",
            "        AUX:'aux')",
            "      first = (dec*",
            "        UINT8:'0')",
            "      NEWLINE:'\\n'",
            "      (l_exec_timeout",
            "        EXEC_TIMEOUT:'exec-timeout'",
            "        minutes = (dec*",
            "          UINT8:'0')",
            "        seconds = (dec*",
            "          UINT8:'0')",
            "        NEWLINE:'\\n')",
            "      (l_null*",
            "        PRIVILEGE:'privilege'",
            "        (null_rest_of_line*",
            "          LEVEL:'level'",
            "          UINT8:'15'",
            "          NEWLINE:'\\n'))",
            "      (l_null*",
            "        LOGGING:'logging'",
            "        (null_rest_of_line*",
            "          SYNCHRONOUS:'synchronous'",
            "          NEWLINE:'\\n'))))",
            "  (stanza*",
            "    (s_line",
            "      LINE:'line'",
            "      (line_type*",
            "        VTY:'vty')",
            "      first = (dec*",
            "        UINT8:'0')",
            "      last = (dec*",
            "        UINT8:'4')",
            "      NEWLINE:'\\n'))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        END:'end'",
            "        NEWLINE:'\\n\\n')))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/as3border1.cfg" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        VERSION:'version'",
            "        FLOAT:'12.4'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_service",
            "      SERVICE:'service'",
            "      (variable*",
            "        VARIABLE:'timestamps')",
            "      (variable*",
            "        DEBUG:'debug')",
            "      (variable*",
            "        VARIABLE:'datetime')",
            "      (variable*",
            "        MSEC:'msec')",
            "      NEWLINE:'\\n'))",
            "  (stanza*",
            "    (s_service",
            "      SERVICE:'service'",
            "      (variable*",
            "        VARIABLE:'timestamps')",
            "      (variable*",
            "        LOG:'log')",
            "      (variable*",
            "        VARIABLE:'datetime')",
            "      (variable*",
            "        MSEC:'msec')",
            "      NEWLINE:'\\n'))",
            "  (stanza*",
            "    (s_service",
            "      NO:'no'",
            "      SERVICE:'service'",
            "      (variable*",
            "        VARIABLE:'password-encryption')",
            "      NEWLINE:'\\n'))",
            "  (stanza*",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'as3border1'",
            "      NEWLINE:'\\n'))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        BOOT_START_MARKER:'boot-start-marker'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        BOOT_END_MARKER:'boot-end-marker'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_aaa",
            "      NO:'no'",
            "      AAA:'aaa'",
            "      (aaa_new_model",
            "        NEW_MODEL:'new-model'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        MEMORY_SIZE:'memory-size'",
            "        VARIABLE:'iomem'",
            "        UINT8:'5'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        IP:'ip'",
            "        CEF:'cef'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_ip_domain",
            "      NO:'no'",
            "      IP:'ip'",
            "      DOMAIN:'domain'",
            "      (ip_domain_lookup",
            "        LOOKUP:'lookup'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_ip_domain",
            "      IP:'ip'",
            "      DOMAIN:'domain'",
            "      (ip_domain_name",
            "        NAME:'name'",
            "        hostname = (variable_hostname*",
            "          VARIABLE:'lab.local'  <== mode:M_Name)",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        IP:'ip'",
            "        AUTH_PROXY:'auth-proxy'",
            "        VARIABLE:'max-nodata-conns'",
            "        UINT8:'3'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        IP:'ip'",
            "        ADMISSION:'admission'",
            "        VARIABLE:'max-nodata-conns'",
            "        UINT8:'3'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_interface*",
            "      INTERFACE:'interface'",
            "      (s_interface_definition",
            "        iname = (interface_name*",
            "          name_prefix_alpha = M_Interface_PREFIX:'Loopback'  <== mode:M_Interface",
            "          (range*",
            "            (subrange*",
            "              low = (dec*",
            "                DEC:'0'  <== mode:M_Interface))))",
            "        NEWLINE:'\\n'  <== mode:M_Interface",
            "        (if_inner*",
            "          (if_ip_address",
            "            IP:'ip'",
            "            ADDRESS:'address'",
            "            ip = IP_ADDRESS:'3.1.1.1'",
            "            subnet = IP_ADDRESS:'255.255.255.255'",
            "            NEWLINE:'\\n')))))",
            "  (stanza*",
            "    (s_interface*",
            "      INTERFACE:'interface'",
            "      (s_interface_definition",
            "        iname = (interface_name*",
            "          name_prefix_alpha = M_Interface_PREFIX:'FastEthernet'  <== mode:M_Interface",
            "          DEC:'0'  <== mode:M_Interface",
            "          FORWARD_SLASH:'/'  <== mode:M_Interface",
            "          (range*",
            "            (subrange*",
            "              low = (dec*",
            "                DEC:'0'  <== mode:M_Interface))))",
            "        NEWLINE:'\\n'  <== mode:M_Interface",
            "        (if_inner*",
            "          (if_ip_address",
            "            IP:'ip'",
            "            ADDRESS:'address'",
            "            ip = IP_ADDRESS:'10.23.21.3'",
            "            subnet = IP_ADDRESS:'255.255.255.0'",
            "            NEWLINE:'\\n'))",
            "        (if_inner*",
            "          (if_null_block*",
            "            DUPLEX:'duplex'",
            "            AUTO:'auto'",
            "            NEWLINE:'\\n'))",
            "        (if_inner*",
            "          (if_speed_auto*",
            "            SPEED:'speed'",
            "            AUTO:'auto'",
            "            NEWLINE:'\\n')))))",
            "  (stanza*",
            "    (s_interface*",
            "      INTERFACE:'interface'",
            "      (s_interface_definition",
            "        iname = (interface_name*",
            "          name_prefix_alpha = M_Interface_PREFIX:'FastEthernet'  <== mode:M_Interface",
            "          DEC:'0'  <== mode:M_Interface",
            "          FORWARD_SLASH:'/'  <== mode:M_Interface",
            "          (range*",
            "            (subrange*",
            "              low = (dec*",
            "                DEC:'1'  <== mode:M_Interface))))",
            "        NEWLINE:'\\n'  <== mode:M_Interface",
            "        (if_inner*",
            "          (if_ip_address",
            "            IP:'ip'",
            "            ADDRESS:'address'",
            "            ip = IP_ADDRESS:'3.0.1.1'",
            "            subnet = IP_ADDRESS:'255.255.255.0'",
            "            NEWLINE:'\\n'))",
            "        (if_inner*",
            "          (if_null_block*",
            "            DUPLEX:'duplex'",
            "            AUTO:'auto'",
            "            NEWLINE:'\\n'))",
            "        (if_inner*",
            "          (if_speed_auto*",
            "            SPEED:'speed'",
            "            AUTO:'auto'",
            "            NEWLINE:'\\n')))))",
            "  (stanza*",
            "    (s_router_ospf",
            "      ROUTER:'router'",
            "      OSPF:'ospf'",
            "      name = (variable*",
            "        UINT8:'1')",
            "      NEWLINE:'\\n'",
            "      (ro_inner*",
            "        (ro_router_id",
            "          ROUTER_ID:'router-id'",
            "          ip = IP_ADDRESS:'3.1.1.1'",
            "          NEWLINE:'\\n'))",
            "      (ro_inner*",
            "        (ro_common*",
            "          (ro_null*",
            "            LOG_ADJACENCY_CHANGES:'log-adjacency-changes'",
            "            (null_rest_of_line*",
            "              NEWLINE:'\\n'))))",
            "      (ro_inner*",
            "        (ro_redistribute_connected",
            "          REDISTRIBUTE:'redistribute'",
            "          CONNECTED:'connected'",
            "          subnets = SUBNETS:'subnets'",
            "          NEWLINE:'\\n'))",
            "      (ro_inner*",
            "        (ro_network",
            "          NETWORK:'network'",
            "          ip = IP_ADDRESS:'3.0.0.0'",
            "          wildcard = IP_ADDRESS:'0.255.255.255'",
            "          AREA:'area'",
            "          area_int = (dec*",
            "            UINT8:'1')",
            "          NEWLINE:'\\n'))))",
            "  (stanza*",
            "    (router_bgp_stanza",
            "      ROUTER:'router'",
            "      BGP:'bgp'",
            "      procnum = (bgp_asn*",
            "        asn = (uint32*",
            "          UINT8:'3'))",
            "      NEWLINE:'\\n'",
            "      (router_bgp_stanza_tail*",
            "        (router_id_rb_stanza*",
            "          BGP:'bgp'",
            "          (router_id_bgp_tail",
            "            ROUTER_ID:'router-id'",
            "            routerid = IP_ADDRESS:'3.1.1.1'",
            "            NEWLINE:'\\n')))",
            "      (router_bgp_stanza_tail*",
            "        (bgp_rb_stanza*",
            "          BGP:'bgp'",
            "          (bgp_log_neighbor_changes_rb_stanza_null*",
            "            LOG_NEIGHBOR_CHANGES:'log-neighbor-changes'",
            "            (null_rest_of_line*",
            "              NEWLINE:'\\n'))))",
            "      (router_bgp_stanza_tail*",
            "        (peer_group_creation_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          name = VARIABLE:'as1'  <== mode:M_NEIGHBOR",
            "          PEER_GROUP:'peer-group'",
            "          NEWLINE:'\\n'  <== mode:M_NEIGHBOR))",
            "      (router_bgp_stanza_tail*",
            "        (neighbor_flat_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          peergroup = VARIABLE:'as1'  <== mode:M_NEIGHBOR",
            "          (remote_as_bgp_tail",
            "            REMOTE_AS:'remote-as'",
            "            remote = (bgp_asn*",
            "              asn = (uint32*",
            "                UINT8:'1'))",
            "            NEWLINE:'\\n')))",
            "      (router_bgp_stanza_tail*",
            "        (peer_group_creation_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          name = VARIABLE:'as2'  <== mode:M_NEIGHBOR",
            "          PEER_GROUP:'peer-group'",
            "          NEWLINE:'\\n'  <== mode:M_NEIGHBOR))",
            "      (router_bgp_stanza_tail*",
            "        (neighbor_flat_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          peergroup = VARIABLE:'as2'  <== mode:M_NEIGHBOR",
            "          (remote_as_bgp_tail",
            "            REMOTE_AS:'remote-as'",
            "            remote = (bgp_asn*",
            "              asn = (uint32*",
            "                UINT8:'2'))",
            "            NEWLINE:'\\n')))",
            "      (router_bgp_stanza_tail*",
            "        (peer_group_creation_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          name = VARIABLE:'as3'  <== mode:M_NEIGHBOR",
            "          PEER_GROUP:'peer-group'",
            "          NEWLINE:'\\n'  <== mode:M_NEIGHBOR))",
            "      (router_bgp_stanza_tail*",
            "        (neighbor_flat_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          peergroup = VARIABLE:'as3'  <== mode:M_NEIGHBOR",
            "          (remote_as_bgp_tail",
            "            REMOTE_AS:'remote-as'",
            "            remote = (bgp_asn*",
            "              asn = (uint32*",
            "                UINT8:'3'))",
            "            NEWLINE:'\\n')))",
            "      (router_bgp_stanza_tail*",
            "        (peer_group_assignment_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          address = IP_ADDRESS:'3.10.1.1'  <== mode:M_NEIGHBOR",
            "          PEER_GROUP:'peer-group'",
            "          name = (variable*",
            "            VARIABLE:'as3'  <== mode:M_NEIGHBOR)",
            "          NEWLINE:'\\n'))",
            "      (router_bgp_stanza_tail*",
            "        (neighbor_flat_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          ip = IP_ADDRESS:'3.10.1.1'  <== mode:M_NEIGHBOR",
            "          (bgp_tail*",
            "            (update_source_bgp_tail",
            "              UPDATE_SOURCE:'update-source'",
            "              source = (interface_name*",
            "                name_prefix_alpha = M_Interface_PREFIX:'Loopback'  <== mode:M_Interface",
            "                (range*",
            "                  (subrange*",
            "                    low = (dec*",
            "                      DEC:'0'  <== mode:M_Interface))))",
            "              NEWLINE:'\\n'  <== mode:M_Interface))))",
            "      (router_bgp_stanza_tail*",
            "        (peer_group_assignment_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          address = IP_ADDRESS:'10.23.21.2'  <== mode:M_NEIGHBOR",
            "          PEER_GROUP:'peer-group'",
            "          name = (variable*",
            "            VARIABLE:'as2'  <== mode:M_NEIGHBOR)",
            "          NEWLINE:'\\n'))",
            "      (router_bgp_stanza_tail*",
            "        (bgp_tail*",
            "          (maximum_paths_bgp_tail",
            "            MAXIMUM_PATHS:'maximum-paths'",
            "            paths = (dec*",
            "              UINT8:'5')",
            "            NEWLINE:'\\n')))",
            "      (router_bgp_stanza_tail*",
            "        (address_family_rb_stanza",
            "          (address_family_header",
            "            ADDRESS_FAMILY:'address-family'",
            "            af = (bgp_address_family*",
            "              IPV4:'ipv4')",
            "            NEWLINE:'\\n')",
            "          (address_family_inner*",
            "            (neighbor_flat_rb_stanza",
            "              NEIGHBOR:'neighbor'",
            "              peergroup = VARIABLE:'as1'  <== mode:M_NEIGHBOR",
            "              (bgp_tail*",
            "                (send_community_bgp_tail",
            "                  SEND_COMMUNITY:'send-community'",
            "                  NEWLINE:'\\n'))))",
            "          (address_family_inner*",
            "            (neighbor_flat_rb_stanza",
            "              NEIGHBOR:'neighbor'",
            "              peergroup = VARIABLE:'as2'  <== mode:M_NEIGHBOR",
            "              (bgp_tail*",
            "                (send_community_bgp_tail",
            "                  SEND_COMMUNITY:'send-community'",
            "                  NEWLINE:'\\n'))))",
            "          (address_family_inner*",
            "            (neighbor_flat_rb_stanza",
            "              NEIGHBOR:'neighbor'",
            "              peergroup = VARIABLE:'as3'  <== mode:M_NEIGHBOR",
            "              (bgp_tail*",
            "                (send_community_bgp_tail",
            "                  SEND_COMMUNITY:'send-community'",
            "                  NEWLINE:'\\n'))))",
            "          (address_family_inner*",
            "            (neighbor_flat_rb_stanza",
            "              NEIGHBOR:'neighbor'",
            "              peergroup = VARIABLE:'as1'  <== mode:M_NEIGHBOR",
            "              (bgp_tail*",
            "                (route_map_bgp_tail",
            "                  ROUTE_MAP:'route-map'",
            "                  name = (variable*",
            "                    VARIABLE:'as3_to_as1'  <== mode:M_RouteMap)",
            "                  OUT:'out'",
            "                  NEWLINE:'\\n'))))",
            "          (address_family_inner*",
            "            (neighbor_flat_rb_stanza",
            "              NEIGHBOR:'neighbor'",
            "              peergroup = VARIABLE:'as1'  <== mode:M_NEIGHBOR",
            "              (bgp_tail*",
            "                (route_map_bgp_tail",
            "                  ROUTE_MAP:'route-map'",
            "                  name = (variable*",
            "                    VARIABLE:'as1_to_as3'  <== mode:M_RouteMap)",
            "                  IN:'in'",
            "                  NEWLINE:'\\n'))))",
            "          (address_family_inner*",
            "            (neighbor_flat_rb_stanza",
            "              NEIGHBOR:'neighbor'",
            "              peergroup = VARIABLE:'as2'  <== mode:M_NEIGHBOR",
            "              (bgp_tail*",
            "                (route_map_bgp_tail",
            "                  ROUTE_MAP:'route-map'",
            "                  name = (variable*",
            "                    VARIABLE:'as3_to_as2'  <== mode:M_RouteMap)",
            "                  OUT:'out'",
            "                  NEWLINE:'\\n'))))",
            "          (address_family_inner*",
            "            (neighbor_flat_rb_stanza",
            "              NEIGHBOR:'neighbor'",
            "              peergroup = VARIABLE:'as2'  <== mode:M_NEIGHBOR",
            "              (bgp_tail*",
            "                (route_map_bgp_tail",
            "                  ROUTE_MAP:'route-map'",
            "                  name = (variable*",
            "                    VARIABLE:'as2_to_as3'  <== mode:M_RouteMap)",
            "                  IN:'in'",
            "                  NEWLINE:'\\n'))))",
            "          (address_family_inner*",
            "            (neighbor_flat_rb_stanza",
            "              NEIGHBOR:'neighbor'",
            "              ip = IP_ADDRESS:'3.10.1.1'  <== mode:M_NEIGHBOR",
            "              (bgp_tail*",
            "                (activate_bgp_tail",
            "                  ACTIVATE:'activate'",
            "                  NEWLINE:'\\n'))))",
            "          (address_family_inner*",
            "            (neighbor_flat_rb_stanza",
            "              NEIGHBOR:'neighbor'",
            "              ip = IP_ADDRESS:'10.23.21.2'  <== mode:M_NEIGHBOR",
            "              (bgp_tail*",
            "                (activate_bgp_tail",
            "                  ACTIVATE:'activate'",
            "                  NEWLINE:'\\n'))))",
            "          (address_family_inner*",
            "            (bgp_tail*",
            "              (maximum_paths_bgp_tail",
            "                MAXIMUM_PATHS:'maximum-paths'",
            "                paths = (dec*",
            "                  UINT8:'5')",
            "                NEWLINE:'\\n')))",
            "          (address_family_inner*",
            "            (bgp_tail*",
            "              (null_bgp_tail*",
            "                NO:'no'",
            "                AUTO_SUMMARY:'auto-summary'",
            "                (null_rest_of_line*",
            "                  NEWLINE:'\\n'))))",
            "          (address_family_inner*",
            "            (bgp_tail*",
            "              (null_bgp_tail*",
            "                NO:'no'",
            "                SYNCHRONIZATION:'synchronization'",
            "                (null_rest_of_line*",
            "                  NEWLINE:'\\n'))))",
            "          (address_family_inner*",
            "            (bgp_tail*",
            "              (bgp_bgp_tail*",
            "                BGP:'bgp'",
            "                (bgp_dampening_bgp_tail_null*",
            "                  DAMPENING:'dampening'",
            "                  (null_rest_of_line*",
            "                    NEWLINE:'\\n')))))",
            "          (address_family_inner*",
            "            (bgp_tail*",
            "              (network_bgp_tail",
            "                NETWORK:'network'",
            "                ip = IP_ADDRESS:'3.0.1.0'",
            "                MASK:'mask'",
            "                mask = IP_ADDRESS:'255.255.255.0'",
            "                NEWLINE:'\\n')))",
            "          (address_family_inner*",
            "            (bgp_tail*",
            "              (network_bgp_tail",
            "                NETWORK:'network'",
            "                ip = IP_ADDRESS:'3.0.2.0'",
            "                MASK:'mask'",
            "                mask = IP_ADDRESS:'255.255.255.0'",
            "                NEWLINE:'\\n')))",
            "          (address_family_footer*",
            "            EXIT_ADDRESS_FAMILY:'exit-address-family'",
            "            NEWLINE:'\\n')))))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        IP:'ip'",
            "        FORWARD_PROTOCOL:'forward-protocol'",
            "        ND:'nd'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        IP:'ip'",
            "        BGP_COMMUNITY:'bgp-community'",
            "        VARIABLE:'new-format'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (ip_community_list_expanded_stanza",
            "      IP:'ip'",
            "      COMMUNITY_LIST:'community-list'",
            "      EXPANDED:'expanded'",
            "      name = (variable*",
            "        VARIABLE:'as1_community')",
            "      (ip_community_list_expanded_tail",
            "        ala = (access_list_action*",
            "          PERMIT:'permit')",
            "        VARIABLE:'_1:'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (ip_community_list_expanded_stanza",
            "      IP:'ip'",
            "      COMMUNITY_LIST:'community-list'",
            "      EXPANDED:'expanded'",
            "      name = (variable*",
            "        VARIABLE:'as2_community')",
            "      (ip_community_list_expanded_tail",
            "        ala = (access_list_action*",
            "          PERMIT:'permit')",
            "        VARIABLE:'_2:'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (ip_community_list_expanded_stanza",
            "      IP:'ip'",
            "      COMMUNITY_LIST:'community-list'",
            "      EXPANDED:'expanded'",
            "      name = (variable*",
            "        VARIABLE:'as3_community')",
            "      (ip_community_list_expanded_tail",
            "        ala = (access_list_action*",
            "          PERMIT:'permit')",
            "        VARIABLE:'_3:'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        NO:'no'",
            "        IP:'ip'",
            "        HTTP:'http'",
            "        SERVER:'server'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        NO:'no'",
            "        IP:'ip'",
            "        HTTP:'http'",
            "        VARIABLE:'secure-server'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (ip_prefix_list_stanza",
            "      IP:'ip'",
            "      PREFIX_LIST:'prefix-list'",
            "      name = (variable*",
            "        VARIABLE:'inbound_route_filter'  <== mode:M_Name)",
            "      (ip_prefix_list_tail",
            "        SEQ:'seq'",
            "        seqnum = (dec*",
            "          UINT8:'5')",
            "        action = (access_list_action*",
            "          DENY:'deny')",
            "        prefix = IP_PREFIX:'3.0.0.0/8'",
            "        LE:'le'",
            "        maxpl = (dec*",
            "          UINT8:'32')",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (ip_prefix_list_stanza",
            "      IP:'ip'",
            "      PREFIX_LIST:'prefix-list'",
            "      name = (variable*",
            "        VARIABLE:'inbound_route_filter'  <== mode:M_Name)",
            "      (ip_prefix_list_tail",
            "        SEQ:'seq'",
            "        seqnum = (dec*",
            "          UINT8:'10')",
            "        action = (access_list_action*",
            "          PERMIT:'permit')",
            "        prefix = IP_PREFIX:'0.0.0.0/0'",
            "        LE:'le'",
            "        maxpl = (dec*",
            "          UINT8:'32')",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (extended_access_list_stanza",
            "      ACCESS_LIST:'access-list'",
            "      num = ACL_NUM_EXTENDED:'101'",
            "      (extended_access_list_tail",
            "        ala = (access_list_action*",
            "          PERMIT:'permit')",
            "        prot = (protocol*",
            "          IP:'ip')",
            "        srcipr = (access_list_ip_range*",
            "          HOST:'host'",
            "          ip = IP_ADDRESS:'1.0.1.0')",
            "        dstipr = (access_list_ip_range*",
            "          HOST:'host'",
            "          ip = IP_ADDRESS:'255.255.255.0')",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (extended_access_list_stanza",
            "      ACCESS_LIST:'access-list'",
            "      num = ACL_NUM_EXTENDED:'101'",
            "      (extended_access_list_tail",
            "        ala = (access_list_action*",
            "          PERMIT:'permit')",
            "        prot = (protocol*",
            "          IP:'ip')",
            "        srcipr = (access_list_ip_range*",
            "          HOST:'host'",
            "          ip = IP_ADDRESS:'1.0.2.0')",
            "        dstipr = (access_list_ip_range*",
            "          HOST:'host'",
            "          ip = IP_ADDRESS:'255.255.255.0')",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (extended_access_list_stanza",
            "      ACCESS_LIST:'access-list'",
            "      num = ACL_NUM_EXTENDED:'102'",
            "      (extended_access_list_tail",
            "        ala = (access_list_action*",
            "          PERMIT:'permit')",
            "        prot = (protocol*",
            "          IP:'ip')",
            "        srcipr = (access_list_ip_range*",
            "          HOST:'host'",
            "          ip = IP_ADDRESS:'2.0.0.0')",
            "        dstipr = (access_list_ip_range*",
            "          HOST:'host'",
            "          ip = IP_ADDRESS:'255.0.0.0')",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (extended_access_list_stanza",
            "      ACCESS_LIST:'access-list'",
            "      num = ACL_NUM_EXTENDED:'102'",
            "      (extended_access_list_tail",
            "        ala = (access_list_action*",
            "          PERMIT:'permit')",
            "        prot = (protocol*",
            "          IP:'ip')",
            "        srcipr = (access_list_ip_range*",
            "          HOST:'host'",
            "          ip = IP_ADDRESS:'2.128.0.0')",
            "        dstipr = (access_list_ip_range*",
            "          HOST:'host'",
            "          ip = IP_ADDRESS:'255.255.0.0')",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (extended_access_list_stanza",
            "      ACCESS_LIST:'access-list'",
            "      num = ACL_NUM_EXTENDED:'103'",
            "      (extended_access_list_tail",
            "        ala = (access_list_action*",
            "          PERMIT:'permit')",
            "        prot = (protocol*",
            "          IP:'ip')",
            "        srcipr = (access_list_ip_range*",
            "          HOST:'host'",
            "          ip = IP_ADDRESS:'3.0.1.0')",
            "        dstipr = (access_list_ip_range*",
            "          HOST:'host'",
            "          ip = IP_ADDRESS:'255.255.255.0')",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (extended_access_list_stanza",
            "      ACCESS_LIST:'access-list'",
            "      num = ACL_NUM_EXTENDED:'103'",
            "      (extended_access_list_tail",
            "        ala = (access_list_action*",
            "          PERMIT:'permit')",
            "        prot = (protocol*",
            "          IP:'ip')",
            "        srcipr = (access_list_ip_range*",
            "          HOST:'host'",
            "          ip = IP_ADDRESS:'3.0.2.0')",
            "        dstipr = (access_list_ip_range*",
            "          HOST:'host'",
            "          ip = IP_ADDRESS:'255.255.255.0')",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (route_map_stanza",
            "      ROUTE_MAP:'route-map'",
            "      name = (variable*",
            "        VARIABLE:'as3_to_as1'  <== mode:M_RouteMap)",
            "      rmt = (access_list_action*",
            "        PERMIT:'permit')",
            "      num = (dec*",
            "        UINT8:'2')",
            "      NEWLINE:'\\n'",
            "      (rm_stanza*",
            "        (match_rm_stanza*",
            "          MATCH:'match'",
            "          (match_ip_access_list_rm_stanza",
            "            IP:'ip'",
            "            ADDRESS:'address'",
            "            (variable_access_list*",
            "              UINT8:'102')",
            "            NEWLINE:'\\n')))",
            "      (rm_stanza*",
            "        (set_rm_stanza*",
            "          (set_metric_rm_stanza",
            "            SET:'set'",
            "            METRIC:'metric'",
            "            metric = (int_expr*",
            "              (dec*",
            "                UINT8:'50'))",
            "            NEWLINE:'\\n')))",
            "      (rm_stanza*",
            "        (set_rm_stanza*",
            "          (set_community_additive_rm_stanza",
            "            SET:'set'",
            "            COMMUNITY:'community'",
            "            (community*",
            "              STANDARD_COMMUNITY:'3:1')",
            "            ADDITIVE:'additive'",
            "            NEWLINE:'\\n')))))",
            "  (stanza*",
            "    (route_map_stanza",
            "      ROUTE_MAP:'route-map'",
            "      name = (variable*",
            "        VARIABLE:'as3_to_as1'  <== mode:M_RouteMap)",
            "      rmt = (access_list_action*",
            "        PERMIT:'permit')",
            "      num = (dec*",
            "        UINT8:'3')",
            "      NEWLINE:'\\n'",
            "      (rm_stanza*",
            "        (match_rm_stanza*",
            "          MATCH:'match'",
            "          (match_ip_access_list_rm_stanza",
            "            IP:'ip'",
            "            ADDRESS:'address'",
            "            (variable_access_list*",
            "              UINT8:'103')",
            "            NEWLINE:'\\n')))",
            "      (rm_stanza*",
            "        (set_rm_stanza*",
            "          (set_metric_rm_stanza",
            "            SET:'set'",
            "            METRIC:'metric'",
            "            metric = (int_expr*",
            "              (dec*",
            "                UINT8:'50'))",
            "            NEWLINE:'\\n')))",
            "      (rm_stanza*",
            "        (set_rm_stanza*",
            "          (set_community_additive_rm_stanza",
            "            SET:'set'",
            "            COMMUNITY:'community'",
            "            (community*",
            "              STANDARD_COMMUNITY:'3:1')",
            "            ADDITIVE:'additive'",
            "            NEWLINE:'\\n')))))",
            "  (stanza*",
            "    (route_map_stanza",
            "      ROUTE_MAP:'route-map'",
            "      name = (variable*",
            "        VARIABLE:'as1_to_as3'  <== mode:M_RouteMap)",
            "      rmt = (access_list_action*",
            "        PERMIT:'permit')",
            "      num = (dec*",
            "        UINT8:'100')",
            "      NEWLINE:'\\n'",
            "      (rm_stanza*",
            "        (match_rm_stanza*",
            "          MATCH:'match'",
            "          (match_community_list_rm_stanza",
            "            COMMUNITY:'community'",
            "            (variable*",
            "              VARIABLE:'as1_community')",
            "            NEWLINE:'\\n')))",
            "      (rm_stanza*",
            "        (set_rm_stanza*",
            "          (set_local_preference_rm_stanza",
            "            SET:'set'",
            "            LOCAL_PREFERENCE:'local-preference'",
            "            pref = (int_expr*",
            "              (dec*",
            "                UINT16:'350'))",
            "            NEWLINE:'\\n')))))",
            "  (stanza*",
            "    (route_map_stanza",
            "      ROUTE_MAP:'route-map'",
            "      name = (variable*",
            "        VARIABLE:'as3_to_as2'  <== mode:M_RouteMap)",
            "      rmt = (access_list_action*",
            "        PERMIT:'permit')",
            "      num = (dec*",
            "        UINT8:'1')",
            "      NEWLINE:'\\n'",
            "      (rm_stanza*",
            "        (match_rm_stanza*",
            "          MATCH:'match'",
            "          (match_ip_access_list_rm_stanza",
            "            IP:'ip'",
            "            ADDRESS:'address'",
            "            (variable_access_list*",
            "              UINT8:'101')",
            "            NEWLINE:'\\n')))",
            "      (rm_stanza*",
            "        (set_rm_stanza*",
            "          (set_metric_rm_stanza",
            "            SET:'set'",
            "            METRIC:'metric'",
            "            metric = (int_expr*",
            "              (dec*",
            "                UINT8:'50'))",
            "            NEWLINE:'\\n')))",
            "      (rm_stanza*",
            "        (set_rm_stanza*",
            "          (set_community_additive_rm_stanza",
            "            SET:'set'",
            "            COMMUNITY:'community'",
            "            (community*",
            "              STANDARD_COMMUNITY:'3:2')",
            "            ADDITIVE:'additive'",
            "            NEWLINE:'\\n')))))",
            "  (stanza*",
            "    (route_map_stanza",
            "      ROUTE_MAP:'route-map'",
            "      name = (variable*",
            "        VARIABLE:'as3_to_as2'  <== mode:M_RouteMap)",
            "      rmt = (access_list_action*",
            "        PERMIT:'permit')",
            "      num = (dec*",
            "        UINT8:'3')",
            "      NEWLINE:'\\n'",
            "      (rm_stanza*",
            "        (match_rm_stanza*",
            "          MATCH:'match'",
            "          (match_ip_access_list_rm_stanza",
            "            IP:'ip'",
            "            ADDRESS:'address'",
            "            (variable_access_list*",
            "              UINT8:'103')",
            "            NEWLINE:'\\n')))",
            "      (rm_stanza*",
            "        (set_rm_stanza*",
            "          (set_metric_rm_stanza",
            "            SET:'set'",
            "            METRIC:'metric'",
            "            metric = (int_expr*",
            "              (dec*",
            "                UINT8:'50'))",
            "            NEWLINE:'\\n')))",
            "      (rm_stanza*",
            "        (set_rm_stanza*",
            "          (set_community_additive_rm_stanza",
            "            SET:'set'",
            "            COMMUNITY:'community'",
            "            (community*",
            "              STANDARD_COMMUNITY:'3:2')",
            "            ADDITIVE:'additive'",
            "            NEWLINE:'\\n')))))",
            "  (stanza*",
            "    (route_map_stanza",
            "      ROUTE_MAP:'route-map'",
            "      name = (variable*",
            "        VARIABLE:'as2_to_as3'  <== mode:M_RouteMap)",
            "      rmt = (access_list_action*",
            "        PERMIT:'permit')",
            "      num = (dec*",
            "        UINT8:'100')",
            "      NEWLINE:'\\n'",
            "      (rm_stanza*",
            "        (match_rm_stanza*",
            "          MATCH:'match'",
            "          (match_community_list_rm_stanza",
            "            COMMUNITY:'community'",
            "            (variable*",
            "              VARIABLE:'as2_community')",
            "            NEWLINE:'\\n')))",
            "      (rm_stanza*",
            "        (set_rm_stanza*",
            "          (set_local_preference_rm_stanza",
            "            SET:'set'",
            "            LOCAL_PREFERENCE:'local-preference'",
            "            pref = (int_expr*",
            "              (dec*",
            "                UINT16:'350'))",
            "            NEWLINE:'\\n')))))",
            "  (stanza*",
            "    (s_control_plane*",
            "      CONTROL_PLANE:'control-plane'",
            "      NEWLINE:'\\n'))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        MGCP:'mgcp'",
            "        VARIABLE:'behavior'",
            "        VARIABLE:'g729-variants'",
            "        VARIABLE:'static-pt'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_gatekeeper*",
            "      GATEKEEPER:'gatekeeper'",
            "      NEWLINE:'\\n'",
            "      (gk_null*",
            "        SHUTDOWN:'shutdown'",
            "        (null_rest_of_line*",
            "          NEWLINE:'\\n'))))",
            "  (stanza*",
            "    (s_line",
            "      LINE:'line'",
            "      (line_type*",
            "        CON:'con')",
            "      first = (dec*",
            "        UINT8:'0')",
            "      NEWLINE:'\\n'",
            "      (l_exec_timeout",
            "        EXEC_TIMEOUT:'exec-timeout'",
            "        minutes = (dec*",
            "          UINT8:'0')",
            "        seconds = (dec*",
            "          UINT8:'0')",
            "        NEWLINE:'\\n')",
            "      (l_null*",
            "        PRIVILEGE:'privilege'",
            "        (null_rest_of_line*",
            "          LEVEL:'level'",
            "          UINT8:'15'",
            "          NEWLINE:'\\n'))",
            "      (l_null*",
            "        LOGGING:'logging'",
            "        (null_rest_of_line*",
            "          SYNCHRONOUS:'synchronous'",
            "          NEWLINE:'\\n'))))",
            "  (stanza*",
            "    (s_line",
            "      LINE:'line'",
            "      (line_type*",
            "        AUX:'aux')",
            "      first = (dec*",
            "        UINT8:'0')",
            "      NEWLINE:'\\n'",
            "      (l_exec_timeout",
            "        EXEC_TIMEOUT:'exec-timeout'",
            "        minutes = (dec*",
            "          UINT8:'0')",
            "        seconds = (dec*",
            "          UINT8:'0')",
            "        NEWLINE:'\\n')",
            "      (l_null*",
            "        PRIVILEGE:'privilege'",
            "        (null_rest_of_line*",
            "          LEVEL:'level'",
            "          UINT8:'15'",
            "          NEWLINE:'\\n'))",
            "      (l_null*",
            "        LOGGING:'logging'",
            "        (null_rest_of_line*",
            "          SYNCHRONOUS:'synchronous'",
            "          NEWLINE:'\\n'))))",
            "  (stanza*",
            "    (s_line",
            "      LINE:'line'",
            "      (line_type*",
            "        VTY:'vty')",
            "      first = (dec*",
            "        UINT8:'0')",
            "      last = (dec*",
            "        UINT8:'4')",
            "      NEWLINE:'\\n'))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        END:'end'",
            "        NEWLINE:'\\n\\n')))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/as3border2.cfg" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        VERSION:'version'",
            "        FLOAT:'12.4'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_service",
            "      SERVICE:'service'",
            "      (variable*",
            "        VARIABLE:'timestamps')",
            "      (variable*",
            "        DEBUG:'debug')",
            "      (variable*",
            "        VARIABLE:'datetime')",
            "      (variable*",
            "        MSEC:'msec')",
            "      NEWLINE:'\\n'))",
            "  (stanza*",
            "    (s_service",
            "      SERVICE:'service'",
            "      (variable*",
            "        VARIABLE:'timestamps')",
            "      (variable*",
            "        LOG:'log')",
            "      (variable*",
            "        VARIABLE:'datetime')",
            "      (variable*",
            "        MSEC:'msec')",
            "      NEWLINE:'\\n'))",
            "  (stanza*",
            "    (s_service",
            "      NO:'no'",
            "      SERVICE:'service'",
            "      (variable*",
            "        VARIABLE:'password-encryption')",
            "      NEWLINE:'\\n'))",
            "  (stanza*",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'as3border2'",
            "      NEWLINE:'\\n'))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        BOOT_START_MARKER:'boot-start-marker'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        BOOT_END_MARKER:'boot-end-marker'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_aaa",
            "      NO:'no'",
            "      AAA:'aaa'",
            "      (aaa_new_model",
            "        NEW_MODEL:'new-model'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        MEMORY_SIZE:'memory-size'",
            "        VARIABLE:'iomem'",
            "        UINT8:'5'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        IP:'ip'",
            "        CEF:'cef'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_ip_domain",
            "      NO:'no'",
            "      IP:'ip'",
            "      DOMAIN:'domain'",
            "      (ip_domain_lookup",
            "        LOOKUP:'lookup'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_ip_domain",
            "      IP:'ip'",
            "      DOMAIN:'domain'",
            "      (ip_domain_name",
            "        NAME:'name'",
            "        hostname = (variable_hostname*",
            "          VARIABLE:'lab.local'  <== mode:M_Name)",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        IP:'ip'",
            "        AUTH_PROXY:'auth-proxy'",
            "        VARIABLE:'max-nodata-conns'",
            "        UINT8:'3'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        IP:'ip'",
            "        ADMISSION:'admission'",
            "        VARIABLE:'max-nodata-conns'",
            "        UINT8:'3'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_interface*",
            "      INTERFACE:'interface'",
            "      (s_interface_definition",
            "        iname = (interface_name*",
            "          name_prefix_alpha = M_Interface_PREFIX:'Loopback'  <== mode:M_Interface",
            "          (range*",
            "            (subrange*",
            "              low = (dec*",
            "                DEC:'0'  <== mode:M_Interface))))",
            "        NEWLINE:'\\n'  <== mode:M_Interface",
            "        (if_inner*",
            "          (if_ip_address",
            "            IP:'ip'",
            "            ADDRESS:'address'",
            "            ip = IP_ADDRESS:'3.2.2.2'",
            "            subnet = IP_ADDRESS:'255.255.255.255'",
            "            NEWLINE:'\\n')))))",
            "  (stanza*",
            "    (s_interface*",
            "      INTERFACE:'interface'",
            "      (s_interface_definition",
            "        iname = (interface_name*",
            "          name_prefix_alpha = M_Interface_PREFIX:'FastEthernet'  <== mode:M_Interface",
            "          DEC:'0'  <== mode:M_Interface",
            "          FORWARD_SLASH:'/'  <== mode:M_Interface",
            "          (range*",
            "            (subrange*",
            "              low = (dec*",
            "                DEC:'0'  <== mode:M_Interface))))",
            "        NEWLINE:'\\n'  <== mode:M_Interface",
            "        (if_inner*",
            "          (if_ip_address",
            "            IP:'ip'",
            "            ADDRESS:'address'",
            "            ip = IP_ADDRESS:'3.0.2.1'",
            "            subnet = IP_ADDRESS:'255.255.255.0'",
            "            NEWLINE:'\\n'))",
            "        (if_inner*",
            "          (if_null_block*",
            "            DUPLEX:'duplex'",
            "            AUTO:'auto'",
            "            NEWLINE:'\\n'))",
            "        (if_inner*",
            "          (if_speed_auto*",
            "            SPEED:'speed'",
            "            AUTO:'auto'",
            "            NEWLINE:'\\n')))))",
            "  (stanza*",
            "    (s_interface*",
            "      INTERFACE:'interface'",
            "      (s_interface_definition",
            "        iname = (interface_name*",
            "          name_prefix_alpha = M_Interface_PREFIX:'FastEthernet'  <== mode:M_Interface",
            "          DEC:'0'  <== mode:M_Interface",
            "          FORWARD_SLASH:'/'  <== mode:M_Interface",
            "          (range*",
            "            (subrange*",
            "              low = (dec*",
            "                DEC:'1'  <== mode:M_Interface))))",
            "        NEWLINE:'\\n'  <== mode:M_Interface",
            "        (if_inner*",
            "          (if_ip_address",
            "            IP:'ip'",
            "            ADDRESS:'address'",
            "            ip = IP_ADDRESS:'10.13.22.3'",
            "            subnet = IP_ADDRESS:'255.255.255.0'",
            "            NEWLINE:'\\n'))",
            "        (if_inner*",
            "          (if_null_block*",
            "            DUPLEX:'duplex'",
            "            AUTO:'auto'",
            "            NEWLINE:'\\n'))",
            "        (if_inner*",
            "          (if_speed_auto*",
            "            SPEED:'speed'",
            "            AUTO:'auto'",
            "            NEWLINE:'\\n')))))",
            "  (stanza*",
            "    (s_router_ospf",
            "      ROUTER:'router'",
            "      OSPF:'ospf'",
            "      name = (variable*",
            "        UINT8:'1')",
            "      NEWLINE:'\\n'",
            "      (ro_inner*",
            "        (ro_router_id",
            "          ROUTER_ID:'router-id'",
            "          ip = IP_ADDRESS:'3.2.2.2'",
            "          NEWLINE:'\\n'))",
            "      (ro_inner*",
            "        (ro_common*",
            "          (ro_null*",
            "            LOG_ADJACENCY_CHANGES:'log-adjacency-changes'",
            "            (null_rest_of_line*",
            "              NEWLINE:'\\n'))))",
            "      (ro_inner*",
            "        (ro_redistribute_connected",
            "          REDISTRIBUTE:'redistribute'",
            "          CONNECTED:'connected'",
            "          subnets = SUBNETS:'subnets'",
            "          NEWLINE:'\\n'))",
            "      (ro_inner*",
            "        (ro_network",
            "          NETWORK:'network'",
            "          ip = IP_ADDRESS:'3.0.0.0'",
            "          wildcard = IP_ADDRESS:'0.255.255.255'",
            "          AREA:'area'",
            "          area_int = (dec*",
            "            UINT8:'1')",
            "          NEWLINE:'\\n'))))",
            "  (stanza*",
            "    (router_bgp_stanza",
            "      ROUTER:'router'",
            "      BGP:'bgp'",
            "      procnum = (bgp_asn*",
            "        asn = (uint32*",
            "          UINT8:'3'))",
            "      NEWLINE:'\\n'",
            "      (router_bgp_stanza_tail*",
            "        (router_id_rb_stanza*",
            "          BGP:'bgp'",
            "          (router_id_bgp_tail",
            "            ROUTER_ID:'router-id'",
            "            routerid = IP_ADDRESS:'3.2.2.2'",
            "            NEWLINE:'\\n')))",
            "      (router_bgp_stanza_tail*",
            "        (bgp_rb_stanza*",
            "          BGP:'bgp'",
            "          (bgp_log_neighbor_changes_rb_stanza_null*",
            "            LOG_NEIGHBOR_CHANGES:'log-neighbor-changes'",
            "            (null_rest_of_line*",
            "              NEWLINE:'\\n'))))",
            "      (router_bgp_stanza_tail*",
            "        (peer_group_creation_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          name = VARIABLE:'as1'  <== mode:M_NEIGHBOR",
            "          PEER_GROUP:'peer-group'",
            "          NEWLINE:'\\n'  <== mode:M_NEIGHBOR))",
            "      (router_bgp_stanza_tail*",
            "        (neighbor_flat_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          peergroup = VARIABLE:'as1'  <== mode:M_NEIGHBOR",
            "          (remote_as_bgp_tail",
            "            REMOTE_AS:'remote-as'",
            "            remote = (bgp_asn*",
            "              asn = (uint32*",
            "                UINT8:'1'))",
            "            NEWLINE:'\\n')))",
            "      (router_bgp_stanza_tail*",
            "        (peer_group_creation_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          name = VARIABLE:'as2'  <== mode:M_NEIGHBOR",
            "          PEER_GROUP:'peer-group'",
            "          NEWLINE:'\\n'  <== mode:M_NEIGHBOR))",
            "      (router_bgp_stanza_tail*",
            "        (neighbor_flat_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          peergroup = VARIABLE:'as2'  <== mode:M_NEIGHBOR",
            "          (remote_as_bgp_tail",
            "            REMOTE_AS:'remote-as'",
            "            remote = (bgp_asn*",
            "              asn = (uint32*",
            "                UINT8:'2'))",
            "            NEWLINE:'\\n')))",
            "      (router_bgp_stanza_tail*",
            "        (peer_group_creation_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          name = VARIABLE:'as3'  <== mode:M_NEIGHBOR",
            "          PEER_GROUP:'peer-group'",
            "          NEWLINE:'\\n'  <== mode:M_NEIGHBOR))",
            "      (router_bgp_stanza_tail*",
            "        (neighbor_flat_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          peergroup = VARIABLE:'as3'  <== mode:M_NEIGHBOR",
            "          (remote_as_bgp_tail",
            "            REMOTE_AS:'remote-as'",
            "            remote = (bgp_asn*",
            "              asn = (uint32*",
            "                UINT8:'3'))",
            "            NEWLINE:'\\n')))",
            "      (router_bgp_stanza_tail*",
            "        (peer_group_assignment_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          address = IP_ADDRESS:'3.10.1.1'  <== mode:M_NEIGHBOR",
            "          PEER_GROUP:'peer-group'",
            "          name = (variable*",
            "            VARIABLE:'as3'  <== mode:M_NEIGHBOR)",
            "          NEWLINE:'\\n'))",
            "      (router_bgp_stanza_tail*",
            "        (neighbor_flat_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          ip = IP_ADDRESS:'3.10.1.1'  <== mode:M_NEIGHBOR",
            "          (bgp_tail*",
            "            (update_source_bgp_tail",
            "              UPDATE_SOURCE:'update-source'",
            "              source = (interface_name*",
            "                name_prefix_alpha = M_Interface_PREFIX:'Loopback'  <== mode:M_Interface",
            "                (range*",
            "                  (subrange*",
            "                    low = (dec*",
            "                      DEC:'0'  <== mode:M_Interface))))",
            "              NEWLINE:'\\n'  <== mode:M_Interface))))",
            "      (router_bgp_stanza_tail*",
            "        (peer_group_assignment_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          address = IP_ADDRESS:'10.13.22.1'  <== mode:M_NEIGHBOR",
            "          PEER_GROUP:'peer-group'",
            "          name = (variable*",
            "            VARIABLE:'as1'  <== mode:M_NEIGHBOR)",
            "          NEWLINE:'\\n'))",
            "      (router_bgp_stanza_tail*",
            "        (bgp_tail*",
            "          (maximum_paths_bgp_tail",
            "            MAXIMUM_PATHS:'maximum-paths'",
            "            paths = (dec*",
            "              UINT8:'5')",
            "            NEWLINE:'\\n')))",
            "      (router_bgp_stanza_tail*",
            "        (address_family_rb_stanza",
            "          (address_family_header",
            "            ADDRESS_FAMILY:'address-family'",
            "            af = (bgp_address_family*",
            "              IPV4:'ipv4')",
            "            NEWLINE:'\\n')",
            "          (address_family_inner*",
            "            (neighbor_flat_rb_stanza",
            "              NEIGHBOR:'neighbor'",
            "              peergroup = VARIABLE:'as1'  <== mode:M_NEIGHBOR",
            "              (bgp_tail*",
            "                (send_community_bgp_tail",
            "                  SEND_COMMUNITY:'send-community'",
            "                  NEWLINE:'\\n'))))",
            "          (address_family_inner*",
            "            (neighbor_flat_rb_stanza",
            "              NEIGHBOR:'neighbor'",
            "              peergroup = VARIABLE:'as2'  <== mode:M_NEIGHBOR",
            "              (bgp_tail*",
            "                (send_community_bgp_tail",
            "                  SEND_COMMUNITY:'send-community'",
            "                  NEWLINE:'\\n'))))",
            "          (address_family_inner*",
            "            (neighbor_flat_rb_stanza",
            "              NEIGHBOR:'neighbor'",
            "              peergroup = VARIABLE:'as3'  <== mode:M_NEIGHBOR",
            "              (bgp_tail*",
            "                (send_community_bgp_tail",
            "                  SEND_COMMUNITY:'send-community'",
            "                  NEWLINE:'\\n'))))",
            "          (address_family_inner*",
            "            (neighbor_flat_rb_stanza",
            "              NEIGHBOR:'neighbor'",
            "              peergroup = VARIABLE:'as1'  <== mode:M_NEIGHBOR",
            "              (bgp_tail*",
            "                (route_map_bgp_tail",
            "                  ROUTE_MAP:'route-map'",
            "                  name = (variable*",
            "                    VARIABLE:'as3_to_as1'  <== mode:M_RouteMap)",
            "                  OUT:'out'",
            "                  NEWLINE:'\\n'))))",
            "          (address_family_inner*",
            "            (neighbor_flat_rb_stanza",
            "              NEIGHBOR:'neighbor'",
            "              peergroup = VARIABLE:'as1'  <== mode:M_NEIGHBOR",
            "              (bgp_tail*",
            "                (route_map_bgp_tail",
            "                  ROUTE_MAP:'route-map'",
            "                  name = (variable*",
            "                    VARIABLE:'as1_to_as3'  <== mode:M_RouteMap)",
            "                  IN:'in'",
            "                  NEWLINE:'\\n'))))",
            "          (address_family_inner*",
            "            (neighbor_flat_rb_stanza",
            "              NEIGHBOR:'neighbor'",
            "              peergroup = VARIABLE:'as2'  <== mode:M_NEIGHBOR",
            "              (bgp_tail*",
            "                (route_map_bgp_tail",
            "                  ROUTE_MAP:'route-map'",
            "                  name = (variable*",
            "                    VARIABLE:'as3_to_as2'  <== mode:M_RouteMap)",
            "                  OUT:'out'",
            "                  NEWLINE:'\\n'))))",
            "          (address_family_inner*",
            "            (neighbor_flat_rb_stanza",
            "              NEIGHBOR:'neighbor'",
            "              peergroup = VARIABLE:'as2'  <== mode:M_NEIGHBOR",
            "              (bgp_tail*",
            "                (route_map_bgp_tail",
            "                  ROUTE_MAP:'route-map'",
            "                  name = (variable*",
            "                    VARIABLE:'as2_to_as3'  <== mode:M_RouteMap)",
            "                  IN:'in'",
            "                  NEWLINE:'\\n'))))",
            "          (address_family_inner*",
            "            (neighbor_flat_rb_stanza",
            "              NEIGHBOR:'neighbor'",
            "              ip = IP_ADDRESS:'3.10.1.1'  <== mode:M_NEIGHBOR",
            "              (bgp_tail*",
            "                (activate_bgp_tail",
            "                  ACTIVATE:'activate'",
            "                  NEWLINE:'\\n'))))",
            "          (address_family_inner*",
            "            (neighbor_flat_rb_stanza",
            "              NEIGHBOR:'neighbor'",
            "              ip = IP_ADDRESS:'10.13.22.1'  <== mode:M_NEIGHBOR",
            "              (bgp_tail*",
            "                (activate_bgp_tail",
            "                  ACTIVATE:'activate'",
            "                  NEWLINE:'\\n'))))",
            "          (address_family_inner*",
            "            (bgp_tail*",
            "              (maximum_paths_bgp_tail",
            "                MAXIMUM_PATHS:'maximum-paths'",
            "                paths = (dec*",
            "                  UINT8:'5')",
            "                NEWLINE:'\\n')))",
            "          (address_family_inner*",
            "            (bgp_tail*",
            "              (null_bgp_tail*",
            "                NO:'no'",
            "                AUTO_SUMMARY:'auto-summary'",
            "                (null_rest_of_line*",
            "                  NEWLINE:'\\n'))))",
            "          (address_family_inner*",
            "            (bgp_tail*",
            "              (null_bgp_tail*",
            "                NO:'no'",
            "                SYNCHRONIZATION:'synchronization'",
            "                (null_rest_of_line*",
            "                  NEWLINE:'\\n'))))",
            "          (address_family_inner*",
            "            (bgp_tail*",
            "              (bgp_bgp_tail*",
            "                BGP:'bgp'",
            "                (bgp_dampening_bgp_tail_null*",
            "                  DAMPENING:'dampening'",
            "                  (null_rest_of_line*",
            "                    NEWLINE:'\\n')))))",
            "          (address_family_inner*",
            "            (bgp_tail*",
            "              (network_bgp_tail",
            "                NETWORK:'network'",
            "                ip = IP_ADDRESS:'3.0.1.0'",
            "                MASK:'mask'",
            "                mask = IP_ADDRESS:'255.255.255.0'",
            "                NEWLINE:'\\n')))",
            "          (address_family_inner*",
            "            (bgp_tail*",
            "              (network_bgp_tail",
            "                NETWORK:'network'",
            "                ip = IP_ADDRESS:'3.0.2.0'",
            "                MASK:'mask'",
            "                mask = IP_ADDRESS:'255.255.255.0'",
            "                NEWLINE:'\\n')))",
            "          (address_family_footer*",
            "            EXIT_ADDRESS_FAMILY:'exit-address-family'",
            "            NEWLINE:'\\n')))))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        IP:'ip'",
            "        FORWARD_PROTOCOL:'forward-protocol'",
            "        ND:'nd'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        IP:'ip'",
            "        BGP_COMMUNITY:'bgp-community'",
            "        VARIABLE:'new-format'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (ip_community_list_expanded_stanza",
            "      IP:'ip'",
            "      COMMUNITY_LIST:'community-list'",
            "      EXPANDED:'expanded'",
            "      name = (variable*",
            "        VARIABLE:'as1_community')",
            "      (ip_community_list_expanded_tail",
            "        ala = (access_list_action*",
            "          PERMIT:'permit')",
            "        VARIABLE:'_1:'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (ip_community_list_expanded_stanza",
            "      IP:'ip'",
            "      COMMUNITY_LIST:'community-list'",
            "      EXPANDED:'expanded'",
            "      name = (variable*",
            "        VARIABLE:'as2_community')",
            "      (ip_community_list_expanded_tail",
            "        ala = (access_list_action*",
            "          PERMIT:'permit')",
            "        VARIABLE:'_2:'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (ip_community_list_expanded_stanza",
            "      IP:'ip'",
            "      COMMUNITY_LIST:'community-list'",
            "      EXPANDED:'expanded'",
            "      name = (variable*",
            "        VARIABLE:'as3_community')",
            "      (ip_community_list_expanded_tail",
            "        ala = (access_list_action*",
            "          PERMIT:'permit')",
            "        VARIABLE:'_3:'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        NO:'no'",
            "        IP:'ip'",
            "        HTTP:'http'",
            "        SERVER:'server'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        NO:'no'",
            "        IP:'ip'",
            "        HTTP:'http'",
            "        VARIABLE:'secure-server'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (ip_prefix_list_stanza",
            "      IP:'ip'",
            "      PREFIX_LIST:'prefix-list'",
            "      name = (variable*",
            "        VARIABLE:'inbound_route_filter'  <== mode:M_Name)",
            "      (ip_prefix_list_tail",
            "        SEQ:'seq'",
            "        seqnum = (dec*",
            "          UINT8:'5')",
            "        action = (access_list_action*",
            "          DENY:'deny')",
            "        prefix = IP_PREFIX:'3.0.0.0/8'",
            "        LE:'le'",
            "        maxpl = (dec*",
            "          UINT8:'32')",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (ip_prefix_list_stanza",
            "      IP:'ip'",
            "      PREFIX_LIST:'prefix-list'",
            "      name = (variable*",
            "        VARIABLE:'inbound_route_filter'  <== mode:M_Name)",
            "      (ip_prefix_list_tail",
            "        SEQ:'seq'",
            "        seqnum = (dec*",
            "          UINT8:'10')",
            "        action = (access_list_action*",
            "          PERMIT:'permit')",
            "        prefix = IP_PREFIX:'0.0.0.0/0'",
            "        LE:'le'",
            "        maxpl = (dec*",
            "          UINT8:'32')",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (extended_access_list_stanza",
            "      ACCESS_LIST:'access-list'",
            "      num = ACL_NUM_EXTENDED:'101'",
            "      (extended_access_list_tail",
            "        ala = (access_list_action*",
            "          PERMIT:'permit')",
            "        prot = (protocol*",
            "          IP:'ip')",
            "        srcipr = (access_list_ip_range*",
            "          HOST:'host'",
            "          ip = IP_ADDRESS:'1.0.1.0')",
            "        dstipr = (access_list_ip_range*",
            "          HOST:'host'",
            "          ip = IP_ADDRESS:'255.255.255.0')",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (extended_access_list_stanza",
            "      ACCESS_LIST:'access-list'",
            "      num = ACL_NUM_EXTENDED:'101'",
            "      (extended_access_list_tail",
            "        ala = (access_list_action*",
            "          PERMIT:'permit')",
            "        prot = (protocol*",
            "          IP:'ip')",
            "        srcipr = (access_list_ip_range*",
            "          HOST:'host'",
            "          ip = IP_ADDRESS:'1.0.2.0')",
            "        dstipr = (access_list_ip_range*",
            "          HOST:'host'",
            "          ip = IP_ADDRESS:'255.255.255.0')",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (extended_access_list_stanza",
            "      ACCESS_LIST:'access-list'",
            "      num = ACL_NUM_EXTENDED:'102'",
            "      (extended_access_list_tail",
            "        ala = (access_list_action*",
            "          PERMIT:'permit')",
            "        prot = (protocol*",
            "          IP:'ip')",
            "        srcipr = (access_list_ip_range*",
            "          HOST:'host'",
            "          ip = IP_ADDRESS:'2.0.0.0')",
            "        dstipr = (access_list_ip_range*",
            "          HOST:'host'",
            "          ip = IP_ADDRESS:'255.0.0.0')",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (extended_access_list_stanza",
            "      ACCESS_LIST:'access-list'",
            "      num = ACL_NUM_EXTENDED:'102'",
            "      (extended_access_list_tail",
            "        ala = (access_list_action*",
            "          PERMIT:'permit')",
            "        prot = (protocol*",
            "          IP:'ip')",
            "        srcipr = (access_list_ip_range*",
            "          HOST:'host'",
            "          ip = IP_ADDRESS:'2.128.0.0')",
            "        dstipr = (access_list_ip_range*",
            "          HOST:'host'",
            "          ip = IP_ADDRESS:'255.255.0.0')",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (extended_access_list_stanza",
            "      ACCESS_LIST:'access-list'",
            "      num = ACL_NUM_EXTENDED:'103'",
            "      (extended_access_list_tail",
            "        ala = (access_list_action*",
            "          PERMIT:'permit')",
            "        prot = (protocol*",
            "          IP:'ip')",
            "        srcipr = (access_list_ip_range*",
            "          HOST:'host'",
            "          ip = IP_ADDRESS:'3.0.1.0')",
            "        dstipr = (access_list_ip_range*",
            "          HOST:'host'",
            "          ip = IP_ADDRESS:'255.255.255.0')",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (extended_access_list_stanza",
            "      ACCESS_LIST:'access-list'",
            "      num = ACL_NUM_EXTENDED:'103'",
            "      (extended_access_list_tail",
            "        ala = (access_list_action*",
            "          PERMIT:'permit')",
            "        prot = (protocol*",
            "          IP:'ip')",
            "        srcipr = (access_list_ip_range*",
            "          HOST:'host'",
            "          ip = IP_ADDRESS:'3.0.2.0')",
            "        dstipr = (access_list_ip_range*",
            "          HOST:'host'",
            "          ip = IP_ADDRESS:'255.255.255.0')",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (route_map_stanza",
            "      ROUTE_MAP:'route-map'",
            "      name = (variable*",
            "        VARIABLE:'as3_to_as1'  <== mode:M_RouteMap)",
            "      rmt = (access_list_action*",
            "        PERMIT:'permit')",
            "      num = (dec*",
            "        UINT8:'2')",
            "      NEWLINE:'\\n'",
            "      (rm_stanza*",
            "        (match_rm_stanza*",
            "          MATCH:'match'",
            "          (match_ip_access_list_rm_stanza",
            "            IP:'ip'",
            "            ADDRESS:'address'",
            "            (variable_access_list*",
            "              UINT8:'102')",
            "            NEWLINE:'\\n')))",
            "      (rm_stanza*",
            "        (set_rm_stanza*",
            "          (set_metric_rm_stanza",
            "            SET:'set'",
            "            METRIC:'metric'",
            "            metric = (int_expr*",
            "              (dec*",
            "                UINT8:'50'))",
            "            NEWLINE:'\\n')))",
            "      (rm_stanza*",
            "        (set_rm_stanza*",
            "          (set_community_additive_rm_stanza",
            "            SET:'set'",
            "            COMMUNITY:'community'",
            "            (community*",
            "              STANDARD_COMMUNITY:'3:1')",
            "            ADDITIVE:'additive'",
            "            NEWLINE:'\\n')))))",
            "  (stanza*",
            "    (route_map_stanza",
            "      ROUTE_MAP:'route-map'",
            "      name = (variable*",
            "        VARIABLE:'as3_to_as1'  <== mode:M_RouteMap)",
            "      rmt = (access_list_action*",
            "        PERMIT:'permit')",
            "      num = (dec*",
            "        UINT8:'3')",
            "      NEWLINE:'\\n'",
            "      (rm_stanza*",
            "        (match_rm_stanza*",
            "          MATCH:'match'",
            "          (match_ip_access_list_rm_stanza",
            "            IP:'ip'",
            "            ADDRESS:'address'",
            "            (variable_access_list*",
            "              UINT8:'103')",
            "            NEWLINE:'\\n')))",
            "      (rm_stanza*",
            "        (set_rm_stanza*",
            "          (set_metric_rm_stanza",
            "            SET:'set'",
            "            METRIC:'metric'",
            "            metric = (int_expr*",
            "              (dec*",
            "                UINT8:'50'))",
            "            NEWLINE:'\\n')))",
            "      (rm_stanza*",
            "        (set_rm_stanza*",
            "          (set_community_additive_rm_stanza",
            "            SET:'set'",
            "            COMMUNITY:'community'",
            "            (community*",
            "              STANDARD_COMMUNITY:'3:1')",
            "            ADDITIVE:'additive'",
            "            NEWLINE:'\\n')))))",
            "  (stanza*",
            "    (route_map_stanza",
            "      ROUTE_MAP:'route-map'",
            "      name = (variable*",
            "        VARIABLE:'as1_to_as3'  <== mode:M_RouteMap)",
            "      rmt = (access_list_action*",
            "        PERMIT:'permit')",
            "      num = (dec*",
            "        UINT8:'100')",
            "      NEWLINE:'\\n'",
            "      (rm_stanza*",
            "        (match_rm_stanza*",
            "          MATCH:'match'",
            "          (match_community_list_rm_stanza",
            "            COMMUNITY:'community'",
            "            (variable*",
            "              VARIABLE:'as1_community')",
            "            NEWLINE:'\\n')))",
            "      (rm_stanza*",
            "        (set_rm_stanza*",
            "          (set_local_preference_rm_stanza",
            "            SET:'set'",
            "            LOCAL_PREFERENCE:'local-preference'",
            "            pref = (int_expr*",
            "              (dec*",
            "                UINT16:'350'))",
            "            NEWLINE:'\\n')))))",
            "  (stanza*",
            "    (route_map_stanza",
            "      ROUTE_MAP:'route-map'",
            "      name = (variable*",
            "        VARIABLE:'as3_to_as2'  <== mode:M_RouteMap)",
            "      rmt = (access_list_action*",
            "        PERMIT:'permit')",
            "      num = (dec*",
            "        UINT8:'1')",
            "      NEWLINE:'\\n'",
            "      (rm_stanza*",
            "        (match_rm_stanza*",
            "          MATCH:'match'",
            "          (match_ip_access_list_rm_stanza",
            "            IP:'ip'",
            "            ADDRESS:'address'",
            "            (variable_access_list*",
            "              UINT8:'101')",
            "            NEWLINE:'\\n')))",
            "      (rm_stanza*",
            "        (set_rm_stanza*",
            "          (set_metric_rm_stanza",
            "            SET:'set'",
            "            METRIC:'metric'",
            "            metric = (int_expr*",
            "              (dec*",
            "                UINT8:'50'))",
            "            NEWLINE:'\\n')))",
            "      (rm_stanza*",
            "        (set_rm_stanza*",
            "          (set_community_additive_rm_stanza",
            "            SET:'set'",
            "            COMMUNITY:'community'",
            "            (community*",
            "              STANDARD_COMMUNITY:'3:2')",
            "            ADDITIVE:'additive'",
            "            NEWLINE:'\\n')))))",
            "  (stanza*",
            "    (route_map_stanza",
            "      ROUTE_MAP:'route-map'",
            "      name = (variable*",
            "        VARIABLE:'as3_to_as2'  <== mode:M_RouteMap)",
            "      rmt = (access_list_action*",
            "        PERMIT:'permit')",
            "      num = (dec*",
            "        UINT8:'3')",
            "      NEWLINE:'\\n'",
            "      (rm_stanza*",
            "        (match_rm_stanza*",
            "          MATCH:'match'",
            "          (match_ip_access_list_rm_stanza",
            "            IP:'ip'",
            "            ADDRESS:'address'",
            "            (variable_access_list*",
            "              UINT8:'103')",
            "            NEWLINE:'\\n')))",
            "      (rm_stanza*",
            "        (set_rm_stanza*",
            "          (set_metric_rm_stanza",
            "            SET:'set'",
            "            METRIC:'metric'",
            "            metric = (int_expr*",
            "              (dec*",
            "                UINT8:'50'))",
            "            NEWLINE:'\\n')))",
            "      (rm_stanza*",
            "        (set_rm_stanza*",
            "          (set_community_additive_rm_stanza",
            "            SET:'set'",
            "            COMMUNITY:'community'",
            "            (community*",
            "              STANDARD_COMMUNITY:'3:2')",
            "            ADDITIVE:'additive'",
            "            NEWLINE:'\\n')))))",
            "  (stanza*",
            "    (route_map_stanza",
            "      ROUTE_MAP:'route-map'",
            "      name = (variable*",
            "        VARIABLE:'as2_to_as3'  <== mode:M_RouteMap)",
            "      rmt = (access_list_action*",
            "        PERMIT:'permit')",
            "      num = (dec*",
            "        UINT8:'100')",
            "      NEWLINE:'\\n'",
            "      (rm_stanza*",
            "        (match_rm_stanza*",
            "          MATCH:'match'",
            "          (match_community_list_rm_stanza",
            "            COMMUNITY:'community'",
            "            (variable*",
            "              VARIABLE:'as2_community')",
            "            NEWLINE:'\\n')))",
            "      (rm_stanza*",
            "        (set_rm_stanza*",
            "          (set_local_preference_rm_stanza",
            "            SET:'set'",
            "            LOCAL_PREFERENCE:'local-preference'",
            "            pref = (int_expr*",
            "              (dec*",
            "                UINT16:'350'))",
            "            NEWLINE:'\\n')))))",
            "  (stanza*",
            "    (s_control_plane*",
            "      CONTROL_PLANE:'control-plane'",
            "      NEWLINE:'\\n'))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        MGCP:'mgcp'",
            "        VARIABLE:'behavior'",
            "        VARIABLE:'g729-variants'",
            "        VARIABLE:'static-pt'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_gatekeeper*",
            "      GATEKEEPER:'gatekeeper'",
            "      NEWLINE:'\\n'",
            "      (gk_null*",
            "        SHUTDOWN:'shutdown'",
            "        (null_rest_of_line*",
            "          NEWLINE:'\\n'))))",
            "  (stanza*",
            "    (s_line",
            "      LINE:'line'",
            "      (line_type*",
            "        CON:'con')",
            "      first = (dec*",
            "        UINT8:'0')",
            "      NEWLINE:'\\n'",
            "      (l_exec_timeout",
            "        EXEC_TIMEOUT:'exec-timeout'",
            "        minutes = (dec*",
            "          UINT8:'0')",
            "        seconds = (dec*",
            "          UINT8:'0')",
            "        NEWLINE:'\\n')",
            "      (l_null*",
            "        PRIVILEGE:'privilege'",
            "        (null_rest_of_line*",
            "          LEVEL:'level'",
            "          UINT8:'15'",
            "          NEWLINE:'\\n'))",
            "      (l_null*",
            "        LOGGING:'logging'",
            "        (null_rest_of_line*",
            "          SYNCHRONOUS:'synchronous'",
            "          NEWLINE:'\\n'))))",
            "  (stanza*",
            "    (s_line",
            "      LINE:'line'",
            "      (line_type*",
            "        AUX:'aux')",
            "      first = (dec*",
            "        UINT8:'0')",
            "      NEWLINE:'\\n'",
            "      (l_exec_timeout",
            "        EXEC_TIMEOUT:'exec-timeout'",
            "        minutes = (dec*",
            "          UINT8:'0')",
            "        seconds = (dec*",
            "          UINT8:'0')",
            "        NEWLINE:'\\n')",
            "      (l_null*",
            "        PRIVILEGE:'privilege'",
            "        (null_rest_of_line*",
            "          LEVEL:'level'",
            "          UINT8:'15'",
            "          NEWLINE:'\\n'))",
            "      (l_null*",
            "        LOGGING:'logging'",
            "        (null_rest_of_line*",
            "          SYNCHRONOUS:'synchronous'",
            "          NEWLINE:'\\n'))))",
            "  (stanza*",
            "    (s_line",
            "      LINE:'line'",
            "      (line_type*",
            "        VTY:'vty')",
            "      first = (dec*",
            "        UINT8:'0')",
            "      last = (dec*",
            "        UINT8:'4')",
            "      NEWLINE:'\\n'))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        END:'end'",
            "        NEWLINE:'\\n')))",
            "  EOF:<EOF>)"
          ]
        },
        "configs/as3core1.cfg" : {
          "sentences" : [
            "(cisco_configuration",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        VERSION:'version'",
            "        FLOAT:'12.4'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_service",
            "      SERVICE:'service'",
            "      (variable*",
            "        VARIABLE:'timestamps')",
            "      (variable*",
            "        DEBUG:'debug')",
            "      (variable*",
            "        VARIABLE:'datetime')",
            "      (variable*",
            "        MSEC:'msec')",
            "      NEWLINE:'\\n'))",
            "  (stanza*",
            "    (s_service",
            "      SERVICE:'service'",
            "      (variable*",
            "        VARIABLE:'timestamps')",
            "      (variable*",
            "        LOG:'log')",
            "      (variable*",
            "        VARIABLE:'datetime')",
            "      (variable*",
            "        MSEC:'msec')",
            "      NEWLINE:'\\n'))",
            "  (stanza*",
            "    (s_service",
            "      NO:'no'",
            "      SERVICE:'service'",
            "      (variable*",
            "        VARIABLE:'password-encryption')",
            "      NEWLINE:'\\n'))",
            "  (stanza*",
            "    (s_hostname",
            "      HOSTNAME:'hostname'",
            "      VARIABLE:'as3core1'",
            "      NEWLINE:'\\n'))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        BOOT_START_MARKER:'boot-start-marker'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        BOOT_END_MARKER:'boot-end-marker'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_aaa",
            "      NO:'no'",
            "      AAA:'aaa'",
            "      (aaa_new_model",
            "        NEW_MODEL:'new-model'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        MEMORY_SIZE:'memory-size'",
            "        VARIABLE:'iomem'",
            "        UINT8:'5'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        IP:'ip'",
            "        CEF:'cef'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_ip_domain",
            "      NO:'no'",
            "      IP:'ip'",
            "      DOMAIN:'domain'",
            "      (ip_domain_lookup",
            "        LOOKUP:'lookup'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_ip_domain",
            "      IP:'ip'",
            "      DOMAIN:'domain'",
            "      (ip_domain_name",
            "        NAME:'name'",
            "        hostname = (variable_hostname*",
            "          VARIABLE:'lab.local'  <== mode:M_Name)",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        IP:'ip'",
            "        AUTH_PROXY:'auth-proxy'",
            "        VARIABLE:'max-nodata-conns'",
            "        UINT8:'3'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        IP:'ip'",
            "        ADMISSION:'admission'",
            "        VARIABLE:'max-nodata-conns'",
            "        UINT8:'3'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_interface*",
            "      INTERFACE:'interface'",
            "      (s_interface_definition",
            "        iname = (interface_name*",
            "          name_prefix_alpha = M_Interface_PREFIX:'Loopback'  <== mode:M_Interface",
            "          (range*",
            "            (subrange*",
            "              low = (dec*",
            "                DEC:'0'  <== mode:M_Interface))))",
            "        NEWLINE:'\\n'  <== mode:M_Interface",
            "        (if_inner*",
            "          (if_ip_address",
            "            IP:'ip'",
            "            ADDRESS:'address'",
            "            ip = IP_ADDRESS:'3.10.1.1'",
            "            subnet = IP_ADDRESS:'255.255.255.255'",
            "            NEWLINE:'\\n')))))",
            "  (stanza*",
            "    (s_interface*",
            "      INTERFACE:'interface'",
            "      (s_interface_definition",
            "        iname = (interface_name*",
            "          name_prefix_alpha = M_Interface_PREFIX:'FastEthernet'  <== mode:M_Interface",
            "          DEC:'0'  <== mode:M_Interface",
            "          FORWARD_SLASH:'/'  <== mode:M_Interface",
            "          (range*",
            "            (subrange*",
            "              low = (dec*",
            "                DEC:'0'  <== mode:M_Interface))))",
            "        NEWLINE:'\\n'  <== mode:M_Interface",
            "        (if_inner*",
            "          (if_ip_address",
            "            IP:'ip'",
            "            ADDRESS:'address'",
            "            ip = IP_ADDRESS:'3.0.2.2'",
            "            subnet = IP_ADDRESS:'255.255.255.0'",
            "            NEWLINE:'\\n'))",
            "        (if_inner*",
            "          (if_null_block*",
            "            DUPLEX:'duplex'",
            "            AUTO:'auto'",
            "            NEWLINE:'\\n'))",
            "        (if_inner*",
            "          (if_speed_auto*",
            "            SPEED:'speed'",
            "            AUTO:'auto'",
            "            NEWLINE:'\\n')))))",
            "  (stanza*",
            "    (s_interface*",
            "      INTERFACE:'interface'",
            "      (s_interface_definition",
            "        iname = (interface_name*",
            "          name_prefix_alpha = M_Interface_PREFIX:'FastEthernet'  <== mode:M_Interface",
            "          DEC:'0'  <== mode:M_Interface",
            "          FORWARD_SLASH:'/'  <== mode:M_Interface",
            "          (range*",
            "            (subrange*",
            "              low = (dec*",
            "                DEC:'1'  <== mode:M_Interface))))",
            "        NEWLINE:'\\n'  <== mode:M_Interface",
            "        (if_inner*",
            "          (if_ip_address",
            "            IP:'ip'",
            "            ADDRESS:'address'",
            "            ip = IP_ADDRESS:'3.0.1.2'",
            "            subnet = IP_ADDRESS:'255.255.255.0'",
            "            NEWLINE:'\\n'))",
            "        (if_inner*",
            "          (if_null_block*",
            "            DUPLEX:'duplex'",
            "            AUTO:'auto'",
            "            NEWLINE:'\\n'))",
            "        (if_inner*",
            "          (if_speed_auto*",
            "            SPEED:'speed'",
            "            AUTO:'auto'",
            "            NEWLINE:'\\n')))))",
            "  (stanza*",
            "    (s_interface*",
            "      INTERFACE:'interface'",
            "      (s_interface_definition",
            "        iname = (interface_name*",
            "          name_prefix_alpha = M_Interface_PREFIX:'FastEthernet'  <== mode:M_Interface",
            "          DEC:'1'  <== mode:M_Interface",
            "          FORWARD_SLASH:'/'  <== mode:M_Interface",
            "          (range*",
            "            (subrange*",
            "              low = (dec*",
            "                DEC:'0'  <== mode:M_Interface))))",
            "        NEWLINE:'\\n'  <== mode:M_Interface",
            "        (if_inner*",
            "          (if_ip_address",
            "            IP:'ip'",
            "            ADDRESS:'address'",
            "            ip = IP_ADDRESS:'90.90.90.1'",
            "            subnet = IP_ADDRESS:'255.255.255.0'",
            "            NEWLINE:'\\n')))))",
            "  (stanza*",
            "    (s_interface*",
            "      INTERFACE:'interface'",
            "      (s_interface_definition",
            "        iname = (interface_name*",
            "          name_prefix_alpha = M_Interface_PREFIX:'FastEthernet'  <== mode:M_Interface",
            "          DEC:'1'  <== mode:M_Interface",
            "          FORWARD_SLASH:'/'  <== mode:M_Interface",
            "          (range*",
            "            (subrange*",
            "              low = (dec*",
            "                DEC:'1'  <== mode:M_Interface))))",
            "        NEWLINE:'\\n'  <== mode:M_Interface",
            "        (if_inner*",
            "          (if_ip_address",
            "            IP:'ip'",
            "            ADDRESS:'address'",
            "            ip = IP_ADDRESS:'90.90.90.2'",
            "            subnet = IP_ADDRESS:'255.255.255.0'",
            "            NEWLINE:'\\n')))))",
            "  (stanza*",
            "    (s_router_ospf",
            "      ROUTER:'router'",
            "      OSPF:'ospf'",
            "      name = (variable*",
            "        UINT8:'1')",
            "      NEWLINE:'\\n'",
            "      (ro_inner*",
            "        (ro_common*",
            "          (ro_null*",
            "            LOG_ADJACENCY_CHANGES:'log-adjacency-changes'",
            "            (null_rest_of_line*",
            "              NEWLINE:'\\n'))))",
            "      (ro_inner*",
            "        (ro_network",
            "          NETWORK:'network'",
            "          ip = IP_ADDRESS:'3.0.0.0'",
            "          wildcard = IP_ADDRESS:'0.255.255.255'",
            "          AREA:'area'",
            "          area_int = (dec*",
            "            UINT8:'1')",
            "          NEWLINE:'\\n'))))",
            "  (stanza*",
            "    (router_bgp_stanza",
            "      ROUTER:'router'",
            "      BGP:'bgp'",
            "      procnum = (bgp_asn*",
            "        asn = (uint32*",
            "          UINT8:'3'))",
            "      NEWLINE:'\\n'",
            "      (router_bgp_stanza_tail*",
            "        (router_id_rb_stanza*",
            "          BGP:'bgp'",
            "          (router_id_bgp_tail",
            "            ROUTER_ID:'router-id'",
            "            routerid = IP_ADDRESS:'3.10.1.1'",
            "            NEWLINE:'\\n')))",
            "      (router_bgp_stanza_tail*",
            "        (bgp_rb_stanza*",
            "          BGP:'bgp'",
            "          (bgp_log_neighbor_changes_rb_stanza_null*",
            "            LOG_NEIGHBOR_CHANGES:'log-neighbor-changes'",
            "            (null_rest_of_line*",
            "              NEWLINE:'\\n'))))",
            "      (router_bgp_stanza_tail*",
            "        (peer_group_creation_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          name = VARIABLE:'as3'  <== mode:M_NEIGHBOR",
            "          PEER_GROUP:'peer-group'",
            "          NEWLINE:'\\n'  <== mode:M_NEIGHBOR))",
            "      (router_bgp_stanza_tail*",
            "        (neighbor_flat_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          peergroup = VARIABLE:'as3'  <== mode:M_NEIGHBOR",
            "          (remote_as_bgp_tail",
            "            REMOTE_AS:'remote-as'",
            "            remote = (bgp_asn*",
            "              asn = (uint32*",
            "                UINT8:'3'))",
            "            NEWLINE:'\\n')))",
            "      (router_bgp_stanza_tail*",
            "        (peer_group_assignment_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          address = IP_ADDRESS:'3.1.1.1'  <== mode:M_NEIGHBOR",
            "          PEER_GROUP:'peer-group'",
            "          name = (variable*",
            "            VARIABLE:'as3'  <== mode:M_NEIGHBOR)",
            "          NEWLINE:'\\n'))",
            "      (router_bgp_stanza_tail*",
            "        (neighbor_flat_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          ip = IP_ADDRESS:'3.1.1.1'  <== mode:M_NEIGHBOR",
            "          (bgp_tail*",
            "            (update_source_bgp_tail",
            "              UPDATE_SOURCE:'update-source'",
            "              source = (interface_name*",
            "                name_prefix_alpha = M_Interface_PREFIX:'Loopback'  <== mode:M_Interface",
            "                (range*",
            "                  (subrange*",
            "                    low = (dec*",
            "                      DEC:'0'  <== mode:M_Interface))))",
            "              NEWLINE:'\\n'  <== mode:M_Interface))))",
            "      (router_bgp_stanza_tail*",
            "        (peer_group_assignment_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          address = IP_ADDRESS:'3.2.2.2'  <== mode:M_NEIGHBOR",
            "          PEER_GROUP:'peer-group'",
            "          name = (variable*",
            "            VARIABLE:'as3'  <== mode:M_NEIGHBOR)",
            "          NEWLINE:'\\n'))",
            "      (router_bgp_stanza_tail*",
            "        (neighbor_flat_rb_stanza",
            "          NEIGHBOR:'neighbor'",
            "          ip = IP_ADDRESS:'3.2.2.2'  <== mode:M_NEIGHBOR",
            "          (bgp_tail*",
            "            (update_source_bgp_tail",
            "              UPDATE_SOURCE:'update-source'",
            "              source = (interface_name*",
            "                name_prefix_alpha = M_Interface_PREFIX:'Loopback'  <== mode:M_Interface",
            "                (range*",
            "                  (subrange*",
            "                    low = (dec*",
            "                      DEC:'0'  <== mode:M_Interface))))",
            "              NEWLINE:'\\n'  <== mode:M_Interface))))",
            "      (router_bgp_stanza_tail*",
            "        (bgp_tail*",
            "          (maximum_paths_bgp_tail",
            "            MAXIMUM_PATHS:'maximum-paths'",
            "            paths = (dec*",
            "              UINT8:'5')",
            "            NEWLINE:'\\n')))",
            "      (router_bgp_stanza_tail*",
            "        (address_family_rb_stanza",
            "          (address_family_header",
            "            ADDRESS_FAMILY:'address-family'",
            "            af = (bgp_address_family*",
            "              IPV4:'ipv4')",
            "            NEWLINE:'\\n')",
            "          (address_family_inner*",
            "            (neighbor_flat_rb_stanza",
            "              NEIGHBOR:'neighbor'",
            "              peergroup = VARIABLE:'as3'  <== mode:M_NEIGHBOR",
            "              (bgp_tail*",
            "                (send_community_bgp_tail",
            "                  SEND_COMMUNITY:'send-community'",
            "                  NEWLINE:'\\n'))))",
            "          (address_family_inner*",
            "            (neighbor_flat_rb_stanza",
            "              NEIGHBOR:'neighbor'",
            "              peergroup = VARIABLE:'as3'  <== mode:M_NEIGHBOR",
            "              (bgp_tail*",
            "                (route_reflector_client_bgp_tail",
            "                  ROUTE_REFLECTOR_CLIENT:'route-reflector-client'",
            "                  NEWLINE:'\\n'))))",
            "          (address_family_inner*",
            "            (neighbor_flat_rb_stanza",
            "              NEIGHBOR:'neighbor'",
            "              ip = IP_ADDRESS:'3.1.1.1'  <== mode:M_NEIGHBOR",
            "              (bgp_tail*",
            "                (activate_bgp_tail",
            "                  ACTIVATE:'activate'",
            "                  NEWLINE:'\\n'))))",
            "          (address_family_inner*",
            "            (neighbor_flat_rb_stanza",
            "              NEIGHBOR:'neighbor'",
            "              ip = IP_ADDRESS:'3.2.2.2'  <== mode:M_NEIGHBOR",
            "              (bgp_tail*",
            "                (activate_bgp_tail",
            "                  ACTIVATE:'activate'",
            "                  NEWLINE:'\\n'))))",
            "          (address_family_inner*",
            "            (bgp_tail*",
            "              (maximum_paths_bgp_tail",
            "                MAXIMUM_PATHS:'maximum-paths'",
            "                paths = (dec*",
            "                  UINT8:'5')",
            "                NEWLINE:'\\n')))",
            "          (address_family_inner*",
            "            (bgp_tail*",
            "              (null_bgp_tail*",
            "                NO:'no'",
            "                AUTO_SUMMARY:'auto-summary'",
            "                (null_rest_of_line*",
            "                  NEWLINE:'\\n'))))",
            "          (address_family_inner*",
            "            (bgp_tail*",
            "              (null_bgp_tail*",
            "                NO:'no'",
            "                SYNCHRONIZATION:'synchronization'",
            "                (null_rest_of_line*",
            "                  NEWLINE:'\\n'))))",
            "          (address_family_inner*",
            "            (bgp_tail*",
            "              (bgp_bgp_tail*",
            "                BGP:'bgp'",
            "                (bgp_dampening_bgp_tail_null*",
            "                  DAMPENING:'dampening'",
            "                  (null_rest_of_line*",
            "                    NEWLINE:'\\n')))))",
            "          (address_family_inner*",
            "            (bgp_tail*",
            "              (network_bgp_tail",
            "                NETWORK:'network'",
            "                ip = IP_ADDRESS:'3.0.1.0'",
            "                MASK:'mask'",
            "                mask = IP_ADDRESS:'255.255.255.0'",
            "                NEWLINE:'\\n')))",
            "          (address_family_inner*",
            "            (bgp_tail*",
            "              (network_bgp_tail",
            "                NETWORK:'network'",
            "                ip = IP_ADDRESS:'3.0.2.0'",
            "                MASK:'mask'",
            "                mask = IP_ADDRESS:'255.255.255.0'",
            "                NEWLINE:'\\n')))",
            "          (address_family_footer*",
            "            EXIT_ADDRESS_FAMILY:'exit-address-family'",
            "            NEWLINE:'\\n')))))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        IP:'ip'",
            "        FORWARD_PROTOCOL:'forward-protocol'",
            "        ND:'nd'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        NO:'no'",
            "        IP:'ip'",
            "        HTTP:'http'",
            "        SERVER:'server'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        NO:'no'",
            "        IP:'ip'",
            "        HTTP:'http'",
            "        VARIABLE:'secure-server'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_control_plane*",
            "      CONTROL_PLANE:'control-plane'",
            "      NEWLINE:'\\n'))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        MGCP:'mgcp'",
            "        VARIABLE:'behavior'",
            "        VARIABLE:'g729-variants'",
            "        VARIABLE:'static-pt'",
            "        NEWLINE:'\\n')))",
            "  (stanza*",
            "    (s_gatekeeper*",
            "      GATEKEEPER:'gatekeeper'",
            "      NEWLINE:'\\n'",
            "      (gk_null*",
            "        SHUTDOWN:'shutdown'",
            "        (null_rest_of_line*",
            "          NEWLINE:'\\n'))))",
            "  (stanza*",
            "    (s_line",
            "      LINE:'line'",
            "      (line_type*",
            "        CON:'con')",
            "      first = (dec*",
            "        UINT8:'0')",
            "      NEWLINE:'\\n'",
            "      (l_exec_timeout",
            "        EXEC_TIMEOUT:'exec-timeout'",
            "        minutes = (dec*",
            "          UINT8:'0')",
            "        seconds = (dec*",
            "          UINT8:'0')",
            "        NEWLINE:'\\n')",
            "      (l_null*",
            "        PRIVILEGE:'privilege'",
            "        (null_rest_of_line*",
            "          LEVEL:'level'",
            "          UINT8:'15'",
            "          NEWLINE:'\\n'))",
            "      (l_null*",
            "        LOGGING:'logging'",
            "        (null_rest_of_line*",
            "          SYNCHRONOUS:'synchronous'",
            "          NEWLINE:'\\n'))))",
            "  (stanza*",
            "    (s_line",
            "      LINE:'line'",
            "      (line_type*",
            "        AUX:'aux')",
            "      first = (dec*",
            "        UINT8:'0')",
            "      NEWLINE:'\\n'",
            "      (l_exec_timeout",
            "        EXEC_TIMEOUT:'exec-timeout'",
            "        minutes = (dec*",
            "          UINT8:'0')",
            "        seconds = (dec*",
            "          UINT8:'0')",
            "        NEWLINE:'\\n')",
            "      (l_null*",
            "        PRIVILEGE:'privilege'",
            "        (null_rest_of_line*",
            "          LEVEL:'level'",
            "          UINT8:'15'",
            "          NEWLINE:'\\n'))",
            "      (l_null*",
            "        LOGGING:'logging'",
            "        (null_rest_of_line*",
            "          SYNCHRONOUS:'synchronous'",
            "          NEWLINE:'\\n'))))",
            "  (stanza*",
            "    (s_line",
            "      LINE:'line'",
            "      (line_type*",
            "        VTY:'vty')",
            "      first = (dec*",
            "        UINT8:'0')",
            "      last = (dec*",
            "        UINT8:'4')",
            "      NEWLINE:'\\n'))",
            "  (stanza*",
            "    (s_null*",
            "      (null_single*",
            "        END:'end'",
            "        NEWLINE:'\\n\\n')))",
            "  EOF:<EOF>)"
          ]
        }
      },
      "version" : "0.36.0"
    },
    {
      "class" : "org.batfish.datamodel.answers.ConvertConfigurationAnswerElement",
      "convertStatus" : {
        "as1border1" : "PASSED",
        "as1border2" : "PASSED",
        "as1core1" : "PASSED",
        "as2border1" : "PASSED",
        "as2border2" : "PASSED",
        "as2core1" : "PASSED",
        "as2core2" : "PASSED",
        "as2dept1" : "PASSED",
        "as2dist1" : "PASSED",
        "as2dist2" : "PASSED",
        "as2host1" : "PASSED",
        "as3border1" : "PASSED",
        "as3border2" : "PASSED",
        "as3core1" : "PASSED"
      },
      "definedStructures" : {
        "configs/as1border1.cfg" : {
          "bgp group" : {
            "as1" : {
              "definitionLines" : "10-14",
              "numReferrers" : 1
            },
            "as2" : {
              "definitionLines" : "15-19",
              "numReferrers" : 1
            },
            "bad-ebgp" : {
              "definitionLines" : "24-27",
              "numReferrers" : 1
            },
            "xanadu" : {
              "definitionLines" : "20-23",
              "numReferrers" : 1
            }
          },
          "bgp neighbor" : {
            "1.10.1.1 (VRF default)" : {
              "definitionLines" : "14",
              "numReferrers" : 1
            },
            "10.12.11.2 (VRF default)" : {
              "definitionLines" : "19",
              "numReferrers" : 1
            },
            "3.2.2.2 (VRF default)" : {
              "definitionLines" : "27",
              "numReferrers" : 1
            },
            "5.6.7.8 (VRF default)" : {
              "definitionLines" : "23",
              "numReferrers" : 1
            }
          },
          "community" : {
            "as1_to_as2_community" : {
              "definitionLines" : "51",
              "numReferrers" : 2
            },
            "as2_to_as1_community" : {
              "definitionLines" : "52",
              "numReferrers" : 1
            }
          },
          "interface" : {
            "fe-0/0/0" : {
              "definitionLines" : "4",
              "numReferrers" : 1
            },
            "fe-0/0/0.0" : {
              "definitionLines" : "4",
              "numReferrers" : 2
            },
            "fe-0/0/1" : {
              "definitionLines" : "5",
              "numReferrers" : 1
            },
            "fe-0/0/1.0" : {
              "definitionLines" : "5",
              "numReferrers" : 1
            },
            "lo0" : {
              "definitionLines" : "3",
              "numReferrers" : 1
            },
            "lo0.0" : {
              "definitionLines" : "3",
              "numReferrers" : 2
            }
          },
          "policy-statement" : {
            "as1_to_as1" : {
              "definitionLines" : "30-33",
              "numReferrers" : 1
            },
            "as1_to_as2" : {
              "definitionLines" : "34-41",
              "numReferrers" : 1
            },
            "as2_to_as1" : {
              "definitionLines" : "42-44",
              "numReferrers" : 1
            },
            "match_original_prefixes" : {
              "definitionLines" : "45-46",
              "numReferrers" : 2
            },
            "ospf-redistribute-connected" : {
              "definitionLines" : "28-29",
              "numReferrers" : 1
            }
          },
          "policy-statement term" : {
            "as1_to_as1 forward" : {
              "definitionLines" : "30-31",
              "numReferrers" : 2
            },
            "as1_to_as1 originate" : {
              "definitionLines" : "32-33",
              "numReferrers" : 2
            },
            "as1_to_as2 as3" : {
              "definitionLines" : "38-41",
              "numReferrers" : 4
            },
            "as1_to_as2 originate" : {
              "definitionLines" : "34-37",
              "numReferrers" : 4
            },
            "as2_to_as1 1" : {
              "definitionLines" : "42-44",
              "numReferrers" : 3
            },
            "match_original_prefixes 1" : {
              "definitionLines" : "45-46",
              "numReferrers" : 2
            }
          },
          "prefix-list" : {
            "as3_prefixes" : {
              "definitionLines" : "49-50",
              "numReferrers" : 1
            },
            "original_prefixes" : {
              "definitionLines" : "47-48",
              "numReferrers" : 3
            }
          },
          "routing-instance" : {
            "master" : {
              "definitionLines" : "0",
              "numReferrers" : 1
            }
          }
        },
        "configs/as1border2.cfg" : {
          "bgp group" : {
            "as1" : {
              "definitionLines" : "11-15",
              "numReferrers" : 1
            },
            "as3" : {
              "definitionLines" : "16-20",
              "numReferrers" : 1
            },
            "as4" : {
              "definitionLines" : "21-25",
              "numReferrers" : 1
            }
          },
          "bgp neighbor" : {
            "1.10.1.1 (VRF default)" : {
              "definitionLines" : "15",
              "numReferrers" : 1
            },
            "10.13.22.3 (VRF default)" : {
              "definitionLines" : "20",
              "numReferrers" : 1
            },
            "10.14.22.4 (VRF default)" : {
              "definitionLines" : "25",
              "numReferrers" : 1
            }
          },
          "community" : {
            "as1_to_as3_community" : {
              "definitionLines" : "59",
              "numReferrers" : 2
            },
            "as1_to_as4_community" : {
              "definitionLines" : "61",
              "numReferrers" : 2
            },
            "as3_to_as1_community" : {
              "definitionLines" : "60",
              "numReferrers" : 1
            },
            "as4_to_as1_community" : {
              "definitionLines" : "62",
              "numReferrers" : 1
            }
          },
          "interface" : {
            "fe-0/0/0" : {
              "definitionLines" : "4",
              "numReferrers" : 1
            },
            "fe-0/0/0.0" : {
              "definitionLines" : "4",
              "numReferrers" : 2
            },
            "fe-0/0/1" : {
              "definitionLines" : "5",
              "numReferrers" : 1
            },
            "fe-0/0/1.0" : {
              "definitionLines" : "5",
              "numReferrers" : 1
            },
            "fe-0/0/2" : {
              "definitionLines" : "6",
              "numReferrers" : 1
            },
            "fe-0/0/2.0" : {
              "definitionLines" : "6",
              "numReferrers" : 1
            },
            "lo0" : {
              "definitionLines" : "3",
              "numReferrers" : 1
            },
            "lo0.0" : {
              "definitionLines" : "3",
              "numReferrers" : 2
            }
          },
          "policy-statement" : {
            "as1_to_as1" : {
              "definitionLines" : "28-31",
              "numReferrers" : 1
            },
            "as1_to_as3" : {
              "definitionLines" : "32-39",
              "numReferrers" : 1
            },
            "as1_to_as4" : {
              "definitionLines" : "43-49",
              "numReferrers" : 1
            },
            "as3_to_as1" : {
              "definitionLines" : "40-42",
              "numReferrers" : 1
            },
            "as4_to_as1" : {
              "definitionLines" : "50-53",
              "numReferrers" : 1
            },
            "ospf-redistribute-connected" : {
              "definitionLines" : "26-27",
              "numReferrers" : 1
            }
          },
          "policy-statement term" : {
            "as1_to_as1 forward" : {
              "definitionLines" : "28-29",
              "numReferrers" : 2
            },
            "as1_to_as1 originate" : {
              "definitionLines" : "30-31",
              "numReferrers" : 2
            },
            "as1_to_as3 as3" : {
              "definitionLines" : "36-39",
              "numReferrers" : 4
            },
            "as1_to_as3 originate" : {
              "definitionLines" : "32-35",
              "numReferrers" : 4
            },
            "as1_to_as4 as3" : {
              "definitionLines" : "47-49",
              "numReferrers" : 3
            },
            "as1_to_as4 originate" : {
              "definitionLines" : "43-46",
              "numReferrers" : 4
            },
            "as3_to_as1 1" : {
              "definitionLines" : "40-42",
              "numReferrers" : 3
            },
            "as4_to_as1 1" : {
              "definitionLines" : "50-53",
              "numReferrers" : 4
            }
          },
          "prefix-list" : {
            "as2_prefixes" : {
              "definitionLines" : "56-57",
              "numReferrers" : 1
            },
            "as4_prefixes" : {
              "definitionLines" : "58",
              "numReferrers" : 1
            },
            "original_prefixes" : {
              "definitionLines" : "54-55",
              "numReferrers" : 3
            }
          },
          "routing-instance" : {
            "master" : {
              "definitionLines" : "0",
              "numReferrers" : 1
            }
          }
        },
        "configs/as1core1.cfg" : {
          "bgp neighbor" : {
            "1.1.1.1 (VRF default)" : {
              "definitionLines" : "75,83",
              "numReferrers" : 2
            },
            "1.2.2.2 (VRF default)" : {
              "definitionLines" : "77,84",
              "numReferrers" : 2
            }
          },
          "bgp peer-group" : {
            "as1" : {
              "definitionLines" : "72",
              "numReferrers" : 2
            }
          },
          "interface" : {
            "FastEthernet0/0" : {
              "definitionLines" : "54-57",
              "numReferrers" : 1
            },
            "FastEthernet0/1" : {
              "definitionLines" : "59-62",
              "numReferrers" : 1
            },
            "Loopback0" : {
              "definitionLines" : "51-52",
              "numReferrers" : 3
            }
          }
        },
        "configs/as2border1.cfg" : {
          "bgp neighbor" : {
            "10.12.11.1 (VRF default)" : {
              "definitionLines" : "105",
              "numReferrers" : 1
            },
            "2.1.2.1 (VRF default)" : {
              "definitionLines" : "89,103",
              "numReferrers" : 2
            },
            "2.1.2.2 (VRF default)" : {
              "definitionLines" : "90,104",
              "numReferrers" : 2
            }
          },
          "bgp peer-group" : {
            "as1" : {
              "definitionLines" : "81",
              "numReferrers" : 1
            },
            "as2" : {
              "definitionLines" : "83",
              "numReferrers" : 2
            },
            "as3" : {
              "definitionLines" : "85",
              "numReferrers" : 0
            }
          },
          "expanded community-list" : {
            "as1_community" : {
              "definitionLines" : "115",
              "numReferrers" : 1
            },
            "as2_community" : {
              "definitionLines" : "116",
              "numReferrers" : 0
            },
            "as3_community" : {
              "definitionLines" : "117",
              "numReferrers" : 1
            }
          },
          "extended ipv4 access-list" : {
            "101" : {
              "definitionLines" : "130-131",
              "numReferrers" : 1
            },
            "102" : {
              "definitionLines" : "132-133",
              "numReferrers" : 2
            },
            "103" : {
              "definitionLines" : "134-135",
              "numReferrers" : 1
            },
            "BLOCK_SPOOF_IN" : {
              "definitionLines" : "122-124",
              "numReferrers" : 1
            }
          },
          "extended ipv4 access-list line" : {
            "101: permit ip host 1.0.1.0 host 255.255.255.0" : {
              "definitionLines" : "130",
              "numReferrers" : 1
            },
            "101: permit ip host 1.0.2.0 host 255.255.255.0" : {
              "definitionLines" : "131",
              "numReferrers" : 1
            },
            "102: permit ip host 2.0.0.0 host 255.0.0.0" : {
              "definitionLines" : "132",
              "numReferrers" : 1
            },
            "102: permit ip host 2.128.0.0 host 255.255.0.0" : {
              "definitionLines" : "133",
              "numReferrers" : 1
            },
            "103: permit ip host 3.0.1.0 host 255.255.255.0" : {
              "definitionLines" : "134",
              "numReferrers" : 1
            },
            "103: permit ip host 3.0.2.0 host 255.255.255.0" : {
              "definitionLines" : "135",
              "numReferrers" : 1
            },
            "BLOCK_SPOOF_IN: deny ip 2.0.0.0 0.255.255.255 any" : {
              "definitionLines" : "123",
              "numReferrers" : 1
            },
            "BLOCK_SPOOF_IN: permit ip any any" : {
              "definitionLines" : "124",
              "numReferrers" : 1
            }
          },
          "interface" : {
            "FastEthernet0/0" : {
              "definitionLines" : "55-59",
              "numReferrers" : 1
            },
            "FastEthernet0/1" : {
              "definitionLines" : "61-64",
              "numReferrers" : 1
            },
            "FastEthernet1/0" : {
              "definitionLines" : "66-69",
              "numReferrers" : 1
            },
            "Loopback0" : {
              "definitionLines" : "52-53",
              "numReferrers" : 3
            }
          },
          "ipv4 prefix-list" : {
            "inbound_route_filter" : {
              "definitionLines" : "128-129",
              "numReferrers" : 0
            }
          },
          "route-map" : {
            "as1_to_as2" : {
              "definitionLines" : "147-149",
              "numReferrers" : 1
            },
            "as2_to_as1" : {
              "definitionLines" : "137-140,142-145",
              "numReferrers" : 1
            },
            "as2_to_as3" : {
              "definitionLines" : "151-154,156-159",
              "numReferrers" : 1
            },
            "as3_to_as2" : {
              "definitionLines" : "161-163",
              "numReferrers" : 1
            }
          },
          "route-map-clause" : {
            "as1_to_as2 100" : {
              "definitionLines" : "147-149",
              "numReferrers" : 1
            },
            "as2_to_as1 2" : {
              "definitionLines" : "137-140",
              "numReferrers" : 1
            },
            "as2_to_as1 3" : {
              "definitionLines" : "142-145",
              "numReferrers" : 1
            },
            "as2_to_as3 1" : {
              "definitionLines" : "151-154",
              "numReferrers" : 1
            },
            "as2_to_as3 2" : {
              "definitionLines" : "156-159",
              "numReferrers" : 1
            },
            "as3_to_as2 100" : {
              "definitionLines" : "161-163",
              "numReferrers" : 1
            }
          }
        },
        "configs/as2border2.cfg" : {
          "bgp neighbor" : {
            "10.23.21.3 (VRF default)" : {
              "definitionLines" : "105",
              "numReferrers" : 1
            },
            "2.1.2.1 (VRF default)" : {
              "definitionLines" : "89,103",
              "numReferrers" : 2
            },
            "2.1.2.2 (VRF default)" : {
              "definitionLines" : "90,104",
              "numReferrers" : 2
            }
          },
          "bgp peer-group" : {
            "as1" : {
              "definitionLines" : "81",
              "numReferrers" : 0
            },
            "as2" : {
              "definitionLines" : "83",
              "numReferrers" : 2
            },
            "as3" : {
              "definitionLines" : "85",
              "numReferrers" : 1
            }
          },
          "expanded community-list" : {
            "as1_community" : {
              "definitionLines" : "115",
              "numReferrers" : 1
            },
            "as2_community" : {
              "definitionLines" : "116",
              "numReferrers" : 0
            },
            "as3_community" : {
              "definitionLines" : "117",
              "numReferrers" : 1
            }
          },
          "extended ipv4 access-list" : {
            "101" : {
              "definitionLines" : "129-130",
              "numReferrers" : 1
            },
            "102" : {
              "definitionLines" : "131-132",
              "numReferrers" : 2
            },
            "103" : {
              "definitionLines" : "133-134",
              "numReferrers" : 1
            },
            "BLOCK_SPOOF_IN" : {
              "definitionLines" : "122-124",
              "numReferrers" : 1
            }
          },
          "extended ipv4 access-list line" : {
            "101: permit ip host 1.0.1.0 host 255.255.255.0" : {
              "definitionLines" : "129",
              "numReferrers" : 1
            },
            "101: permit ip host 1.0.2.0 host 255.255.255.0" : {
              "definitionLines" : "130",
              "numReferrers" : 1
            },
            "102: permit ip host 2.0.0.0 host 255.0.0.0" : {
              "definitionLines" : "131",
              "numReferrers" : 1
            },
            "102: permit ip host 2.128.0.0 host 255.255.0.0" : {
              "definitionLines" : "132",
              "numReferrers" : 1
            },
            "103: permit ip host 3.0.1.0 host 255.255.255.0" : {
              "definitionLines" : "133",
              "numReferrers" : 1
            },
            "103: permit ip host 3.0.2.0 host 255.255.255.0" : {
              "definitionLines" : "134",
              "numReferrers" : 1
            },
            "BLOCK_SPOOF_IN: deny ip 2.0.0.0 0.255.255.255 any" : {
              "definitionLines" : "123",
              "numReferrers" : 1
            },
            "BLOCK_SPOOF_IN: permit ip any any" : {
              "definitionLines" : "124",
              "numReferrers" : 1
            }
          },
          "interface" : {
            "FastEthernet0/0" : {
              "definitionLines" : "55-59",
              "numReferrers" : 1
            },
            "FastEthernet0/1" : {
              "definitionLines" : "61-64",
              "numReferrers" : 1
            },
            "FastEthernet1/0" : {
              "definitionLines" : "66-69",
              "numReferrers" : 1
            },
            "Loopback0" : {
              "definitionLines" : "52-53",
              "numReferrers" : 3
            }
          },
          "ipv4 prefix-list" : {
            "inbound_route_filter" : {
              "definitionLines" : "127-128",
              "numReferrers" : 0
            }
          },
          "route-map" : {
            "as1_to_as2" : {
              "definitionLines" : "146-149",
              "numReferrers" : 1
            },
            "as2_to_as1" : {
              "definitionLines" : "136-139,141-144",
              "numReferrers" : 1
            },
            "as2_to_as3" : {
              "definitionLines" : "151-154,156-159",
              "numReferrers" : 1
            },
            "as3_to_as2" : {
              "definitionLines" : "161-164",
              "numReferrers" : 1
            }
          },
          "route-map-clause" : {
            "as1_to_as2 100" : {
              "definitionLines" : "146-149",
              "numReferrers" : 1
            },
            "as2_to_as1 2" : {
              "definitionLines" : "136-139",
              "numReferrers" : 1
            },
            "as2_to_as1 3" : {
              "definitionLines" : "141-144",
              "numReferrers" : 1
            },
            "as2_to_as3 1" : {
              "definitionLines" : "151-154",
              "numReferrers" : 1
            },
            "as2_to_as3 2" : {
              "definitionLines" : "156-159",
              "numReferrers" : 1
            },
            "as3_to_as2 100" : {
              "definitionLines" : "161-164",
              "numReferrers" : 1
            }
          }
        },
        "configs/as2core1.cfg" : {
          "bgp neighbor" : {
            "2.1.1.1 (VRF default)" : {
              "definitionLines" : "90,102",
              "numReferrers" : 2
            },
            "2.1.1.2 (VRF default)" : {
              "definitionLines" : "92,103",
              "numReferrers" : 2
            },
            "2.1.3.1 (VRF default)" : {
              "definitionLines" : "94,104",
              "numReferrers" : 2
            },
            "2.1.3.2 (VRF default)" : {
              "definitionLines" : "96,105",
              "numReferrers" : 2
            }
          },
          "bgp peer-group" : {
            "as2" : {
              "definitionLines" : "87",
              "numReferrers" : 4
            }
          },
          "extended ipv4 access-list" : {
            "blocktelnet" : {
              "definitionLines" : "118-120",
              "numReferrers" : 2
            }
          },
          "extended ipv4 access-list line" : {
            "blocktelnet: deny   tcp any any eq telnet" : {
              "definitionLines" : "119",
              "numReferrers" : 1
            },
            "blocktelnet: permit ip any any" : {
              "definitionLines" : "120",
              "numReferrers" : 1
            }
          },
          "interface" : {
            "FastEthernet0/0" : {
              "definitionLines" : "57-60",
              "numReferrers" : 1
            },
            "FastEthernet0/1" : {
              "definitionLines" : "62-65",
              "numReferrers" : 1
            },
            "FastEthernet1/0" : {
              "definitionLines" : "67-71",
              "numReferrers" : 1
            },
            "FastEthernet2/0" : {
              "definitionLines" : "73-77",
              "numReferrers" : 1
            },
            "Loopback0" : {
              "definitionLines" : "54-55",
              "numReferrers" : 5
            }
          }
        },
        "configs/as2core2.cfg" : {
          "bgp neighbor" : {
            "2.1.1.1 (VRF default)" : {
              "definitionLines" : "89,101",
              "numReferrers" : 2
            },
            "2.1.1.2 (VRF default)" : {
              "definitionLines" : "91,102",
              "numReferrers" : 2
            },
            "2.1.3.1 (VRF default)" : {
              "definitionLines" : "93,103",
              "numReferrers" : 2
            },
            "2.1.3.2 (VRF default)" : {
              "definitionLines" : "95,104",
              "numReferrers" : 2
            }
          },
          "bgp peer-group" : {
            "as2" : {
              "definitionLines" : "85",
              "numReferrers" : 4
            }
          },
          "interface" : {
            "FastEthernet0/0" : {
              "definitionLines" : "57-60",
              "numReferrers" : 1
            },
            "FastEthernet0/1" : {
              "definitionLines" : "62-65",
              "numReferrers" : 1
            },
            "FastEthernet1/0" : {
              "definitionLines" : "67-70",
              "numReferrers" : 1
            },
            "FastEthernet2/0" : {
              "definitionLines" : "72-75",
              "numReferrers" : 1
            },
            "Loopback0" : {
              "definitionLines" : "54-55",
              "numReferrers" : 5
            }
          }
        },
        "configs/as2dept1.cfg" : {
          "bgp neighbor" : {
            "2.34.101.3 (VRF default)" : {
              "definitionLines" : "80",
              "numReferrers" : 1
            },
            "2.34.201.3 (VRF default)" : {
              "definitionLines" : "81",
              "numReferrers" : 1
            }
          },
          "bgp peer-group" : {
            "as2" : {
              "definitionLines" : "70",
              "numReferrers" : 2
            }
          },
          "expanded community-list" : {
            "as2_community" : {
              "definitionLines" : "92",
              "numReferrers" : 1
            }
          },
          "extended ipv4 access-list" : {
            "102" : {
              "definitionLines" : "109",
              "numReferrers" : 1
            },
            "105" : {
              "definitionLines" : "110-113",
              "numReferrers" : 0
            },
            "RESTRICT_HOST_TRAFFIC_IN" : {
              "definitionLines" : "102-105",
              "numReferrers" : 1
            },
            "RESTRICT_HOST_TRAFFIC_OUT" : {
              "definitionLines" : "97-100",
              "numReferrers" : 0
            }
          },
          "extended ipv4 access-list line" : {
            "102: permit ip host 2.128.0.0 host 255.255.0.0" : {
              "definitionLines" : "109",
              "numReferrers" : 1
            },
            "105: permit ip host 1.0.1.0 host 255.255.255.0" : {
              "definitionLines" : "110",
              "numReferrers" : 1
            },
            "105: permit ip host 1.0.2.0 host 255.255.255.0" : {
              "definitionLines" : "111",
              "numReferrers" : 1
            },
            "105: permit ip host 3.0.1.0 host 255.255.255.0" : {
              "definitionLines" : "112",
              "numReferrers" : 1
            },
            "105: permit ip host 3.0.2.0 host 255.255.255.0" : {
              "definitionLines" : "113",
              "numReferrers" : 1
            },
            "RESTRICT_HOST_TRAFFIC_IN: deny ip any any" : {
              "definitionLines" : "104",
              "numReferrers" : 1
            },
            "RESTRICT_HOST_TRAFFIC_IN: permit icmp any any" : {
              "definitionLines" : "105",
              "numReferrers" : 1
            },
            "RESTRICT_HOST_TRAFFIC_IN: permit ip 2.128.0.0 0.0.255.255 any" : {
              "definitionLines" : "103",
              "numReferrers" : 1
            },
            "RESTRICT_HOST_TRAFFIC_OUT: deny ip any any" : {
              "definitionLines" : "99",
              "numReferrers" : 1
            },
            "RESTRICT_HOST_TRAFFIC_OUT: permit icmp any any" : {
              "definitionLines" : "100",
              "numReferrers" : 1
            },
            "RESTRICT_HOST_TRAFFIC_OUT: permit ip any 2.128.0.0 0.0.255.255" : {
              "definitionLines" : "98",
              "numReferrers" : 1
            }
          },
          "interface" : {
            "FastEthernet0/0" : {
              "definitionLines" : "51-54",
              "numReferrers" : 1
            },
            "FastEthernet0/1" : {
              "definitionLines" : "56-59",
              "numReferrers" : 1
            },
            "FastEthernet1/0" : {
              "definitionLines" : "61-65",
              "numReferrers" : 1
            },
            "Loopback0" : {
              "definitionLines" : "48-49",
              "numReferrers" : 1
            }
          },
          "route-map" : {
            "as2_to_dept" : {
              "definitionLines" : "120-122",
              "numReferrers" : 1
            },
            "dept_to_as2" : {
              "definitionLines" : "115-118",
              "numReferrers" : 1
            }
          },
          "route-map-clause" : {
            "as2_to_dept 100" : {
              "definitionLines" : "120-122",
              "numReferrers" : 1
            },
            "dept_to_as2 100" : {
              "definitionLines" : "115-118",
              "numReferrers" : 1
            }
          }
        },
        "configs/as2dist1.cfg" : {
          "bgp neighbor" : {
            "2.1.2.1 (VRF default)" : {
              "definitionLines" : "87,98",
              "numReferrers" : 2
            },
            "2.1.2.2 (VRF default)" : {
              "definitionLines" : "89,99",
              "numReferrers" : 2
            },
            "2.34.101.4 (VRF default)" : {
              "definitionLines" : "100",
              "numReferrers" : 1
            }
          },
          "bgp peer-group" : {
            "as2" : {
              "definitionLines" : "82",
              "numReferrers" : 2
            },
            "dept" : {
              "definitionLines" : "84",
              "numReferrers" : 1
            }
          },
          "expanded community-list" : {
            "dept_community" : {
              "definitionLines" : "110",
              "numReferrers" : 1
            }
          },
          "extended ipv4 access-list" : {
            "102" : {
              "definitionLines" : "117",
              "numReferrers" : 0
            },
            "105" : {
              "definitionLines" : "118-121",
              "numReferrers" : 1
            }
          },
          "extended ipv4 access-list line" : {
            "102: permit ip host 2.128.0.0 host 255.255.0.0" : {
              "definitionLines" : "117",
              "numReferrers" : 1
            },
            "105: permit ip host 1.0.1.0 host 255.255.255.0" : {
              "definitionLines" : "118",
              "numReferrers" : 1
            },
            "105: permit ip host 1.0.2.0 host 255.255.255.0" : {
              "definitionLines" : "119",
              "numReferrers" : 1
            },
            "105: permit ip host 3.0.1.0 host 255.255.255.0" : {
              "definitionLines" : "120",
              "numReferrers" : 1
            },
            "105: permit ip host 3.0.2.0 host 255.255.255.0" : {
              "definitionLines" : "121",
              "numReferrers" : 1
            }
          },
          "interface" : {
            "FastEthernet0/0" : {
              "definitionLines" : "57-60",
              "numReferrers" : 1
            },
            "FastEthernet0/1" : {
              "definitionLines" : "62-65",
              "numReferrers" : 1
            },
            "FastEthernet1/0" : {
              "definitionLines" : "67-70",
              "numReferrers" : 1
            },
            "Loopback0" : {
              "definitionLines" : "54-55",
              "numReferrers" : 3
            }
          },
          "route-map" : {
            "as2_to_dept" : {
              "definitionLines" : "123-126",
              "numReferrers" : 1
            },
            "dept_to_as2" : {
              "definitionLines" : "128-130",
              "numReferrers" : 1
            }
          },
          "route-map-clause" : {
            "as2_to_dept 100" : {
              "definitionLines" : "123-126",
              "numReferrers" : 1
            },
            "dept_to_as2 100" : {
              "definitionLines" : "128-130",
              "numReferrers" : 1
            }
          }
        },
        "configs/as2dist2.cfg" : {
          "bgp neighbor" : {
            "2.1.2.1 (VRF default)" : {
              "definitionLines" : "87,98",
              "numReferrers" : 2
            },
            "2.1.2.2 (VRF default)" : {
              "definitionLines" : "89,99",
              "numReferrers" : 2
            },
            "2.34.201.4 (VRF default)" : {
              "definitionLines" : "100",
              "numReferrers" : 1
            }
          },
          "bgp peer-group" : {
            "as2" : {
              "definitionLines" : "82",
              "numReferrers" : 2
            },
            "dept" : {
              "definitionLines" : "84",
              "numReferrers" : 1
            }
          },
          "expanded community-list" : {
            "dept_community" : {
              "definitionLines" : "110",
              "numReferrers" : 1
            }
          },
          "extended ipv4 access-list" : {
            "102" : {
              "definitionLines" : "117",
              "numReferrers" : 0
            },
            "105" : {
              "definitionLines" : "118-121",
              "numReferrers" : 1
            }
          },
          "extended ipv4 access-list line" : {
            "102: permit ip host 2.128.0.0 host 255.255.0.0" : {
              "definitionLines" : "117",
              "numReferrers" : 1
            },
            "105: permit ip host 1.0.1.0 host 255.255.255.0" : {
              "definitionLines" : "118",
              "numReferrers" : 1
            },
            "105: permit ip host 1.0.2.0 host 255.255.255.0" : {
              "definitionLines" : "119",
              "numReferrers" : 1
            },
            "105: permit ip host 3.0.1.0 host 255.255.255.0" : {
              "definitionLines" : "120",
              "numReferrers" : 1
            },
            "105: permit ip host 3.0.2.0 host 255.255.255.0" : {
              "definitionLines" : "121",
              "numReferrers" : 1
            }
          },
          "interface" : {
            "FastEthernet0/0" : {
              "definitionLines" : "57-60",
              "numReferrers" : 1
            },
            "FastEthernet0/1" : {
              "definitionLines" : "62-65",
              "numReferrers" : 1
            },
            "FastEthernet1/0" : {
              "definitionLines" : "67-70",
              "numReferrers" : 1
            },
            "Loopback0" : {
              "definitionLines" : "54-55",
              "numReferrers" : 3
            }
          },
          "route-map" : {
            "as2_to_dept" : {
              "definitionLines" : "123-126",
              "numReferrers" : 1
            },
            "dept_to_as2" : {
              "definitionLines" : "128-130",
              "numReferrers" : 1
            }
          },
          "route-map-clause" : {
            "as2_to_dept 100" : {
              "definitionLines" : "123-126",
              "numReferrers" : 1
            },
            "dept_to_as2 100" : {
              "definitionLines" : "128-130",
              "numReferrers" : 1
            }
          }
        },
        "configs/as2host1.cfg" : {
          "interface" : {
            "FastEthernet0/0" : {
              "definitionLines" : "57-60",
              "numReferrers" : 1
            },
            "FastEthernet0/1" : {
              "definitionLines" : "62-66",
              "numReferrers" : 1
            },
            "Loopback0" : {
              "definitionLines" : "54-55",
              "numReferrers" : 1
            }
          }
        },
        "configs/as3border1.cfg" : {
          "bgp neighbor" : {
            "10.23.21.2 (VRF default)" : {
              "definitionLines" : "94",
              "numReferrers" : 1
            },
            "3.10.1.1 (VRF default)" : {
              "definitionLines" : "81,93",
              "numReferrers" : 2
            }
          },
          "bgp peer-group" : {
            "as1" : {
              "definitionLines" : "74",
              "numReferrers" : 0
            },
            "as2" : {
              "definitionLines" : "76",
              "numReferrers" : 1
            },
            "as3" : {
              "definitionLines" : "78",
              "numReferrers" : 1
            }
          },
          "expanded community-list" : {
            "as1_community" : {
              "definitionLines" : "106",
              "numReferrers" : 1
            },
            "as2_community" : {
              "definitionLines" : "107",
              "numReferrers" : 1
            },
            "as3_community" : {
              "definitionLines" : "108",
              "numReferrers" : 0
            }
          },
          "extended ipv4 access-list" : {
            "101" : {
              "definitionLines" : "116-117",
              "numReferrers" : 1
            },
            "102" : {
              "definitionLines" : "118-119",
              "numReferrers" : 1
            },
            "103" : {
              "definitionLines" : "120-121",
              "numReferrers" : 2
            }
          },
          "extended ipv4 access-list line" : {
            "101: permit ip host 1.0.1.0 host 255.255.255.0" : {
              "definitionLines" : "116",
              "numReferrers" : 1
            },
            "101: permit ip host 1.0.2.0 host 255.255.255.0" : {
              "definitionLines" : "117",
              "numReferrers" : 1
            },
            "102: permit ip host 2.0.0.0 host 255.0.0.0" : {
              "definitionLines" : "118",
              "numReferrers" : 1
            },
            "102: permit ip host 2.128.0.0 host 255.255.0.0" : {
              "definitionLines" : "119",
              "numReferrers" : 1
            },
            "103: permit ip host 3.0.1.0 host 255.255.255.0" : {
              "definitionLines" : "120",
              "numReferrers" : 1
            },
            "103: permit ip host 3.0.2.0 host 255.255.255.0" : {
              "definitionLines" : "121",
              "numReferrers" : 1
            }
          },
          "interface" : {
            "FastEthernet0/0" : {
              "definitionLines" : "55-58",
              "numReferrers" : 1
            },
            "FastEthernet0/1" : {
              "definitionLines" : "60-63",
              "numReferrers" : 1
            },
            "Loopback0" : {
              "definitionLines" : "52-53",
              "numReferrers" : 2
            }
          },
          "ipv4 prefix-list" : {
            "inbound_route_filter" : {
              "definitionLines" : "114-115",
              "numReferrers" : 0
            }
          },
          "route-map" : {
            "as1_to_as3" : {
              "definitionLines" : "133-135",
              "numReferrers" : 1
            },
            "as2_to_as3" : {
              "definitionLines" : "147-149",
              "numReferrers" : 1
            },
            "as3_to_as1" : {
              "definitionLines" : "123-126,128-131",
              "numReferrers" : 1
            },
            "as3_to_as2" : {
              "definitionLines" : "137-140,142-145",
              "numReferrers" : 1
            }
          },
          "route-map-clause" : {
            "as1_to_as3 100" : {
              "definitionLines" : "133-135",
              "numReferrers" : 1
            },
            "as2_to_as3 100" : {
              "definitionLines" : "147-149",
              "numReferrers" : 1
            },
            "as3_to_as1 2" : {
              "definitionLines" : "123-126",
              "numReferrers" : 1
            },
            "as3_to_as1 3" : {
              "definitionLines" : "128-131",
              "numReferrers" : 1
            },
            "as3_to_as2 1" : {
              "definitionLines" : "137-140",
              "numReferrers" : 1
            },
            "as3_to_as2 3" : {
              "definitionLines" : "142-145",
              "numReferrers" : 1
            }
          }
        },
        "configs/as3border2.cfg" : {
          "bgp neighbor" : {
            "10.13.22.1 (VRF default)" : {
              "definitionLines" : "95",
              "numReferrers" : 1
            },
            "3.10.1.1 (VRF default)" : {
              "definitionLines" : "82,94",
              "numReferrers" : 2
            }
          },
          "bgp peer-group" : {
            "as1" : {
              "definitionLines" : "75",
              "numReferrers" : 1
            },
            "as2" : {
              "definitionLines" : "77",
              "numReferrers" : 0
            },
            "as3" : {
              "definitionLines" : "79",
              "numReferrers" : 1
            }
          },
          "expanded community-list" : {
            "as1_community" : {
              "definitionLines" : "107",
              "numReferrers" : 1
            },
            "as2_community" : {
              "definitionLines" : "108",
              "numReferrers" : 1
            },
            "as3_community" : {
              "definitionLines" : "109",
              "numReferrers" : 0
            }
          },
          "extended ipv4 access-list" : {
            "101" : {
              "definitionLines" : "117-118",
              "numReferrers" : 1
            },
            "102" : {
              "definitionLines" : "119-120",
              "numReferrers" : 1
            },
            "103" : {
              "definitionLines" : "121-122",
              "numReferrers" : 2
            }
          },
          "extended ipv4 access-list line" : {
            "101: permit ip host 1.0.1.0 host 255.255.255.0" : {
              "definitionLines" : "117",
              "numReferrers" : 1
            },
            "101: permit ip host 1.0.2.0 host 255.255.255.0" : {
              "definitionLines" : "118",
              "numReferrers" : 1
            },
            "102: permit ip host 2.0.0.0 host 255.0.0.0" : {
              "definitionLines" : "119",
              "numReferrers" : 1
            },
            "102: permit ip host 2.128.0.0 host 255.255.0.0" : {
              "definitionLines" : "120",
              "numReferrers" : 1
            },
            "103: permit ip host 3.0.1.0 host 255.255.255.0" : {
              "definitionLines" : "121",
              "numReferrers" : 1
            },
            "103: permit ip host 3.0.2.0 host 255.255.255.0" : {
              "definitionLines" : "122",
              "numReferrers" : 1
            }
          },
          "interface" : {
            "FastEthernet0/0" : {
              "definitionLines" : "55-58",
              "numReferrers" : 1
            },
            "FastEthernet0/1" : {
              "definitionLines" : "60-63",
              "numReferrers" : 1
            },
            "Loopback0" : {
              "definitionLines" : "52-53",
              "numReferrers" : 2
            }
          },
          "ipv4 prefix-list" : {
            "inbound_route_filter" : {
              "definitionLines" : "115-116",
              "numReferrers" : 0
            }
          },
          "route-map" : {
            "as1_to_as3" : {
              "definitionLines" : "134-136",
              "numReferrers" : 1
            },
            "as2_to_as3" : {
              "definitionLines" : "148-150",
              "numReferrers" : 1
            },
            "as3_to_as1" : {
              "definitionLines" : "124-127,129-132",
              "numReferrers" : 1
            },
            "as3_to_as2" : {
              "definitionLines" : "138-141,143-146",
              "numReferrers" : 1
            }
          },
          "route-map-clause" : {
            "as1_to_as3 100" : {
              "definitionLines" : "134-136",
              "numReferrers" : 1
            },
            "as2_to_as3 100" : {
              "definitionLines" : "148-150",
              "numReferrers" : 1
            },
            "as3_to_as1 2" : {
              "definitionLines" : "124-127",
              "numReferrers" : 1
            },
            "as3_to_as1 3" : {
              "definitionLines" : "129-132",
              "numReferrers" : 1
            },
            "as3_to_as2 1" : {
              "definitionLines" : "138-141",
              "numReferrers" : 1
            },
            "as3_to_as2 3" : {
              "definitionLines" : "143-146",
              "numReferrers" : 1
            }
          }
        },
        "configs/as3core1.cfg" : {
          "bgp neighbor" : {
            "3.1.1.1 (VRF default)" : {
              "definitionLines" : "84,92",
              "numReferrers" : 2
            },
            "3.2.2.2 (VRF default)" : {
              "definitionLines" : "86,93",
              "numReferrers" : 2
            }
          },
          "bgp peer-group" : {
            "as3" : {
              "definitionLines" : "81",
              "numReferrers" : 2
            }
          },
          "interface" : {
            "FastEthernet0/0" : {
              "definitionLines" : "58-61",
              "numReferrers" : 1
            },
            "FastEthernet0/1" : {
              "definitionLines" : "63-66",
              "numReferrers" : 1
            },
            "FastEthernet1/0" : {
              "definitionLines" : "68-69",
              "numReferrers" : 1
            },
            "FastEthernet1/1" : {
              "definitionLines" : "71-72",
              "numReferrers" : 1
            },
            "Loopback0" : {
              "definitionLines" : "55-56",
              "numReferrers" : 3
            }
          }
        }
      },
      "fileMap" : {
        "configs/as1border1.cfg" : [
          "as1border1"
        ],
        "configs/as1border2.cfg" : [
          "as1border2"
        ],
        "configs/as1core1.cfg" : [
          "as1core1"
        ],
        "configs/as2border1.cfg" : [
          "as2border1"
        ],
        "configs/as2border2.cfg" : [
          "as2border2"
        ],
        "configs/as2core1.cfg" : [
          "as2core1"
        ],
        "configs/as2core2.cfg" : [
          "as2core2"
        ],
        "configs/as2dept1.cfg" : [
          "as2dept1"
        ],
        "configs/as2dist1.cfg" : [
          "as2dist1"
        ],
        "configs/as2dist2.cfg" : [
          "as2dist2"
        ],
        "configs/as2host1.cfg" : [
          "as2host1"
        ],
        "configs/as3border1.cfg" : [
          "as3border1"
        ],
        "configs/as3border2.cfg" : [
          "as3border2"
        ],
        "configs/as3core1.cfg" : [
          "as3core1"
        ]
      },
      "referencedStructures" : {
        "configs/as1border1.cfg" : {
          "bgp group" : {
            "as1" : {
              "bgp group neighbor" : [
                14
              ]
            },
            "as2" : {
              "bgp group neighbor" : [
                19
              ]
            },
            "bad-ebgp" : {
              "bgp group neighbor" : [
                27
              ]
            },
            "xanadu" : {
              "bgp group neighbor" : [
                23
              ]
            }
          },
          "bgp neighbor" : {
            "1.10.1.1 (VRF default)" : {
              "bgp neighbor self ref" : [
                14
              ]
            },
            "10.12.11.2 (VRF default)" : {
              "bgp neighbor self ref" : [
                19
              ]
            },
            "3.2.2.2 (VRF default)" : {
              "bgp neighbor self ref" : [
                27
              ]
            },
            "5.6.7.8 (VRF default)" : {
              "bgp neighbor self ref" : [
                23
              ]
            }
          },
          "community" : {
            "as1_to_as2_community" : {
              "policy-statement then add community" : [
                35,
                39
              ]
            },
            "as2_to_as1_community" : {
              "policy-statement from community" : [
                42
              ]
            }
          },
          "interface" : {
            "fe-0/0/0" : {
              "interface" : [
                4
              ]
            },
            "fe-0/0/0.0" : {
              "interface" : [
                4
              ],
              "ospf area interface" : [
                7
              ]
            },
            "fe-0/0/1" : {
              "interface" : [
                5
              ]
            },
            "fe-0/0/1.0" : {
              "interface" : [
                5
              ]
            },
            "lo0" : {
              "interface" : [
                3
              ]
            },
            "lo0.0" : {
              "interface" : [
                3
              ],
              "ospf area interface" : [
                6
              ]
            }
          },
          "policy-statement" : {
            "as1_to_as1" : {
              "bgp export policy-statement" : [
                13
              ]
            },
            "as1_to_as2" : {
              "bgp export policy-statement" : [
                17
              ]
            },
            "as2_to_as1" : {
              "bgp import policy-statement" : [
                18
              ]
            },
            "match_original_prefixes" : {
              "bgp export policy-statement" : [
                22,
                26
              ]
            },
            "ospf-redistribute-connected" : {
              "ospf export policy-statement" : [
                8
              ]
            }
          },
          "policy-statement term" : {
            "as1_to_as1 forward" : {
              "policy-statement term" : [
                30,
                31
              ]
            },
            "as1_to_as1 originate" : {
              "policy-statement term" : [
                32,
                33
              ]
            },
            "as1_to_as2 as3" : {
              "policy-statement term" : [
                38,
                39,
                40,
                41
              ]
            },
            "as1_to_as2 originate" : {
              "policy-statement term" : [
                34,
                35,
                36,
                37
              ]
            },
            "as2_to_as1 1" : {
              "policy-statement term" : [
                42,
                43,
                44
              ]
            },
            "match_original_prefixes 1" : {
              "policy-statement term" : [
                45,
                46
              ]
            }
          },
          "prefix-list" : {
            "as3_prefixes" : {
              "policy-statement prefix-list" : [
                38
              ]
            },
            "original_prefixes" : {
              "policy-statement prefix-list" : [
                32,
                34,
                45
              ]
            }
          },
          "routing-instance" : {
            "master" : {
              "routing-instance" : [
                0
              ]
            }
          }
        },
        "configs/as1border2.cfg" : {
          "bgp group" : {
            "as1" : {
              "bgp group neighbor" : [
                15
              ]
            },
            "as3" : {
              "bgp group neighbor" : [
                20
              ]
            },
            "as4" : {
              "bgp group neighbor" : [
                25
              ]
            }
          },
          "bgp neighbor" : {
            "1.10.1.1 (VRF default)" : {
              "bgp neighbor self ref" : [
                15
              ]
            },
            "10.13.22.3 (VRF default)" : {
              "bgp neighbor self ref" : [
                20
              ]
            },
            "10.14.22.4 (VRF default)" : {
              "bgp neighbor self ref" : [
                25
              ]
            }
          },
          "community" : {
            "as1_to_as3_community" : {
              "policy-statement then add community" : [
                33,
                37
              ]
            },
            "as1_to_as4_community" : {
              "policy-statement then add community" : [
                44,
                47
              ]
            },
            "as3_to_as1_community" : {
              "policy-statement from community" : [
                40
              ]
            },
            "as4_to_as1_community" : {
              "policy-statement from community" : [
                50
              ]
            }
          },
          "interface" : {
            "fe-0/0/0" : {
              "interface" : [
                4
              ]
            },
            "fe-0/0/0.0" : {
              "interface" : [
                4
              ],
              "ospf area interface" : [
                8
              ]
            },
            "fe-0/0/1" : {
              "interface" : [
                5
              ]
            },
            "fe-0/0/1.0" : {
              "interface" : [
                5
              ]
            },
            "fe-0/0/2" : {
              "interface" : [
                6
              ]
            },
            "fe-0/0/2.0" : {
              "interface" : [
                6
              ]
            },
            "lo0" : {
              "interface" : [
                3
              ]
            },
            "lo0.0" : {
              "interface" : [
                3
              ],
              "ospf area interface" : [
                7
              ]
            }
          },
          "policy-statement" : {
            "as1_to_as1" : {
              "bgp export policy-statement" : [
                14
              ]
            },
            "as1_to_as3" : {
              "bgp export policy-statement" : [
                18
              ]
            },
            "as1_to_as4" : {
              "bgp export policy-statement" : [
                23
              ]
            },
            "as3_to_as1" : {
              "bgp import policy-statement" : [
                19
              ]
            },
            "as4_to_as1" : {
              "bgp import policy-statement" : [
                24
              ]
            },
            "ospf-redistribute-connected" : {
              "ospf export policy-statement" : [
                9
              ]
            }
          },
          "policy-statement term" : {
            "as1_to_as1 forward" : {
              "policy-statement term" : [
                28,
                29
              ]
            },
            "as1_to_as1 originate" : {
              "policy-statement term" : [
                30,
                31
              ]
            },
            "as1_to_as3 as3" : {
              "policy-statement term" : [
                36,
                37,
                38,
                39
              ]
            },
            "as1_to_as3 originate" : {
              "policy-statement term" : [
                32,
                33,
                34,
                35
              ]
            },
            "as1_to_as4 as3" : {
              "policy-statement term" : [
                47,
                48,
                49
              ]
            },
            "as1_to_as4 originate" : {
              "policy-statement term" : [
                43,
                44,
                45,
                46
              ]
            },
            "as3_to_as1 1" : {
              "policy-statement term" : [
                40,
                41,
                42
              ]
            },
            "as4_to_as1 1" : {
              "policy-statement term" : [
                50,
                51,
                52,
                53
              ]
            }
          },
          "prefix-list" : {
            "as2_prefixes" : {
              "policy-statement prefix-list" : [
                36
              ]
            },
            "as4_prefixes" : {
              "policy-statement prefix-list-filter" : [
                51
              ]
            },
            "original_prefixes" : {
              "policy-statement prefix-list" : [
                30,
                32,
                43
              ]
            }
          },
          "routing-instance" : {
            "master" : {
              "routing-instance" : [
                0
              ]
            }
          }
        },
        "configs/as1core1.cfg" : {
          "bgp neighbor" : {
            "1.1.1.1 (VRF default)" : {
              "bgp neighbor self ref" : [
                75,
                83
              ]
            },
            "1.2.2.2 (VRF default)" : {
              "bgp neighbor self ref" : [
                77,
                84
              ]
            }
          },
          "bgp peer-group" : {
            "as1" : {
              "bgp neighbor peer-group" : [
                74,
                76
              ]
            }
          },
          "interface" : {
            "FastEthernet0/0" : {
              "interface" : [
                54
              ]
            },
            "FastEthernet0/1" : {
              "interface" : [
                59
              ]
            },
            "Loopback0" : {
              "interface" : [
                51
              ],
              "update-source interface" : [
                75,
                77
              ]
            }
          }
        },
        "configs/as2border1.cfg" : {
          "bgp neighbor" : {
            "10.12.11.1 (VRF default)" : {
              "bgp neighbor self ref" : [
                105
              ]
            },
            "2.1.2.1 (VRF default)" : {
              "bgp neighbor self ref" : [
                89,
                103
              ]
            },
            "2.1.2.2 (VRF default)" : {
              "bgp neighbor self ref" : [
                90,
                104
              ]
            }
          },
          "bgp peer-group" : {
            "as1" : {
              "bgp neighbor peer-group" : [
                91
              ]
            },
            "as2" : {
              "bgp neighbor peer-group" : [
                87,
                88
              ]
            }
          },
          "community-list" : {
            "as1_community" : {
              "route-map match community-list" : [
                148
              ]
            },
            "as3_community" : {
              "route-map match community-list" : [
                162
              ]
            }
          },
          "extended ipv4 access-list line" : {
            "101: permit ip host 1.0.1.0 host 255.255.255.0" : {
              "extended ipv4 access-list line" : [
                130
              ]
            },
            "101: permit ip host 1.0.2.0 host 255.255.255.0" : {
              "extended ipv4 access-list line" : [
                131
              ]
            },
            "102: permit ip host 2.0.0.0 host 255.0.0.0" : {
              "extended ipv4 access-list line" : [
                132
              ]
            },
            "102: permit ip host 2.128.0.0 host 255.255.0.0" : {
              "extended ipv4 access-list line" : [
                133
              ]
            },
            "103: permit ip host 3.0.1.0 host 255.255.255.0" : {
              "extended ipv4 access-list line" : [
                134
              ]
            },
            "103: permit ip host 3.0.2.0 host 255.255.255.0" : {
              "extended ipv4 access-list line" : [
                135
              ]
            },
            "BLOCK_SPOOF_IN: deny ip 2.0.0.0 0.255.255.255 any" : {
              "extended ipv4 access-list line" : [
                123
              ]
            },
            "BLOCK_SPOOF_IN: permit ip any any" : {
              "extended ipv4 access-list line" : [
                124
              ]
            }
          },
          "interface" : {
            "FastEthernet0/0" : {
              "interface" : [
                55
              ]
            },
            "FastEthernet0/1" : {
              "interface" : [
                61
              ]
            },
            "FastEthernet1/0" : {
              "interface" : [
                66
              ]
            },
            "Loopback0" : {
              "interface" : [
                52
              ],
              "update-source interface" : [
                89,
                90
              ]
            }
          },
          "ipv4 acl" : {
            "101" : {
              "route-map match ipv4 access-list" : [
                152
              ]
            },
            "102" : {
              "route-map match ipv4 access-list" : [
                138,
                157
              ]
            },
            "103" : {
              "route-map match ipv4 access-list" : [
                143
              ]
            },
            "BLOCK_SPOOF_IN" : {
              "interface incoming ip access-list" : [
                57
              ]
            }
          },
          "route-map" : {
            "as1_to_as2" : {
              "bgp inbound route-map" : [
                100
              ]
            },
            "as2_to_as1" : {
              "bgp outbound route-map" : [
                99
              ]
            },
            "as2_to_as3" : {
              "bgp outbound route-map" : [
                101
              ]
            },
            "as3_to_as2" : {
              "bgp inbound route-map" : [
                102
              ]
            }
          },
          "route-map-clause" : {
            "as1_to_as2 100" : {
              "route-map clause" : [
                147
              ]
            },
            "as2_to_as1 2" : {
              "route-map clause" : [
                137
              ]
            },
            "as2_to_as1 3" : {
              "route-map clause" : [
                142
              ]
            },
            "as2_to_as3 1" : {
              "route-map clause" : [
                151
              ]
            },
            "as2_to_as3 2" : {
              "route-map clause" : [
                156
              ]
            },
            "as3_to_as2 100" : {
              "route-map clause" : [
                161
              ]
            }
          }
        },
        "configs/as2border2.cfg" : {
          "bgp neighbor" : {
            "10.23.21.3 (VRF default)" : {
              "bgp neighbor self ref" : [
                105
              ]
            },
            "2.1.2.1 (VRF default)" : {
              "bgp neighbor self ref" : [
                89,
                103
              ]
            },
            "2.1.2.2 (VRF default)" : {
              "bgp neighbor self ref" : [
                90,
                104
              ]
            }
          },
          "bgp peer-group" : {
            "as2" : {
              "bgp neighbor peer-group" : [
                87,
                88
              ]
            },
            "as3" : {
              "bgp neighbor peer-group" : [
                91
              ]
            }
          },
          "community-list" : {
            "as1_community" : {
              "route-map match community-list" : [
                147
              ]
            },
            "as3_community" : {
              "route-map match community-list" : [
                162
              ]
            }
          },
          "extended ipv4 access-list line" : {
            "101: permit ip host 1.0.1.0 host 255.255.255.0" : {
              "extended ipv4 access-list line" : [
                129
              ]
            },
            "101: permit ip host 1.0.2.0 host 255.255.255.0" : {
              "extended ipv4 access-list line" : [
                130
              ]
            },
            "102: permit ip host 2.0.0.0 host 255.0.0.0" : {
              "extended ipv4 access-list line" : [
                131
              ]
            },
            "102: permit ip host 2.128.0.0 host 255.255.0.0" : {
              "extended ipv4 access-list line" : [
                132
              ]
            },
            "103: permit ip host 3.0.1.0 host 255.255.255.0" : {
              "extended ipv4 access-list line" : [
                133
              ]
            },
            "103: permit ip host 3.0.2.0 host 255.255.255.0" : {
              "extended ipv4 access-list line" : [
                134
              ]
            },
            "BLOCK_SPOOF_IN: deny ip 2.0.0.0 0.255.255.255 any" : {
              "extended ipv4 access-list line" : [
                123
              ]
            },
            "BLOCK_SPOOF_IN: permit ip any any" : {
              "extended ipv4 access-list line" : [
                124
              ]
            }
          },
          "interface" : {
            "FastEthernet0/0" : {
              "interface" : [
                55
              ]
            },
            "FastEthernet0/1" : {
              "interface" : [
                61
              ]
            },
            "FastEthernet1/0" : {
              "interface" : [
                66
              ]
            },
            "Loopback0" : {
              "interface" : [
                52
              ],
              "update-source interface" : [
                89,
                90
              ]
            }
          },
          "ipv4 acl" : {
            "101" : {
              "route-map match ipv4 access-list" : [
                152
              ]
            },
            "102" : {
              "route-map match ipv4 access-list" : [
                137,
                157
              ]
            },
            "103" : {
              "route-map match ipv4 access-list" : [
                142
              ]
            },
            "BLOCK_SPOOF_IN" : {
              "interface incoming ip access-list" : [
                57
              ]
            }
          },
          "route-map" : {
            "as1_to_as2" : {
              "bgp inbound route-map" : [
                100
              ]
            },
            "as2_to_as1" : {
              "bgp outbound route-map" : [
                99
              ]
            },
            "as2_to_as3" : {
              "bgp outbound route-map" : [
                101
              ]
            },
            "as3_to_as2" : {
              "bgp inbound route-map" : [
                102
              ]
            }
          },
          "route-map-clause" : {
            "as1_to_as2 100" : {
              "route-map clause" : [
                146
              ]
            },
            "as2_to_as1 2" : {
              "route-map clause" : [
                136
              ]
            },
            "as2_to_as1 3" : {
              "route-map clause" : [
                141
              ]
            },
            "as2_to_as3 1" : {
              "route-map clause" : [
                151
              ]
            },
            "as2_to_as3 2" : {
              "route-map clause" : [
                156
              ]
            },
            "as3_to_as2 100" : {
              "route-map clause" : [
                161
              ]
            }
          }
        },
        "configs/as2core1.cfg" : {
          "bgp neighbor" : {
            "2.1.1.1 (VRF default)" : {
              "bgp neighbor self ref" : [
                90,
                102
              ]
            },
            "2.1.1.2 (VRF default)" : {
              "bgp neighbor self ref" : [
                92,
                103
              ]
            },
            "2.1.3.1 (VRF default)" : {
              "bgp neighbor self ref" : [
                94,
                104
              ]
            },
            "2.1.3.2 (VRF default)" : {
              "bgp neighbor self ref" : [
                96,
                105
              ]
            }
          },
          "bgp peer-group" : {
            "as2" : {
              "bgp neighbor peer-group" : [
                89,
                91,
                93,
                95
              ]
            }
          },
          "extended ipv4 access-list line" : {
            "blocktelnet: deny   tcp any any eq telnet" : {
              "extended ipv4 access-list line" : [
                119
              ]
            },
            "blocktelnet: permit ip any any" : {
              "extended ipv4 access-list line" : [
                120
              ]
            }
          },
          "interface" : {
            "FastEthernet0/0" : {
              "interface" : [
                57
              ]
            },
            "FastEthernet0/1" : {
              "interface" : [
                62
              ]
            },
            "FastEthernet1/0" : {
              "interface" : [
                67
              ]
            },
            "FastEthernet2/0" : {
              "interface" : [
                73
              ]
            },
            "Loopback0" : {
              "interface" : [
                54
              ],
              "update-source interface" : [
                90,
                92,
                94,
                96
              ]
            }
          },
          "ipv4 acl" : {
            "blocktelnet" : {
              "interface incoming ip access-list" : [
                69,
                75
              ]
            }
          }
        },
        "configs/as2core2.cfg" : {
          "bgp neighbor" : {
            "2.1.1.1 (VRF default)" : {
              "bgp neighbor self ref" : [
                89,
                101
              ]
            },
            "2.1.1.2 (VRF default)" : {
              "bgp neighbor self ref" : [
                91,
                102
              ]
            },
            "2.1.3.1 (VRF default)" : {
              "bgp neighbor self ref" : [
                93,
                103
              ]
            },
            "2.1.3.2 (VRF default)" : {
              "bgp neighbor self ref" : [
                95,
                104
              ]
            }
          },
          "bgp peer-group" : {
            "as2" : {
              "bgp neighbor peer-group" : [
                88,
                90,
                92,
                94
              ]
            }
          },
          "interface" : {
            "FastEthernet0/0" : {
              "interface" : [
                57
              ]
            },
            "FastEthernet0/1" : {
              "interface" : [
                62
              ]
            },
            "FastEthernet1/0" : {
              "interface" : [
                67
              ]
            },
            "FastEthernet2/0" : {
              "interface" : [
                72
              ]
            },
            "Loopback0" : {
              "interface" : [
                54
              ],
              "update-source interface" : [
                89,
                91,
                93,
                95
              ]
            }
          },
          "route-map" : {
            "filter-bogons" : {
              "bgp inbound route-map" : [
                87
              ]
            }
          }
        },
        "configs/as2dept1.cfg" : {
          "bgp neighbor" : {
            "2.34.101.3 (VRF default)" : {
              "bgp neighbor self ref" : [
                80
              ]
            },
            "2.34.201.3 (VRF default)" : {
              "bgp neighbor self ref" : [
                81
              ]
            }
          },
          "bgp peer-group" : {
            "as2" : {
              "bgp neighbor peer-group" : [
                72,
                73
              ]
            }
          },
          "community-list" : {
            "as2_community" : {
              "route-map match community-list" : [
                121
              ]
            }
          },
          "extended ipv4 access-list line" : {
            "102: permit ip host 2.128.0.0 host 255.255.0.0" : {
              "extended ipv4 access-list line" : [
                109
              ]
            },
            "105: permit ip host 1.0.1.0 host 255.255.255.0" : {
              "extended ipv4 access-list line" : [
                110
              ]
            },
            "105: permit ip host 1.0.2.0 host 255.255.255.0" : {
              "extended ipv4 access-list line" : [
                111
              ]
            },
            "105: permit ip host 3.0.1.0 host 255.255.255.0" : {
              "extended ipv4 access-list line" : [
                112
              ]
            },
            "105: permit ip host 3.0.2.0 host 255.255.255.0" : {
              "extended ipv4 access-list line" : [
                113
              ]
            },
            "RESTRICT_HOST_TRAFFIC_IN: deny ip any any" : {
              "extended ipv4 access-list line" : [
                104
              ]
            },
            "RESTRICT_HOST_TRAFFIC_IN: permit icmp any any" : {
              "extended ipv4 access-list line" : [
                105
              ]
            },
            "RESTRICT_HOST_TRAFFIC_IN: permit ip 2.128.0.0 0.0.255.255 any" : {
              "extended ipv4 access-list line" : [
                103
              ]
            },
            "RESTRICT_HOST_TRAFFIC_OUT: deny ip any any" : {
              "extended ipv4 access-list line" : [
                99
              ]
            },
            "RESTRICT_HOST_TRAFFIC_OUT: permit icmp any any" : {
              "extended ipv4 access-list line" : [
                100
              ]
            },
            "RESTRICT_HOST_TRAFFIC_OUT: permit ip any 2.128.0.0 0.0.255.255" : {
              "extended ipv4 access-list line" : [
                98
              ]
            }
          },
          "interface" : {
            "FastEthernet0/0" : {
              "interface" : [
                51
              ]
            },
            "FastEthernet0/1" : {
              "interface" : [
                56
              ]
            },
            "FastEthernet1/0" : {
              "interface" : [
                61
              ]
            },
            "Loopback0" : {
              "interface" : [
                48
              ]
            }
          },
          "ipv4 acl" : {
            "102" : {
              "route-map match ipv4 access-list" : [
                116
              ]
            },
            "RESTRICT_HOST_TRAFFIC_IN" : {
              "interface incoming ip access-list" : [
                63
              ]
            }
          },
          "route-map" : {
            "as2_to_dept" : {
              "bgp inbound route-map" : [
                78
              ]
            },
            "dept_to_as2" : {
              "bgp outbound route-map" : [
                79
              ]
            }
          },
          "route-map-clause" : {
            "as2_to_dept 100" : {
              "route-map clause" : [
                120
              ]
            },
            "dept_to_as2 100" : {
              "route-map clause" : [
                115
              ]
            }
          }
        },
        "configs/as2dist1.cfg" : {
          "bgp neighbor" : {
            "2.1.2.1 (VRF default)" : {
              "bgp neighbor self ref" : [
                87,
                98
              ]
            },
            "2.1.2.2 (VRF default)" : {
              "bgp neighbor self ref" : [
                89,
                99
              ]
            },
            "2.34.101.4 (VRF default)" : {
              "bgp neighbor self ref" : [
                100
              ]
            }
          },
          "bgp peer-group" : {
            "as2" : {
              "bgp neighbor peer-group" : [
                86,
                88
              ]
            },
            "dept" : {
              "bgp neighbor peer-group" : [
                90
              ]
            }
          },
          "community-list" : {
            "dept_community" : {
              "route-map match community-list" : [
                129
              ]
            }
          },
          "extended ipv4 access-list line" : {
            "102: permit ip host 2.128.0.0 host 255.255.0.0" : {
              "extended ipv4 access-list line" : [
                117
              ]
            },
            "105: permit ip host 1.0.1.0 host 255.255.255.0" : {
              "extended ipv4 access-list line" : [
                118
              ]
            },
            "105: permit ip host 1.0.2.0 host 255.255.255.0" : {
              "extended ipv4 access-list line" : [
                119
              ]
            },
            "105: permit ip host 3.0.1.0 host 255.255.255.0" : {
              "extended ipv4 access-list line" : [
                120
              ]
            },
            "105: permit ip host 3.0.2.0 host 255.255.255.0" : {
              "extended ipv4 access-list line" : [
                121
              ]
            }
          },
          "interface" : {
            "FastEthernet0/0" : {
              "interface" : [
                57
              ]
            },
            "FastEthernet0/1" : {
              "interface" : [
                62
              ]
            },
            "FastEthernet1/0" : {
              "interface" : [
                67
              ]
            },
            "Loopback0" : {
              "interface" : [
                54
              ],
              "update-source interface" : [
                87,
                89
              ]
            }
          },
          "ipv4 acl" : {
            "105" : {
              "route-map match ipv4 access-list" : [
                124
              ]
            }
          },
          "route-map" : {
            "as2_to_dept" : {
              "bgp outbound route-map" : [
                96
              ]
            },
            "dept_to_as2" : {
              "bgp inbound route-map" : [
                97
              ]
            }
          },
          "route-map-clause" : {
            "as2_to_dept 100" : {
              "route-map clause" : [
                123
              ]
            },
            "dept_to_as2 100" : {
              "route-map clause" : [
                128
              ]
            }
          }
        },
        "configs/as2dist2.cfg" : {
          "bgp neighbor" : {
            "2.1.2.1 (VRF default)" : {
              "bgp neighbor self ref" : [
                87,
                98
              ]
            },
            "2.1.2.2 (VRF default)" : {
              "bgp neighbor self ref" : [
                89,
                99
              ]
            },
            "2.34.201.4 (VRF default)" : {
              "bgp neighbor self ref" : [
                100
              ]
            }
          },
          "bgp peer-group" : {
            "as2" : {
              "bgp neighbor peer-group" : [
                86,
                88
              ]
            },
            "dept" : {
              "bgp neighbor peer-group" : [
                90
              ]
            }
          },
          "community-list" : {
            "dept_community" : {
              "route-map match community-list" : [
                129
              ]
            }
          },
          "extended ipv4 access-list line" : {
            "102: permit ip host 2.128.0.0 host 255.255.0.0" : {
              "extended ipv4 access-list line" : [
                117
              ]
            },
            "105: permit ip host 1.0.1.0 host 255.255.255.0" : {
              "extended ipv4 access-list line" : [
                118
              ]
            },
            "105: permit ip host 1.0.2.0 host 255.255.255.0" : {
              "extended ipv4 access-list line" : [
                119
              ]
            },
            "105: permit ip host 3.0.1.0 host 255.255.255.0" : {
              "extended ipv4 access-list line" : [
                120
              ]
            },
            "105: permit ip host 3.0.2.0 host 255.255.255.0" : {
              "extended ipv4 access-list line" : [
                121
              ]
            }
          },
          "interface" : {
            "FastEthernet0/0" : {
              "interface" : [
                57
              ]
            },
            "FastEthernet0/1" : {
              "interface" : [
                62
              ]
            },
            "FastEthernet1/0" : {
              "interface" : [
                67
              ]
            },
            "Loopback0" : {
              "interface" : [
                54
              ],
              "update-source interface" : [
                87,
                89
              ]
            }
          },
          "ipv4 acl" : {
            "105" : {
              "route-map match ipv4 access-list" : [
                124
              ]
            }
          },
          "route-map" : {
            "as2_to_dept" : {
              "bgp outbound route-map" : [
                96
              ]
            },
            "dept_to_as2" : {
              "bgp inbound route-map" : [
                97
              ]
            }
          },
          "route-map-clause" : {
            "as2_to_dept 100" : {
              "route-map clause" : [
                123
              ]
            },
            "dept_to_as2 100" : {
              "route-map clause" : [
                128
              ]
            }
          }
        },
        "configs/as2host1.cfg" : {
          "interface" : {
            "FastEthernet0/0" : {
              "interface" : [
                57
              ]
            },
            "FastEthernet0/1" : {
              "interface" : [
                62
              ]
            },
            "Loopback0" : {
              "interface" : [
                54
              ]
            }
          }
        },
        "configs/as3border1.cfg" : {
          "bgp neighbor" : {
            "10.23.21.2 (VRF default)" : {
              "bgp neighbor self ref" : [
                94
              ]
            },
            "3.10.1.1 (VRF default)" : {
              "bgp neighbor self ref" : [
                81,
                93
              ]
            }
          },
          "bgp peer-group" : {
            "as2" : {
              "bgp neighbor peer-group" : [
                82
              ]
            },
            "as3" : {
              "bgp neighbor peer-group" : [
                80
              ]
            }
          },
          "community-list" : {
            "as1_community" : {
              "route-map match community-list" : [
                134
              ]
            },
            "as2_community" : {
              "route-map match community-list" : [
                148
              ]
            }
          },
          "extended ipv4 access-list line" : {
            "101: permit ip host 1.0.1.0 host 255.255.255.0" : {
              "extended ipv4 access-list line" : [
                116
              ]
            },
            "101: permit ip host 1.0.2.0 host 255.255.255.0" : {
              "extended ipv4 access-list line" : [
                117
              ]
            },
            "102: permit ip host 2.0.0.0 host 255.0.0.0" : {
              "extended ipv4 access-list line" : [
                118
              ]
            },
            "102: permit ip host 2.128.0.0 host 255.255.0.0" : {
              "extended ipv4 access-list line" : [
                119
              ]
            },
            "103: permit ip host 3.0.1.0 host 255.255.255.0" : {
              "extended ipv4 access-list line" : [
                120
              ]
            },
            "103: permit ip host 3.0.2.0 host 255.255.255.0" : {
              "extended ipv4 access-list line" : [
                121
              ]
            }
          },
          "interface" : {
            "FastEthernet0/0" : {
              "interface" : [
                55
              ]
            },
            "FastEthernet0/1" : {
              "interface" : [
                60
              ]
            },
            "Loopback0" : {
              "interface" : [
                52
              ],
              "update-source interface" : [
                81
              ]
            }
          },
          "ipv4 acl" : {
            "101" : {
              "route-map match ipv4 access-list" : [
                138
              ]
            },
            "102" : {
              "route-map match ipv4 access-list" : [
                124
              ]
            },
            "103" : {
              "route-map match ipv4 access-list" : [
                129,
                143
              ]
            }
          },
          "route-map" : {
            "as1_to_as3" : {
              "bgp inbound route-map" : [
                90
              ]
            },
            "as2_to_as3" : {
              "bgp inbound route-map" : [
                92
              ]
            },
            "as3_to_as1" : {
              "bgp outbound route-map" : [
                89
              ]
            },
            "as3_to_as2" : {
              "bgp outbound route-map" : [
                91
              ]
            }
          },
          "route-map-clause" : {
            "as1_to_as3 100" : {
              "route-map clause" : [
                133
              ]
            },
            "as2_to_as3 100" : {
              "route-map clause" : [
                147
              ]
            },
            "as3_to_as1 2" : {
              "route-map clause" : [
                123
              ]
            },
            "as3_to_as1 3" : {
              "route-map clause" : [
                128
              ]
            },
            "as3_to_as2 1" : {
              "route-map clause" : [
                137
              ]
            },
            "as3_to_as2 3" : {
              "route-map clause" : [
                142
              ]
            }
          }
        },
        "configs/as3border2.cfg" : {
          "bgp neighbor" : {
            "10.13.22.1 (VRF default)" : {
              "bgp neighbor self ref" : [
                95
              ]
            },
            "3.10.1.1 (VRF default)" : {
              "bgp neighbor self ref" : [
                82,
                94
              ]
            }
          },
          "bgp peer-group" : {
            "as1" : {
              "bgp neighbor peer-group" : [
                83
              ]
            },
            "as3" : {
              "bgp neighbor peer-group" : [
                81
              ]
            }
          },
          "community-list" : {
            "as1_community" : {
              "route-map match community-list" : [
                135
              ]
            },
            "as2_community" : {
              "route-map match community-list" : [
                149
              ]
            }
          },
          "extended ipv4 access-list line" : {
            "101: permit ip host 1.0.1.0 host 255.255.255.0" : {
              "extended ipv4 access-list line" : [
                117
              ]
            },
            "101: permit ip host 1.0.2.0 host 255.255.255.0" : {
              "extended ipv4 access-list line" : [
                118
              ]
            },
            "102: permit ip host 2.0.0.0 host 255.0.0.0" : {
              "extended ipv4 access-list line" : [
                119
              ]
            },
            "102: permit ip host 2.128.0.0 host 255.255.0.0" : {
              "extended ipv4 access-list line" : [
                120
              ]
            },
            "103: permit ip host 3.0.1.0 host 255.255.255.0" : {
              "extended ipv4 access-list line" : [
                121
              ]
            },
            "103: permit ip host 3.0.2.0 host 255.255.255.0" : {
              "extended ipv4 access-list line" : [
                122
              ]
            }
          },
          "interface" : {
            "FastEthernet0/0" : {
              "interface" : [
                55
              ]
            },
            "FastEthernet0/1" : {
              "interface" : [
                60
              ]
            },
            "Loopback0" : {
              "interface" : [
                52
              ],
              "update-source interface" : [
                82
              ]
            }
          },
          "ipv4 acl" : {
            "101" : {
              "route-map match ipv4 access-list" : [
                139
              ]
            },
            "102" : {
              "route-map match ipv4 access-list" : [
                125
              ]
            },
            "103" : {
              "route-map match ipv4 access-list" : [
                130,
                144
              ]
            }
          },
          "route-map" : {
            "as1_to_as3" : {
              "bgp inbound route-map" : [
                91
              ]
            },
            "as2_to_as3" : {
              "bgp inbound route-map" : [
                93
              ]
            },
            "as3_to_as1" : {
              "bgp outbound route-map" : [
                90
              ]
            },
            "as3_to_as2" : {
              "bgp outbound route-map" : [
                92
              ]
            }
          },
          "route-map-clause" : {
            "as1_to_as3 100" : {
              "route-map clause" : [
                134
              ]
            },
            "as2_to_as3 100" : {
              "route-map clause" : [
                148
              ]
            },
            "as3_to_as1 2" : {
              "route-map clause" : [
                124
              ]
            },
            "as3_to_as1 3" : {
              "route-map clause" : [
                129
              ]
            },
            "as3_to_as2 1" : {
              "route-map clause" : [
                138
              ]
            },
            "as3_to_as2 3" : {
              "route-map clause" : [
                143
              ]
            }
          }
        },
        "configs/as3core1.cfg" : {
          "bgp neighbor" : {
            "3.1.1.1 (VRF default)" : {
              "bgp neighbor self ref" : [
                84,
                92
              ]
            },
            "3.2.2.2 (VRF default)" : {
              "bgp neighbor self ref" : [
                86,
                93
              ]
            }
          },
          "bgp peer-group" : {
            "as3" : {
              "bgp neighbor peer-group" : [
                83,
                85
              ]
            }
          },
          "interface" : {
            "FastEthernet0/0" : {
              "interface" : [
                58
              ]
            },
            "FastEthernet0/1" : {
              "interface" : [
                63
              ]
            },
            "FastEthernet1/0" : {
              "interface" : [
                68
              ]
            },
            "FastEthernet1/1" : {
              "interface" : [
                71
              ]
            },
            "Loopback0" : {
              "interface" : [
                55
              ],
              "update-source interface" : [
                84,
                86
              ]
            }
          }
        }
      },
      "undefinedReferences" : {
        "configs/as1border1.cfg" : { },
        "configs/as1border2.cfg" : { },
        "configs/as1core1.cfg" : { },
        "configs/as2border1.cfg" : { },
        "configs/as2border2.cfg" : { },
        "configs/as2core1.cfg" : { },
        "configs/as2core2.cfg" : {
          "route-map" : {
            "filter-bogons" : {
              "bgp inbound route-map" : [
                87
              ]
            }
          }
        },
        "configs/as2dept1.cfg" : { },
        "configs/as2dist1.cfg" : { },
        "configs/as2dist2.cfg" : { },
        "configs/as2host1.cfg" : { },
        "configs/as3border1.cfg" : { },
        "configs/as3border2.cfg" : { },
        "configs/as3core1.cfg" : { }
      },
      "version" : "0.36.0",
      "warnings" : {
        "internet" : { }
      }
    },
    {
      "class" : "org.batfish.datamodel.answers.InitInfoAnswerElement",
      "parseStatus" : {
        "configs/as1border1.cfg" : "PASSED",
        "configs/as1border2.cfg" : "PASSED",
        "configs/as1core1.cfg" : "PASSED",
        "configs/as2border1.cfg" : "PASSED",
        "configs/as2border2.cfg" : "PASSED",
        "configs/as2core1.cfg" : "PASSED",
        "configs/as2core2.cfg" : "PASSED",
        "configs/as2dept1.cfg" : "PASSED",
        "configs/as2dist1.cfg" : "PASSED",
        "configs/as2dist2.cfg" : "PASSED",
        "configs/as2host1.cfg" : "PASSED",
        "configs/as3border1.cfg" : "PASSED",
        "configs/as3border2.cfg" : "PASSED",
        "configs/as3core1.cfg" : "PASSED"
      }
    }
  ],
  "status" : "SUCCESS",
  "summary" : {
    "numFailed" : 0,
    "numPassed" : 0,
    "numResults" : 0
  }
}