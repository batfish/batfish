load-questions questions/stable

# validate aaaAuthenticationLogin
test -raw tests/questions/stable/aaaAuthenticationLogin.ref validate-template aaaAuthenticationLogin nodes=".*"

# validate definedStructures
test -raw tests/questions/stable/definedStructures.ref validate-template definedStructures nodes="n1", names="m1", types="t1"

# validate fileParseStatus
test -raw tests/questions/stable/fileParseStatus.ref validate-template fileParseStatus

# validate ipOwners
test -raw tests/questions/stable/ipOwners.ref validate-template ipOwners duplicatesOnly=false

# validate initIssues
test -raw tests/questions/stable/initIssues.ref validate-template initIssues

# validate edges
test -raw tests/questions/stable/edges.ref validate-template edges edgeType="bgp", nodes=".*", remoteNodes=".*"

# validate edgesBgp
test -raw tests/questions/stable/edgesBgp.ref validate-template edgesBgp nodes=".*", remoteNodes=".*"

# validate edgesEigrp
test -raw tests/questions/stable/edgesEigrp.ref validate-template edgesEigrp nodes=".*", remoteNodes=".*"

# validate edgesIpsec
test -raw tests/questions/stable/edgesIpsec.ref validate-template edgesIpsec nodes=".*", remoteNodes=".*"

# validate edgesIsis
test -raw tests/questions/stable/edgesIsis.ref validate-template edgesIsis nodes=".*", remoteNodes=".*"

# validate edgesLayer1
test -raw tests/questions/stable/edgesLayer1.ref validate-template edgesLayer1 nodes=".*", remoteNodes=".*"

# validate edgesLayer2
test -raw tests/questions/stable/edgesLayer2.ref validate-template edgesLayer2 nodes=".*", remoteNodes=".*"

# validate edgesLayer3
test -raw tests/questions/stable/edgesLayer3.ref validate-template edgesLayer3 nodes=".*", remoteNodes=".*"

# validate edgesOspf
test -raw tests/questions/stable/edgesOspf.ref validate-template edgesOspf nodes=".*", remoteNodes=".*"

# validate edgesRip
test -raw tests/questions/stable/edgesRip.ref validate-template edgesRip nodes=".*", remoteNodes=".*"

# validate edgesVxlan
test -raw tests/questions/stable/edgesVxlan.ref validate-template edgesVxlan nodes=".*", remoteNodes=".*"

# validate ipsecSessionStatus
test -raw tests/questions/stable/ipsecSessionStatus.ref validate-template ipsecSessionStatus nodes="n1", remoteNodes="n2", status=".*"

# validate lpmRoutes
test -raw tests/questions/stable/lpmRoutes.ref validate-template lpmRoutes ip="1.1.1.1", nodes="n1", vrfs="default"

# validate parseWarning
test -raw tests/questions/stable/parseWarning.ref validate-template parseWarning aggregateDuplicates=true

# validate referencedStructures
test -raw tests/questions/stable/referencedStructures.ref validate-template referencedStructures nodes="n1", names="m1", types="t1"

# validate routes
test -raw tests/questions/stable/routes.ref validate-template routes network="1.1.1.1/24", nodes="n1", vrfs="default", rib="main", protocols="igp"

# test testfilters
test  -raw tests/questions/stable/testfilters.ref validate-template testfilters headers={"srcIps": "1.1.1.1/32"}, filters=".*",  nodes=".*", startLocation="node1"

# test undefinedReferences
test -raw tests/questions/stable/undefinedReferences.ref validate-template undefinedreferences nodes=".*"

# validate unusedstructures
test -raw tests/questions/stable/unusedStructures.ref validate-template unusedstructures nodes=".*"

# validate viConversionStatus
test -raw tests/questions/stable/viConversionStatus.ref validate-template viConversionStatus

# validate viConversionWarning
test -raw tests/questions/stable/viConversionWarning.ref validate-template viConversionWarning

