[
  {
    "class" : "org.batfish.question.NodesQuestionPlugin$NodesAnswerElement",
    "nodes" : {
      "as1border1" : {
        "configurationFormat" : "CISCO_IOS",
        "name" : "as1border1",
        "communityLists" : {
          "as1_community" : {
            "lines" : [
              {
                "action" : "ACCEPT",
                "regex" : "(,|\\{|\\}|^|$| )1:"
              }
            ],
            "name" : "as1_community",
            "invertMatch" : false
          },
          "as2_community" : {
            "lines" : [
              {
                "action" : "ACCEPT",
                "regex" : "(,|\\{|\\}|^|$| )2:"
              }
            ],
            "name" : "as2_community",
            "invertMatch" : false
          },
          "as3_community" : {
            "lines" : [
              {
                "action" : "ACCEPT",
                "regex" : "(,|\\{|\\}|^|$| )3:"
              }
            ],
            "name" : "as3_community",
            "invertMatch" : false
          }
        },
        "defaultCrossZoneAction" : "ACCEPT",
        "defaultInboundAction" : "ACCEPT",
        "deviceType" : "ROUTER",
        "domainName" : "lab.local",
        "interfaces" : {
          "Ethernet0/0" : {
            "name" : "Ethernet0/0",
            "accessVlan" : 0,
            "active" : false,
            "autostate" : true,
            "bandwidth" : 1.0E7,
            "declaredNames" : [
              "Ethernet0/0"
            ],
            "isisL1InterfaceMode" : "unset",
            "isisL2InterfaceMode" : "unset",
            "mtu" : 1500,
            "nativeVlan" : 1,
            "ospfDeadInterval" : 0,
            "ospfEnabled" : false,
            "ospfHelloMultiplier" : 0,
            "ospfPassive" : false,
            "ospfPointToPoint" : false,
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "PHYSICAL",
            "vrf" : "default"
          },
          "GigabitEthernet0/0" : {
            "name" : "GigabitEthernet0/0",
            "accessVlan" : 0,
            "active" : true,
            "allPrefixes" : [
              "1.0.1.1/24"
            ],
            "autostate" : true,
            "bandwidth" : 1.0E9,
            "declaredNames" : [
              "GigabitEthernet0/0"
            ],
            "isisL1InterfaceMode" : "unset",
            "isisL2InterfaceMode" : "unset",
            "mtu" : 1500,
            "nativeVlan" : 1,
            "ospfArea" : 1,
            "ospfCost" : 1,
            "ospfDeadInterval" : 0,
            "ospfEnabled" : true,
            "ospfHelloMultiplier" : 0,
            "ospfPassive" : false,
            "ospfPointToPoint" : false,
            "prefix" : "1.0.1.1/24",
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "PHYSICAL",
            "vrf" : "default"
          },
          "GigabitEthernet1/0" : {
            "name" : "GigabitEthernet1/0",
            "accessVlan" : 0,
            "active" : true,
            "allPrefixes" : [
              "10.12.11.1/24"
            ],
            "autostate" : true,
            "bandwidth" : 1.0E9,
            "declaredNames" : [
              "GigabitEthernet1/0"
            ],
            "isisL1InterfaceMode" : "unset",
            "isisL2InterfaceMode" : "unset",
            "mtu" : 1500,
            "nativeVlan" : 1,
            "ospfDeadInterval" : 0,
            "ospfEnabled" : false,
            "ospfHelloMultiplier" : 0,
            "ospfPassive" : false,
            "ospfPointToPoint" : false,
            "prefix" : "10.12.11.1/24",
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "PHYSICAL",
            "vrf" : "default"
          },
          "Loopback0" : {
            "name" : "Loopback0",
            "accessVlan" : 0,
            "active" : true,
            "allPrefixes" : [
              "1.1.1.1/32"
            ],
            "autostate" : true,
            "bandwidth" : 1.0E12,
            "declaredNames" : [
              "Loopback0"
            ],
            "isisL1InterfaceMode" : "unset",
            "isisL2InterfaceMode" : "unset",
            "mtu" : 1500,
            "nativeVlan" : 1,
            "ospfArea" : 1,
            "ospfCost" : 1,
            "ospfDeadInterval" : 0,
            "ospfEnabled" : true,
            "ospfHelloMultiplier" : 0,
            "ospfPassive" : true,
            "ospfPointToPoint" : false,
            "prefix" : "1.1.1.1/32",
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "LOOPBACK",
            "vrf" : "default"
          }
        },
        "ipAccessLists" : {
          "101" : {
            "name" : "101",
            "lines" : [
              {
                "action" : "ACCEPT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "255.255.255.0"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "1.0.1.0"
                    }
                  }
                },
                "name" : "permit ip host 1.0.1.0 host 255.255.255.0"
              },
              {
                "action" : "ACCEPT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "255.255.255.0"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "1.0.2.0"
                    }
                  }
                },
                "name" : "permit ip host 1.0.2.0 host 255.255.255.0"
              }
            ]
          },
          "102" : {
            "name" : "102",
            "lines" : [
              {
                "action" : "ACCEPT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "255.0.0.0"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "2.0.0.0"
                    }
                  }
                },
                "name" : "permit ip host 2.0.0.0 host 255.0.0.0"
              },
              {
                "action" : "ACCEPT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "255.255.0.0"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "2.128.0.0"
                    }
                  }
                },
                "name" : "permit ip host 2.128.0.0 host 255.255.0.0"
              }
            ]
          },
          "103" : {
            "name" : "103",
            "lines" : [
              {
                "action" : "ACCEPT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "255.255.255.0"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "3.0.1.0"
                    }
                  }
                },
                "name" : "permit ip host 3.0.1.0 host 255.255.255.0"
              },
              {
                "action" : "ACCEPT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "255.255.255.0"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "3.0.2.0"
                    }
                  }
                },
                "name" : "permit ip host 3.0.2.0 host 255.255.255.0"
              }
            ]
          }
        },
        "routeFilterLists" : {
          "101" : {
            "name" : "101",
            "lines" : [
              {
                "action" : "ACCEPT",
                "lengthRange" : "24-24",
                "prefix" : "1.0.1.0/24"
              },
              {
                "action" : "ACCEPT",
                "lengthRange" : "24-24",
                "prefix" : "1.0.2.0/24"
              }
            ]
          },
          "102" : {
            "name" : "102",
            "lines" : [
              {
                "action" : "ACCEPT",
                "lengthRange" : "8-8",
                "prefix" : "2.0.0.0/8"
              },
              {
                "action" : "ACCEPT",
                "lengthRange" : "16-16",
                "prefix" : "2.128.0.0/16"
              }
            ]
          },
          "103" : {
            "name" : "103",
            "lines" : [
              {
                "action" : "ACCEPT",
                "lengthRange" : "24-24",
                "prefix" : "3.0.1.0/24"
              },
              {
                "action" : "ACCEPT",
                "lengthRange" : "24-24",
                "prefix" : "3.0.2.0/24"
              }
            ]
          },
          "default_list" : {
            "name" : "default_list",
            "lines" : [
              {
                "action" : "ACCEPT",
                "lengthRange" : "0-0",
                "prefix" : "0.0.0.0/0"
              }
            ]
          },
          "inbound_route_filter" : {
            "name" : "inbound_route_filter",
            "lines" : [
              {
                "action" : "REJECT",
                "lengthRange" : "8-32",
                "prefix" : "1.0.0.0/8"
              },
              {
                "action" : "ACCEPT",
                "lengthRange" : "0-32",
                "prefix" : "0.0.0.0/0"
              }
            ]
          }
        },
        "routingPolicies" : {
          "as1_to_as2" : {
            "name" : "as1_to_as2",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "~RMCLAUSE~as1_to_as2~1~",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.If",
                    "comment" : "~RMCLAUSE~as1_to_as2~3~",
                    "falseStatements" : [
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.If",
                        "comment" : "~RMCLAUSE~as1_to_as2~5~",
                        "falseStatements" : [
                          {
                            "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                            "type" : "ReturnLocalDefaultAction"
                          }
                        ],
                        "guard" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                          "prefix" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                          },
                          "prefixSet" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                            "name" : "default_list"
                          }
                        },
                        "trueStatements" : [
                          {
                            "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
                            "metric" : {
                              "class" : "org.batfish.datamodel.routing_policy.expr.LiteralLong",
                              "value" : 50
                            }
                          },
                          {
                            "class" : "org.batfish.datamodel.routing_policy.statement.AddCommunity",
                            "expr" : {
                              "class" : "org.batfish.datamodel.routing_policy.expr.InlineCommunitySet",
                              "communities" : [
                                {
                                  "prefix" : {
                                    "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                                    "value" : 1
                                  },
                                  "suffix" : {
                                    "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                                    "value" : 2
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                            "type" : "ReturnTrue"
                          }
                        ]
                      }
                    ],
                    "guard" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                      "prefix" : {
                        "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                      },
                      "prefixSet" : {
                        "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                        "name" : "103"
                      }
                    },
                    "trueStatements" : [
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
                        "metric" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.LiteralLong",
                          "value" : 50
                        }
                      },
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.AddCommunity",
                        "expr" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.InlineCommunitySet",
                          "communities" : [
                            {
                              "prefix" : {
                                "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                                "value" : 1
                              },
                              "suffix" : {
                                "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                                "value" : 2
                              }
                            }
                          ]
                        }
                      },
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                        "type" : "ReturnTrue"
                      }
                    ]
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                  "prefix" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                  },
                  "prefixSet" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                    "name" : "101"
                  }
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
                    "metric" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.LiteralLong",
                      "value" : 50
                    }
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.AddCommunity",
                    "expr" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.InlineCommunitySet",
                      "communities" : [
                        {
                          "prefix" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                            "value" : 1
                          },
                          "suffix" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                            "value" : 2
                          }
                        }
                      ]
                    }
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ReturnTrue"
                  }
                ]
              }
            ]
          },
          "as1_to_as3" : {
            "name" : "as1_to_as3",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "~RMCLAUSE~as1_to_as3~1~",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.If",
                    "comment" : "~RMCLAUSE~as1_to_as3~2~",
                    "falseStatements" : [
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                        "type" : "ReturnLocalDefaultAction"
                      }
                    ],
                    "guard" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                      "prefix" : {
                        "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                      },
                      "prefixSet" : {
                        "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                        "name" : "102"
                      }
                    },
                    "trueStatements" : [
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
                        "metric" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.LiteralLong",
                          "value" : 50
                        }
                      },
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.AddCommunity",
                        "expr" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.InlineCommunitySet",
                          "communities" : [
                            {
                              "prefix" : {
                                "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                                "value" : 1
                              },
                              "suffix" : {
                                "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                                "value" : 3
                              }
                            }
                          ]
                        }
                      },
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                        "type" : "ReturnTrue"
                      }
                    ]
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                  "prefix" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                  },
                  "prefixSet" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                    "name" : "101"
                  }
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
                    "metric" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.LiteralLong",
                      "value" : 50
                    }
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.AddCommunity",
                    "expr" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.InlineCommunitySet",
                      "communities" : [
                        {
                          "prefix" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                            "value" : 1
                          },
                          "suffix" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                            "value" : 3
                          }
                        }
                      ]
                    }
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ReturnTrue"
                  }
                ]
              }
            ]
          },
          "as2_to_as1" : {
            "name" : "as2_to_as1",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "~RMCLAUSE~as2_to_as1~100~",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ReturnLocalDefaultAction"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.MatchCommunitySet",
                  "expr" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.NamedCommunitySet",
                    "name" : "as2_community"
                  }
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.SetLocalPreference",
                    "localPreference" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.LiteralInt",
                      "value" : 350
                    }
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ReturnTrue"
                  }
                ]
              }
            ]
          },
          "as3_to_as1" : {
            "name" : "as3_to_as1",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "~RMCLAUSE~as3_to_as1~100~",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ReturnLocalDefaultAction"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.MatchCommunitySet",
                  "expr" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.NamedCommunitySet",
                    "name" : "as3_community"
                  }
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.SetLocalPreference",
                    "localPreference" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.LiteralInt",
                      "value" : 350
                    }
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ReturnTrue"
                  }
                ]
              }
            ]
          },
          "~BGP_COMMON_EXPORT_POLICY:default~" : {
            "name" : "~BGP_COMMON_EXPORT_POLICY:default~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.Disjunction",
                  "disjuncts" : [
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.Conjunction",
                      "conjuncts" : [
                        {
                          "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                          "prefix" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                          },
                          "prefixSet" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.ExplicitPrefixSet",
                            "prefixSpace" : [
                              "1.0.1.0/24"
                            ]
                          }
                        },
                        {
                          "class" : "org.batfish.datamodel.routing_policy.expr.Not",
                          "expr" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                            "protocol" : "bgp"
                          }
                        },
                        {
                          "class" : "org.batfish.datamodel.routing_policy.expr.Not",
                          "expr" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                            "protocol" : "ibgp"
                          }
                        },
                        {
                          "class" : "org.batfish.datamodel.routing_policy.expr.Not",
                          "expr" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                            "protocol" : "aggregate"
                          }
                        },
                        {
                          "class" : "org.batfish.datamodel.routing_policy.expr.WithEnvironmentExpr",
                          "expr" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.BooleanExprs$StaticBooleanExpr",
                            "type" : "True"
                          },
                          "postStatements" : [
                            {
                              "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                              "type" : "UnsetWriteIntermediateBgpAttributes"
                            }
                          ],
                          "postTrueStatements" : [
                            {
                              "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                              "type" : "SetReadIntermediateBgpAttributes"
                            },
                            {
                              "class" : "org.batfish.datamodel.routing_policy.statement.SetOrigin",
                              "originType" : {
                                "class" : "org.batfish.datamodel.routing_policy.expr.LiteralOrigin",
                                "originType" : "igp"
                              }
                            }
                          ],
                          "preStatements" : [
                            {
                              "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                              "type" : "SetWriteIntermediateBgpAttributes"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.Conjunction",
                      "conjuncts" : [
                        {
                          "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                          "prefix" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                          },
                          "prefixSet" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.ExplicitPrefixSet",
                            "prefixSpace" : [
                              "1.0.2.0/24"
                            ]
                          }
                        },
                        {
                          "class" : "org.batfish.datamodel.routing_policy.expr.Not",
                          "expr" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                            "protocol" : "bgp"
                          }
                        },
                        {
                          "class" : "org.batfish.datamodel.routing_policy.expr.Not",
                          "expr" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                            "protocol" : "ibgp"
                          }
                        },
                        {
                          "class" : "org.batfish.datamodel.routing_policy.expr.Not",
                          "expr" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                            "protocol" : "aggregate"
                          }
                        },
                        {
                          "class" : "org.batfish.datamodel.routing_policy.expr.WithEnvironmentExpr",
                          "expr" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.BooleanExprs$StaticBooleanExpr",
                            "type" : "True"
                          },
                          "postStatements" : [
                            {
                              "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                              "type" : "UnsetWriteIntermediateBgpAttributes"
                            }
                          ],
                          "postTrueStatements" : [
                            {
                              "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                              "type" : "SetReadIntermediateBgpAttributes"
                            },
                            {
                              "class" : "org.batfish.datamodel.routing_policy.statement.SetOrigin",
                              "originType" : {
                                "class" : "org.batfish.datamodel.routing_policy.expr.LiteralOrigin",
                                "originType" : "igp"
                              }
                            }
                          ],
                          "preStatements" : [
                            {
                              "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                              "type" : "SetWriteIntermediateBgpAttributes"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                      "protocol" : "bgp"
                    },
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                      "protocol" : "ibgp"
                    }
                  ]
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ReturnTrue"
                  }
                ]
              },
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                "type" : "ReturnFalse"
              }
            ]
          },
          "~BGP_PEER_EXPORT_POLICY:default:1.10.1.1~" : {
            "name" : "~BGP_PEER_EXPORT_POLICY:default:1.10.1.1~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "peer-export policy main conditional: exitAccept if true / exitReject if false",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitReject"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                  "calledPolicyName" : "~BGP_COMMON_EXPORT_POLICY:default~"
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitAccept"
                  }
                ]
              }
            ]
          },
          "~BGP_PEER_EXPORT_POLICY:default:10.12.11.2~" : {
            "name" : "~BGP_PEER_EXPORT_POLICY:default:10.12.11.2~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "peer-export policy main conditional: exitAccept if true / exitReject if false",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitReject"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.Conjunction",
                  "conjuncts" : [
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                      "calledPolicyName" : "~BGP_COMMON_EXPORT_POLICY:default~"
                    },
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                      "calledPolicyName" : "as1_to_as2"
                    }
                  ]
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitAccept"
                  }
                ]
              }
            ]
          },
          "~BGP_PEER_EXPORT_POLICY:default:3.2.2.2~" : {
            "name" : "~BGP_PEER_EXPORT_POLICY:default:3.2.2.2~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "peer-export policy main conditional: exitAccept if true / exitReject if false",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitReject"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                  "calledPolicyName" : "~BGP_COMMON_EXPORT_POLICY:default~"
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitAccept"
                  }
                ]
              }
            ]
          },
          "~BGP_PEER_EXPORT_POLICY:default:5.6.7.8~" : {
            "name" : "~BGP_PEER_EXPORT_POLICY:default:5.6.7.8~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "peer-export policy main conditional: exitAccept if true / exitReject if false",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitReject"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                  "calledPolicyName" : "~BGP_COMMON_EXPORT_POLICY:default~"
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitAccept"
                  }
                ]
              }
            ]
          },
          "~OSPF_EXPORT_POLICY:default~" : {
            "name" : "~OSPF_EXPORT_POLICY:default~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "OSPF export routes for connected",
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.Conjunction",
                  "conjuncts" : [
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                      "protocol" : "connected"
                    },
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.Not",
                      "expr" : {
                        "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                        "comment" : "match default route",
                        "prefix" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                        },
                        "prefixSet" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.ExplicitPrefixSet",
                          "prefixSpace" : [
                            "0.0.0.0/0"
                          ]
                        }
                      }
                    }
                  ]
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.SetOspfMetricType",
                    "metricType" : "E2"
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
                    "metric" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.LiteralLong",
                      "value" : 20
                    }
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitAccept"
                  }
                ]
              }
            ]
          }
        },
        "vendorFamily" : {
          "cisco" : {
            "aaa" : {
              "newModel" : false
            },
            "hostname" : "as1border1",
            "lines" : {
              "aux0" : {
                "name" : "aux0",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0
              },
              "con0" : {
                "name" : "con0",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0
              },
              "vty0" : {
                "name" : "vty0",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0
              },
              "vty1" : {
                "name" : "vty1",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0
              },
              "vty2" : {
                "name" : "vty2",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0
              },
              "vty3" : {
                "name" : "vty3",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0
              },
              "vty4" : {
                "name" : "vty4",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0
              }
            },
            "logging" : {
              "on" : true
            },
            "services" : {
              "timestamps" : {
                "enabled" : true,
                "subservices" : {
                  "debug" : {
                    "enabled" : true,
                    "subservices" : {
                      "datetime" : {
                        "enabled" : true,
                        "subservices" : {
                          "msec" : {
                            "enabled" : true
                          }
                        }
                      }
                    }
                  },
                  "log" : {
                    "enabled" : true,
                    "subservices" : {
                      "datetime" : {
                        "enabled" : true,
                        "subservices" : {
                          "msec" : {
                            "enabled" : true
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "vrfs" : {
          "default" : {
            "name" : "default",
            "bgpProcess" : {
              "multipathEbgp" : true,
              "multipathEquivalentAsPathMatchMode" : "EXACT_PATH",
              "multipathIbgp" : true,
              "neighbors" : {
                "1.10.1.1/32" : {
                  "name" : "1.10.1.1/32",
                  "additionalPathsReceive" : true,
                  "additionalPathsSelectAll" : true,
                  "additionalPathsSend" : true,
                  "address" : "1.10.1.1",
                  "advertiseExternal" : false,
                  "advertiseInactive" : true,
                  "allowLocalAsIn" : false,
                  "allowRemoteAsOut" : false,
                  "clusterId" : 16843009,
                  "defaultMetric" : 0,
                  "dynamic" : false,
                  "ebgpMultihop" : false,
                  "enforceFirstAs" : false,
                  "exportPolicy" : "~BGP_PEER_EXPORT_POLICY:default:1.10.1.1~",
                  "group" : "as1",
                  "localAs" : 1,
                  "localIp" : "1.1.1.1",
                  "remoteAs" : 1,
                  "remotePrefix" : "1.10.1.1/32",
                  "routeReflectorClient" : false,
                  "sendCommunity" : true,
                  "vrf" : "default"
                },
                "3.2.2.2/32" : {
                  "name" : "3.2.2.2/32",
                  "additionalPathsReceive" : true,
                  "additionalPathsSelectAll" : true,
                  "additionalPathsSend" : true,
                  "address" : "3.2.2.2",
                  "advertiseExternal" : false,
                  "advertiseInactive" : true,
                  "allowLocalAsIn" : false,
                  "allowRemoteAsOut" : false,
                  "clusterId" : 16843009,
                  "defaultMetric" : 0,
                  "dynamic" : false,
                  "ebgpMultihop" : false,
                  "enforceFirstAs" : false,
                  "exportPolicy" : "~BGP_PEER_EXPORT_POLICY:default:3.2.2.2~",
                  "group" : "bad-ebgp",
                  "localAs" : 1,
                  "remoteAs" : 666,
                  "remotePrefix" : "3.2.2.2/32",
                  "routeReflectorClient" : false,
                  "sendCommunity" : false,
                  "vrf" : "default"
                },
                "5.6.7.8/32" : {
                  "name" : "5.6.7.8/32",
                  "additionalPathsReceive" : true,
                  "additionalPathsSelectAll" : true,
                  "additionalPathsSend" : true,
                  "address" : "5.6.7.8",
                  "advertiseExternal" : false,
                  "advertiseInactive" : true,
                  "allowLocalAsIn" : false,
                  "allowRemoteAsOut" : false,
                  "clusterId" : 16843009,
                  "defaultMetric" : 0,
                  "dynamic" : false,
                  "ebgpMultihop" : false,
                  "enforceFirstAs" : false,
                  "exportPolicy" : "~BGP_PEER_EXPORT_POLICY:default:5.6.7.8~",
                  "group" : "xanadu",
                  "localAs" : 1,
                  "remoteAs" : 555,
                  "remotePrefix" : "5.6.7.8/32",
                  "routeReflectorClient" : false,
                  "sendCommunity" : false,
                  "vrf" : "default"
                },
                "10.12.11.2/32" : {
                  "name" : "10.12.11.2/32",
                  "additionalPathsReceive" : true,
                  "additionalPathsSelectAll" : true,
                  "additionalPathsSend" : true,
                  "address" : "10.12.11.2",
                  "advertiseExternal" : false,
                  "advertiseInactive" : true,
                  "allowLocalAsIn" : false,
                  "allowRemoteAsOut" : false,
                  "clusterId" : 16843009,
                  "defaultMetric" : 0,
                  "dynamic" : false,
                  "ebgpMultihop" : false,
                  "enforceFirstAs" : false,
                  "exportPolicy" : "~BGP_PEER_EXPORT_POLICY:default:10.12.11.2~",
                  "exportPolicySources" : [
                    "as1_to_as2"
                  ],
                  "group" : "as2",
                  "importPolicy" : "as2_to_as1",
                  "importPolicySources" : [
                    "as2_to_as1"
                  ],
                  "localAs" : 1,
                  "localIp" : "10.12.11.1",
                  "remoteAs" : 2,
                  "remotePrefix" : "10.12.11.2/32",
                  "routeReflectorClient" : false,
                  "sendCommunity" : true,
                  "vrf" : "default"
                }
              },
              "routerId" : "1.1.1.1",
              "tieBreaker" : "ARRIVAL_ORDER"
            },
            "interfaces" : [
              "Ethernet0/0",
              "GigabitEthernet0/0",
              "GigabitEthernet1/0",
              "Loopback0"
            ],
            "ospfProcess" : {
              "areas" : {
                "1" : {
                  "name" : 1,
                  "interfaces" : [
                    "GigabitEthernet0/0",
                    "Loopback0"
                  ]
                }
              },
              "exportPolicy" : "~OSPF_EXPORT_POLICY:default~",
              "processId" : "1",
              "referenceBandwidth" : 1.0E8,
              "routerId" : "1.1.1.1"
            }
          }
        }
      },
      "as1border2" : {
        "configurationFormat" : "CISCO_IOS",
        "name" : "as1border2",
        "communityLists" : {
          "as1_community" : {
            "lines" : [
              {
                "action" : "ACCEPT",
                "regex" : "(,|\\{|\\}|^|$| )1:"
              }
            ],
            "name" : "as1_community",
            "invertMatch" : false
          },
          "as2_community" : {
            "lines" : [
              {
                "action" : "ACCEPT",
                "regex" : "(,|\\{|\\}|^|$| )2:"
              }
            ],
            "name" : "as2_community",
            "invertMatch" : false
          },
          "as3_community" : {
            "lines" : [
              {
                "action" : "ACCEPT",
                "regex" : "(,|\\{|\\}|^|$| )3:"
              }
            ],
            "name" : "as3_community",
            "invertMatch" : false
          },
          "as4_community" : {
            "lines" : [
              {
                "action" : "ACCEPT",
                "regex" : "(,|\\{|\\}|^|$| )4:"
              }
            ],
            "name" : "as4_community",
            "invertMatch" : false
          }
        },
        "defaultCrossZoneAction" : "ACCEPT",
        "defaultInboundAction" : "ACCEPT",
        "deviceType" : "ROUTER",
        "domainName" : "lab.local",
        "interfaces" : {
          "Ethernet0/0" : {
            "name" : "Ethernet0/0",
            "accessVlan" : 0,
            "active" : false,
            "autostate" : true,
            "bandwidth" : 1.0E7,
            "declaredNames" : [
              "Ethernet0/0"
            ],
            "isisL1InterfaceMode" : "unset",
            "isisL2InterfaceMode" : "unset",
            "mtu" : 1500,
            "nativeVlan" : 1,
            "ospfDeadInterval" : 0,
            "ospfEnabled" : false,
            "ospfHelloMultiplier" : 0,
            "ospfPassive" : false,
            "ospfPointToPoint" : false,
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "PHYSICAL",
            "vrf" : "default"
          },
          "GigabitEthernet0/0" : {
            "name" : "GigabitEthernet0/0",
            "accessVlan" : 0,
            "active" : true,
            "allPrefixes" : [
              "10.13.22.1/24"
            ],
            "autostate" : true,
            "bandwidth" : 1.0E9,
            "declaredNames" : [
              "GigabitEthernet0/0"
            ],
            "isisL1InterfaceMode" : "unset",
            "isisL2InterfaceMode" : "unset",
            "mtu" : 1500,
            "nativeVlan" : 1,
            "ospfDeadInterval" : 0,
            "ospfEnabled" : false,
            "ospfHelloMultiplier" : 0,
            "ospfPassive" : false,
            "ospfPointToPoint" : false,
            "prefix" : "10.13.22.1/24",
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "PHYSICAL",
            "vrf" : "default"
          },
          "GigabitEthernet1/0" : {
            "name" : "GigabitEthernet1/0",
            "accessVlan" : 0,
            "active" : true,
            "allPrefixes" : [
              "1.0.2.1/24"
            ],
            "autostate" : true,
            "bandwidth" : 1.0E9,
            "declaredNames" : [
              "GigabitEthernet1/0"
            ],
            "isisL1InterfaceMode" : "unset",
            "isisL2InterfaceMode" : "unset",
            "mtu" : 1500,
            "nativeVlan" : 1,
            "ospfArea" : 1,
            "ospfCost" : 1,
            "ospfDeadInterval" : 0,
            "ospfEnabled" : true,
            "ospfHelloMultiplier" : 0,
            "ospfPassive" : false,
            "ospfPointToPoint" : false,
            "prefix" : "1.0.2.1/24",
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "PHYSICAL",
            "vrf" : "default"
          },
          "GigabitEthernet2/0" : {
            "name" : "GigabitEthernet2/0",
            "accessVlan" : 0,
            "active" : true,
            "allPrefixes" : [
              "10.14.22.1/24"
            ],
            "autostate" : true,
            "bandwidth" : 1.0E9,
            "declaredNames" : [
              "GigabitEthernet2/0"
            ],
            "isisL1InterfaceMode" : "unset",
            "isisL2InterfaceMode" : "unset",
            "mtu" : 1500,
            "nativeVlan" : 1,
            "ospfDeadInterval" : 0,
            "ospfEnabled" : false,
            "ospfHelloMultiplier" : 0,
            "ospfPassive" : false,
            "ospfPointToPoint" : false,
            "prefix" : "10.14.22.1/24",
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "PHYSICAL",
            "vrf" : "default"
          },
          "Loopback0" : {
            "name" : "Loopback0",
            "accessVlan" : 0,
            "active" : true,
            "allPrefixes" : [
              "1.2.2.2/32"
            ],
            "autostate" : true,
            "bandwidth" : 1.0E12,
            "declaredNames" : [
              "Loopback0"
            ],
            "isisL1InterfaceMode" : "unset",
            "isisL2InterfaceMode" : "unset",
            "mtu" : 1500,
            "nativeVlan" : 1,
            "ospfArea" : 1,
            "ospfCost" : 1,
            "ospfDeadInterval" : 0,
            "ospfEnabled" : true,
            "ospfHelloMultiplier" : 0,
            "ospfPassive" : false,
            "ospfPointToPoint" : false,
            "prefix" : "1.2.2.2/32",
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "LOOPBACK",
            "vrf" : "default"
          }
        },
        "ipAccessLists" : {
          "101" : {
            "name" : "101",
            "lines" : [
              {
                "action" : "ACCEPT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "255.255.255.0"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "1.0.1.0"
                    }
                  }
                },
                "name" : "permit ip host 1.0.1.0 host 255.255.255.0"
              },
              {
                "action" : "ACCEPT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "255.255.255.0"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "1.0.2.0"
                    }
                  }
                },
                "name" : "permit ip host 1.0.2.0 host 255.255.255.0"
              }
            ]
          },
          "102" : {
            "name" : "102",
            "lines" : [
              {
                "action" : "ACCEPT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "255.0.0.0"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "2.0.0.0"
                    }
                  }
                },
                "name" : "permit ip host 2.0.0.0 host 255.0.0.0"
              },
              {
                "action" : "ACCEPT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "255.255.0.0"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "2.128.0.0"
                    }
                  }
                },
                "name" : "permit ip host 2.128.0.0 host 255.255.0.0"
              }
            ]
          },
          "103" : {
            "name" : "103",
            "lines" : [
              {
                "action" : "ACCEPT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "255.255.255.0"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "3.0.1.0"
                    }
                  }
                },
                "name" : "permit ip host 3.0.1.0 host 255.255.255.0"
              }
            ]
          }
        },
        "ntpServers" : [
          "18.18.18.18",
          "23.23.23.23"
        ],
        "routeFilterLists" : {
          "101" : {
            "name" : "101",
            "lines" : [
              {
                "action" : "ACCEPT",
                "lengthRange" : "24-24",
                "prefix" : "1.0.1.0/24"
              },
              {
                "action" : "ACCEPT",
                "lengthRange" : "24-24",
                "prefix" : "1.0.2.0/24"
              }
            ]
          },
          "102" : {
            "name" : "102",
            "lines" : [
              {
                "action" : "ACCEPT",
                "lengthRange" : "8-8",
                "prefix" : "2.0.0.0/8"
              },
              {
                "action" : "ACCEPT",
                "lengthRange" : "16-16",
                "prefix" : "2.128.0.0/16"
              }
            ]
          },
          "103" : {
            "name" : "103",
            "lines" : [
              {
                "action" : "ACCEPT",
                "lengthRange" : "24-24",
                "prefix" : "3.0.1.0/24"
              }
            ]
          },
          "as4-prefixes" : {
            "name" : "as4-prefixes",
            "lines" : [
              {
                "action" : "ACCEPT",
                "lengthRange" : "8-32",
                "prefix" : "4.0.0.0/8"
              }
            ]
          },
          "inbound_route_filter" : {
            "name" : "inbound_route_filter",
            "lines" : [
              {
                "action" : "REJECT",
                "lengthRange" : "8-32",
                "prefix" : "1.0.0.0/8"
              },
              {
                "action" : "ACCEPT",
                "lengthRange" : "0-32",
                "prefix" : "0.0.0.0/0"
              }
            ]
          }
        },
        "routingPolicies" : {
          "as1_to_as2" : {
            "name" : "as1_to_as2",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "~RMCLAUSE~as1_to_as2~1~",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.If",
                    "comment" : "~RMCLAUSE~as1_to_as2~3~",
                    "falseStatements" : [
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                        "type" : "ReturnLocalDefaultAction"
                      }
                    ],
                    "guard" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                      "prefix" : {
                        "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                      },
                      "prefixSet" : {
                        "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                        "name" : "103"
                      }
                    },
                    "trueStatements" : [
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
                        "metric" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.LiteralLong",
                          "value" : 50
                        }
                      },
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.AddCommunity",
                        "expr" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.InlineCommunitySet",
                          "communities" : [
                            {
                              "prefix" : {
                                "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                                "value" : 1
                              },
                              "suffix" : {
                                "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                                "value" : 2
                              }
                            }
                          ]
                        }
                      },
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                        "type" : "ReturnTrue"
                      }
                    ]
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                  "prefix" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                  },
                  "prefixSet" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                    "name" : "101"
                  }
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
                    "metric" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.LiteralLong",
                      "value" : 50
                    }
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.AddCommunity",
                    "expr" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.InlineCommunitySet",
                      "communities" : [
                        {
                          "prefix" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                            "value" : 1
                          },
                          "suffix" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                            "value" : 2
                          }
                        }
                      ]
                    }
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ReturnTrue"
                  }
                ]
              }
            ]
          },
          "as1_to_as3" : {
            "name" : "as1_to_as3",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "~RMCLAUSE~as1_to_as3~1~",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.If",
                    "comment" : "~RMCLAUSE~as1_to_as3~2~",
                    "falseStatements" : [
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                        "type" : "ReturnLocalDefaultAction"
                      }
                    ],
                    "guard" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                      "prefix" : {
                        "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                      },
                      "prefixSet" : {
                        "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                        "name" : "102"
                      }
                    },
                    "trueStatements" : [
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
                        "metric" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.LiteralLong",
                          "value" : 50
                        }
                      },
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.AddCommunity",
                        "expr" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.InlineCommunitySet",
                          "communities" : [
                            {
                              "prefix" : {
                                "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                                "value" : 1
                              },
                              "suffix" : {
                                "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                                "value" : 3
                              }
                            }
                          ]
                        }
                      },
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                        "type" : "ReturnTrue"
                      }
                    ]
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                  "prefix" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                  },
                  "prefixSet" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                    "name" : "101"
                  }
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
                    "metric" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.LiteralLong",
                      "value" : 50
                    }
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.AddCommunity",
                    "expr" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.InlineCommunitySet",
                      "communities" : [
                        {
                          "prefix" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                            "value" : 1
                          },
                          "suffix" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                            "value" : 3
                          }
                        }
                      ]
                    }
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ReturnTrue"
                  }
                ]
              }
            ]
          },
          "as1_to_as4" : {
            "name" : "as1_to_as4",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
                "metric" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.LiteralLong",
                  "value" : 50
                }
              },
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.AddCommunity",
                "expr" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.InlineCommunitySet",
                  "communities" : [
                    {
                      "prefix" : {
                        "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                        "value" : 1
                      },
                      "suffix" : {
                        "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                        "value" : 4
                      }
                    }
                  ]
                }
              },
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                "type" : "ReturnTrue"
              }
            ]
          },
          "as2_to_as1" : {
            "name" : "as2_to_as1",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "~RMCLAUSE~as2_to_as1~100~",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ReturnLocalDefaultAction"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.MatchCommunitySet",
                  "expr" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.NamedCommunitySet",
                    "name" : "as2_community"
                  }
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.SetLocalPreference",
                    "localPreference" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.LiteralInt",
                      "value" : 350
                    }
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ReturnTrue"
                  }
                ]
              }
            ]
          },
          "as3_to_as1" : {
            "name" : "as3_to_as1",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "~RMCLAUSE~as3_to_as1~100~",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ReturnLocalDefaultAction"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.MatchCommunitySet",
                  "expr" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.NamedCommunitySet",
                    "name" : "as3_community"
                  }
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.SetLocalPreference",
                    "localPreference" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.LiteralInt",
                      "value" : 350
                    }
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ReturnTrue"
                  }
                ]
              }
            ]
          },
          "as4_to_as1" : {
            "name" : "as4_to_as1",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "~RMCLAUSE~as4_to_as1~100~",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ReturnLocalDefaultAction"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.Conjunction",
                  "conjuncts" : [
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.MatchCommunitySet",
                      "expr" : {
                        "class" : "org.batfish.datamodel.routing_policy.expr.NamedCommunitySet",
                        "name" : "as4_community"
                      }
                    },
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                      "prefix" : {
                        "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                      },
                      "prefixSet" : {
                        "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                        "name" : "as4-prefixes"
                      }
                    }
                  ]
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.SetLocalPreference",
                    "localPreference" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.LiteralInt",
                      "value" : 350
                    }
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ReturnTrue"
                  }
                ]
              }
            ]
          },
          "~BGP_COMMON_EXPORT_POLICY:default~" : {
            "name" : "~BGP_COMMON_EXPORT_POLICY:default~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.Disjunction",
                  "disjuncts" : [
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.Conjunction",
                      "conjuncts" : [
                        {
                          "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                          "prefix" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                          },
                          "prefixSet" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.ExplicitPrefixSet",
                            "prefixSpace" : [
                              "1.0.1.0/24"
                            ]
                          }
                        },
                        {
                          "class" : "org.batfish.datamodel.routing_policy.expr.Not",
                          "expr" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                            "protocol" : "bgp"
                          }
                        },
                        {
                          "class" : "org.batfish.datamodel.routing_policy.expr.Not",
                          "expr" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                            "protocol" : "ibgp"
                          }
                        },
                        {
                          "class" : "org.batfish.datamodel.routing_policy.expr.Not",
                          "expr" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                            "protocol" : "aggregate"
                          }
                        },
                        {
                          "class" : "org.batfish.datamodel.routing_policy.expr.WithEnvironmentExpr",
                          "expr" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.BooleanExprs$StaticBooleanExpr",
                            "type" : "True"
                          },
                          "postStatements" : [
                            {
                              "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                              "type" : "UnsetWriteIntermediateBgpAttributes"
                            }
                          ],
                          "postTrueStatements" : [
                            {
                              "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                              "type" : "SetReadIntermediateBgpAttributes"
                            },
                            {
                              "class" : "org.batfish.datamodel.routing_policy.statement.SetOrigin",
                              "originType" : {
                                "class" : "org.batfish.datamodel.routing_policy.expr.LiteralOrigin",
                                "originType" : "igp"
                              }
                            }
                          ],
                          "preStatements" : [
                            {
                              "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                              "type" : "SetWriteIntermediateBgpAttributes"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.Conjunction",
                      "conjuncts" : [
                        {
                          "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                          "prefix" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                          },
                          "prefixSet" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.ExplicitPrefixSet",
                            "prefixSpace" : [
                              "1.0.2.0/24"
                            ]
                          }
                        },
                        {
                          "class" : "org.batfish.datamodel.routing_policy.expr.Not",
                          "expr" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                            "protocol" : "bgp"
                          }
                        },
                        {
                          "class" : "org.batfish.datamodel.routing_policy.expr.Not",
                          "expr" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                            "protocol" : "ibgp"
                          }
                        },
                        {
                          "class" : "org.batfish.datamodel.routing_policy.expr.Not",
                          "expr" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                            "protocol" : "aggregate"
                          }
                        },
                        {
                          "class" : "org.batfish.datamodel.routing_policy.expr.WithEnvironmentExpr",
                          "expr" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.BooleanExprs$StaticBooleanExpr",
                            "type" : "True"
                          },
                          "postStatements" : [
                            {
                              "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                              "type" : "UnsetWriteIntermediateBgpAttributes"
                            }
                          ],
                          "postTrueStatements" : [
                            {
                              "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                              "type" : "SetReadIntermediateBgpAttributes"
                            },
                            {
                              "class" : "org.batfish.datamodel.routing_policy.statement.SetOrigin",
                              "originType" : {
                                "class" : "org.batfish.datamodel.routing_policy.expr.LiteralOrigin",
                                "originType" : "igp"
                              }
                            }
                          ],
                          "preStatements" : [
                            {
                              "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                              "type" : "SetWriteIntermediateBgpAttributes"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                      "protocol" : "bgp"
                    },
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                      "protocol" : "ibgp"
                    }
                  ]
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ReturnTrue"
                  }
                ]
              },
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                "type" : "ReturnFalse"
              }
            ]
          },
          "~BGP_PEER_EXPORT_POLICY:default:1.10.1.1~" : {
            "name" : "~BGP_PEER_EXPORT_POLICY:default:1.10.1.1~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "peer-export policy main conditional: exitAccept if true / exitReject if false",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitReject"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                  "calledPolicyName" : "~BGP_COMMON_EXPORT_POLICY:default~"
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitAccept"
                  }
                ]
              }
            ]
          },
          "~BGP_PEER_EXPORT_POLICY:default:10.13.22.3~" : {
            "name" : "~BGP_PEER_EXPORT_POLICY:default:10.13.22.3~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "peer-export policy main conditional: exitAccept if true / exitReject if false",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitReject"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.Conjunction",
                  "conjuncts" : [
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                      "calledPolicyName" : "~BGP_COMMON_EXPORT_POLICY:default~"
                    },
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                      "calledPolicyName" : "as1_to_as3"
                    }
                  ]
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitAccept"
                  }
                ]
              }
            ]
          },
          "~BGP_PEER_EXPORT_POLICY:default:10.14.22.4~" : {
            "name" : "~BGP_PEER_EXPORT_POLICY:default:10.14.22.4~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "peer-export policy main conditional: exitAccept if true / exitReject if false",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitReject"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.Conjunction",
                  "conjuncts" : [
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                      "calledPolicyName" : "~BGP_COMMON_EXPORT_POLICY:default~"
                    },
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                      "calledPolicyName" : "as1_to_as4"
                    }
                  ]
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitAccept"
                  }
                ]
              }
            ]
          },
          "~OSPF_EXPORT_POLICY:default~" : {
            "name" : "~OSPF_EXPORT_POLICY:default~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "OSPF export routes for connected",
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.Conjunction",
                  "conjuncts" : [
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                      "protocol" : "connected"
                    },
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.Not",
                      "expr" : {
                        "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                        "comment" : "match default route",
                        "prefix" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                        },
                        "prefixSet" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.ExplicitPrefixSet",
                          "prefixSpace" : [
                            "0.0.0.0/0"
                          ]
                        }
                      }
                    }
                  ]
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.SetOspfMetricType",
                    "metricType" : "E2"
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
                    "metric" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.LiteralLong",
                      "value" : 20
                    }
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitAccept"
                  }
                ]
              }
            ]
          }
        },
        "vendorFamily" : {
          "cisco" : {
            "aaa" : {
              "newModel" : false
            },
            "hostname" : "as1border2",
            "lines" : {
              "aux0" : {
                "name" : "aux0",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0
              },
              "con0" : {
                "name" : "con0",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0
              },
              "vty0" : {
                "name" : "vty0",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0
              },
              "vty1" : {
                "name" : "vty1",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0
              },
              "vty2" : {
                "name" : "vty2",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0
              },
              "vty3" : {
                "name" : "vty3",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0
              },
              "vty4" : {
                "name" : "vty4",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0
              }
            },
            "logging" : {
              "on" : true
            },
            "ntp" : {
              "servers" : {
                "18.18.18.18" : {
                  "name" : "18.18.18.18"
                },
                "23.23.23.23" : {
                  "name" : "23.23.23.23"
                }
              }
            },
            "services" : {
              "timestamps" : {
                "enabled" : true,
                "subservices" : {
                  "debug" : {
                    "enabled" : true,
                    "subservices" : {
                      "datetime" : {
                        "enabled" : true,
                        "subservices" : {
                          "msec" : {
                            "enabled" : true
                          }
                        }
                      }
                    }
                  },
                  "log" : {
                    "enabled" : true,
                    "subservices" : {
                      "datetime" : {
                        "enabled" : true,
                        "subservices" : {
                          "msec" : {
                            "enabled" : true
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "vrfs" : {
          "default" : {
            "name" : "default",
            "bgpProcess" : {
              "multipathEbgp" : true,
              "multipathEquivalentAsPathMatchMode" : "EXACT_PATH",
              "multipathIbgp" : true,
              "neighbors" : {
                "1.10.1.1/32" : {
                  "name" : "1.10.1.1/32",
                  "additionalPathsReceive" : true,
                  "additionalPathsSelectAll" : true,
                  "additionalPathsSend" : true,
                  "address" : "1.10.1.1",
                  "advertiseExternal" : false,
                  "advertiseInactive" : true,
                  "allowLocalAsIn" : false,
                  "allowRemoteAsOut" : false,
                  "clusterId" : 16908802,
                  "defaultMetric" : 0,
                  "dynamic" : false,
                  "ebgpMultihop" : false,
                  "enforceFirstAs" : false,
                  "exportPolicy" : "~BGP_PEER_EXPORT_POLICY:default:1.10.1.1~",
                  "group" : "as1",
                  "localAs" : 1,
                  "localIp" : "1.2.2.2",
                  "remoteAs" : 1,
                  "remotePrefix" : "1.10.1.1/32",
                  "routeReflectorClient" : false,
                  "sendCommunity" : true,
                  "vrf" : "default"
                },
                "10.13.22.3/32" : {
                  "name" : "10.13.22.3/32",
                  "additionalPathsReceive" : true,
                  "additionalPathsSelectAll" : true,
                  "additionalPathsSend" : true,
                  "address" : "10.13.22.3",
                  "advertiseExternal" : false,
                  "advertiseInactive" : true,
                  "allowLocalAsIn" : false,
                  "allowRemoteAsOut" : false,
                  "clusterId" : 16908802,
                  "defaultMetric" : 0,
                  "dynamic" : false,
                  "ebgpMultihop" : false,
                  "enforceFirstAs" : false,
                  "exportPolicy" : "~BGP_PEER_EXPORT_POLICY:default:10.13.22.3~",
                  "exportPolicySources" : [
                    "as1_to_as3"
                  ],
                  "group" : "as3",
                  "importPolicy" : "as3_to_as1",
                  "importPolicySources" : [
                    "as3_to_as1"
                  ],
                  "localAs" : 1,
                  "localIp" : "10.13.22.1",
                  "remoteAs" : 3,
                  "remotePrefix" : "10.13.22.3/32",
                  "routeReflectorClient" : false,
                  "sendCommunity" : true,
                  "vrf" : "default"
                },
                "10.14.22.4/32" : {
                  "name" : "10.14.22.4/32",
                  "additionalPathsReceive" : true,
                  "additionalPathsSelectAll" : true,
                  "additionalPathsSend" : true,
                  "address" : "10.14.22.4",
                  "advertiseExternal" : false,
                  "advertiseInactive" : true,
                  "allowLocalAsIn" : false,
                  "allowRemoteAsOut" : false,
                  "clusterId" : 16908802,
                  "defaultMetric" : 0,
                  "dynamic" : false,
                  "ebgpMultihop" : false,
                  "enforceFirstAs" : false,
                  "exportPolicy" : "~BGP_PEER_EXPORT_POLICY:default:10.14.22.4~",
                  "exportPolicySources" : [
                    "as1_to_as4"
                  ],
                  "group" : "as4",
                  "importPolicy" : "as4_to_as1",
                  "importPolicySources" : [
                    "as4_to_as1"
                  ],
                  "localAs" : 1,
                  "localIp" : "10.14.22.1",
                  "remoteAs" : 4,
                  "remotePrefix" : "10.14.22.4/32",
                  "routeReflectorClient" : false,
                  "sendCommunity" : false,
                  "vrf" : "default"
                }
              },
              "routerId" : "1.2.2.2",
              "tieBreaker" : "ARRIVAL_ORDER"
            },
            "interfaces" : [
              "Ethernet0/0",
              "GigabitEthernet0/0",
              "GigabitEthernet1/0",
              "GigabitEthernet2/0",
              "Loopback0"
            ],
            "ospfProcess" : {
              "areas" : {
                "1" : {
                  "name" : 1,
                  "interfaces" : [
                    "GigabitEthernet1/0",
                    "Loopback0"
                  ]
                }
              },
              "exportPolicy" : "~OSPF_EXPORT_POLICY:default~",
              "processId" : "1",
              "referenceBandwidth" : 1.0E8,
              "routerId" : "1.2.2.2"
            }
          }
        }
      },
      "as1core1" : {
        "configurationFormat" : "CISCO_IOS",
        "name" : "as1core1",
        "defaultCrossZoneAction" : "ACCEPT",
        "defaultInboundAction" : "ACCEPT",
        "deviceType" : "ROUTER",
        "domainName" : "lab.local",
        "interfaces" : {
          "Ethernet0/0" : {
            "name" : "Ethernet0/0",
            "accessVlan" : 0,
            "active" : false,
            "autostate" : true,
            "bandwidth" : 1.0E7,
            "declaredNames" : [
              "Ethernet0/0"
            ],
            "isisL1InterfaceMode" : "unset",
            "isisL2InterfaceMode" : "unset",
            "mtu" : 1500,
            "nativeVlan" : 1,
            "ospfDeadInterval" : 0,
            "ospfEnabled" : false,
            "ospfHelloMultiplier" : 0,
            "ospfPassive" : false,
            "ospfPointToPoint" : false,
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "PHYSICAL",
            "vrf" : "default"
          },
          "GigabitEthernet0/0" : {
            "name" : "GigabitEthernet0/0",
            "accessVlan" : 0,
            "active" : true,
            "allPrefixes" : [
              "1.0.2.2/24"
            ],
            "autostate" : true,
            "bandwidth" : 1.0E9,
            "declaredNames" : [
              "GigabitEthernet0/0"
            ],
            "isisL1InterfaceMode" : "unset",
            "isisL2InterfaceMode" : "unset",
            "mtu" : 1500,
            "nativeVlan" : 1,
            "ospfArea" : 1,
            "ospfCost" : 1,
            "ospfDeadInterval" : 0,
            "ospfEnabled" : true,
            "ospfHelloMultiplier" : 0,
            "ospfPassive" : false,
            "ospfPointToPoint" : false,
            "prefix" : "1.0.2.2/24",
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "PHYSICAL",
            "vrf" : "default"
          },
          "GigabitEthernet1/0" : {
            "name" : "GigabitEthernet1/0",
            "accessVlan" : 0,
            "active" : true,
            "allPrefixes" : [
              "1.0.1.2/24"
            ],
            "autostate" : true,
            "bandwidth" : 1.0E9,
            "declaredNames" : [
              "GigabitEthernet1/0"
            ],
            "isisL1InterfaceMode" : "unset",
            "isisL2InterfaceMode" : "unset",
            "mtu" : 1500,
            "nativeVlan" : 1,
            "ospfArea" : 1,
            "ospfCost" : 1,
            "ospfDeadInterval" : 0,
            "ospfEnabled" : true,
            "ospfHelloMultiplier" : 0,
            "ospfPassive" : false,
            "ospfPointToPoint" : false,
            "prefix" : "1.0.1.2/24",
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "PHYSICAL",
            "vrf" : "default"
          },
          "Loopback0" : {
            "name" : "Loopback0",
            "accessVlan" : 0,
            "active" : true,
            "allPrefixes" : [
              "1.10.1.1/32"
            ],
            "autostate" : true,
            "bandwidth" : 1.0E12,
            "declaredNames" : [
              "Loopback0"
            ],
            "isisL1InterfaceMode" : "unset",
            "isisL2InterfaceMode" : "unset",
            "mtu" : 1500,
            "nativeVlan" : 1,
            "ospfArea" : 1,
            "ospfCost" : 1,
            "ospfDeadInterval" : 0,
            "ospfEnabled" : true,
            "ospfHelloMultiplier" : 0,
            "ospfPassive" : false,
            "ospfPointToPoint" : false,
            "prefix" : "1.10.1.1/32",
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "LOOPBACK",
            "vrf" : "default"
          }
        },
        "loggingServers" : [
          "1.1.1.1",
          "2.2.2.2"
        ],
        "routingPolicies" : {
          "~BGP_COMMON_EXPORT_POLICY:default~" : {
            "name" : "~BGP_COMMON_EXPORT_POLICY:default~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.Disjunction",
                  "disjuncts" : [
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                      "protocol" : "bgp"
                    },
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                      "protocol" : "ibgp"
                    }
                  ]
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ReturnTrue"
                  }
                ]
              },
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                "type" : "ReturnFalse"
              }
            ]
          },
          "~BGP_PEER_EXPORT_POLICY:default:1.1.1.1~" : {
            "name" : "~BGP_PEER_EXPORT_POLICY:default:1.1.1.1~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "peer-export policy main conditional: exitAccept if true / exitReject if false",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitReject"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                  "calledPolicyName" : "~BGP_COMMON_EXPORT_POLICY:default~"
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitAccept"
                  }
                ]
              }
            ]
          },
          "~BGP_PEER_EXPORT_POLICY:default:1.2.2.2~" : {
            "name" : "~BGP_PEER_EXPORT_POLICY:default:1.2.2.2~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "peer-export policy main conditional: exitAccept if true / exitReject if false",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitReject"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                  "calledPolicyName" : "~BGP_COMMON_EXPORT_POLICY:default~"
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitAccept"
                  }
                ]
              }
            ]
          },
          "~OSPF_EXPORT_POLICY:default~" : {
            "name" : "~OSPF_EXPORT_POLICY:default~"
          }
        },
        "vendorFamily" : {
          "cisco" : {
            "aaa" : {
              "newModel" : false
            },
            "hostname" : "as1core1",
            "lines" : {
              "aux0" : {
                "name" : "aux0",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0
              },
              "con0" : {
                "name" : "con0",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0
              },
              "vty0" : {
                "name" : "vty0",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0
              },
              "vty1" : {
                "name" : "vty1",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0
              },
              "vty2" : {
                "name" : "vty2",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0
              },
              "vty3" : {
                "name" : "vty3",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0
              },
              "vty4" : {
                "name" : "vty4",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0
              }
            },
            "logging" : {
              "hosts" : {
                "1.1.1.1" : {
                  "name" : "1.1.1.1"
                },
                "2.2.2.2" : {
                  "name" : "2.2.2.2"
                }
              },
              "on" : true
            },
            "services" : {
              "timestamps" : {
                "enabled" : true,
                "subservices" : {
                  "debug" : {
                    "enabled" : true,
                    "subservices" : {
                      "datetime" : {
                        "enabled" : true,
                        "subservices" : {
                          "msec" : {
                            "enabled" : true
                          }
                        }
                      }
                    }
                  },
                  "log" : {
                    "enabled" : true,
                    "subservices" : {
                      "datetime" : {
                        "enabled" : true,
                        "subservices" : {
                          "msec" : {
                            "enabled" : true
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "vrfs" : {
          "default" : {
            "name" : "default",
            "bgpProcess" : {
              "multipathEbgp" : true,
              "multipathEquivalentAsPathMatchMode" : "EXACT_PATH",
              "multipathIbgp" : true,
              "neighbors" : {
                "1.1.1.1/32" : {
                  "name" : "1.1.1.1/32",
                  "additionalPathsReceive" : true,
                  "additionalPathsSelectAll" : true,
                  "additionalPathsSend" : true,
                  "address" : "1.1.1.1",
                  "advertiseExternal" : false,
                  "advertiseInactive" : true,
                  "allowLocalAsIn" : false,
                  "allowRemoteAsOut" : false,
                  "clusterId" : 17432833,
                  "defaultMetric" : 0,
                  "dynamic" : false,
                  "ebgpMultihop" : false,
                  "enforceFirstAs" : false,
                  "exportPolicy" : "~BGP_PEER_EXPORT_POLICY:default:1.1.1.1~",
                  "group" : "as1",
                  "localAs" : 1,
                  "localIp" : "1.10.1.1",
                  "remoteAs" : 1,
                  "remotePrefix" : "1.1.1.1/32",
                  "routeReflectorClient" : true,
                  "sendCommunity" : true,
                  "vrf" : "default"
                },
                "1.2.2.2/32" : {
                  "name" : "1.2.2.2/32",
                  "additionalPathsReceive" : true,
                  "additionalPathsSelectAll" : true,
                  "additionalPathsSend" : true,
                  "address" : "1.2.2.2",
                  "advertiseExternal" : false,
                  "advertiseInactive" : true,
                  "allowLocalAsIn" : false,
                  "allowRemoteAsOut" : false,
                  "clusterId" : 17432833,
                  "defaultMetric" : 0,
                  "dynamic" : false,
                  "ebgpMultihop" : false,
                  "enforceFirstAs" : false,
                  "exportPolicy" : "~BGP_PEER_EXPORT_POLICY:default:1.2.2.2~",
                  "group" : "as1",
                  "localAs" : 1,
                  "localIp" : "1.10.1.1",
                  "remoteAs" : 1,
                  "remotePrefix" : "1.2.2.2/32",
                  "routeReflectorClient" : true,
                  "sendCommunity" : true,
                  "vrf" : "default"
                }
              },
              "routerId" : "1.10.1.1",
              "tieBreaker" : "ARRIVAL_ORDER"
            },
            "interfaces" : [
              "Ethernet0/0",
              "GigabitEthernet0/0",
              "GigabitEthernet1/0",
              "Loopback0"
            ],
            "ospfProcess" : {
              "areas" : {
                "1" : {
                  "name" : 1,
                  "interfaces" : [
                    "GigabitEthernet0/0",
                    "GigabitEthernet1/0",
                    "Loopback0"
                  ]
                }
              },
              "exportPolicy" : "~OSPF_EXPORT_POLICY:default~",
              "processId" : "1",
              "referenceBandwidth" : 1.0E8,
              "routerId" : "1.10.1.1"
            }
          }
        }
      },
      "as2border1" : {
        "configurationFormat" : "CISCO_IOS",
        "name" : "as2border1",
        "communityLists" : {
          "as1_community" : {
            "lines" : [
              {
                "action" : "ACCEPT",
                "regex" : "(,|\\{|\\}|^|$| )1:"
              }
            ],
            "name" : "as1_community",
            "invertMatch" : false
          },
          "as2_community" : {
            "lines" : [
              {
                "action" : "ACCEPT",
                "regex" : "(,|\\{|\\}|^|$| )2:"
              }
            ],
            "name" : "as2_community",
            "invertMatch" : false
          },
          "as3_community" : {
            "lines" : [
              {
                "action" : "ACCEPT",
                "regex" : "(,|\\{|\\}|^|$| )3:"
              }
            ],
            "name" : "as3_community",
            "invertMatch" : false
          }
        },
        "defaultCrossZoneAction" : "ACCEPT",
        "defaultInboundAction" : "ACCEPT",
        "deviceType" : "ROUTER",
        "domainName" : "lab.local",
        "interfaces" : {
          "Ethernet0/0" : {
            "name" : "Ethernet0/0",
            "accessVlan" : 0,
            "active" : false,
            "autostate" : true,
            "bandwidth" : 1.0E7,
            "declaredNames" : [
              "Ethernet0/0"
            ],
            "isisL1InterfaceMode" : "unset",
            "isisL2InterfaceMode" : "unset",
            "mtu" : 1500,
            "nativeVlan" : 1,
            "ospfDeadInterval" : 0,
            "ospfEnabled" : false,
            "ospfHelloMultiplier" : 0,
            "ospfPassive" : false,
            "ospfPointToPoint" : false,
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "PHYSICAL",
            "vrf" : "default"
          },
          "GigabitEthernet0/0" : {
            "name" : "GigabitEthernet0/0",
            "accessVlan" : 0,
            "active" : true,
            "allPrefixes" : [
              "10.12.11.2/24"
            ],
            "autostate" : true,
            "bandwidth" : 1.0E9,
            "declaredNames" : [
              "GigabitEthernet0/0"
            ],
            "incomingFilter" : "OUTSIDE_TO_INSIDE",
            "isisL1InterfaceMode" : "unset",
            "isisL2InterfaceMode" : "unset",
            "mtu" : 1500,
            "nativeVlan" : 1,
            "ospfDeadInterval" : 0,
            "ospfEnabled" : false,
            "ospfHelloMultiplier" : 0,
            "ospfPassive" : false,
            "ospfPointToPoint" : false,
            "outgoingFilter" : "INSIDE_TO_AS1",
            "prefix" : "10.12.11.2/24",
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "PHYSICAL",
            "vrf" : "default"
          },
          "GigabitEthernet1/0" : {
            "name" : "GigabitEthernet1/0",
            "accessVlan" : 0,
            "active" : true,
            "allPrefixes" : [
              "2.12.11.1/24"
            ],
            "autostate" : true,
            "bandwidth" : 1.0E9,
            "declaredNames" : [
              "GigabitEthernet1/0"
            ],
            "isisL1InterfaceMode" : "unset",
            "isisL2InterfaceMode" : "unset",
            "mtu" : 1500,
            "nativeVlan" : 1,
            "ospfArea" : 1,
            "ospfCost" : 1,
            "ospfDeadInterval" : 0,
            "ospfEnabled" : true,
            "ospfHelloMultiplier" : 0,
            "ospfPassive" : false,
            "ospfPointToPoint" : false,
            "prefix" : "2.12.11.1/24",
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "PHYSICAL",
            "vrf" : "default"
          },
          "GigabitEthernet2/0" : {
            "name" : "GigabitEthernet2/0",
            "accessVlan" : 0,
            "active" : true,
            "allPrefixes" : [
              "2.12.12.1/24"
            ],
            "autostate" : true,
            "bandwidth" : 1.0E9,
            "declaredNames" : [
              "GigabitEthernet2/0"
            ],
            "isisL1InterfaceMode" : "unset",
            "isisL2InterfaceMode" : "unset",
            "mtu" : 1500,
            "nativeVlan" : 1,
            "ospfArea" : 1,
            "ospfCost" : 1,
            "ospfDeadInterval" : 0,
            "ospfEnabled" : true,
            "ospfHelloMultiplier" : 0,
            "ospfPassive" : false,
            "ospfPointToPoint" : false,
            "prefix" : "2.12.12.1/24",
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "PHYSICAL",
            "vrf" : "default"
          },
          "Loopback0" : {
            "name" : "Loopback0",
            "accessVlan" : 0,
            "active" : true,
            "allPrefixes" : [
              "2.1.1.1/32"
            ],
            "autostate" : true,
            "bandwidth" : 1.0E12,
            "declaredNames" : [
              "Loopback0"
            ],
            "isisL1InterfaceMode" : "unset",
            "isisL2InterfaceMode" : "unset",
            "mtu" : 1500,
            "nativeVlan" : 1,
            "ospfArea" : 1,
            "ospfCost" : 1,
            "ospfDeadInterval" : 0,
            "ospfEnabled" : true,
            "ospfHelloMultiplier" : 0,
            "ospfPassive" : false,
            "ospfPointToPoint" : false,
            "prefix" : "2.1.1.1/32",
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "LOOPBACK",
            "vrf" : "default"
          }
        },
        "ipAccessLists" : {
          "101" : {
            "name" : "101",
            "lines" : [
              {
                "action" : "ACCEPT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "255.255.255.0"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "1.0.1.0"
                    }
                  }
                },
                "name" : "permit ip host 1.0.1.0 host 255.255.255.0"
              },
              {
                "action" : "ACCEPT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "255.255.255.0"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "1.0.2.0"
                    }
                  }
                },
                "name" : "permit ip host 1.0.2.0 host 255.255.255.0"
              }
            ]
          },
          "103" : {
            "name" : "103",
            "lines" : [
              {
                "action" : "ACCEPT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "255.255.255.0"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "3.0.1.0"
                    }
                  }
                },
                "name" : "permit ip host 3.0.1.0 host 255.255.255.0"
              },
              {
                "action" : "ACCEPT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "255.255.255.0"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "3.0.2.0"
                    }
                  }
                },
                "name" : "permit ip host 3.0.2.0 host 255.255.255.0"
              }
            ]
          },
          "INSIDE_TO_AS1" : {
            "name" : "INSIDE_TO_AS1",
            "lines" : [
              {
                "action" : "ACCEPT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "1.0.0.0/8"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "2.0.0.0/8"
                    }
                  }
                },
                "name" : "permit ip 2.0.0.0 0.255.255.255 1.0.0.0 0.255.255.255"
              },
              {
                "action" : "ACCEPT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "10.12.11.1"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "10.12.11.2"
                    }
                  }
                },
                "name" : "permit ip 10.12.11.2 0.0.0.0 10.12.11.1 0.0.0.0"
              },
              {
                "action" : "REJECT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "0.0.0.0/0"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "0.0.0.0/0"
                    }
                  }
                },
                "name" : "deny   ip any any"
              }
            ]
          },
          "OUTSIDE_TO_INSIDE" : {
            "name" : "OUTSIDE_TO_INSIDE",
            "lines" : [
              {
                "action" : "REJECT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "0.0.0.0/0"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "2.0.0.0/8"
                    }
                  }
                },
                "name" : "deny   ip 2.0.0.0 0.255.255.255 any"
              },
              {
                "action" : "REJECT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "2.128.1.101"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "0.0.0.0/0"
                    }
                  }
                },
                "name" : "deny   ip any host 2.128.1.101"
              },
              {
                "action" : "ACCEPT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "0.0.0.0/0"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "0.0.0.0/0"
                    }
                  }
                },
                "name" : "permit ip any any"
              }
            ]
          }
        },
        "ntpServers" : [
          "18.18.18.18",
          "23.23.23.23"
        ],
        "routeFilterLists" : {
          "101" : {
            "name" : "101",
            "lines" : [
              {
                "action" : "ACCEPT",
                "lengthRange" : "24-24",
                "prefix" : "1.0.1.0/24"
              },
              {
                "action" : "ACCEPT",
                "lengthRange" : "24-24",
                "prefix" : "1.0.2.0/24"
              }
            ]
          },
          "103" : {
            "name" : "103",
            "lines" : [
              {
                "action" : "ACCEPT",
                "lengthRange" : "24-24",
                "prefix" : "3.0.1.0/24"
              },
              {
                "action" : "ACCEPT",
                "lengthRange" : "24-24",
                "prefix" : "3.0.2.0/24"
              }
            ]
          },
          "inbound_route_filter" : {
            "name" : "inbound_route_filter",
            "lines" : [
              {
                "action" : "REJECT",
                "lengthRange" : "8-32",
                "prefix" : "2.0.0.0/8"
              },
              {
                "action" : "ACCEPT",
                "lengthRange" : "0-32",
                "prefix" : "0.0.0.0/0"
              }
            ]
          },
          "outbound_routes" : {
            "name" : "outbound_routes",
            "lines" : [
              {
                "action" : "ACCEPT",
                "lengthRange" : "16-32",
                "prefix" : "2.128.0.0/9"
              }
            ]
          },
          "~MATCH_SUPPRESSED_SUMMARY_ONLY:default~" : {
            "name" : "~MATCH_SUPPRESSED_SUMMARY_ONLY:default~",
            "lines" : [
              {
                "action" : "ACCEPT",
                "lengthRange" : "17-32",
                "prefix" : "2.128.0.0/16"
              }
            ]
          }
        },
        "routingPolicies" : {
          "as1_to_as2" : {
            "name" : "as1_to_as2",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "~RMCLAUSE~as1_to_as2~100~",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ReturnLocalDefaultAction"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.MatchCommunitySet",
                  "expr" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.NamedCommunitySet",
                    "name" : "as1_community"
                  }
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.SetLocalPreference",
                    "localPreference" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.LiteralInt",
                      "value" : 350
                    }
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.AddCommunity",
                    "expr" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.InlineCommunitySet",
                      "communities" : [
                        {
                          "prefix" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                            "value" : 1
                          },
                          "suffix" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                            "value" : 2
                          }
                        }
                      ]
                    }
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ReturnTrue"
                  }
                ]
              }
            ]
          },
          "as2_to_as1" : {
            "name" : "as2_to_as1",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "~RMCLAUSE~as2_to_as1~2~",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.If",
                    "comment" : "~RMCLAUSE~as2_to_as1~3~",
                    "falseStatements" : [
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                        "type" : "ReturnLocalDefaultAction"
                      }
                    ],
                    "guard" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                      "prefix" : {
                        "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                      },
                      "prefixSet" : {
                        "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                        "name" : "103"
                      }
                    },
                    "trueStatements" : [
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
                        "metric" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.LiteralLong",
                          "value" : 50
                        }
                      },
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.AddCommunity",
                        "expr" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.InlineCommunitySet",
                          "communities" : [
                            {
                              "prefix" : {
                                "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                                "value" : 2
                              },
                              "suffix" : {
                                "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                                "value" : 1
                              }
                            }
                          ]
                        }
                      },
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                        "type" : "ReturnTrue"
                      }
                    ]
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                  "prefix" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                  },
                  "prefixSet" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                    "name" : "outbound_routes"
                  }
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
                    "metric" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.LiteralLong",
                      "value" : 50
                    }
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.AddCommunity",
                    "expr" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.InlineCommunitySet",
                      "communities" : [
                        {
                          "prefix" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                            "value" : 2
                          },
                          "suffix" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                            "value" : 1
                          }
                        }
                      ]
                    }
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ReturnTrue"
                  }
                ]
              }
            ]
          },
          "as2_to_as3" : {
            "name" : "as2_to_as3",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "~RMCLAUSE~as2_to_as3~1~",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.If",
                    "comment" : "~RMCLAUSE~as2_to_as3~2~",
                    "falseStatements" : [
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                        "type" : "ReturnLocalDefaultAction"
                      }
                    ],
                    "guard" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                      "prefix" : {
                        "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                      },
                      "prefixSet" : {
                        "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                        "name" : "outbound_routes"
                      }
                    },
                    "trueStatements" : [
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
                        "metric" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.LiteralLong",
                          "value" : 50
                        }
                      },
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.AddCommunity",
                        "expr" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.InlineCommunitySet",
                          "communities" : [
                            {
                              "prefix" : {
                                "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                                "value" : 2
                              },
                              "suffix" : {
                                "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                                "value" : 3
                              }
                            }
                          ]
                        }
                      },
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                        "type" : "ReturnTrue"
                      }
                    ]
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                  "prefix" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                  },
                  "prefixSet" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                    "name" : "101"
                  }
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
                    "metric" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.LiteralLong",
                      "value" : 50
                    }
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.AddCommunity",
                    "expr" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.InlineCommunitySet",
                      "communities" : [
                        {
                          "prefix" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                            "value" : 2
                          },
                          "suffix" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                            "value" : 3
                          }
                        }
                      ]
                    }
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ReturnTrue"
                  }
                ]
              }
            ]
          },
          "as3_to_as2" : {
            "name" : "as3_to_as2",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "~RMCLAUSE~as3_to_as2~100~",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ReturnLocalDefaultAction"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.MatchCommunitySet",
                  "expr" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.NamedCommunitySet",
                    "name" : "as3_community"
                  }
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.SetLocalPreference",
                    "localPreference" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.LiteralInt",
                      "value" : 350
                    }
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.AddCommunity",
                    "expr" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.InlineCommunitySet",
                      "communities" : [
                        {
                          "prefix" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                            "value" : 3
                          },
                          "suffix" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                            "value" : 2
                          }
                        }
                      ]
                    }
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ReturnTrue"
                  }
                ]
              }
            ]
          },
          "~AGGREGATE_ROUTE_GEN:default:2.128.0.0/16~" : {
            "name" : "~AGGREGATE_ROUTE_GEN:default:2.128.0.0/16~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                  "prefix" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                  },
                  "prefixSet" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.ExplicitPrefixSet",
                    "prefixSpace" : [
                      "2.128.0.0/16:17-32"
                    ]
                  }
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ReturnTrue"
                  }
                ]
              }
            ]
          },
          "~BGP_COMMON_EXPORT_POLICY:default~" : {
            "name" : "~BGP_COMMON_EXPORT_POLICY:default~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "Suppress summarized of summary-only aggregate-address networks",
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                  "prefix" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                  },
                  "prefixSet" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                    "name" : "~MATCH_SUPPRESSED_SUMMARY_ONLY:default~"
                  }
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ReturnFalse"
                  }
                ]
              },
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.Disjunction",
                  "disjuncts" : [
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.Conjunction",
                      "conjuncts" : [
                        {
                          "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                          "prefix" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                          },
                          "prefixSet" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.ExplicitPrefixSet",
                            "prefixSpace" : [
                              "2.128.0.0/16"
                            ]
                          }
                        },
                        {
                          "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                          "protocol" : "aggregate"
                        },
                        {
                          "class" : "org.batfish.datamodel.routing_policy.expr.WithEnvironmentExpr",
                          "expr" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.BooleanExprs$StaticBooleanExpr",
                            "type" : "True"
                          },
                          "postStatements" : [
                            {
                              "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                              "type" : "UnsetWriteIntermediateBgpAttributes"
                            }
                          ],
                          "postTrueStatements" : [
                            {
                              "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                              "type" : "SetReadIntermediateBgpAttributes"
                            },
                            {
                              "class" : "org.batfish.datamodel.routing_policy.statement.SetOrigin",
                              "originType" : {
                                "class" : "org.batfish.datamodel.routing_policy.expr.LiteralOrigin",
                                "originType" : "igp"
                              }
                            }
                          ],
                          "preStatements" : [
                            {
                              "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                              "type" : "SetWriteIntermediateBgpAttributes"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                      "protocol" : "bgp"
                    },
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                      "protocol" : "ibgp"
                    }
                  ]
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ReturnTrue"
                  }
                ]
              },
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                "type" : "ReturnFalse"
              }
            ]
          },
          "~BGP_PEER_EXPORT_POLICY:default:10.12.11.1~" : {
            "name" : "~BGP_PEER_EXPORT_POLICY:default:10.12.11.1~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "peer-export policy main conditional: exitAccept if true / exitReject if false",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitReject"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.Conjunction",
                  "conjuncts" : [
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                      "calledPolicyName" : "~BGP_COMMON_EXPORT_POLICY:default~"
                    },
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                      "calledPolicyName" : "as2_to_as1"
                    }
                  ]
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitAccept"
                  }
                ]
              }
            ]
          },
          "~BGP_PEER_EXPORT_POLICY:default:2.1.2.1~" : {
            "name" : "~BGP_PEER_EXPORT_POLICY:default:2.1.2.1~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "peer-export policy main conditional: exitAccept if true / exitReject if false",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitReject"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                  "calledPolicyName" : "~BGP_COMMON_EXPORT_POLICY:default~"
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitAccept"
                  }
                ]
              }
            ]
          },
          "~BGP_PEER_EXPORT_POLICY:default:2.1.2.2~" : {
            "name" : "~BGP_PEER_EXPORT_POLICY:default:2.1.2.2~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "peer-export policy main conditional: exitAccept if true / exitReject if false",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitReject"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                  "calledPolicyName" : "~BGP_COMMON_EXPORT_POLICY:default~"
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitAccept"
                  }
                ]
              }
            ]
          },
          "~OSPF_EXPORT_POLICY:default~" : {
            "name" : "~OSPF_EXPORT_POLICY:default~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "OSPF export routes for connected",
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.Conjunction",
                  "conjuncts" : [
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                      "protocol" : "connected"
                    },
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.Not",
                      "expr" : {
                        "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                        "comment" : "match default route",
                        "prefix" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                        },
                        "prefixSet" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.ExplicitPrefixSet",
                          "prefixSpace" : [
                            "0.0.0.0/0"
                          ]
                        }
                      }
                    }
                  ]
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.SetOspfMetricType",
                    "metricType" : "E2"
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
                    "metric" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.LiteralLong",
                      "value" : 20
                    }
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitAccept"
                  }
                ]
              }
            ]
          }
        },
        "vendorFamily" : {
          "cisco" : {
            "aaa" : {
              "authentication" : { },
              "newModel" : true
            },
            "hostname" : "as2border1",
            "lines" : {
              "aux0" : {
                "name" : "aux0",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0
              },
              "con0" : {
                "name" : "con0",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0
              },
              "vty0" : {
                "name" : "vty0",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0
              },
              "vty1" : {
                "name" : "vty1",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0
              },
              "vty2" : {
                "name" : "vty2",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0
              },
              "vty3" : {
                "name" : "vty3",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0
              },
              "vty4" : {
                "name" : "vty4",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0
              }
            },
            "logging" : {
              "on" : true
            },
            "ntp" : {
              "servers" : {
                "18.18.18.18" : {
                  "name" : "18.18.18.18"
                },
                "23.23.23.23" : {
                  "name" : "23.23.23.23"
                }
              }
            },
            "services" : {
              "timestamps" : {
                "enabled" : true,
                "subservices" : {
                  "debug" : {
                    "enabled" : true,
                    "subservices" : {
                      "datetime" : {
                        "enabled" : true,
                        "subservices" : {
                          "msec" : {
                            "enabled" : true
                          }
                        }
                      }
                    }
                  },
                  "log" : {
                    "enabled" : true,
                    "subservices" : {
                      "datetime" : {
                        "enabled" : true,
                        "subservices" : {
                          "msec" : {
                            "enabled" : true
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "vrfs" : {
          "default" : {
            "name" : "default",
            "aggregateRoutes" : [
              {
                "class" : "org.batfish.datamodel.GeneratedRoute",
                "administrativeCost" : 200,
                "asPath" : [ ],
                "discard" : true,
                "generationPolicy" : "~AGGREGATE_ROUTE_GEN:default:2.128.0.0/16~",
                "metric" : 0,
                "network" : "2.128.0.0/16",
                "nextHopIp" : "AUTO/NONE(-1l)"
              }
            ],
            "bgpProcess" : {
              "multipathEbgp" : true,
              "multipathEquivalentAsPathMatchMode" : "EXACT_PATH",
              "multipathIbgp" : true,
              "neighbors" : {
                "2.1.2.1/32" : {
                  "name" : "2.1.2.1/32",
                  "additionalPathsReceive" : true,
                  "additionalPathsSelectAll" : true,
                  "additionalPathsSend" : true,
                  "address" : "2.1.2.1",
                  "advertiseExternal" : false,
                  "advertiseInactive" : true,
                  "allowLocalAsIn" : false,
                  "allowRemoteAsOut" : false,
                  "clusterId" : 33620225,
                  "defaultMetric" : 0,
                  "dynamic" : false,
                  "ebgpMultihop" : false,
                  "enforceFirstAs" : false,
                  "exportPolicy" : "~BGP_PEER_EXPORT_POLICY:default:2.1.2.1~",
                  "group" : "as2",
                  "localAs" : 2,
                  "localIp" : "2.1.1.1",
                  "remoteAs" : 2,
                  "remotePrefix" : "2.1.2.1/32",
                  "routeReflectorClient" : false,
                  "sendCommunity" : true,
                  "vrf" : "default"
                },
                "2.1.2.2/32" : {
                  "name" : "2.1.2.2/32",
                  "additionalPathsReceive" : true,
                  "additionalPathsSelectAll" : true,
                  "additionalPathsSend" : true,
                  "address" : "2.1.2.2",
                  "advertiseExternal" : false,
                  "advertiseInactive" : true,
                  "allowLocalAsIn" : false,
                  "allowRemoteAsOut" : false,
                  "clusterId" : 33620225,
                  "defaultMetric" : 0,
                  "dynamic" : false,
                  "ebgpMultihop" : false,
                  "enforceFirstAs" : false,
                  "exportPolicy" : "~BGP_PEER_EXPORT_POLICY:default:2.1.2.2~",
                  "group" : "as2",
                  "localAs" : 2,
                  "localIp" : "2.1.1.1",
                  "remoteAs" : 2,
                  "remotePrefix" : "2.1.2.2/32",
                  "routeReflectorClient" : false,
                  "sendCommunity" : true,
                  "vrf" : "default"
                },
                "10.12.11.1/32" : {
                  "name" : "10.12.11.1/32",
                  "additionalPathsReceive" : true,
                  "additionalPathsSelectAll" : true,
                  "additionalPathsSend" : true,
                  "address" : "10.12.11.1",
                  "advertiseExternal" : false,
                  "advertiseInactive" : true,
                  "allowLocalAsIn" : false,
                  "allowRemoteAsOut" : false,
                  "clusterId" : 33620225,
                  "defaultMetric" : 0,
                  "dynamic" : false,
                  "ebgpMultihop" : false,
                  "enforceFirstAs" : false,
                  "exportPolicy" : "~BGP_PEER_EXPORT_POLICY:default:10.12.11.1~",
                  "exportPolicySources" : [
                    "as2_to_as1"
                  ],
                  "group" : "as1",
                  "importPolicy" : "as1_to_as2",
                  "importPolicySources" : [
                    "as1_to_as2"
                  ],
                  "localAs" : 2,
                  "localIp" : "10.12.11.2",
                  "remoteAs" : 1,
                  "remotePrefix" : "10.12.11.1/32",
                  "routeReflectorClient" : false,
                  "sendCommunity" : true,
                  "vrf" : "default"
                }
              },
              "routerId" : "2.1.1.1",
              "tieBreaker" : "ARRIVAL_ORDER"
            },
            "interfaces" : [
              "Ethernet0/0",
              "GigabitEthernet0/0",
              "GigabitEthernet1/0",
              "GigabitEthernet2/0",
              "Loopback0"
            ],
            "ospfProcess" : {
              "areas" : {
                "1" : {
                  "name" : 1,
                  "interfaces" : [
                    "GigabitEthernet1/0",
                    "GigabitEthernet2/0",
                    "Loopback0"
                  ]
                }
              },
              "exportPolicy" : "~OSPF_EXPORT_POLICY:default~",
              "processId" : "1",
              "referenceBandwidth" : 1.0E8,
              "routerId" : "2.1.1.1"
            }
          }
        }
      },
      "as2border2" : {
        "configurationFormat" : "CISCO_IOS",
        "name" : "as2border2",
        "communityLists" : {
          "as1_community" : {
            "lines" : [
              {
                "action" : "ACCEPT",
                "regex" : "(,|\\{|\\}|^|$| )1:"
              }
            ],
            "name" : "as1_community",
            "invertMatch" : false
          },
          "as2_community" : {
            "lines" : [
              {
                "action" : "ACCEPT",
                "regex" : "(,|\\{|\\}|^|$| )2:"
              }
            ],
            "name" : "as2_community",
            "invertMatch" : false
          },
          "as3_community" : {
            "lines" : [
              {
                "action" : "ACCEPT",
                "regex" : "(,|\\{|\\}|^|$| )3:"
              }
            ],
            "name" : "as3_community",
            "invertMatch" : false
          }
        },
        "defaultCrossZoneAction" : "ACCEPT",
        "defaultInboundAction" : "ACCEPT",
        "deviceType" : "ROUTER",
        "domainName" : "lab.local",
        "interfaces" : {
          "Ethernet0/0" : {
            "name" : "Ethernet0/0",
            "accessVlan" : 0,
            "active" : false,
            "autostate" : true,
            "bandwidth" : 1.0E7,
            "declaredNames" : [
              "Ethernet0/0"
            ],
            "isisL1InterfaceMode" : "unset",
            "isisL2InterfaceMode" : "unset",
            "mtu" : 1500,
            "nativeVlan" : 1,
            "ospfDeadInterval" : 0,
            "ospfEnabled" : false,
            "ospfHelloMultiplier" : 0,
            "ospfPassive" : false,
            "ospfPointToPoint" : false,
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "PHYSICAL",
            "vrf" : "default"
          },
          "GigabitEthernet0/0" : {
            "name" : "GigabitEthernet0/0",
            "accessVlan" : 0,
            "active" : true,
            "allPrefixes" : [
              "10.23.21.2/24"
            ],
            "autostate" : true,
            "bandwidth" : 1.0E9,
            "declaredNames" : [
              "GigabitEthernet0/0"
            ],
            "incomingFilter" : "OUTSIDE_TO_INSIDE",
            "isisL1InterfaceMode" : "unset",
            "isisL2InterfaceMode" : "unset",
            "mtu" : 1500,
            "nativeVlan" : 1,
            "ospfDeadInterval" : 0,
            "ospfEnabled" : false,
            "ospfHelloMultiplier" : 0,
            "ospfPassive" : false,
            "ospfPointToPoint" : false,
            "outgoingFilter" : "INSIDE_TO_AS3",
            "prefix" : "10.23.21.2/24",
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "PHYSICAL",
            "vrf" : "default"
          },
          "GigabitEthernet1/0" : {
            "name" : "GigabitEthernet1/0",
            "accessVlan" : 0,
            "active" : true,
            "allPrefixes" : [
              "2.12.22.1/24"
            ],
            "autostate" : true,
            "bandwidth" : 1.0E9,
            "declaredNames" : [
              "GigabitEthernet1/0"
            ],
            "isisL1InterfaceMode" : "unset",
            "isisL2InterfaceMode" : "unset",
            "mtu" : 1500,
            "nativeVlan" : 1,
            "ospfArea" : 1,
            "ospfCost" : 1,
            "ospfDeadInterval" : 0,
            "ospfEnabled" : true,
            "ospfHelloMultiplier" : 0,
            "ospfPassive" : false,
            "ospfPointToPoint" : false,
            "prefix" : "2.12.22.1/24",
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "PHYSICAL",
            "vrf" : "default"
          },
          "GigabitEthernet2/0" : {
            "name" : "GigabitEthernet2/0",
            "accessVlan" : 0,
            "active" : true,
            "allPrefixes" : [
              "2.12.21.1/24"
            ],
            "autostate" : true,
            "bandwidth" : 1.0E9,
            "declaredNames" : [
              "GigabitEthernet2/0"
            ],
            "isisL1InterfaceMode" : "unset",
            "isisL2InterfaceMode" : "unset",
            "mtu" : 1500,
            "nativeVlan" : 1,
            "ospfArea" : 1,
            "ospfCost" : 1,
            "ospfDeadInterval" : 0,
            "ospfEnabled" : true,
            "ospfHelloMultiplier" : 0,
            "ospfPassive" : false,
            "ospfPointToPoint" : false,
            "prefix" : "2.12.21.1/24",
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "PHYSICAL",
            "vrf" : "default"
          },
          "Loopback0" : {
            "name" : "Loopback0",
            "accessVlan" : 0,
            "active" : true,
            "allPrefixes" : [
              "2.1.1.2/32"
            ],
            "autostate" : true,
            "bandwidth" : 1.0E12,
            "declaredNames" : [
              "Loopback0"
            ],
            "isisL1InterfaceMode" : "unset",
            "isisL2InterfaceMode" : "unset",
            "mtu" : 1500,
            "nativeVlan" : 1,
            "ospfArea" : 1,
            "ospfCost" : 1,
            "ospfDeadInterval" : 0,
            "ospfEnabled" : true,
            "ospfHelloMultiplier" : 0,
            "ospfPassive" : false,
            "ospfPointToPoint" : false,
            "prefix" : "2.1.1.2/32",
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "LOOPBACK",
            "vrf" : "default"
          }
        },
        "ipAccessLists" : {
          "101" : {
            "name" : "101",
            "lines" : [
              {
                "action" : "ACCEPT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "255.255.255.0"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "1.0.1.0"
                    }
                  }
                },
                "name" : "permit ip host 1.0.1.0 host 255.255.255.0"
              },
              {
                "action" : "ACCEPT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "255.255.255.0"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "1.0.2.0"
                    }
                  }
                },
                "name" : "permit ip host 1.0.2.0 host 255.255.255.0"
              }
            ]
          },
          "103" : {
            "name" : "103",
            "lines" : [
              {
                "action" : "ACCEPT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "255.255.255.0"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "3.0.1.0"
                    }
                  }
                },
                "name" : "permit ip host 3.0.1.0 host 255.255.255.0"
              },
              {
                "action" : "ACCEPT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "255.255.255.0"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "3.0.2.0"
                    }
                  }
                },
                "name" : "permit ip host 3.0.2.0 host 255.255.255.0"
              }
            ]
          },
          "INSIDE_TO_AS3" : {
            "name" : "INSIDE_TO_AS3",
            "lines" : [
              {
                "action" : "ACCEPT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "3.0.0.0/8"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "2.0.0.0/8"
                    }
                  }
                },
                "name" : "permit ip 2.0.0.0 0.255.255.255 3.0.0.0 0.255.255.255"
              },
              {
                "action" : "ACCEPT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "10.23.21.3"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "10.23.21.2"
                    }
                  }
                },
                "name" : "permit ip 10.23.21.2 0.0.0.0 10.23.21.3 0.0.0.0"
              },
              {
                "action" : "REJECT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "0.0.0.0/0"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "0.0.0.0/0"
                    }
                  }
                },
                "name" : "deny   ip any any"
              }
            ]
          },
          "OUTSIDE_TO_INSIDE" : {
            "name" : "OUTSIDE_TO_INSIDE",
            "lines" : [
              {
                "action" : "REJECT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "0.0.0.0/0"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "2.0.0.0/8"
                    }
                  }
                },
                "name" : "deny   ip 2.0.0.0 0.255.255.255 any"
              },
              {
                "action" : "ACCEPT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "0.0.0.0/0"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "0.0.0.0/0"
                    }
                  }
                },
                "name" : "permit ip any any"
              }
            ]
          }
        },
        "ntpServers" : [
          "18.18.18.18"
        ],
        "routeFilterLists" : {
          "101" : {
            "name" : "101",
            "lines" : [
              {
                "action" : "ACCEPT",
                "lengthRange" : "24-24",
                "prefix" : "1.0.1.0/24"
              },
              {
                "action" : "ACCEPT",
                "lengthRange" : "24-24",
                "prefix" : "1.0.2.0/24"
              }
            ]
          },
          "103" : {
            "name" : "103",
            "lines" : [
              {
                "action" : "ACCEPT",
                "lengthRange" : "24-24",
                "prefix" : "3.0.1.0/24"
              },
              {
                "action" : "ACCEPT",
                "lengthRange" : "24-24",
                "prefix" : "3.0.2.0/24"
              }
            ]
          },
          "inbound_route_filter" : {
            "name" : "inbound_route_filter",
            "lines" : [
              {
                "action" : "REJECT",
                "lengthRange" : "8-32",
                "prefix" : "2.0.0.0/8"
              },
              {
                "action" : "ACCEPT",
                "lengthRange" : "0-32",
                "prefix" : "0.0.0.0/0"
              }
            ]
          },
          "outbound_routes" : {
            "name" : "outbound_routes",
            "lines" : [
              {
                "action" : "ACCEPT",
                "lengthRange" : "16-32",
                "prefix" : "2.128.0.0/9"
              }
            ]
          },
          "~MATCH_SUPPRESSED_SUMMARY_ONLY:default~" : {
            "name" : "~MATCH_SUPPRESSED_SUMMARY_ONLY:default~",
            "lines" : [
              {
                "action" : "ACCEPT",
                "lengthRange" : "17-32",
                "prefix" : "2.128.0.0/16"
              }
            ]
          }
        },
        "routingPolicies" : {
          "as1_to_as2" : {
            "name" : "as1_to_as2",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "~RMCLAUSE~as1_to_as2~100~",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ReturnLocalDefaultAction"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.MatchCommunitySet",
                  "expr" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.NamedCommunitySet",
                    "name" : "as1_community"
                  }
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.SetLocalPreference",
                    "localPreference" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.LiteralInt",
                      "value" : 350
                    }
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.AddCommunity",
                    "expr" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.InlineCommunitySet",
                      "communities" : [
                        {
                          "prefix" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                            "value" : 1
                          },
                          "suffix" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                            "value" : 2
                          }
                        }
                      ]
                    }
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ReturnTrue"
                  }
                ]
              }
            ]
          },
          "as2_to_as1" : {
            "name" : "as2_to_as1",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "~RMCLAUSE~as2_to_as1~2~",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.If",
                    "comment" : "~RMCLAUSE~as2_to_as1~3~",
                    "falseStatements" : [
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                        "type" : "ReturnLocalDefaultAction"
                      }
                    ],
                    "guard" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                      "prefix" : {
                        "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                      },
                      "prefixSet" : {
                        "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                        "name" : "103"
                      }
                    },
                    "trueStatements" : [
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
                        "metric" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.LiteralLong",
                          "value" : 50
                        }
                      },
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.AddCommunity",
                        "expr" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.InlineCommunitySet",
                          "communities" : [
                            {
                              "prefix" : {
                                "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                                "value" : 2
                              },
                              "suffix" : {
                                "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                                "value" : 1
                              }
                            }
                          ]
                        }
                      },
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                        "type" : "ReturnTrue"
                      }
                    ]
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                  "prefix" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                  },
                  "prefixSet" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                    "name" : "outbound_routes"
                  }
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
                    "metric" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.LiteralLong",
                      "value" : 50
                    }
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.AddCommunity",
                    "expr" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.InlineCommunitySet",
                      "communities" : [
                        {
                          "prefix" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                            "value" : 2
                          },
                          "suffix" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                            "value" : 1
                          }
                        }
                      ]
                    }
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ReturnTrue"
                  }
                ]
              }
            ]
          },
          "as2_to_as3" : {
            "name" : "as2_to_as3",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "~RMCLAUSE~as2_to_as3~1~",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.If",
                    "comment" : "~RMCLAUSE~as2_to_as3~2~",
                    "falseStatements" : [
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                        "type" : "ReturnLocalDefaultAction"
                      }
                    ],
                    "guard" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                      "prefix" : {
                        "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                      },
                      "prefixSet" : {
                        "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                        "name" : "outbound_routes"
                      }
                    },
                    "trueStatements" : [
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
                        "metric" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.LiteralLong",
                          "value" : 50
                        }
                      },
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.AddCommunity",
                        "expr" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.InlineCommunitySet",
                          "communities" : [
                            {
                              "prefix" : {
                                "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                                "value" : 2
                              },
                              "suffix" : {
                                "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                                "value" : 3
                              }
                            }
                          ]
                        }
                      },
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                        "type" : "ReturnTrue"
                      }
                    ]
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                  "prefix" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                  },
                  "prefixSet" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                    "name" : "101"
                  }
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
                    "metric" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.LiteralLong",
                      "value" : 50
                    }
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.AddCommunity",
                    "expr" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.InlineCommunitySet",
                      "communities" : [
                        {
                          "prefix" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                            "value" : 2
                          },
                          "suffix" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                            "value" : 3
                          }
                        }
                      ]
                    }
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ReturnTrue"
                  }
                ]
              }
            ]
          },
          "as3_to_as2" : {
            "name" : "as3_to_as2",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "~RMCLAUSE~as3_to_as2~100~",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ReturnLocalDefaultAction"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.MatchCommunitySet",
                  "expr" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.NamedCommunitySet",
                    "name" : "as3_community"
                  }
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.SetLocalPreference",
                    "localPreference" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.LiteralInt",
                      "value" : 350
                    }
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.AddCommunity",
                    "expr" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.InlineCommunitySet",
                      "communities" : [
                        {
                          "prefix" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                            "value" : 3
                          },
                          "suffix" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                            "value" : 2
                          }
                        }
                      ]
                    }
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ReturnTrue"
                  }
                ]
              }
            ]
          },
          "~AGGREGATE_ROUTE_GEN:default:2.128.0.0/16~" : {
            "name" : "~AGGREGATE_ROUTE_GEN:default:2.128.0.0/16~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                  "prefix" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                  },
                  "prefixSet" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.ExplicitPrefixSet",
                    "prefixSpace" : [
                      "2.128.0.0/16:17-32"
                    ]
                  }
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ReturnTrue"
                  }
                ]
              }
            ]
          },
          "~BGP_COMMON_EXPORT_POLICY:default~" : {
            "name" : "~BGP_COMMON_EXPORT_POLICY:default~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "Suppress summarized of summary-only aggregate-address networks",
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                  "prefix" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                  },
                  "prefixSet" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                    "name" : "~MATCH_SUPPRESSED_SUMMARY_ONLY:default~"
                  }
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ReturnFalse"
                  }
                ]
              },
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.Disjunction",
                  "disjuncts" : [
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.Conjunction",
                      "conjuncts" : [
                        {
                          "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                          "prefix" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                          },
                          "prefixSet" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.ExplicitPrefixSet",
                            "prefixSpace" : [
                              "2.128.0.0/16"
                            ]
                          }
                        },
                        {
                          "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                          "protocol" : "aggregate"
                        },
                        {
                          "class" : "org.batfish.datamodel.routing_policy.expr.WithEnvironmentExpr",
                          "expr" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.BooleanExprs$StaticBooleanExpr",
                            "type" : "True"
                          },
                          "postStatements" : [
                            {
                              "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                              "type" : "UnsetWriteIntermediateBgpAttributes"
                            }
                          ],
                          "postTrueStatements" : [
                            {
                              "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                              "type" : "SetReadIntermediateBgpAttributes"
                            },
                            {
                              "class" : "org.batfish.datamodel.routing_policy.statement.SetOrigin",
                              "originType" : {
                                "class" : "org.batfish.datamodel.routing_policy.expr.LiteralOrigin",
                                "originType" : "igp"
                              }
                            }
                          ],
                          "preStatements" : [
                            {
                              "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                              "type" : "SetWriteIntermediateBgpAttributes"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                      "protocol" : "bgp"
                    },
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                      "protocol" : "ibgp"
                    }
                  ]
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ReturnTrue"
                  }
                ]
              },
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                "type" : "ReturnFalse"
              }
            ]
          },
          "~BGP_PEER_EXPORT_POLICY:default:10.23.21.3~" : {
            "name" : "~BGP_PEER_EXPORT_POLICY:default:10.23.21.3~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "peer-export policy main conditional: exitAccept if true / exitReject if false",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitReject"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.Conjunction",
                  "conjuncts" : [
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                      "calledPolicyName" : "~BGP_COMMON_EXPORT_POLICY:default~"
                    },
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                      "calledPolicyName" : "as2_to_as3"
                    }
                  ]
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitAccept"
                  }
                ]
              }
            ]
          },
          "~BGP_PEER_EXPORT_POLICY:default:2.1.2.1~" : {
            "name" : "~BGP_PEER_EXPORT_POLICY:default:2.1.2.1~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "peer-export policy main conditional: exitAccept if true / exitReject if false",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitReject"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                  "calledPolicyName" : "~BGP_COMMON_EXPORT_POLICY:default~"
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitAccept"
                  }
                ]
              }
            ]
          },
          "~BGP_PEER_EXPORT_POLICY:default:2.1.2.2~" : {
            "name" : "~BGP_PEER_EXPORT_POLICY:default:2.1.2.2~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "peer-export policy main conditional: exitAccept if true / exitReject if false",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitReject"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                  "calledPolicyName" : "~BGP_COMMON_EXPORT_POLICY:default~"
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitAccept"
                  }
                ]
              }
            ]
          },
          "~OSPF_EXPORT_POLICY:default~" : {
            "name" : "~OSPF_EXPORT_POLICY:default~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "OSPF export routes for connected",
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.Conjunction",
                  "conjuncts" : [
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                      "protocol" : "connected"
                    },
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.Not",
                      "expr" : {
                        "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                        "comment" : "match default route",
                        "prefix" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                        },
                        "prefixSet" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.ExplicitPrefixSet",
                          "prefixSpace" : [
                            "0.0.0.0/0"
                          ]
                        }
                      }
                    }
                  ]
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.SetOspfMetricType",
                    "metricType" : "E2"
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
                    "metric" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.LiteralLong",
                      "value" : 20
                    }
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitAccept"
                  }
                ]
              }
            ]
          }
        },
        "vendorFamily" : {
          "cisco" : {
            "aaa" : {
              "newModel" : false
            },
            "hostname" : "as2border2",
            "lines" : {
              "aux0" : {
                "name" : "aux0",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0
              },
              "con0" : {
                "name" : "con0",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0
              },
              "vty0" : {
                "name" : "vty0",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0
              },
              "vty1" : {
                "name" : "vty1",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0
              },
              "vty2" : {
                "name" : "vty2",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0
              },
              "vty3" : {
                "name" : "vty3",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0
              },
              "vty4" : {
                "name" : "vty4",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0
              }
            },
            "logging" : {
              "on" : true
            },
            "ntp" : {
              "servers" : {
                "18.18.18.18" : {
                  "name" : "18.18.18.18"
                }
              }
            },
            "services" : {
              "timestamps" : {
                "enabled" : true,
                "subservices" : {
                  "debug" : {
                    "enabled" : true,
                    "subservices" : {
                      "datetime" : {
                        "enabled" : true,
                        "subservices" : {
                          "msec" : {
                            "enabled" : true
                          }
                        }
                      }
                    }
                  },
                  "log" : {
                    "enabled" : true,
                    "subservices" : {
                      "datetime" : {
                        "enabled" : true,
                        "subservices" : {
                          "msec" : {
                            "enabled" : true
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "vrfs" : {
          "default" : {
            "name" : "default",
            "aggregateRoutes" : [
              {
                "class" : "org.batfish.datamodel.GeneratedRoute",
                "administrativeCost" : 200,
                "asPath" : [ ],
                "discard" : true,
                "generationPolicy" : "~AGGREGATE_ROUTE_GEN:default:2.128.0.0/16~",
                "metric" : 0,
                "network" : "2.128.0.0/16",
                "nextHopIp" : "AUTO/NONE(-1l)"
              }
            ],
            "bgpProcess" : {
              "multipathEbgp" : true,
              "multipathEquivalentAsPathMatchMode" : "EXACT_PATH",
              "multipathIbgp" : true,
              "neighbors" : {
                "2.1.2.1/32" : {
                  "name" : "2.1.2.1/32",
                  "additionalPathsReceive" : true,
                  "additionalPathsSelectAll" : true,
                  "additionalPathsSend" : true,
                  "address" : "2.1.2.1",
                  "advertiseExternal" : false,
                  "advertiseInactive" : true,
                  "allowLocalAsIn" : false,
                  "allowRemoteAsOut" : false,
                  "clusterId" : 33620226,
                  "defaultMetric" : 0,
                  "dynamic" : false,
                  "ebgpMultihop" : false,
                  "enforceFirstAs" : false,
                  "exportPolicy" : "~BGP_PEER_EXPORT_POLICY:default:2.1.2.1~",
                  "group" : "as2",
                  "localAs" : 2,
                  "localIp" : "2.1.1.2",
                  "remoteAs" : 2,
                  "remotePrefix" : "2.1.2.1/32",
                  "routeReflectorClient" : false,
                  "sendCommunity" : true,
                  "vrf" : "default"
                },
                "2.1.2.2/32" : {
                  "name" : "2.1.2.2/32",
                  "additionalPathsReceive" : true,
                  "additionalPathsSelectAll" : true,
                  "additionalPathsSend" : true,
                  "address" : "2.1.2.2",
                  "advertiseExternal" : false,
                  "advertiseInactive" : true,
                  "allowLocalAsIn" : false,
                  "allowRemoteAsOut" : false,
                  "clusterId" : 33620226,
                  "defaultMetric" : 0,
                  "dynamic" : false,
                  "ebgpMultihop" : false,
                  "enforceFirstAs" : false,
                  "exportPolicy" : "~BGP_PEER_EXPORT_POLICY:default:2.1.2.2~",
                  "group" : "as2",
                  "localAs" : 2,
                  "localIp" : "2.1.1.2",
                  "remoteAs" : 2,
                  "remotePrefix" : "2.1.2.2/32",
                  "routeReflectorClient" : false,
                  "sendCommunity" : true,
                  "vrf" : "default"
                },
                "10.23.21.3/32" : {
                  "name" : "10.23.21.3/32",
                  "additionalPathsReceive" : true,
                  "additionalPathsSelectAll" : true,
                  "additionalPathsSend" : true,
                  "address" : "10.23.21.3",
                  "advertiseExternal" : false,
                  "advertiseInactive" : true,
                  "allowLocalAsIn" : false,
                  "allowRemoteAsOut" : false,
                  "clusterId" : 33620226,
                  "defaultMetric" : 0,
                  "dynamic" : false,
                  "ebgpMultihop" : false,
                  "enforceFirstAs" : false,
                  "exportPolicy" : "~BGP_PEER_EXPORT_POLICY:default:10.23.21.3~",
                  "exportPolicySources" : [
                    "as2_to_as3"
                  ],
                  "group" : "as3",
                  "importPolicy" : "as3_to_as2",
                  "importPolicySources" : [
                    "as3_to_as2"
                  ],
                  "localAs" : 2,
                  "localIp" : "10.23.21.2",
                  "remoteAs" : 3,
                  "remotePrefix" : "10.23.21.3/32",
                  "routeReflectorClient" : false,
                  "sendCommunity" : true,
                  "vrf" : "default"
                }
              },
              "routerId" : "2.1.1.2",
              "tieBreaker" : "ARRIVAL_ORDER"
            },
            "interfaces" : [
              "Ethernet0/0",
              "GigabitEthernet0/0",
              "GigabitEthernet1/0",
              "GigabitEthernet2/0",
              "Loopback0"
            ],
            "ospfProcess" : {
              "areas" : {
                "1" : {
                  "name" : 1,
                  "interfaces" : [
                    "GigabitEthernet1/0",
                    "GigabitEthernet2/0",
                    "Loopback0"
                  ]
                }
              },
              "exportPolicy" : "~OSPF_EXPORT_POLICY:default~",
              "processId" : "1",
              "referenceBandwidth" : 1.0E8,
              "routerId" : "2.1.1.2"
            }
          }
        }
      },
      "as2core1" : {
        "configurationFormat" : "CISCO_IOS",
        "name" : "as2core1",
        "defaultCrossZoneAction" : "ACCEPT",
        "defaultInboundAction" : "ACCEPT",
        "deviceType" : "ROUTER",
        "domainName" : "lab.local",
        "interfaces" : {
          "Ethernet0/0" : {
            "name" : "Ethernet0/0",
            "accessVlan" : 0,
            "active" : false,
            "autostate" : true,
            "bandwidth" : 1.0E7,
            "declaredNames" : [
              "Ethernet0/0"
            ],
            "isisL1InterfaceMode" : "unset",
            "isisL2InterfaceMode" : "unset",
            "mtu" : 1500,
            "nativeVlan" : 1,
            "ospfDeadInterval" : 0,
            "ospfEnabled" : false,
            "ospfHelloMultiplier" : 0,
            "ospfPassive" : false,
            "ospfPointToPoint" : false,
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "PHYSICAL",
            "vrf" : "default"
          },
          "GigabitEthernet0/0" : {
            "name" : "GigabitEthernet0/0",
            "accessVlan" : 0,
            "active" : true,
            "allPrefixes" : [
              "2.12.11.2/24"
            ],
            "autostate" : true,
            "bandwidth" : 1.0E9,
            "declaredNames" : [
              "GigabitEthernet0/0"
            ],
            "isisL1InterfaceMode" : "unset",
            "isisL2InterfaceMode" : "unset",
            "mtu" : 1500,
            "nativeVlan" : 1,
            "ospfArea" : 1,
            "ospfCost" : 1,
            "ospfDeadInterval" : 0,
            "ospfEnabled" : true,
            "ospfHelloMultiplier" : 0,
            "ospfPassive" : false,
            "ospfPointToPoint" : false,
            "prefix" : "2.12.11.2/24",
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "PHYSICAL",
            "vrf" : "default"
          },
          "GigabitEthernet1/0" : {
            "name" : "GigabitEthernet1/0",
            "accessVlan" : 0,
            "active" : true,
            "allPrefixes" : [
              "2.12.21.2/24"
            ],
            "autostate" : true,
            "bandwidth" : 1.0E9,
            "declaredNames" : [
              "GigabitEthernet1/0"
            ],
            "isisL1InterfaceMode" : "unset",
            "isisL2InterfaceMode" : "unset",
            "mtu" : 1500,
            "nativeVlan" : 1,
            "ospfArea" : 1,
            "ospfCost" : 1,
            "ospfDeadInterval" : 0,
            "ospfEnabled" : true,
            "ospfHelloMultiplier" : 0,
            "ospfPassive" : false,
            "ospfPointToPoint" : false,
            "prefix" : "2.12.21.2/24",
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "PHYSICAL",
            "vrf" : "default"
          },
          "GigabitEthernet2/0" : {
            "name" : "GigabitEthernet2/0",
            "accessVlan" : 0,
            "active" : true,
            "allPrefixes" : [
              "2.23.11.2/24"
            ],
            "autostate" : true,
            "bandwidth" : 1.0E9,
            "declaredNames" : [
              "GigabitEthernet2/0"
            ],
            "incomingFilter" : "blocktelnet",
            "isisL1InterfaceMode" : "unset",
            "isisL2InterfaceMode" : "unset",
            "mtu" : 1500,
            "nativeVlan" : 1,
            "ospfArea" : 1,
            "ospfCost" : 1,
            "ospfDeadInterval" : 0,
            "ospfEnabled" : true,
            "ospfHelloMultiplier" : 0,
            "ospfPassive" : false,
            "ospfPointToPoint" : false,
            "prefix" : "2.23.11.2/24",
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "PHYSICAL",
            "vrf" : "default"
          },
          "GigabitEthernet3/0" : {
            "name" : "GigabitEthernet3/0",
            "accessVlan" : 0,
            "active" : true,
            "allPrefixes" : [
              "2.23.12.2/24"
            ],
            "autostate" : true,
            "bandwidth" : 1.0E9,
            "declaredNames" : [
              "GigabitEthernet3/0"
            ],
            "incomingFilter" : "blocktelnet",
            "isisL1InterfaceMode" : "unset",
            "isisL2InterfaceMode" : "unset",
            "mtu" : 1500,
            "nativeVlan" : 1,
            "ospfArea" : 1,
            "ospfCost" : 1,
            "ospfDeadInterval" : 0,
            "ospfEnabled" : true,
            "ospfHelloMultiplier" : 0,
            "ospfPassive" : false,
            "ospfPointToPoint" : false,
            "prefix" : "2.23.12.2/24",
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "PHYSICAL",
            "vrf" : "default"
          },
          "Loopback0" : {
            "name" : "Loopback0",
            "accessVlan" : 0,
            "active" : true,
            "allPrefixes" : [
              "2.1.2.1/32"
            ],
            "autostate" : true,
            "bandwidth" : 1.0E12,
            "declaredNames" : [
              "Loopback0"
            ],
            "isisL1InterfaceMode" : "unset",
            "isisL2InterfaceMode" : "unset",
            "mtu" : 1500,
            "nativeVlan" : 1,
            "ospfArea" : 1,
            "ospfCost" : 1,
            "ospfDeadInterval" : 0,
            "ospfEnabled" : true,
            "ospfHelloMultiplier" : 0,
            "ospfPassive" : false,
            "ospfPointToPoint" : false,
            "prefix" : "2.1.2.1/32",
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "LOOPBACK",
            "vrf" : "default"
          }
        },
        "ipAccessLists" : {
          "blocktelnet" : {
            "name" : "blocktelnet",
            "lines" : [
              {
                "action" : "REJECT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "0.0.0.0/0"
                    },
                    "dstPorts" : [
                      "23-23"
                    ],
                    "ipProtocols" : [
                      "TCP"
                    ],
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "0.0.0.0/0"
                    }
                  }
                },
                "name" : "deny   tcp any any eq telnet"
              },
              {
                "action" : "ACCEPT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "0.0.0.0/0"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "0.0.0.0/0"
                    }
                  }
                },
                "name" : "permit ip any any"
              }
            ]
          }
        },
        "loggingServers" : [
          "1.1.1.1",
          "2.1.2.2"
        ],
        "routingPolicies" : {
          "~BGP_COMMON_EXPORT_POLICY:default~" : {
            "name" : "~BGP_COMMON_EXPORT_POLICY:default~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.Disjunction",
                  "disjuncts" : [
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                      "protocol" : "bgp"
                    },
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                      "protocol" : "ibgp"
                    }
                  ]
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ReturnTrue"
                  }
                ]
              },
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                "type" : "ReturnFalse"
              }
            ]
          },
          "~BGP_PEER_EXPORT_POLICY:default:2.1.1.1~" : {
            "name" : "~BGP_PEER_EXPORT_POLICY:default:2.1.1.1~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "peer-export policy main conditional: exitAccept if true / exitReject if false",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitReject"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                  "calledPolicyName" : "~BGP_COMMON_EXPORT_POLICY:default~"
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitAccept"
                  }
                ]
              }
            ]
          },
          "~BGP_PEER_EXPORT_POLICY:default:2.1.1.2~" : {
            "name" : "~BGP_PEER_EXPORT_POLICY:default:2.1.1.2~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "peer-export policy main conditional: exitAccept if true / exitReject if false",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitReject"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                  "calledPolicyName" : "~BGP_COMMON_EXPORT_POLICY:default~"
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitAccept"
                  }
                ]
              }
            ]
          },
          "~BGP_PEER_EXPORT_POLICY:default:2.1.3.1~" : {
            "name" : "~BGP_PEER_EXPORT_POLICY:default:2.1.3.1~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "peer-export policy main conditional: exitAccept if true / exitReject if false",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitReject"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                  "calledPolicyName" : "~BGP_COMMON_EXPORT_POLICY:default~"
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitAccept"
                  }
                ]
              }
            ]
          },
          "~BGP_PEER_EXPORT_POLICY:default:2.1.3.2~" : {
            "name" : "~BGP_PEER_EXPORT_POLICY:default:2.1.3.2~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "peer-export policy main conditional: exitAccept if true / exitReject if false",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitReject"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                  "calledPolicyName" : "~BGP_COMMON_EXPORT_POLICY:default~"
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitAccept"
                  }
                ]
              }
            ]
          },
          "~OSPF_EXPORT_POLICY:default~" : {
            "name" : "~OSPF_EXPORT_POLICY:default~"
          }
        },
        "vendorFamily" : {
          "cisco" : {
            "aaa" : {
              "newModel" : false
            },
            "hostname" : "as2core1",
            "lines" : {
              "aux0" : {
                "name" : "aux0",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0
              },
              "con0" : {
                "name" : "con0",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0
              },
              "vty0" : {
                "name" : "vty0",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0
              },
              "vty1" : {
                "name" : "vty1",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0
              },
              "vty2" : {
                "name" : "vty2",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0
              },
              "vty3" : {
                "name" : "vty3",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0
              },
              "vty4" : {
                "name" : "vty4",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0
              }
            },
            "logging" : {
              "hosts" : {
                "1.1.1.1" : {
                  "name" : "1.1.1.1"
                },
                "2.1.2.2" : {
                  "name" : "2.1.2.2"
                }
              },
              "on" : true
            },
            "services" : {
              "timestamps" : {
                "enabled" : true,
                "subservices" : {
                  "debug" : {
                    "enabled" : true,
                    "subservices" : {
                      "datetime" : {
                        "enabled" : true,
                        "subservices" : {
                          "msec" : {
                            "enabled" : true
                          }
                        }
                      }
                    }
                  },
                  "log" : {
                    "enabled" : true,
                    "subservices" : {
                      "datetime" : {
                        "enabled" : true,
                        "subservices" : {
                          "msec" : {
                            "enabled" : true
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "vrfs" : {
          "default" : {
            "name" : "default",
            "bgpProcess" : {
              "multipathEbgp" : true,
              "multipathEquivalentAsPathMatchMode" : "EXACT_PATH",
              "multipathIbgp" : true,
              "neighbors" : {
                "2.1.1.1/32" : {
                  "name" : "2.1.1.1/32",
                  "additionalPathsReceive" : true,
                  "additionalPathsSelectAll" : true,
                  "additionalPathsSend" : true,
                  "address" : "2.1.1.1",
                  "advertiseExternal" : false,
                  "advertiseInactive" : true,
                  "allowLocalAsIn" : false,
                  "allowRemoteAsOut" : false,
                  "clusterId" : 33620481,
                  "defaultMetric" : 0,
                  "dynamic" : false,
                  "ebgpMultihop" : false,
                  "enforceFirstAs" : false,
                  "exportPolicy" : "~BGP_PEER_EXPORT_POLICY:default:2.1.1.1~",
                  "group" : "as2",
                  "localAs" : 2,
                  "localIp" : "2.1.2.1",
                  "remoteAs" : 2,
                  "remotePrefix" : "2.1.1.1/32",
                  "routeReflectorClient" : true,
                  "sendCommunity" : true,
                  "vrf" : "default"
                },
                "2.1.1.2/32" : {
                  "name" : "2.1.1.2/32",
                  "additionalPathsReceive" : true,
                  "additionalPathsSelectAll" : true,
                  "additionalPathsSend" : true,
                  "address" : "2.1.1.2",
                  "advertiseExternal" : false,
                  "advertiseInactive" : true,
                  "allowLocalAsIn" : false,
                  "allowRemoteAsOut" : false,
                  "clusterId" : 33620481,
                  "defaultMetric" : 0,
                  "dynamic" : false,
                  "ebgpMultihop" : false,
                  "enforceFirstAs" : false,
                  "exportPolicy" : "~BGP_PEER_EXPORT_POLICY:default:2.1.1.2~",
                  "group" : "as2",
                  "localAs" : 2,
                  "localIp" : "2.1.2.1",
                  "remoteAs" : 2,
                  "remotePrefix" : "2.1.1.2/32",
                  "routeReflectorClient" : true,
                  "sendCommunity" : true,
                  "vrf" : "default"
                },
                "2.1.3.1/32" : {
                  "name" : "2.1.3.1/32",
                  "additionalPathsReceive" : true,
                  "additionalPathsSelectAll" : true,
                  "additionalPathsSend" : true,
                  "address" : "2.1.3.1",
                  "advertiseExternal" : false,
                  "advertiseInactive" : true,
                  "allowLocalAsIn" : false,
                  "allowRemoteAsOut" : false,
                  "clusterId" : 33620481,
                  "defaultMetric" : 0,
                  "dynamic" : false,
                  "ebgpMultihop" : false,
                  "enforceFirstAs" : false,
                  "exportPolicy" : "~BGP_PEER_EXPORT_POLICY:default:2.1.3.1~",
                  "group" : "as2",
                  "localAs" : 2,
                  "localIp" : "2.1.2.1",
                  "remoteAs" : 2,
                  "remotePrefix" : "2.1.3.1/32",
                  "routeReflectorClient" : true,
                  "sendCommunity" : true,
                  "vrf" : "default"
                },
                "2.1.3.2/32" : {
                  "name" : "2.1.3.2/32",
                  "additionalPathsReceive" : true,
                  "additionalPathsSelectAll" : true,
                  "additionalPathsSend" : true,
                  "address" : "2.1.3.2",
                  "advertiseExternal" : false,
                  "advertiseInactive" : true,
                  "allowLocalAsIn" : false,
                  "allowRemoteAsOut" : false,
                  "clusterId" : 33620481,
                  "defaultMetric" : 0,
                  "dynamic" : false,
                  "ebgpMultihop" : false,
                  "enforceFirstAs" : false,
                  "exportPolicy" : "~BGP_PEER_EXPORT_POLICY:default:2.1.3.2~",
                  "group" : "as2",
                  "localAs" : 2,
                  "localIp" : "2.1.2.1",
                  "remoteAs" : 2,
                  "remotePrefix" : "2.1.3.2/32",
                  "routeReflectorClient" : true,
                  "sendCommunity" : true,
                  "vrf" : "default"
                }
              },
              "routerId" : "2.1.2.1",
              "tieBreaker" : "ARRIVAL_ORDER"
            },
            "interfaces" : [
              "Ethernet0/0",
              "GigabitEthernet0/0",
              "GigabitEthernet1/0",
              "GigabitEthernet2/0",
              "GigabitEthernet3/0",
              "Loopback0"
            ],
            "ospfProcess" : {
              "areas" : {
                "1" : {
                  "name" : 1,
                  "interfaces" : [
                    "GigabitEthernet0/0",
                    "GigabitEthernet1/0",
                    "GigabitEthernet2/0",
                    "GigabitEthernet3/0",
                    "Loopback0"
                  ]
                }
              },
              "exportPolicy" : "~OSPF_EXPORT_POLICY:default~",
              "processId" : "1",
              "referenceBandwidth" : 1.0E8,
              "routerId" : "2.1.2.1"
            }
          }
        }
      },
      "as2core2" : {
        "configurationFormat" : "CISCO_IOS",
        "name" : "as2core2",
        "defaultCrossZoneAction" : "ACCEPT",
        "defaultInboundAction" : "ACCEPT",
        "deviceType" : "ROUTER",
        "domainName" : "lab.local",
        "interfaces" : {
          "Ethernet0/0" : {
            "name" : "Ethernet0/0",
            "accessVlan" : 0,
            "active" : false,
            "autostate" : true,
            "bandwidth" : 1.0E7,
            "declaredNames" : [
              "Ethernet0/0"
            ],
            "isisL1InterfaceMode" : "unset",
            "isisL2InterfaceMode" : "unset",
            "mtu" : 1500,
            "nativeVlan" : 1,
            "ospfDeadInterval" : 0,
            "ospfEnabled" : false,
            "ospfHelloMultiplier" : 0,
            "ospfPassive" : false,
            "ospfPointToPoint" : false,
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "PHYSICAL",
            "vrf" : "default"
          },
          "GigabitEthernet0/0" : {
            "name" : "GigabitEthernet0/0",
            "accessVlan" : 0,
            "active" : true,
            "allPrefixes" : [
              "2.12.22.2/24"
            ],
            "autostate" : true,
            "bandwidth" : 1.0E9,
            "declaredNames" : [
              "GigabitEthernet0/0"
            ],
            "isisL1InterfaceMode" : "unset",
            "isisL2InterfaceMode" : "unset",
            "mtu" : 1800,
            "nativeVlan" : 1,
            "ospfArea" : 1,
            "ospfCost" : 1,
            "ospfDeadInterval" : 0,
            "ospfEnabled" : true,
            "ospfHelloMultiplier" : 0,
            "ospfPassive" : false,
            "ospfPointToPoint" : false,
            "prefix" : "2.12.22.2/24",
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "PHYSICAL",
            "vrf" : "default"
          },
          "GigabitEthernet1/0" : {
            "name" : "GigabitEthernet1/0",
            "accessVlan" : 0,
            "active" : true,
            "allPrefixes" : [
              "2.12.12.2/24"
            ],
            "autostate" : true,
            "bandwidth" : 1.0E9,
            "declaredNames" : [
              "GigabitEthernet1/0"
            ],
            "isisL1InterfaceMode" : "unset",
            "isisL2InterfaceMode" : "unset",
            "mtu" : 1600,
            "nativeVlan" : 1,
            "ospfArea" : 1,
            "ospfCost" : 1,
            "ospfDeadInterval" : 0,
            "ospfEnabled" : true,
            "ospfHelloMultiplier" : 0,
            "ospfPassive" : false,
            "ospfPointToPoint" : false,
            "prefix" : "2.12.12.2/24",
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "PHYSICAL",
            "vrf" : "default"
          },
          "GigabitEthernet2/0" : {
            "name" : "GigabitEthernet2/0",
            "accessVlan" : 0,
            "active" : true,
            "allPrefixes" : [
              "2.23.22.2/24"
            ],
            "autostate" : true,
            "bandwidth" : 1.0E9,
            "declaredNames" : [
              "GigabitEthernet2/0"
            ],
            "isisL1InterfaceMode" : "unset",
            "isisL2InterfaceMode" : "unset",
            "mtu" : 1700,
            "nativeVlan" : 1,
            "ospfArea" : 1,
            "ospfCost" : 1,
            "ospfDeadInterval" : 0,
            "ospfEnabled" : true,
            "ospfHelloMultiplier" : 0,
            "ospfPassive" : false,
            "ospfPointToPoint" : false,
            "prefix" : "2.23.22.2/24",
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "PHYSICAL",
            "vrf" : "default"
          },
          "GigabitEthernet3/0" : {
            "name" : "GigabitEthernet3/0",
            "accessVlan" : 0,
            "active" : true,
            "allPrefixes" : [
              "2.23.21.2/24"
            ],
            "autostate" : true,
            "bandwidth" : 1.0E9,
            "declaredNames" : [
              "GigabitEthernet3/0"
            ],
            "isisL1InterfaceMode" : "unset",
            "isisL2InterfaceMode" : "unset",
            "mtu" : 1500,
            "nativeVlan" : 1,
            "ospfArea" : 1,
            "ospfCost" : 1,
            "ospfDeadInterval" : 0,
            "ospfEnabled" : true,
            "ospfHelloMultiplier" : 0,
            "ospfPassive" : false,
            "ospfPointToPoint" : false,
            "prefix" : "2.23.21.2/24",
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "PHYSICAL",
            "vrf" : "default"
          },
          "Loopback0" : {
            "name" : "Loopback0",
            "accessVlan" : 0,
            "active" : true,
            "allPrefixes" : [
              "2.1.2.2/32"
            ],
            "autostate" : true,
            "bandwidth" : 1.0E12,
            "declaredNames" : [
              "Loopback0"
            ],
            "isisL1InterfaceMode" : "unset",
            "isisL2InterfaceMode" : "unset",
            "mtu" : 1500,
            "nativeVlan" : 1,
            "ospfArea" : 1,
            "ospfCost" : 1,
            "ospfDeadInterval" : 0,
            "ospfEnabled" : true,
            "ospfHelloMultiplier" : 0,
            "ospfPassive" : false,
            "ospfPointToPoint" : false,
            "prefix" : "2.1.2.2/32",
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "LOOPBACK",
            "vrf" : "default"
          }
        },
        "loggingServers" : [
          "1.1.1.1",
          "2.2.2.2"
        ],
        "routingPolicies" : {
          "~BGP_COMMON_EXPORT_POLICY:default~" : {
            "name" : "~BGP_COMMON_EXPORT_POLICY:default~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.Disjunction",
                  "disjuncts" : [
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                      "protocol" : "bgp"
                    },
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                      "protocol" : "ibgp"
                    }
                  ]
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ReturnTrue"
                  }
                ]
              },
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                "type" : "ReturnFalse"
              }
            ]
          },
          "~BGP_PEER_EXPORT_POLICY:default:2.1.1.1~" : {
            "name" : "~BGP_PEER_EXPORT_POLICY:default:2.1.1.1~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "peer-export policy main conditional: exitAccept if true / exitReject if false",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitReject"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                  "calledPolicyName" : "~BGP_COMMON_EXPORT_POLICY:default~"
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitAccept"
                  }
                ]
              }
            ]
          },
          "~BGP_PEER_EXPORT_POLICY:default:2.1.1.2~" : {
            "name" : "~BGP_PEER_EXPORT_POLICY:default:2.1.1.2~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "peer-export policy main conditional: exitAccept if true / exitReject if false",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitReject"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                  "calledPolicyName" : "~BGP_COMMON_EXPORT_POLICY:default~"
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitAccept"
                  }
                ]
              }
            ]
          },
          "~BGP_PEER_EXPORT_POLICY:default:2.1.3.1~" : {
            "name" : "~BGP_PEER_EXPORT_POLICY:default:2.1.3.1~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "peer-export policy main conditional: exitAccept if true / exitReject if false",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitReject"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                  "calledPolicyName" : "~BGP_COMMON_EXPORT_POLICY:default~"
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitAccept"
                  }
                ]
              }
            ]
          },
          "~BGP_PEER_EXPORT_POLICY:default:2.1.3.2~" : {
            "name" : "~BGP_PEER_EXPORT_POLICY:default:2.1.3.2~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "peer-export policy main conditional: exitAccept if true / exitReject if false",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitReject"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                  "calledPolicyName" : "~BGP_COMMON_EXPORT_POLICY:default~"
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitAccept"
                  }
                ]
              }
            ]
          },
          "~OSPF_EXPORT_POLICY:default~" : {
            "name" : "~OSPF_EXPORT_POLICY:default~"
          }
        },
        "vendorFamily" : {
          "cisco" : {
            "aaa" : {
              "newModel" : false
            },
            "hostname" : "as2core2",
            "lines" : {
              "aux0" : {
                "name" : "aux0",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0
              },
              "con0" : {
                "name" : "con0",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0
              },
              "vty0" : {
                "name" : "vty0",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0
              },
              "vty1" : {
                "name" : "vty1",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0
              },
              "vty2" : {
                "name" : "vty2",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0
              },
              "vty3" : {
                "name" : "vty3",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0
              },
              "vty4" : {
                "name" : "vty4",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0
              }
            },
            "logging" : {
              "hosts" : {
                "1.1.1.1" : {
                  "name" : "1.1.1.1"
                },
                "2.2.2.2" : {
                  "name" : "2.2.2.2"
                }
              },
              "on" : true
            },
            "services" : {
              "timestamps" : {
                "enabled" : true,
                "subservices" : {
                  "debug" : {
                    "enabled" : true,
                    "subservices" : {
                      "datetime" : {
                        "enabled" : true,
                        "subservices" : {
                          "msec" : {
                            "enabled" : true
                          }
                        }
                      }
                    }
                  },
                  "log" : {
                    "enabled" : true,
                    "subservices" : {
                      "datetime" : {
                        "enabled" : true,
                        "subservices" : {
                          "msec" : {
                            "enabled" : true
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "vrfs" : {
          "default" : {
            "name" : "default",
            "bgpProcess" : {
              "multipathEbgp" : true,
              "multipathEquivalentAsPathMatchMode" : "EXACT_PATH",
              "multipathIbgp" : true,
              "neighbors" : {
                "2.1.1.1/32" : {
                  "name" : "2.1.1.1/32",
                  "additionalPathsReceive" : true,
                  "additionalPathsSelectAll" : true,
                  "additionalPathsSend" : true,
                  "address" : "2.1.1.1",
                  "advertiseExternal" : false,
                  "advertiseInactive" : true,
                  "allowLocalAsIn" : false,
                  "allowRemoteAsOut" : false,
                  "clusterId" : 33620482,
                  "defaultMetric" : 0,
                  "dynamic" : false,
                  "ebgpMultihop" : false,
                  "enforceFirstAs" : false,
                  "exportPolicy" : "~BGP_PEER_EXPORT_POLICY:default:2.1.1.1~",
                  "group" : "as2",
                  "localAs" : 2,
                  "localIp" : "2.1.2.2",
                  "remoteAs" : 2,
                  "remotePrefix" : "2.1.1.1/32",
                  "routeReflectorClient" : true,
                  "sendCommunity" : true,
                  "vrf" : "default"
                },
                "2.1.1.2/32" : {
                  "name" : "2.1.1.2/32",
                  "additionalPathsReceive" : true,
                  "additionalPathsSelectAll" : true,
                  "additionalPathsSend" : true,
                  "address" : "2.1.1.2",
                  "advertiseExternal" : false,
                  "advertiseInactive" : true,
                  "allowLocalAsIn" : false,
                  "allowRemoteAsOut" : false,
                  "clusterId" : 33620482,
                  "defaultMetric" : 0,
                  "dynamic" : false,
                  "ebgpMultihop" : false,
                  "enforceFirstAs" : false,
                  "exportPolicy" : "~BGP_PEER_EXPORT_POLICY:default:2.1.1.2~",
                  "group" : "as2",
                  "localAs" : 2,
                  "localIp" : "2.1.2.2",
                  "remoteAs" : 2,
                  "remotePrefix" : "2.1.1.2/32",
                  "routeReflectorClient" : true,
                  "sendCommunity" : true,
                  "vrf" : "default"
                },
                "2.1.3.1/32" : {
                  "name" : "2.1.3.1/32",
                  "additionalPathsReceive" : true,
                  "additionalPathsSelectAll" : true,
                  "additionalPathsSend" : true,
                  "address" : "2.1.3.1",
                  "advertiseExternal" : false,
                  "advertiseInactive" : true,
                  "allowLocalAsIn" : false,
                  "allowRemoteAsOut" : false,
                  "clusterId" : 33620482,
                  "defaultMetric" : 0,
                  "dynamic" : false,
                  "ebgpMultihop" : false,
                  "enforceFirstAs" : false,
                  "exportPolicy" : "~BGP_PEER_EXPORT_POLICY:default:2.1.3.1~",
                  "group" : "as2",
                  "localAs" : 2,
                  "localIp" : "2.1.2.2",
                  "remoteAs" : 2,
                  "remotePrefix" : "2.1.3.1/32",
                  "routeReflectorClient" : true,
                  "sendCommunity" : true,
                  "vrf" : "default"
                },
                "2.1.3.2/32" : {
                  "name" : "2.1.3.2/32",
                  "additionalPathsReceive" : true,
                  "additionalPathsSelectAll" : true,
                  "additionalPathsSend" : true,
                  "address" : "2.1.3.2",
                  "advertiseExternal" : false,
                  "advertiseInactive" : true,
                  "allowLocalAsIn" : false,
                  "allowRemoteAsOut" : false,
                  "clusterId" : 33620482,
                  "defaultMetric" : 0,
                  "dynamic" : false,
                  "ebgpMultihop" : false,
                  "enforceFirstAs" : false,
                  "exportPolicy" : "~BGP_PEER_EXPORT_POLICY:default:2.1.3.2~",
                  "group" : "as2",
                  "localAs" : 2,
                  "localIp" : "2.1.2.2",
                  "remoteAs" : 2,
                  "remotePrefix" : "2.1.3.2/32",
                  "routeReflectorClient" : true,
                  "sendCommunity" : true,
                  "vrf" : "default"
                }
              },
              "routerId" : "2.1.2.2",
              "tieBreaker" : "ARRIVAL_ORDER"
            },
            "interfaces" : [
              "Ethernet0/0",
              "GigabitEthernet0/0",
              "GigabitEthernet1/0",
              "GigabitEthernet2/0",
              "GigabitEthernet3/0",
              "Loopback0"
            ],
            "ospfProcess" : {
              "areas" : {
                "1" : {
                  "name" : 1,
                  "interfaces" : [
                    "GigabitEthernet0/0",
                    "GigabitEthernet1/0",
                    "GigabitEthernet2/0",
                    "GigabitEthernet3/0",
                    "Loopback0"
                  ]
                }
              },
              "exportPolicy" : "~OSPF_EXPORT_POLICY:default~",
              "processId" : "1",
              "referenceBandwidth" : 1.0E8,
              "routerId" : "2.1.2.2"
            }
          }
        }
      },
      "as2dept1" : {
        "configurationFormat" : "CISCO_IOS",
        "name" : "as2dept1",
        "communityLists" : {
          "as2_community" : {
            "lines" : [
              {
                "action" : "ACCEPT",
                "regex" : "(,|\\{|\\}|^|$| )2:"
              }
            ],
            "name" : "as2_community",
            "invertMatch" : false
          }
        },
        "defaultCrossZoneAction" : "ACCEPT",
        "defaultInboundAction" : "ACCEPT",
        "deviceType" : "ROUTER",
        "domainName" : "lab.local",
        "interfaces" : {
          "Ethernet0/0" : {
            "name" : "Ethernet0/0",
            "accessVlan" : 0,
            "active" : false,
            "autostate" : true,
            "bandwidth" : 1.0E7,
            "declaredNames" : [
              "Ethernet0/0"
            ],
            "isisL1InterfaceMode" : "unset",
            "isisL2InterfaceMode" : "unset",
            "mtu" : 1500,
            "nativeVlan" : 1,
            "ospfDeadInterval" : 0,
            "ospfEnabled" : false,
            "ospfHelloMultiplier" : 0,
            "ospfPassive" : false,
            "ospfPointToPoint" : false,
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "PHYSICAL",
            "vrf" : "default"
          },
          "GigabitEthernet0/0" : {
            "name" : "GigabitEthernet0/0",
            "accessVlan" : 0,
            "active" : true,
            "allPrefixes" : [
              "2.34.101.4/24"
            ],
            "autostate" : true,
            "bandwidth" : 1.0E9,
            "declaredNames" : [
              "GigabitEthernet0/0"
            ],
            "isisL1InterfaceMode" : "unset",
            "isisL2InterfaceMode" : "unset",
            "mtu" : 1500,
            "nativeVlan" : 1,
            "ospfDeadInterval" : 0,
            "ospfEnabled" : false,
            "ospfHelloMultiplier" : 0,
            "ospfPassive" : false,
            "ospfPointToPoint" : false,
            "prefix" : "2.34.101.4/24",
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "PHYSICAL",
            "vrf" : "default"
          },
          "GigabitEthernet1/0" : {
            "name" : "GigabitEthernet1/0",
            "accessVlan" : 0,
            "active" : true,
            "allPrefixes" : [
              "2.34.201.4/24"
            ],
            "autostate" : true,
            "bandwidth" : 1.0E9,
            "declaredNames" : [
              "GigabitEthernet1/0"
            ],
            "isisL1InterfaceMode" : "unset",
            "isisL2InterfaceMode" : "unset",
            "mtu" : 1500,
            "nativeVlan" : 1,
            "ospfDeadInterval" : 0,
            "ospfEnabled" : false,
            "ospfHelloMultiplier" : 0,
            "ospfPassive" : false,
            "ospfPointToPoint" : false,
            "prefix" : "2.34.201.4/24",
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "PHYSICAL",
            "vrf" : "default"
          },
          "GigabitEthernet2/0" : {
            "name" : "GigabitEthernet2/0",
            "accessVlan" : 0,
            "active" : true,
            "allPrefixes" : [
              "2.128.0.1/24"
            ],
            "autostate" : true,
            "bandwidth" : 1.0E9,
            "declaredNames" : [
              "GigabitEthernet2/0"
            ],
            "incomingFilter" : "RESTRICT_HOST_TRAFFIC_IN",
            "isisL1InterfaceMode" : "unset",
            "isisL2InterfaceMode" : "unset",
            "mtu" : 1500,
            "nativeVlan" : 1,
            "ospfDeadInterval" : 0,
            "ospfEnabled" : false,
            "ospfHelloMultiplier" : 0,
            "ospfPassive" : false,
            "ospfPointToPoint" : false,
            "prefix" : "2.128.0.1/24",
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "PHYSICAL",
            "vrf" : "default"
          },
          "GigabitEthernet3/0" : {
            "name" : "GigabitEthernet3/0",
            "accessVlan" : 0,
            "active" : true,
            "allPrefixes" : [
              "2.128.1.1/24"
            ],
            "autostate" : true,
            "bandwidth" : 1.0E9,
            "declaredNames" : [
              "GigabitEthernet3/0"
            ],
            "incomingFilter" : "RESTRICT_HOST_TRAFFIC_IN",
            "isisL1InterfaceMode" : "unset",
            "isisL2InterfaceMode" : "unset",
            "mtu" : 1500,
            "nativeVlan" : 1,
            "ospfDeadInterval" : 0,
            "ospfEnabled" : false,
            "ospfHelloMultiplier" : 0,
            "ospfPassive" : false,
            "ospfPointToPoint" : false,
            "prefix" : "2.128.1.1/24",
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "PHYSICAL",
            "vrf" : "default"
          },
          "Loopback0" : {
            "name" : "Loopback0",
            "accessVlan" : 0,
            "active" : true,
            "allPrefixes" : [
              "2.1.1.2/32"
            ],
            "autostate" : true,
            "bandwidth" : 1.0E12,
            "declaredNames" : [
              "Loopback0"
            ],
            "isisL1InterfaceMode" : "unset",
            "isisL2InterfaceMode" : "unset",
            "mtu" : 1500,
            "nativeVlan" : 1,
            "ospfDeadInterval" : 0,
            "ospfEnabled" : false,
            "ospfHelloMultiplier" : 0,
            "ospfPassive" : false,
            "ospfPointToPoint" : false,
            "prefix" : "2.1.1.2/32",
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "LOOPBACK",
            "vrf" : "default"
          }
        },
        "ipAccessLists" : {
          "102" : {
            "name" : "102",
            "lines" : [
              {
                "action" : "ACCEPT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "255.255.255.0"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "2.128.0.0"
                    }
                  }
                },
                "name" : "permit ip host 2.128.0.0 host 255.255.255.0"
              },
              {
                "action" : "ACCEPT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "255.255.255.0"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "2.128.1.0"
                    }
                  }
                },
                "name" : "permit ip host 2.128.1.0 host 255.255.255.0"
              }
            ]
          },
          "105" : {
            "name" : "105",
            "lines" : [
              {
                "action" : "ACCEPT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "255.255.255.0"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "1.0.1.0"
                    }
                  }
                },
                "name" : "permit ip host 1.0.1.0 host 255.255.255.0"
              },
              {
                "action" : "ACCEPT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "255.255.255.0"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "1.0.2.0"
                    }
                  }
                },
                "name" : "permit ip host 1.0.2.0 host 255.255.255.0"
              },
              {
                "action" : "ACCEPT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "255.255.255.0"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "3.0.1.0"
                    }
                  }
                },
                "name" : "permit ip host 3.0.1.0 host 255.255.255.0"
              },
              {
                "action" : "ACCEPT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "255.255.255.0"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "3.0.2.0"
                    }
                  }
                },
                "name" : "permit ip host 3.0.2.0 host 255.255.255.0"
              }
            ]
          },
          "RESTRICT_HOST_TRAFFIC_IN" : {
            "name" : "RESTRICT_HOST_TRAFFIC_IN",
            "lines" : [
              {
                "action" : "ACCEPT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "0.0.0.0/0"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "2.128.0.0/16"
                    }
                  }
                },
                "name" : "permit ip 2.128.0.0 0.0.255.255 any"
              },
              {
                "action" : "REJECT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "0.0.0.0/0"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "0.0.0.0/0"
                    }
                  }
                },
                "name" : "deny   ip any any"
              },
              {
                "action" : "ACCEPT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "0.0.0.0/0"
                    },
                    "ipProtocols" : [
                      "ICMP"
                    ],
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "0.0.0.0/0"
                    }
                  }
                },
                "name" : "permit icmp any any"
              }
            ]
          },
          "RESTRICT_HOST_TRAFFIC_OUT" : {
            "name" : "RESTRICT_HOST_TRAFFIC_OUT",
            "lines" : [
              {
                "action" : "ACCEPT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "2.128.0.0/16"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "0.0.0.0/0"
                    }
                  }
                },
                "name" : "permit ip any 2.128.0.0 0.0.255.255"
              },
              {
                "action" : "REJECT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "2.128.0.0/16"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "1.128.0.0/16"
                    }
                  }
                },
                "name" : "deny   ip 1.128.0.0 0.0.255.255 2.128.0.0 0.0.255.255"
              },
              {
                "action" : "REJECT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "0.0.0.0/0"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "0.0.0.0/0"
                    }
                  }
                },
                "name" : "deny   ip any any"
              }
            ]
          }
        },
        "routeFilterLists" : {
          "102" : {
            "name" : "102",
            "lines" : [
              {
                "action" : "ACCEPT",
                "lengthRange" : "24-24",
                "prefix" : "2.128.0.0/24"
              },
              {
                "action" : "ACCEPT",
                "lengthRange" : "24-24",
                "prefix" : "2.128.1.0/24"
              }
            ]
          }
        },
        "routingPolicies" : {
          "as2_to_dept" : {
            "name" : "as2_to_dept",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "~RMCLAUSE~as2_to_dept~100~",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ReturnLocalDefaultAction"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.MatchCommunitySet",
                  "expr" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.NamedCommunitySet",
                    "name" : "as2_community"
                  }
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.SetLocalPreference",
                    "localPreference" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.LiteralInt",
                      "value" : 350
                    }
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ReturnTrue"
                  }
                ]
              }
            ]
          },
          "dept_to_as2" : {
            "name" : "dept_to_as2",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "~RMCLAUSE~dept_to_as2~100~",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ReturnLocalDefaultAction"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                  "prefix" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                  },
                  "prefixSet" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                    "name" : "102"
                  }
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
                    "metric" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.LiteralLong",
                      "value" : 50
                    }
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.AddCommunity",
                    "expr" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.InlineCommunitySet",
                      "communities" : [
                        {
                          "prefix" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                            "value" : 65001
                          },
                          "suffix" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                            "value" : 2
                          }
                        }
                      ]
                    }
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ReturnTrue"
                  }
                ]
              }
            ]
          },
          "~BGP_COMMON_EXPORT_POLICY:default~" : {
            "name" : "~BGP_COMMON_EXPORT_POLICY:default~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.Disjunction",
                  "disjuncts" : [
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.Conjunction",
                      "conjuncts" : [
                        {
                          "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                          "prefix" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                          },
                          "prefixSet" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.ExplicitPrefixSet",
                            "prefixSpace" : [
                              "2.128.0.0/24"
                            ]
                          }
                        },
                        {
                          "class" : "org.batfish.datamodel.routing_policy.expr.Not",
                          "expr" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                            "protocol" : "bgp"
                          }
                        },
                        {
                          "class" : "org.batfish.datamodel.routing_policy.expr.Not",
                          "expr" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                            "protocol" : "ibgp"
                          }
                        },
                        {
                          "class" : "org.batfish.datamodel.routing_policy.expr.Not",
                          "expr" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                            "protocol" : "aggregate"
                          }
                        },
                        {
                          "class" : "org.batfish.datamodel.routing_policy.expr.WithEnvironmentExpr",
                          "expr" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.BooleanExprs$StaticBooleanExpr",
                            "type" : "True"
                          },
                          "postStatements" : [
                            {
                              "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                              "type" : "UnsetWriteIntermediateBgpAttributes"
                            }
                          ],
                          "postTrueStatements" : [
                            {
                              "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                              "type" : "SetReadIntermediateBgpAttributes"
                            },
                            {
                              "class" : "org.batfish.datamodel.routing_policy.statement.SetOrigin",
                              "originType" : {
                                "class" : "org.batfish.datamodel.routing_policy.expr.LiteralOrigin",
                                "originType" : "igp"
                              }
                            }
                          ],
                          "preStatements" : [
                            {
                              "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                              "type" : "SetWriteIntermediateBgpAttributes"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.Conjunction",
                      "conjuncts" : [
                        {
                          "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                          "prefix" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                          },
                          "prefixSet" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.ExplicitPrefixSet",
                            "prefixSpace" : [
                              "2.128.1.0/24"
                            ]
                          }
                        },
                        {
                          "class" : "org.batfish.datamodel.routing_policy.expr.Not",
                          "expr" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                            "protocol" : "bgp"
                          }
                        },
                        {
                          "class" : "org.batfish.datamodel.routing_policy.expr.Not",
                          "expr" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                            "protocol" : "ibgp"
                          }
                        },
                        {
                          "class" : "org.batfish.datamodel.routing_policy.expr.Not",
                          "expr" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                            "protocol" : "aggregate"
                          }
                        },
                        {
                          "class" : "org.batfish.datamodel.routing_policy.expr.WithEnvironmentExpr",
                          "expr" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.BooleanExprs$StaticBooleanExpr",
                            "type" : "True"
                          },
                          "postStatements" : [
                            {
                              "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                              "type" : "UnsetWriteIntermediateBgpAttributes"
                            }
                          ],
                          "postTrueStatements" : [
                            {
                              "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                              "type" : "SetReadIntermediateBgpAttributes"
                            },
                            {
                              "class" : "org.batfish.datamodel.routing_policy.statement.SetOrigin",
                              "originType" : {
                                "class" : "org.batfish.datamodel.routing_policy.expr.LiteralOrigin",
                                "originType" : "igp"
                              }
                            }
                          ],
                          "preStatements" : [
                            {
                              "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                              "type" : "SetWriteIntermediateBgpAttributes"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                      "protocol" : "bgp"
                    },
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                      "protocol" : "ibgp"
                    }
                  ]
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ReturnTrue"
                  }
                ]
              },
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                "type" : "ReturnFalse"
              }
            ]
          },
          "~BGP_PEER_EXPORT_POLICY:default:2.34.101.3~" : {
            "name" : "~BGP_PEER_EXPORT_POLICY:default:2.34.101.3~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "peer-export policy main conditional: exitAccept if true / exitReject if false",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitReject"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.Conjunction",
                  "conjuncts" : [
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                      "calledPolicyName" : "~BGP_COMMON_EXPORT_POLICY:default~"
                    },
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                      "calledPolicyName" : "dept_to_as2"
                    }
                  ]
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitAccept"
                  }
                ]
              }
            ]
          },
          "~BGP_PEER_EXPORT_POLICY:default:2.34.201.3~" : {
            "name" : "~BGP_PEER_EXPORT_POLICY:default:2.34.201.3~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "peer-export policy main conditional: exitAccept if true / exitReject if false",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitReject"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.Conjunction",
                  "conjuncts" : [
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                      "calledPolicyName" : "~BGP_COMMON_EXPORT_POLICY:default~"
                    },
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                      "calledPolicyName" : "dept_to_as2"
                    }
                  ]
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitAccept"
                  }
                ]
              }
            ]
          }
        },
        "vendorFamily" : {
          "cisco" : {
            "aaa" : {
              "newModel" : false
            },
            "hostname" : "as2dept1",
            "lines" : {
              "aux0" : {
                "name" : "aux0",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0
              },
              "con0" : {
                "name" : "con0",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0
              },
              "vty0" : {
                "name" : "vty0",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0
              },
              "vty1" : {
                "name" : "vty1",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0
              },
              "vty2" : {
                "name" : "vty2",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0
              },
              "vty3" : {
                "name" : "vty3",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0
              },
              "vty4" : {
                "name" : "vty4",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0
              }
            },
            "logging" : {
              "on" : true
            },
            "services" : {
              "timestamps" : {
                "enabled" : true,
                "subservices" : {
                  "debug" : {
                    "enabled" : true,
                    "subservices" : {
                      "datetime" : {
                        "enabled" : true,
                        "subservices" : {
                          "msec" : {
                            "enabled" : true
                          }
                        }
                      }
                    }
                  },
                  "log" : {
                    "enabled" : true,
                    "subservices" : {
                      "datetime" : {
                        "enabled" : true,
                        "subservices" : {
                          "msec" : {
                            "enabled" : true
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "vrfs" : {
          "default" : {
            "name" : "default",
            "bgpProcess" : {
              "multipathEbgp" : true,
              "multipathEquivalentAsPathMatchMode" : "EXACT_PATH",
              "multipathIbgp" : true,
              "neighbors" : {
                "2.34.101.3/32" : {
                  "name" : "2.34.101.3/32",
                  "additionalPathsReceive" : true,
                  "additionalPathsSelectAll" : true,
                  "additionalPathsSend" : true,
                  "address" : "2.34.101.3",
                  "advertiseExternal" : false,
                  "advertiseInactive" : true,
                  "allowLocalAsIn" : false,
                  "allowRemoteAsOut" : false,
                  "clusterId" : 33620993,
                  "defaultMetric" : 0,
                  "dynamic" : false,
                  "ebgpMultihop" : false,
                  "enforceFirstAs" : false,
                  "exportPolicy" : "~BGP_PEER_EXPORT_POLICY:default:2.34.101.3~",
                  "exportPolicySources" : [
                    "dept_to_as2"
                  ],
                  "group" : "as2",
                  "importPolicy" : "as2_to_dept",
                  "importPolicySources" : [
                    "as2_to_dept"
                  ],
                  "localAs" : 65001,
                  "localIp" : "2.34.101.4",
                  "remoteAs" : 2,
                  "remotePrefix" : "2.34.101.3/32",
                  "routeReflectorClient" : false,
                  "sendCommunity" : true,
                  "vrf" : "default"
                },
                "2.34.201.3/32" : {
                  "name" : "2.34.201.3/32",
                  "additionalPathsReceive" : true,
                  "additionalPathsSelectAll" : true,
                  "additionalPathsSend" : true,
                  "address" : "2.34.201.3",
                  "advertiseExternal" : false,
                  "advertiseInactive" : true,
                  "allowLocalAsIn" : false,
                  "allowRemoteAsOut" : false,
                  "clusterId" : 33620993,
                  "defaultMetric" : 0,
                  "dynamic" : false,
                  "ebgpMultihop" : false,
                  "enforceFirstAs" : false,
                  "exportPolicy" : "~BGP_PEER_EXPORT_POLICY:default:2.34.201.3~",
                  "exportPolicySources" : [
                    "dept_to_as2"
                  ],
                  "group" : "as2",
                  "importPolicy" : "as2_to_dept",
                  "importPolicySources" : [
                    "as2_to_dept"
                  ],
                  "localAs" : 65001,
                  "localIp" : "2.34.201.4",
                  "remoteAs" : 2,
                  "remotePrefix" : "2.34.201.3/32",
                  "routeReflectorClient" : false,
                  "sendCommunity" : true,
                  "vrf" : "default"
                }
              },
              "routerId" : "2.1.4.1",
              "tieBreaker" : "ARRIVAL_ORDER"
            },
            "interfaces" : [
              "Ethernet0/0",
              "GigabitEthernet0/0",
              "GigabitEthernet1/0",
              "GigabitEthernet2/0",
              "GigabitEthernet3/0",
              "Loopback0"
            ]
          }
        }
      },
      "as2dist1" : {
        "configurationFormat" : "CISCO_IOS",
        "name" : "as2dist1",
        "communityLists" : {
          "dept_community" : {
            "lines" : [
              {
                "action" : "ACCEPT",
                "regex" : "(,|\\{|\\}|^|$| )65001:"
              }
            ],
            "name" : "dept_community",
            "invertMatch" : false
          }
        },
        "defaultCrossZoneAction" : "ACCEPT",
        "defaultInboundAction" : "ACCEPT",
        "deviceType" : "ROUTER",
        "domainName" : "lab.local",
        "interfaces" : {
          "Ethernet0/0" : {
            "name" : "Ethernet0/0",
            "accessVlan" : 0,
            "active" : false,
            "autostate" : true,
            "bandwidth" : 1.0E7,
            "declaredNames" : [
              "Ethernet0/0"
            ],
            "isisL1InterfaceMode" : "unset",
            "isisL2InterfaceMode" : "unset",
            "mtu" : 1500,
            "nativeVlan" : 1,
            "ospfDeadInterval" : 0,
            "ospfEnabled" : false,
            "ospfHelloMultiplier" : 0,
            "ospfPassive" : false,
            "ospfPointToPoint" : false,
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "PHYSICAL",
            "vrf" : "default"
          },
          "GigabitEthernet0/0" : {
            "name" : "GigabitEthernet0/0",
            "accessVlan" : 0,
            "active" : true,
            "allPrefixes" : [
              "2.23.11.3/24"
            ],
            "autostate" : true,
            "bandwidth" : 1.0E9,
            "declaredNames" : [
              "GigabitEthernet0/0"
            ],
            "isisL1InterfaceMode" : "unset",
            "isisL2InterfaceMode" : "unset",
            "mtu" : 1500,
            "nativeVlan" : 1,
            "ospfArea" : 1,
            "ospfCost" : 1,
            "ospfDeadInterval" : 0,
            "ospfEnabled" : true,
            "ospfHelloMultiplier" : 0,
            "ospfPassive" : false,
            "ospfPointToPoint" : false,
            "prefix" : "2.23.11.3/24",
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "PHYSICAL",
            "vrf" : "default"
          },
          "GigabitEthernet1/0" : {
            "name" : "GigabitEthernet1/0",
            "accessVlan" : 0,
            "active" : true,
            "allPrefixes" : [
              "2.23.21.3/24"
            ],
            "autostate" : true,
            "bandwidth" : 1.0E9,
            "declaredNames" : [
              "GigabitEthernet1/0"
            ],
            "isisL1InterfaceMode" : "unset",
            "isisL2InterfaceMode" : "unset",
            "mtu" : 1500,
            "nativeVlan" : 1,
            "ospfArea" : 1,
            "ospfCost" : 1,
            "ospfDeadInterval" : 0,
            "ospfEnabled" : true,
            "ospfHelloMultiplier" : 0,
            "ospfPassive" : false,
            "ospfPointToPoint" : false,
            "prefix" : "2.23.21.3/24",
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "PHYSICAL",
            "vrf" : "default"
          },
          "GigabitEthernet2/0" : {
            "name" : "GigabitEthernet2/0",
            "accessVlan" : 0,
            "active" : true,
            "allPrefixes" : [
              "2.34.101.3/24"
            ],
            "autostate" : true,
            "bandwidth" : 1.0E9,
            "declaredNames" : [
              "GigabitEthernet2/0"
            ],
            "isisL1InterfaceMode" : "unset",
            "isisL2InterfaceMode" : "unset",
            "mtu" : 1500,
            "nativeVlan" : 1,
            "ospfDeadInterval" : 0,
            "ospfEnabled" : false,
            "ospfHelloMultiplier" : 0,
            "ospfPassive" : false,
            "ospfPointToPoint" : false,
            "prefix" : "2.34.101.3/24",
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "PHYSICAL",
            "vrf" : "default"
          },
          "Loopback0" : {
            "name" : "Loopback0",
            "accessVlan" : 0,
            "active" : true,
            "allPrefixes" : [
              "2.1.3.1/32"
            ],
            "autostate" : true,
            "bandwidth" : 1.0E12,
            "declaredNames" : [
              "Loopback0"
            ],
            "isisL1InterfaceMode" : "unset",
            "isisL2InterfaceMode" : "unset",
            "mtu" : 1500,
            "nativeVlan" : 1,
            "ospfArea" : 1,
            "ospfCost" : 1,
            "ospfDeadInterval" : 0,
            "ospfEnabled" : true,
            "ospfHelloMultiplier" : 0,
            "ospfPassive" : false,
            "ospfPointToPoint" : false,
            "prefix" : "2.1.3.1/32",
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "LOOPBACK",
            "vrf" : "default"
          }
        },
        "ipAccessLists" : {
          "102" : {
            "name" : "102",
            "lines" : [
              {
                "action" : "ACCEPT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "255.255.0.0"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "2.128.0.0"
                    }
                  }
                },
                "name" : "permit ip host 2.128.0.0 host 255.255.0.0"
              }
            ]
          },
          "105" : {
            "name" : "105",
            "lines" : [
              {
                "action" : "ACCEPT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "255.255.255.0"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "1.0.1.0"
                    }
                  }
                },
                "name" : "permit ip host 1.0.1.0 host 255.255.255.0"
              },
              {
                "action" : "ACCEPT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "255.255.255.0"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "1.0.2.0"
                    }
                  }
                },
                "name" : "permit ip host 1.0.2.0 host 255.255.255.0"
              },
              {
                "action" : "ACCEPT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "255.255.255.0"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "3.0.1.0"
                    }
                  }
                },
                "name" : "permit ip host 3.0.1.0 host 255.255.255.0"
              },
              {
                "action" : "ACCEPT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "255.255.255.0"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "3.0.2.0"
                    }
                  }
                },
                "name" : "permit ip host 3.0.2.0 host 255.255.255.0"
              }
            ]
          }
        },
        "routeFilterLists" : {
          "105" : {
            "name" : "105",
            "lines" : [
              {
                "action" : "ACCEPT",
                "lengthRange" : "24-24",
                "prefix" : "1.0.1.0/24"
              },
              {
                "action" : "ACCEPT",
                "lengthRange" : "24-24",
                "prefix" : "1.0.2.0/24"
              },
              {
                "action" : "ACCEPT",
                "lengthRange" : "24-24",
                "prefix" : "3.0.1.0/24"
              },
              {
                "action" : "ACCEPT",
                "lengthRange" : "24-24",
                "prefix" : "3.0.2.0/24"
              }
            ]
          }
        },
        "routingPolicies" : {
          "as2dist_to_dept" : {
            "name" : "as2dist_to_dept",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "~RMCLAUSE~as2dist_to_dept~100~",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ReturnLocalDefaultAction"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                  "prefix" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                  },
                  "prefixSet" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                    "name" : "105"
                  }
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
                    "metric" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.LiteralLong",
                      "value" : 50
                    }
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.AddCommunity",
                    "expr" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.InlineCommunitySet",
                      "communities" : [
                        {
                          "prefix" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                            "value" : 2
                          },
                          "suffix" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                            "value" : 65001
                          }
                        }
                      ]
                    }
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ReturnTrue"
                  }
                ]
              }
            ]
          },
          "dept_to_as2dist" : {
            "name" : "dept_to_as2dist",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "~RMCLAUSE~dept_to_as2dist~100~",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ReturnLocalDefaultAction"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.MatchCommunitySet",
                  "expr" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.NamedCommunitySet",
                    "name" : "dept_community"
                  }
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.SetLocalPreference",
                    "localPreference" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.LiteralInt",
                      "value" : 350
                    }
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ReturnTrue"
                  }
                ]
              }
            ]
          },
          "~BGP_COMMON_EXPORT_POLICY:default~" : {
            "name" : "~BGP_COMMON_EXPORT_POLICY:default~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.Disjunction",
                  "disjuncts" : [
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                      "protocol" : "bgp"
                    },
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                      "protocol" : "ibgp"
                    }
                  ]
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ReturnTrue"
                  }
                ]
              },
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                "type" : "ReturnFalse"
              }
            ]
          },
          "~BGP_PEER_EXPORT_POLICY:default:2.1.2.1~" : {
            "name" : "~BGP_PEER_EXPORT_POLICY:default:2.1.2.1~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "peer-export policy main conditional: exitAccept if true / exitReject if false",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitReject"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                  "calledPolicyName" : "~BGP_COMMON_EXPORT_POLICY:default~"
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitAccept"
                  }
                ]
              }
            ]
          },
          "~BGP_PEER_EXPORT_POLICY:default:2.1.2.2~" : {
            "name" : "~BGP_PEER_EXPORT_POLICY:default:2.1.2.2~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "peer-export policy main conditional: exitAccept if true / exitReject if false",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitReject"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                  "calledPolicyName" : "~BGP_COMMON_EXPORT_POLICY:default~"
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitAccept"
                  }
                ]
              }
            ]
          },
          "~BGP_PEER_EXPORT_POLICY:default:2.34.101.4~" : {
            "name" : "~BGP_PEER_EXPORT_POLICY:default:2.34.101.4~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "peer-export policy main conditional: exitAccept if true / exitReject if false",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitReject"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.Conjunction",
                  "conjuncts" : [
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                      "calledPolicyName" : "~BGP_COMMON_EXPORT_POLICY:default~"
                    },
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                      "calledPolicyName" : "as2dist_to_dept"
                    }
                  ]
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitAccept"
                  }
                ]
              }
            ]
          },
          "~OSPF_EXPORT_POLICY:default~" : {
            "name" : "~OSPF_EXPORT_POLICY:default~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "OSPF export routes for connected",
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.Conjunction",
                  "conjuncts" : [
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                      "protocol" : "connected"
                    },
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.Not",
                      "expr" : {
                        "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                        "comment" : "match default route",
                        "prefix" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                        },
                        "prefixSet" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.ExplicitPrefixSet",
                          "prefixSpace" : [
                            "0.0.0.0/0"
                          ]
                        }
                      }
                    }
                  ]
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.SetOspfMetricType",
                    "metricType" : "E2"
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
                    "metric" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.LiteralLong",
                      "value" : 20
                    }
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitAccept"
                  }
                ]
              }
            ]
          }
        },
        "vendorFamily" : {
          "cisco" : {
            "aaa" : {
              "newModel" : false
            },
            "hostname" : "as2dist1",
            "lines" : {
              "aux0" : {
                "name" : "aux0",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0
              },
              "con0" : {
                "name" : "con0",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0
              },
              "vty0" : {
                "name" : "vty0",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0
              },
              "vty1" : {
                "name" : "vty1",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0
              },
              "vty2" : {
                "name" : "vty2",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0
              },
              "vty3" : {
                "name" : "vty3",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0
              },
              "vty4" : {
                "name" : "vty4",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0
              }
            },
            "logging" : {
              "on" : true
            },
            "services" : {
              "timestamps" : {
                "enabled" : true,
                "subservices" : {
                  "debug" : {
                    "enabled" : true,
                    "subservices" : {
                      "datetime" : {
                        "enabled" : true,
                        "subservices" : {
                          "msec" : {
                            "enabled" : true
                          }
                        }
                      }
                    }
                  },
                  "log" : {
                    "enabled" : true,
                    "subservices" : {
                      "datetime" : {
                        "enabled" : true,
                        "subservices" : {
                          "msec" : {
                            "enabled" : true
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "vrfs" : {
          "default" : {
            "name" : "default",
            "bgpProcess" : {
              "multipathEbgp" : true,
              "multipathEquivalentAsPathMatchMode" : "EXACT_PATH",
              "multipathIbgp" : true,
              "neighbors" : {
                "2.1.2.1/32" : {
                  "name" : "2.1.2.1/32",
                  "additionalPathsReceive" : true,
                  "additionalPathsSelectAll" : true,
                  "additionalPathsSend" : true,
                  "address" : "2.1.2.1",
                  "advertiseExternal" : false,
                  "advertiseInactive" : true,
                  "allowLocalAsIn" : false,
                  "allowRemoteAsOut" : false,
                  "clusterId" : 33620737,
                  "defaultMetric" : 0,
                  "dynamic" : false,
                  "ebgpMultihop" : false,
                  "enforceFirstAs" : false,
                  "exportPolicy" : "~BGP_PEER_EXPORT_POLICY:default:2.1.2.1~",
                  "group" : "as2",
                  "localAs" : 2,
                  "localIp" : "2.1.3.1",
                  "remoteAs" : 2,
                  "remotePrefix" : "2.1.2.1/32",
                  "routeReflectorClient" : false,
                  "sendCommunity" : true,
                  "vrf" : "default"
                },
                "2.1.2.2/32" : {
                  "name" : "2.1.2.2/32",
                  "additionalPathsReceive" : true,
                  "additionalPathsSelectAll" : true,
                  "additionalPathsSend" : true,
                  "address" : "2.1.2.2",
                  "advertiseExternal" : false,
                  "advertiseInactive" : true,
                  "allowLocalAsIn" : false,
                  "allowRemoteAsOut" : false,
                  "clusterId" : 33620737,
                  "defaultMetric" : 0,
                  "dynamic" : false,
                  "ebgpMultihop" : false,
                  "enforceFirstAs" : false,
                  "exportPolicy" : "~BGP_PEER_EXPORT_POLICY:default:2.1.2.2~",
                  "group" : "as2",
                  "localAs" : 2,
                  "localIp" : "2.1.3.1",
                  "remoteAs" : 2,
                  "remotePrefix" : "2.1.2.2/32",
                  "routeReflectorClient" : false,
                  "sendCommunity" : true,
                  "vrf" : "default"
                },
                "2.34.101.4/32" : {
                  "name" : "2.34.101.4/32",
                  "additionalPathsReceive" : true,
                  "additionalPathsSelectAll" : true,
                  "additionalPathsSend" : true,
                  "address" : "2.34.101.4",
                  "advertiseExternal" : false,
                  "advertiseInactive" : true,
                  "allowLocalAsIn" : false,
                  "allowRemoteAsOut" : false,
                  "clusterId" : 33620737,
                  "defaultMetric" : 0,
                  "dynamic" : false,
                  "ebgpMultihop" : false,
                  "enforceFirstAs" : false,
                  "exportPolicy" : "~BGP_PEER_EXPORT_POLICY:default:2.34.101.4~",
                  "exportPolicySources" : [
                    "as2dist_to_dept"
                  ],
                  "group" : "dept",
                  "importPolicy" : "dept_to_as2dist",
                  "importPolicySources" : [
                    "dept_to_as2dist"
                  ],
                  "localAs" : 2,
                  "localIp" : "2.34.101.3",
                  "remoteAs" : 65001,
                  "remotePrefix" : "2.34.101.4/32",
                  "routeReflectorClient" : false,
                  "sendCommunity" : true,
                  "vrf" : "default"
                }
              },
              "routerId" : "2.1.3.1",
              "tieBreaker" : "ARRIVAL_ORDER"
            },
            "interfaces" : [
              "Ethernet0/0",
              "GigabitEthernet0/0",
              "GigabitEthernet1/0",
              "GigabitEthernet2/0",
              "Loopback0"
            ],
            "ospfProcess" : {
              "areas" : {
                "1" : {
                  "name" : 1,
                  "interfaces" : [
                    "GigabitEthernet0/0",
                    "GigabitEthernet1/0",
                    "Loopback0"
                  ]
                }
              },
              "exportPolicy" : "~OSPF_EXPORT_POLICY:default~",
              "processId" : "1",
              "referenceBandwidth" : 1.0E8,
              "routerId" : "2.1.3.1"
            }
          }
        }
      },
      "as2dist2" : {
        "configurationFormat" : "CISCO_IOS",
        "name" : "as2dist2",
        "communityLists" : {
          "dept_community" : {
            "lines" : [
              {
                "action" : "ACCEPT",
                "regex" : "(,|\\{|\\}|^|$| )65001:"
              }
            ],
            "name" : "dept_community",
            "invertMatch" : false
          }
        },
        "defaultCrossZoneAction" : "ACCEPT",
        "defaultInboundAction" : "ACCEPT",
        "deviceType" : "ROUTER",
        "domainName" : "lab.local",
        "interfaces" : {
          "Ethernet0/0" : {
            "name" : "Ethernet0/0",
            "accessVlan" : 0,
            "active" : false,
            "autostate" : true,
            "bandwidth" : 1.0E7,
            "declaredNames" : [
              "Ethernet0/0"
            ],
            "isisL1InterfaceMode" : "unset",
            "isisL2InterfaceMode" : "unset",
            "mtu" : 1500,
            "nativeVlan" : 1,
            "ospfDeadInterval" : 0,
            "ospfEnabled" : false,
            "ospfHelloMultiplier" : 0,
            "ospfPassive" : false,
            "ospfPointToPoint" : false,
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "PHYSICAL",
            "vrf" : "default"
          },
          "GigabitEthernet0/0" : {
            "name" : "GigabitEthernet0/0",
            "accessVlan" : 0,
            "active" : true,
            "allPrefixes" : [
              "2.23.22.3/24"
            ],
            "autostate" : true,
            "bandwidth" : 1.0E9,
            "declaredNames" : [
              "GigabitEthernet0/0"
            ],
            "isisL1InterfaceMode" : "unset",
            "isisL2InterfaceMode" : "unset",
            "mtu" : 1500,
            "nativeVlan" : 1,
            "ospfArea" : 1,
            "ospfCost" : 1,
            "ospfDeadInterval" : 0,
            "ospfEnabled" : true,
            "ospfHelloMultiplier" : 0,
            "ospfPassive" : false,
            "ospfPointToPoint" : false,
            "prefix" : "2.23.22.3/24",
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "PHYSICAL",
            "vrf" : "default"
          },
          "GigabitEthernet1/0" : {
            "name" : "GigabitEthernet1/0",
            "accessVlan" : 0,
            "active" : true,
            "allPrefixes" : [
              "2.23.12.3/24"
            ],
            "autostate" : true,
            "bandwidth" : 1.0E9,
            "declaredNames" : [
              "GigabitEthernet1/0"
            ],
            "isisL1InterfaceMode" : "unset",
            "isisL2InterfaceMode" : "unset",
            "mtu" : 1500,
            "nativeVlan" : 1,
            "ospfArea" : 1,
            "ospfCost" : 1,
            "ospfDeadInterval" : 0,
            "ospfEnabled" : true,
            "ospfHelloMultiplier" : 0,
            "ospfPassive" : false,
            "ospfPointToPoint" : false,
            "prefix" : "2.23.12.3/24",
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "PHYSICAL",
            "vrf" : "default"
          },
          "GigabitEthernet2/0" : {
            "name" : "GigabitEthernet2/0",
            "accessVlan" : 0,
            "active" : true,
            "allPrefixes" : [
              "2.34.201.3/24"
            ],
            "autostate" : true,
            "bandwidth" : 1.0E9,
            "declaredNames" : [
              "GigabitEthernet2/0"
            ],
            "isisL1InterfaceMode" : "unset",
            "isisL2InterfaceMode" : "unset",
            "mtu" : 1500,
            "nativeVlan" : 1,
            "ospfDeadInterval" : 0,
            "ospfEnabled" : false,
            "ospfHelloMultiplier" : 0,
            "ospfPassive" : false,
            "ospfPointToPoint" : false,
            "prefix" : "2.34.201.3/24",
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "PHYSICAL",
            "vrf" : "default"
          },
          "Loopback0" : {
            "name" : "Loopback0",
            "accessVlan" : 0,
            "active" : true,
            "allPrefixes" : [
              "2.1.3.2/32"
            ],
            "autostate" : true,
            "bandwidth" : 1.0E12,
            "declaredNames" : [
              "Loopback0"
            ],
            "isisL1InterfaceMode" : "unset",
            "isisL2InterfaceMode" : "unset",
            "mtu" : 1500,
            "nativeVlan" : 1,
            "ospfArea" : 1,
            "ospfCost" : 1,
            "ospfDeadInterval" : 0,
            "ospfEnabled" : true,
            "ospfHelloMultiplier" : 0,
            "ospfPassive" : false,
            "ospfPointToPoint" : false,
            "prefix" : "2.1.3.2/32",
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "LOOPBACK",
            "vrf" : "default"
          }
        },
        "ipAccessLists" : {
          "102" : {
            "name" : "102",
            "lines" : [
              {
                "action" : "ACCEPT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "255.255.0.0"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "2.128.0.0"
                    }
                  }
                },
                "name" : "permit ip host 2.128.0.0 host 255.255.0.0"
              }
            ]
          },
          "105" : {
            "name" : "105",
            "lines" : [
              {
                "action" : "ACCEPT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "255.255.255.0"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "1.0.1.0"
                    }
                  }
                },
                "name" : "permit ip host 1.0.1.0 host 255.255.255.0"
              },
              {
                "action" : "ACCEPT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "255.255.255.0"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "1.0.2.0"
                    }
                  }
                },
                "name" : "permit ip host 1.0.2.0 host 255.255.255.0"
              },
              {
                "action" : "ACCEPT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "255.255.255.0"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "3.0.1.0"
                    }
                  }
                },
                "name" : "permit ip host 3.0.1.0 host 255.255.255.0"
              },
              {
                "action" : "ACCEPT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "255.255.255.0"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "3.0.2.0"
                    }
                  }
                },
                "name" : "permit ip host 3.0.2.0 host 255.255.255.0"
              }
            ]
          }
        },
        "routeFilterLists" : {
          "105" : {
            "name" : "105",
            "lines" : [
              {
                "action" : "ACCEPT",
                "lengthRange" : "24-24",
                "prefix" : "1.0.1.0/24"
              },
              {
                "action" : "ACCEPT",
                "lengthRange" : "24-24",
                "prefix" : "1.0.2.0/24"
              },
              {
                "action" : "ACCEPT",
                "lengthRange" : "24-24",
                "prefix" : "3.0.1.0/24"
              },
              {
                "action" : "ACCEPT",
                "lengthRange" : "24-24",
                "prefix" : "3.0.2.0/24"
              }
            ]
          }
        },
        "routingPolicies" : {
          "as2dist_to_dept" : {
            "name" : "as2dist_to_dept",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "~RMCLAUSE~as2dist_to_dept~100~",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ReturnLocalDefaultAction"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                  "prefix" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                  },
                  "prefixSet" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                    "name" : "105"
                  }
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
                    "metric" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.LiteralLong",
                      "value" : 50
                    }
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.AddCommunity",
                    "expr" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.InlineCommunitySet",
                      "communities" : [
                        {
                          "prefix" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                            "value" : 2
                          },
                          "suffix" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                            "value" : 65001
                          }
                        }
                      ]
                    }
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ReturnTrue"
                  }
                ]
              }
            ]
          },
          "dept_to_as2dist" : {
            "name" : "dept_to_as2dist",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "~RMCLAUSE~dept_to_as2dist~100~",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ReturnLocalDefaultAction"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.MatchCommunitySet",
                  "expr" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.NamedCommunitySet",
                    "name" : "dept_community"
                  }
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.SetLocalPreference",
                    "localPreference" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.LiteralInt",
                      "value" : 350
                    }
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ReturnTrue"
                  }
                ]
              }
            ]
          },
          "~BGP_COMMON_EXPORT_POLICY:default~" : {
            "name" : "~BGP_COMMON_EXPORT_POLICY:default~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.Disjunction",
                  "disjuncts" : [
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                      "protocol" : "bgp"
                    },
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                      "protocol" : "ibgp"
                    }
                  ]
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ReturnTrue"
                  }
                ]
              },
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                "type" : "ReturnFalse"
              }
            ]
          },
          "~BGP_PEER_EXPORT_POLICY:default:2.1.2.1~" : {
            "name" : "~BGP_PEER_EXPORT_POLICY:default:2.1.2.1~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "peer-export policy main conditional: exitAccept if true / exitReject if false",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitReject"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                  "calledPolicyName" : "~BGP_COMMON_EXPORT_POLICY:default~"
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitAccept"
                  }
                ]
              }
            ]
          },
          "~BGP_PEER_EXPORT_POLICY:default:2.1.2.2~" : {
            "name" : "~BGP_PEER_EXPORT_POLICY:default:2.1.2.2~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "peer-export policy main conditional: exitAccept if true / exitReject if false",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitReject"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                  "calledPolicyName" : "~BGP_COMMON_EXPORT_POLICY:default~"
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitAccept"
                  }
                ]
              }
            ]
          },
          "~BGP_PEER_EXPORT_POLICY:default:2.34.201.4~" : {
            "name" : "~BGP_PEER_EXPORT_POLICY:default:2.34.201.4~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "peer-export policy main conditional: exitAccept if true / exitReject if false",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitReject"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.Conjunction",
                  "conjuncts" : [
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                      "calledPolicyName" : "~BGP_COMMON_EXPORT_POLICY:default~"
                    },
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                      "calledPolicyName" : "as2dist_to_dept"
                    }
                  ]
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitAccept"
                  }
                ]
              }
            ]
          },
          "~OSPF_EXPORT_POLICY:default~" : {
            "name" : "~OSPF_EXPORT_POLICY:default~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "OSPF export routes for connected",
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.Conjunction",
                  "conjuncts" : [
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                      "protocol" : "connected"
                    },
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.Not",
                      "expr" : {
                        "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                        "comment" : "match default route",
                        "prefix" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                        },
                        "prefixSet" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.ExplicitPrefixSet",
                          "prefixSpace" : [
                            "0.0.0.0/0"
                          ]
                        }
                      }
                    }
                  ]
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.SetOspfMetricType",
                    "metricType" : "E2"
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
                    "metric" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.LiteralLong",
                      "value" : 20
                    }
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitAccept"
                  }
                ]
              }
            ]
          }
        },
        "vendorFamily" : {
          "cisco" : {
            "aaa" : {
              "newModel" : false
            },
            "hostname" : "as2dist2",
            "lines" : {
              "aux0" : {
                "name" : "aux0",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0
              },
              "con0" : {
                "name" : "con0",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0
              },
              "vty0" : {
                "name" : "vty0",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0
              },
              "vty1" : {
                "name" : "vty1",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0
              },
              "vty2" : {
                "name" : "vty2",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0
              },
              "vty3" : {
                "name" : "vty3",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0
              },
              "vty4" : {
                "name" : "vty4",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0
              }
            },
            "logging" : {
              "on" : true
            },
            "services" : {
              "timestamps" : {
                "enabled" : true,
                "subservices" : {
                  "debug" : {
                    "enabled" : true,
                    "subservices" : {
                      "datetime" : {
                        "enabled" : true,
                        "subservices" : {
                          "msec" : {
                            "enabled" : true
                          }
                        }
                      }
                    }
                  },
                  "log" : {
                    "enabled" : true,
                    "subservices" : {
                      "datetime" : {
                        "enabled" : true,
                        "subservices" : {
                          "msec" : {
                            "enabled" : true
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "vrfs" : {
          "default" : {
            "name" : "default",
            "bgpProcess" : {
              "multipathEbgp" : true,
              "multipathEquivalentAsPathMatchMode" : "EXACT_PATH",
              "multipathIbgp" : true,
              "neighbors" : {
                "2.1.2.1/32" : {
                  "name" : "2.1.2.1/32",
                  "additionalPathsReceive" : true,
                  "additionalPathsSelectAll" : true,
                  "additionalPathsSend" : true,
                  "address" : "2.1.2.1",
                  "advertiseExternal" : false,
                  "advertiseInactive" : true,
                  "allowLocalAsIn" : false,
                  "allowRemoteAsOut" : false,
                  "clusterId" : 33620738,
                  "defaultMetric" : 0,
                  "dynamic" : false,
                  "ebgpMultihop" : false,
                  "enforceFirstAs" : false,
                  "exportPolicy" : "~BGP_PEER_EXPORT_POLICY:default:2.1.2.1~",
                  "group" : "as2",
                  "localAs" : 2,
                  "localIp" : "2.1.3.2",
                  "remoteAs" : 2,
                  "remotePrefix" : "2.1.2.1/32",
                  "routeReflectorClient" : false,
                  "sendCommunity" : true,
                  "vrf" : "default"
                },
                "2.1.2.2/32" : {
                  "name" : "2.1.2.2/32",
                  "additionalPathsReceive" : true,
                  "additionalPathsSelectAll" : true,
                  "additionalPathsSend" : true,
                  "address" : "2.1.2.2",
                  "advertiseExternal" : false,
                  "advertiseInactive" : true,
                  "allowLocalAsIn" : false,
                  "allowRemoteAsOut" : false,
                  "clusterId" : 33620738,
                  "defaultMetric" : 0,
                  "dynamic" : false,
                  "ebgpMultihop" : false,
                  "enforceFirstAs" : false,
                  "exportPolicy" : "~BGP_PEER_EXPORT_POLICY:default:2.1.2.2~",
                  "group" : "as2",
                  "localAs" : 2,
                  "localIp" : "2.1.3.2",
                  "remoteAs" : 2,
                  "remotePrefix" : "2.1.2.2/32",
                  "routeReflectorClient" : false,
                  "sendCommunity" : true,
                  "vrf" : "default"
                },
                "2.34.201.4/32" : {
                  "name" : "2.34.201.4/32",
                  "additionalPathsReceive" : true,
                  "additionalPathsSelectAll" : true,
                  "additionalPathsSend" : true,
                  "address" : "2.34.201.4",
                  "advertiseExternal" : false,
                  "advertiseInactive" : true,
                  "allowLocalAsIn" : false,
                  "allowRemoteAsOut" : false,
                  "clusterId" : 33620738,
                  "defaultMetric" : 0,
                  "dynamic" : false,
                  "ebgpMultihop" : false,
                  "enforceFirstAs" : false,
                  "exportPolicy" : "~BGP_PEER_EXPORT_POLICY:default:2.34.201.4~",
                  "exportPolicySources" : [
                    "as2dist_to_dept"
                  ],
                  "group" : "dept",
                  "importPolicy" : "dept_to_as2dist",
                  "importPolicySources" : [
                    "dept_to_as2dist"
                  ],
                  "localAs" : 2,
                  "localIp" : "2.34.201.3",
                  "remoteAs" : 65001,
                  "remotePrefix" : "2.34.201.4/32",
                  "routeReflectorClient" : false,
                  "sendCommunity" : true,
                  "vrf" : "default"
                }
              },
              "routerId" : "2.1.3.2",
              "tieBreaker" : "ARRIVAL_ORDER"
            },
            "interfaces" : [
              "Ethernet0/0",
              "GigabitEthernet0/0",
              "GigabitEthernet1/0",
              "GigabitEthernet2/0",
              "Loopback0"
            ],
            "ospfProcess" : {
              "areas" : {
                "1" : {
                  "name" : 1,
                  "interfaces" : [
                    "GigabitEthernet0/0",
                    "GigabitEthernet1/0",
                    "Loopback0"
                  ]
                }
              },
              "exportPolicy" : "~OSPF_EXPORT_POLICY:default~",
              "processId" : "1",
              "referenceBandwidth" : 1.0E8,
              "routerId" : "2.1.3.2"
            }
          }
        }
      },
      "as3border1" : {
        "configurationFormat" : "CISCO_IOS",
        "name" : "as3border1",
        "communityLists" : {
          "as1_community" : {
            "lines" : [
              {
                "action" : "ACCEPT",
                "regex" : "(,|\\{|\\}|^|$| )1:"
              }
            ],
            "name" : "as1_community",
            "invertMatch" : false
          },
          "as2_community" : {
            "lines" : [
              {
                "action" : "ACCEPT",
                "regex" : "(,|\\{|\\}|^|$| )2:"
              }
            ],
            "name" : "as2_community",
            "invertMatch" : false
          },
          "as3_community" : {
            "lines" : [
              {
                "action" : "ACCEPT",
                "regex" : "(,|\\{|\\}|^|$| )3:"
              }
            ],
            "name" : "as3_community",
            "invertMatch" : false
          }
        },
        "defaultCrossZoneAction" : "ACCEPT",
        "defaultInboundAction" : "ACCEPT",
        "deviceType" : "ROUTER",
        "domainName" : "lab.local",
        "interfaces" : {
          "Ethernet0/0" : {
            "name" : "Ethernet0/0",
            "accessVlan" : 0,
            "active" : false,
            "autostate" : true,
            "bandwidth" : 1.0E7,
            "declaredNames" : [
              "Ethernet0/0"
            ],
            "isisL1InterfaceMode" : "unset",
            "isisL2InterfaceMode" : "unset",
            "mtu" : 1500,
            "nativeVlan" : 1,
            "ospfDeadInterval" : 0,
            "ospfEnabled" : false,
            "ospfHelloMultiplier" : 0,
            "ospfPassive" : false,
            "ospfPointToPoint" : false,
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "PHYSICAL",
            "vrf" : "default"
          },
          "GigabitEthernet0/0" : {
            "name" : "GigabitEthernet0/0",
            "accessVlan" : 0,
            "active" : true,
            "allPrefixes" : [
              "3.0.1.1/24"
            ],
            "autostate" : true,
            "bandwidth" : 1.0E9,
            "declaredNames" : [
              "GigabitEthernet0/0"
            ],
            "isisL1InterfaceMode" : "unset",
            "isisL2InterfaceMode" : "unset",
            "mtu" : 1500,
            "nativeVlan" : 1,
            "ospfArea" : 1,
            "ospfCost" : 1,
            "ospfDeadInterval" : 0,
            "ospfEnabled" : true,
            "ospfHelloMultiplier" : 0,
            "ospfPassive" : false,
            "ospfPointToPoint" : false,
            "prefix" : "3.0.1.1/24",
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "PHYSICAL",
            "vrf" : "default"
          },
          "GigabitEthernet1/0" : {
            "name" : "GigabitEthernet1/0",
            "accessVlan" : 0,
            "active" : true,
            "allPrefixes" : [
              "10.23.21.3/24"
            ],
            "autostate" : true,
            "bandwidth" : 1.0E9,
            "declaredNames" : [
              "GigabitEthernet1/0"
            ],
            "isisL1InterfaceMode" : "unset",
            "isisL2InterfaceMode" : "unset",
            "mtu" : 1500,
            "nativeVlan" : 1,
            "ospfDeadInterval" : 0,
            "ospfEnabled" : false,
            "ospfHelloMultiplier" : 0,
            "ospfPassive" : false,
            "ospfPointToPoint" : false,
            "prefix" : "10.23.21.3/24",
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "PHYSICAL",
            "vrf" : "default"
          },
          "Loopback0" : {
            "name" : "Loopback0",
            "accessVlan" : 0,
            "active" : true,
            "allPrefixes" : [
              "3.1.1.1/32"
            ],
            "autostate" : true,
            "bandwidth" : 1.0E12,
            "declaredNames" : [
              "Loopback0"
            ],
            "isisL1InterfaceMode" : "unset",
            "isisL2InterfaceMode" : "unset",
            "mtu" : 1500,
            "nativeVlan" : 1,
            "ospfArea" : 1,
            "ospfCost" : 1,
            "ospfDeadInterval" : 0,
            "ospfEnabled" : true,
            "ospfHelloMultiplier" : 0,
            "ospfPassive" : false,
            "ospfPointToPoint" : false,
            "prefix" : "3.1.1.1/32",
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "LOOPBACK",
            "vrf" : "default"
          }
        },
        "ipAccessLists" : {
          "101" : {
            "name" : "101",
            "lines" : [
              {
                "action" : "ACCEPT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "255.255.255.0"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "1.0.1.0"
                    }
                  }
                },
                "name" : "permit ip host 1.0.1.0 host 255.255.255.0"
              },
              {
                "action" : "ACCEPT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "255.255.255.0"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "1.0.2.0"
                    }
                  }
                },
                "name" : "permit ip host 1.0.2.0 host 255.255.255.0"
              }
            ]
          },
          "102" : {
            "name" : "102",
            "lines" : [
              {
                "action" : "ACCEPT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "255.0.0.0"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "2.0.0.0"
                    }
                  }
                },
                "name" : "permit ip host 2.0.0.0 host 255.0.0.0"
              },
              {
                "action" : "ACCEPT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "255.255.0.0"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "2.128.0.0"
                    }
                  }
                },
                "name" : "permit ip host 2.128.0.0 host 255.255.0.0"
              }
            ]
          },
          "103" : {
            "name" : "103",
            "lines" : [
              {
                "action" : "ACCEPT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "255.255.255.0"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "3.0.1.0"
                    }
                  }
                },
                "name" : "permit ip host 3.0.1.0 host 255.255.255.0"
              },
              {
                "action" : "ACCEPT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "255.255.255.0"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "3.0.2.0"
                    }
                  }
                },
                "name" : "permit ip host 3.0.2.0 host 255.255.255.0"
              }
            ]
          }
        },
        "ntpServers" : [
          "18.18.18.18",
          "23.23.23.23"
        ],
        "routeFilterLists" : {
          "101" : {
            "name" : "101",
            "lines" : [
              {
                "action" : "ACCEPT",
                "lengthRange" : "24-24",
                "prefix" : "1.0.1.0/24"
              },
              {
                "action" : "ACCEPT",
                "lengthRange" : "24-24",
                "prefix" : "1.0.2.0/24"
              }
            ]
          },
          "102" : {
            "name" : "102",
            "lines" : [
              {
                "action" : "ACCEPT",
                "lengthRange" : "8-8",
                "prefix" : "2.0.0.0/8"
              },
              {
                "action" : "ACCEPT",
                "lengthRange" : "16-16",
                "prefix" : "2.128.0.0/16"
              }
            ]
          },
          "103" : {
            "name" : "103",
            "lines" : [
              {
                "action" : "ACCEPT",
                "lengthRange" : "24-24",
                "prefix" : "3.0.1.0/24"
              },
              {
                "action" : "ACCEPT",
                "lengthRange" : "24-24",
                "prefix" : "3.0.2.0/24"
              }
            ]
          },
          "default_list" : {
            "name" : "default_list",
            "lines" : [
              {
                "action" : "ACCEPT",
                "lengthRange" : "0-0",
                "prefix" : "0.0.0.0/0"
              }
            ]
          },
          "inbound_route_filter" : {
            "name" : "inbound_route_filter",
            "lines" : [
              {
                "action" : "REJECT",
                "lengthRange" : "8-32",
                "prefix" : "3.0.0.0/8"
              },
              {
                "action" : "ACCEPT",
                "lengthRange" : "0-32",
                "prefix" : "0.0.0.0/0"
              }
            ]
          }
        },
        "routingPolicies" : {
          "as1_to_as3" : {
            "name" : "as1_to_as3",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "~RMCLAUSE~as1_to_as3~100~",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ReturnLocalDefaultAction"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.MatchCommunitySet",
                  "expr" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.NamedCommunitySet",
                    "name" : "as1_community"
                  }
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.SetLocalPreference",
                    "localPreference" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.LiteralInt",
                      "value" : 350
                    }
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ReturnTrue"
                  }
                ]
              }
            ]
          },
          "as2_to_as3" : {
            "name" : "as2_to_as3",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "~RMCLAUSE~as2_to_as3~100~",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ReturnLocalDefaultAction"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.MatchCommunitySet",
                  "expr" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.NamedCommunitySet",
                    "name" : "as2_community"
                  }
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.SetLocalPreference",
                    "localPreference" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.LiteralInt",
                      "value" : 350
                    }
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ReturnTrue"
                  }
                ]
              }
            ]
          },
          "as3_to_as1" : {
            "name" : "as3_to_as1",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "~RMCLAUSE~as3_to_as1~2~",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.If",
                    "comment" : "~RMCLAUSE~as3_to_as1~3~",
                    "falseStatements" : [
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                        "type" : "ReturnLocalDefaultAction"
                      }
                    ],
                    "guard" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                      "prefix" : {
                        "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                      },
                      "prefixSet" : {
                        "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                        "name" : "103"
                      }
                    },
                    "trueStatements" : [
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
                        "metric" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.LiteralLong",
                          "value" : 50
                        }
                      },
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.AddCommunity",
                        "expr" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.InlineCommunitySet",
                          "communities" : [
                            {
                              "prefix" : {
                                "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                                "value" : 3
                              },
                              "suffix" : {
                                "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                                "value" : 1
                              }
                            }
                          ]
                        }
                      },
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                        "type" : "ReturnTrue"
                      }
                    ]
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                  "prefix" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                  },
                  "prefixSet" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                    "name" : "102"
                  }
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
                    "metric" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.LiteralLong",
                      "value" : 50
                    }
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.AddCommunity",
                    "expr" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.InlineCommunitySet",
                      "communities" : [
                        {
                          "prefix" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                            "value" : 3
                          },
                          "suffix" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                            "value" : 1
                          }
                        }
                      ]
                    }
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ReturnTrue"
                  }
                ]
              }
            ]
          },
          "as3_to_as2" : {
            "name" : "as3_to_as2",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "~RMCLAUSE~as3_to_as2~1~",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.If",
                    "comment" : "~RMCLAUSE~as3_to_as2~3~",
                    "falseStatements" : [
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.If",
                        "comment" : "~RMCLAUSE~as3_to_as2~5~",
                        "falseStatements" : [
                          {
                            "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                            "type" : "ReturnLocalDefaultAction"
                          }
                        ],
                        "guard" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                          "prefix" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                          },
                          "prefixSet" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                            "name" : "default_list"
                          }
                        },
                        "trueStatements" : [
                          {
                            "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
                            "metric" : {
                              "class" : "org.batfish.datamodel.routing_policy.expr.LiteralLong",
                              "value" : 50
                            }
                          },
                          {
                            "class" : "org.batfish.datamodel.routing_policy.statement.AddCommunity",
                            "expr" : {
                              "class" : "org.batfish.datamodel.routing_policy.expr.InlineCommunitySet",
                              "communities" : [
                                {
                                  "prefix" : {
                                    "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                                    "value" : 3
                                  },
                                  "suffix" : {
                                    "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                                    "value" : 2
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                            "type" : "ReturnTrue"
                          }
                        ]
                      }
                    ],
                    "guard" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                      "prefix" : {
                        "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                      },
                      "prefixSet" : {
                        "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                        "name" : "103"
                      }
                    },
                    "trueStatements" : [
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
                        "metric" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.LiteralLong",
                          "value" : 50
                        }
                      },
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.AddCommunity",
                        "expr" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.InlineCommunitySet",
                          "communities" : [
                            {
                              "prefix" : {
                                "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                                "value" : 3
                              },
                              "suffix" : {
                                "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                                "value" : 2
                              }
                            }
                          ]
                        }
                      },
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                        "type" : "ReturnTrue"
                      }
                    ]
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                  "prefix" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                  },
                  "prefixSet" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                    "name" : "101"
                  }
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
                    "metric" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.LiteralLong",
                      "value" : 50
                    }
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.AddCommunity",
                    "expr" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.InlineCommunitySet",
                      "communities" : [
                        {
                          "prefix" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                            "value" : 3
                          },
                          "suffix" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                            "value" : 2
                          }
                        }
                      ]
                    }
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ReturnTrue"
                  }
                ]
              }
            ]
          },
          "~BGP_COMMON_EXPORT_POLICY:default~" : {
            "name" : "~BGP_COMMON_EXPORT_POLICY:default~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.Disjunction",
                  "disjuncts" : [
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.Conjunction",
                      "conjuncts" : [
                        {
                          "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                          "prefix" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                          },
                          "prefixSet" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.ExplicitPrefixSet",
                            "prefixSpace" : [
                              "3.0.1.0/24"
                            ]
                          }
                        },
                        {
                          "class" : "org.batfish.datamodel.routing_policy.expr.Not",
                          "expr" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                            "protocol" : "bgp"
                          }
                        },
                        {
                          "class" : "org.batfish.datamodel.routing_policy.expr.Not",
                          "expr" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                            "protocol" : "ibgp"
                          }
                        },
                        {
                          "class" : "org.batfish.datamodel.routing_policy.expr.Not",
                          "expr" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                            "protocol" : "aggregate"
                          }
                        },
                        {
                          "class" : "org.batfish.datamodel.routing_policy.expr.WithEnvironmentExpr",
                          "expr" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.BooleanExprs$StaticBooleanExpr",
                            "type" : "True"
                          },
                          "postStatements" : [
                            {
                              "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                              "type" : "UnsetWriteIntermediateBgpAttributes"
                            }
                          ],
                          "postTrueStatements" : [
                            {
                              "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                              "type" : "SetReadIntermediateBgpAttributes"
                            },
                            {
                              "class" : "org.batfish.datamodel.routing_policy.statement.SetOrigin",
                              "originType" : {
                                "class" : "org.batfish.datamodel.routing_policy.expr.LiteralOrigin",
                                "originType" : "igp"
                              }
                            }
                          ],
                          "preStatements" : [
                            {
                              "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                              "type" : "SetWriteIntermediateBgpAttributes"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.Conjunction",
                      "conjuncts" : [
                        {
                          "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                          "prefix" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                          },
                          "prefixSet" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.ExplicitPrefixSet",
                            "prefixSpace" : [
                              "3.0.2.0/24"
                            ]
                          }
                        },
                        {
                          "class" : "org.batfish.datamodel.routing_policy.expr.Not",
                          "expr" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                            "protocol" : "bgp"
                          }
                        },
                        {
                          "class" : "org.batfish.datamodel.routing_policy.expr.Not",
                          "expr" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                            "protocol" : "ibgp"
                          }
                        },
                        {
                          "class" : "org.batfish.datamodel.routing_policy.expr.Not",
                          "expr" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                            "protocol" : "aggregate"
                          }
                        },
                        {
                          "class" : "org.batfish.datamodel.routing_policy.expr.WithEnvironmentExpr",
                          "expr" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.BooleanExprs$StaticBooleanExpr",
                            "type" : "True"
                          },
                          "postStatements" : [
                            {
                              "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                              "type" : "UnsetWriteIntermediateBgpAttributes"
                            }
                          ],
                          "postTrueStatements" : [
                            {
                              "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                              "type" : "SetReadIntermediateBgpAttributes"
                            },
                            {
                              "class" : "org.batfish.datamodel.routing_policy.statement.SetOrigin",
                              "originType" : {
                                "class" : "org.batfish.datamodel.routing_policy.expr.LiteralOrigin",
                                "originType" : "igp"
                              }
                            }
                          ],
                          "preStatements" : [
                            {
                              "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                              "type" : "SetWriteIntermediateBgpAttributes"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                      "protocol" : "bgp"
                    },
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                      "protocol" : "ibgp"
                    }
                  ]
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ReturnTrue"
                  }
                ]
              },
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                "type" : "ReturnFalse"
              }
            ]
          },
          "~BGP_PEER_EXPORT_POLICY:default:10.23.21.2~" : {
            "name" : "~BGP_PEER_EXPORT_POLICY:default:10.23.21.2~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "peer-export policy main conditional: exitAccept if true / exitReject if false",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitReject"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.Conjunction",
                  "conjuncts" : [
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                      "calledPolicyName" : "~BGP_COMMON_EXPORT_POLICY:default~"
                    },
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                      "calledPolicyName" : "as3_to_as2"
                    }
                  ]
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitAccept"
                  }
                ]
              }
            ]
          },
          "~BGP_PEER_EXPORT_POLICY:default:3.10.1.1~" : {
            "name" : "~BGP_PEER_EXPORT_POLICY:default:3.10.1.1~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "peer-export policy main conditional: exitAccept if true / exitReject if false",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitReject"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                  "calledPolicyName" : "~BGP_COMMON_EXPORT_POLICY:default~"
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitAccept"
                  }
                ]
              }
            ]
          },
          "~OSPF_EXPORT_POLICY:default~" : {
            "name" : "~OSPF_EXPORT_POLICY:default~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "OSPF export routes for connected",
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.Conjunction",
                  "conjuncts" : [
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                      "protocol" : "connected"
                    },
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.Not",
                      "expr" : {
                        "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                        "comment" : "match default route",
                        "prefix" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                        },
                        "prefixSet" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.ExplicitPrefixSet",
                          "prefixSpace" : [
                            "0.0.0.0/0"
                          ]
                        }
                      }
                    }
                  ]
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.SetOspfMetricType",
                    "metricType" : "E2"
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
                    "metric" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.LiteralLong",
                      "value" : 20
                    }
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitAccept"
                  }
                ]
              }
            ]
          }
        },
        "vendorFamily" : {
          "cisco" : {
            "aaa" : {
              "newModel" : false
            },
            "hostname" : "as3border1",
            "lines" : {
              "aux0" : {
                "name" : "aux0",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0
              },
              "con0" : {
                "name" : "con0",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0
              },
              "vty0" : {
                "name" : "vty0",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0
              },
              "vty1" : {
                "name" : "vty1",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0
              },
              "vty2" : {
                "name" : "vty2",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0
              },
              "vty3" : {
                "name" : "vty3",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0
              },
              "vty4" : {
                "name" : "vty4",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0
              }
            },
            "logging" : {
              "on" : true
            },
            "ntp" : {
              "servers" : {
                "18.18.18.18" : {
                  "name" : "18.18.18.18"
                },
                "23.23.23.23" : {
                  "name" : "23.23.23.23"
                }
              }
            },
            "services" : {
              "timestamps" : {
                "enabled" : true,
                "subservices" : {
                  "debug" : {
                    "enabled" : true,
                    "subservices" : {
                      "datetime" : {
                        "enabled" : true,
                        "subservices" : {
                          "msec" : {
                            "enabled" : true
                          }
                        }
                      }
                    }
                  },
                  "log" : {
                    "enabled" : true,
                    "subservices" : {
                      "datetime" : {
                        "enabled" : true,
                        "subservices" : {
                          "msec" : {
                            "enabled" : true
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "vrfs" : {
          "default" : {
            "name" : "default",
            "bgpProcess" : {
              "multipathEbgp" : true,
              "multipathEquivalentAsPathMatchMode" : "EXACT_PATH",
              "multipathIbgp" : true,
              "neighbors" : {
                "3.10.1.1/32" : {
                  "name" : "3.10.1.1/32",
                  "additionalPathsReceive" : true,
                  "additionalPathsSelectAll" : true,
                  "additionalPathsSend" : true,
                  "address" : "3.10.1.1",
                  "advertiseExternal" : false,
                  "advertiseInactive" : true,
                  "allowLocalAsIn" : false,
                  "allowRemoteAsOut" : false,
                  "clusterId" : 50397441,
                  "defaultMetric" : 0,
                  "dynamic" : false,
                  "ebgpMultihop" : false,
                  "enforceFirstAs" : false,
                  "exportPolicy" : "~BGP_PEER_EXPORT_POLICY:default:3.10.1.1~",
                  "group" : "as3",
                  "localAs" : 3,
                  "localIp" : "3.1.1.1",
                  "remoteAs" : 3,
                  "remotePrefix" : "3.10.1.1/32",
                  "routeReflectorClient" : false,
                  "sendCommunity" : true,
                  "vrf" : "default"
                },
                "10.23.21.2/32" : {
                  "name" : "10.23.21.2/32",
                  "additionalPathsReceive" : true,
                  "additionalPathsSelectAll" : true,
                  "additionalPathsSend" : true,
                  "address" : "10.23.21.2",
                  "advertiseExternal" : false,
                  "advertiseInactive" : true,
                  "allowLocalAsIn" : false,
                  "allowRemoteAsOut" : false,
                  "clusterId" : 50397441,
                  "defaultMetric" : 0,
                  "dynamic" : false,
                  "ebgpMultihop" : false,
                  "enforceFirstAs" : false,
                  "exportPolicy" : "~BGP_PEER_EXPORT_POLICY:default:10.23.21.2~",
                  "exportPolicySources" : [
                    "as3_to_as2"
                  ],
                  "group" : "as2",
                  "importPolicy" : "as2_to_as3",
                  "importPolicySources" : [
                    "as2_to_as3"
                  ],
                  "localAs" : 3,
                  "localIp" : "10.23.21.3",
                  "remoteAs" : 2,
                  "remotePrefix" : "10.23.21.2/32",
                  "routeReflectorClient" : false,
                  "sendCommunity" : true,
                  "vrf" : "default"
                }
              },
              "routerId" : "3.1.1.1",
              "tieBreaker" : "ARRIVAL_ORDER"
            },
            "interfaces" : [
              "Ethernet0/0",
              "GigabitEthernet0/0",
              "GigabitEthernet1/0",
              "Loopback0"
            ],
            "ospfProcess" : {
              "areas" : {
                "1" : {
                  "name" : 1,
                  "interfaces" : [
                    "GigabitEthernet0/0",
                    "Loopback0"
                  ]
                }
              },
              "exportPolicy" : "~OSPF_EXPORT_POLICY:default~",
              "processId" : "1",
              "referenceBandwidth" : 1.0E8,
              "routerId" : "3.1.1.1"
            }
          }
        }
      },
      "as3border2" : {
        "configurationFormat" : "CISCO_IOS",
        "name" : "as3border2",
        "communityLists" : {
          "as1_community" : {
            "lines" : [
              {
                "action" : "ACCEPT",
                "regex" : "(,|\\{|\\}|^|$| )1:"
              }
            ],
            "name" : "as1_community",
            "invertMatch" : false
          },
          "as2_community" : {
            "lines" : [
              {
                "action" : "ACCEPT",
                "regex" : "(,|\\{|\\}|^|$| )2:"
              }
            ],
            "name" : "as2_community",
            "invertMatch" : false
          },
          "as3_community" : {
            "lines" : [
              {
                "action" : "ACCEPT",
                "regex" : "(,|\\{|\\}|^|$| )3:"
              }
            ],
            "name" : "as3_community",
            "invertMatch" : false
          }
        },
        "defaultCrossZoneAction" : "ACCEPT",
        "defaultInboundAction" : "ACCEPT",
        "deviceType" : "ROUTER",
        "domainName" : "lab.local",
        "interfaces" : {
          "Ethernet0/0" : {
            "name" : "Ethernet0/0",
            "accessVlan" : 0,
            "active" : false,
            "autostate" : true,
            "bandwidth" : 1.0E7,
            "declaredNames" : [
              "Ethernet0/0"
            ],
            "isisL1InterfaceMode" : "unset",
            "isisL2InterfaceMode" : "unset",
            "mtu" : 1500,
            "nativeVlan" : 1,
            "ospfDeadInterval" : 0,
            "ospfEnabled" : false,
            "ospfHelloMultiplier" : 0,
            "ospfPassive" : false,
            "ospfPointToPoint" : false,
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "PHYSICAL",
            "vrf" : "default"
          },
          "GigabitEthernet0/0" : {
            "name" : "GigabitEthernet0/0",
            "accessVlan" : 0,
            "active" : true,
            "allPrefixes" : [
              "10.13.22.3/24"
            ],
            "autostate" : true,
            "bandwidth" : 1.0E9,
            "declaredNames" : [
              "GigabitEthernet0/0"
            ],
            "isisL1InterfaceMode" : "unset",
            "isisL2InterfaceMode" : "unset",
            "mtu" : 1500,
            "nativeVlan" : 1,
            "ospfDeadInterval" : 0,
            "ospfEnabled" : false,
            "ospfHelloMultiplier" : 0,
            "ospfPassive" : false,
            "ospfPointToPoint" : false,
            "prefix" : "10.13.22.3/24",
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "PHYSICAL",
            "vrf" : "default"
          },
          "GigabitEthernet1/0" : {
            "name" : "GigabitEthernet1/0",
            "accessVlan" : 0,
            "active" : true,
            "allPrefixes" : [
              "3.0.2.1/24"
            ],
            "autostate" : true,
            "bandwidth" : 1.0E9,
            "declaredNames" : [
              "GigabitEthernet1/0"
            ],
            "isisL1InterfaceMode" : "unset",
            "isisL2InterfaceMode" : "unset",
            "mtu" : 1500,
            "nativeVlan" : 1,
            "ospfArea" : 1,
            "ospfCost" : 1,
            "ospfDeadInterval" : 0,
            "ospfEnabled" : true,
            "ospfHelloMultiplier" : 0,
            "ospfPassive" : false,
            "ospfPointToPoint" : false,
            "prefix" : "3.0.2.1/24",
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "PHYSICAL",
            "vrf" : "default"
          },
          "Loopback0" : {
            "name" : "Loopback0",
            "accessVlan" : 0,
            "active" : true,
            "allPrefixes" : [
              "3.2.2.2/32"
            ],
            "autostate" : true,
            "bandwidth" : 1.0E12,
            "declaredNames" : [
              "Loopback0"
            ],
            "isisL1InterfaceMode" : "unset",
            "isisL2InterfaceMode" : "unset",
            "mtu" : 1500,
            "nativeVlan" : 1,
            "ospfArea" : 1,
            "ospfCost" : 1,
            "ospfDeadInterval" : 0,
            "ospfEnabled" : true,
            "ospfHelloMultiplier" : 0,
            "ospfPassive" : false,
            "ospfPointToPoint" : false,
            "prefix" : "3.2.2.2/32",
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "LOOPBACK",
            "vrf" : "default"
          }
        },
        "ipAccessLists" : {
          "101" : {
            "name" : "101",
            "lines" : [
              {
                "action" : "ACCEPT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "255.255.255.0"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "1.0.1.0"
                    }
                  }
                },
                "name" : "permit ip host 1.0.1.0 host 255.255.255.0"
              },
              {
                "action" : "ACCEPT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "255.255.255.0"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "1.0.2.0"
                    }
                  }
                },
                "name" : "permit ip host 1.0.2.0 host 255.255.255.0"
              }
            ]
          },
          "102" : {
            "name" : "102",
            "lines" : [
              {
                "action" : "ACCEPT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "255.0.0.0"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "2.0.0.0"
                    }
                  }
                },
                "name" : "permit ip host 2.0.0.0 host 255.0.0.0"
              },
              {
                "action" : "ACCEPT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "255.255.0.0"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "2.128.0.0"
                    }
                  }
                },
                "name" : "permit ip host 2.128.0.0 host 255.255.0.0"
              }
            ]
          },
          "103" : {
            "name" : "103",
            "lines" : [
              {
                "action" : "ACCEPT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "255.255.255.0"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "3.0.1.0"
                    }
                  }
                },
                "name" : "permit ip host 3.0.1.0 host 255.255.255.0"
              },
              {
                "action" : "ACCEPT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "255.255.255.0"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "3.0.2.0"
                    }
                  }
                },
                "name" : "permit ip host 3.0.2.0 host 255.255.255.0"
              }
            ]
          }
        },
        "ntpServers" : [
          "18.18.18.18",
          "23.23.23.23"
        ],
        "routeFilterLists" : {
          "101" : {
            "name" : "101",
            "lines" : [
              {
                "action" : "ACCEPT",
                "lengthRange" : "24-24",
                "prefix" : "1.0.1.0/24"
              },
              {
                "action" : "ACCEPT",
                "lengthRange" : "24-24",
                "prefix" : "1.0.2.0/24"
              }
            ]
          },
          "102" : {
            "name" : "102",
            "lines" : [
              {
                "action" : "ACCEPT",
                "lengthRange" : "8-8",
                "prefix" : "2.0.0.0/8"
              },
              {
                "action" : "ACCEPT",
                "lengthRange" : "16-16",
                "prefix" : "2.128.0.0/16"
              }
            ]
          },
          "103" : {
            "name" : "103",
            "lines" : [
              {
                "action" : "ACCEPT",
                "lengthRange" : "24-24",
                "prefix" : "3.0.1.0/24"
              },
              {
                "action" : "ACCEPT",
                "lengthRange" : "24-24",
                "prefix" : "3.0.2.0/24"
              }
            ]
          },
          "inbound_route_filter" : {
            "name" : "inbound_route_filter",
            "lines" : [
              {
                "action" : "REJECT",
                "lengthRange" : "8-32",
                "prefix" : "3.0.0.0/8"
              },
              {
                "action" : "ACCEPT",
                "lengthRange" : "0-32",
                "prefix" : "0.0.0.0/0"
              }
            ]
          }
        },
        "routingPolicies" : {
          "as1_to_as3" : {
            "name" : "as1_to_as3",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "~RMCLAUSE~as1_to_as3~100~",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ReturnLocalDefaultAction"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.MatchCommunitySet",
                  "expr" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.NamedCommunitySet",
                    "name" : "as1_community"
                  }
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.SetLocalPreference",
                    "localPreference" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.LiteralInt",
                      "value" : 350
                    }
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ReturnTrue"
                  }
                ]
              }
            ]
          },
          "as2_to_as3" : {
            "name" : "as2_to_as3",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "~RMCLAUSE~as2_to_as3~100~",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ReturnLocalDefaultAction"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.MatchCommunitySet",
                  "expr" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.NamedCommunitySet",
                    "name" : "as2_community"
                  }
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.SetLocalPreference",
                    "localPreference" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.LiteralInt",
                      "value" : 350
                    }
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ReturnTrue"
                  }
                ]
              }
            ]
          },
          "as3_to_as1" : {
            "name" : "as3_to_as1",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "~RMCLAUSE~as3_to_as1~2~",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.If",
                    "comment" : "~RMCLAUSE~as3_to_as1~3~",
                    "falseStatements" : [
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                        "type" : "ReturnLocalDefaultAction"
                      }
                    ],
                    "guard" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                      "prefix" : {
                        "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                      },
                      "prefixSet" : {
                        "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                        "name" : "103"
                      }
                    },
                    "trueStatements" : [
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
                        "metric" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.LiteralLong",
                          "value" : 50
                        }
                      },
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.AddCommunity",
                        "expr" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.InlineCommunitySet",
                          "communities" : [
                            {
                              "prefix" : {
                                "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                                "value" : 3
                              },
                              "suffix" : {
                                "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                                "value" : 1
                              }
                            }
                          ]
                        }
                      },
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                        "type" : "ReturnTrue"
                      }
                    ]
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                  "prefix" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                  },
                  "prefixSet" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                    "name" : "102"
                  }
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
                    "metric" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.LiteralLong",
                      "value" : 50
                    }
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.AddCommunity",
                    "expr" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.InlineCommunitySet",
                      "communities" : [
                        {
                          "prefix" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                            "value" : 3
                          },
                          "suffix" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                            "value" : 1
                          }
                        }
                      ]
                    }
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ReturnTrue"
                  }
                ]
              }
            ]
          },
          "as3_to_as2" : {
            "name" : "as3_to_as2",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "~RMCLAUSE~as3_to_as2~1~",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.If",
                    "comment" : "~RMCLAUSE~as3_to_as2~3~",
                    "falseStatements" : [
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                        "type" : "ReturnLocalDefaultAction"
                      }
                    ],
                    "guard" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                      "prefix" : {
                        "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                      },
                      "prefixSet" : {
                        "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                        "name" : "103"
                      }
                    },
                    "trueStatements" : [
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
                        "metric" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.LiteralLong",
                          "value" : 50
                        }
                      },
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.AddCommunity",
                        "expr" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.InlineCommunitySet",
                          "communities" : [
                            {
                              "prefix" : {
                                "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                                "value" : 3
                              },
                              "suffix" : {
                                "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                                "value" : 2
                              }
                            }
                          ]
                        }
                      },
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                        "type" : "ReturnTrue"
                      }
                    ]
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                  "prefix" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                  },
                  "prefixSet" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                    "name" : "101"
                  }
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
                    "metric" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.LiteralLong",
                      "value" : 50
                    }
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.AddCommunity",
                    "expr" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.InlineCommunitySet",
                      "communities" : [
                        {
                          "prefix" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                            "value" : 3
                          },
                          "suffix" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.LiteralCommunitySetElemHalf",
                            "value" : 2
                          }
                        }
                      ]
                    }
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ReturnTrue"
                  }
                ]
              }
            ]
          },
          "~BGP_COMMON_EXPORT_POLICY:default~" : {
            "name" : "~BGP_COMMON_EXPORT_POLICY:default~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.Disjunction",
                  "disjuncts" : [
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.Conjunction",
                      "conjuncts" : [
                        {
                          "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                          "prefix" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                          },
                          "prefixSet" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.ExplicitPrefixSet",
                            "prefixSpace" : [
                              "3.0.1.0/24"
                            ]
                          }
                        },
                        {
                          "class" : "org.batfish.datamodel.routing_policy.expr.Not",
                          "expr" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                            "protocol" : "bgp"
                          }
                        },
                        {
                          "class" : "org.batfish.datamodel.routing_policy.expr.Not",
                          "expr" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                            "protocol" : "ibgp"
                          }
                        },
                        {
                          "class" : "org.batfish.datamodel.routing_policy.expr.Not",
                          "expr" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                            "protocol" : "aggregate"
                          }
                        },
                        {
                          "class" : "org.batfish.datamodel.routing_policy.expr.WithEnvironmentExpr",
                          "expr" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.BooleanExprs$StaticBooleanExpr",
                            "type" : "True"
                          },
                          "postStatements" : [
                            {
                              "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                              "type" : "UnsetWriteIntermediateBgpAttributes"
                            }
                          ],
                          "postTrueStatements" : [
                            {
                              "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                              "type" : "SetReadIntermediateBgpAttributes"
                            },
                            {
                              "class" : "org.batfish.datamodel.routing_policy.statement.SetOrigin",
                              "originType" : {
                                "class" : "org.batfish.datamodel.routing_policy.expr.LiteralOrigin",
                                "originType" : "igp"
                              }
                            }
                          ],
                          "preStatements" : [
                            {
                              "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                              "type" : "SetWriteIntermediateBgpAttributes"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.Conjunction",
                      "conjuncts" : [
                        {
                          "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                          "prefix" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                          },
                          "prefixSet" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.ExplicitPrefixSet",
                            "prefixSpace" : [
                              "3.0.2.0/24"
                            ]
                          }
                        },
                        {
                          "class" : "org.batfish.datamodel.routing_policy.expr.Not",
                          "expr" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                            "protocol" : "bgp"
                          }
                        },
                        {
                          "class" : "org.batfish.datamodel.routing_policy.expr.Not",
                          "expr" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                            "protocol" : "ibgp"
                          }
                        },
                        {
                          "class" : "org.batfish.datamodel.routing_policy.expr.Not",
                          "expr" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                            "protocol" : "aggregate"
                          }
                        },
                        {
                          "class" : "org.batfish.datamodel.routing_policy.expr.WithEnvironmentExpr",
                          "expr" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.BooleanExprs$StaticBooleanExpr",
                            "type" : "True"
                          },
                          "postStatements" : [
                            {
                              "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                              "type" : "UnsetWriteIntermediateBgpAttributes"
                            }
                          ],
                          "postTrueStatements" : [
                            {
                              "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                              "type" : "SetReadIntermediateBgpAttributes"
                            },
                            {
                              "class" : "org.batfish.datamodel.routing_policy.statement.SetOrigin",
                              "originType" : {
                                "class" : "org.batfish.datamodel.routing_policy.expr.LiteralOrigin",
                                "originType" : "igp"
                              }
                            }
                          ],
                          "preStatements" : [
                            {
                              "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                              "type" : "SetWriteIntermediateBgpAttributes"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                      "protocol" : "bgp"
                    },
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                      "protocol" : "ibgp"
                    }
                  ]
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ReturnTrue"
                  }
                ]
              },
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                "type" : "ReturnFalse"
              }
            ]
          },
          "~BGP_PEER_EXPORT_POLICY:default:10.13.22.1~" : {
            "name" : "~BGP_PEER_EXPORT_POLICY:default:10.13.22.1~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "peer-export policy main conditional: exitAccept if true / exitReject if false",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitReject"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.Conjunction",
                  "conjuncts" : [
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                      "calledPolicyName" : "~BGP_COMMON_EXPORT_POLICY:default~"
                    },
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                      "calledPolicyName" : "as3_to_as1"
                    }
                  ]
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitAccept"
                  }
                ]
              }
            ]
          },
          "~BGP_PEER_EXPORT_POLICY:default:3.10.1.1~" : {
            "name" : "~BGP_PEER_EXPORT_POLICY:default:3.10.1.1~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "peer-export policy main conditional: exitAccept if true / exitReject if false",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitReject"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                  "calledPolicyName" : "~BGP_COMMON_EXPORT_POLICY:default~"
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitAccept"
                  }
                ]
              }
            ]
          },
          "~OSPF_EXPORT_POLICY:default~" : {
            "name" : "~OSPF_EXPORT_POLICY:default~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "OSPF export routes for connected",
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.Conjunction",
                  "conjuncts" : [
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                      "protocol" : "connected"
                    },
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.Not",
                      "expr" : {
                        "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                        "comment" : "match default route",
                        "prefix" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                        },
                        "prefixSet" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.ExplicitPrefixSet",
                          "prefixSpace" : [
                            "0.0.0.0/0"
                          ]
                        }
                      }
                    }
                  ]
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.SetOspfMetricType",
                    "metricType" : "E2"
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
                    "metric" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.LiteralLong",
                      "value" : 20
                    }
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitAccept"
                  }
                ]
              }
            ]
          }
        },
        "vendorFamily" : {
          "cisco" : {
            "aaa" : {
              "newModel" : false
            },
            "hostname" : "as3border2",
            "lines" : {
              "aux0" : {
                "name" : "aux0",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0
              },
              "con0" : {
                "name" : "con0",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0
              },
              "vty0" : {
                "name" : "vty0",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0
              },
              "vty1" : {
                "name" : "vty1",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0
              },
              "vty2" : {
                "name" : "vty2",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0
              },
              "vty3" : {
                "name" : "vty3",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0
              },
              "vty4" : {
                "name" : "vty4",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0
              }
            },
            "logging" : {
              "on" : true
            },
            "ntp" : {
              "servers" : {
                "18.18.18.18" : {
                  "name" : "18.18.18.18"
                },
                "23.23.23.23" : {
                  "name" : "23.23.23.23"
                }
              }
            },
            "services" : {
              "timestamps" : {
                "enabled" : true,
                "subservices" : {
                  "debug" : {
                    "enabled" : true,
                    "subservices" : {
                      "datetime" : {
                        "enabled" : true,
                        "subservices" : {
                          "msec" : {
                            "enabled" : true
                          }
                        }
                      }
                    }
                  },
                  "log" : {
                    "enabled" : true,
                    "subservices" : {
                      "datetime" : {
                        "enabled" : true,
                        "subservices" : {
                          "msec" : {
                            "enabled" : true
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "vrfs" : {
          "default" : {
            "name" : "default",
            "bgpProcess" : {
              "multipathEbgp" : true,
              "multipathEquivalentAsPathMatchMode" : "EXACT_PATH",
              "multipathIbgp" : true,
              "neighbors" : {
                "3.10.1.1/32" : {
                  "name" : "3.10.1.1/32",
                  "additionalPathsReceive" : true,
                  "additionalPathsSelectAll" : true,
                  "additionalPathsSend" : true,
                  "address" : "3.10.1.1",
                  "advertiseExternal" : false,
                  "advertiseInactive" : true,
                  "allowLocalAsIn" : false,
                  "allowRemoteAsOut" : false,
                  "clusterId" : 50463234,
                  "defaultMetric" : 0,
                  "dynamic" : false,
                  "ebgpMultihop" : false,
                  "enforceFirstAs" : false,
                  "exportPolicy" : "~BGP_PEER_EXPORT_POLICY:default:3.10.1.1~",
                  "group" : "as3",
                  "localAs" : 3,
                  "localIp" : "3.2.2.2",
                  "remoteAs" : 3,
                  "remotePrefix" : "3.10.1.1/32",
                  "routeReflectorClient" : false,
                  "sendCommunity" : true,
                  "vrf" : "default"
                },
                "10.13.22.1/32" : {
                  "name" : "10.13.22.1/32",
                  "additionalPathsReceive" : true,
                  "additionalPathsSelectAll" : true,
                  "additionalPathsSend" : true,
                  "address" : "10.13.22.1",
                  "advertiseExternal" : false,
                  "advertiseInactive" : true,
                  "allowLocalAsIn" : false,
                  "allowRemoteAsOut" : false,
                  "clusterId" : 50463234,
                  "defaultMetric" : 0,
                  "dynamic" : false,
                  "ebgpMultihop" : false,
                  "enforceFirstAs" : false,
                  "exportPolicy" : "~BGP_PEER_EXPORT_POLICY:default:10.13.22.1~",
                  "exportPolicySources" : [
                    "as3_to_as1"
                  ],
                  "group" : "as1",
                  "importPolicy" : "as1_to_as3",
                  "importPolicySources" : [
                    "as1_to_as3"
                  ],
                  "localAs" : 3,
                  "localIp" : "10.13.22.3",
                  "remoteAs" : 1,
                  "remotePrefix" : "10.13.22.1/32",
                  "routeReflectorClient" : false,
                  "sendCommunity" : true,
                  "vrf" : "default"
                }
              },
              "routerId" : "3.2.2.2",
              "tieBreaker" : "ARRIVAL_ORDER"
            },
            "interfaces" : [
              "Ethernet0/0",
              "GigabitEthernet0/0",
              "GigabitEthernet1/0",
              "Loopback0"
            ],
            "ospfProcess" : {
              "areas" : {
                "1" : {
                  "name" : 1,
                  "interfaces" : [
                    "GigabitEthernet1/0",
                    "Loopback0"
                  ]
                }
              },
              "exportPolicy" : "~OSPF_EXPORT_POLICY:default~",
              "processId" : "1",
              "referenceBandwidth" : 1.0E8,
              "routerId" : "3.2.2.2"
            }
          }
        }
      },
      "as3core1" : {
        "configurationFormat" : "CISCO_IOS",
        "name" : "as3core1",
        "defaultCrossZoneAction" : "ACCEPT",
        "defaultInboundAction" : "ACCEPT",
        "deviceType" : "ROUTER",
        "domainName" : "lab.local",
        "interfaces" : {
          "Ethernet0/0" : {
            "name" : "Ethernet0/0",
            "accessVlan" : 0,
            "active" : false,
            "autostate" : true,
            "bandwidth" : 1.0E7,
            "declaredNames" : [
              "Ethernet0/0"
            ],
            "isisL1InterfaceMode" : "unset",
            "isisL2InterfaceMode" : "unset",
            "mtu" : 1500,
            "nativeVlan" : 1,
            "ospfDeadInterval" : 0,
            "ospfEnabled" : false,
            "ospfHelloMultiplier" : 0,
            "ospfPassive" : false,
            "ospfPointToPoint" : false,
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "PHYSICAL",
            "vrf" : "default"
          },
          "GigabitEthernet0/0" : {
            "name" : "GigabitEthernet0/0",
            "accessVlan" : 0,
            "active" : true,
            "allPrefixes" : [
              "3.0.2.2/24"
            ],
            "autostate" : true,
            "bandwidth" : 1.0E9,
            "declaredNames" : [
              "GigabitEthernet0/0"
            ],
            "isisL1InterfaceMode" : "unset",
            "isisL2InterfaceMode" : "unset",
            "mtu" : 1500,
            "nativeVlan" : 1,
            "ospfArea" : 1,
            "ospfCost" : 1,
            "ospfDeadInterval" : 0,
            "ospfEnabled" : true,
            "ospfHelloMultiplier" : 0,
            "ospfPassive" : false,
            "ospfPointToPoint" : false,
            "prefix" : "3.0.2.2/24",
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "PHYSICAL",
            "vrf" : "default"
          },
          "GigabitEthernet1/0" : {
            "name" : "GigabitEthernet1/0",
            "accessVlan" : 0,
            "active" : true,
            "allPrefixes" : [
              "3.0.1.2/24"
            ],
            "autostate" : true,
            "bandwidth" : 1.0E9,
            "declaredNames" : [
              "GigabitEthernet1/0"
            ],
            "isisL1InterfaceMode" : "unset",
            "isisL2InterfaceMode" : "unset",
            "mtu" : 1500,
            "nativeVlan" : 1,
            "ospfArea" : 1,
            "ospfCost" : 1,
            "ospfDeadInterval" : 0,
            "ospfEnabled" : true,
            "ospfHelloMultiplier" : 0,
            "ospfPassive" : false,
            "ospfPointToPoint" : false,
            "prefix" : "3.0.1.2/24",
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "PHYSICAL",
            "vrf" : "default"
          },
          "GigabitEthernet2/0" : {
            "name" : "GigabitEthernet2/0",
            "accessVlan" : 0,
            "active" : true,
            "allPrefixes" : [
              "90.90.90.1/24"
            ],
            "autostate" : true,
            "bandwidth" : 1.0E9,
            "declaredNames" : [
              "GigabitEthernet2/0"
            ],
            "isisL1InterfaceMode" : "unset",
            "isisL2InterfaceMode" : "unset",
            "mtu" : 1500,
            "nativeVlan" : 1,
            "ospfDeadInterval" : 0,
            "ospfEnabled" : false,
            "ospfHelloMultiplier" : 0,
            "ospfPassive" : false,
            "ospfPointToPoint" : false,
            "prefix" : "90.90.90.1/24",
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "PHYSICAL",
            "vrf" : "default"
          },
          "GigabitEthernet3/0" : {
            "name" : "GigabitEthernet3/0",
            "accessVlan" : 0,
            "active" : true,
            "allPrefixes" : [
              "90.90.90.2/24"
            ],
            "autostate" : true,
            "bandwidth" : 1.0E9,
            "declaredNames" : [
              "GigabitEthernet3/0"
            ],
            "isisL1InterfaceMode" : "unset",
            "isisL2InterfaceMode" : "unset",
            "mtu" : 1500,
            "nativeVlan" : 1,
            "ospfDeadInterval" : 0,
            "ospfEnabled" : false,
            "ospfHelloMultiplier" : 0,
            "ospfPassive" : false,
            "ospfPointToPoint" : false,
            "prefix" : "90.90.90.2/24",
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "PHYSICAL",
            "vrf" : "default"
          },
          "Loopback0" : {
            "name" : "Loopback0",
            "accessVlan" : 0,
            "active" : true,
            "allPrefixes" : [
              "3.10.1.1/32"
            ],
            "autostate" : true,
            "bandwidth" : 1.0E12,
            "declaredNames" : [
              "Loopback0"
            ],
            "isisL1InterfaceMode" : "unset",
            "isisL2InterfaceMode" : "unset",
            "mtu" : 1500,
            "nativeVlan" : 1,
            "ospfArea" : 1,
            "ospfCost" : 1,
            "ospfDeadInterval" : 0,
            "ospfEnabled" : true,
            "ospfHelloMultiplier" : 0,
            "ospfPassive" : false,
            "ospfPointToPoint" : false,
            "prefix" : "3.10.1.1/32",
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "LOOPBACK",
            "vrf" : "default"
          }
        },
        "loggingServers" : [
          "1.1.1.1",
          "2.2.2.2"
        ],
        "routingPolicies" : {
          "~BGP_COMMON_EXPORT_POLICY:default~" : {
            "name" : "~BGP_COMMON_EXPORT_POLICY:default~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.Disjunction",
                  "disjuncts" : [
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.Conjunction",
                      "conjuncts" : [
                        {
                          "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                          "prefix" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                          },
                          "prefixSet" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.ExplicitPrefixSet",
                            "prefixSpace" : [
                              "3.0.1.0/24"
                            ]
                          }
                        },
                        {
                          "class" : "org.batfish.datamodel.routing_policy.expr.Not",
                          "expr" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                            "protocol" : "bgp"
                          }
                        },
                        {
                          "class" : "org.batfish.datamodel.routing_policy.expr.Not",
                          "expr" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                            "protocol" : "ibgp"
                          }
                        },
                        {
                          "class" : "org.batfish.datamodel.routing_policy.expr.Not",
                          "expr" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                            "protocol" : "aggregate"
                          }
                        },
                        {
                          "class" : "org.batfish.datamodel.routing_policy.expr.WithEnvironmentExpr",
                          "expr" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.BooleanExprs$StaticBooleanExpr",
                            "type" : "True"
                          },
                          "postStatements" : [
                            {
                              "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                              "type" : "UnsetWriteIntermediateBgpAttributes"
                            }
                          ],
                          "postTrueStatements" : [
                            {
                              "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                              "type" : "SetReadIntermediateBgpAttributes"
                            },
                            {
                              "class" : "org.batfish.datamodel.routing_policy.statement.SetOrigin",
                              "originType" : {
                                "class" : "org.batfish.datamodel.routing_policy.expr.LiteralOrigin",
                                "originType" : "igp"
                              }
                            }
                          ],
                          "preStatements" : [
                            {
                              "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                              "type" : "SetWriteIntermediateBgpAttributes"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.Conjunction",
                      "conjuncts" : [
                        {
                          "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                          "prefix" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                          },
                          "prefixSet" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.ExplicitPrefixSet",
                            "prefixSpace" : [
                              "3.0.2.0/24"
                            ]
                          }
                        },
                        {
                          "class" : "org.batfish.datamodel.routing_policy.expr.Not",
                          "expr" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                            "protocol" : "bgp"
                          }
                        },
                        {
                          "class" : "org.batfish.datamodel.routing_policy.expr.Not",
                          "expr" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                            "protocol" : "ibgp"
                          }
                        },
                        {
                          "class" : "org.batfish.datamodel.routing_policy.expr.Not",
                          "expr" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                            "protocol" : "aggregate"
                          }
                        },
                        {
                          "class" : "org.batfish.datamodel.routing_policy.expr.WithEnvironmentExpr",
                          "expr" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.BooleanExprs$StaticBooleanExpr",
                            "type" : "True"
                          },
                          "postStatements" : [
                            {
                              "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                              "type" : "UnsetWriteIntermediateBgpAttributes"
                            }
                          ],
                          "postTrueStatements" : [
                            {
                              "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                              "type" : "SetReadIntermediateBgpAttributes"
                            },
                            {
                              "class" : "org.batfish.datamodel.routing_policy.statement.SetOrigin",
                              "originType" : {
                                "class" : "org.batfish.datamodel.routing_policy.expr.LiteralOrigin",
                                "originType" : "igp"
                              }
                            }
                          ],
                          "preStatements" : [
                            {
                              "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                              "type" : "SetWriteIntermediateBgpAttributes"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                      "protocol" : "bgp"
                    },
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                      "protocol" : "ibgp"
                    }
                  ]
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ReturnTrue"
                  }
                ]
              },
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                "type" : "ReturnFalse"
              }
            ]
          },
          "~BGP_PEER_EXPORT_POLICY:default:3.1.1.1~" : {
            "name" : "~BGP_PEER_EXPORT_POLICY:default:3.1.1.1~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "peer-export policy main conditional: exitAccept if true / exitReject if false",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitReject"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                  "calledPolicyName" : "~BGP_COMMON_EXPORT_POLICY:default~"
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitAccept"
                  }
                ]
              }
            ]
          },
          "~BGP_PEER_EXPORT_POLICY:default:3.2.2.2~" : {
            "name" : "~BGP_PEER_EXPORT_POLICY:default:3.2.2.2~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "peer-export policy main conditional: exitAccept if true / exitReject if false",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitReject"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                  "calledPolicyName" : "~BGP_COMMON_EXPORT_POLICY:default~"
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitAccept"
                  }
                ]
              }
            ]
          },
          "~OSPF_EXPORT_POLICY:default~" : {
            "name" : "~OSPF_EXPORT_POLICY:default~"
          }
        },
        "vendorFamily" : {
          "cisco" : {
            "aaa" : {
              "newModel" : false
            },
            "hostname" : "as3core1",
            "lines" : {
              "aux0" : {
                "name" : "aux0",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0
              },
              "con0" : {
                "name" : "con0",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0
              },
              "vty0" : {
                "name" : "vty0",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0
              },
              "vty1" : {
                "name" : "vty1",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0
              },
              "vty2" : {
                "name" : "vty2",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0
              },
              "vty3" : {
                "name" : "vty3",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0
              },
              "vty4" : {
                "name" : "vty4",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0
              }
            },
            "logging" : {
              "hosts" : {
                "1.1.1.1" : {
                  "name" : "1.1.1.1"
                },
                "2.2.2.2" : {
                  "name" : "2.2.2.2"
                }
              },
              "on" : true
            },
            "services" : {
              "timestamps" : {
                "enabled" : true,
                "subservices" : {
                  "debug" : {
                    "enabled" : true,
                    "subservices" : {
                      "datetime" : {
                        "enabled" : true,
                        "subservices" : {
                          "msec" : {
                            "enabled" : true
                          }
                        }
                      }
                    }
                  },
                  "log" : {
                    "enabled" : true,
                    "subservices" : {
                      "datetime" : {
                        "enabled" : true,
                        "subservices" : {
                          "msec" : {
                            "enabled" : true
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "vrfs" : {
          "default" : {
            "name" : "default",
            "bgpProcess" : {
              "multipathEbgp" : true,
              "multipathEquivalentAsPathMatchMode" : "EXACT_PATH",
              "multipathIbgp" : true,
              "neighbors" : {
                "3.1.1.1/32" : {
                  "name" : "3.1.1.1/32",
                  "additionalPathsReceive" : true,
                  "additionalPathsSelectAll" : true,
                  "additionalPathsSend" : true,
                  "address" : "3.1.1.1",
                  "advertiseExternal" : false,
                  "advertiseInactive" : true,
                  "allowLocalAsIn" : false,
                  "allowRemoteAsOut" : false,
                  "clusterId" : 50987265,
                  "defaultMetric" : 0,
                  "dynamic" : false,
                  "ebgpMultihop" : false,
                  "enforceFirstAs" : false,
                  "exportPolicy" : "~BGP_PEER_EXPORT_POLICY:default:3.1.1.1~",
                  "group" : "as3",
                  "localAs" : 3,
                  "localIp" : "3.10.1.1",
                  "remoteAs" : 3,
                  "remotePrefix" : "3.1.1.1/32",
                  "routeReflectorClient" : true,
                  "sendCommunity" : true,
                  "vrf" : "default"
                },
                "3.2.2.2/32" : {
                  "name" : "3.2.2.2/32",
                  "additionalPathsReceive" : true,
                  "additionalPathsSelectAll" : true,
                  "additionalPathsSend" : true,
                  "address" : "3.2.2.2",
                  "advertiseExternal" : false,
                  "advertiseInactive" : true,
                  "allowLocalAsIn" : false,
                  "allowRemoteAsOut" : false,
                  "clusterId" : 50987265,
                  "defaultMetric" : 0,
                  "dynamic" : false,
                  "ebgpMultihop" : false,
                  "enforceFirstAs" : false,
                  "exportPolicy" : "~BGP_PEER_EXPORT_POLICY:default:3.2.2.2~",
                  "group" : "as3",
                  "localAs" : 3,
                  "localIp" : "3.10.1.1",
                  "remoteAs" : 3,
                  "remotePrefix" : "3.2.2.2/32",
                  "routeReflectorClient" : true,
                  "sendCommunity" : true,
                  "vrf" : "default"
                }
              },
              "routerId" : "3.10.1.1",
              "tieBreaker" : "ARRIVAL_ORDER"
            },
            "interfaces" : [
              "Ethernet0/0",
              "GigabitEthernet0/0",
              "GigabitEthernet1/0",
              "GigabitEthernet2/0",
              "GigabitEthernet3/0",
              "Loopback0"
            ],
            "ospfProcess" : {
              "areas" : {
                "1" : {
                  "name" : 1,
                  "interfaces" : [
                    "GigabitEthernet0/0",
                    "GigabitEthernet1/0",
                    "Loopback0"
                  ]
                }
              },
              "exportPolicy" : "~OSPF_EXPORT_POLICY:default~",
              "processId" : "1",
              "referenceBandwidth" : 1.0E8,
              "routerId" : "3.10.1.1"
            }
          }
        }
      },
      "host1" : {
        "configurationFormat" : "HOST",
        "name" : "host1",
        "defaultCrossZoneAction" : "ACCEPT",
        "defaultInboundAction" : "ACCEPT",
        "deviceType" : "HOST",
        "interfaces" : {
          "eth0" : {
            "name" : "eth0",
            "accessVlan" : 0,
            "active" : true,
            "allPrefixes" : [
              "2.128.0.101/24"
            ],
            "autostate" : true,
            "bandwidth" : 1.0E9,
            "declaredNames" : [
              "eth0"
            ],
            "incomingFilter" : "filter::INPUT",
            "isisL1InterfaceMode" : "unset",
            "isisL2InterfaceMode" : "unset",
            "mtu" : 1500,
            "nativeVlan" : 1,
            "ospfDeadInterval" : 0,
            "ospfEnabled" : false,
            "ospfHelloMultiplier" : 0,
            "ospfPassive" : false,
            "ospfPointToPoint" : false,
            "outgoingFilter" : "filter::OUTPUT",
            "prefix" : "2.128.0.101/24",
            "proxyArp" : false,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "PHYSICAL",
            "vrf" : "default"
          }
        },
        "ipAccessLists" : {
          "filter::FORWARD" : {
            "name" : "filter::FORWARD",
            "lines" : [
              {
                "action" : "ACCEPT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.TrueExpr"
                },
                "name" : "default"
              }
            ]
          },
          "filter::INPUT" : {
            "name" : "filter::INPUT",
            "lines" : [
              {
                "action" : "ACCEPT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstPorts" : [
                      "53-53"
                    ],
                    "ipProtocols" : [
                      "UDP"
                    ],
                    "negate" : false
                  }
                },
                "name" : "-p udp --dport 53 -j ACCEPT"
              },
              {
                "action" : "ACCEPT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstPorts" : [
                      "22-22"
                    ],
                    "ipProtocols" : [
                      "TCP"
                    ],
                    "negate" : false
                  }
                },
                "name" : "-p tcp --dport 22 -j ACCEPT"
              },
              {
                "action" : "REJECT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.TrueExpr"
                },
                "name" : "default"
              }
            ]
          },
          "filter::OUTPUT" : {
            "name" : "filter::OUTPUT",
            "lines" : [
              {
                "action" : "ACCEPT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.TrueExpr"
                },
                "name" : "default"
              }
            ]
          },
          "mangle::FORWARD" : {
            "name" : "mangle::FORWARD",
            "lines" : [
              {
                "action" : "ACCEPT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.TrueExpr"
                },
                "name" : "default"
              }
            ]
          },
          "mangle::INPUT" : {
            "name" : "mangle::INPUT",
            "lines" : [
              {
                "action" : "ACCEPT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.TrueExpr"
                },
                "name" : "default"
              }
            ]
          },
          "mangle::OUTPUT" : {
            "name" : "mangle::OUTPUT",
            "lines" : [
              {
                "action" : "ACCEPT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.TrueExpr"
                },
                "name" : "default"
              }
            ]
          },
          "mangle::POSTROUTING" : {
            "name" : "mangle::POSTROUTING",
            "lines" : [
              {
                "action" : "ACCEPT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.TrueExpr"
                },
                "name" : "default"
              }
            ]
          },
          "mangle::PREROUTING" : {
            "name" : "mangle::PREROUTING",
            "lines" : [
              {
                "action" : "ACCEPT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.TrueExpr"
                },
                "name" : "default"
              }
            ]
          },
          "nat::OUTPUT" : {
            "name" : "nat::OUTPUT",
            "lines" : [
              {
                "action" : "ACCEPT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.TrueExpr"
                },
                "name" : "default"
              }
            ]
          },
          "nat::POSTROUTING" : {
            "name" : "nat::POSTROUTING",
            "lines" : [
              {
                "action" : "ACCEPT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.TrueExpr"
                },
                "name" : "default"
              }
            ]
          },
          "nat::PREROUTING" : {
            "name" : "nat::PREROUTING",
            "lines" : [
              {
                "action" : "ACCEPT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.TrueExpr"
                },
                "name" : "default"
              }
            ]
          }
        },
        "vendorFamily" : { },
        "vrfs" : {
          "default" : {
            "name" : "default",
            "interfaces" : [
              "eth0"
            ],
            "staticRoutes" : [
              {
                "class" : "org.batfish.datamodel.StaticRoute",
                "administrativeCost" : 1,
                "network" : "0.0.0.0/0",
                "nextHopInterface" : "eth0",
                "nextHopIp" : "2.128.0.1",
                "tag" : -1
              }
            ]
          }
        }
      },
      "host2" : {
        "configurationFormat" : "HOST",
        "name" : "host2",
        "defaultCrossZoneAction" : "ACCEPT",
        "defaultInboundAction" : "ACCEPT",
        "deviceType" : "HOST",
        "interfaces" : {
          "eth0" : {
            "name" : "eth0",
            "accessVlan" : 0,
            "active" : true,
            "allPrefixes" : [
              "2.128.1.101/24"
            ],
            "autostate" : true,
            "bandwidth" : 1.0E9,
            "declaredNames" : [
              "eth0"
            ],
            "incomingFilter" : "filter::INPUT",
            "isisL1InterfaceMode" : "unset",
            "isisL2InterfaceMode" : "unset",
            "mtu" : 1500,
            "nativeVlan" : 1,
            "ospfDeadInterval" : 0,
            "ospfEnabled" : false,
            "ospfHelloMultiplier" : 0,
            "ospfPassive" : false,
            "ospfPointToPoint" : false,
            "outgoingFilter" : "filter::OUTPUT",
            "prefix" : "2.128.1.101/24",
            "proxyArp" : false,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "PHYSICAL",
            "vrf" : "default"
          }
        },
        "ipAccessLists" : {
          "filter::FORWARD" : {
            "name" : "filter::FORWARD",
            "lines" : [
              {
                "action" : "ACCEPT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.TrueExpr"
                },
                "name" : "default"
              }
            ]
          },
          "filter::INPUT" : {
            "name" : "filter::INPUT",
            "lines" : [
              {
                "action" : "ACCEPT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstPorts" : [
                      "22-22"
                    ],
                    "ipProtocols" : [
                      "TCP"
                    ],
                    "negate" : false
                  }
                },
                "name" : "-p tcp --dport 22 -j ACCEPT"
              },
              {
                "action" : "REJECT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.TrueExpr"
                },
                "name" : "default"
              }
            ]
          },
          "filter::OUTPUT" : {
            "name" : "filter::OUTPUT",
            "lines" : [
              {
                "action" : "REJECT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "2.128.0.101"
                    },
                    "negate" : false
                  }
                },
                "name" : "-d 2.128.0.101 -j DROP"
              },
              {
                "action" : "ACCEPT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.TrueExpr"
                },
                "name" : "default"
              }
            ]
          },
          "mangle::FORWARD" : {
            "name" : "mangle::FORWARD",
            "lines" : [
              {
                "action" : "ACCEPT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.TrueExpr"
                },
                "name" : "default"
              }
            ]
          },
          "mangle::INPUT" : {
            "name" : "mangle::INPUT",
            "lines" : [
              {
                "action" : "ACCEPT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.TrueExpr"
                },
                "name" : "default"
              }
            ]
          },
          "mangle::OUTPUT" : {
            "name" : "mangle::OUTPUT",
            "lines" : [
              {
                "action" : "ACCEPT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.TrueExpr"
                },
                "name" : "default"
              }
            ]
          },
          "mangle::POSTROUTING" : {
            "name" : "mangle::POSTROUTING",
            "lines" : [
              {
                "action" : "ACCEPT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.TrueExpr"
                },
                "name" : "default"
              }
            ]
          },
          "mangle::PREROUTING" : {
            "name" : "mangle::PREROUTING",
            "lines" : [
              {
                "action" : "ACCEPT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.TrueExpr"
                },
                "name" : "default"
              }
            ]
          },
          "nat::OUTPUT" : {
            "name" : "nat::OUTPUT",
            "lines" : [
              {
                "action" : "ACCEPT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.TrueExpr"
                },
                "name" : "default"
              }
            ]
          },
          "nat::POSTROUTING" : {
            "name" : "nat::POSTROUTING",
            "lines" : [
              {
                "action" : "ACCEPT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.TrueExpr"
                },
                "name" : "default"
              }
            ]
          },
          "nat::PREROUTING" : {
            "name" : "nat::PREROUTING",
            "lines" : [
              {
                "action" : "ACCEPT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.TrueExpr"
                },
                "name" : "default"
              }
            ]
          }
        },
        "vendorFamily" : { },
        "vrfs" : {
          "default" : {
            "name" : "default",
            "interfaces" : [
              "eth0"
            ],
            "staticRoutes" : [
              {
                "class" : "org.batfish.datamodel.StaticRoute",
                "administrativeCost" : 1,
                "network" : "0.0.0.0/0",
                "nextHopInterface" : "eth0",
                "nextHopIp" : "2.128.1.1",
                "tag" : -1
              }
            ]
          }
        }
      }
    }
  }
]