[
  {
    "class" : "org.batfish.question.VIModelQuestionPlugin$VIModelAnswerElement",
    "nodes" : {
      "as1border1" : {
        "configurationFormat" : "CISCO_IOS",
        "exportBgpFromBgpRib" : true,
        "generateBgpAggregatesFromMainRib" : false,
        "name" : "as1border1",
        "communityMatchExprs" : {
          "as1_community" : {
            "class" : "org.batfish.datamodel.routing_policy.communities.CommunityMatchRegex",
            "communityRendering" : {
              "class" : "org.batfish.datamodel.routing_policy.communities.ColonSeparatedRendering"
            },
            "regex" : "(,|\\{|\\}|^|$| )1:"
          },
          "as2_community" : {
            "class" : "org.batfish.datamodel.routing_policy.communities.CommunityMatchRegex",
            "communityRendering" : {
              "class" : "org.batfish.datamodel.routing_policy.communities.ColonSeparatedRendering"
            },
            "regex" : "(,|\\{|\\}|^|$| )2:"
          },
          "as3_community" : {
            "class" : "org.batfish.datamodel.routing_policy.communities.CommunityMatchRegex",
            "communityRendering" : {
              "class" : "org.batfish.datamodel.routing_policy.communities.ColonSeparatedRendering"
            },
            "regex" : "(,|\\{|\\}|^|$| )3:"
          }
        },
        "communitySetMatchExprs" : {
          "as1_community" : {
            "class" : "org.batfish.datamodel.routing_policy.communities.HasCommunity",
            "expr" : {
              "class" : "org.batfish.datamodel.routing_policy.communities.CommunityMatchRegex",
              "communityRendering" : {
                "class" : "org.batfish.datamodel.routing_policy.communities.ColonSeparatedRendering"
              },
              "regex" : "(,|\\{|\\}|^|$| )1:"
            }
          },
          "as2_community" : {
            "class" : "org.batfish.datamodel.routing_policy.communities.HasCommunity",
            "expr" : {
              "class" : "org.batfish.datamodel.routing_policy.communities.CommunityMatchRegex",
              "communityRendering" : {
                "class" : "org.batfish.datamodel.routing_policy.communities.ColonSeparatedRendering"
              },
              "regex" : "(,|\\{|\\}|^|$| )2:"
            }
          },
          "as3_community" : {
            "class" : "org.batfish.datamodel.routing_policy.communities.HasCommunity",
            "expr" : {
              "class" : "org.batfish.datamodel.routing_policy.communities.CommunityMatchRegex",
              "communityRendering" : {
                "class" : "org.batfish.datamodel.routing_policy.communities.ColonSeparatedRendering"
              },
              "regex" : "(,|\\{|\\}|^|$| )3:"
            }
          }
        },
        "defaultCrossZoneAction" : "PERMIT",
        "defaultInboundAction" : "PERMIT",
        "deviceModel" : "CISCO_UNSPECIFIED",
        "deviceType" : "ROUTER",
        "disconnectAdminDownInterfaces" : true,
        "domainName" : "lab.local",
        "humanName" : "as1border1",
        "interfaces" : {
          "Ethernet0/0" : {
            "name" : "Ethernet0/0",
            "active" : false,
            "additionalArpIps" : {
              "class" : "org.batfish.datamodel.EmptyIpSpace"
            },
            "adminUp" : false,
            "autostate" : true,
            "bandwidth" : 1.0E7,
            "blacklisted" : false,
            "declaredNames" : [
              "Ethernet0/0"
            ],
            "hmm" : false,
            "inactiveReason" : "ADMIN_DOWN",
            "lineUp" : true,
            "mtu" : 1500,
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "speed" : 1.0E7,
            "switchport" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "PHYSICAL",
            "vrf" : "default"
          },
          "GigabitEthernet0/0" : {
            "name" : "GigabitEthernet0/0",
            "active" : true,
            "additionalArpIps" : {
              "class" : "org.batfish.datamodel.EmptyIpSpace"
            },
            "adminUp" : true,
            "allPrefixes" : [
              "1.0.1.1/24"
            ],
            "autostate" : true,
            "bandwidth" : 1.0E9,
            "blacklisted" : false,
            "declaredNames" : [
              "GigabitEthernet0/0"
            ],
            "hmm" : false,
            "lineUp" : true,
            "mtu" : 1500,
            "ospfSettings" : {
              "area" : 1,
              "cost" : 1,
              "deadInterval" : 40,
              "enabled" : true,
              "helloInterval" : 10,
              "helloMultiplier" : 0,
              "networkType" : "BROADCAST",
              "passive" : false,
              "process" : "1"
            },
            "prefix" : "1.0.1.1/24",
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "speed" : 1.0E9,
            "switchport" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "PHYSICAL",
            "vrf" : "default"
          },
          "GigabitEthernet1/0" : {
            "name" : "GigabitEthernet1/0",
            "active" : true,
            "additionalArpIps" : {
              "class" : "org.batfish.datamodel.EmptyIpSpace"
            },
            "adminUp" : true,
            "allPrefixes" : [
              "10.12.11.1/24"
            ],
            "autostate" : true,
            "bandwidth" : 1.0E9,
            "blacklisted" : false,
            "declaredNames" : [
              "GigabitEthernet1/0"
            ],
            "hmm" : false,
            "lineUp" : true,
            "mtu" : 1500,
            "prefix" : "10.12.11.1/24",
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "speed" : 1.0E9,
            "switchport" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "PHYSICAL",
            "vrf" : "default"
          },
          "Loopback0" : {
            "name" : "Loopback0",
            "active" : true,
            "additionalArpIps" : {
              "class" : "org.batfish.datamodel.EmptyIpSpace"
            },
            "adminUp" : true,
            "allPrefixes" : [
              "1.1.1.1/32"
            ],
            "autostate" : true,
            "bandwidth" : 8.0E9,
            "blacklisted" : false,
            "declaredNames" : [
              "Loopback0"
            ],
            "hmm" : false,
            "lineUp" : true,
            "mtu" : 1500,
            "ospfSettings" : {
              "area" : 1,
              "cost" : 1,
              "deadInterval" : 40,
              "enabled" : true,
              "helloInterval" : 10,
              "helloMultiplier" : 0,
              "networkType" : "BROADCAST",
              "passive" : true,
              "process" : "1"
            },
            "prefix" : "1.1.1.1/32",
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "switchport" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "LOOPBACK",
            "vrf" : "default"
          }
        },
        "ipAccessLists" : {
          "101" : {
            "lines" : [
              {
                "class" : "org.batfish.datamodel.ExprAclLine",
                "action" : "PERMIT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "255.255.255.0"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "1.0.1.0"
                    }
                  }
                },
                "name" : "permit ip host 1.0.1.0 host 255.255.255.0",
                "traceElement" : {
                  "fragments" : [
                    {
                      "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                      "text" : "Matched line "
                    },
                    {
                      "class" : "org.batfish.datamodel.TraceElement$LinkFragment",
                      "text" : "permit ip host 1.0.1.0 host 255.255.255.0",
                      "vendorStructureId" : {
                        "filename" : "configs/as1border1.cfg",
                        "structureName" : "101: permit ip host 1.0.1.0 host 255.255.255.0",
                        "structureType" : "extended ipv4 access-list line"
                      }
                    }
                  ]
                },
                "vendorStructureId" : {
                  "filename" : "configs/as1border1.cfg",
                  "structureName" : "101: permit ip host 1.0.1.0 host 255.255.255.0",
                  "structureType" : "extended ipv4 access-list line"
                }
              },
              {
                "class" : "org.batfish.datamodel.ExprAclLine",
                "action" : "PERMIT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "255.255.255.0"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "1.0.2.0"
                    }
                  }
                },
                "name" : "permit ip host 1.0.2.0 host 255.255.255.0",
                "traceElement" : {
                  "fragments" : [
                    {
                      "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                      "text" : "Matched line "
                    },
                    {
                      "class" : "org.batfish.datamodel.TraceElement$LinkFragment",
                      "text" : "permit ip host 1.0.2.0 host 255.255.255.0",
                      "vendorStructureId" : {
                        "filename" : "configs/as1border1.cfg",
                        "structureName" : "101: permit ip host 1.0.2.0 host 255.255.255.0",
                        "structureType" : "extended ipv4 access-list line"
                      }
                    }
                  ]
                },
                "vendorStructureId" : {
                  "filename" : "configs/as1border1.cfg",
                  "structureName" : "101: permit ip host 1.0.2.0 host 255.255.255.0",
                  "structureType" : "extended ipv4 access-list line"
                }
              }
            ],
            "name" : "101",
            "sourceName" : "101",
            "sourceType" : "extended ipv4 access-list"
          },
          "102" : {
            "lines" : [
              {
                "class" : "org.batfish.datamodel.ExprAclLine",
                "action" : "PERMIT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "255.0.0.0"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "2.0.0.0"
                    }
                  }
                },
                "name" : "permit ip host 2.0.0.0 host 255.0.0.0",
                "traceElement" : {
                  "fragments" : [
                    {
                      "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                      "text" : "Matched line "
                    },
                    {
                      "class" : "org.batfish.datamodel.TraceElement$LinkFragment",
                      "text" : "permit ip host 2.0.0.0 host 255.0.0.0",
                      "vendorStructureId" : {
                        "filename" : "configs/as1border1.cfg",
                        "structureName" : "102: permit ip host 2.0.0.0 host 255.0.0.0",
                        "structureType" : "extended ipv4 access-list line"
                      }
                    }
                  ]
                },
                "vendorStructureId" : {
                  "filename" : "configs/as1border1.cfg",
                  "structureName" : "102: permit ip host 2.0.0.0 host 255.0.0.0",
                  "structureType" : "extended ipv4 access-list line"
                }
              },
              {
                "class" : "org.batfish.datamodel.ExprAclLine",
                "action" : "PERMIT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "255.255.0.0"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "2.128.0.0"
                    }
                  }
                },
                "name" : "permit ip host 2.128.0.0 host 255.255.0.0",
                "traceElement" : {
                  "fragments" : [
                    {
                      "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                      "text" : "Matched line "
                    },
                    {
                      "class" : "org.batfish.datamodel.TraceElement$LinkFragment",
                      "text" : "permit ip host 2.128.0.0 host 255.255.0.0",
                      "vendorStructureId" : {
                        "filename" : "configs/as1border1.cfg",
                        "structureName" : "102: permit ip host 2.128.0.0 host 255.255.0.0",
                        "structureType" : "extended ipv4 access-list line"
                      }
                    }
                  ]
                },
                "vendorStructureId" : {
                  "filename" : "configs/as1border1.cfg",
                  "structureName" : "102: permit ip host 2.128.0.0 host 255.255.0.0",
                  "structureType" : "extended ipv4 access-list line"
                }
              }
            ],
            "name" : "102",
            "sourceName" : "102",
            "sourceType" : "extended ipv4 access-list"
          },
          "103" : {
            "lines" : [
              {
                "class" : "org.batfish.datamodel.ExprAclLine",
                "action" : "PERMIT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "255.255.255.0"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "3.0.1.0"
                    }
                  }
                },
                "name" : "permit ip host 3.0.1.0 host 255.255.255.0",
                "traceElement" : {
                  "fragments" : [
                    {
                      "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                      "text" : "Matched line "
                    },
                    {
                      "class" : "org.batfish.datamodel.TraceElement$LinkFragment",
                      "text" : "permit ip host 3.0.1.0 host 255.255.255.0",
                      "vendorStructureId" : {
                        "filename" : "configs/as1border1.cfg",
                        "structureName" : "103: permit ip host 3.0.1.0 host 255.255.255.0",
                        "structureType" : "extended ipv4 access-list line"
                      }
                    }
                  ]
                },
                "vendorStructureId" : {
                  "filename" : "configs/as1border1.cfg",
                  "structureName" : "103: permit ip host 3.0.1.0 host 255.255.255.0",
                  "structureType" : "extended ipv4 access-list line"
                }
              },
              {
                "class" : "org.batfish.datamodel.ExprAclLine",
                "action" : "PERMIT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "255.255.255.0"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "3.0.2.0"
                    }
                  }
                },
                "name" : "permit ip host 3.0.2.0 host 255.255.255.0",
                "traceElement" : {
                  "fragments" : [
                    {
                      "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                      "text" : "Matched line "
                    },
                    {
                      "class" : "org.batfish.datamodel.TraceElement$LinkFragment",
                      "text" : "permit ip host 3.0.2.0 host 255.255.255.0",
                      "vendorStructureId" : {
                        "filename" : "configs/as1border1.cfg",
                        "structureName" : "103: permit ip host 3.0.2.0 host 255.255.255.0",
                        "structureType" : "extended ipv4 access-list line"
                      }
                    }
                  ]
                },
                "vendorStructureId" : {
                  "filename" : "configs/as1border1.cfg",
                  "structureName" : "103: permit ip host 3.0.2.0 host 255.255.255.0",
                  "structureType" : "extended ipv4 access-list line"
                }
              }
            ],
            "name" : "103",
            "sourceName" : "103",
            "sourceType" : "extended ipv4 access-list"
          }
        },
        "mainRibEnforceResolvability" : false,
        "routeFilterLists" : {
          "101" : {
            "lines" : [
              {
                "action" : "PERMIT",
                "ipWildcard" : "1.0.1.0/24",
                "lengthRange" : "24-24"
              },
              {
                "action" : "PERMIT",
                "ipWildcard" : "1.0.2.0/24",
                "lengthRange" : "24-24"
              }
            ],
            "name" : "101",
            "vendorStructureId" : {
              "filename" : "configs/as1border1.cfg",
              "structureName" : "101",
              "structureType" : "extended ipv4 access-list"
            }
          },
          "102" : {
            "lines" : [
              {
                "action" : "PERMIT",
                "ipWildcard" : "2.0.0.0/8",
                "lengthRange" : "8-8"
              },
              {
                "action" : "PERMIT",
                "ipWildcard" : "2.128.0.0/16",
                "lengthRange" : "16-16"
              }
            ],
            "name" : "102",
            "vendorStructureId" : {
              "filename" : "configs/as1border1.cfg",
              "structureName" : "102",
              "structureType" : "extended ipv4 access-list"
            }
          },
          "103" : {
            "lines" : [
              {
                "action" : "PERMIT",
                "ipWildcard" : "3.0.1.0/24",
                "lengthRange" : "24-24"
              },
              {
                "action" : "PERMIT",
                "ipWildcard" : "3.0.2.0/24",
                "lengthRange" : "24-24"
              }
            ],
            "name" : "103",
            "vendorStructureId" : {
              "filename" : "configs/as1border1.cfg",
              "structureName" : "103",
              "structureType" : "extended ipv4 access-list"
            }
          },
          "default_list" : {
            "lines" : [
              {
                "action" : "PERMIT",
                "ipWildcard" : "0.0.0.0/0",
                "lengthRange" : "0-0"
              }
            ],
            "name" : "default_list",
            "vendorStructureId" : {
              "filename" : "configs/as1border1.cfg",
              "structureName" : "default_list",
              "structureType" : "ipv4 prefix-list"
            }
          },
          "inbound_route_filter" : {
            "lines" : [
              {
                "action" : "DENY",
                "ipWildcard" : "1.0.0.0/8",
                "lengthRange" : "8-32"
              },
              {
                "action" : "PERMIT",
                "ipWildcard" : "0.0.0.0/0",
                "lengthRange" : "0-32"
              }
            ],
            "name" : "inbound_route_filter",
            "vendorStructureId" : {
              "filename" : "configs/as1border1.cfg",
              "structureName" : "inbound_route_filter",
              "structureType" : "ipv4 prefix-list"
            }
          }
        },
        "routingPolicies" : {
          "as1_to_as2" : {
            "name" : "as1_to_as2",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "~RMCLAUSE~as1_to_as2~1~",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.If",
                    "comment" : "~RMCLAUSE~as1_to_as2~3~",
                    "falseStatements" : [
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.If",
                        "comment" : "~RMCLAUSE~as1_to_as2~5~",
                        "falseStatements" : [
                          {
                            "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                            "type" : "ReturnLocalDefaultAction"
                          }
                        ],
                        "guard" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                          "prefix" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                          },
                          "prefixSet" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                            "name" : "default_list"
                          }
                        },
                        "trueStatements" : [
                          {
                            "class" : "org.batfish.datamodel.routing_policy.statement.TraceableStatement",
                            "innerStatements" : [
                              {
                                "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
                                "metric" : {
                                  "class" : "org.batfish.datamodel.routing_policy.expr.LiteralLong",
                                  "value" : 50
                                }
                              },
                              {
                                "class" : "org.batfish.datamodel.routing_policy.communities.SetCommunities",
                                "communitySetExpr" : {
                                  "class" : "org.batfish.datamodel.routing_policy.communities.CommunitySetUnion",
                                  "exprs" : [
                                    {
                                      "class" : "org.batfish.datamodel.routing_policy.communities.InputCommunities"
                                    },
                                    {
                                      "class" : "org.batfish.datamodel.routing_policy.communities.LiteralCommunitySet",
                                      "communitySet" : [
                                        "1:2"
                                      ]
                                    }
                                  ]
                                }
                              },
                              {
                                "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                                "type" : "ReturnTrue"
                              }
                            ],
                            "traceElement" : {
                              "fragments" : [
                                {
                                  "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                                  "text" : "Matched "
                                },
                                {
                                  "class" : "org.batfish.datamodel.TraceElement$LinkFragment",
                                  "text" : "route-map as1_to_as2 clause 5",
                                  "vendorStructureId" : {
                                    "filename" : "configs/as1border1.cfg",
                                    "structureName" : "as1_to_as2 5",
                                    "structureType" : "route-map-clause"
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    ],
                    "guard" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                      "prefix" : {
                        "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                      },
                      "prefixSet" : {
                        "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                        "name" : "103"
                      }
                    },
                    "trueStatements" : [
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.TraceableStatement",
                        "innerStatements" : [
                          {
                            "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
                            "metric" : {
                              "class" : "org.batfish.datamodel.routing_policy.expr.LiteralLong",
                              "value" : 50
                            }
                          },
                          {
                            "class" : "org.batfish.datamodel.routing_policy.communities.SetCommunities",
                            "communitySetExpr" : {
                              "class" : "org.batfish.datamodel.routing_policy.communities.CommunitySetUnion",
                              "exprs" : [
                                {
                                  "class" : "org.batfish.datamodel.routing_policy.communities.InputCommunities"
                                },
                                {
                                  "class" : "org.batfish.datamodel.routing_policy.communities.LiteralCommunitySet",
                                  "communitySet" : [
                                    "1:2"
                                  ]
                                }
                              ]
                            }
                          },
                          {
                            "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                            "type" : "ReturnTrue"
                          }
                        ],
                        "traceElement" : {
                          "fragments" : [
                            {
                              "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                              "text" : "Matched "
                            },
                            {
                              "class" : "org.batfish.datamodel.TraceElement$LinkFragment",
                              "text" : "route-map as1_to_as2 clause 3",
                              "vendorStructureId" : {
                                "filename" : "configs/as1border1.cfg",
                                "structureName" : "as1_to_as2 3",
                                "structureType" : "route-map-clause"
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                  "prefix" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                  },
                  "prefixSet" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                    "name" : "101"
                  }
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.TraceableStatement",
                    "innerStatements" : [
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
                        "metric" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.LiteralLong",
                          "value" : 50
                        }
                      },
                      {
                        "class" : "org.batfish.datamodel.routing_policy.communities.SetCommunities",
                        "communitySetExpr" : {
                          "class" : "org.batfish.datamodel.routing_policy.communities.CommunitySetUnion",
                          "exprs" : [
                            {
                              "class" : "org.batfish.datamodel.routing_policy.communities.InputCommunities"
                            },
                            {
                              "class" : "org.batfish.datamodel.routing_policy.communities.LiteralCommunitySet",
                              "communitySet" : [
                                "1:2"
                              ]
                            }
                          ]
                        }
                      },
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                        "type" : "ReturnTrue"
                      }
                    ],
                    "traceElement" : {
                      "fragments" : [
                        {
                          "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                          "text" : "Matched "
                        },
                        {
                          "class" : "org.batfish.datamodel.TraceElement$LinkFragment",
                          "text" : "route-map as1_to_as2 clause 1",
                          "vendorStructureId" : {
                            "filename" : "configs/as1border1.cfg",
                            "structureName" : "as1_to_as2 1",
                            "structureType" : "route-map-clause"
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            ]
          },
          "as1_to_as3" : {
            "name" : "as1_to_as3",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "~RMCLAUSE~as1_to_as3~1~",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.If",
                    "comment" : "~RMCLAUSE~as1_to_as3~2~",
                    "falseStatements" : [
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                        "type" : "ReturnLocalDefaultAction"
                      }
                    ],
                    "guard" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                      "prefix" : {
                        "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                      },
                      "prefixSet" : {
                        "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                        "name" : "102"
                      }
                    },
                    "trueStatements" : [
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.TraceableStatement",
                        "innerStatements" : [
                          {
                            "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
                            "metric" : {
                              "class" : "org.batfish.datamodel.routing_policy.expr.LiteralLong",
                              "value" : 50
                            }
                          },
                          {
                            "class" : "org.batfish.datamodel.routing_policy.communities.SetCommunities",
                            "communitySetExpr" : {
                              "class" : "org.batfish.datamodel.routing_policy.communities.CommunitySetUnion",
                              "exprs" : [
                                {
                                  "class" : "org.batfish.datamodel.routing_policy.communities.InputCommunities"
                                },
                                {
                                  "class" : "org.batfish.datamodel.routing_policy.communities.LiteralCommunitySet",
                                  "communitySet" : [
                                    "1:3"
                                  ]
                                }
                              ]
                            }
                          },
                          {
                            "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                            "type" : "ReturnTrue"
                          }
                        ],
                        "traceElement" : {
                          "fragments" : [
                            {
                              "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                              "text" : "Matched "
                            },
                            {
                              "class" : "org.batfish.datamodel.TraceElement$LinkFragment",
                              "text" : "route-map as1_to_as3 clause 2",
                              "vendorStructureId" : {
                                "filename" : "configs/as1border1.cfg",
                                "structureName" : "as1_to_as3 2",
                                "structureType" : "route-map-clause"
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                  "prefix" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                  },
                  "prefixSet" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                    "name" : "101"
                  }
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.TraceableStatement",
                    "innerStatements" : [
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
                        "metric" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.LiteralLong",
                          "value" : 50
                        }
                      },
                      {
                        "class" : "org.batfish.datamodel.routing_policy.communities.SetCommunities",
                        "communitySetExpr" : {
                          "class" : "org.batfish.datamodel.routing_policy.communities.CommunitySetUnion",
                          "exprs" : [
                            {
                              "class" : "org.batfish.datamodel.routing_policy.communities.InputCommunities"
                            },
                            {
                              "class" : "org.batfish.datamodel.routing_policy.communities.LiteralCommunitySet",
                              "communitySet" : [
                                "1:3"
                              ]
                            }
                          ]
                        }
                      },
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                        "type" : "ReturnTrue"
                      }
                    ],
                    "traceElement" : {
                      "fragments" : [
                        {
                          "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                          "text" : "Matched "
                        },
                        {
                          "class" : "org.batfish.datamodel.TraceElement$LinkFragment",
                          "text" : "route-map as1_to_as3 clause 1",
                          "vendorStructureId" : {
                            "filename" : "configs/as1border1.cfg",
                            "structureName" : "as1_to_as3 1",
                            "structureType" : "route-map-clause"
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            ]
          },
          "as2_to_as1" : {
            "name" : "as2_to_as1",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "~RMCLAUSE~as2_to_as1~100~",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ReturnLocalDefaultAction"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.communities.MatchCommunities",
                  "communitySetExpr" : {
                    "class" : "org.batfish.datamodel.routing_policy.communities.InputCommunities"
                  },
                  "communitySetMatchExpr" : {
                    "class" : "org.batfish.datamodel.routing_policy.communities.CommunitySetMatchExprReference",
                    "name" : "as2_community"
                  }
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.TraceableStatement",
                    "innerStatements" : [
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.SetLocalPreference",
                        "localPreference" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.LiteralLong",
                          "value" : 350
                        }
                      },
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                        "type" : "ReturnTrue"
                      }
                    ],
                    "traceElement" : {
                      "fragments" : [
                        {
                          "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                          "text" : "Matched "
                        },
                        {
                          "class" : "org.batfish.datamodel.TraceElement$LinkFragment",
                          "text" : "route-map as2_to_as1 clause 100",
                          "vendorStructureId" : {
                            "filename" : "configs/as1border1.cfg",
                            "structureName" : "as2_to_as1 100",
                            "structureType" : "route-map-clause"
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            ]
          },
          "as3_to_as1" : {
            "name" : "as3_to_as1",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "~RMCLAUSE~as3_to_as1~100~",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ReturnLocalDefaultAction"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.communities.MatchCommunities",
                  "communitySetExpr" : {
                    "class" : "org.batfish.datamodel.routing_policy.communities.InputCommunities"
                  },
                  "communitySetMatchExpr" : {
                    "class" : "org.batfish.datamodel.routing_policy.communities.CommunitySetMatchExprReference",
                    "name" : "as3_community"
                  }
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.TraceableStatement",
                    "innerStatements" : [
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.SetLocalPreference",
                        "localPreference" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.LiteralLong",
                          "value" : 350
                        }
                      },
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                        "type" : "ReturnTrue"
                      }
                    ],
                    "traceElement" : {
                      "fragments" : [
                        {
                          "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                          "text" : "Matched "
                        },
                        {
                          "class" : "org.batfish.datamodel.TraceElement$LinkFragment",
                          "text" : "route-map as3_to_as1 clause 100",
                          "vendorStructureId" : {
                            "filename" : "configs/as1border1.cfg",
                            "structureName" : "as3_to_as1 100",
                            "structureType" : "route-map-clause"
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            ]
          },
          "~BGP_COMMON_EXPORT_POLICY:default~" : {
            "name" : "~BGP_COMMON_EXPORT_POLICY:default~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                "type" : "ReturnTrue"
              }
            ]
          },
          "~BGP_PEER_EXPORT_POLICY:default:1.10.1.1~" : {
            "name" : "~BGP_PEER_EXPORT_POLICY:default:1.10.1.1~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "peer-export policy main conditional: exitAccept if true / exitReject if false",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitReject"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                  "calledPolicyName" : "~BGP_COMMON_EXPORT_POLICY:default~"
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitAccept"
                  }
                ]
              }
            ]
          },
          "~BGP_PEER_EXPORT_POLICY:default:10.12.11.2~" : {
            "name" : "~BGP_PEER_EXPORT_POLICY:default:10.12.11.2~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "peer-export policy main conditional: exitAccept if true / exitReject if false",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitReject"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.Conjunction",
                  "conjuncts" : [
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                      "calledPolicyName" : "~BGP_COMMON_EXPORT_POLICY:default~"
                    },
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                      "calledPolicyName" : "as1_to_as2"
                    }
                  ]
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitAccept"
                  }
                ]
              }
            ]
          },
          "~BGP_PEER_EXPORT_POLICY:default:3.2.2.2~" : {
            "name" : "~BGP_PEER_EXPORT_POLICY:default:3.2.2.2~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "peer-export policy main conditional: exitAccept if true / exitReject if false",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitReject"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                  "calledPolicyName" : "~BGP_COMMON_EXPORT_POLICY:default~"
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitAccept"
                  }
                ]
              }
            ]
          },
          "~BGP_PEER_EXPORT_POLICY:default:5.6.7.8~" : {
            "name" : "~BGP_PEER_EXPORT_POLICY:default:5.6.7.8~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "peer-export policy main conditional: exitAccept if true / exitReject if false",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitReject"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                  "calledPolicyName" : "~BGP_COMMON_EXPORT_POLICY:default~"
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitAccept"
                  }
                ]
              }
            ]
          },
          "~BGP_REDISTRIBUTION_POLICY:default~" : {
            "name" : "~BGP_REDISTRIBUTION_POLICY:default~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.SetWeight",
                "weight" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.LiteralInt",
                  "value" : 32768
                }
              },
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "Add network statement routes to BGP",
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.Conjunction",
                  "conjuncts" : [
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                      "prefix" : {
                        "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                      },
                      "prefixSet" : {
                        "class" : "org.batfish.datamodel.routing_policy.expr.ExplicitPrefixSet",
                        "prefixSpace" : [
                          "1.0.1.0/24"
                        ]
                      }
                    },
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.Not",
                      "expr" : {
                        "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                        "protocols" : [
                          "aggregate",
                          "bgp",
                          "ibgp"
                        ]
                      }
                    }
                  ]
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.SetOrigin",
                    "originType" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.LiteralOrigin",
                      "originType" : "igp"
                    }
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitAccept"
                  }
                ]
              },
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "Add network statement routes to BGP",
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.Conjunction",
                  "conjuncts" : [
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                      "prefix" : {
                        "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                      },
                      "prefixSet" : {
                        "class" : "org.batfish.datamodel.routing_policy.expr.ExplicitPrefixSet",
                        "prefixSpace" : [
                          "1.0.2.0/24"
                        ]
                      }
                    },
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.Not",
                      "expr" : {
                        "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                        "protocols" : [
                          "aggregate",
                          "bgp",
                          "ibgp"
                        ]
                      }
                    }
                  ]
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.SetOrigin",
                    "originType" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.LiteralOrigin",
                      "originType" : "igp"
                    }
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitAccept"
                  }
                ]
              },
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                "type" : "ExitReject"
              }
            ]
          },
          "~OSPF_EXPORT_POLICY:default:1~" : {
            "name" : "~OSPF_EXPORT_POLICY:default:1~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "OSPF export routes for connected",
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.Conjunction",
                  "conjuncts" : [
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                      "protocols" : [
                        "connected"
                      ]
                    },
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.Not",
                      "expr" : {
                        "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                        "comment" : "match default route",
                        "prefix" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                        },
                        "prefixSet" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.ExplicitPrefixSet",
                          "prefixSpace" : [
                            "0.0.0.0/0"
                          ]
                        }
                      }
                    }
                  ]
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.SetOspfMetricType",
                    "metricType" : "E2"
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
                    "metric" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.LiteralLong",
                      "value" : 20
                    }
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitAccept"
                  }
                ]
              }
            ]
          },
          "~RESOLUTION_POLICY~" : {
            "name" : "~RESOLUTION_POLICY~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ReturnTrue"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                  "comment" : "match default route",
                  "prefix" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                  },
                  "prefixSet" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.ExplicitPrefixSet",
                    "prefixSpace" : [
                      "0.0.0.0/0"
                    ]
                  }
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ReturnFalse"
                  }
                ]
              }
            ]
          }
        },
        "vendorFamily" : {
          "cisco" : {
            "aaa" : {
              "newModel" : false
            },
            "hostname" : "as1border1",
            "lines" : {
              "aux0" : {
                "name" : "aux0",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0,
                "lineType" : "AUX"
              },
              "con0" : {
                "name" : "con0",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0,
                "lineType" : "CON"
              },
              "vty0" : {
                "name" : "vty0",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0,
                "lineType" : "VTY"
              },
              "vty1" : {
                "name" : "vty1",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0,
                "lineType" : "VTY"
              },
              "vty2" : {
                "name" : "vty2",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0,
                "lineType" : "VTY"
              },
              "vty3" : {
                "name" : "vty3",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0,
                "lineType" : "VTY"
              },
              "vty4" : {
                "name" : "vty4",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0,
                "lineType" : "VTY"
              }
            },
            "logging" : {
              "on" : true
            },
            "services" : {
              "timestamps" : {
                "enabled" : true,
                "subservices" : {
                  "debug" : {
                    "enabled" : true,
                    "subservices" : {
                      "datetime" : {
                        "enabled" : true,
                        "subservices" : {
                          "msec" : {
                            "enabled" : true
                          }
                        }
                      }
                    }
                  },
                  "log" : {
                    "enabled" : true,
                    "subservices" : {
                      "datetime" : {
                        "enabled" : true,
                        "subservices" : {
                          "msec" : {
                            "enabled" : true
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "vrfs" : {
          "default" : {
            "name" : "default",
            "ospfProcesses" : {
              "1" : {
                "adminCosts" : {
                  "ospf" : 110,
                  "ospfE1" : 110,
                  "ospfE2" : 110,
                  "ospfIA" : 110,
                  "ospfIS" : 110
                },
                "areas" : {
                  "1" : {
                    "injectDefaultRoute" : true,
                    "interfaces" : [
                      "GigabitEthernet0/0",
                      "Loopback0"
                    ],
                    "metricOfDefaultRoute" : 0,
                    "name" : 1,
                    "stubType" : "NONE"
                  }
                },
                "exportPolicy" : "~OSPF_EXPORT_POLICY:default:1~",
                "processId" : "1",
                "referenceBandwidth" : 1.0E8,
                "routerId" : "1.1.1.1",
                "summaryAdminCost" : 254,
                "summaryDiscardMetric" : 0
              }
            },
            "bgpProcess" : {
              "clientToClientReflection" : true,
              "ebgpAdminCost" : 20,
              "ibgpAdminCost" : 200,
              "localAdminCost" : 200,
              "localOriginationTypeTieBreaker" : "NO_PREFERENCE",
              "networkNextHopIpTieBreaker" : "HIGHEST_NEXT_HOP_IP",
              "redistributeNextHopIpTieBreaker" : "HIGHEST_NEXT_HOP_IP",
              "redistributionPolicy" : "~BGP_REDISTRIBUTION_POLICY:default~",
              "routerId" : "1.1.1.1",
              "clusterListAsIbgpCost" : true,
              "multipathEbgp" : true,
              "multipathEquivalentAsPathMatchMode" : "EXACT_PATH",
              "multipathIbgp" : true,
              "neighbors" : {
                "1.10.1.1" : {
                  "class" : "org.batfish.datamodel.BgpActivePeerConfig",
                  "checkLocalIpOnAccept" : true,
                  "clusterId" : 16843009,
                  "defaultMetric" : 0,
                  "ebgpMultihop" : false,
                  "enforceFirstAs" : true,
                  "group" : "as1",
                  "ipv4UnicastAddressFamily" : {
                    "addressFamilyCapabilities" : {
                      "additionalPathsReceive" : true,
                      "additionalPathsSelectAll" : true,
                      "additionalPathsSend" : true,
                      "advertiseExternal" : false,
                      "advertiseInactive" : true,
                      "allowLocalAsIn" : false,
                      "allowRemoteAsOut" : "ALWAYS",
                      "sendCommunity" : true,
                      "sendExtendedCommunity" : false
                    },
                    "exportPolicy" : "~BGP_PEER_EXPORT_POLICY:default:1.10.1.1~",
                    "routeReflectorClient" : false
                  },
                  "localAs" : 1,
                  "localIp" : "1.1.1.1",
                  "peerAddress" : "1.10.1.1",
                  "remoteAsns" : "1",
                  "replaceNonLocalAsesOnExport" : false
                },
                "3.2.2.2" : {
                  "class" : "org.batfish.datamodel.BgpActivePeerConfig",
                  "checkLocalIpOnAccept" : true,
                  "clusterId" : 16843009,
                  "defaultMetric" : 0,
                  "ebgpMultihop" : false,
                  "enforceFirstAs" : true,
                  "group" : "bad-ebgp",
                  "ipv4UnicastAddressFamily" : {
                    "addressFamilyCapabilities" : {
                      "additionalPathsReceive" : true,
                      "additionalPathsSelectAll" : true,
                      "additionalPathsSend" : true,
                      "advertiseExternal" : false,
                      "advertiseInactive" : true,
                      "allowLocalAsIn" : false,
                      "allowRemoteAsOut" : "ALWAYS",
                      "sendCommunity" : false,
                      "sendExtendedCommunity" : false
                    },
                    "exportPolicy" : "~BGP_PEER_EXPORT_POLICY:default:3.2.2.2~",
                    "routeReflectorClient" : false
                  },
                  "localAs" : 1,
                  "peerAddress" : "3.2.2.2",
                  "remoteAsns" : "666",
                  "replaceNonLocalAsesOnExport" : false
                },
                "5.6.7.8" : {
                  "class" : "org.batfish.datamodel.BgpActivePeerConfig",
                  "checkLocalIpOnAccept" : true,
                  "clusterId" : 16843009,
                  "defaultMetric" : 0,
                  "ebgpMultihop" : false,
                  "enforceFirstAs" : true,
                  "group" : "xanadu",
                  "ipv4UnicastAddressFamily" : {
                    "addressFamilyCapabilities" : {
                      "additionalPathsReceive" : true,
                      "additionalPathsSelectAll" : true,
                      "additionalPathsSend" : true,
                      "advertiseExternal" : false,
                      "advertiseInactive" : true,
                      "allowLocalAsIn" : false,
                      "allowRemoteAsOut" : "ALWAYS",
                      "sendCommunity" : false,
                      "sendExtendedCommunity" : false
                    },
                    "exportPolicy" : "~BGP_PEER_EXPORT_POLICY:default:5.6.7.8~",
                    "routeReflectorClient" : false
                  },
                  "localAs" : 1,
                  "peerAddress" : "5.6.7.8",
                  "remoteAsns" : "555",
                  "replaceNonLocalAsesOnExport" : false
                },
                "10.12.11.2" : {
                  "class" : "org.batfish.datamodel.BgpActivePeerConfig",
                  "checkLocalIpOnAccept" : true,
                  "clusterId" : 16843009,
                  "defaultMetric" : 0,
                  "ebgpMultihop" : false,
                  "enforceFirstAs" : true,
                  "group" : "as2",
                  "ipv4UnicastAddressFamily" : {
                    "addressFamilyCapabilities" : {
                      "additionalPathsReceive" : true,
                      "additionalPathsSelectAll" : true,
                      "additionalPathsSend" : true,
                      "advertiseExternal" : false,
                      "advertiseInactive" : true,
                      "allowLocalAsIn" : false,
                      "allowRemoteAsOut" : "ALWAYS",
                      "sendCommunity" : true,
                      "sendExtendedCommunity" : false
                    },
                    "exportPolicy" : "~BGP_PEER_EXPORT_POLICY:default:10.12.11.2~",
                    "exportPolicySources" : [
                      "as1_to_as2"
                    ],
                    "importPolicy" : "as2_to_as1",
                    "importPolicySources" : [
                      "as2_to_as1"
                    ],
                    "routeReflectorClient" : false
                  },
                  "localAs" : 1,
                  "localIp" : "10.12.11.1",
                  "peerAddress" : "10.12.11.2",
                  "remoteAsns" : "2",
                  "replaceNonLocalAsesOnExport" : false
                }
              },
              "tieBreaker" : "ARRIVAL_ORDER"
            },
            "resolutionPolicy" : "~RESOLUTION_POLICY~"
          }
        }
      },
      "as1border2" : {
        "configurationFormat" : "CISCO_IOS",
        "exportBgpFromBgpRib" : true,
        "generateBgpAggregatesFromMainRib" : false,
        "name" : "as1border2",
        "communityMatchExprs" : {
          "as1_community" : {
            "class" : "org.batfish.datamodel.routing_policy.communities.CommunityMatchRegex",
            "communityRendering" : {
              "class" : "org.batfish.datamodel.routing_policy.communities.ColonSeparatedRendering"
            },
            "regex" : "(,|\\{|\\}|^|$| )1:"
          },
          "as2_community" : {
            "class" : "org.batfish.datamodel.routing_policy.communities.CommunityMatchRegex",
            "communityRendering" : {
              "class" : "org.batfish.datamodel.routing_policy.communities.ColonSeparatedRendering"
            },
            "regex" : "(,|\\{|\\}|^|$| )2:"
          },
          "as3_community" : {
            "class" : "org.batfish.datamodel.routing_policy.communities.CommunityMatchRegex",
            "communityRendering" : {
              "class" : "org.batfish.datamodel.routing_policy.communities.ColonSeparatedRendering"
            },
            "regex" : "(,|\\{|\\}|^|$| )3:"
          },
          "as4_community" : {
            "class" : "org.batfish.datamodel.routing_policy.communities.CommunityMatchRegex",
            "communityRendering" : {
              "class" : "org.batfish.datamodel.routing_policy.communities.ColonSeparatedRendering"
            },
            "regex" : "(,|\\{|\\}|^|$| )4:"
          }
        },
        "communitySetMatchExprs" : {
          "as1_community" : {
            "class" : "org.batfish.datamodel.routing_policy.communities.HasCommunity",
            "expr" : {
              "class" : "org.batfish.datamodel.routing_policy.communities.CommunityMatchRegex",
              "communityRendering" : {
                "class" : "org.batfish.datamodel.routing_policy.communities.ColonSeparatedRendering"
              },
              "regex" : "(,|\\{|\\}|^|$| )1:"
            }
          },
          "as2_community" : {
            "class" : "org.batfish.datamodel.routing_policy.communities.HasCommunity",
            "expr" : {
              "class" : "org.batfish.datamodel.routing_policy.communities.CommunityMatchRegex",
              "communityRendering" : {
                "class" : "org.batfish.datamodel.routing_policy.communities.ColonSeparatedRendering"
              },
              "regex" : "(,|\\{|\\}|^|$| )2:"
            }
          },
          "as3_community" : {
            "class" : "org.batfish.datamodel.routing_policy.communities.HasCommunity",
            "expr" : {
              "class" : "org.batfish.datamodel.routing_policy.communities.CommunityMatchRegex",
              "communityRendering" : {
                "class" : "org.batfish.datamodel.routing_policy.communities.ColonSeparatedRendering"
              },
              "regex" : "(,|\\{|\\}|^|$| )3:"
            }
          },
          "as4_community" : {
            "class" : "org.batfish.datamodel.routing_policy.communities.HasCommunity",
            "expr" : {
              "class" : "org.batfish.datamodel.routing_policy.communities.CommunityMatchRegex",
              "communityRendering" : {
                "class" : "org.batfish.datamodel.routing_policy.communities.ColonSeparatedRendering"
              },
              "regex" : "(,|\\{|\\}|^|$| )4:"
            }
          }
        },
        "defaultCrossZoneAction" : "PERMIT",
        "defaultInboundAction" : "PERMIT",
        "deviceModel" : "CISCO_UNSPECIFIED",
        "deviceType" : "ROUTER",
        "disconnectAdminDownInterfaces" : true,
        "domainName" : "lab.local",
        "humanName" : "as1border2",
        "interfaces" : {
          "Ethernet0/0" : {
            "name" : "Ethernet0/0",
            "active" : false,
            "additionalArpIps" : {
              "class" : "org.batfish.datamodel.EmptyIpSpace"
            },
            "adminUp" : false,
            "autostate" : true,
            "bandwidth" : 1.0E7,
            "blacklisted" : false,
            "declaredNames" : [
              "Ethernet0/0"
            ],
            "hmm" : false,
            "inactiveReason" : "ADMIN_DOWN",
            "lineUp" : true,
            "mtu" : 1500,
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "speed" : 1.0E7,
            "switchport" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "PHYSICAL",
            "vrf" : "default"
          },
          "GigabitEthernet0/0" : {
            "name" : "GigabitEthernet0/0",
            "active" : true,
            "additionalArpIps" : {
              "class" : "org.batfish.datamodel.EmptyIpSpace"
            },
            "adminUp" : true,
            "allPrefixes" : [
              "10.13.22.1/24"
            ],
            "autostate" : true,
            "bandwidth" : 1.0E9,
            "blacklisted" : false,
            "declaredNames" : [
              "GigabitEthernet0/0"
            ],
            "hmm" : false,
            "lineUp" : true,
            "mtu" : 1500,
            "prefix" : "10.13.22.1/24",
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "speed" : 1.0E9,
            "switchport" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "PHYSICAL",
            "vrf" : "default"
          },
          "GigabitEthernet1/0" : {
            "name" : "GigabitEthernet1/0",
            "active" : true,
            "additionalArpIps" : {
              "class" : "org.batfish.datamodel.EmptyIpSpace"
            },
            "adminUp" : true,
            "allPrefixes" : [
              "1.0.2.1/24"
            ],
            "autostate" : true,
            "bandwidth" : 1.0E9,
            "blacklisted" : false,
            "declaredNames" : [
              "GigabitEthernet1/0"
            ],
            "hmm" : false,
            "lineUp" : true,
            "mtu" : 1500,
            "ospfSettings" : {
              "area" : 1,
              "cost" : 1,
              "deadInterval" : 40,
              "enabled" : true,
              "helloInterval" : 10,
              "helloMultiplier" : 0,
              "networkType" : "BROADCAST",
              "passive" : false,
              "process" : "1"
            },
            "prefix" : "1.0.2.1/24",
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "speed" : 1.0E9,
            "switchport" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "PHYSICAL",
            "vrf" : "default"
          },
          "GigabitEthernet2/0" : {
            "name" : "GigabitEthernet2/0",
            "active" : true,
            "additionalArpIps" : {
              "class" : "org.batfish.datamodel.EmptyIpSpace"
            },
            "adminUp" : true,
            "allPrefixes" : [
              "10.14.22.1/24"
            ],
            "autostate" : true,
            "bandwidth" : 1.0E9,
            "blacklisted" : false,
            "declaredNames" : [
              "GigabitEthernet2/0"
            ],
            "hmm" : false,
            "lineUp" : true,
            "mtu" : 1500,
            "prefix" : "10.14.22.1/24",
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "speed" : 1.0E9,
            "switchport" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "PHYSICAL",
            "vrf" : "default"
          },
          "Loopback0" : {
            "name" : "Loopback0",
            "active" : true,
            "additionalArpIps" : {
              "class" : "org.batfish.datamodel.EmptyIpSpace"
            },
            "adminUp" : true,
            "allPrefixes" : [
              "1.2.2.2/32"
            ],
            "autostate" : true,
            "bandwidth" : 8.0E9,
            "blacklisted" : false,
            "declaredNames" : [
              "Loopback0"
            ],
            "hmm" : false,
            "lineUp" : true,
            "mtu" : 1500,
            "ospfSettings" : {
              "area" : 1,
              "cost" : 1,
              "deadInterval" : 40,
              "enabled" : true,
              "helloInterval" : 10,
              "helloMultiplier" : 0,
              "networkType" : "BROADCAST",
              "passive" : false,
              "process" : "1"
            },
            "prefix" : "1.2.2.2/32",
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "switchport" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "LOOPBACK",
            "vrf" : "default"
          }
        },
        "ipAccessLists" : {
          "101" : {
            "lines" : [
              {
                "class" : "org.batfish.datamodel.ExprAclLine",
                "action" : "PERMIT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "255.255.255.0"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "1.0.1.0"
                    }
                  }
                },
                "name" : "permit ip host 1.0.1.0 host 255.255.255.0",
                "traceElement" : {
                  "fragments" : [
                    {
                      "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                      "text" : "Matched line "
                    },
                    {
                      "class" : "org.batfish.datamodel.TraceElement$LinkFragment",
                      "text" : "permit ip host 1.0.1.0 host 255.255.255.0",
                      "vendorStructureId" : {
                        "filename" : "configs/as1border2.cfg",
                        "structureName" : "101: permit ip host 1.0.1.0 host 255.255.255.0",
                        "structureType" : "extended ipv4 access-list line"
                      }
                    }
                  ]
                },
                "vendorStructureId" : {
                  "filename" : "configs/as1border2.cfg",
                  "structureName" : "101: permit ip host 1.0.1.0 host 255.255.255.0",
                  "structureType" : "extended ipv4 access-list line"
                }
              },
              {
                "class" : "org.batfish.datamodel.ExprAclLine",
                "action" : "PERMIT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "255.255.255.0"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "1.0.2.0"
                    }
                  }
                },
                "name" : "permit ip host 1.0.2.0 host 255.255.255.0",
                "traceElement" : {
                  "fragments" : [
                    {
                      "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                      "text" : "Matched line "
                    },
                    {
                      "class" : "org.batfish.datamodel.TraceElement$LinkFragment",
                      "text" : "permit ip host 1.0.2.0 host 255.255.255.0",
                      "vendorStructureId" : {
                        "filename" : "configs/as1border2.cfg",
                        "structureName" : "101: permit ip host 1.0.2.0 host 255.255.255.0",
                        "structureType" : "extended ipv4 access-list line"
                      }
                    }
                  ]
                },
                "vendorStructureId" : {
                  "filename" : "configs/as1border2.cfg",
                  "structureName" : "101: permit ip host 1.0.2.0 host 255.255.255.0",
                  "structureType" : "extended ipv4 access-list line"
                }
              }
            ],
            "name" : "101",
            "sourceName" : "101",
            "sourceType" : "extended ipv4 access-list"
          },
          "102" : {
            "lines" : [
              {
                "class" : "org.batfish.datamodel.ExprAclLine",
                "action" : "PERMIT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "255.0.0.0"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "2.0.0.0"
                    }
                  }
                },
                "name" : "permit ip host 2.0.0.0 host 255.0.0.0",
                "traceElement" : {
                  "fragments" : [
                    {
                      "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                      "text" : "Matched line "
                    },
                    {
                      "class" : "org.batfish.datamodel.TraceElement$LinkFragment",
                      "text" : "permit ip host 2.0.0.0 host 255.0.0.0",
                      "vendorStructureId" : {
                        "filename" : "configs/as1border2.cfg",
                        "structureName" : "102: permit ip host 2.0.0.0 host 255.0.0.0",
                        "structureType" : "extended ipv4 access-list line"
                      }
                    }
                  ]
                },
                "vendorStructureId" : {
                  "filename" : "configs/as1border2.cfg",
                  "structureName" : "102: permit ip host 2.0.0.0 host 255.0.0.0",
                  "structureType" : "extended ipv4 access-list line"
                }
              },
              {
                "class" : "org.batfish.datamodel.ExprAclLine",
                "action" : "PERMIT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "255.255.0.0"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "2.128.0.0"
                    }
                  }
                },
                "name" : "permit ip host 2.128.0.0 host 255.255.0.0",
                "traceElement" : {
                  "fragments" : [
                    {
                      "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                      "text" : "Matched line "
                    },
                    {
                      "class" : "org.batfish.datamodel.TraceElement$LinkFragment",
                      "text" : "permit ip host 2.128.0.0 host 255.255.0.0",
                      "vendorStructureId" : {
                        "filename" : "configs/as1border2.cfg",
                        "structureName" : "102: permit ip host 2.128.0.0 host 255.255.0.0",
                        "structureType" : "extended ipv4 access-list line"
                      }
                    }
                  ]
                },
                "vendorStructureId" : {
                  "filename" : "configs/as1border2.cfg",
                  "structureName" : "102: permit ip host 2.128.0.0 host 255.255.0.0",
                  "structureType" : "extended ipv4 access-list line"
                }
              }
            ],
            "name" : "102",
            "sourceName" : "102",
            "sourceType" : "extended ipv4 access-list"
          },
          "103" : {
            "lines" : [
              {
                "class" : "org.batfish.datamodel.ExprAclLine",
                "action" : "PERMIT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "255.255.255.0"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "3.0.1.0"
                    }
                  }
                },
                "name" : "permit ip host 3.0.1.0 host 255.255.255.0",
                "traceElement" : {
                  "fragments" : [
                    {
                      "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                      "text" : "Matched line "
                    },
                    {
                      "class" : "org.batfish.datamodel.TraceElement$LinkFragment",
                      "text" : "permit ip host 3.0.1.0 host 255.255.255.0",
                      "vendorStructureId" : {
                        "filename" : "configs/as1border2.cfg",
                        "structureName" : "103: permit ip host 3.0.1.0 host 255.255.255.0",
                        "structureType" : "extended ipv4 access-list line"
                      }
                    }
                  ]
                },
                "vendorStructureId" : {
                  "filename" : "configs/as1border2.cfg",
                  "structureName" : "103: permit ip host 3.0.1.0 host 255.255.255.0",
                  "structureType" : "extended ipv4 access-list line"
                }
              }
            ],
            "name" : "103",
            "sourceName" : "103",
            "sourceType" : "extended ipv4 access-list"
          }
        },
        "mainRibEnforceResolvability" : false,
        "ntpServers" : [
          "18.18.18.18",
          "23.23.23.23"
        ],
        "routeFilterLists" : {
          "101" : {
            "lines" : [
              {
                "action" : "PERMIT",
                "ipWildcard" : "1.0.1.0/24",
                "lengthRange" : "24-24"
              },
              {
                "action" : "PERMIT",
                "ipWildcard" : "1.0.2.0/24",
                "lengthRange" : "24-24"
              }
            ],
            "name" : "101",
            "vendorStructureId" : {
              "filename" : "configs/as1border2.cfg",
              "structureName" : "101",
              "structureType" : "extended ipv4 access-list"
            }
          },
          "102" : {
            "lines" : [
              {
                "action" : "PERMIT",
                "ipWildcard" : "2.0.0.0/8",
                "lengthRange" : "8-8"
              },
              {
                "action" : "PERMIT",
                "ipWildcard" : "2.128.0.0/16",
                "lengthRange" : "16-16"
              }
            ],
            "name" : "102",
            "vendorStructureId" : {
              "filename" : "configs/as1border2.cfg",
              "structureName" : "102",
              "structureType" : "extended ipv4 access-list"
            }
          },
          "103" : {
            "lines" : [
              {
                "action" : "PERMIT",
                "ipWildcard" : "3.0.1.0/24",
                "lengthRange" : "24-24"
              }
            ],
            "name" : "103",
            "vendorStructureId" : {
              "filename" : "configs/as1border2.cfg",
              "structureName" : "103",
              "structureType" : "extended ipv4 access-list"
            }
          },
          "as4-prefixes" : {
            "lines" : [
              {
                "action" : "PERMIT",
                "ipWildcard" : "4.0.0.0/8",
                "lengthRange" : "8-32"
              }
            ],
            "name" : "as4-prefixes",
            "vendorStructureId" : {
              "filename" : "configs/as1border2.cfg",
              "structureName" : "as4-prefixes",
              "structureType" : "ipv4 prefix-list"
            }
          },
          "inbound_route_filter" : {
            "lines" : [
              {
                "action" : "DENY",
                "ipWildcard" : "1.0.0.0/8",
                "lengthRange" : "8-32"
              },
              {
                "action" : "PERMIT",
                "ipWildcard" : "0.0.0.0/0",
                "lengthRange" : "0-32"
              }
            ],
            "name" : "inbound_route_filter",
            "vendorStructureId" : {
              "filename" : "configs/as1border2.cfg",
              "structureName" : "inbound_route_filter",
              "structureType" : "ipv4 prefix-list"
            }
          }
        },
        "routingPolicies" : {
          "as1_to_as2" : {
            "name" : "as1_to_as2",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "~RMCLAUSE~as1_to_as2~1~",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.If",
                    "comment" : "~RMCLAUSE~as1_to_as2~3~",
                    "falseStatements" : [
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                        "type" : "ReturnLocalDefaultAction"
                      }
                    ],
                    "guard" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                      "prefix" : {
                        "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                      },
                      "prefixSet" : {
                        "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                        "name" : "103"
                      }
                    },
                    "trueStatements" : [
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.TraceableStatement",
                        "innerStatements" : [
                          {
                            "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
                            "metric" : {
                              "class" : "org.batfish.datamodel.routing_policy.expr.LiteralLong",
                              "value" : 50
                            }
                          },
                          {
                            "class" : "org.batfish.datamodel.routing_policy.communities.SetCommunities",
                            "communitySetExpr" : {
                              "class" : "org.batfish.datamodel.routing_policy.communities.CommunitySetUnion",
                              "exprs" : [
                                {
                                  "class" : "org.batfish.datamodel.routing_policy.communities.InputCommunities"
                                },
                                {
                                  "class" : "org.batfish.datamodel.routing_policy.communities.LiteralCommunitySet",
                                  "communitySet" : [
                                    "1:2"
                                  ]
                                }
                              ]
                            }
                          },
                          {
                            "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                            "type" : "ReturnTrue"
                          }
                        ],
                        "traceElement" : {
                          "fragments" : [
                            {
                              "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                              "text" : "Matched "
                            },
                            {
                              "class" : "org.batfish.datamodel.TraceElement$LinkFragment",
                              "text" : "route-map as1_to_as2 clause 3",
                              "vendorStructureId" : {
                                "filename" : "configs/as1border2.cfg",
                                "structureName" : "as1_to_as2 3",
                                "structureType" : "route-map-clause"
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                  "prefix" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                  },
                  "prefixSet" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                    "name" : "101"
                  }
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.TraceableStatement",
                    "innerStatements" : [
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
                        "metric" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.LiteralLong",
                          "value" : 50
                        }
                      },
                      {
                        "class" : "org.batfish.datamodel.routing_policy.communities.SetCommunities",
                        "communitySetExpr" : {
                          "class" : "org.batfish.datamodel.routing_policy.communities.CommunitySetUnion",
                          "exprs" : [
                            {
                              "class" : "org.batfish.datamodel.routing_policy.communities.InputCommunities"
                            },
                            {
                              "class" : "org.batfish.datamodel.routing_policy.communities.LiteralCommunitySet",
                              "communitySet" : [
                                "1:2"
                              ]
                            }
                          ]
                        }
                      },
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                        "type" : "ReturnTrue"
                      }
                    ],
                    "traceElement" : {
                      "fragments" : [
                        {
                          "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                          "text" : "Matched "
                        },
                        {
                          "class" : "org.batfish.datamodel.TraceElement$LinkFragment",
                          "text" : "route-map as1_to_as2 clause 1",
                          "vendorStructureId" : {
                            "filename" : "configs/as1border2.cfg",
                            "structureName" : "as1_to_as2 1",
                            "structureType" : "route-map-clause"
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            ]
          },
          "as1_to_as3" : {
            "name" : "as1_to_as3",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "~RMCLAUSE~as1_to_as3~1~",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.If",
                    "comment" : "~RMCLAUSE~as1_to_as3~2~",
                    "falseStatements" : [
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                        "type" : "ReturnLocalDefaultAction"
                      }
                    ],
                    "guard" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                      "prefix" : {
                        "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                      },
                      "prefixSet" : {
                        "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                        "name" : "102"
                      }
                    },
                    "trueStatements" : [
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.TraceableStatement",
                        "innerStatements" : [
                          {
                            "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
                            "metric" : {
                              "class" : "org.batfish.datamodel.routing_policy.expr.LiteralLong",
                              "value" : 50
                            }
                          },
                          {
                            "class" : "org.batfish.datamodel.routing_policy.communities.SetCommunities",
                            "communitySetExpr" : {
                              "class" : "org.batfish.datamodel.routing_policy.communities.CommunitySetUnion",
                              "exprs" : [
                                {
                                  "class" : "org.batfish.datamodel.routing_policy.communities.InputCommunities"
                                },
                                {
                                  "class" : "org.batfish.datamodel.routing_policy.communities.LiteralCommunitySet",
                                  "communitySet" : [
                                    "1:3"
                                  ]
                                }
                              ]
                            }
                          },
                          {
                            "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                            "type" : "ReturnTrue"
                          }
                        ],
                        "traceElement" : {
                          "fragments" : [
                            {
                              "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                              "text" : "Matched "
                            },
                            {
                              "class" : "org.batfish.datamodel.TraceElement$LinkFragment",
                              "text" : "route-map as1_to_as3 clause 2",
                              "vendorStructureId" : {
                                "filename" : "configs/as1border2.cfg",
                                "structureName" : "as1_to_as3 2",
                                "structureType" : "route-map-clause"
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                  "prefix" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                  },
                  "prefixSet" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                    "name" : "101"
                  }
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.TraceableStatement",
                    "innerStatements" : [
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
                        "metric" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.LiteralLong",
                          "value" : 50
                        }
                      },
                      {
                        "class" : "org.batfish.datamodel.routing_policy.communities.SetCommunities",
                        "communitySetExpr" : {
                          "class" : "org.batfish.datamodel.routing_policy.communities.CommunitySetUnion",
                          "exprs" : [
                            {
                              "class" : "org.batfish.datamodel.routing_policy.communities.InputCommunities"
                            },
                            {
                              "class" : "org.batfish.datamodel.routing_policy.communities.LiteralCommunitySet",
                              "communitySet" : [
                                "1:3"
                              ]
                            }
                          ]
                        }
                      },
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                        "type" : "ReturnTrue"
                      }
                    ],
                    "traceElement" : {
                      "fragments" : [
                        {
                          "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                          "text" : "Matched "
                        },
                        {
                          "class" : "org.batfish.datamodel.TraceElement$LinkFragment",
                          "text" : "route-map as1_to_as3 clause 1",
                          "vendorStructureId" : {
                            "filename" : "configs/as1border2.cfg",
                            "structureName" : "as1_to_as3 1",
                            "structureType" : "route-map-clause"
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            ]
          },
          "as1_to_as4" : {
            "name" : "as1_to_as4",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.TraceableStatement",
                "innerStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
                    "metric" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.LiteralLong",
                      "value" : 50
                    }
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.communities.SetCommunities",
                    "communitySetExpr" : {
                      "class" : "org.batfish.datamodel.routing_policy.communities.CommunitySetUnion",
                      "exprs" : [
                        {
                          "class" : "org.batfish.datamodel.routing_policy.communities.InputCommunities"
                        },
                        {
                          "class" : "org.batfish.datamodel.routing_policy.communities.LiteralCommunitySet",
                          "communitySet" : [
                            "1:4"
                          ]
                        }
                      ]
                    }
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ReturnTrue"
                  }
                ],
                "traceElement" : {
                  "fragments" : [
                    {
                      "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                      "text" : "Matched "
                    },
                    {
                      "class" : "org.batfish.datamodel.TraceElement$LinkFragment",
                      "text" : "route-map as1_to_as4 clause 2",
                      "vendorStructureId" : {
                        "filename" : "configs/as1border2.cfg",
                        "structureName" : "as1_to_as4 2",
                        "structureType" : "route-map-clause"
                      }
                    }
                  ]
                }
              }
            ]
          },
          "as2_to_as1" : {
            "name" : "as2_to_as1",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "~RMCLAUSE~as2_to_as1~100~",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ReturnLocalDefaultAction"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.communities.MatchCommunities",
                  "communitySetExpr" : {
                    "class" : "org.batfish.datamodel.routing_policy.communities.InputCommunities"
                  },
                  "communitySetMatchExpr" : {
                    "class" : "org.batfish.datamodel.routing_policy.communities.CommunitySetMatchExprReference",
                    "name" : "as2_community"
                  }
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.TraceableStatement",
                    "innerStatements" : [
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.SetLocalPreference",
                        "localPreference" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.LiteralLong",
                          "value" : 350
                        }
                      },
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                        "type" : "ReturnTrue"
                      }
                    ],
                    "traceElement" : {
                      "fragments" : [
                        {
                          "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                          "text" : "Matched "
                        },
                        {
                          "class" : "org.batfish.datamodel.TraceElement$LinkFragment",
                          "text" : "route-map as2_to_as1 clause 100",
                          "vendorStructureId" : {
                            "filename" : "configs/as1border2.cfg",
                            "structureName" : "as2_to_as1 100",
                            "structureType" : "route-map-clause"
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            ]
          },
          "as3_to_as1" : {
            "name" : "as3_to_as1",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "~RMCLAUSE~as3_to_as1~100~",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ReturnLocalDefaultAction"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.communities.MatchCommunities",
                  "communitySetExpr" : {
                    "class" : "org.batfish.datamodel.routing_policy.communities.InputCommunities"
                  },
                  "communitySetMatchExpr" : {
                    "class" : "org.batfish.datamodel.routing_policy.communities.CommunitySetMatchExprReference",
                    "name" : "as3_community"
                  }
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.TraceableStatement",
                    "innerStatements" : [
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.SetLocalPreference",
                        "localPreference" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.LiteralLong",
                          "value" : 350
                        }
                      },
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                        "type" : "ReturnTrue"
                      }
                    ],
                    "traceElement" : {
                      "fragments" : [
                        {
                          "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                          "text" : "Matched "
                        },
                        {
                          "class" : "org.batfish.datamodel.TraceElement$LinkFragment",
                          "text" : "route-map as3_to_as1 clause 100",
                          "vendorStructureId" : {
                            "filename" : "configs/as1border2.cfg",
                            "structureName" : "as3_to_as1 100",
                            "structureType" : "route-map-clause"
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            ]
          },
          "as4_to_as1" : {
            "name" : "as4_to_as1",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "~RMCLAUSE~as4_to_as1~100~",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ReturnLocalDefaultAction"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.Conjunction",
                  "conjuncts" : [
                    {
                      "class" : "org.batfish.datamodel.routing_policy.communities.MatchCommunities",
                      "communitySetExpr" : {
                        "class" : "org.batfish.datamodel.routing_policy.communities.InputCommunities"
                      },
                      "communitySetMatchExpr" : {
                        "class" : "org.batfish.datamodel.routing_policy.communities.CommunitySetMatchExprReference",
                        "name" : "as4_community"
                      }
                    },
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                      "prefix" : {
                        "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                      },
                      "prefixSet" : {
                        "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                        "name" : "as4-prefixes"
                      }
                    }
                  ]
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.TraceableStatement",
                    "innerStatements" : [
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.SetLocalPreference",
                        "localPreference" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.LiteralLong",
                          "value" : 350
                        }
                      },
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                        "type" : "ReturnTrue"
                      }
                    ],
                    "traceElement" : {
                      "fragments" : [
                        {
                          "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                          "text" : "Matched "
                        },
                        {
                          "class" : "org.batfish.datamodel.TraceElement$LinkFragment",
                          "text" : "route-map as4_to_as1 clause 100",
                          "vendorStructureId" : {
                            "filename" : "configs/as1border2.cfg",
                            "structureName" : "as4_to_as1 100",
                            "structureType" : "route-map-clause"
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            ]
          },
          "~BGP_COMMON_EXPORT_POLICY:default~" : {
            "name" : "~BGP_COMMON_EXPORT_POLICY:default~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                "type" : "ReturnTrue"
              }
            ]
          },
          "~BGP_PEER_EXPORT_POLICY:default:1.10.1.1~" : {
            "name" : "~BGP_PEER_EXPORT_POLICY:default:1.10.1.1~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "peer-export policy main conditional: exitAccept if true / exitReject if false",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitReject"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                  "calledPolicyName" : "~BGP_COMMON_EXPORT_POLICY:default~"
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitAccept"
                  }
                ]
              }
            ]
          },
          "~BGP_PEER_EXPORT_POLICY:default:10.13.22.3~" : {
            "name" : "~BGP_PEER_EXPORT_POLICY:default:10.13.22.3~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "peer-export policy main conditional: exitAccept if true / exitReject if false",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitReject"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.Conjunction",
                  "conjuncts" : [
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                      "calledPolicyName" : "~BGP_COMMON_EXPORT_POLICY:default~"
                    },
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                      "calledPolicyName" : "as1_to_as3"
                    }
                  ]
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitAccept"
                  }
                ]
              }
            ]
          },
          "~BGP_PEER_EXPORT_POLICY:default:10.14.22.4~" : {
            "name" : "~BGP_PEER_EXPORT_POLICY:default:10.14.22.4~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "peer-export policy main conditional: exitAccept if true / exitReject if false",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitReject"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.Conjunction",
                  "conjuncts" : [
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                      "calledPolicyName" : "~BGP_COMMON_EXPORT_POLICY:default~"
                    },
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                      "calledPolicyName" : "as1_to_as4"
                    }
                  ]
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitAccept"
                  }
                ]
              }
            ]
          },
          "~BGP_REDISTRIBUTION_POLICY:default~" : {
            "name" : "~BGP_REDISTRIBUTION_POLICY:default~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.SetWeight",
                "weight" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.LiteralInt",
                  "value" : 32768
                }
              },
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "Add network statement routes to BGP",
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.Conjunction",
                  "conjuncts" : [
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                      "prefix" : {
                        "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                      },
                      "prefixSet" : {
                        "class" : "org.batfish.datamodel.routing_policy.expr.ExplicitPrefixSet",
                        "prefixSpace" : [
                          "1.0.1.0/24"
                        ]
                      }
                    },
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.Not",
                      "expr" : {
                        "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                        "protocols" : [
                          "aggregate",
                          "bgp",
                          "ibgp"
                        ]
                      }
                    }
                  ]
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.SetOrigin",
                    "originType" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.LiteralOrigin",
                      "originType" : "igp"
                    }
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitAccept"
                  }
                ]
              },
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "Add network statement routes to BGP",
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.Conjunction",
                  "conjuncts" : [
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                      "prefix" : {
                        "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                      },
                      "prefixSet" : {
                        "class" : "org.batfish.datamodel.routing_policy.expr.ExplicitPrefixSet",
                        "prefixSpace" : [
                          "1.0.2.0/24"
                        ]
                      }
                    },
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.Not",
                      "expr" : {
                        "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                        "protocols" : [
                          "aggregate",
                          "bgp",
                          "ibgp"
                        ]
                      }
                    }
                  ]
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.SetOrigin",
                    "originType" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.LiteralOrigin",
                      "originType" : "igp"
                    }
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitAccept"
                  }
                ]
              },
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                "type" : "ExitReject"
              }
            ]
          },
          "~OSPF_EXPORT_POLICY:default:1~" : {
            "name" : "~OSPF_EXPORT_POLICY:default:1~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "OSPF export routes for connected",
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.Conjunction",
                  "conjuncts" : [
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                      "protocols" : [
                        "connected"
                      ]
                    },
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.Not",
                      "expr" : {
                        "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                        "comment" : "match default route",
                        "prefix" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                        },
                        "prefixSet" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.ExplicitPrefixSet",
                          "prefixSpace" : [
                            "0.0.0.0/0"
                          ]
                        }
                      }
                    }
                  ]
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.SetOspfMetricType",
                    "metricType" : "E2"
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
                    "metric" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.LiteralLong",
                      "value" : 20
                    }
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitAccept"
                  }
                ]
              }
            ]
          },
          "~RESOLUTION_POLICY~" : {
            "name" : "~RESOLUTION_POLICY~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ReturnTrue"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                  "comment" : "match default route",
                  "prefix" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                  },
                  "prefixSet" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.ExplicitPrefixSet",
                    "prefixSpace" : [
                      "0.0.0.0/0"
                    ]
                  }
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ReturnFalse"
                  }
                ]
              }
            ]
          }
        },
        "vendorFamily" : {
          "cisco" : {
            "aaa" : {
              "newModel" : false
            },
            "hostname" : "as1border2",
            "lines" : {
              "aux0" : {
                "name" : "aux0",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0,
                "lineType" : "AUX"
              },
              "con0" : {
                "name" : "con0",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0,
                "lineType" : "CON"
              },
              "vty0" : {
                "name" : "vty0",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0,
                "lineType" : "VTY"
              },
              "vty1" : {
                "name" : "vty1",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0,
                "lineType" : "VTY"
              },
              "vty2" : {
                "name" : "vty2",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0,
                "lineType" : "VTY"
              },
              "vty3" : {
                "name" : "vty3",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0,
                "lineType" : "VTY"
              },
              "vty4" : {
                "name" : "vty4",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0,
                "lineType" : "VTY"
              }
            },
            "logging" : {
              "on" : true
            },
            "ntp" : {
              "servers" : {
                "18.18.18.18" : {
                  "name" : "18.18.18.18"
                },
                "23.23.23.23" : {
                  "name" : "23.23.23.23"
                }
              }
            },
            "services" : {
              "timestamps" : {
                "enabled" : true,
                "subservices" : {
                  "debug" : {
                    "enabled" : true,
                    "subservices" : {
                      "datetime" : {
                        "enabled" : true,
                        "subservices" : {
                          "msec" : {
                            "enabled" : true
                          }
                        }
                      }
                    }
                  },
                  "log" : {
                    "enabled" : true,
                    "subservices" : {
                      "datetime" : {
                        "enabled" : true,
                        "subservices" : {
                          "msec" : {
                            "enabled" : true
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "vrfs" : {
          "default" : {
            "name" : "default",
            "ospfProcesses" : {
              "1" : {
                "adminCosts" : {
                  "ospf" : 110,
                  "ospfE1" : 110,
                  "ospfE2" : 110,
                  "ospfIA" : 110,
                  "ospfIS" : 110
                },
                "areas" : {
                  "1" : {
                    "injectDefaultRoute" : true,
                    "interfaces" : [
                      "GigabitEthernet1/0",
                      "Loopback0"
                    ],
                    "metricOfDefaultRoute" : 0,
                    "name" : 1,
                    "stubType" : "NONE"
                  }
                },
                "exportPolicy" : "~OSPF_EXPORT_POLICY:default:1~",
                "processId" : "1",
                "referenceBandwidth" : 1.0E8,
                "routerId" : "1.2.2.2",
                "summaryAdminCost" : 254,
                "summaryDiscardMetric" : 0
              }
            },
            "bgpProcess" : {
              "clientToClientReflection" : true,
              "ebgpAdminCost" : 20,
              "ibgpAdminCost" : 200,
              "localAdminCost" : 200,
              "localOriginationTypeTieBreaker" : "NO_PREFERENCE",
              "networkNextHopIpTieBreaker" : "HIGHEST_NEXT_HOP_IP",
              "redistributeNextHopIpTieBreaker" : "HIGHEST_NEXT_HOP_IP",
              "redistributionPolicy" : "~BGP_REDISTRIBUTION_POLICY:default~",
              "routerId" : "1.2.2.2",
              "clusterListAsIbgpCost" : true,
              "multipathEbgp" : true,
              "multipathEquivalentAsPathMatchMode" : "EXACT_PATH",
              "multipathIbgp" : true,
              "neighbors" : {
                "1.10.1.1" : {
                  "class" : "org.batfish.datamodel.BgpActivePeerConfig",
                  "checkLocalIpOnAccept" : true,
                  "clusterId" : 16908802,
                  "defaultMetric" : 0,
                  "ebgpMultihop" : false,
                  "enforceFirstAs" : true,
                  "group" : "as1",
                  "ipv4UnicastAddressFamily" : {
                    "addressFamilyCapabilities" : {
                      "additionalPathsReceive" : true,
                      "additionalPathsSelectAll" : true,
                      "additionalPathsSend" : true,
                      "advertiseExternal" : false,
                      "advertiseInactive" : true,
                      "allowLocalAsIn" : false,
                      "allowRemoteAsOut" : "ALWAYS",
                      "sendCommunity" : true,
                      "sendExtendedCommunity" : false
                    },
                    "exportPolicy" : "~BGP_PEER_EXPORT_POLICY:default:1.10.1.1~",
                    "routeReflectorClient" : false
                  },
                  "localAs" : 1,
                  "localIp" : "1.2.2.2",
                  "peerAddress" : "1.10.1.1",
                  "remoteAsns" : "1",
                  "replaceNonLocalAsesOnExport" : false
                },
                "10.13.22.3" : {
                  "class" : "org.batfish.datamodel.BgpActivePeerConfig",
                  "checkLocalIpOnAccept" : true,
                  "clusterId" : 16908802,
                  "defaultMetric" : 0,
                  "ebgpMultihop" : false,
                  "enforceFirstAs" : true,
                  "group" : "as3",
                  "ipv4UnicastAddressFamily" : {
                    "addressFamilyCapabilities" : {
                      "additionalPathsReceive" : true,
                      "additionalPathsSelectAll" : true,
                      "additionalPathsSend" : true,
                      "advertiseExternal" : false,
                      "advertiseInactive" : true,
                      "allowLocalAsIn" : false,
                      "allowRemoteAsOut" : "ALWAYS",
                      "sendCommunity" : true,
                      "sendExtendedCommunity" : false
                    },
                    "exportPolicy" : "~BGP_PEER_EXPORT_POLICY:default:10.13.22.3~",
                    "exportPolicySources" : [
                      "as1_to_as3"
                    ],
                    "importPolicy" : "as3_to_as1",
                    "importPolicySources" : [
                      "as3_to_as1"
                    ],
                    "routeReflectorClient" : false
                  },
                  "localAs" : 1,
                  "localIp" : "10.13.22.1",
                  "peerAddress" : "10.13.22.3",
                  "remoteAsns" : "3",
                  "replaceNonLocalAsesOnExport" : false
                },
                "10.14.22.4" : {
                  "class" : "org.batfish.datamodel.BgpActivePeerConfig",
                  "checkLocalIpOnAccept" : true,
                  "clusterId" : 16908802,
                  "defaultMetric" : 0,
                  "ebgpMultihop" : false,
                  "enforceFirstAs" : true,
                  "group" : "as4",
                  "ipv4UnicastAddressFamily" : {
                    "addressFamilyCapabilities" : {
                      "additionalPathsReceive" : true,
                      "additionalPathsSelectAll" : true,
                      "additionalPathsSend" : true,
                      "advertiseExternal" : false,
                      "advertiseInactive" : true,
                      "allowLocalAsIn" : false,
                      "allowRemoteAsOut" : "ALWAYS",
                      "sendCommunity" : false,
                      "sendExtendedCommunity" : false
                    },
                    "exportPolicy" : "~BGP_PEER_EXPORT_POLICY:default:10.14.22.4~",
                    "exportPolicySources" : [
                      "as1_to_as4"
                    ],
                    "importPolicy" : "as4_to_as1",
                    "importPolicySources" : [
                      "as4_to_as1"
                    ],
                    "routeReflectorClient" : false
                  },
                  "localAs" : 1,
                  "localIp" : "10.14.22.1",
                  "peerAddress" : "10.14.22.4",
                  "remoteAsns" : "4",
                  "replaceNonLocalAsesOnExport" : false
                }
              },
              "tieBreaker" : "ARRIVAL_ORDER"
            },
            "resolutionPolicy" : "~RESOLUTION_POLICY~"
          }
        }
      },
      "as1core1" : {
        "configurationFormat" : "CISCO_IOS",
        "exportBgpFromBgpRib" : true,
        "generateBgpAggregatesFromMainRib" : false,
        "name" : "as1core1",
        "defaultCrossZoneAction" : "PERMIT",
        "defaultInboundAction" : "PERMIT",
        "deviceModel" : "CISCO_UNSPECIFIED",
        "deviceType" : "ROUTER",
        "disconnectAdminDownInterfaces" : true,
        "domainName" : "lab.local",
        "humanName" : "as1core1",
        "interfaces" : {
          "Ethernet0/0" : {
            "name" : "Ethernet0/0",
            "active" : false,
            "additionalArpIps" : {
              "class" : "org.batfish.datamodel.EmptyIpSpace"
            },
            "adminUp" : false,
            "autostate" : true,
            "bandwidth" : 1.0E7,
            "blacklisted" : false,
            "declaredNames" : [
              "Ethernet0/0"
            ],
            "hmm" : false,
            "inactiveReason" : "ADMIN_DOWN",
            "lineUp" : true,
            "mtu" : 1500,
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "speed" : 1.0E7,
            "switchport" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "PHYSICAL",
            "vrf" : "default"
          },
          "GigabitEthernet0/0" : {
            "name" : "GigabitEthernet0/0",
            "active" : true,
            "additionalArpIps" : {
              "class" : "org.batfish.datamodel.EmptyIpSpace"
            },
            "adminUp" : true,
            "allPrefixes" : [
              "1.0.2.2/24"
            ],
            "autostate" : true,
            "bandwidth" : 1.0E9,
            "blacklisted" : false,
            "declaredNames" : [
              "GigabitEthernet0/0"
            ],
            "hmm" : false,
            "lineUp" : true,
            "mtu" : 1500,
            "ospfSettings" : {
              "area" : 1,
              "cost" : 1,
              "deadInterval" : 40,
              "enabled" : true,
              "helloInterval" : 10,
              "helloMultiplier" : 0,
              "networkType" : "BROADCAST",
              "passive" : false,
              "process" : "1"
            },
            "prefix" : "1.0.2.2/24",
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "speed" : 1.0E9,
            "switchport" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "PHYSICAL",
            "vrf" : "default"
          },
          "GigabitEthernet1/0" : {
            "name" : "GigabitEthernet1/0",
            "active" : true,
            "additionalArpIps" : {
              "class" : "org.batfish.datamodel.EmptyIpSpace"
            },
            "adminUp" : true,
            "allPrefixes" : [
              "1.0.1.2/24"
            ],
            "autostate" : true,
            "bandwidth" : 1.0E9,
            "blacklisted" : false,
            "declaredNames" : [
              "GigabitEthernet1/0"
            ],
            "hmm" : false,
            "lineUp" : true,
            "mtu" : 1500,
            "ospfSettings" : {
              "area" : 1,
              "cost" : 1,
              "deadInterval" : 40,
              "enabled" : true,
              "helloInterval" : 10,
              "helloMultiplier" : 0,
              "networkType" : "BROADCAST",
              "passive" : false,
              "process" : "1"
            },
            "prefix" : "1.0.1.2/24",
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "speed" : 1.0E9,
            "switchport" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "PHYSICAL",
            "vrf" : "default"
          },
          "Loopback0" : {
            "name" : "Loopback0",
            "active" : true,
            "additionalArpIps" : {
              "class" : "org.batfish.datamodel.EmptyIpSpace"
            },
            "adminUp" : true,
            "allPrefixes" : [
              "1.10.1.1/32"
            ],
            "autostate" : true,
            "bandwidth" : 8.0E9,
            "blacklisted" : false,
            "declaredNames" : [
              "Loopback0"
            ],
            "hmm" : false,
            "lineUp" : true,
            "mtu" : 1500,
            "ospfSettings" : {
              "area" : 1,
              "cost" : 1,
              "deadInterval" : 40,
              "enabled" : true,
              "helloInterval" : 10,
              "helloMultiplier" : 0,
              "networkType" : "BROADCAST",
              "passive" : false,
              "process" : "1"
            },
            "prefix" : "1.10.1.1/32",
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "switchport" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "LOOPBACK",
            "vrf" : "default"
          }
        },
        "loggingServers" : [
          "1.1.1.1",
          "2.2.2.2"
        ],
        "mainRibEnforceResolvability" : false,
        "routingPolicies" : {
          "~BGP_COMMON_EXPORT_POLICY:default~" : {
            "name" : "~BGP_COMMON_EXPORT_POLICY:default~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                "type" : "ReturnTrue"
              }
            ]
          },
          "~BGP_PEER_EXPORT_POLICY:default:1.1.1.1~" : {
            "name" : "~BGP_PEER_EXPORT_POLICY:default:1.1.1.1~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "peer-export policy main conditional: exitAccept if true / exitReject if false",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitReject"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                  "calledPolicyName" : "~BGP_COMMON_EXPORT_POLICY:default~"
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitAccept"
                  }
                ]
              }
            ]
          },
          "~BGP_PEER_EXPORT_POLICY:default:1.2.2.2~" : {
            "name" : "~BGP_PEER_EXPORT_POLICY:default:1.2.2.2~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "peer-export policy main conditional: exitAccept if true / exitReject if false",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitReject"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                  "calledPolicyName" : "~BGP_COMMON_EXPORT_POLICY:default~"
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitAccept"
                  }
                ]
              }
            ]
          },
          "~BGP_REDISTRIBUTION_POLICY:default~" : {
            "name" : "~BGP_REDISTRIBUTION_POLICY:default~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.SetWeight",
                "weight" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.LiteralInt",
                  "value" : 32768
                }
              },
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                "type" : "ExitReject"
              }
            ]
          },
          "~OSPF_EXPORT_POLICY:default:1~" : {
            "name" : "~OSPF_EXPORT_POLICY:default:1~"
          },
          "~RESOLUTION_POLICY~" : {
            "name" : "~RESOLUTION_POLICY~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ReturnTrue"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                  "comment" : "match default route",
                  "prefix" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                  },
                  "prefixSet" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.ExplicitPrefixSet",
                    "prefixSpace" : [
                      "0.0.0.0/0"
                    ]
                  }
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ReturnFalse"
                  }
                ]
              }
            ]
          }
        },
        "vendorFamily" : {
          "cisco" : {
            "aaa" : {
              "newModel" : false
            },
            "hostname" : "as1core1",
            "lines" : {
              "aux0" : {
                "name" : "aux0",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0,
                "lineType" : "AUX"
              },
              "con0" : {
                "name" : "con0",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0,
                "lineType" : "CON"
              },
              "vty0" : {
                "name" : "vty0",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0,
                "lineType" : "VTY"
              },
              "vty1" : {
                "name" : "vty1",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0,
                "lineType" : "VTY"
              },
              "vty2" : {
                "name" : "vty2",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0,
                "lineType" : "VTY"
              },
              "vty3" : {
                "name" : "vty3",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0,
                "lineType" : "VTY"
              },
              "vty4" : {
                "name" : "vty4",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0,
                "lineType" : "VTY"
              }
            },
            "logging" : {
              "hosts" : {
                "1.1.1.1" : {
                  "name" : "1.1.1.1"
                },
                "2.2.2.2" : {
                  "name" : "2.2.2.2"
                }
              },
              "on" : true
            },
            "services" : {
              "timestamps" : {
                "enabled" : true,
                "subservices" : {
                  "debug" : {
                    "enabled" : true,
                    "subservices" : {
                      "datetime" : {
                        "enabled" : true,
                        "subservices" : {
                          "msec" : {
                            "enabled" : true
                          }
                        }
                      }
                    }
                  },
                  "log" : {
                    "enabled" : true,
                    "subservices" : {
                      "datetime" : {
                        "enabled" : true,
                        "subservices" : {
                          "msec" : {
                            "enabled" : true
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "vrfs" : {
          "default" : {
            "name" : "default",
            "ospfProcesses" : {
              "1" : {
                "adminCosts" : {
                  "ospf" : 110,
                  "ospfE1" : 110,
                  "ospfE2" : 110,
                  "ospfIA" : 110,
                  "ospfIS" : 110
                },
                "areas" : {
                  "1" : {
                    "injectDefaultRoute" : true,
                    "interfaces" : [
                      "GigabitEthernet0/0",
                      "GigabitEthernet1/0",
                      "Loopback0"
                    ],
                    "metricOfDefaultRoute" : 0,
                    "name" : 1,
                    "stubType" : "NONE"
                  }
                },
                "exportPolicy" : "~OSPF_EXPORT_POLICY:default:1~",
                "processId" : "1",
                "referenceBandwidth" : 1.0E8,
                "routerId" : "1.10.1.1",
                "summaryAdminCost" : 254,
                "summaryDiscardMetric" : 0
              }
            },
            "bgpProcess" : {
              "clientToClientReflection" : true,
              "ebgpAdminCost" : 20,
              "ibgpAdminCost" : 200,
              "localAdminCost" : 200,
              "localOriginationTypeTieBreaker" : "NO_PREFERENCE",
              "networkNextHopIpTieBreaker" : "HIGHEST_NEXT_HOP_IP",
              "redistributeNextHopIpTieBreaker" : "HIGHEST_NEXT_HOP_IP",
              "redistributionPolicy" : "~BGP_REDISTRIBUTION_POLICY:default~",
              "routerId" : "1.10.1.1",
              "clusterListAsIbgpCost" : true,
              "multipathEbgp" : true,
              "multipathEquivalentAsPathMatchMode" : "EXACT_PATH",
              "multipathIbgp" : true,
              "neighbors" : {
                "1.1.1.1" : {
                  "class" : "org.batfish.datamodel.BgpActivePeerConfig",
                  "checkLocalIpOnAccept" : true,
                  "clusterId" : 17432833,
                  "defaultMetric" : 0,
                  "ebgpMultihop" : false,
                  "enforceFirstAs" : true,
                  "group" : "as1",
                  "ipv4UnicastAddressFamily" : {
                    "addressFamilyCapabilities" : {
                      "additionalPathsReceive" : true,
                      "additionalPathsSelectAll" : true,
                      "additionalPathsSend" : true,
                      "advertiseExternal" : false,
                      "advertiseInactive" : true,
                      "allowLocalAsIn" : false,
                      "allowRemoteAsOut" : "ALWAYS",
                      "sendCommunity" : true,
                      "sendExtendedCommunity" : false
                    },
                    "exportPolicy" : "~BGP_PEER_EXPORT_POLICY:default:1.1.1.1~",
                    "routeReflectorClient" : true
                  },
                  "localAs" : 1,
                  "localIp" : "1.10.1.1",
                  "peerAddress" : "1.1.1.1",
                  "remoteAsns" : "1",
                  "replaceNonLocalAsesOnExport" : false
                },
                "1.2.2.2" : {
                  "class" : "org.batfish.datamodel.BgpActivePeerConfig",
                  "checkLocalIpOnAccept" : true,
                  "clusterId" : 17432833,
                  "defaultMetric" : 0,
                  "ebgpMultihop" : false,
                  "enforceFirstAs" : true,
                  "group" : "as1",
                  "ipv4UnicastAddressFamily" : {
                    "addressFamilyCapabilities" : {
                      "additionalPathsReceive" : true,
                      "additionalPathsSelectAll" : true,
                      "additionalPathsSend" : true,
                      "advertiseExternal" : false,
                      "advertiseInactive" : true,
                      "allowLocalAsIn" : false,
                      "allowRemoteAsOut" : "ALWAYS",
                      "sendCommunity" : true,
                      "sendExtendedCommunity" : false
                    },
                    "exportPolicy" : "~BGP_PEER_EXPORT_POLICY:default:1.2.2.2~",
                    "routeReflectorClient" : true
                  },
                  "localAs" : 1,
                  "localIp" : "1.10.1.1",
                  "peerAddress" : "1.2.2.2",
                  "remoteAsns" : "1",
                  "replaceNonLocalAsesOnExport" : false
                }
              },
              "tieBreaker" : "ARRIVAL_ORDER"
            },
            "resolutionPolicy" : "~RESOLUTION_POLICY~"
          }
        }
      },
      "as2border1" : {
        "configurationFormat" : "CISCO_IOS",
        "exportBgpFromBgpRib" : true,
        "generateBgpAggregatesFromMainRib" : false,
        "name" : "as2border1",
        "communityMatchExprs" : {
          "as1_community" : {
            "class" : "org.batfish.datamodel.routing_policy.communities.CommunityMatchRegex",
            "communityRendering" : {
              "class" : "org.batfish.datamodel.routing_policy.communities.ColonSeparatedRendering"
            },
            "regex" : "(,|\\{|\\}|^|$| )1:"
          },
          "as2_community" : {
            "class" : "org.batfish.datamodel.routing_policy.communities.CommunityMatchRegex",
            "communityRendering" : {
              "class" : "org.batfish.datamodel.routing_policy.communities.ColonSeparatedRendering"
            },
            "regex" : "(,|\\{|\\}|^|$| )2:"
          },
          "as3_community" : {
            "class" : "org.batfish.datamodel.routing_policy.communities.CommunityMatchRegex",
            "communityRendering" : {
              "class" : "org.batfish.datamodel.routing_policy.communities.ColonSeparatedRendering"
            },
            "regex" : "(,|\\{|\\}|^|$| )3:"
          }
        },
        "communitySetMatchExprs" : {
          "as1_community" : {
            "class" : "org.batfish.datamodel.routing_policy.communities.HasCommunity",
            "expr" : {
              "class" : "org.batfish.datamodel.routing_policy.communities.CommunityMatchRegex",
              "communityRendering" : {
                "class" : "org.batfish.datamodel.routing_policy.communities.ColonSeparatedRendering"
              },
              "regex" : "(,|\\{|\\}|^|$| )1:"
            }
          },
          "as2_community" : {
            "class" : "org.batfish.datamodel.routing_policy.communities.HasCommunity",
            "expr" : {
              "class" : "org.batfish.datamodel.routing_policy.communities.CommunityMatchRegex",
              "communityRendering" : {
                "class" : "org.batfish.datamodel.routing_policy.communities.ColonSeparatedRendering"
              },
              "regex" : "(,|\\{|\\}|^|$| )2:"
            }
          },
          "as3_community" : {
            "class" : "org.batfish.datamodel.routing_policy.communities.HasCommunity",
            "expr" : {
              "class" : "org.batfish.datamodel.routing_policy.communities.CommunityMatchRegex",
              "communityRendering" : {
                "class" : "org.batfish.datamodel.routing_policy.communities.ColonSeparatedRendering"
              },
              "regex" : "(,|\\{|\\}|^|$| )3:"
            }
          }
        },
        "defaultCrossZoneAction" : "PERMIT",
        "defaultInboundAction" : "PERMIT",
        "deviceModel" : "CISCO_UNSPECIFIED",
        "deviceType" : "ROUTER",
        "disconnectAdminDownInterfaces" : true,
        "domainName" : "lab.local",
        "humanName" : "as2border1",
        "interfaces" : {
          "Ethernet0/0" : {
            "name" : "Ethernet0/0",
            "active" : false,
            "additionalArpIps" : {
              "class" : "org.batfish.datamodel.EmptyIpSpace"
            },
            "adminUp" : false,
            "autostate" : true,
            "bandwidth" : 1.0E7,
            "blacklisted" : false,
            "declaredNames" : [
              "Ethernet0/0"
            ],
            "hmm" : false,
            "inactiveReason" : "ADMIN_DOWN",
            "lineUp" : true,
            "mtu" : 1500,
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "speed" : 1.0E7,
            "switchport" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "PHYSICAL",
            "vrf" : "default"
          },
          "GigabitEthernet0/0" : {
            "name" : "GigabitEthernet0/0",
            "active" : true,
            "additionalArpIps" : {
              "class" : "org.batfish.datamodel.EmptyIpSpace"
            },
            "adminUp" : true,
            "allPrefixes" : [
              "10.12.11.2/24"
            ],
            "autostate" : true,
            "bandwidth" : 1.0E9,
            "blacklisted" : false,
            "declaredNames" : [
              "GigabitEthernet0/0"
            ],
            "hmm" : false,
            "incomingFilter" : "OUTSIDE_TO_INSIDE",
            "lineUp" : true,
            "mtu" : 1500,
            "outgoingFilter" : "INSIDE_TO_AS1",
            "prefix" : "10.12.11.2/24",
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "speed" : 1.0E9,
            "switchport" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "PHYSICAL",
            "vrf" : "default"
          },
          "GigabitEthernet1/0" : {
            "name" : "GigabitEthernet1/0",
            "active" : true,
            "additionalArpIps" : {
              "class" : "org.batfish.datamodel.EmptyIpSpace"
            },
            "adminUp" : true,
            "allPrefixes" : [
              "2.12.11.1/24"
            ],
            "autostate" : true,
            "bandwidth" : 1.0E9,
            "blacklisted" : false,
            "declaredNames" : [
              "GigabitEthernet1/0"
            ],
            "hmm" : false,
            "lineUp" : true,
            "mtu" : 1500,
            "ospfSettings" : {
              "area" : 1,
              "cost" : 1,
              "deadInterval" : 40,
              "enabled" : true,
              "helloInterval" : 10,
              "helloMultiplier" : 0,
              "networkType" : "BROADCAST",
              "passive" : false,
              "process" : "1"
            },
            "prefix" : "2.12.11.1/24",
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "speed" : 1.0E9,
            "switchport" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "PHYSICAL",
            "vrf" : "default"
          },
          "GigabitEthernet2/0" : {
            "name" : "GigabitEthernet2/0",
            "active" : true,
            "additionalArpIps" : {
              "class" : "org.batfish.datamodel.EmptyIpSpace"
            },
            "adminUp" : true,
            "allPrefixes" : [
              "2.12.12.1/24"
            ],
            "autostate" : true,
            "bandwidth" : 1.0E9,
            "blacklisted" : false,
            "declaredNames" : [
              "GigabitEthernet2/0"
            ],
            "hmm" : false,
            "lineUp" : true,
            "mtu" : 1500,
            "ospfSettings" : {
              "area" : 1,
              "cost" : 1,
              "deadInterval" : 40,
              "enabled" : true,
              "helloInterval" : 10,
              "helloMultiplier" : 0,
              "networkType" : "BROADCAST",
              "passive" : false,
              "process" : "1"
            },
            "prefix" : "2.12.12.1/24",
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "speed" : 1.0E9,
            "switchport" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "PHYSICAL",
            "vrf" : "default"
          },
          "Loopback0" : {
            "name" : "Loopback0",
            "active" : true,
            "additionalArpIps" : {
              "class" : "org.batfish.datamodel.EmptyIpSpace"
            },
            "adminUp" : true,
            "allPrefixes" : [
              "2.1.1.1/32"
            ],
            "autostate" : true,
            "bandwidth" : 8.0E9,
            "blacklisted" : false,
            "declaredNames" : [
              "Loopback0"
            ],
            "hmm" : false,
            "lineUp" : true,
            "mtu" : 1500,
            "ospfSettings" : {
              "area" : 1,
              "cost" : 1,
              "deadInterval" : 40,
              "enabled" : true,
              "helloInterval" : 10,
              "helloMultiplier" : 0,
              "networkType" : "BROADCAST",
              "passive" : false,
              "process" : "1"
            },
            "prefix" : "2.1.1.1/32",
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "switchport" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "LOOPBACK",
            "vrf" : "default"
          }
        },
        "ipAccessLists" : {
          "101" : {
            "lines" : [
              {
                "class" : "org.batfish.datamodel.ExprAclLine",
                "action" : "PERMIT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "255.255.255.0"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "1.0.1.0"
                    }
                  }
                },
                "name" : "permit ip host 1.0.1.0 host 255.255.255.0",
                "traceElement" : {
                  "fragments" : [
                    {
                      "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                      "text" : "Matched line "
                    },
                    {
                      "class" : "org.batfish.datamodel.TraceElement$LinkFragment",
                      "text" : "permit ip host 1.0.1.0 host 255.255.255.0",
                      "vendorStructureId" : {
                        "filename" : "configs/as2border1.cfg",
                        "structureName" : "101: permit ip host 1.0.1.0 host 255.255.255.0",
                        "structureType" : "extended ipv4 access-list line"
                      }
                    }
                  ]
                },
                "vendorStructureId" : {
                  "filename" : "configs/as2border1.cfg",
                  "structureName" : "101: permit ip host 1.0.1.0 host 255.255.255.0",
                  "structureType" : "extended ipv4 access-list line"
                }
              },
              {
                "class" : "org.batfish.datamodel.ExprAclLine",
                "action" : "PERMIT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "255.255.255.0"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "1.0.2.0"
                    }
                  }
                },
                "name" : "permit ip host 1.0.2.0 host 255.255.255.0",
                "traceElement" : {
                  "fragments" : [
                    {
                      "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                      "text" : "Matched line "
                    },
                    {
                      "class" : "org.batfish.datamodel.TraceElement$LinkFragment",
                      "text" : "permit ip host 1.0.2.0 host 255.255.255.0",
                      "vendorStructureId" : {
                        "filename" : "configs/as2border1.cfg",
                        "structureName" : "101: permit ip host 1.0.2.0 host 255.255.255.0",
                        "structureType" : "extended ipv4 access-list line"
                      }
                    }
                  ]
                },
                "vendorStructureId" : {
                  "filename" : "configs/as2border1.cfg",
                  "structureName" : "101: permit ip host 1.0.2.0 host 255.255.255.0",
                  "structureType" : "extended ipv4 access-list line"
                }
              }
            ],
            "name" : "101",
            "sourceName" : "101",
            "sourceType" : "extended ipv4 access-list"
          },
          "103" : {
            "lines" : [
              {
                "class" : "org.batfish.datamodel.ExprAclLine",
                "action" : "PERMIT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "255.255.255.0"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "3.0.1.0"
                    }
                  }
                },
                "name" : "permit ip host 3.0.1.0 host 255.255.255.0",
                "traceElement" : {
                  "fragments" : [
                    {
                      "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                      "text" : "Matched line "
                    },
                    {
                      "class" : "org.batfish.datamodel.TraceElement$LinkFragment",
                      "text" : "permit ip host 3.0.1.0 host 255.255.255.0",
                      "vendorStructureId" : {
                        "filename" : "configs/as2border1.cfg",
                        "structureName" : "103: permit ip host 3.0.1.0 host 255.255.255.0",
                        "structureType" : "extended ipv4 access-list line"
                      }
                    }
                  ]
                },
                "vendorStructureId" : {
                  "filename" : "configs/as2border1.cfg",
                  "structureName" : "103: permit ip host 3.0.1.0 host 255.255.255.0",
                  "structureType" : "extended ipv4 access-list line"
                }
              },
              {
                "class" : "org.batfish.datamodel.ExprAclLine",
                "action" : "PERMIT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "255.255.255.0"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "3.0.2.0"
                    }
                  }
                },
                "name" : "permit ip host 3.0.2.0 host 255.255.255.0",
                "traceElement" : {
                  "fragments" : [
                    {
                      "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                      "text" : "Matched line "
                    },
                    {
                      "class" : "org.batfish.datamodel.TraceElement$LinkFragment",
                      "text" : "permit ip host 3.0.2.0 host 255.255.255.0",
                      "vendorStructureId" : {
                        "filename" : "configs/as2border1.cfg",
                        "structureName" : "103: permit ip host 3.0.2.0 host 255.255.255.0",
                        "structureType" : "extended ipv4 access-list line"
                      }
                    }
                  ]
                },
                "vendorStructureId" : {
                  "filename" : "configs/as2border1.cfg",
                  "structureName" : "103: permit ip host 3.0.2.0 host 255.255.255.0",
                  "structureType" : "extended ipv4 access-list line"
                }
              }
            ],
            "name" : "103",
            "sourceName" : "103",
            "sourceType" : "extended ipv4 access-list"
          },
          "INSIDE_TO_AS1" : {
            "lines" : [
              {
                "class" : "org.batfish.datamodel.ExprAclLine",
                "action" : "PERMIT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "1.0.0.0/8"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "2.0.0.0/8"
                    }
                  }
                },
                "name" : "permit ip 2.0.0.0 0.255.255.255 1.0.0.0 0.255.255.255",
                "traceElement" : {
                  "fragments" : [
                    {
                      "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                      "text" : "Matched line "
                    },
                    {
                      "class" : "org.batfish.datamodel.TraceElement$LinkFragment",
                      "text" : "permit ip 2.0.0.0 0.255.255.255 1.0.0.0 0.255.255.255",
                      "vendorStructureId" : {
                        "filename" : "configs/as2border1.cfg",
                        "structureName" : "INSIDE_TO_AS1: permit ip 2.0.0.0 0.255.255.255 1.0.0.0 0.255.255.255",
                        "structureType" : "extended ipv4 access-list line"
                      }
                    }
                  ]
                },
                "vendorStructureId" : {
                  "filename" : "configs/as2border1.cfg",
                  "structureName" : "INSIDE_TO_AS1: permit ip 2.0.0.0 0.255.255.255 1.0.0.0 0.255.255.255",
                  "structureType" : "extended ipv4 access-list line"
                }
              },
              {
                "class" : "org.batfish.datamodel.ExprAclLine",
                "action" : "PERMIT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "10.12.11.1"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "10.12.11.2"
                    }
                  }
                },
                "name" : "permit ip 10.12.11.2 0.0.0.0 10.12.11.1 0.0.0.0",
                "traceElement" : {
                  "fragments" : [
                    {
                      "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                      "text" : "Matched line "
                    },
                    {
                      "class" : "org.batfish.datamodel.TraceElement$LinkFragment",
                      "text" : "permit ip 10.12.11.2 0.0.0.0 10.12.11.1 0.0.0.0",
                      "vendorStructureId" : {
                        "filename" : "configs/as2border1.cfg",
                        "structureName" : "INSIDE_TO_AS1: permit ip 10.12.11.2 0.0.0.0 10.12.11.1 0.0.0.0",
                        "structureType" : "extended ipv4 access-list line"
                      }
                    }
                  ]
                },
                "vendorStructureId" : {
                  "filename" : "configs/as2border1.cfg",
                  "structureName" : "INSIDE_TO_AS1: permit ip 10.12.11.2 0.0.0.0 10.12.11.1 0.0.0.0",
                  "structureType" : "extended ipv4 access-list line"
                }
              },
              {
                "class" : "org.batfish.datamodel.ExprAclLine",
                "action" : "DENY",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "0.0.0.0/0"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "0.0.0.0/0"
                    }
                  }
                },
                "name" : "deny   ip any any",
                "traceElement" : {
                  "fragments" : [
                    {
                      "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                      "text" : "Matched line "
                    },
                    {
                      "class" : "org.batfish.datamodel.TraceElement$LinkFragment",
                      "text" : "deny   ip any any",
                      "vendorStructureId" : {
                        "filename" : "configs/as2border1.cfg",
                        "structureName" : "INSIDE_TO_AS1: deny   ip any any",
                        "structureType" : "extended ipv4 access-list line"
                      }
                    }
                  ]
                },
                "vendorStructureId" : {
                  "filename" : "configs/as2border1.cfg",
                  "structureName" : "INSIDE_TO_AS1: deny   ip any any",
                  "structureType" : "extended ipv4 access-list line"
                }
              }
            ],
            "name" : "INSIDE_TO_AS1",
            "sourceName" : "INSIDE_TO_AS1",
            "sourceType" : "extended ipv4 access-list"
          },
          "OUTSIDE_TO_INSIDE" : {
            "lines" : [
              {
                "class" : "org.batfish.datamodel.ExprAclLine",
                "action" : "DENY",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "0.0.0.0/0"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "2.0.0.0/8"
                    }
                  }
                },
                "name" : "deny   ip 2.0.0.0 0.255.255.255 any",
                "traceElement" : {
                  "fragments" : [
                    {
                      "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                      "text" : "Matched line "
                    },
                    {
                      "class" : "org.batfish.datamodel.TraceElement$LinkFragment",
                      "text" : "deny   ip 2.0.0.0 0.255.255.255 any",
                      "vendorStructureId" : {
                        "filename" : "configs/as2border1.cfg",
                        "structureName" : "OUTSIDE_TO_INSIDE: deny   ip 2.0.0.0 0.255.255.255 any",
                        "structureType" : "extended ipv4 access-list line"
                      }
                    }
                  ]
                },
                "vendorStructureId" : {
                  "filename" : "configs/as2border1.cfg",
                  "structureName" : "OUTSIDE_TO_INSIDE: deny   ip 2.0.0.0 0.255.255.255 any",
                  "structureType" : "extended ipv4 access-list line"
                }
              },
              {
                "class" : "org.batfish.datamodel.ExprAclLine",
                "action" : "DENY",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "2.128.1.101"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "0.0.0.0/0"
                    }
                  }
                },
                "name" : "deny   ip any host 2.128.1.101",
                "traceElement" : {
                  "fragments" : [
                    {
                      "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                      "text" : "Matched line "
                    },
                    {
                      "class" : "org.batfish.datamodel.TraceElement$LinkFragment",
                      "text" : "deny   ip any host 2.128.1.101",
                      "vendorStructureId" : {
                        "filename" : "configs/as2border1.cfg",
                        "structureName" : "OUTSIDE_TO_INSIDE: deny   ip any host 2.128.1.101",
                        "structureType" : "extended ipv4 access-list line"
                      }
                    }
                  ]
                },
                "vendorStructureId" : {
                  "filename" : "configs/as2border1.cfg",
                  "structureName" : "OUTSIDE_TO_INSIDE: deny   ip any host 2.128.1.101",
                  "structureType" : "extended ipv4 access-list line"
                }
              },
              {
                "class" : "org.batfish.datamodel.ExprAclLine",
                "action" : "PERMIT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "0.0.0.0/0"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "0.0.0.0/0"
                    }
                  }
                },
                "name" : "permit ip any any",
                "traceElement" : {
                  "fragments" : [
                    {
                      "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                      "text" : "Matched line "
                    },
                    {
                      "class" : "org.batfish.datamodel.TraceElement$LinkFragment",
                      "text" : "permit ip any any",
                      "vendorStructureId" : {
                        "filename" : "configs/as2border1.cfg",
                        "structureName" : "OUTSIDE_TO_INSIDE: permit ip any any",
                        "structureType" : "extended ipv4 access-list line"
                      }
                    }
                  ]
                },
                "vendorStructureId" : {
                  "filename" : "configs/as2border1.cfg",
                  "structureName" : "OUTSIDE_TO_INSIDE: permit ip any any",
                  "structureType" : "extended ipv4 access-list line"
                }
              }
            ],
            "name" : "OUTSIDE_TO_INSIDE",
            "sourceName" : "OUTSIDE_TO_INSIDE",
            "sourceType" : "extended ipv4 access-list"
          }
        },
        "mainRibEnforceResolvability" : false,
        "ntpServers" : [
          "18.18.18.18",
          "23.23.23.23"
        ],
        "routeFilterLists" : {
          "101" : {
            "lines" : [
              {
                "action" : "PERMIT",
                "ipWildcard" : "1.0.1.0/24",
                "lengthRange" : "24-24"
              },
              {
                "action" : "PERMIT",
                "ipWildcard" : "1.0.2.0/24",
                "lengthRange" : "24-24"
              }
            ],
            "name" : "101",
            "vendorStructureId" : {
              "filename" : "configs/as2border1.cfg",
              "structureName" : "101",
              "structureType" : "extended ipv4 access-list"
            }
          },
          "103" : {
            "lines" : [
              {
                "action" : "PERMIT",
                "ipWildcard" : "3.0.1.0/24",
                "lengthRange" : "24-24"
              },
              {
                "action" : "PERMIT",
                "ipWildcard" : "3.0.2.0/24",
                "lengthRange" : "24-24"
              }
            ],
            "name" : "103",
            "vendorStructureId" : {
              "filename" : "configs/as2border1.cfg",
              "structureName" : "103",
              "structureType" : "extended ipv4 access-list"
            }
          },
          "inbound_route_filter" : {
            "lines" : [
              {
                "action" : "DENY",
                "ipWildcard" : "2.0.0.0/8",
                "lengthRange" : "8-32"
              },
              {
                "action" : "PERMIT",
                "ipWildcard" : "0.0.0.0/0",
                "lengthRange" : "0-32"
              }
            ],
            "name" : "inbound_route_filter",
            "vendorStructureId" : {
              "filename" : "configs/as2border1.cfg",
              "structureName" : "inbound_route_filter",
              "structureType" : "ipv4 prefix-list"
            }
          },
          "outbound_routes" : {
            "lines" : [
              {
                "action" : "PERMIT",
                "ipWildcard" : "2.128.0.0/9",
                "lengthRange" : "16-32"
              }
            ],
            "name" : "outbound_routes",
            "vendorStructureId" : {
              "filename" : "configs/as2border1.cfg",
              "structureName" : "outbound_routes",
              "structureType" : "ipv4 prefix-list"
            }
          },
          "~MATCH_SUPPRESSED_SUMMARY_ONLY:default~" : {
            "lines" : [
              {
                "action" : "PERMIT",
                "ipWildcard" : "2.128.0.0/16",
                "lengthRange" : "17-32"
              }
            ],
            "name" : "~MATCH_SUPPRESSED_SUMMARY_ONLY:default~"
          }
        },
        "routingPolicies" : {
          "as1_to_as2" : {
            "name" : "as1_to_as2",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "~RMCLAUSE~as1_to_as2~100~",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ReturnLocalDefaultAction"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.communities.MatchCommunities",
                  "communitySetExpr" : {
                    "class" : "org.batfish.datamodel.routing_policy.communities.InputCommunities"
                  },
                  "communitySetMatchExpr" : {
                    "class" : "org.batfish.datamodel.routing_policy.communities.CommunitySetMatchExprReference",
                    "name" : "as1_community"
                  }
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.TraceableStatement",
                    "innerStatements" : [
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.SetLocalPreference",
                        "localPreference" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.LiteralLong",
                          "value" : 350
                        }
                      },
                      {
                        "class" : "org.batfish.datamodel.routing_policy.communities.SetCommunities",
                        "communitySetExpr" : {
                          "class" : "org.batfish.datamodel.routing_policy.communities.CommunitySetUnion",
                          "exprs" : [
                            {
                              "class" : "org.batfish.datamodel.routing_policy.communities.InputCommunities"
                            },
                            {
                              "class" : "org.batfish.datamodel.routing_policy.communities.LiteralCommunitySet",
                              "communitySet" : [
                                "1:2"
                              ]
                            }
                          ]
                        }
                      },
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                        "type" : "ReturnTrue"
                      }
                    ],
                    "traceElement" : {
                      "fragments" : [
                        {
                          "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                          "text" : "Matched "
                        },
                        {
                          "class" : "org.batfish.datamodel.TraceElement$LinkFragment",
                          "text" : "route-map as1_to_as2 clause 100",
                          "vendorStructureId" : {
                            "filename" : "configs/as2border1.cfg",
                            "structureName" : "as1_to_as2 100",
                            "structureType" : "route-map-clause"
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            ]
          },
          "as2_to_as1" : {
            "name" : "as2_to_as1",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "~RMCLAUSE~as2_to_as1~2~",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.If",
                    "comment" : "~RMCLAUSE~as2_to_as1~3~",
                    "falseStatements" : [
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                        "type" : "ReturnLocalDefaultAction"
                      }
                    ],
                    "guard" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                      "prefix" : {
                        "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                      },
                      "prefixSet" : {
                        "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                        "name" : "103"
                      }
                    },
                    "trueStatements" : [
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.TraceableStatement",
                        "innerStatements" : [
                          {
                            "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
                            "metric" : {
                              "class" : "org.batfish.datamodel.routing_policy.expr.LiteralLong",
                              "value" : 50
                            }
                          },
                          {
                            "class" : "org.batfish.datamodel.routing_policy.communities.SetCommunities",
                            "communitySetExpr" : {
                              "class" : "org.batfish.datamodel.routing_policy.communities.CommunitySetUnion",
                              "exprs" : [
                                {
                                  "class" : "org.batfish.datamodel.routing_policy.communities.InputCommunities"
                                },
                                {
                                  "class" : "org.batfish.datamodel.routing_policy.communities.LiteralCommunitySet",
                                  "communitySet" : [
                                    "2:1"
                                  ]
                                }
                              ]
                            }
                          },
                          {
                            "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                            "type" : "ReturnTrue"
                          }
                        ],
                        "traceElement" : {
                          "fragments" : [
                            {
                              "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                              "text" : "Matched "
                            },
                            {
                              "class" : "org.batfish.datamodel.TraceElement$LinkFragment",
                              "text" : "route-map as2_to_as1 clause 3",
                              "vendorStructureId" : {
                                "filename" : "configs/as2border1.cfg",
                                "structureName" : "as2_to_as1 3",
                                "structureType" : "route-map-clause"
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                  "prefix" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                  },
                  "prefixSet" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                    "name" : "outbound_routes"
                  }
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.TraceableStatement",
                    "innerStatements" : [
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
                        "metric" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.LiteralLong",
                          "value" : 50
                        }
                      },
                      {
                        "class" : "org.batfish.datamodel.routing_policy.communities.SetCommunities",
                        "communitySetExpr" : {
                          "class" : "org.batfish.datamodel.routing_policy.communities.CommunitySetUnion",
                          "exprs" : [
                            {
                              "class" : "org.batfish.datamodel.routing_policy.communities.InputCommunities"
                            },
                            {
                              "class" : "org.batfish.datamodel.routing_policy.communities.LiteralCommunitySet",
                              "communitySet" : [
                                "2:1"
                              ]
                            }
                          ]
                        }
                      },
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                        "type" : "ReturnTrue"
                      }
                    ],
                    "traceElement" : {
                      "fragments" : [
                        {
                          "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                          "text" : "Matched "
                        },
                        {
                          "class" : "org.batfish.datamodel.TraceElement$LinkFragment",
                          "text" : "route-map as2_to_as1 clause 2",
                          "vendorStructureId" : {
                            "filename" : "configs/as2border1.cfg",
                            "structureName" : "as2_to_as1 2",
                            "structureType" : "route-map-clause"
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            ]
          },
          "as2_to_as3" : {
            "name" : "as2_to_as3",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "~RMCLAUSE~as2_to_as3~1~",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.If",
                    "comment" : "~RMCLAUSE~as2_to_as3~2~",
                    "falseStatements" : [
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                        "type" : "ReturnLocalDefaultAction"
                      }
                    ],
                    "guard" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                      "prefix" : {
                        "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                      },
                      "prefixSet" : {
                        "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                        "name" : "outbound_routes"
                      }
                    },
                    "trueStatements" : [
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.TraceableStatement",
                        "innerStatements" : [
                          {
                            "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
                            "metric" : {
                              "class" : "org.batfish.datamodel.routing_policy.expr.LiteralLong",
                              "value" : 50
                            }
                          },
                          {
                            "class" : "org.batfish.datamodel.routing_policy.communities.SetCommunities",
                            "communitySetExpr" : {
                              "class" : "org.batfish.datamodel.routing_policy.communities.CommunitySetUnion",
                              "exprs" : [
                                {
                                  "class" : "org.batfish.datamodel.routing_policy.communities.InputCommunities"
                                },
                                {
                                  "class" : "org.batfish.datamodel.routing_policy.communities.LiteralCommunitySet",
                                  "communitySet" : [
                                    "2:3"
                                  ]
                                }
                              ]
                            }
                          },
                          {
                            "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                            "type" : "ReturnTrue"
                          }
                        ],
                        "traceElement" : {
                          "fragments" : [
                            {
                              "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                              "text" : "Matched "
                            },
                            {
                              "class" : "org.batfish.datamodel.TraceElement$LinkFragment",
                              "text" : "route-map as2_to_as3 clause 2",
                              "vendorStructureId" : {
                                "filename" : "configs/as2border1.cfg",
                                "structureName" : "as2_to_as3 2",
                                "structureType" : "route-map-clause"
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                  "prefix" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                  },
                  "prefixSet" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                    "name" : "101"
                  }
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.TraceableStatement",
                    "innerStatements" : [
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
                        "metric" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.LiteralLong",
                          "value" : 50
                        }
                      },
                      {
                        "class" : "org.batfish.datamodel.routing_policy.communities.SetCommunities",
                        "communitySetExpr" : {
                          "class" : "org.batfish.datamodel.routing_policy.communities.CommunitySetUnion",
                          "exprs" : [
                            {
                              "class" : "org.batfish.datamodel.routing_policy.communities.InputCommunities"
                            },
                            {
                              "class" : "org.batfish.datamodel.routing_policy.communities.LiteralCommunitySet",
                              "communitySet" : [
                                "2:3"
                              ]
                            }
                          ]
                        }
                      },
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                        "type" : "ReturnTrue"
                      }
                    ],
                    "traceElement" : {
                      "fragments" : [
                        {
                          "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                          "text" : "Matched "
                        },
                        {
                          "class" : "org.batfish.datamodel.TraceElement$LinkFragment",
                          "text" : "route-map as2_to_as3 clause 1",
                          "vendorStructureId" : {
                            "filename" : "configs/as2border1.cfg",
                            "structureName" : "as2_to_as3 1",
                            "structureType" : "route-map-clause"
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            ]
          },
          "as3_to_as2" : {
            "name" : "as3_to_as2",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "~RMCLAUSE~as3_to_as2~100~",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ReturnLocalDefaultAction"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.communities.MatchCommunities",
                  "communitySetExpr" : {
                    "class" : "org.batfish.datamodel.routing_policy.communities.InputCommunities"
                  },
                  "communitySetMatchExpr" : {
                    "class" : "org.batfish.datamodel.routing_policy.communities.CommunitySetMatchExprReference",
                    "name" : "as3_community"
                  }
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.TraceableStatement",
                    "innerStatements" : [
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.SetLocalPreference",
                        "localPreference" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.LiteralLong",
                          "value" : 350
                        }
                      },
                      {
                        "class" : "org.batfish.datamodel.routing_policy.communities.SetCommunities",
                        "communitySetExpr" : {
                          "class" : "org.batfish.datamodel.routing_policy.communities.CommunitySetUnion",
                          "exprs" : [
                            {
                              "class" : "org.batfish.datamodel.routing_policy.communities.InputCommunities"
                            },
                            {
                              "class" : "org.batfish.datamodel.routing_policy.communities.LiteralCommunitySet",
                              "communitySet" : [
                                "3:2"
                              ]
                            }
                          ]
                        }
                      },
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                        "type" : "ReturnTrue"
                      }
                    ],
                    "traceElement" : {
                      "fragments" : [
                        {
                          "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                          "text" : "Matched "
                        },
                        {
                          "class" : "org.batfish.datamodel.TraceElement$LinkFragment",
                          "text" : "route-map as3_to_as2 clause 100",
                          "vendorStructureId" : {
                            "filename" : "configs/as2border1.cfg",
                            "structureName" : "as3_to_as2 100",
                            "structureType" : "route-map-clause"
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            ]
          },
          "~BGP_COMMON_EXPORT_POLICY:default~" : {
            "name" : "~BGP_COMMON_EXPORT_POLICY:default~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "Suppress more specific networks for summary-only aggregate-address networks",
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                  "prefix" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                  },
                  "prefixSet" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                    "name" : "~MATCH_SUPPRESSED_SUMMARY_ONLY:default~"
                  }
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "Suppress"
                  }
                ]
              },
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                "type" : "ReturnTrue"
              }
            ]
          },
          "~BGP_PEER_EXPORT_POLICY:default:10.12.11.1~" : {
            "name" : "~BGP_PEER_EXPORT_POLICY:default:10.12.11.1~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "peer-export policy main conditional: exitAccept if true / exitReject if false",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitReject"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.Conjunction",
                  "conjuncts" : [
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                      "calledPolicyName" : "~BGP_COMMON_EXPORT_POLICY:default~"
                    },
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                      "calledPolicyName" : "as2_to_as1"
                    }
                  ]
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitAccept"
                  }
                ]
              }
            ]
          },
          "~BGP_PEER_EXPORT_POLICY:default:2.1.2.1~" : {
            "name" : "~BGP_PEER_EXPORT_POLICY:default:2.1.2.1~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "peer-export policy main conditional: exitAccept if true / exitReject if false",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitReject"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                  "calledPolicyName" : "~BGP_COMMON_EXPORT_POLICY:default~"
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitAccept"
                  }
                ]
              }
            ]
          },
          "~BGP_PEER_EXPORT_POLICY:default:2.1.2.2~" : {
            "name" : "~BGP_PEER_EXPORT_POLICY:default:2.1.2.2~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "peer-export policy main conditional: exitAccept if true / exitReject if false",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitReject"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                  "calledPolicyName" : "~BGP_COMMON_EXPORT_POLICY:default~"
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitAccept"
                  }
                ]
              }
            ]
          },
          "~BGP_REDISTRIBUTION_POLICY:default~" : {
            "name" : "~BGP_REDISTRIBUTION_POLICY:default~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.SetWeight",
                "weight" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.LiteralInt",
                  "value" : 32768
                }
              },
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                "type" : "ExitReject"
              }
            ]
          },
          "~OSPF_EXPORT_POLICY:default:1~" : {
            "name" : "~OSPF_EXPORT_POLICY:default:1~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "OSPF export routes for connected",
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.Conjunction",
                  "conjuncts" : [
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                      "protocols" : [
                        "connected"
                      ]
                    },
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.Not",
                      "expr" : {
                        "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                        "comment" : "match default route",
                        "prefix" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                        },
                        "prefixSet" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.ExplicitPrefixSet",
                          "prefixSpace" : [
                            "0.0.0.0/0"
                          ]
                        }
                      }
                    }
                  ]
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.SetOspfMetricType",
                    "metricType" : "E2"
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
                    "metric" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.LiteralLong",
                      "value" : 20
                    }
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitAccept"
                  }
                ]
              }
            ]
          },
          "~RESOLUTION_POLICY~" : {
            "name" : "~RESOLUTION_POLICY~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ReturnTrue"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                  "comment" : "match default route",
                  "prefix" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                  },
                  "prefixSet" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.ExplicitPrefixSet",
                    "prefixSpace" : [
                      "0.0.0.0/0"
                    ]
                  }
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ReturnFalse"
                  }
                ]
              }
            ]
          },
          "~suppress~rp~summary-only~" : {
            "name" : "~suppress~rp~summary-only~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                "type" : "ExitAccept"
              }
            ]
          }
        },
        "vendorFamily" : {
          "cisco" : {
            "aaa" : {
              "authentication" : {
                "login" : {
                  "privilegeMode" : true
                }
              },
              "newModel" : true
            },
            "hostname" : "as2border1",
            "lines" : {
              "aux0" : {
                "name" : "aux0",
                "aaaAuthenticationLoginList" : {
                  "methods" : [
                    "LOCAL"
                  ]
                },
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0,
                "lineType" : "AUX"
              },
              "con0" : {
                "name" : "con0",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0,
                "lineType" : "CON"
              },
              "vty0" : {
                "name" : "vty0",
                "aaaAuthenticationLoginList" : {
                  "methods" : [
                    "LOCAL"
                  ]
                },
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0,
                "lineType" : "VTY"
              },
              "vty1" : {
                "name" : "vty1",
                "aaaAuthenticationLoginList" : {
                  "methods" : [
                    "LOCAL"
                  ]
                },
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0,
                "lineType" : "VTY"
              },
              "vty2" : {
                "name" : "vty2",
                "aaaAuthenticationLoginList" : {
                  "methods" : [
                    "LOCAL"
                  ]
                },
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0,
                "lineType" : "VTY"
              },
              "vty3" : {
                "name" : "vty3",
                "aaaAuthenticationLoginList" : {
                  "methods" : [
                    "LOCAL"
                  ]
                },
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0,
                "lineType" : "VTY"
              },
              "vty4" : {
                "name" : "vty4",
                "aaaAuthenticationLoginList" : {
                  "methods" : [
                    "LOCAL"
                  ]
                },
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0,
                "lineType" : "VTY"
              }
            },
            "logging" : {
              "on" : true
            },
            "ntp" : {
              "servers" : {
                "18.18.18.18" : {
                  "name" : "18.18.18.18"
                },
                "23.23.23.23" : {
                  "name" : "23.23.23.23"
                }
              }
            },
            "services" : {
              "timestamps" : {
                "enabled" : true,
                "subservices" : {
                  "debug" : {
                    "enabled" : true,
                    "subservices" : {
                      "datetime" : {
                        "enabled" : true,
                        "subservices" : {
                          "msec" : {
                            "enabled" : true
                          }
                        }
                      }
                    }
                  },
                  "log" : {
                    "enabled" : true,
                    "subservices" : {
                      "datetime" : {
                        "enabled" : true,
                        "subservices" : {
                          "msec" : {
                            "enabled" : true
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "vrfs" : {
          "default" : {
            "name" : "default",
            "ospfProcesses" : {
              "1" : {
                "adminCosts" : {
                  "ospf" : 110,
                  "ospfE1" : 110,
                  "ospfE2" : 110,
                  "ospfIA" : 110,
                  "ospfIS" : 110
                },
                "areas" : {
                  "1" : {
                    "injectDefaultRoute" : true,
                    "interfaces" : [
                      "GigabitEthernet1/0",
                      "GigabitEthernet2/0",
                      "Loopback0"
                    ],
                    "metricOfDefaultRoute" : 0,
                    "name" : 1,
                    "stubType" : "NONE"
                  }
                },
                "exportPolicy" : "~OSPF_EXPORT_POLICY:default:1~",
                "processId" : "1",
                "referenceBandwidth" : 1.0E8,
                "routerId" : "2.1.1.1",
                "summaryAdminCost" : 254,
                "summaryDiscardMetric" : 0
              }
            },
            "bgpProcess" : {
              "clientToClientReflection" : true,
              "ebgpAdminCost" : 20,
              "ibgpAdminCost" : 200,
              "localAdminCost" : 200,
              "localOriginationTypeTieBreaker" : "NO_PREFERENCE",
              "networkNextHopIpTieBreaker" : "HIGHEST_NEXT_HOP_IP",
              "redistributeNextHopIpTieBreaker" : "HIGHEST_NEXT_HOP_IP",
              "redistributionPolicy" : "~BGP_REDISTRIBUTION_POLICY:default~",
              "routerId" : "2.1.1.1",
              "aggregates" : [
                {
                  "network" : "2.128.0.0/16",
                  "suppressionPolicy" : "~suppress~rp~summary-only~"
                }
              ],
              "clusterListAsIbgpCost" : true,
              "multipathEbgp" : true,
              "multipathEquivalentAsPathMatchMode" : "EXACT_PATH",
              "multipathIbgp" : true,
              "neighbors" : {
                "2.1.2.1" : {
                  "class" : "org.batfish.datamodel.BgpActivePeerConfig",
                  "checkLocalIpOnAccept" : true,
                  "clusterId" : 33620225,
                  "defaultMetric" : 0,
                  "ebgpMultihop" : false,
                  "enforceFirstAs" : true,
                  "group" : "as2",
                  "ipv4UnicastAddressFamily" : {
                    "addressFamilyCapabilities" : {
                      "additionalPathsReceive" : true,
                      "additionalPathsSelectAll" : true,
                      "additionalPathsSend" : true,
                      "advertiseExternal" : false,
                      "advertiseInactive" : true,
                      "allowLocalAsIn" : false,
                      "allowRemoteAsOut" : "ALWAYS",
                      "sendCommunity" : true,
                      "sendExtendedCommunity" : false
                    },
                    "exportPolicy" : "~BGP_PEER_EXPORT_POLICY:default:2.1.2.1~",
                    "routeReflectorClient" : false
                  },
                  "localAs" : 2,
                  "localIp" : "2.1.1.1",
                  "peerAddress" : "2.1.2.1",
                  "remoteAsns" : "2",
                  "replaceNonLocalAsesOnExport" : false
                },
                "2.1.2.2" : {
                  "class" : "org.batfish.datamodel.BgpActivePeerConfig",
                  "checkLocalIpOnAccept" : true,
                  "clusterId" : 33620225,
                  "defaultMetric" : 0,
                  "ebgpMultihop" : false,
                  "enforceFirstAs" : true,
                  "group" : "as2",
                  "ipv4UnicastAddressFamily" : {
                    "addressFamilyCapabilities" : {
                      "additionalPathsReceive" : true,
                      "additionalPathsSelectAll" : true,
                      "additionalPathsSend" : true,
                      "advertiseExternal" : false,
                      "advertiseInactive" : true,
                      "allowLocalAsIn" : false,
                      "allowRemoteAsOut" : "ALWAYS",
                      "sendCommunity" : true,
                      "sendExtendedCommunity" : false
                    },
                    "exportPolicy" : "~BGP_PEER_EXPORT_POLICY:default:2.1.2.2~",
                    "routeReflectorClient" : false
                  },
                  "localAs" : 2,
                  "localIp" : "2.1.1.1",
                  "peerAddress" : "2.1.2.2",
                  "remoteAsns" : "2",
                  "replaceNonLocalAsesOnExport" : false
                },
                "10.12.11.1" : {
                  "class" : "org.batfish.datamodel.BgpActivePeerConfig",
                  "checkLocalIpOnAccept" : true,
                  "clusterId" : 33620225,
                  "defaultMetric" : 0,
                  "ebgpMultihop" : false,
                  "enforceFirstAs" : true,
                  "group" : "as1",
                  "ipv4UnicastAddressFamily" : {
                    "addressFamilyCapabilities" : {
                      "additionalPathsReceive" : true,
                      "additionalPathsSelectAll" : true,
                      "additionalPathsSend" : true,
                      "advertiseExternal" : false,
                      "advertiseInactive" : true,
                      "allowLocalAsIn" : false,
                      "allowRemoteAsOut" : "ALWAYS",
                      "sendCommunity" : true,
                      "sendExtendedCommunity" : false
                    },
                    "exportPolicy" : "~BGP_PEER_EXPORT_POLICY:default:10.12.11.1~",
                    "exportPolicySources" : [
                      "as2_to_as1"
                    ],
                    "importPolicy" : "as1_to_as2",
                    "importPolicySources" : [
                      "as1_to_as2"
                    ],
                    "routeReflectorClient" : false
                  },
                  "localAs" : 2,
                  "localIp" : "10.12.11.2",
                  "peerAddress" : "10.12.11.1",
                  "remoteAsns" : "1",
                  "replaceNonLocalAsesOnExport" : false
                }
              },
              "tieBreaker" : "ARRIVAL_ORDER"
            },
            "resolutionPolicy" : "~RESOLUTION_POLICY~"
          }
        }
      },
      "as2border2" : {
        "configurationFormat" : "CISCO_IOS",
        "exportBgpFromBgpRib" : true,
        "generateBgpAggregatesFromMainRib" : false,
        "name" : "as2border2",
        "communityMatchExprs" : {
          "as1_community" : {
            "class" : "org.batfish.datamodel.routing_policy.communities.CommunityMatchRegex",
            "communityRendering" : {
              "class" : "org.batfish.datamodel.routing_policy.communities.ColonSeparatedRendering"
            },
            "regex" : "(,|\\{|\\}|^|$| )1:"
          },
          "as2_community" : {
            "class" : "org.batfish.datamodel.routing_policy.communities.CommunityMatchRegex",
            "communityRendering" : {
              "class" : "org.batfish.datamodel.routing_policy.communities.ColonSeparatedRendering"
            },
            "regex" : "(,|\\{|\\}|^|$| )2:"
          },
          "as3_community" : {
            "class" : "org.batfish.datamodel.routing_policy.communities.CommunityMatchRegex",
            "communityRendering" : {
              "class" : "org.batfish.datamodel.routing_policy.communities.ColonSeparatedRendering"
            },
            "regex" : "(,|\\{|\\}|^|$| )3:"
          }
        },
        "communitySetMatchExprs" : {
          "as1_community" : {
            "class" : "org.batfish.datamodel.routing_policy.communities.HasCommunity",
            "expr" : {
              "class" : "org.batfish.datamodel.routing_policy.communities.CommunityMatchRegex",
              "communityRendering" : {
                "class" : "org.batfish.datamodel.routing_policy.communities.ColonSeparatedRendering"
              },
              "regex" : "(,|\\{|\\}|^|$| )1:"
            }
          },
          "as2_community" : {
            "class" : "org.batfish.datamodel.routing_policy.communities.HasCommunity",
            "expr" : {
              "class" : "org.batfish.datamodel.routing_policy.communities.CommunityMatchRegex",
              "communityRendering" : {
                "class" : "org.batfish.datamodel.routing_policy.communities.ColonSeparatedRendering"
              },
              "regex" : "(,|\\{|\\}|^|$| )2:"
            }
          },
          "as3_community" : {
            "class" : "org.batfish.datamodel.routing_policy.communities.HasCommunity",
            "expr" : {
              "class" : "org.batfish.datamodel.routing_policy.communities.CommunityMatchRegex",
              "communityRendering" : {
                "class" : "org.batfish.datamodel.routing_policy.communities.ColonSeparatedRendering"
              },
              "regex" : "(,|\\{|\\}|^|$| )3:"
            }
          }
        },
        "defaultCrossZoneAction" : "PERMIT",
        "defaultInboundAction" : "PERMIT",
        "deviceModel" : "CISCO_UNSPECIFIED",
        "deviceType" : "ROUTER",
        "disconnectAdminDownInterfaces" : true,
        "domainName" : "lab.local",
        "humanName" : "as2border2",
        "interfaces" : {
          "Ethernet0/0" : {
            "name" : "Ethernet0/0",
            "active" : false,
            "additionalArpIps" : {
              "class" : "org.batfish.datamodel.EmptyIpSpace"
            },
            "adminUp" : false,
            "autostate" : true,
            "bandwidth" : 1.0E7,
            "blacklisted" : false,
            "declaredNames" : [
              "Ethernet0/0"
            ],
            "hmm" : false,
            "inactiveReason" : "ADMIN_DOWN",
            "lineUp" : true,
            "mtu" : 1500,
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "speed" : 1.0E7,
            "switchport" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "PHYSICAL",
            "vrf" : "default"
          },
          "GigabitEthernet0/0" : {
            "name" : "GigabitEthernet0/0",
            "active" : true,
            "additionalArpIps" : {
              "class" : "org.batfish.datamodel.EmptyIpSpace"
            },
            "adminUp" : true,
            "allPrefixes" : [
              "10.23.21.2/24"
            ],
            "autostate" : true,
            "bandwidth" : 1.0E9,
            "blacklisted" : false,
            "declaredNames" : [
              "GigabitEthernet0/0"
            ],
            "hmm" : false,
            "incomingFilter" : "OUTSIDE_TO_INSIDE",
            "lineUp" : true,
            "mtu" : 1500,
            "outgoingFilter" : "INSIDE_TO_AS3",
            "prefix" : "10.23.21.2/24",
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "speed" : 1.0E9,
            "switchport" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "PHYSICAL",
            "vrf" : "default"
          },
          "GigabitEthernet1/0" : {
            "name" : "GigabitEthernet1/0",
            "active" : true,
            "additionalArpIps" : {
              "class" : "org.batfish.datamodel.EmptyIpSpace"
            },
            "adminUp" : true,
            "allPrefixes" : [
              "2.12.22.1/24"
            ],
            "autostate" : true,
            "bandwidth" : 1.0E9,
            "blacklisted" : false,
            "declaredNames" : [
              "GigabitEthernet1/0"
            ],
            "hmm" : false,
            "lineUp" : true,
            "mtu" : 1500,
            "ospfSettings" : {
              "area" : 1,
              "cost" : 1,
              "deadInterval" : 40,
              "enabled" : true,
              "helloInterval" : 10,
              "helloMultiplier" : 0,
              "networkType" : "BROADCAST",
              "passive" : false,
              "process" : "1"
            },
            "prefix" : "2.12.22.1/24",
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "speed" : 1.0E9,
            "switchport" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "PHYSICAL",
            "vrf" : "default"
          },
          "GigabitEthernet2/0" : {
            "name" : "GigabitEthernet2/0",
            "active" : true,
            "additionalArpIps" : {
              "class" : "org.batfish.datamodel.EmptyIpSpace"
            },
            "adminUp" : true,
            "allPrefixes" : [
              "2.12.21.1/24"
            ],
            "autostate" : true,
            "bandwidth" : 1.0E9,
            "blacklisted" : false,
            "declaredNames" : [
              "GigabitEthernet2/0"
            ],
            "hmm" : false,
            "lineUp" : true,
            "mtu" : 1500,
            "ospfSettings" : {
              "area" : 1,
              "cost" : 1,
              "deadInterval" : 40,
              "enabled" : true,
              "helloInterval" : 10,
              "helloMultiplier" : 0,
              "networkType" : "BROADCAST",
              "passive" : false,
              "process" : "1"
            },
            "prefix" : "2.12.21.1/24",
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "speed" : 1.0E9,
            "switchport" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "PHYSICAL",
            "vrf" : "default"
          },
          "Loopback0" : {
            "name" : "Loopback0",
            "active" : true,
            "additionalArpIps" : {
              "class" : "org.batfish.datamodel.EmptyIpSpace"
            },
            "adminUp" : true,
            "allPrefixes" : [
              "2.1.1.2/32"
            ],
            "autostate" : true,
            "bandwidth" : 8.0E9,
            "blacklisted" : false,
            "declaredNames" : [
              "Loopback0"
            ],
            "hmm" : false,
            "lineUp" : true,
            "mtu" : 1500,
            "ospfSettings" : {
              "area" : 1,
              "cost" : 1,
              "deadInterval" : 40,
              "enabled" : true,
              "helloInterval" : 10,
              "helloMultiplier" : 0,
              "networkType" : "BROADCAST",
              "passive" : false,
              "process" : "1"
            },
            "prefix" : "2.1.1.2/32",
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "switchport" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "LOOPBACK",
            "vrf" : "default"
          }
        },
        "ipAccessLists" : {
          "101" : {
            "lines" : [
              {
                "class" : "org.batfish.datamodel.ExprAclLine",
                "action" : "PERMIT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "255.255.255.0"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "1.0.1.0"
                    }
                  }
                },
                "name" : "permit ip host 1.0.1.0 host 255.255.255.0",
                "traceElement" : {
                  "fragments" : [
                    {
                      "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                      "text" : "Matched line "
                    },
                    {
                      "class" : "org.batfish.datamodel.TraceElement$LinkFragment",
                      "text" : "permit ip host 1.0.1.0 host 255.255.255.0",
                      "vendorStructureId" : {
                        "filename" : "configs/as2border2.cfg",
                        "structureName" : "101: permit ip host 1.0.1.0 host 255.255.255.0",
                        "structureType" : "extended ipv4 access-list line"
                      }
                    }
                  ]
                },
                "vendorStructureId" : {
                  "filename" : "configs/as2border2.cfg",
                  "structureName" : "101: permit ip host 1.0.1.0 host 255.255.255.0",
                  "structureType" : "extended ipv4 access-list line"
                }
              },
              {
                "class" : "org.batfish.datamodel.ExprAclLine",
                "action" : "PERMIT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "255.255.255.0"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "1.0.2.0"
                    }
                  }
                },
                "name" : "permit ip host 1.0.2.0 host 255.255.255.0",
                "traceElement" : {
                  "fragments" : [
                    {
                      "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                      "text" : "Matched line "
                    },
                    {
                      "class" : "org.batfish.datamodel.TraceElement$LinkFragment",
                      "text" : "permit ip host 1.0.2.0 host 255.255.255.0",
                      "vendorStructureId" : {
                        "filename" : "configs/as2border2.cfg",
                        "structureName" : "101: permit ip host 1.0.2.0 host 255.255.255.0",
                        "structureType" : "extended ipv4 access-list line"
                      }
                    }
                  ]
                },
                "vendorStructureId" : {
                  "filename" : "configs/as2border2.cfg",
                  "structureName" : "101: permit ip host 1.0.2.0 host 255.255.255.0",
                  "structureType" : "extended ipv4 access-list line"
                }
              }
            ],
            "name" : "101",
            "sourceName" : "101",
            "sourceType" : "extended ipv4 access-list"
          },
          "103" : {
            "lines" : [
              {
                "class" : "org.batfish.datamodel.ExprAclLine",
                "action" : "PERMIT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "255.255.255.0"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "3.0.1.0"
                    }
                  }
                },
                "name" : "permit ip host 3.0.1.0 host 255.255.255.0",
                "traceElement" : {
                  "fragments" : [
                    {
                      "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                      "text" : "Matched line "
                    },
                    {
                      "class" : "org.batfish.datamodel.TraceElement$LinkFragment",
                      "text" : "permit ip host 3.0.1.0 host 255.255.255.0",
                      "vendorStructureId" : {
                        "filename" : "configs/as2border2.cfg",
                        "structureName" : "103: permit ip host 3.0.1.0 host 255.255.255.0",
                        "structureType" : "extended ipv4 access-list line"
                      }
                    }
                  ]
                },
                "vendorStructureId" : {
                  "filename" : "configs/as2border2.cfg",
                  "structureName" : "103: permit ip host 3.0.1.0 host 255.255.255.0",
                  "structureType" : "extended ipv4 access-list line"
                }
              },
              {
                "class" : "org.batfish.datamodel.ExprAclLine",
                "action" : "PERMIT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "255.255.255.0"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "3.0.2.0"
                    }
                  }
                },
                "name" : "permit ip host 3.0.2.0 host 255.255.255.0",
                "traceElement" : {
                  "fragments" : [
                    {
                      "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                      "text" : "Matched line "
                    },
                    {
                      "class" : "org.batfish.datamodel.TraceElement$LinkFragment",
                      "text" : "permit ip host 3.0.2.0 host 255.255.255.0",
                      "vendorStructureId" : {
                        "filename" : "configs/as2border2.cfg",
                        "structureName" : "103: permit ip host 3.0.2.0 host 255.255.255.0",
                        "structureType" : "extended ipv4 access-list line"
                      }
                    }
                  ]
                },
                "vendorStructureId" : {
                  "filename" : "configs/as2border2.cfg",
                  "structureName" : "103: permit ip host 3.0.2.0 host 255.255.255.0",
                  "structureType" : "extended ipv4 access-list line"
                }
              }
            ],
            "name" : "103",
            "sourceName" : "103",
            "sourceType" : "extended ipv4 access-list"
          },
          "INSIDE_TO_AS3" : {
            "lines" : [
              {
                "class" : "org.batfish.datamodel.ExprAclLine",
                "action" : "PERMIT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "3.0.0.0/8"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "2.0.0.0/8"
                    }
                  }
                },
                "name" : "permit ip 2.0.0.0 0.255.255.255 3.0.0.0 0.255.255.255",
                "traceElement" : {
                  "fragments" : [
                    {
                      "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                      "text" : "Matched line "
                    },
                    {
                      "class" : "org.batfish.datamodel.TraceElement$LinkFragment",
                      "text" : "permit ip 2.0.0.0 0.255.255.255 3.0.0.0 0.255.255.255",
                      "vendorStructureId" : {
                        "filename" : "configs/as2border2.cfg",
                        "structureName" : "INSIDE_TO_AS3: permit ip 2.0.0.0 0.255.255.255 3.0.0.0 0.255.255.255",
                        "structureType" : "extended ipv4 access-list line"
                      }
                    }
                  ]
                },
                "vendorStructureId" : {
                  "filename" : "configs/as2border2.cfg",
                  "structureName" : "INSIDE_TO_AS3: permit ip 2.0.0.0 0.255.255.255 3.0.0.0 0.255.255.255",
                  "structureType" : "extended ipv4 access-list line"
                }
              },
              {
                "class" : "org.batfish.datamodel.ExprAclLine",
                "action" : "PERMIT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "10.23.21.3"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "10.23.21.2"
                    }
                  }
                },
                "name" : "permit ip 10.23.21.2 0.0.0.0 10.23.21.3 0.0.0.0",
                "traceElement" : {
                  "fragments" : [
                    {
                      "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                      "text" : "Matched line "
                    },
                    {
                      "class" : "org.batfish.datamodel.TraceElement$LinkFragment",
                      "text" : "permit ip 10.23.21.2 0.0.0.0 10.23.21.3 0.0.0.0",
                      "vendorStructureId" : {
                        "filename" : "configs/as2border2.cfg",
                        "structureName" : "INSIDE_TO_AS3: permit ip 10.23.21.2 0.0.0.0 10.23.21.3 0.0.0.0",
                        "structureType" : "extended ipv4 access-list line"
                      }
                    }
                  ]
                },
                "vendorStructureId" : {
                  "filename" : "configs/as2border2.cfg",
                  "structureName" : "INSIDE_TO_AS3: permit ip 10.23.21.2 0.0.0.0 10.23.21.3 0.0.0.0",
                  "structureType" : "extended ipv4 access-list line"
                }
              },
              {
                "class" : "org.batfish.datamodel.ExprAclLine",
                "action" : "DENY",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "0.0.0.0/0"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "0.0.0.0/0"
                    }
                  }
                },
                "name" : "deny   ip any any",
                "traceElement" : {
                  "fragments" : [
                    {
                      "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                      "text" : "Matched line "
                    },
                    {
                      "class" : "org.batfish.datamodel.TraceElement$LinkFragment",
                      "text" : "deny   ip any any",
                      "vendorStructureId" : {
                        "filename" : "configs/as2border2.cfg",
                        "structureName" : "INSIDE_TO_AS3: deny   ip any any",
                        "structureType" : "extended ipv4 access-list line"
                      }
                    }
                  ]
                },
                "vendorStructureId" : {
                  "filename" : "configs/as2border2.cfg",
                  "structureName" : "INSIDE_TO_AS3: deny   ip any any",
                  "structureType" : "extended ipv4 access-list line"
                }
              }
            ],
            "name" : "INSIDE_TO_AS3",
            "sourceName" : "INSIDE_TO_AS3",
            "sourceType" : "extended ipv4 access-list"
          },
          "OUTSIDE_TO_INSIDE" : {
            "lines" : [
              {
                "class" : "org.batfish.datamodel.ExprAclLine",
                "action" : "DENY",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "0.0.0.0/0"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "2.0.0.0/8"
                    }
                  }
                },
                "name" : "deny   ip 2.0.0.0 0.255.255.255 any",
                "traceElement" : {
                  "fragments" : [
                    {
                      "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                      "text" : "Matched line "
                    },
                    {
                      "class" : "org.batfish.datamodel.TraceElement$LinkFragment",
                      "text" : "deny   ip 2.0.0.0 0.255.255.255 any",
                      "vendorStructureId" : {
                        "filename" : "configs/as2border2.cfg",
                        "structureName" : "OUTSIDE_TO_INSIDE: deny   ip 2.0.0.0 0.255.255.255 any",
                        "structureType" : "extended ipv4 access-list line"
                      }
                    }
                  ]
                },
                "vendorStructureId" : {
                  "filename" : "configs/as2border2.cfg",
                  "structureName" : "OUTSIDE_TO_INSIDE: deny   ip 2.0.0.0 0.255.255.255 any",
                  "structureType" : "extended ipv4 access-list line"
                }
              },
              {
                "class" : "org.batfish.datamodel.ExprAclLine",
                "action" : "PERMIT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "0.0.0.0/0"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "0.0.0.0/0"
                    }
                  }
                },
                "name" : "permit ip any any",
                "traceElement" : {
                  "fragments" : [
                    {
                      "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                      "text" : "Matched line "
                    },
                    {
                      "class" : "org.batfish.datamodel.TraceElement$LinkFragment",
                      "text" : "permit ip any any",
                      "vendorStructureId" : {
                        "filename" : "configs/as2border2.cfg",
                        "structureName" : "OUTSIDE_TO_INSIDE: permit ip any any",
                        "structureType" : "extended ipv4 access-list line"
                      }
                    }
                  ]
                },
                "vendorStructureId" : {
                  "filename" : "configs/as2border2.cfg",
                  "structureName" : "OUTSIDE_TO_INSIDE: permit ip any any",
                  "structureType" : "extended ipv4 access-list line"
                }
              }
            ],
            "name" : "OUTSIDE_TO_INSIDE",
            "sourceName" : "OUTSIDE_TO_INSIDE",
            "sourceType" : "extended ipv4 access-list"
          }
        },
        "mainRibEnforceResolvability" : false,
        "ntpServers" : [
          "18.18.18.18"
        ],
        "routeFilterLists" : {
          "101" : {
            "lines" : [
              {
                "action" : "PERMIT",
                "ipWildcard" : "1.0.1.0/24",
                "lengthRange" : "24-24"
              },
              {
                "action" : "PERMIT",
                "ipWildcard" : "1.0.2.0/24",
                "lengthRange" : "24-24"
              }
            ],
            "name" : "101",
            "vendorStructureId" : {
              "filename" : "configs/as2border2.cfg",
              "structureName" : "101",
              "structureType" : "extended ipv4 access-list"
            }
          },
          "103" : {
            "lines" : [
              {
                "action" : "PERMIT",
                "ipWildcard" : "3.0.1.0/24",
                "lengthRange" : "24-24"
              },
              {
                "action" : "PERMIT",
                "ipWildcard" : "3.0.2.0/24",
                "lengthRange" : "24-24"
              }
            ],
            "name" : "103",
            "vendorStructureId" : {
              "filename" : "configs/as2border2.cfg",
              "structureName" : "103",
              "structureType" : "extended ipv4 access-list"
            }
          },
          "inbound_route_filter" : {
            "lines" : [
              {
                "action" : "DENY",
                "ipWildcard" : "2.0.0.0/8",
                "lengthRange" : "8-32"
              },
              {
                "action" : "PERMIT",
                "ipWildcard" : "0.0.0.0/0",
                "lengthRange" : "0-32"
              }
            ],
            "name" : "inbound_route_filter",
            "vendorStructureId" : {
              "filename" : "configs/as2border2.cfg",
              "structureName" : "inbound_route_filter",
              "structureType" : "ipv4 prefix-list"
            }
          },
          "outbound_routes" : {
            "lines" : [
              {
                "action" : "PERMIT",
                "ipWildcard" : "2.128.0.0/9",
                "lengthRange" : "16-32"
              }
            ],
            "name" : "outbound_routes",
            "vendorStructureId" : {
              "filename" : "configs/as2border2.cfg",
              "structureName" : "outbound_routes",
              "structureType" : "ipv4 prefix-list"
            }
          },
          "~MATCH_SUPPRESSED_SUMMARY_ONLY:default~" : {
            "lines" : [
              {
                "action" : "PERMIT",
                "ipWildcard" : "2.128.0.0/16",
                "lengthRange" : "17-32"
              }
            ],
            "name" : "~MATCH_SUPPRESSED_SUMMARY_ONLY:default~"
          }
        },
        "routingPolicies" : {
          "as1_to_as2" : {
            "name" : "as1_to_as2",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "~RMCLAUSE~as1_to_as2~100~",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ReturnLocalDefaultAction"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.communities.MatchCommunities",
                  "communitySetExpr" : {
                    "class" : "org.batfish.datamodel.routing_policy.communities.InputCommunities"
                  },
                  "communitySetMatchExpr" : {
                    "class" : "org.batfish.datamodel.routing_policy.communities.CommunitySetMatchExprReference",
                    "name" : "as1_community"
                  }
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.TraceableStatement",
                    "innerStatements" : [
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.SetLocalPreference",
                        "localPreference" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.LiteralLong",
                          "value" : 350
                        }
                      },
                      {
                        "class" : "org.batfish.datamodel.routing_policy.communities.SetCommunities",
                        "communitySetExpr" : {
                          "class" : "org.batfish.datamodel.routing_policy.communities.CommunitySetUnion",
                          "exprs" : [
                            {
                              "class" : "org.batfish.datamodel.routing_policy.communities.InputCommunities"
                            },
                            {
                              "class" : "org.batfish.datamodel.routing_policy.communities.LiteralCommunitySet",
                              "communitySet" : [
                                "1:2"
                              ]
                            }
                          ]
                        }
                      },
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                        "type" : "ReturnTrue"
                      }
                    ],
                    "traceElement" : {
                      "fragments" : [
                        {
                          "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                          "text" : "Matched "
                        },
                        {
                          "class" : "org.batfish.datamodel.TraceElement$LinkFragment",
                          "text" : "route-map as1_to_as2 clause 100",
                          "vendorStructureId" : {
                            "filename" : "configs/as2border2.cfg",
                            "structureName" : "as1_to_as2 100",
                            "structureType" : "route-map-clause"
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            ]
          },
          "as2_to_as1" : {
            "name" : "as2_to_as1",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "~RMCLAUSE~as2_to_as1~2~",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.If",
                    "comment" : "~RMCLAUSE~as2_to_as1~3~",
                    "falseStatements" : [
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                        "type" : "ReturnLocalDefaultAction"
                      }
                    ],
                    "guard" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                      "prefix" : {
                        "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                      },
                      "prefixSet" : {
                        "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                        "name" : "103"
                      }
                    },
                    "trueStatements" : [
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.TraceableStatement",
                        "innerStatements" : [
                          {
                            "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
                            "metric" : {
                              "class" : "org.batfish.datamodel.routing_policy.expr.LiteralLong",
                              "value" : 50
                            }
                          },
                          {
                            "class" : "org.batfish.datamodel.routing_policy.communities.SetCommunities",
                            "communitySetExpr" : {
                              "class" : "org.batfish.datamodel.routing_policy.communities.CommunitySetUnion",
                              "exprs" : [
                                {
                                  "class" : "org.batfish.datamodel.routing_policy.communities.InputCommunities"
                                },
                                {
                                  "class" : "org.batfish.datamodel.routing_policy.communities.LiteralCommunitySet",
                                  "communitySet" : [
                                    "2:1"
                                  ]
                                }
                              ]
                            }
                          },
                          {
                            "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                            "type" : "ReturnTrue"
                          }
                        ],
                        "traceElement" : {
                          "fragments" : [
                            {
                              "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                              "text" : "Matched "
                            },
                            {
                              "class" : "org.batfish.datamodel.TraceElement$LinkFragment",
                              "text" : "route-map as2_to_as1 clause 3",
                              "vendorStructureId" : {
                                "filename" : "configs/as2border2.cfg",
                                "structureName" : "as2_to_as1 3",
                                "structureType" : "route-map-clause"
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                  "prefix" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                  },
                  "prefixSet" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                    "name" : "outbound_routes"
                  }
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.TraceableStatement",
                    "innerStatements" : [
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
                        "metric" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.LiteralLong",
                          "value" : 50
                        }
                      },
                      {
                        "class" : "org.batfish.datamodel.routing_policy.communities.SetCommunities",
                        "communitySetExpr" : {
                          "class" : "org.batfish.datamodel.routing_policy.communities.CommunitySetUnion",
                          "exprs" : [
                            {
                              "class" : "org.batfish.datamodel.routing_policy.communities.InputCommunities"
                            },
                            {
                              "class" : "org.batfish.datamodel.routing_policy.communities.LiteralCommunitySet",
                              "communitySet" : [
                                "2:1"
                              ]
                            }
                          ]
                        }
                      },
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                        "type" : "ReturnTrue"
                      }
                    ],
                    "traceElement" : {
                      "fragments" : [
                        {
                          "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                          "text" : "Matched "
                        },
                        {
                          "class" : "org.batfish.datamodel.TraceElement$LinkFragment",
                          "text" : "route-map as2_to_as1 clause 2",
                          "vendorStructureId" : {
                            "filename" : "configs/as2border2.cfg",
                            "structureName" : "as2_to_as1 2",
                            "structureType" : "route-map-clause"
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            ]
          },
          "as2_to_as3" : {
            "name" : "as2_to_as3",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "~RMCLAUSE~as2_to_as3~1~",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.If",
                    "comment" : "~RMCLAUSE~as2_to_as3~2~",
                    "falseStatements" : [
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                        "type" : "ReturnLocalDefaultAction"
                      }
                    ],
                    "guard" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                      "prefix" : {
                        "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                      },
                      "prefixSet" : {
                        "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                        "name" : "outbound_routes"
                      }
                    },
                    "trueStatements" : [
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.TraceableStatement",
                        "innerStatements" : [
                          {
                            "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
                            "metric" : {
                              "class" : "org.batfish.datamodel.routing_policy.expr.LiteralLong",
                              "value" : 50
                            }
                          },
                          {
                            "class" : "org.batfish.datamodel.routing_policy.communities.SetCommunities",
                            "communitySetExpr" : {
                              "class" : "org.batfish.datamodel.routing_policy.communities.CommunitySetUnion",
                              "exprs" : [
                                {
                                  "class" : "org.batfish.datamodel.routing_policy.communities.InputCommunities"
                                },
                                {
                                  "class" : "org.batfish.datamodel.routing_policy.communities.LiteralCommunitySet",
                                  "communitySet" : [
                                    "2:3"
                                  ]
                                }
                              ]
                            }
                          },
                          {
                            "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                            "type" : "ReturnTrue"
                          }
                        ],
                        "traceElement" : {
                          "fragments" : [
                            {
                              "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                              "text" : "Matched "
                            },
                            {
                              "class" : "org.batfish.datamodel.TraceElement$LinkFragment",
                              "text" : "route-map as2_to_as3 clause 2",
                              "vendorStructureId" : {
                                "filename" : "configs/as2border2.cfg",
                                "structureName" : "as2_to_as3 2",
                                "structureType" : "route-map-clause"
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                  "prefix" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                  },
                  "prefixSet" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                    "name" : "101"
                  }
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.TraceableStatement",
                    "innerStatements" : [
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
                        "metric" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.LiteralLong",
                          "value" : 50
                        }
                      },
                      {
                        "class" : "org.batfish.datamodel.routing_policy.communities.SetCommunities",
                        "communitySetExpr" : {
                          "class" : "org.batfish.datamodel.routing_policy.communities.CommunitySetUnion",
                          "exprs" : [
                            {
                              "class" : "org.batfish.datamodel.routing_policy.communities.InputCommunities"
                            },
                            {
                              "class" : "org.batfish.datamodel.routing_policy.communities.LiteralCommunitySet",
                              "communitySet" : [
                                "2:3"
                              ]
                            }
                          ]
                        }
                      },
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                        "type" : "ReturnTrue"
                      }
                    ],
                    "traceElement" : {
                      "fragments" : [
                        {
                          "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                          "text" : "Matched "
                        },
                        {
                          "class" : "org.batfish.datamodel.TraceElement$LinkFragment",
                          "text" : "route-map as2_to_as3 clause 1",
                          "vendorStructureId" : {
                            "filename" : "configs/as2border2.cfg",
                            "structureName" : "as2_to_as3 1",
                            "structureType" : "route-map-clause"
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            ]
          },
          "as3_to_as2" : {
            "name" : "as3_to_as2",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "~RMCLAUSE~as3_to_as2~100~",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ReturnLocalDefaultAction"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.communities.MatchCommunities",
                  "communitySetExpr" : {
                    "class" : "org.batfish.datamodel.routing_policy.communities.InputCommunities"
                  },
                  "communitySetMatchExpr" : {
                    "class" : "org.batfish.datamodel.routing_policy.communities.CommunitySetMatchExprReference",
                    "name" : "as3_community"
                  }
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.TraceableStatement",
                    "innerStatements" : [
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.SetLocalPreference",
                        "localPreference" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.LiteralLong",
                          "value" : 350
                        }
                      },
                      {
                        "class" : "org.batfish.datamodel.routing_policy.communities.SetCommunities",
                        "communitySetExpr" : {
                          "class" : "org.batfish.datamodel.routing_policy.communities.CommunitySetUnion",
                          "exprs" : [
                            {
                              "class" : "org.batfish.datamodel.routing_policy.communities.InputCommunities"
                            },
                            {
                              "class" : "org.batfish.datamodel.routing_policy.communities.LiteralCommunitySet",
                              "communitySet" : [
                                "3:2"
                              ]
                            }
                          ]
                        }
                      },
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                        "type" : "ReturnTrue"
                      }
                    ],
                    "traceElement" : {
                      "fragments" : [
                        {
                          "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                          "text" : "Matched "
                        },
                        {
                          "class" : "org.batfish.datamodel.TraceElement$LinkFragment",
                          "text" : "route-map as3_to_as2 clause 100",
                          "vendorStructureId" : {
                            "filename" : "configs/as2border2.cfg",
                            "structureName" : "as3_to_as2 100",
                            "structureType" : "route-map-clause"
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            ]
          },
          "~BGP_COMMON_EXPORT_POLICY:default~" : {
            "name" : "~BGP_COMMON_EXPORT_POLICY:default~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "Suppress more specific networks for summary-only aggregate-address networks",
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                  "prefix" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                  },
                  "prefixSet" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                    "name" : "~MATCH_SUPPRESSED_SUMMARY_ONLY:default~"
                  }
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "Suppress"
                  }
                ]
              },
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                "type" : "ReturnTrue"
              }
            ]
          },
          "~BGP_PEER_EXPORT_POLICY:default:10.23.21.3~" : {
            "name" : "~BGP_PEER_EXPORT_POLICY:default:10.23.21.3~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "peer-export policy main conditional: exitAccept if true / exitReject if false",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitReject"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.Conjunction",
                  "conjuncts" : [
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                      "calledPolicyName" : "~BGP_COMMON_EXPORT_POLICY:default~"
                    },
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                      "calledPolicyName" : "as2_to_as3"
                    }
                  ]
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitAccept"
                  }
                ]
              }
            ]
          },
          "~BGP_PEER_EXPORT_POLICY:default:2.1.2.1~" : {
            "name" : "~BGP_PEER_EXPORT_POLICY:default:2.1.2.1~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "peer-export policy main conditional: exitAccept if true / exitReject if false",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitReject"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                  "calledPolicyName" : "~BGP_COMMON_EXPORT_POLICY:default~"
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitAccept"
                  }
                ]
              }
            ]
          },
          "~BGP_PEER_EXPORT_POLICY:default:2.1.2.2~" : {
            "name" : "~BGP_PEER_EXPORT_POLICY:default:2.1.2.2~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "peer-export policy main conditional: exitAccept if true / exitReject if false",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitReject"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                  "calledPolicyName" : "~BGP_COMMON_EXPORT_POLICY:default~"
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitAccept"
                  }
                ]
              }
            ]
          },
          "~BGP_REDISTRIBUTION_POLICY:default~" : {
            "name" : "~BGP_REDISTRIBUTION_POLICY:default~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.SetWeight",
                "weight" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.LiteralInt",
                  "value" : 32768
                }
              },
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                "type" : "ExitReject"
              }
            ]
          },
          "~OSPF_EXPORT_POLICY:default:1~" : {
            "name" : "~OSPF_EXPORT_POLICY:default:1~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "OSPF export routes for connected",
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.Conjunction",
                  "conjuncts" : [
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                      "protocols" : [
                        "connected"
                      ]
                    },
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.Not",
                      "expr" : {
                        "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                        "comment" : "match default route",
                        "prefix" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                        },
                        "prefixSet" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.ExplicitPrefixSet",
                          "prefixSpace" : [
                            "0.0.0.0/0"
                          ]
                        }
                      }
                    }
                  ]
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.SetOspfMetricType",
                    "metricType" : "E2"
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
                    "metric" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.LiteralLong",
                      "value" : 20
                    }
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitAccept"
                  }
                ]
              }
            ]
          },
          "~RESOLUTION_POLICY~" : {
            "name" : "~RESOLUTION_POLICY~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ReturnTrue"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                  "comment" : "match default route",
                  "prefix" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                  },
                  "prefixSet" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.ExplicitPrefixSet",
                    "prefixSpace" : [
                      "0.0.0.0/0"
                    ]
                  }
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ReturnFalse"
                  }
                ]
              }
            ]
          },
          "~suppress~rp~summary-only~" : {
            "name" : "~suppress~rp~summary-only~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                "type" : "ExitAccept"
              }
            ]
          }
        },
        "vendorFamily" : {
          "cisco" : {
            "aaa" : {
              "newModel" : false
            },
            "hostname" : "as2border2",
            "lines" : {
              "aux0" : {
                "name" : "aux0",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0,
                "lineType" : "AUX"
              },
              "con0" : {
                "name" : "con0",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0,
                "lineType" : "CON"
              },
              "vty0" : {
                "name" : "vty0",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0,
                "lineType" : "VTY"
              },
              "vty1" : {
                "name" : "vty1",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0,
                "lineType" : "VTY"
              },
              "vty2" : {
                "name" : "vty2",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0,
                "lineType" : "VTY"
              },
              "vty3" : {
                "name" : "vty3",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0,
                "lineType" : "VTY"
              },
              "vty4" : {
                "name" : "vty4",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0,
                "lineType" : "VTY"
              }
            },
            "logging" : {
              "on" : true
            },
            "ntp" : {
              "servers" : {
                "18.18.18.18" : {
                  "name" : "18.18.18.18"
                }
              }
            },
            "services" : {
              "timestamps" : {
                "enabled" : true,
                "subservices" : {
                  "debug" : {
                    "enabled" : true,
                    "subservices" : {
                      "datetime" : {
                        "enabled" : true,
                        "subservices" : {
                          "msec" : {
                            "enabled" : true
                          }
                        }
                      }
                    }
                  },
                  "log" : {
                    "enabled" : true,
                    "subservices" : {
                      "datetime" : {
                        "enabled" : true,
                        "subservices" : {
                          "msec" : {
                            "enabled" : true
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "vrfs" : {
          "default" : {
            "name" : "default",
            "ospfProcesses" : {
              "1" : {
                "adminCosts" : {
                  "ospf" : 110,
                  "ospfE1" : 110,
                  "ospfE2" : 110,
                  "ospfIA" : 110,
                  "ospfIS" : 110
                },
                "areas" : {
                  "1" : {
                    "injectDefaultRoute" : true,
                    "interfaces" : [
                      "GigabitEthernet1/0",
                      "GigabitEthernet2/0",
                      "Loopback0"
                    ],
                    "metricOfDefaultRoute" : 0,
                    "name" : 1,
                    "stubType" : "NONE"
                  }
                },
                "exportPolicy" : "~OSPF_EXPORT_POLICY:default:1~",
                "processId" : "1",
                "referenceBandwidth" : 1.0E8,
                "routerId" : "2.1.1.2",
                "summaryAdminCost" : 254,
                "summaryDiscardMetric" : 0
              }
            },
            "bgpProcess" : {
              "clientToClientReflection" : true,
              "ebgpAdminCost" : 20,
              "ibgpAdminCost" : 200,
              "localAdminCost" : 200,
              "localOriginationTypeTieBreaker" : "NO_PREFERENCE",
              "networkNextHopIpTieBreaker" : "HIGHEST_NEXT_HOP_IP",
              "redistributeNextHopIpTieBreaker" : "HIGHEST_NEXT_HOP_IP",
              "redistributionPolicy" : "~BGP_REDISTRIBUTION_POLICY:default~",
              "routerId" : "2.1.1.2",
              "aggregates" : [
                {
                  "network" : "2.128.0.0/16",
                  "suppressionPolicy" : "~suppress~rp~summary-only~"
                }
              ],
              "clusterListAsIbgpCost" : true,
              "multipathEbgp" : true,
              "multipathEquivalentAsPathMatchMode" : "EXACT_PATH",
              "multipathIbgp" : true,
              "neighbors" : {
                "2.1.2.1" : {
                  "class" : "org.batfish.datamodel.BgpActivePeerConfig",
                  "checkLocalIpOnAccept" : true,
                  "clusterId" : 33620226,
                  "defaultMetric" : 0,
                  "ebgpMultihop" : false,
                  "enforceFirstAs" : true,
                  "group" : "as2",
                  "ipv4UnicastAddressFamily" : {
                    "addressFamilyCapabilities" : {
                      "additionalPathsReceive" : true,
                      "additionalPathsSelectAll" : true,
                      "additionalPathsSend" : true,
                      "advertiseExternal" : false,
                      "advertiseInactive" : true,
                      "allowLocalAsIn" : false,
                      "allowRemoteAsOut" : "ALWAYS",
                      "sendCommunity" : true,
                      "sendExtendedCommunity" : false
                    },
                    "exportPolicy" : "~BGP_PEER_EXPORT_POLICY:default:2.1.2.1~",
                    "routeReflectorClient" : false
                  },
                  "localAs" : 2,
                  "localIp" : "2.1.1.2",
                  "peerAddress" : "2.1.2.1",
                  "remoteAsns" : "2",
                  "replaceNonLocalAsesOnExport" : false
                },
                "2.1.2.2" : {
                  "class" : "org.batfish.datamodel.BgpActivePeerConfig",
                  "checkLocalIpOnAccept" : true,
                  "clusterId" : 33620226,
                  "defaultMetric" : 0,
                  "ebgpMultihop" : false,
                  "enforceFirstAs" : true,
                  "group" : "as2",
                  "ipv4UnicastAddressFamily" : {
                    "addressFamilyCapabilities" : {
                      "additionalPathsReceive" : true,
                      "additionalPathsSelectAll" : true,
                      "additionalPathsSend" : true,
                      "advertiseExternal" : false,
                      "advertiseInactive" : true,
                      "allowLocalAsIn" : false,
                      "allowRemoteAsOut" : "ALWAYS",
                      "sendCommunity" : true,
                      "sendExtendedCommunity" : false
                    },
                    "exportPolicy" : "~BGP_PEER_EXPORT_POLICY:default:2.1.2.2~",
                    "routeReflectorClient" : false
                  },
                  "localAs" : 2,
                  "localIp" : "2.1.1.2",
                  "peerAddress" : "2.1.2.2",
                  "remoteAsns" : "2",
                  "replaceNonLocalAsesOnExport" : false
                },
                "10.23.21.3" : {
                  "class" : "org.batfish.datamodel.BgpActivePeerConfig",
                  "checkLocalIpOnAccept" : true,
                  "clusterId" : 33620226,
                  "defaultMetric" : 0,
                  "ebgpMultihop" : false,
                  "enforceFirstAs" : true,
                  "group" : "as3",
                  "ipv4UnicastAddressFamily" : {
                    "addressFamilyCapabilities" : {
                      "additionalPathsReceive" : true,
                      "additionalPathsSelectAll" : true,
                      "additionalPathsSend" : true,
                      "advertiseExternal" : false,
                      "advertiseInactive" : true,
                      "allowLocalAsIn" : false,
                      "allowRemoteAsOut" : "ALWAYS",
                      "sendCommunity" : true,
                      "sendExtendedCommunity" : false
                    },
                    "exportPolicy" : "~BGP_PEER_EXPORT_POLICY:default:10.23.21.3~",
                    "exportPolicySources" : [
                      "as2_to_as3"
                    ],
                    "importPolicy" : "as3_to_as2",
                    "importPolicySources" : [
                      "as3_to_as2"
                    ],
                    "routeReflectorClient" : false
                  },
                  "localAs" : 2,
                  "localIp" : "10.23.21.2",
                  "peerAddress" : "10.23.21.3",
                  "remoteAsns" : "3",
                  "replaceNonLocalAsesOnExport" : false
                }
              },
              "tieBreaker" : "ARRIVAL_ORDER"
            },
            "resolutionPolicy" : "~RESOLUTION_POLICY~"
          }
        }
      },
      "as2core1" : {
        "configurationFormat" : "CISCO_IOS",
        "exportBgpFromBgpRib" : true,
        "generateBgpAggregatesFromMainRib" : false,
        "name" : "as2core1",
        "defaultCrossZoneAction" : "PERMIT",
        "defaultInboundAction" : "PERMIT",
        "deviceModel" : "CISCO_UNSPECIFIED",
        "deviceType" : "ROUTER",
        "disconnectAdminDownInterfaces" : true,
        "domainName" : "lab.local",
        "humanName" : "as2core1",
        "interfaces" : {
          "Ethernet0/0" : {
            "name" : "Ethernet0/0",
            "active" : false,
            "additionalArpIps" : {
              "class" : "org.batfish.datamodel.EmptyIpSpace"
            },
            "adminUp" : false,
            "autostate" : true,
            "bandwidth" : 1.0E7,
            "blacklisted" : false,
            "declaredNames" : [
              "Ethernet0/0"
            ],
            "hmm" : false,
            "inactiveReason" : "ADMIN_DOWN",
            "lineUp" : true,
            "mtu" : 1500,
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "speed" : 1.0E7,
            "switchport" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "PHYSICAL",
            "vrf" : "default"
          },
          "GigabitEthernet0/0" : {
            "name" : "GigabitEthernet0/0",
            "active" : true,
            "additionalArpIps" : {
              "class" : "org.batfish.datamodel.EmptyIpSpace"
            },
            "adminUp" : true,
            "allPrefixes" : [
              "2.12.11.2/24"
            ],
            "autostate" : true,
            "bandwidth" : 1.0E9,
            "blacklisted" : false,
            "declaredNames" : [
              "GigabitEthernet0/0"
            ],
            "hmm" : false,
            "lineUp" : true,
            "mtu" : 1500,
            "ospfSettings" : {
              "area" : 1,
              "cost" : 1,
              "deadInterval" : 40,
              "enabled" : true,
              "helloInterval" : 10,
              "helloMultiplier" : 0,
              "networkType" : "BROADCAST",
              "passive" : false,
              "process" : "1"
            },
            "prefix" : "2.12.11.2/24",
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "speed" : 1.0E9,
            "switchport" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "PHYSICAL",
            "vrf" : "default"
          },
          "GigabitEthernet1/0" : {
            "name" : "GigabitEthernet1/0",
            "active" : true,
            "additionalArpIps" : {
              "class" : "org.batfish.datamodel.EmptyIpSpace"
            },
            "adminUp" : true,
            "allPrefixes" : [
              "2.12.21.2/24"
            ],
            "autostate" : true,
            "bandwidth" : 1.0E9,
            "blacklisted" : false,
            "declaredNames" : [
              "GigabitEthernet1/0"
            ],
            "hmm" : false,
            "lineUp" : true,
            "mtu" : 1500,
            "ospfSettings" : {
              "area" : 1,
              "cost" : 1,
              "deadInterval" : 40,
              "enabled" : true,
              "helloInterval" : 10,
              "helloMultiplier" : 0,
              "networkType" : "BROADCAST",
              "passive" : false,
              "process" : "1"
            },
            "prefix" : "2.12.21.2/24",
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "speed" : 1.0E9,
            "switchport" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "PHYSICAL",
            "vrf" : "default"
          },
          "GigabitEthernet2/0" : {
            "name" : "GigabitEthernet2/0",
            "active" : true,
            "additionalArpIps" : {
              "class" : "org.batfish.datamodel.EmptyIpSpace"
            },
            "adminUp" : true,
            "allPrefixes" : [
              "2.23.11.2/24"
            ],
            "autostate" : true,
            "bandwidth" : 1.0E9,
            "blacklisted" : false,
            "declaredNames" : [
              "GigabitEthernet2/0"
            ],
            "hmm" : false,
            "incomingFilter" : "blocktelnet",
            "lineUp" : true,
            "mtu" : 1500,
            "ospfSettings" : {
              "area" : 1,
              "cost" : 1,
              "deadInterval" : 40,
              "enabled" : true,
              "helloInterval" : 10,
              "helloMultiplier" : 0,
              "networkType" : "BROADCAST",
              "passive" : false,
              "process" : "1"
            },
            "prefix" : "2.23.11.2/24",
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "speed" : 1.0E9,
            "switchport" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "PHYSICAL",
            "vrf" : "default"
          },
          "GigabitEthernet3/0" : {
            "name" : "GigabitEthernet3/0",
            "active" : true,
            "additionalArpIps" : {
              "class" : "org.batfish.datamodel.EmptyIpSpace"
            },
            "adminUp" : true,
            "allPrefixes" : [
              "2.23.12.2/24"
            ],
            "autostate" : true,
            "bandwidth" : 1.0E9,
            "blacklisted" : false,
            "declaredNames" : [
              "GigabitEthernet3/0"
            ],
            "hmm" : false,
            "incomingFilter" : "blocktelnet",
            "lineUp" : true,
            "mtu" : 1500,
            "ospfSettings" : {
              "area" : 1,
              "cost" : 1,
              "deadInterval" : 40,
              "enabled" : true,
              "helloInterval" : 10,
              "helloMultiplier" : 0,
              "networkType" : "BROADCAST",
              "passive" : false,
              "process" : "1"
            },
            "prefix" : "2.23.12.2/24",
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "speed" : 1.0E9,
            "switchport" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "PHYSICAL",
            "vrf" : "default"
          },
          "Loopback0" : {
            "name" : "Loopback0",
            "active" : true,
            "additionalArpIps" : {
              "class" : "org.batfish.datamodel.EmptyIpSpace"
            },
            "adminUp" : true,
            "allPrefixes" : [
              "2.1.2.1/32"
            ],
            "autostate" : true,
            "bandwidth" : 8.0E9,
            "blacklisted" : false,
            "declaredNames" : [
              "Loopback0"
            ],
            "hmm" : false,
            "lineUp" : true,
            "mtu" : 1500,
            "ospfSettings" : {
              "area" : 1,
              "cost" : 1,
              "deadInterval" : 40,
              "enabled" : true,
              "helloInterval" : 10,
              "helloMultiplier" : 0,
              "networkType" : "BROADCAST",
              "passive" : false,
              "process" : "1"
            },
            "prefix" : "2.1.2.1/32",
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "switchport" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "LOOPBACK",
            "vrf" : "default"
          }
        },
        "ipAccessLists" : {
          "blocktelnet" : {
            "lines" : [
              {
                "class" : "org.batfish.datamodel.ExprAclLine",
                "action" : "DENY",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "0.0.0.0/0"
                    },
                    "dstPorts" : [
                      "23-23"
                    ],
                    "ipProtocols" : [
                      "TCP"
                    ],
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "0.0.0.0/0"
                    }
                  }
                },
                "name" : "deny   tcp any any eq telnet",
                "traceElement" : {
                  "fragments" : [
                    {
                      "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                      "text" : "Matched line "
                    },
                    {
                      "class" : "org.batfish.datamodel.TraceElement$LinkFragment",
                      "text" : "deny   tcp any any eq telnet",
                      "vendorStructureId" : {
                        "filename" : "configs/as2core1.cfg",
                        "structureName" : "blocktelnet: deny   tcp any any eq telnet",
                        "structureType" : "extended ipv4 access-list line"
                      }
                    }
                  ]
                },
                "vendorStructureId" : {
                  "filename" : "configs/as2core1.cfg",
                  "structureName" : "blocktelnet: deny   tcp any any eq telnet",
                  "structureType" : "extended ipv4 access-list line"
                }
              },
              {
                "class" : "org.batfish.datamodel.ExprAclLine",
                "action" : "PERMIT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "0.0.0.0/0"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "0.0.0.0/0"
                    }
                  }
                },
                "name" : "permit ip any any",
                "traceElement" : {
                  "fragments" : [
                    {
                      "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                      "text" : "Matched line "
                    },
                    {
                      "class" : "org.batfish.datamodel.TraceElement$LinkFragment",
                      "text" : "permit ip any any",
                      "vendorStructureId" : {
                        "filename" : "configs/as2core1.cfg",
                        "structureName" : "blocktelnet: permit ip any any",
                        "structureType" : "extended ipv4 access-list line"
                      }
                    }
                  ]
                },
                "vendorStructureId" : {
                  "filename" : "configs/as2core1.cfg",
                  "structureName" : "blocktelnet: permit ip any any",
                  "structureType" : "extended ipv4 access-list line"
                }
              }
            ],
            "name" : "blocktelnet",
            "sourceName" : "blocktelnet",
            "sourceType" : "extended ipv4 access-list"
          }
        },
        "loggingServers" : [
          "1.1.1.1",
          "2.1.2.2"
        ],
        "mainRibEnforceResolvability" : false,
        "routingPolicies" : {
          "~BGP_COMMON_EXPORT_POLICY:default~" : {
            "name" : "~BGP_COMMON_EXPORT_POLICY:default~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                "type" : "ReturnTrue"
              }
            ]
          },
          "~BGP_PEER_EXPORT_POLICY:default:2.1.1.1~" : {
            "name" : "~BGP_PEER_EXPORT_POLICY:default:2.1.1.1~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "peer-export policy main conditional: exitAccept if true / exitReject if false",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitReject"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                  "calledPolicyName" : "~BGP_COMMON_EXPORT_POLICY:default~"
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitAccept"
                  }
                ]
              }
            ]
          },
          "~BGP_PEER_EXPORT_POLICY:default:2.1.1.2~" : {
            "name" : "~BGP_PEER_EXPORT_POLICY:default:2.1.1.2~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "peer-export policy main conditional: exitAccept if true / exitReject if false",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitReject"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                  "calledPolicyName" : "~BGP_COMMON_EXPORT_POLICY:default~"
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitAccept"
                  }
                ]
              }
            ]
          },
          "~BGP_PEER_EXPORT_POLICY:default:2.1.3.1~" : {
            "name" : "~BGP_PEER_EXPORT_POLICY:default:2.1.3.1~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "peer-export policy main conditional: exitAccept if true / exitReject if false",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitReject"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                  "calledPolicyName" : "~BGP_COMMON_EXPORT_POLICY:default~"
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitAccept"
                  }
                ]
              }
            ]
          },
          "~BGP_PEER_EXPORT_POLICY:default:2.1.3.2~" : {
            "name" : "~BGP_PEER_EXPORT_POLICY:default:2.1.3.2~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "peer-export policy main conditional: exitAccept if true / exitReject if false",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitReject"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                  "calledPolicyName" : "~BGP_COMMON_EXPORT_POLICY:default~"
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitAccept"
                  }
                ]
              }
            ]
          },
          "~BGP_REDISTRIBUTION_POLICY:default~" : {
            "name" : "~BGP_REDISTRIBUTION_POLICY:default~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.SetWeight",
                "weight" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.LiteralInt",
                  "value" : 32768
                }
              },
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                "type" : "ExitReject"
              }
            ]
          },
          "~OSPF_EXPORT_POLICY:default:1~" : {
            "name" : "~OSPF_EXPORT_POLICY:default:1~"
          },
          "~RESOLUTION_POLICY~" : {
            "name" : "~RESOLUTION_POLICY~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ReturnTrue"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                  "comment" : "match default route",
                  "prefix" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                  },
                  "prefixSet" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.ExplicitPrefixSet",
                    "prefixSpace" : [
                      "0.0.0.0/0"
                    ]
                  }
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ReturnFalse"
                  }
                ]
              }
            ]
          }
        },
        "vendorFamily" : {
          "cisco" : {
            "aaa" : {
              "newModel" : false
            },
            "hostname" : "as2core1",
            "lines" : {
              "aux0" : {
                "name" : "aux0",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0,
                "lineType" : "AUX"
              },
              "con0" : {
                "name" : "con0",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0,
                "lineType" : "CON"
              },
              "vty0" : {
                "name" : "vty0",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0,
                "lineType" : "VTY"
              },
              "vty1" : {
                "name" : "vty1",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0,
                "lineType" : "VTY"
              },
              "vty2" : {
                "name" : "vty2",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0,
                "lineType" : "VTY"
              },
              "vty3" : {
                "name" : "vty3",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0,
                "lineType" : "VTY"
              },
              "vty4" : {
                "name" : "vty4",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0,
                "lineType" : "VTY"
              }
            },
            "logging" : {
              "hosts" : {
                "1.1.1.1" : {
                  "name" : "1.1.1.1"
                },
                "2.1.2.2" : {
                  "name" : "2.1.2.2"
                }
              },
              "on" : true
            },
            "services" : {
              "timestamps" : {
                "enabled" : true,
                "subservices" : {
                  "debug" : {
                    "enabled" : true,
                    "subservices" : {
                      "datetime" : {
                        "enabled" : true,
                        "subservices" : {
                          "msec" : {
                            "enabled" : true
                          }
                        }
                      }
                    }
                  },
                  "log" : {
                    "enabled" : true,
                    "subservices" : {
                      "datetime" : {
                        "enabled" : true,
                        "subservices" : {
                          "msec" : {
                            "enabled" : true
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "vrfs" : {
          "default" : {
            "name" : "default",
            "ospfProcesses" : {
              "1" : {
                "adminCosts" : {
                  "ospf" : 110,
                  "ospfE1" : 110,
                  "ospfE2" : 110,
                  "ospfIA" : 110,
                  "ospfIS" : 110
                },
                "areas" : {
                  "1" : {
                    "injectDefaultRoute" : true,
                    "interfaces" : [
                      "GigabitEthernet0/0",
                      "GigabitEthernet1/0",
                      "GigabitEthernet2/0",
                      "GigabitEthernet3/0",
                      "Loopback0"
                    ],
                    "metricOfDefaultRoute" : 0,
                    "name" : 1,
                    "stubType" : "NONE"
                  }
                },
                "exportPolicy" : "~OSPF_EXPORT_POLICY:default:1~",
                "processId" : "1",
                "referenceBandwidth" : 1.0E8,
                "routerId" : "2.1.2.1",
                "summaryAdminCost" : 254,
                "summaryDiscardMetric" : 0
              }
            },
            "bgpProcess" : {
              "clientToClientReflection" : true,
              "ebgpAdminCost" : 20,
              "ibgpAdminCost" : 200,
              "localAdminCost" : 200,
              "localOriginationTypeTieBreaker" : "NO_PREFERENCE",
              "networkNextHopIpTieBreaker" : "HIGHEST_NEXT_HOP_IP",
              "redistributeNextHopIpTieBreaker" : "HIGHEST_NEXT_HOP_IP",
              "redistributionPolicy" : "~BGP_REDISTRIBUTION_POLICY:default~",
              "routerId" : "2.1.2.1",
              "clusterListAsIbgpCost" : true,
              "multipathEbgp" : true,
              "multipathEquivalentAsPathMatchMode" : "EXACT_PATH",
              "multipathIbgp" : true,
              "neighbors" : {
                "2.1.1.1" : {
                  "class" : "org.batfish.datamodel.BgpActivePeerConfig",
                  "checkLocalIpOnAccept" : true,
                  "clusterId" : 33620481,
                  "defaultMetric" : 0,
                  "ebgpMultihop" : false,
                  "enforceFirstAs" : true,
                  "group" : "as2",
                  "ipv4UnicastAddressFamily" : {
                    "addressFamilyCapabilities" : {
                      "additionalPathsReceive" : true,
                      "additionalPathsSelectAll" : true,
                      "additionalPathsSend" : true,
                      "advertiseExternal" : false,
                      "advertiseInactive" : true,
                      "allowLocalAsIn" : false,
                      "allowRemoteAsOut" : "ALWAYS",
                      "sendCommunity" : true,
                      "sendExtendedCommunity" : false
                    },
                    "exportPolicy" : "~BGP_PEER_EXPORT_POLICY:default:2.1.1.1~",
                    "routeReflectorClient" : true
                  },
                  "localAs" : 2,
                  "localIp" : "2.1.2.1",
                  "peerAddress" : "2.1.1.1",
                  "remoteAsns" : "2",
                  "replaceNonLocalAsesOnExport" : false
                },
                "2.1.1.2" : {
                  "class" : "org.batfish.datamodel.BgpActivePeerConfig",
                  "checkLocalIpOnAccept" : true,
                  "clusterId" : 33620481,
                  "defaultMetric" : 0,
                  "ebgpMultihop" : false,
                  "enforceFirstAs" : true,
                  "group" : "as2",
                  "ipv4UnicastAddressFamily" : {
                    "addressFamilyCapabilities" : {
                      "additionalPathsReceive" : true,
                      "additionalPathsSelectAll" : true,
                      "additionalPathsSend" : true,
                      "advertiseExternal" : false,
                      "advertiseInactive" : true,
                      "allowLocalAsIn" : false,
                      "allowRemoteAsOut" : "ALWAYS",
                      "sendCommunity" : true,
                      "sendExtendedCommunity" : false
                    },
                    "exportPolicy" : "~BGP_PEER_EXPORT_POLICY:default:2.1.1.2~",
                    "routeReflectorClient" : true
                  },
                  "localAs" : 2,
                  "localIp" : "2.1.2.1",
                  "peerAddress" : "2.1.1.2",
                  "remoteAsns" : "2",
                  "replaceNonLocalAsesOnExport" : false
                },
                "2.1.3.1" : {
                  "class" : "org.batfish.datamodel.BgpActivePeerConfig",
                  "checkLocalIpOnAccept" : true,
                  "clusterId" : 33620481,
                  "defaultMetric" : 0,
                  "ebgpMultihop" : false,
                  "enforceFirstAs" : true,
                  "group" : "as2",
                  "ipv4UnicastAddressFamily" : {
                    "addressFamilyCapabilities" : {
                      "additionalPathsReceive" : true,
                      "additionalPathsSelectAll" : true,
                      "additionalPathsSend" : true,
                      "advertiseExternal" : false,
                      "advertiseInactive" : true,
                      "allowLocalAsIn" : false,
                      "allowRemoteAsOut" : "ALWAYS",
                      "sendCommunity" : true,
                      "sendExtendedCommunity" : false
                    },
                    "exportPolicy" : "~BGP_PEER_EXPORT_POLICY:default:2.1.3.1~",
                    "routeReflectorClient" : true
                  },
                  "localAs" : 2,
                  "localIp" : "2.1.2.1",
                  "peerAddress" : "2.1.3.1",
                  "remoteAsns" : "2",
                  "replaceNonLocalAsesOnExport" : false
                },
                "2.1.3.2" : {
                  "class" : "org.batfish.datamodel.BgpActivePeerConfig",
                  "checkLocalIpOnAccept" : true,
                  "clusterId" : 33620481,
                  "defaultMetric" : 0,
                  "ebgpMultihop" : false,
                  "enforceFirstAs" : true,
                  "group" : "as2",
                  "ipv4UnicastAddressFamily" : {
                    "addressFamilyCapabilities" : {
                      "additionalPathsReceive" : true,
                      "additionalPathsSelectAll" : true,
                      "additionalPathsSend" : true,
                      "advertiseExternal" : false,
                      "advertiseInactive" : true,
                      "allowLocalAsIn" : false,
                      "allowRemoteAsOut" : "ALWAYS",
                      "sendCommunity" : true,
                      "sendExtendedCommunity" : false
                    },
                    "exportPolicy" : "~BGP_PEER_EXPORT_POLICY:default:2.1.3.2~",
                    "routeReflectorClient" : true
                  },
                  "localAs" : 2,
                  "localIp" : "2.1.2.1",
                  "peerAddress" : "2.1.3.2",
                  "remoteAsns" : "2",
                  "replaceNonLocalAsesOnExport" : false
                }
              },
              "tieBreaker" : "ARRIVAL_ORDER"
            },
            "resolutionPolicy" : "~RESOLUTION_POLICY~"
          }
        }
      },
      "as2core2" : {
        "configurationFormat" : "CISCO_IOS",
        "exportBgpFromBgpRib" : true,
        "generateBgpAggregatesFromMainRib" : false,
        "name" : "as2core2",
        "defaultCrossZoneAction" : "PERMIT",
        "defaultInboundAction" : "PERMIT",
        "deviceModel" : "CISCO_UNSPECIFIED",
        "deviceType" : "ROUTER",
        "disconnectAdminDownInterfaces" : true,
        "domainName" : "lab.local",
        "humanName" : "as2core2",
        "interfaces" : {
          "Ethernet0/0" : {
            "name" : "Ethernet0/0",
            "active" : false,
            "additionalArpIps" : {
              "class" : "org.batfish.datamodel.EmptyIpSpace"
            },
            "adminUp" : false,
            "autostate" : true,
            "bandwidth" : 1.0E7,
            "blacklisted" : false,
            "declaredNames" : [
              "Ethernet0/0"
            ],
            "hmm" : false,
            "inactiveReason" : "ADMIN_DOWN",
            "lineUp" : true,
            "mtu" : 1500,
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "speed" : 1.0E7,
            "switchport" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "PHYSICAL",
            "vrf" : "default"
          },
          "GigabitEthernet0/0" : {
            "name" : "GigabitEthernet0/0",
            "active" : true,
            "additionalArpIps" : {
              "class" : "org.batfish.datamodel.EmptyIpSpace"
            },
            "adminUp" : true,
            "allPrefixes" : [
              "2.12.22.2/24"
            ],
            "autostate" : true,
            "bandwidth" : 1.0E9,
            "blacklisted" : false,
            "declaredNames" : [
              "GigabitEthernet0/0"
            ],
            "hmm" : false,
            "lineUp" : true,
            "mtu" : 1800,
            "ospfSettings" : {
              "area" : 1,
              "cost" : 1,
              "deadInterval" : 40,
              "enabled" : true,
              "helloInterval" : 10,
              "helloMultiplier" : 0,
              "networkType" : "BROADCAST",
              "passive" : false,
              "process" : "1"
            },
            "prefix" : "2.12.22.2/24",
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "speed" : 1.0E9,
            "switchport" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "PHYSICAL",
            "vrf" : "default"
          },
          "GigabitEthernet1/0" : {
            "name" : "GigabitEthernet1/0",
            "active" : true,
            "additionalArpIps" : {
              "class" : "org.batfish.datamodel.EmptyIpSpace"
            },
            "adminUp" : true,
            "allPrefixes" : [
              "2.12.12.2/24"
            ],
            "autostate" : true,
            "bandwidth" : 1.0E9,
            "blacklisted" : false,
            "declaredNames" : [
              "GigabitEthernet1/0"
            ],
            "hmm" : false,
            "lineUp" : true,
            "mtu" : 1600,
            "ospfSettings" : {
              "area" : 1,
              "cost" : 1,
              "deadInterval" : 40,
              "enabled" : true,
              "helloInterval" : 10,
              "helloMultiplier" : 0,
              "networkType" : "BROADCAST",
              "passive" : false,
              "process" : "1"
            },
            "prefix" : "2.12.12.2/24",
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "speed" : 1.0E9,
            "switchport" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "PHYSICAL",
            "vrf" : "default"
          },
          "GigabitEthernet2/0" : {
            "name" : "GigabitEthernet2/0",
            "active" : true,
            "additionalArpIps" : {
              "class" : "org.batfish.datamodel.EmptyIpSpace"
            },
            "adminUp" : true,
            "allPrefixes" : [
              "2.23.22.2/24"
            ],
            "autostate" : true,
            "bandwidth" : 1.0E9,
            "blacklisted" : false,
            "declaredNames" : [
              "GigabitEthernet2/0"
            ],
            "hmm" : false,
            "lineUp" : true,
            "mtu" : 1700,
            "ospfSettings" : {
              "area" : 1,
              "cost" : 1,
              "deadInterval" : 40,
              "enabled" : true,
              "helloInterval" : 10,
              "helloMultiplier" : 0,
              "networkType" : "BROADCAST",
              "passive" : false,
              "process" : "1"
            },
            "prefix" : "2.23.22.2/24",
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "speed" : 1.0E9,
            "switchport" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "PHYSICAL",
            "vrf" : "default"
          },
          "GigabitEthernet3/0" : {
            "name" : "GigabitEthernet3/0",
            "active" : true,
            "additionalArpIps" : {
              "class" : "org.batfish.datamodel.EmptyIpSpace"
            },
            "adminUp" : true,
            "allPrefixes" : [
              "2.23.21.2/24"
            ],
            "autostate" : true,
            "bandwidth" : 1.0E9,
            "blacklisted" : false,
            "declaredNames" : [
              "GigabitEthernet3/0"
            ],
            "hmm" : false,
            "lineUp" : true,
            "mtu" : 1500,
            "ospfSettings" : {
              "area" : 1,
              "cost" : 1,
              "deadInterval" : 40,
              "enabled" : true,
              "helloInterval" : 10,
              "helloMultiplier" : 0,
              "networkType" : "BROADCAST",
              "passive" : false,
              "process" : "1"
            },
            "prefix" : "2.23.21.2/24",
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "speed" : 1.0E9,
            "switchport" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "PHYSICAL",
            "vrf" : "default"
          },
          "Loopback0" : {
            "name" : "Loopback0",
            "active" : true,
            "additionalArpIps" : {
              "class" : "org.batfish.datamodel.EmptyIpSpace"
            },
            "adminUp" : true,
            "allPrefixes" : [
              "2.1.2.2/32"
            ],
            "autostate" : true,
            "bandwidth" : 8.0E9,
            "blacklisted" : false,
            "declaredNames" : [
              "Loopback0"
            ],
            "hmm" : false,
            "lineUp" : true,
            "mtu" : 1500,
            "ospfSettings" : {
              "area" : 1,
              "cost" : 1,
              "deadInterval" : 40,
              "enabled" : true,
              "helloInterval" : 10,
              "helloMultiplier" : 0,
              "networkType" : "BROADCAST",
              "passive" : false,
              "process" : "1"
            },
            "prefix" : "2.1.2.2/32",
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "switchport" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "LOOPBACK",
            "vrf" : "default"
          }
        },
        "loggingServers" : [
          "1.1.1.1",
          "2.2.2.2"
        ],
        "mainRibEnforceResolvability" : false,
        "routingPolicies" : {
          "~BGP_COMMON_EXPORT_POLICY:default~" : {
            "name" : "~BGP_COMMON_EXPORT_POLICY:default~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                "type" : "ReturnTrue"
              }
            ]
          },
          "~BGP_PEER_EXPORT_POLICY:default:2.1.1.1~" : {
            "name" : "~BGP_PEER_EXPORT_POLICY:default:2.1.1.1~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "peer-export policy main conditional: exitAccept if true / exitReject if false",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitReject"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                  "calledPolicyName" : "~BGP_COMMON_EXPORT_POLICY:default~"
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitAccept"
                  }
                ]
              }
            ]
          },
          "~BGP_PEER_EXPORT_POLICY:default:2.1.1.2~" : {
            "name" : "~BGP_PEER_EXPORT_POLICY:default:2.1.1.2~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "peer-export policy main conditional: exitAccept if true / exitReject if false",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitReject"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                  "calledPolicyName" : "~BGP_COMMON_EXPORT_POLICY:default~"
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitAccept"
                  }
                ]
              }
            ]
          },
          "~BGP_PEER_EXPORT_POLICY:default:2.1.3.1~" : {
            "name" : "~BGP_PEER_EXPORT_POLICY:default:2.1.3.1~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "peer-export policy main conditional: exitAccept if true / exitReject if false",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitReject"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                  "calledPolicyName" : "~BGP_COMMON_EXPORT_POLICY:default~"
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitAccept"
                  }
                ]
              }
            ]
          },
          "~BGP_PEER_EXPORT_POLICY:default:2.1.3.2~" : {
            "name" : "~BGP_PEER_EXPORT_POLICY:default:2.1.3.2~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "peer-export policy main conditional: exitAccept if true / exitReject if false",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitReject"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                  "calledPolicyName" : "~BGP_COMMON_EXPORT_POLICY:default~"
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitAccept"
                  }
                ]
              }
            ]
          },
          "~BGP_REDISTRIBUTION_POLICY:default~" : {
            "name" : "~BGP_REDISTRIBUTION_POLICY:default~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.SetWeight",
                "weight" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.LiteralInt",
                  "value" : 32768
                }
              },
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                "type" : "ExitReject"
              }
            ]
          },
          "~OSPF_EXPORT_POLICY:default:1~" : {
            "name" : "~OSPF_EXPORT_POLICY:default:1~"
          },
          "~RESOLUTION_POLICY~" : {
            "name" : "~RESOLUTION_POLICY~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ReturnTrue"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                  "comment" : "match default route",
                  "prefix" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                  },
                  "prefixSet" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.ExplicitPrefixSet",
                    "prefixSpace" : [
                      "0.0.0.0/0"
                    ]
                  }
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ReturnFalse"
                  }
                ]
              }
            ]
          }
        },
        "vendorFamily" : {
          "cisco" : {
            "aaa" : {
              "newModel" : false
            },
            "hostname" : "as2core2",
            "lines" : {
              "aux0" : {
                "name" : "aux0",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0,
                "lineType" : "AUX"
              },
              "con0" : {
                "name" : "con0",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0,
                "lineType" : "CON"
              },
              "vty0" : {
                "name" : "vty0",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0,
                "lineType" : "VTY"
              },
              "vty1" : {
                "name" : "vty1",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0,
                "lineType" : "VTY"
              },
              "vty2" : {
                "name" : "vty2",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0,
                "lineType" : "VTY"
              },
              "vty3" : {
                "name" : "vty3",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0,
                "lineType" : "VTY"
              },
              "vty4" : {
                "name" : "vty4",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0,
                "lineType" : "VTY"
              }
            },
            "logging" : {
              "hosts" : {
                "1.1.1.1" : {
                  "name" : "1.1.1.1"
                },
                "2.2.2.2" : {
                  "name" : "2.2.2.2"
                }
              },
              "on" : true
            },
            "services" : {
              "timestamps" : {
                "enabled" : true,
                "subservices" : {
                  "debug" : {
                    "enabled" : true,
                    "subservices" : {
                      "datetime" : {
                        "enabled" : true,
                        "subservices" : {
                          "msec" : {
                            "enabled" : true
                          }
                        }
                      }
                    }
                  },
                  "log" : {
                    "enabled" : true,
                    "subservices" : {
                      "datetime" : {
                        "enabled" : true,
                        "subservices" : {
                          "msec" : {
                            "enabled" : true
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "vrfs" : {
          "default" : {
            "name" : "default",
            "ospfProcesses" : {
              "1" : {
                "adminCosts" : {
                  "ospf" : 110,
                  "ospfE1" : 110,
                  "ospfE2" : 110,
                  "ospfIA" : 110,
                  "ospfIS" : 110
                },
                "areas" : {
                  "1" : {
                    "injectDefaultRoute" : true,
                    "interfaces" : [
                      "GigabitEthernet0/0",
                      "GigabitEthernet1/0",
                      "GigabitEthernet2/0",
                      "GigabitEthernet3/0",
                      "Loopback0"
                    ],
                    "metricOfDefaultRoute" : 0,
                    "name" : 1,
                    "stubType" : "NONE"
                  }
                },
                "exportPolicy" : "~OSPF_EXPORT_POLICY:default:1~",
                "processId" : "1",
                "referenceBandwidth" : 1.0E8,
                "routerId" : "2.1.2.2",
                "summaryAdminCost" : 254,
                "summaryDiscardMetric" : 0
              }
            },
            "bgpProcess" : {
              "clientToClientReflection" : true,
              "ebgpAdminCost" : 20,
              "ibgpAdminCost" : 200,
              "localAdminCost" : 200,
              "localOriginationTypeTieBreaker" : "NO_PREFERENCE",
              "networkNextHopIpTieBreaker" : "HIGHEST_NEXT_HOP_IP",
              "redistributeNextHopIpTieBreaker" : "HIGHEST_NEXT_HOP_IP",
              "redistributionPolicy" : "~BGP_REDISTRIBUTION_POLICY:default~",
              "routerId" : "2.1.2.2",
              "clusterListAsIbgpCost" : true,
              "multipathEbgp" : true,
              "multipathEquivalentAsPathMatchMode" : "EXACT_PATH",
              "multipathIbgp" : true,
              "neighbors" : {
                "2.1.1.1" : {
                  "class" : "org.batfish.datamodel.BgpActivePeerConfig",
                  "checkLocalIpOnAccept" : true,
                  "clusterId" : 33620482,
                  "defaultMetric" : 0,
                  "ebgpMultihop" : false,
                  "enforceFirstAs" : true,
                  "group" : "as2",
                  "ipv4UnicastAddressFamily" : {
                    "addressFamilyCapabilities" : {
                      "additionalPathsReceive" : true,
                      "additionalPathsSelectAll" : true,
                      "additionalPathsSend" : true,
                      "advertiseExternal" : false,
                      "advertiseInactive" : true,
                      "allowLocalAsIn" : false,
                      "allowRemoteAsOut" : "ALWAYS",
                      "sendCommunity" : true,
                      "sendExtendedCommunity" : false
                    },
                    "exportPolicy" : "~BGP_PEER_EXPORT_POLICY:default:2.1.1.1~",
                    "routeReflectorClient" : true
                  },
                  "localAs" : 2,
                  "localIp" : "2.1.2.2",
                  "peerAddress" : "2.1.1.1",
                  "remoteAsns" : "2",
                  "replaceNonLocalAsesOnExport" : false
                },
                "2.1.1.2" : {
                  "class" : "org.batfish.datamodel.BgpActivePeerConfig",
                  "checkLocalIpOnAccept" : true,
                  "clusterId" : 33620482,
                  "defaultMetric" : 0,
                  "ebgpMultihop" : false,
                  "enforceFirstAs" : true,
                  "group" : "as2",
                  "ipv4UnicastAddressFamily" : {
                    "addressFamilyCapabilities" : {
                      "additionalPathsReceive" : true,
                      "additionalPathsSelectAll" : true,
                      "additionalPathsSend" : true,
                      "advertiseExternal" : false,
                      "advertiseInactive" : true,
                      "allowLocalAsIn" : false,
                      "allowRemoteAsOut" : "ALWAYS",
                      "sendCommunity" : true,
                      "sendExtendedCommunity" : false
                    },
                    "exportPolicy" : "~BGP_PEER_EXPORT_POLICY:default:2.1.1.2~",
                    "routeReflectorClient" : true
                  },
                  "localAs" : 2,
                  "localIp" : "2.1.2.2",
                  "peerAddress" : "2.1.1.2",
                  "remoteAsns" : "2",
                  "replaceNonLocalAsesOnExport" : false
                },
                "2.1.3.1" : {
                  "class" : "org.batfish.datamodel.BgpActivePeerConfig",
                  "checkLocalIpOnAccept" : true,
                  "clusterId" : 33620482,
                  "defaultMetric" : 0,
                  "ebgpMultihop" : false,
                  "enforceFirstAs" : true,
                  "group" : "as2",
                  "ipv4UnicastAddressFamily" : {
                    "addressFamilyCapabilities" : {
                      "additionalPathsReceive" : true,
                      "additionalPathsSelectAll" : true,
                      "additionalPathsSend" : true,
                      "advertiseExternal" : false,
                      "advertiseInactive" : true,
                      "allowLocalAsIn" : false,
                      "allowRemoteAsOut" : "ALWAYS",
                      "sendCommunity" : true,
                      "sendExtendedCommunity" : false
                    },
                    "exportPolicy" : "~BGP_PEER_EXPORT_POLICY:default:2.1.3.1~",
                    "routeReflectorClient" : true
                  },
                  "localAs" : 2,
                  "localIp" : "2.1.2.2",
                  "peerAddress" : "2.1.3.1",
                  "remoteAsns" : "2",
                  "replaceNonLocalAsesOnExport" : false
                },
                "2.1.3.2" : {
                  "class" : "org.batfish.datamodel.BgpActivePeerConfig",
                  "checkLocalIpOnAccept" : true,
                  "clusterId" : 33620482,
                  "defaultMetric" : 0,
                  "ebgpMultihop" : false,
                  "enforceFirstAs" : true,
                  "group" : "as2",
                  "ipv4UnicastAddressFamily" : {
                    "addressFamilyCapabilities" : {
                      "additionalPathsReceive" : true,
                      "additionalPathsSelectAll" : true,
                      "additionalPathsSend" : true,
                      "advertiseExternal" : false,
                      "advertiseInactive" : true,
                      "allowLocalAsIn" : false,
                      "allowRemoteAsOut" : "ALWAYS",
                      "sendCommunity" : true,
                      "sendExtendedCommunity" : false
                    },
                    "exportPolicy" : "~BGP_PEER_EXPORT_POLICY:default:2.1.3.2~",
                    "routeReflectorClient" : true
                  },
                  "localAs" : 2,
                  "localIp" : "2.1.2.2",
                  "peerAddress" : "2.1.3.2",
                  "remoteAsns" : "2",
                  "replaceNonLocalAsesOnExport" : false
                }
              },
              "tieBreaker" : "ARRIVAL_ORDER"
            },
            "resolutionPolicy" : "~RESOLUTION_POLICY~"
          }
        }
      },
      "as2dept1" : {
        "configurationFormat" : "CISCO_IOS",
        "exportBgpFromBgpRib" : true,
        "generateBgpAggregatesFromMainRib" : false,
        "name" : "as2dept1",
        "communityMatchExprs" : {
          "as2_community" : {
            "class" : "org.batfish.datamodel.routing_policy.communities.CommunityMatchRegex",
            "communityRendering" : {
              "class" : "org.batfish.datamodel.routing_policy.communities.ColonSeparatedRendering"
            },
            "regex" : "(,|\\{|\\}|^|$| )2:"
          }
        },
        "communitySetMatchExprs" : {
          "as2_community" : {
            "class" : "org.batfish.datamodel.routing_policy.communities.HasCommunity",
            "expr" : {
              "class" : "org.batfish.datamodel.routing_policy.communities.CommunityMatchRegex",
              "communityRendering" : {
                "class" : "org.batfish.datamodel.routing_policy.communities.ColonSeparatedRendering"
              },
              "regex" : "(,|\\{|\\}|^|$| )2:"
            }
          }
        },
        "defaultCrossZoneAction" : "PERMIT",
        "defaultInboundAction" : "PERMIT",
        "deviceModel" : "CISCO_UNSPECIFIED",
        "deviceType" : "ROUTER",
        "disconnectAdminDownInterfaces" : true,
        "domainName" : "lab.local",
        "humanName" : "as2dept1",
        "interfaces" : {
          "Ethernet0/0" : {
            "name" : "Ethernet0/0",
            "active" : false,
            "additionalArpIps" : {
              "class" : "org.batfish.datamodel.EmptyIpSpace"
            },
            "adminUp" : false,
            "autostate" : true,
            "bandwidth" : 1.0E7,
            "blacklisted" : false,
            "declaredNames" : [
              "Ethernet0/0"
            ],
            "hmm" : false,
            "inactiveReason" : "ADMIN_DOWN",
            "lineUp" : true,
            "mtu" : 1500,
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "speed" : 1.0E7,
            "switchport" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "PHYSICAL",
            "vrf" : "default"
          },
          "GigabitEthernet0/0" : {
            "name" : "GigabitEthernet0/0",
            "active" : true,
            "additionalArpIps" : {
              "class" : "org.batfish.datamodel.EmptyIpSpace"
            },
            "adminUp" : true,
            "allPrefixes" : [
              "2.34.101.4/24"
            ],
            "autostate" : true,
            "bandwidth" : 1.0E9,
            "blacklisted" : false,
            "declaredNames" : [
              "GigabitEthernet0/0"
            ],
            "hmm" : false,
            "lineUp" : true,
            "mtu" : 1500,
            "prefix" : "2.34.101.4/24",
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "speed" : 1.0E9,
            "switchport" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "PHYSICAL",
            "vrf" : "default"
          },
          "GigabitEthernet1/0" : {
            "name" : "GigabitEthernet1/0",
            "active" : true,
            "additionalArpIps" : {
              "class" : "org.batfish.datamodel.EmptyIpSpace"
            },
            "adminUp" : true,
            "allPrefixes" : [
              "2.34.201.4/24"
            ],
            "autostate" : true,
            "bandwidth" : 1.0E9,
            "blacklisted" : false,
            "declaredNames" : [
              "GigabitEthernet1/0"
            ],
            "hmm" : false,
            "lineUp" : true,
            "mtu" : 1500,
            "prefix" : "2.34.201.4/24",
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "speed" : 1.0E9,
            "switchport" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "PHYSICAL",
            "vrf" : "default"
          },
          "GigabitEthernet2/0" : {
            "name" : "GigabitEthernet2/0",
            "active" : true,
            "additionalArpIps" : {
              "class" : "org.batfish.datamodel.EmptyIpSpace"
            },
            "adminUp" : true,
            "allPrefixes" : [
              "2.128.0.1/24"
            ],
            "autostate" : true,
            "bandwidth" : 1.0E9,
            "blacklisted" : false,
            "declaredNames" : [
              "GigabitEthernet2/0"
            ],
            "hmm" : false,
            "incomingFilter" : "RESTRICT_HOST_TRAFFIC_IN",
            "lineUp" : true,
            "mtu" : 1500,
            "prefix" : "2.128.0.1/24",
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "speed" : 1.0E9,
            "switchport" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "PHYSICAL",
            "vrf" : "default"
          },
          "GigabitEthernet3/0" : {
            "name" : "GigabitEthernet3/0",
            "active" : true,
            "additionalArpIps" : {
              "class" : "org.batfish.datamodel.EmptyIpSpace"
            },
            "adminUp" : true,
            "allPrefixes" : [
              "2.128.1.1/24"
            ],
            "autostate" : true,
            "bandwidth" : 1.0E9,
            "blacklisted" : false,
            "declaredNames" : [
              "GigabitEthernet3/0"
            ],
            "hmm" : false,
            "incomingFilter" : "RESTRICT_HOST_TRAFFIC_IN",
            "lineUp" : true,
            "mtu" : 1500,
            "prefix" : "2.128.1.1/24",
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "speed" : 1.0E9,
            "switchport" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "PHYSICAL",
            "vrf" : "default"
          },
          "Loopback0" : {
            "name" : "Loopback0",
            "active" : true,
            "additionalArpIps" : {
              "class" : "org.batfish.datamodel.EmptyIpSpace"
            },
            "adminUp" : true,
            "allPrefixes" : [
              "2.1.1.2/32"
            ],
            "autostate" : true,
            "bandwidth" : 8.0E9,
            "blacklisted" : false,
            "declaredNames" : [
              "Loopback0"
            ],
            "hmm" : false,
            "lineUp" : true,
            "mtu" : 1500,
            "prefix" : "2.1.1.2/32",
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "switchport" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "LOOPBACK",
            "vrf" : "default"
          }
        },
        "ipAccessLists" : {
          "102" : {
            "lines" : [
              {
                "class" : "org.batfish.datamodel.ExprAclLine",
                "action" : "PERMIT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "255.255.255.0"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "2.128.0.0"
                    }
                  }
                },
                "name" : "permit ip host 2.128.0.0 host 255.255.255.0",
                "traceElement" : {
                  "fragments" : [
                    {
                      "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                      "text" : "Matched line "
                    },
                    {
                      "class" : "org.batfish.datamodel.TraceElement$LinkFragment",
                      "text" : "permit ip host 2.128.0.0 host 255.255.255.0",
                      "vendorStructureId" : {
                        "filename" : "configs/as2dept1.cfg",
                        "structureName" : "102: permit ip host 2.128.0.0 host 255.255.255.0",
                        "structureType" : "extended ipv4 access-list line"
                      }
                    }
                  ]
                },
                "vendorStructureId" : {
                  "filename" : "configs/as2dept1.cfg",
                  "structureName" : "102: permit ip host 2.128.0.0 host 255.255.255.0",
                  "structureType" : "extended ipv4 access-list line"
                }
              },
              {
                "class" : "org.batfish.datamodel.ExprAclLine",
                "action" : "PERMIT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "255.255.255.0"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "2.128.1.0"
                    }
                  }
                },
                "name" : "permit ip host 2.128.1.0 host 255.255.255.0",
                "traceElement" : {
                  "fragments" : [
                    {
                      "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                      "text" : "Matched line "
                    },
                    {
                      "class" : "org.batfish.datamodel.TraceElement$LinkFragment",
                      "text" : "permit ip host 2.128.1.0 host 255.255.255.0",
                      "vendorStructureId" : {
                        "filename" : "configs/as2dept1.cfg",
                        "structureName" : "102: permit ip host 2.128.1.0 host 255.255.255.0",
                        "structureType" : "extended ipv4 access-list line"
                      }
                    }
                  ]
                },
                "vendorStructureId" : {
                  "filename" : "configs/as2dept1.cfg",
                  "structureName" : "102: permit ip host 2.128.1.0 host 255.255.255.0",
                  "structureType" : "extended ipv4 access-list line"
                }
              }
            ],
            "name" : "102",
            "sourceName" : "102",
            "sourceType" : "extended ipv4 access-list"
          },
          "105" : {
            "lines" : [
              {
                "class" : "org.batfish.datamodel.ExprAclLine",
                "action" : "PERMIT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "255.255.255.0"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "1.0.1.0"
                    }
                  }
                },
                "name" : "permit ip host 1.0.1.0 host 255.255.255.0",
                "traceElement" : {
                  "fragments" : [
                    {
                      "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                      "text" : "Matched line "
                    },
                    {
                      "class" : "org.batfish.datamodel.TraceElement$LinkFragment",
                      "text" : "permit ip host 1.0.1.0 host 255.255.255.0",
                      "vendorStructureId" : {
                        "filename" : "configs/as2dept1.cfg",
                        "structureName" : "105: permit ip host 1.0.1.0 host 255.255.255.0",
                        "structureType" : "extended ipv4 access-list line"
                      }
                    }
                  ]
                },
                "vendorStructureId" : {
                  "filename" : "configs/as2dept1.cfg",
                  "structureName" : "105: permit ip host 1.0.1.0 host 255.255.255.0",
                  "structureType" : "extended ipv4 access-list line"
                }
              },
              {
                "class" : "org.batfish.datamodel.ExprAclLine",
                "action" : "PERMIT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "255.255.255.0"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "1.0.2.0"
                    }
                  }
                },
                "name" : "permit ip host 1.0.2.0 host 255.255.255.0",
                "traceElement" : {
                  "fragments" : [
                    {
                      "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                      "text" : "Matched line "
                    },
                    {
                      "class" : "org.batfish.datamodel.TraceElement$LinkFragment",
                      "text" : "permit ip host 1.0.2.0 host 255.255.255.0",
                      "vendorStructureId" : {
                        "filename" : "configs/as2dept1.cfg",
                        "structureName" : "105: permit ip host 1.0.2.0 host 255.255.255.0",
                        "structureType" : "extended ipv4 access-list line"
                      }
                    }
                  ]
                },
                "vendorStructureId" : {
                  "filename" : "configs/as2dept1.cfg",
                  "structureName" : "105: permit ip host 1.0.2.0 host 255.255.255.0",
                  "structureType" : "extended ipv4 access-list line"
                }
              },
              {
                "class" : "org.batfish.datamodel.ExprAclLine",
                "action" : "PERMIT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "255.255.255.0"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "3.0.1.0"
                    }
                  }
                },
                "name" : "permit ip host 3.0.1.0 host 255.255.255.0",
                "traceElement" : {
                  "fragments" : [
                    {
                      "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                      "text" : "Matched line "
                    },
                    {
                      "class" : "org.batfish.datamodel.TraceElement$LinkFragment",
                      "text" : "permit ip host 3.0.1.0 host 255.255.255.0",
                      "vendorStructureId" : {
                        "filename" : "configs/as2dept1.cfg",
                        "structureName" : "105: permit ip host 3.0.1.0 host 255.255.255.0",
                        "structureType" : "extended ipv4 access-list line"
                      }
                    }
                  ]
                },
                "vendorStructureId" : {
                  "filename" : "configs/as2dept1.cfg",
                  "structureName" : "105: permit ip host 3.0.1.0 host 255.255.255.0",
                  "structureType" : "extended ipv4 access-list line"
                }
              },
              {
                "class" : "org.batfish.datamodel.ExprAclLine",
                "action" : "PERMIT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "255.255.255.0"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "3.0.2.0"
                    }
                  }
                },
                "name" : "permit ip host 3.0.2.0 host 255.255.255.0",
                "traceElement" : {
                  "fragments" : [
                    {
                      "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                      "text" : "Matched line "
                    },
                    {
                      "class" : "org.batfish.datamodel.TraceElement$LinkFragment",
                      "text" : "permit ip host 3.0.2.0 host 255.255.255.0",
                      "vendorStructureId" : {
                        "filename" : "configs/as2dept1.cfg",
                        "structureName" : "105: permit ip host 3.0.2.0 host 255.255.255.0",
                        "structureType" : "extended ipv4 access-list line"
                      }
                    }
                  ]
                },
                "vendorStructureId" : {
                  "filename" : "configs/as2dept1.cfg",
                  "structureName" : "105: permit ip host 3.0.2.0 host 255.255.255.0",
                  "structureType" : "extended ipv4 access-list line"
                }
              }
            ],
            "name" : "105",
            "sourceName" : "105",
            "sourceType" : "extended ipv4 access-list"
          },
          "RESTRICT_HOST_TRAFFIC_IN" : {
            "lines" : [
              {
                "class" : "org.batfish.datamodel.ExprAclLine",
                "action" : "PERMIT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "0.0.0.0/0"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "2.128.0.0/16"
                    }
                  }
                },
                "name" : "permit ip 2.128.0.0 0.0.255.255 any",
                "traceElement" : {
                  "fragments" : [
                    {
                      "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                      "text" : "Matched line "
                    },
                    {
                      "class" : "org.batfish.datamodel.TraceElement$LinkFragment",
                      "text" : "permit ip 2.128.0.0 0.0.255.255 any",
                      "vendorStructureId" : {
                        "filename" : "configs/as2dept1.cfg",
                        "structureName" : "RESTRICT_HOST_TRAFFIC_IN: permit ip 2.128.0.0 0.0.255.255 any",
                        "structureType" : "extended ipv4 access-list line"
                      }
                    }
                  ]
                },
                "vendorStructureId" : {
                  "filename" : "configs/as2dept1.cfg",
                  "structureName" : "RESTRICT_HOST_TRAFFIC_IN: permit ip 2.128.0.0 0.0.255.255 any",
                  "structureType" : "extended ipv4 access-list line"
                }
              },
              {
                "class" : "org.batfish.datamodel.ExprAclLine",
                "action" : "DENY",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "0.0.0.0/0"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "0.0.0.0/0"
                    }
                  }
                },
                "name" : "deny   ip any any",
                "traceElement" : {
                  "fragments" : [
                    {
                      "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                      "text" : "Matched line "
                    },
                    {
                      "class" : "org.batfish.datamodel.TraceElement$LinkFragment",
                      "text" : "deny   ip any any",
                      "vendorStructureId" : {
                        "filename" : "configs/as2dept1.cfg",
                        "structureName" : "RESTRICT_HOST_TRAFFIC_IN: deny   ip any any",
                        "structureType" : "extended ipv4 access-list line"
                      }
                    }
                  ]
                },
                "vendorStructureId" : {
                  "filename" : "configs/as2dept1.cfg",
                  "structureName" : "RESTRICT_HOST_TRAFFIC_IN: deny   ip any any",
                  "structureType" : "extended ipv4 access-list line"
                }
              },
              {
                "class" : "org.batfish.datamodel.ExprAclLine",
                "action" : "PERMIT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "0.0.0.0/0"
                    },
                    "ipProtocols" : [
                      "ICMP"
                    ],
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "0.0.0.0/0"
                    }
                  }
                },
                "name" : "permit icmp any any",
                "traceElement" : {
                  "fragments" : [
                    {
                      "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                      "text" : "Matched line "
                    },
                    {
                      "class" : "org.batfish.datamodel.TraceElement$LinkFragment",
                      "text" : "permit icmp any any",
                      "vendorStructureId" : {
                        "filename" : "configs/as2dept1.cfg",
                        "structureName" : "RESTRICT_HOST_TRAFFIC_IN: permit icmp any any",
                        "structureType" : "extended ipv4 access-list line"
                      }
                    }
                  ]
                },
                "vendorStructureId" : {
                  "filename" : "configs/as2dept1.cfg",
                  "structureName" : "RESTRICT_HOST_TRAFFIC_IN: permit icmp any any",
                  "structureType" : "extended ipv4 access-list line"
                }
              }
            ],
            "name" : "RESTRICT_HOST_TRAFFIC_IN",
            "sourceName" : "RESTRICT_HOST_TRAFFIC_IN",
            "sourceType" : "extended ipv4 access-list"
          },
          "RESTRICT_HOST_TRAFFIC_OUT" : {
            "lines" : [
              {
                "class" : "org.batfish.datamodel.ExprAclLine",
                "action" : "PERMIT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "2.128.0.0/16"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "0.0.0.0/0"
                    }
                  }
                },
                "name" : "permit ip any 2.128.0.0 0.0.255.255",
                "traceElement" : {
                  "fragments" : [
                    {
                      "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                      "text" : "Matched line "
                    },
                    {
                      "class" : "org.batfish.datamodel.TraceElement$LinkFragment",
                      "text" : "permit ip any 2.128.0.0 0.0.255.255",
                      "vendorStructureId" : {
                        "filename" : "configs/as2dept1.cfg",
                        "structureName" : "RESTRICT_HOST_TRAFFIC_OUT: permit ip any 2.128.0.0 0.0.255.255",
                        "structureType" : "extended ipv4 access-list line"
                      }
                    }
                  ]
                },
                "vendorStructureId" : {
                  "filename" : "configs/as2dept1.cfg",
                  "structureName" : "RESTRICT_HOST_TRAFFIC_OUT: permit ip any 2.128.0.0 0.0.255.255",
                  "structureType" : "extended ipv4 access-list line"
                }
              },
              {
                "class" : "org.batfish.datamodel.ExprAclLine",
                "action" : "DENY",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "2.128.0.0/16"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "1.128.0.0/16"
                    }
                  }
                },
                "name" : "deny   ip 1.128.0.0 0.0.255.255 2.128.0.0 0.0.255.255",
                "traceElement" : {
                  "fragments" : [
                    {
                      "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                      "text" : "Matched line "
                    },
                    {
                      "class" : "org.batfish.datamodel.TraceElement$LinkFragment",
                      "text" : "deny   ip 1.128.0.0 0.0.255.255 2.128.0.0 0.0.255.255",
                      "vendorStructureId" : {
                        "filename" : "configs/as2dept1.cfg",
                        "structureName" : "RESTRICT_HOST_TRAFFIC_OUT: deny   ip 1.128.0.0 0.0.255.255 2.128.0.0 0.0.255.255",
                        "structureType" : "extended ipv4 access-list line"
                      }
                    }
                  ]
                },
                "vendorStructureId" : {
                  "filename" : "configs/as2dept1.cfg",
                  "structureName" : "RESTRICT_HOST_TRAFFIC_OUT: deny   ip 1.128.0.0 0.0.255.255 2.128.0.0 0.0.255.255",
                  "structureType" : "extended ipv4 access-list line"
                }
              },
              {
                "class" : "org.batfish.datamodel.ExprAclLine",
                "action" : "DENY",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "0.0.0.0/0"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "0.0.0.0/0"
                    }
                  }
                },
                "name" : "deny   ip any any",
                "traceElement" : {
                  "fragments" : [
                    {
                      "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                      "text" : "Matched line "
                    },
                    {
                      "class" : "org.batfish.datamodel.TraceElement$LinkFragment",
                      "text" : "deny   ip any any",
                      "vendorStructureId" : {
                        "filename" : "configs/as2dept1.cfg",
                        "structureName" : "RESTRICT_HOST_TRAFFIC_OUT: deny   ip any any",
                        "structureType" : "extended ipv4 access-list line"
                      }
                    }
                  ]
                },
                "vendorStructureId" : {
                  "filename" : "configs/as2dept1.cfg",
                  "structureName" : "RESTRICT_HOST_TRAFFIC_OUT: deny   ip any any",
                  "structureType" : "extended ipv4 access-list line"
                }
              }
            ],
            "name" : "RESTRICT_HOST_TRAFFIC_OUT",
            "sourceName" : "RESTRICT_HOST_TRAFFIC_OUT",
            "sourceType" : "extended ipv4 access-list"
          }
        },
        "mainRibEnforceResolvability" : false,
        "routeFilterLists" : {
          "102" : {
            "lines" : [
              {
                "action" : "PERMIT",
                "ipWildcard" : "2.128.0.0/24",
                "lengthRange" : "24-24"
              },
              {
                "action" : "PERMIT",
                "ipWildcard" : "2.128.1.0/24",
                "lengthRange" : "24-24"
              }
            ],
            "name" : "102",
            "vendorStructureId" : {
              "filename" : "configs/as2dept1.cfg",
              "structureName" : "102",
              "structureType" : "extended ipv4 access-list"
            }
          }
        },
        "routingPolicies" : {
          "as2_to_dept" : {
            "name" : "as2_to_dept",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "~RMCLAUSE~as2_to_dept~100~",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ReturnLocalDefaultAction"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.communities.MatchCommunities",
                  "communitySetExpr" : {
                    "class" : "org.batfish.datamodel.routing_policy.communities.InputCommunities"
                  },
                  "communitySetMatchExpr" : {
                    "class" : "org.batfish.datamodel.routing_policy.communities.CommunitySetMatchExprReference",
                    "name" : "as2_community"
                  }
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.TraceableStatement",
                    "innerStatements" : [
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.SetLocalPreference",
                        "localPreference" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.LiteralLong",
                          "value" : 350
                        }
                      },
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                        "type" : "ReturnTrue"
                      }
                    ],
                    "traceElement" : {
                      "fragments" : [
                        {
                          "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                          "text" : "Matched "
                        },
                        {
                          "class" : "org.batfish.datamodel.TraceElement$LinkFragment",
                          "text" : "route-map as2_to_dept clause 100",
                          "vendorStructureId" : {
                            "filename" : "configs/as2dept1.cfg",
                            "structureName" : "as2_to_dept 100",
                            "structureType" : "route-map-clause"
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            ]
          },
          "dept_to_as2" : {
            "name" : "dept_to_as2",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "~RMCLAUSE~dept_to_as2~100~",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ReturnLocalDefaultAction"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                  "prefix" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                  },
                  "prefixSet" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                    "name" : "102"
                  }
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.TraceableStatement",
                    "innerStatements" : [
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
                        "metric" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.LiteralLong",
                          "value" : 50
                        }
                      },
                      {
                        "class" : "org.batfish.datamodel.routing_policy.communities.SetCommunities",
                        "communitySetExpr" : {
                          "class" : "org.batfish.datamodel.routing_policy.communities.CommunitySetUnion",
                          "exprs" : [
                            {
                              "class" : "org.batfish.datamodel.routing_policy.communities.InputCommunities"
                            },
                            {
                              "class" : "org.batfish.datamodel.routing_policy.communities.LiteralCommunitySet",
                              "communitySet" : [
                                "65001:2"
                              ]
                            }
                          ]
                        }
                      },
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                        "type" : "ReturnTrue"
                      }
                    ],
                    "traceElement" : {
                      "fragments" : [
                        {
                          "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                          "text" : "Matched "
                        },
                        {
                          "class" : "org.batfish.datamodel.TraceElement$LinkFragment",
                          "text" : "route-map dept_to_as2 clause 100",
                          "vendorStructureId" : {
                            "filename" : "configs/as2dept1.cfg",
                            "structureName" : "dept_to_as2 100",
                            "structureType" : "route-map-clause"
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            ]
          },
          "~BGP_COMMON_EXPORT_POLICY:default~" : {
            "name" : "~BGP_COMMON_EXPORT_POLICY:default~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                "type" : "ReturnTrue"
              }
            ]
          },
          "~BGP_PEER_EXPORT_POLICY:default:2.34.101.3~" : {
            "name" : "~BGP_PEER_EXPORT_POLICY:default:2.34.101.3~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "peer-export policy main conditional: exitAccept if true / exitReject if false",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitReject"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.Conjunction",
                  "conjuncts" : [
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                      "calledPolicyName" : "~BGP_COMMON_EXPORT_POLICY:default~"
                    },
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                      "calledPolicyName" : "dept_to_as2"
                    }
                  ]
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitAccept"
                  }
                ]
              }
            ]
          },
          "~BGP_PEER_EXPORT_POLICY:default:2.34.201.3~" : {
            "name" : "~BGP_PEER_EXPORT_POLICY:default:2.34.201.3~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "peer-export policy main conditional: exitAccept if true / exitReject if false",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitReject"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.Conjunction",
                  "conjuncts" : [
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                      "calledPolicyName" : "~BGP_COMMON_EXPORT_POLICY:default~"
                    },
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                      "calledPolicyName" : "dept_to_as2"
                    }
                  ]
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitAccept"
                  }
                ]
              }
            ]
          },
          "~BGP_REDISTRIBUTION_POLICY:default~" : {
            "name" : "~BGP_REDISTRIBUTION_POLICY:default~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.SetWeight",
                "weight" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.LiteralInt",
                  "value" : 32768
                }
              },
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "Add network statement routes to BGP",
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.Conjunction",
                  "conjuncts" : [
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                      "prefix" : {
                        "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                      },
                      "prefixSet" : {
                        "class" : "org.batfish.datamodel.routing_policy.expr.ExplicitPrefixSet",
                        "prefixSpace" : [
                          "2.128.0.0/24"
                        ]
                      }
                    },
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.Not",
                      "expr" : {
                        "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                        "protocols" : [
                          "aggregate",
                          "bgp",
                          "ibgp"
                        ]
                      }
                    }
                  ]
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.SetOrigin",
                    "originType" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.LiteralOrigin",
                      "originType" : "igp"
                    }
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitAccept"
                  }
                ]
              },
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "Add network statement routes to BGP",
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.Conjunction",
                  "conjuncts" : [
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                      "prefix" : {
                        "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                      },
                      "prefixSet" : {
                        "class" : "org.batfish.datamodel.routing_policy.expr.ExplicitPrefixSet",
                        "prefixSpace" : [
                          "2.128.1.0/24"
                        ]
                      }
                    },
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.Not",
                      "expr" : {
                        "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                        "protocols" : [
                          "aggregate",
                          "bgp",
                          "ibgp"
                        ]
                      }
                    }
                  ]
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.SetOrigin",
                    "originType" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.LiteralOrigin",
                      "originType" : "igp"
                    }
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitAccept"
                  }
                ]
              },
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                "type" : "ExitReject"
              }
            ]
          },
          "~RESOLUTION_POLICY~" : {
            "name" : "~RESOLUTION_POLICY~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ReturnTrue"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                  "comment" : "match default route",
                  "prefix" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                  },
                  "prefixSet" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.ExplicitPrefixSet",
                    "prefixSpace" : [
                      "0.0.0.0/0"
                    ]
                  }
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ReturnFalse"
                  }
                ]
              }
            ]
          }
        },
        "vendorFamily" : {
          "cisco" : {
            "aaa" : {
              "newModel" : false
            },
            "hostname" : "as2dept1",
            "lines" : {
              "aux0" : {
                "name" : "aux0",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0,
                "lineType" : "AUX"
              },
              "con0" : {
                "name" : "con0",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0,
                "lineType" : "CON"
              },
              "vty0" : {
                "name" : "vty0",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0,
                "lineType" : "VTY"
              },
              "vty1" : {
                "name" : "vty1",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0,
                "lineType" : "VTY"
              },
              "vty2" : {
                "name" : "vty2",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0,
                "lineType" : "VTY"
              },
              "vty3" : {
                "name" : "vty3",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0,
                "lineType" : "VTY"
              },
              "vty4" : {
                "name" : "vty4",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0,
                "lineType" : "VTY"
              }
            },
            "logging" : {
              "on" : true
            },
            "services" : {
              "timestamps" : {
                "enabled" : true,
                "subservices" : {
                  "debug" : {
                    "enabled" : true,
                    "subservices" : {
                      "datetime" : {
                        "enabled" : true,
                        "subservices" : {
                          "msec" : {
                            "enabled" : true
                          }
                        }
                      }
                    }
                  },
                  "log" : {
                    "enabled" : true,
                    "subservices" : {
                      "datetime" : {
                        "enabled" : true,
                        "subservices" : {
                          "msec" : {
                            "enabled" : true
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "vrfs" : {
          "default" : {
            "name" : "default",
            "bgpProcess" : {
              "clientToClientReflection" : true,
              "ebgpAdminCost" : 20,
              "ibgpAdminCost" : 200,
              "localAdminCost" : 200,
              "localOriginationTypeTieBreaker" : "NO_PREFERENCE",
              "networkNextHopIpTieBreaker" : "HIGHEST_NEXT_HOP_IP",
              "redistributeNextHopIpTieBreaker" : "HIGHEST_NEXT_HOP_IP",
              "redistributionPolicy" : "~BGP_REDISTRIBUTION_POLICY:default~",
              "routerId" : "2.1.4.1",
              "clusterListAsIbgpCost" : true,
              "multipathEbgp" : true,
              "multipathEquivalentAsPathMatchMode" : "EXACT_PATH",
              "multipathIbgp" : true,
              "neighbors" : {
                "2.34.101.3" : {
                  "class" : "org.batfish.datamodel.BgpActivePeerConfig",
                  "checkLocalIpOnAccept" : true,
                  "clusterId" : 33620993,
                  "defaultMetric" : 0,
                  "ebgpMultihop" : false,
                  "enforceFirstAs" : true,
                  "group" : "as2",
                  "ipv4UnicastAddressFamily" : {
                    "addressFamilyCapabilities" : {
                      "additionalPathsReceive" : true,
                      "additionalPathsSelectAll" : true,
                      "additionalPathsSend" : true,
                      "advertiseExternal" : false,
                      "advertiseInactive" : true,
                      "allowLocalAsIn" : false,
                      "allowRemoteAsOut" : "ALWAYS",
                      "sendCommunity" : true,
                      "sendExtendedCommunity" : false
                    },
                    "exportPolicy" : "~BGP_PEER_EXPORT_POLICY:default:2.34.101.3~",
                    "exportPolicySources" : [
                      "dept_to_as2"
                    ],
                    "importPolicy" : "as2_to_dept",
                    "importPolicySources" : [
                      "as2_to_dept"
                    ],
                    "routeReflectorClient" : false
                  },
                  "localAs" : 65001,
                  "localIp" : "2.34.101.4",
                  "peerAddress" : "2.34.101.3",
                  "remoteAsns" : "2",
                  "replaceNonLocalAsesOnExport" : false
                },
                "2.34.201.3" : {
                  "class" : "org.batfish.datamodel.BgpActivePeerConfig",
                  "checkLocalIpOnAccept" : true,
                  "clusterId" : 33620993,
                  "defaultMetric" : 0,
                  "ebgpMultihop" : false,
                  "enforceFirstAs" : true,
                  "group" : "as2",
                  "ipv4UnicastAddressFamily" : {
                    "addressFamilyCapabilities" : {
                      "additionalPathsReceive" : true,
                      "additionalPathsSelectAll" : true,
                      "additionalPathsSend" : true,
                      "advertiseExternal" : false,
                      "advertiseInactive" : true,
                      "allowLocalAsIn" : false,
                      "allowRemoteAsOut" : "ALWAYS",
                      "sendCommunity" : true,
                      "sendExtendedCommunity" : false
                    },
                    "exportPolicy" : "~BGP_PEER_EXPORT_POLICY:default:2.34.201.3~",
                    "exportPolicySources" : [
                      "dept_to_as2"
                    ],
                    "importPolicy" : "as2_to_dept",
                    "importPolicySources" : [
                      "as2_to_dept"
                    ],
                    "routeReflectorClient" : false
                  },
                  "localAs" : 65001,
                  "localIp" : "2.34.201.4",
                  "peerAddress" : "2.34.201.3",
                  "remoteAsns" : "2",
                  "replaceNonLocalAsesOnExport" : false
                }
              },
              "tieBreaker" : "ARRIVAL_ORDER"
            },
            "resolutionPolicy" : "~RESOLUTION_POLICY~"
          }
        }
      },
      "as2dist1" : {
        "configurationFormat" : "CISCO_IOS",
        "exportBgpFromBgpRib" : true,
        "generateBgpAggregatesFromMainRib" : false,
        "name" : "as2dist1",
        "communityMatchExprs" : {
          "dept_community" : {
            "class" : "org.batfish.datamodel.routing_policy.communities.CommunityMatchRegex",
            "communityRendering" : {
              "class" : "org.batfish.datamodel.routing_policy.communities.ColonSeparatedRendering"
            },
            "regex" : "(,|\\{|\\}|^|$| )65001:"
          }
        },
        "communitySetMatchExprs" : {
          "dept_community" : {
            "class" : "org.batfish.datamodel.routing_policy.communities.HasCommunity",
            "expr" : {
              "class" : "org.batfish.datamodel.routing_policy.communities.CommunityMatchRegex",
              "communityRendering" : {
                "class" : "org.batfish.datamodel.routing_policy.communities.ColonSeparatedRendering"
              },
              "regex" : "(,|\\{|\\}|^|$| )65001:"
            }
          }
        },
        "defaultCrossZoneAction" : "PERMIT",
        "defaultInboundAction" : "PERMIT",
        "deviceModel" : "CISCO_UNSPECIFIED",
        "deviceType" : "ROUTER",
        "disconnectAdminDownInterfaces" : true,
        "domainName" : "lab.local",
        "humanName" : "as2dist1",
        "interfaces" : {
          "Ethernet0/0" : {
            "name" : "Ethernet0/0",
            "active" : false,
            "additionalArpIps" : {
              "class" : "org.batfish.datamodel.EmptyIpSpace"
            },
            "adminUp" : false,
            "autostate" : true,
            "bandwidth" : 1.0E7,
            "blacklisted" : false,
            "declaredNames" : [
              "Ethernet0/0"
            ],
            "hmm" : false,
            "inactiveReason" : "ADMIN_DOWN",
            "lineUp" : true,
            "mtu" : 1500,
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "speed" : 1.0E7,
            "switchport" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "PHYSICAL",
            "vrf" : "default"
          },
          "GigabitEthernet0/0" : {
            "name" : "GigabitEthernet0/0",
            "active" : true,
            "additionalArpIps" : {
              "class" : "org.batfish.datamodel.EmptyIpSpace"
            },
            "adminUp" : true,
            "allPrefixes" : [
              "2.23.11.3/24"
            ],
            "autostate" : true,
            "bandwidth" : 1.0E9,
            "blacklisted" : false,
            "declaredNames" : [
              "GigabitEthernet0/0"
            ],
            "hmm" : false,
            "lineUp" : true,
            "mtu" : 1500,
            "ospfSettings" : {
              "area" : 1,
              "cost" : 1,
              "deadInterval" : 40,
              "enabled" : true,
              "helloInterval" : 10,
              "helloMultiplier" : 0,
              "networkType" : "BROADCAST",
              "passive" : false,
              "process" : "1"
            },
            "prefix" : "2.23.11.3/24",
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "speed" : 1.0E9,
            "switchport" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "PHYSICAL",
            "vrf" : "default"
          },
          "GigabitEthernet1/0" : {
            "name" : "GigabitEthernet1/0",
            "active" : true,
            "additionalArpIps" : {
              "class" : "org.batfish.datamodel.EmptyIpSpace"
            },
            "adminUp" : true,
            "allPrefixes" : [
              "2.23.21.3/24"
            ],
            "autostate" : true,
            "bandwidth" : 1.0E9,
            "blacklisted" : false,
            "declaredNames" : [
              "GigabitEthernet1/0"
            ],
            "hmm" : false,
            "lineUp" : true,
            "mtu" : 1500,
            "ospfSettings" : {
              "area" : 1,
              "cost" : 1,
              "deadInterval" : 40,
              "enabled" : true,
              "helloInterval" : 10,
              "helloMultiplier" : 0,
              "networkType" : "BROADCAST",
              "passive" : false,
              "process" : "1"
            },
            "prefix" : "2.23.21.3/24",
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "speed" : 1.0E9,
            "switchport" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "PHYSICAL",
            "vrf" : "default"
          },
          "GigabitEthernet2/0" : {
            "name" : "GigabitEthernet2/0",
            "active" : true,
            "additionalArpIps" : {
              "class" : "org.batfish.datamodel.EmptyIpSpace"
            },
            "adminUp" : true,
            "allPrefixes" : [
              "2.34.101.3/24"
            ],
            "autostate" : true,
            "bandwidth" : 1.0E9,
            "blacklisted" : false,
            "declaredNames" : [
              "GigabitEthernet2/0"
            ],
            "hmm" : false,
            "lineUp" : true,
            "mtu" : 1500,
            "prefix" : "2.34.101.3/24",
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "speed" : 1.0E9,
            "switchport" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "PHYSICAL",
            "vrf" : "default"
          },
          "Loopback0" : {
            "name" : "Loopback0",
            "active" : true,
            "additionalArpIps" : {
              "class" : "org.batfish.datamodel.EmptyIpSpace"
            },
            "adminUp" : true,
            "allPrefixes" : [
              "2.1.3.1/32"
            ],
            "autostate" : true,
            "bandwidth" : 8.0E9,
            "blacklisted" : false,
            "declaredNames" : [
              "Loopback0"
            ],
            "hmm" : false,
            "lineUp" : true,
            "mtu" : 1500,
            "ospfSettings" : {
              "area" : 1,
              "cost" : 1,
              "deadInterval" : 40,
              "enabled" : true,
              "helloInterval" : 10,
              "helloMultiplier" : 0,
              "networkType" : "BROADCAST",
              "passive" : false,
              "process" : "1"
            },
            "prefix" : "2.1.3.1/32",
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "switchport" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "LOOPBACK",
            "vrf" : "default"
          }
        },
        "ipAccessLists" : {
          "102" : {
            "lines" : [
              {
                "class" : "org.batfish.datamodel.ExprAclLine",
                "action" : "PERMIT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "255.255.0.0"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "2.128.0.0"
                    }
                  }
                },
                "name" : "permit ip host 2.128.0.0 host 255.255.0.0",
                "traceElement" : {
                  "fragments" : [
                    {
                      "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                      "text" : "Matched line "
                    },
                    {
                      "class" : "org.batfish.datamodel.TraceElement$LinkFragment",
                      "text" : "permit ip host 2.128.0.0 host 255.255.0.0",
                      "vendorStructureId" : {
                        "filename" : "configs/as2dist1.cfg",
                        "structureName" : "102: permit ip host 2.128.0.0 host 255.255.0.0",
                        "structureType" : "extended ipv4 access-list line"
                      }
                    }
                  ]
                },
                "vendorStructureId" : {
                  "filename" : "configs/as2dist1.cfg",
                  "structureName" : "102: permit ip host 2.128.0.0 host 255.255.0.0",
                  "structureType" : "extended ipv4 access-list line"
                }
              }
            ],
            "name" : "102",
            "sourceName" : "102",
            "sourceType" : "extended ipv4 access-list"
          },
          "105" : {
            "lines" : [
              {
                "class" : "org.batfish.datamodel.ExprAclLine",
                "action" : "PERMIT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "255.255.255.0"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "1.0.1.0"
                    }
                  }
                },
                "name" : "permit ip host 1.0.1.0 host 255.255.255.0",
                "traceElement" : {
                  "fragments" : [
                    {
                      "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                      "text" : "Matched line "
                    },
                    {
                      "class" : "org.batfish.datamodel.TraceElement$LinkFragment",
                      "text" : "permit ip host 1.0.1.0 host 255.255.255.0",
                      "vendorStructureId" : {
                        "filename" : "configs/as2dist1.cfg",
                        "structureName" : "105: permit ip host 1.0.1.0 host 255.255.255.0",
                        "structureType" : "extended ipv4 access-list line"
                      }
                    }
                  ]
                },
                "vendorStructureId" : {
                  "filename" : "configs/as2dist1.cfg",
                  "structureName" : "105: permit ip host 1.0.1.0 host 255.255.255.0",
                  "structureType" : "extended ipv4 access-list line"
                }
              },
              {
                "class" : "org.batfish.datamodel.ExprAclLine",
                "action" : "PERMIT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "255.255.255.0"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "1.0.2.0"
                    }
                  }
                },
                "name" : "permit ip host 1.0.2.0 host 255.255.255.0",
                "traceElement" : {
                  "fragments" : [
                    {
                      "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                      "text" : "Matched line "
                    },
                    {
                      "class" : "org.batfish.datamodel.TraceElement$LinkFragment",
                      "text" : "permit ip host 1.0.2.0 host 255.255.255.0",
                      "vendorStructureId" : {
                        "filename" : "configs/as2dist1.cfg",
                        "structureName" : "105: permit ip host 1.0.2.0 host 255.255.255.0",
                        "structureType" : "extended ipv4 access-list line"
                      }
                    }
                  ]
                },
                "vendorStructureId" : {
                  "filename" : "configs/as2dist1.cfg",
                  "structureName" : "105: permit ip host 1.0.2.0 host 255.255.255.0",
                  "structureType" : "extended ipv4 access-list line"
                }
              },
              {
                "class" : "org.batfish.datamodel.ExprAclLine",
                "action" : "PERMIT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "255.255.255.0"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "3.0.1.0"
                    }
                  }
                },
                "name" : "permit ip host 3.0.1.0 host 255.255.255.0",
                "traceElement" : {
                  "fragments" : [
                    {
                      "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                      "text" : "Matched line "
                    },
                    {
                      "class" : "org.batfish.datamodel.TraceElement$LinkFragment",
                      "text" : "permit ip host 3.0.1.0 host 255.255.255.0",
                      "vendorStructureId" : {
                        "filename" : "configs/as2dist1.cfg",
                        "structureName" : "105: permit ip host 3.0.1.0 host 255.255.255.0",
                        "structureType" : "extended ipv4 access-list line"
                      }
                    }
                  ]
                },
                "vendorStructureId" : {
                  "filename" : "configs/as2dist1.cfg",
                  "structureName" : "105: permit ip host 3.0.1.0 host 255.255.255.0",
                  "structureType" : "extended ipv4 access-list line"
                }
              },
              {
                "class" : "org.batfish.datamodel.ExprAclLine",
                "action" : "PERMIT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "255.255.255.0"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "3.0.2.0"
                    }
                  }
                },
                "name" : "permit ip host 3.0.2.0 host 255.255.255.0",
                "traceElement" : {
                  "fragments" : [
                    {
                      "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                      "text" : "Matched line "
                    },
                    {
                      "class" : "org.batfish.datamodel.TraceElement$LinkFragment",
                      "text" : "permit ip host 3.0.2.0 host 255.255.255.0",
                      "vendorStructureId" : {
                        "filename" : "configs/as2dist1.cfg",
                        "structureName" : "105: permit ip host 3.0.2.0 host 255.255.255.0",
                        "structureType" : "extended ipv4 access-list line"
                      }
                    }
                  ]
                },
                "vendorStructureId" : {
                  "filename" : "configs/as2dist1.cfg",
                  "structureName" : "105: permit ip host 3.0.2.0 host 255.255.255.0",
                  "structureType" : "extended ipv4 access-list line"
                }
              }
            ],
            "name" : "105",
            "sourceName" : "105",
            "sourceType" : "extended ipv4 access-list"
          }
        },
        "mainRibEnforceResolvability" : false,
        "routeFilterLists" : {
          "105" : {
            "lines" : [
              {
                "action" : "PERMIT",
                "ipWildcard" : "1.0.1.0/24",
                "lengthRange" : "24-24"
              },
              {
                "action" : "PERMIT",
                "ipWildcard" : "1.0.2.0/24",
                "lengthRange" : "24-24"
              },
              {
                "action" : "PERMIT",
                "ipWildcard" : "3.0.1.0/24",
                "lengthRange" : "24-24"
              },
              {
                "action" : "PERMIT",
                "ipWildcard" : "3.0.2.0/24",
                "lengthRange" : "24-24"
              }
            ],
            "name" : "105",
            "vendorStructureId" : {
              "filename" : "configs/as2dist1.cfg",
              "structureName" : "105",
              "structureType" : "extended ipv4 access-list"
            }
          }
        },
        "routingPolicies" : {
          "as2dist_to_dept" : {
            "name" : "as2dist_to_dept",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "~RMCLAUSE~as2dist_to_dept~100~",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ReturnLocalDefaultAction"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                  "prefix" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                  },
                  "prefixSet" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                    "name" : "105"
                  }
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.TraceableStatement",
                    "innerStatements" : [
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
                        "metric" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.LiteralLong",
                          "value" : 50
                        }
                      },
                      {
                        "class" : "org.batfish.datamodel.routing_policy.communities.SetCommunities",
                        "communitySetExpr" : {
                          "class" : "org.batfish.datamodel.routing_policy.communities.CommunitySetUnion",
                          "exprs" : [
                            {
                              "class" : "org.batfish.datamodel.routing_policy.communities.InputCommunities"
                            },
                            {
                              "class" : "org.batfish.datamodel.routing_policy.communities.LiteralCommunitySet",
                              "communitySet" : [
                                "2:65001"
                              ]
                            }
                          ]
                        }
                      },
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                        "type" : "ReturnTrue"
                      }
                    ],
                    "traceElement" : {
                      "fragments" : [
                        {
                          "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                          "text" : "Matched "
                        },
                        {
                          "class" : "org.batfish.datamodel.TraceElement$LinkFragment",
                          "text" : "route-map as2dist_to_dept clause 100",
                          "vendorStructureId" : {
                            "filename" : "configs/as2dist1.cfg",
                            "structureName" : "as2dist_to_dept 100",
                            "structureType" : "route-map-clause"
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            ]
          },
          "dept_to_as2dist" : {
            "name" : "dept_to_as2dist",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "~RMCLAUSE~dept_to_as2dist~100~",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ReturnLocalDefaultAction"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.communities.MatchCommunities",
                  "communitySetExpr" : {
                    "class" : "org.batfish.datamodel.routing_policy.communities.InputCommunities"
                  },
                  "communitySetMatchExpr" : {
                    "class" : "org.batfish.datamodel.routing_policy.communities.CommunitySetMatchExprReference",
                    "name" : "dept_community"
                  }
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.TraceableStatement",
                    "innerStatements" : [
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.SetLocalPreference",
                        "localPreference" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.LiteralLong",
                          "value" : 350
                        }
                      },
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                        "type" : "ReturnTrue"
                      }
                    ],
                    "traceElement" : {
                      "fragments" : [
                        {
                          "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                          "text" : "Matched "
                        },
                        {
                          "class" : "org.batfish.datamodel.TraceElement$LinkFragment",
                          "text" : "route-map dept_to_as2dist clause 100",
                          "vendorStructureId" : {
                            "filename" : "configs/as2dist1.cfg",
                            "structureName" : "dept_to_as2dist 100",
                            "structureType" : "route-map-clause"
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            ]
          },
          "~BGP_COMMON_EXPORT_POLICY:default~" : {
            "name" : "~BGP_COMMON_EXPORT_POLICY:default~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                "type" : "ReturnTrue"
              }
            ]
          },
          "~BGP_PEER_EXPORT_POLICY:default:2.1.2.1~" : {
            "name" : "~BGP_PEER_EXPORT_POLICY:default:2.1.2.1~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "peer-export policy main conditional: exitAccept if true / exitReject if false",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitReject"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                  "calledPolicyName" : "~BGP_COMMON_EXPORT_POLICY:default~"
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitAccept"
                  }
                ]
              }
            ]
          },
          "~BGP_PEER_EXPORT_POLICY:default:2.1.2.2~" : {
            "name" : "~BGP_PEER_EXPORT_POLICY:default:2.1.2.2~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "peer-export policy main conditional: exitAccept if true / exitReject if false",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitReject"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                  "calledPolicyName" : "~BGP_COMMON_EXPORT_POLICY:default~"
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitAccept"
                  }
                ]
              }
            ]
          },
          "~BGP_PEER_EXPORT_POLICY:default:2.34.101.4~" : {
            "name" : "~BGP_PEER_EXPORT_POLICY:default:2.34.101.4~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "peer-export policy main conditional: exitAccept if true / exitReject if false",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitReject"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.Conjunction",
                  "conjuncts" : [
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                      "calledPolicyName" : "~BGP_COMMON_EXPORT_POLICY:default~"
                    },
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                      "calledPolicyName" : "as2dist_to_dept"
                    }
                  ]
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitAccept"
                  }
                ]
              }
            ]
          },
          "~BGP_REDISTRIBUTION_POLICY:default~" : {
            "name" : "~BGP_REDISTRIBUTION_POLICY:default~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.SetWeight",
                "weight" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.LiteralInt",
                  "value" : 32768
                }
              },
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                "type" : "ExitReject"
              }
            ]
          },
          "~OSPF_EXPORT_POLICY:default:1~" : {
            "name" : "~OSPF_EXPORT_POLICY:default:1~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "OSPF export routes for connected",
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.Conjunction",
                  "conjuncts" : [
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                      "protocols" : [
                        "connected"
                      ]
                    },
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.Not",
                      "expr" : {
                        "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                        "comment" : "match default route",
                        "prefix" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                        },
                        "prefixSet" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.ExplicitPrefixSet",
                          "prefixSpace" : [
                            "0.0.0.0/0"
                          ]
                        }
                      }
                    }
                  ]
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.SetOspfMetricType",
                    "metricType" : "E2"
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
                    "metric" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.LiteralLong",
                      "value" : 20
                    }
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitAccept"
                  }
                ]
              }
            ]
          },
          "~RESOLUTION_POLICY~" : {
            "name" : "~RESOLUTION_POLICY~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ReturnTrue"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                  "comment" : "match default route",
                  "prefix" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                  },
                  "prefixSet" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.ExplicitPrefixSet",
                    "prefixSpace" : [
                      "0.0.0.0/0"
                    ]
                  }
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ReturnFalse"
                  }
                ]
              }
            ]
          }
        },
        "vendorFamily" : {
          "cisco" : {
            "aaa" : {
              "newModel" : false
            },
            "hostname" : "as2dist1",
            "lines" : {
              "aux0" : {
                "name" : "aux0",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0,
                "lineType" : "AUX"
              },
              "con0" : {
                "name" : "con0",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0,
                "lineType" : "CON"
              },
              "vty0" : {
                "name" : "vty0",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0,
                "lineType" : "VTY"
              },
              "vty1" : {
                "name" : "vty1",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0,
                "lineType" : "VTY"
              },
              "vty2" : {
                "name" : "vty2",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0,
                "lineType" : "VTY"
              },
              "vty3" : {
                "name" : "vty3",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0,
                "lineType" : "VTY"
              },
              "vty4" : {
                "name" : "vty4",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0,
                "lineType" : "VTY"
              }
            },
            "logging" : {
              "on" : true
            },
            "services" : {
              "timestamps" : {
                "enabled" : true,
                "subservices" : {
                  "debug" : {
                    "enabled" : true,
                    "subservices" : {
                      "datetime" : {
                        "enabled" : true,
                        "subservices" : {
                          "msec" : {
                            "enabled" : true
                          }
                        }
                      }
                    }
                  },
                  "log" : {
                    "enabled" : true,
                    "subservices" : {
                      "datetime" : {
                        "enabled" : true,
                        "subservices" : {
                          "msec" : {
                            "enabled" : true
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "vrfs" : {
          "default" : {
            "name" : "default",
            "ospfProcesses" : {
              "1" : {
                "adminCosts" : {
                  "ospf" : 110,
                  "ospfE1" : 110,
                  "ospfE2" : 110,
                  "ospfIA" : 110,
                  "ospfIS" : 110
                },
                "areas" : {
                  "1" : {
                    "injectDefaultRoute" : true,
                    "interfaces" : [
                      "GigabitEthernet0/0",
                      "GigabitEthernet1/0",
                      "Loopback0"
                    ],
                    "metricOfDefaultRoute" : 0,
                    "name" : 1,
                    "stubType" : "NONE"
                  }
                },
                "exportPolicy" : "~OSPF_EXPORT_POLICY:default:1~",
                "processId" : "1",
                "referenceBandwidth" : 1.0E8,
                "routerId" : "2.1.3.1",
                "summaryAdminCost" : 254,
                "summaryDiscardMetric" : 0
              }
            },
            "bgpProcess" : {
              "clientToClientReflection" : true,
              "ebgpAdminCost" : 20,
              "ibgpAdminCost" : 200,
              "localAdminCost" : 200,
              "localOriginationTypeTieBreaker" : "NO_PREFERENCE",
              "networkNextHopIpTieBreaker" : "HIGHEST_NEXT_HOP_IP",
              "redistributeNextHopIpTieBreaker" : "HIGHEST_NEXT_HOP_IP",
              "redistributionPolicy" : "~BGP_REDISTRIBUTION_POLICY:default~",
              "routerId" : "2.1.3.1",
              "clusterListAsIbgpCost" : true,
              "multipathEbgp" : true,
              "multipathEquivalentAsPathMatchMode" : "EXACT_PATH",
              "multipathIbgp" : true,
              "neighbors" : {
                "2.1.2.1" : {
                  "class" : "org.batfish.datamodel.BgpActivePeerConfig",
                  "checkLocalIpOnAccept" : true,
                  "clusterId" : 33620737,
                  "defaultMetric" : 0,
                  "ebgpMultihop" : false,
                  "enforceFirstAs" : true,
                  "group" : "as2",
                  "ipv4UnicastAddressFamily" : {
                    "addressFamilyCapabilities" : {
                      "additionalPathsReceive" : true,
                      "additionalPathsSelectAll" : true,
                      "additionalPathsSend" : true,
                      "advertiseExternal" : false,
                      "advertiseInactive" : true,
                      "allowLocalAsIn" : false,
                      "allowRemoteAsOut" : "ALWAYS",
                      "sendCommunity" : true,
                      "sendExtendedCommunity" : false
                    },
                    "exportPolicy" : "~BGP_PEER_EXPORT_POLICY:default:2.1.2.1~",
                    "routeReflectorClient" : false
                  },
                  "localAs" : 2,
                  "localIp" : "2.1.3.1",
                  "peerAddress" : "2.1.2.1",
                  "remoteAsns" : "2",
                  "replaceNonLocalAsesOnExport" : false
                },
                "2.1.2.2" : {
                  "class" : "org.batfish.datamodel.BgpActivePeerConfig",
                  "checkLocalIpOnAccept" : true,
                  "clusterId" : 33620737,
                  "defaultMetric" : 0,
                  "ebgpMultihop" : false,
                  "enforceFirstAs" : true,
                  "group" : "as2",
                  "ipv4UnicastAddressFamily" : {
                    "addressFamilyCapabilities" : {
                      "additionalPathsReceive" : true,
                      "additionalPathsSelectAll" : true,
                      "additionalPathsSend" : true,
                      "advertiseExternal" : false,
                      "advertiseInactive" : true,
                      "allowLocalAsIn" : false,
                      "allowRemoteAsOut" : "ALWAYS",
                      "sendCommunity" : true,
                      "sendExtendedCommunity" : false
                    },
                    "exportPolicy" : "~BGP_PEER_EXPORT_POLICY:default:2.1.2.2~",
                    "routeReflectorClient" : false
                  },
                  "localAs" : 2,
                  "localIp" : "2.1.3.1",
                  "peerAddress" : "2.1.2.2",
                  "remoteAsns" : "2",
                  "replaceNonLocalAsesOnExport" : false
                },
                "2.34.101.4" : {
                  "class" : "org.batfish.datamodel.BgpActivePeerConfig",
                  "checkLocalIpOnAccept" : true,
                  "clusterId" : 33620737,
                  "defaultMetric" : 0,
                  "ebgpMultihop" : false,
                  "enforceFirstAs" : true,
                  "group" : "dept",
                  "ipv4UnicastAddressFamily" : {
                    "addressFamilyCapabilities" : {
                      "additionalPathsReceive" : true,
                      "additionalPathsSelectAll" : true,
                      "additionalPathsSend" : true,
                      "advertiseExternal" : false,
                      "advertiseInactive" : true,
                      "allowLocalAsIn" : false,
                      "allowRemoteAsOut" : "ALWAYS",
                      "sendCommunity" : true,
                      "sendExtendedCommunity" : false
                    },
                    "exportPolicy" : "~BGP_PEER_EXPORT_POLICY:default:2.34.101.4~",
                    "exportPolicySources" : [
                      "as2dist_to_dept"
                    ],
                    "importPolicy" : "dept_to_as2dist",
                    "importPolicySources" : [
                      "dept_to_as2dist"
                    ],
                    "routeReflectorClient" : false
                  },
                  "localAs" : 2,
                  "localIp" : "2.34.101.3",
                  "peerAddress" : "2.34.101.4",
                  "remoteAsns" : "65001",
                  "replaceNonLocalAsesOnExport" : false
                }
              },
              "tieBreaker" : "ARRIVAL_ORDER"
            },
            "resolutionPolicy" : "~RESOLUTION_POLICY~"
          }
        }
      },
      "as2dist2" : {
        "configurationFormat" : "CISCO_IOS",
        "exportBgpFromBgpRib" : true,
        "generateBgpAggregatesFromMainRib" : false,
        "name" : "as2dist2",
        "communityMatchExprs" : {
          "dept_community" : {
            "class" : "org.batfish.datamodel.routing_policy.communities.CommunityMatchRegex",
            "communityRendering" : {
              "class" : "org.batfish.datamodel.routing_policy.communities.ColonSeparatedRendering"
            },
            "regex" : "(,|\\{|\\}|^|$| )65001:"
          }
        },
        "communitySetMatchExprs" : {
          "dept_community" : {
            "class" : "org.batfish.datamodel.routing_policy.communities.HasCommunity",
            "expr" : {
              "class" : "org.batfish.datamodel.routing_policy.communities.CommunityMatchRegex",
              "communityRendering" : {
                "class" : "org.batfish.datamodel.routing_policy.communities.ColonSeparatedRendering"
              },
              "regex" : "(,|\\{|\\}|^|$| )65001:"
            }
          }
        },
        "defaultCrossZoneAction" : "PERMIT",
        "defaultInboundAction" : "PERMIT",
        "deviceModel" : "CISCO_UNSPECIFIED",
        "deviceType" : "ROUTER",
        "disconnectAdminDownInterfaces" : true,
        "domainName" : "lab.local",
        "humanName" : "as2dist2",
        "interfaces" : {
          "Ethernet0/0" : {
            "name" : "Ethernet0/0",
            "active" : false,
            "additionalArpIps" : {
              "class" : "org.batfish.datamodel.EmptyIpSpace"
            },
            "adminUp" : false,
            "autostate" : true,
            "bandwidth" : 1.0E7,
            "blacklisted" : false,
            "declaredNames" : [
              "Ethernet0/0"
            ],
            "hmm" : false,
            "inactiveReason" : "ADMIN_DOWN",
            "lineUp" : true,
            "mtu" : 1500,
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "speed" : 1.0E7,
            "switchport" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "PHYSICAL",
            "vrf" : "default"
          },
          "GigabitEthernet0/0" : {
            "name" : "GigabitEthernet0/0",
            "active" : true,
            "additionalArpIps" : {
              "class" : "org.batfish.datamodel.EmptyIpSpace"
            },
            "adminUp" : true,
            "allPrefixes" : [
              "2.23.22.3/24"
            ],
            "autostate" : true,
            "bandwidth" : 1.0E9,
            "blacklisted" : false,
            "declaredNames" : [
              "GigabitEthernet0/0"
            ],
            "hmm" : false,
            "lineUp" : true,
            "mtu" : 1500,
            "ospfSettings" : {
              "area" : 1,
              "cost" : 1,
              "deadInterval" : 40,
              "enabled" : true,
              "helloInterval" : 10,
              "helloMultiplier" : 0,
              "networkType" : "BROADCAST",
              "passive" : false,
              "process" : "1"
            },
            "prefix" : "2.23.22.3/24",
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "speed" : 1.0E9,
            "switchport" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "PHYSICAL",
            "vrf" : "default"
          },
          "GigabitEthernet1/0" : {
            "name" : "GigabitEthernet1/0",
            "active" : true,
            "additionalArpIps" : {
              "class" : "org.batfish.datamodel.EmptyIpSpace"
            },
            "adminUp" : true,
            "allPrefixes" : [
              "2.23.12.3/24"
            ],
            "autostate" : true,
            "bandwidth" : 1.0E9,
            "blacklisted" : false,
            "declaredNames" : [
              "GigabitEthernet1/0"
            ],
            "hmm" : false,
            "lineUp" : true,
            "mtu" : 1500,
            "ospfSettings" : {
              "area" : 1,
              "cost" : 1,
              "deadInterval" : 40,
              "enabled" : true,
              "helloInterval" : 10,
              "helloMultiplier" : 0,
              "networkType" : "BROADCAST",
              "passive" : false,
              "process" : "1"
            },
            "prefix" : "2.23.12.3/24",
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "speed" : 1.0E9,
            "switchport" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "PHYSICAL",
            "vrf" : "default"
          },
          "GigabitEthernet2/0" : {
            "name" : "GigabitEthernet2/0",
            "active" : true,
            "additionalArpIps" : {
              "class" : "org.batfish.datamodel.EmptyIpSpace"
            },
            "adminUp" : true,
            "allPrefixes" : [
              "2.34.201.3/24"
            ],
            "autostate" : true,
            "bandwidth" : 1.0E9,
            "blacklisted" : false,
            "declaredNames" : [
              "GigabitEthernet2/0"
            ],
            "hmm" : false,
            "lineUp" : true,
            "mtu" : 1500,
            "prefix" : "2.34.201.3/24",
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "speed" : 1.0E9,
            "switchport" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "PHYSICAL",
            "vrf" : "default"
          },
          "Loopback0" : {
            "name" : "Loopback0",
            "active" : true,
            "additionalArpIps" : {
              "class" : "org.batfish.datamodel.EmptyIpSpace"
            },
            "adminUp" : true,
            "allPrefixes" : [
              "2.1.3.2/32"
            ],
            "autostate" : true,
            "bandwidth" : 8.0E9,
            "blacklisted" : false,
            "declaredNames" : [
              "Loopback0"
            ],
            "hmm" : false,
            "lineUp" : true,
            "mtu" : 1500,
            "ospfSettings" : {
              "area" : 1,
              "cost" : 1,
              "deadInterval" : 40,
              "enabled" : true,
              "helloInterval" : 10,
              "helloMultiplier" : 0,
              "networkType" : "BROADCAST",
              "passive" : false,
              "process" : "1"
            },
            "prefix" : "2.1.3.2/32",
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "switchport" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "LOOPBACK",
            "vrf" : "default"
          }
        },
        "ipAccessLists" : {
          "102" : {
            "lines" : [
              {
                "class" : "org.batfish.datamodel.ExprAclLine",
                "action" : "PERMIT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "255.255.0.0"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "2.128.0.0"
                    }
                  }
                },
                "name" : "permit ip host 2.128.0.0 host 255.255.0.0",
                "traceElement" : {
                  "fragments" : [
                    {
                      "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                      "text" : "Matched line "
                    },
                    {
                      "class" : "org.batfish.datamodel.TraceElement$LinkFragment",
                      "text" : "permit ip host 2.128.0.0 host 255.255.0.0",
                      "vendorStructureId" : {
                        "filename" : "configs/as2dist2.cfg",
                        "structureName" : "102: permit ip host 2.128.0.0 host 255.255.0.0",
                        "structureType" : "extended ipv4 access-list line"
                      }
                    }
                  ]
                },
                "vendorStructureId" : {
                  "filename" : "configs/as2dist2.cfg",
                  "structureName" : "102: permit ip host 2.128.0.0 host 255.255.0.0",
                  "structureType" : "extended ipv4 access-list line"
                }
              }
            ],
            "name" : "102",
            "sourceName" : "102",
            "sourceType" : "extended ipv4 access-list"
          },
          "105" : {
            "lines" : [
              {
                "class" : "org.batfish.datamodel.ExprAclLine",
                "action" : "PERMIT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "255.255.255.0"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "1.0.1.0"
                    }
                  }
                },
                "name" : "permit ip host 1.0.1.0 host 255.255.255.0",
                "traceElement" : {
                  "fragments" : [
                    {
                      "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                      "text" : "Matched line "
                    },
                    {
                      "class" : "org.batfish.datamodel.TraceElement$LinkFragment",
                      "text" : "permit ip host 1.0.1.0 host 255.255.255.0",
                      "vendorStructureId" : {
                        "filename" : "configs/as2dist2.cfg",
                        "structureName" : "105: permit ip host 1.0.1.0 host 255.255.255.0",
                        "structureType" : "extended ipv4 access-list line"
                      }
                    }
                  ]
                },
                "vendorStructureId" : {
                  "filename" : "configs/as2dist2.cfg",
                  "structureName" : "105: permit ip host 1.0.1.0 host 255.255.255.0",
                  "structureType" : "extended ipv4 access-list line"
                }
              },
              {
                "class" : "org.batfish.datamodel.ExprAclLine",
                "action" : "PERMIT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "255.255.255.0"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "1.0.2.0"
                    }
                  }
                },
                "name" : "permit ip host 1.0.2.0 host 255.255.255.0",
                "traceElement" : {
                  "fragments" : [
                    {
                      "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                      "text" : "Matched line "
                    },
                    {
                      "class" : "org.batfish.datamodel.TraceElement$LinkFragment",
                      "text" : "permit ip host 1.0.2.0 host 255.255.255.0",
                      "vendorStructureId" : {
                        "filename" : "configs/as2dist2.cfg",
                        "structureName" : "105: permit ip host 1.0.2.0 host 255.255.255.0",
                        "structureType" : "extended ipv4 access-list line"
                      }
                    }
                  ]
                },
                "vendorStructureId" : {
                  "filename" : "configs/as2dist2.cfg",
                  "structureName" : "105: permit ip host 1.0.2.0 host 255.255.255.0",
                  "structureType" : "extended ipv4 access-list line"
                }
              },
              {
                "class" : "org.batfish.datamodel.ExprAclLine",
                "action" : "PERMIT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "255.255.255.0"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "3.0.1.0"
                    }
                  }
                },
                "name" : "permit ip host 3.0.1.0 host 255.255.255.0",
                "traceElement" : {
                  "fragments" : [
                    {
                      "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                      "text" : "Matched line "
                    },
                    {
                      "class" : "org.batfish.datamodel.TraceElement$LinkFragment",
                      "text" : "permit ip host 3.0.1.0 host 255.255.255.0",
                      "vendorStructureId" : {
                        "filename" : "configs/as2dist2.cfg",
                        "structureName" : "105: permit ip host 3.0.1.0 host 255.255.255.0",
                        "structureType" : "extended ipv4 access-list line"
                      }
                    }
                  ]
                },
                "vendorStructureId" : {
                  "filename" : "configs/as2dist2.cfg",
                  "structureName" : "105: permit ip host 3.0.1.0 host 255.255.255.0",
                  "structureType" : "extended ipv4 access-list line"
                }
              },
              {
                "class" : "org.batfish.datamodel.ExprAclLine",
                "action" : "PERMIT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "255.255.255.0"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "3.0.2.0"
                    }
                  }
                },
                "name" : "permit ip host 3.0.2.0 host 255.255.255.0",
                "traceElement" : {
                  "fragments" : [
                    {
                      "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                      "text" : "Matched line "
                    },
                    {
                      "class" : "org.batfish.datamodel.TraceElement$LinkFragment",
                      "text" : "permit ip host 3.0.2.0 host 255.255.255.0",
                      "vendorStructureId" : {
                        "filename" : "configs/as2dist2.cfg",
                        "structureName" : "105: permit ip host 3.0.2.0 host 255.255.255.0",
                        "structureType" : "extended ipv4 access-list line"
                      }
                    }
                  ]
                },
                "vendorStructureId" : {
                  "filename" : "configs/as2dist2.cfg",
                  "structureName" : "105: permit ip host 3.0.2.0 host 255.255.255.0",
                  "structureType" : "extended ipv4 access-list line"
                }
              }
            ],
            "name" : "105",
            "sourceName" : "105",
            "sourceType" : "extended ipv4 access-list"
          }
        },
        "mainRibEnforceResolvability" : false,
        "routeFilterLists" : {
          "105" : {
            "lines" : [
              {
                "action" : "PERMIT",
                "ipWildcard" : "1.0.1.0/24",
                "lengthRange" : "24-24"
              },
              {
                "action" : "PERMIT",
                "ipWildcard" : "1.0.2.0/24",
                "lengthRange" : "24-24"
              },
              {
                "action" : "PERMIT",
                "ipWildcard" : "3.0.1.0/24",
                "lengthRange" : "24-24"
              },
              {
                "action" : "PERMIT",
                "ipWildcard" : "3.0.2.0/24",
                "lengthRange" : "24-24"
              }
            ],
            "name" : "105",
            "vendorStructureId" : {
              "filename" : "configs/as2dist2.cfg",
              "structureName" : "105",
              "structureType" : "extended ipv4 access-list"
            }
          }
        },
        "routingPolicies" : {
          "as2dist_to_dept" : {
            "name" : "as2dist_to_dept",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "~RMCLAUSE~as2dist_to_dept~100~",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ReturnLocalDefaultAction"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                  "prefix" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                  },
                  "prefixSet" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                    "name" : "105"
                  }
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.TraceableStatement",
                    "innerStatements" : [
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
                        "metric" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.LiteralLong",
                          "value" : 50
                        }
                      },
                      {
                        "class" : "org.batfish.datamodel.routing_policy.communities.SetCommunities",
                        "communitySetExpr" : {
                          "class" : "org.batfish.datamodel.routing_policy.communities.CommunitySetUnion",
                          "exprs" : [
                            {
                              "class" : "org.batfish.datamodel.routing_policy.communities.InputCommunities"
                            },
                            {
                              "class" : "org.batfish.datamodel.routing_policy.communities.LiteralCommunitySet",
                              "communitySet" : [
                                "2:65001"
                              ]
                            }
                          ]
                        }
                      },
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                        "type" : "ReturnTrue"
                      }
                    ],
                    "traceElement" : {
                      "fragments" : [
                        {
                          "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                          "text" : "Matched "
                        },
                        {
                          "class" : "org.batfish.datamodel.TraceElement$LinkFragment",
                          "text" : "route-map as2dist_to_dept clause 100",
                          "vendorStructureId" : {
                            "filename" : "configs/as2dist2.cfg",
                            "structureName" : "as2dist_to_dept 100",
                            "structureType" : "route-map-clause"
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            ]
          },
          "dept_to_as2dist" : {
            "name" : "dept_to_as2dist",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "~RMCLAUSE~dept_to_as2dist~100~",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ReturnLocalDefaultAction"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.communities.MatchCommunities",
                  "communitySetExpr" : {
                    "class" : "org.batfish.datamodel.routing_policy.communities.InputCommunities"
                  },
                  "communitySetMatchExpr" : {
                    "class" : "org.batfish.datamodel.routing_policy.communities.CommunitySetMatchExprReference",
                    "name" : "dept_community"
                  }
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.TraceableStatement",
                    "innerStatements" : [
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.SetLocalPreference",
                        "localPreference" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.LiteralLong",
                          "value" : 350
                        }
                      },
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                        "type" : "ReturnTrue"
                      }
                    ],
                    "traceElement" : {
                      "fragments" : [
                        {
                          "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                          "text" : "Matched "
                        },
                        {
                          "class" : "org.batfish.datamodel.TraceElement$LinkFragment",
                          "text" : "route-map dept_to_as2dist clause 100",
                          "vendorStructureId" : {
                            "filename" : "configs/as2dist2.cfg",
                            "structureName" : "dept_to_as2dist 100",
                            "structureType" : "route-map-clause"
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            ]
          },
          "~BGP_COMMON_EXPORT_POLICY:default~" : {
            "name" : "~BGP_COMMON_EXPORT_POLICY:default~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                "type" : "ReturnTrue"
              }
            ]
          },
          "~BGP_PEER_EXPORT_POLICY:default:2.1.2.1~" : {
            "name" : "~BGP_PEER_EXPORT_POLICY:default:2.1.2.1~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "peer-export policy main conditional: exitAccept if true / exitReject if false",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitReject"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                  "calledPolicyName" : "~BGP_COMMON_EXPORT_POLICY:default~"
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitAccept"
                  }
                ]
              }
            ]
          },
          "~BGP_PEER_EXPORT_POLICY:default:2.1.2.2~" : {
            "name" : "~BGP_PEER_EXPORT_POLICY:default:2.1.2.2~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "peer-export policy main conditional: exitAccept if true / exitReject if false",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitReject"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                  "calledPolicyName" : "~BGP_COMMON_EXPORT_POLICY:default~"
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitAccept"
                  }
                ]
              }
            ]
          },
          "~BGP_PEER_EXPORT_POLICY:default:2.34.201.4~" : {
            "name" : "~BGP_PEER_EXPORT_POLICY:default:2.34.201.4~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "peer-export policy main conditional: exitAccept if true / exitReject if false",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitReject"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.Conjunction",
                  "conjuncts" : [
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                      "calledPolicyName" : "~BGP_COMMON_EXPORT_POLICY:default~"
                    },
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                      "calledPolicyName" : "as2dist_to_dept"
                    }
                  ]
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitAccept"
                  }
                ]
              }
            ]
          },
          "~BGP_REDISTRIBUTION_POLICY:default~" : {
            "name" : "~BGP_REDISTRIBUTION_POLICY:default~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.SetWeight",
                "weight" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.LiteralInt",
                  "value" : 32768
                }
              },
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                "type" : "ExitReject"
              }
            ]
          },
          "~OSPF_EXPORT_POLICY:default:1~" : {
            "name" : "~OSPF_EXPORT_POLICY:default:1~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "OSPF export routes for connected",
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.Conjunction",
                  "conjuncts" : [
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                      "protocols" : [
                        "connected"
                      ]
                    },
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.Not",
                      "expr" : {
                        "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                        "comment" : "match default route",
                        "prefix" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                        },
                        "prefixSet" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.ExplicitPrefixSet",
                          "prefixSpace" : [
                            "0.0.0.0/0"
                          ]
                        }
                      }
                    }
                  ]
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.SetOspfMetricType",
                    "metricType" : "E2"
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
                    "metric" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.LiteralLong",
                      "value" : 20
                    }
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitAccept"
                  }
                ]
              }
            ]
          },
          "~RESOLUTION_POLICY~" : {
            "name" : "~RESOLUTION_POLICY~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ReturnTrue"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                  "comment" : "match default route",
                  "prefix" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                  },
                  "prefixSet" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.ExplicitPrefixSet",
                    "prefixSpace" : [
                      "0.0.0.0/0"
                    ]
                  }
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ReturnFalse"
                  }
                ]
              }
            ]
          }
        },
        "vendorFamily" : {
          "cisco" : {
            "aaa" : {
              "newModel" : false
            },
            "hostname" : "as2dist2",
            "lines" : {
              "aux0" : {
                "name" : "aux0",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0,
                "lineType" : "AUX"
              },
              "con0" : {
                "name" : "con0",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0,
                "lineType" : "CON"
              },
              "vty0" : {
                "name" : "vty0",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0,
                "lineType" : "VTY"
              },
              "vty1" : {
                "name" : "vty1",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0,
                "lineType" : "VTY"
              },
              "vty2" : {
                "name" : "vty2",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0,
                "lineType" : "VTY"
              },
              "vty3" : {
                "name" : "vty3",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0,
                "lineType" : "VTY"
              },
              "vty4" : {
                "name" : "vty4",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0,
                "lineType" : "VTY"
              }
            },
            "logging" : {
              "on" : true
            },
            "services" : {
              "timestamps" : {
                "enabled" : true,
                "subservices" : {
                  "debug" : {
                    "enabled" : true,
                    "subservices" : {
                      "datetime" : {
                        "enabled" : true,
                        "subservices" : {
                          "msec" : {
                            "enabled" : true
                          }
                        }
                      }
                    }
                  },
                  "log" : {
                    "enabled" : true,
                    "subservices" : {
                      "datetime" : {
                        "enabled" : true,
                        "subservices" : {
                          "msec" : {
                            "enabled" : true
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "vrfs" : {
          "default" : {
            "name" : "default",
            "ospfProcesses" : {
              "1" : {
                "adminCosts" : {
                  "ospf" : 110,
                  "ospfE1" : 110,
                  "ospfE2" : 110,
                  "ospfIA" : 110,
                  "ospfIS" : 110
                },
                "areas" : {
                  "1" : {
                    "injectDefaultRoute" : true,
                    "interfaces" : [
                      "GigabitEthernet0/0",
                      "GigabitEthernet1/0",
                      "Loopback0"
                    ],
                    "metricOfDefaultRoute" : 0,
                    "name" : 1,
                    "stubType" : "NONE"
                  }
                },
                "exportPolicy" : "~OSPF_EXPORT_POLICY:default:1~",
                "processId" : "1",
                "referenceBandwidth" : 1.0E8,
                "routerId" : "2.1.3.2",
                "summaryAdminCost" : 254,
                "summaryDiscardMetric" : 0
              }
            },
            "bgpProcess" : {
              "clientToClientReflection" : true,
              "ebgpAdminCost" : 20,
              "ibgpAdminCost" : 200,
              "localAdminCost" : 200,
              "localOriginationTypeTieBreaker" : "NO_PREFERENCE",
              "networkNextHopIpTieBreaker" : "HIGHEST_NEXT_HOP_IP",
              "redistributeNextHopIpTieBreaker" : "HIGHEST_NEXT_HOP_IP",
              "redistributionPolicy" : "~BGP_REDISTRIBUTION_POLICY:default~",
              "routerId" : "2.1.3.2",
              "clusterListAsIbgpCost" : true,
              "multipathEbgp" : true,
              "multipathEquivalentAsPathMatchMode" : "EXACT_PATH",
              "multipathIbgp" : true,
              "neighbors" : {
                "2.1.2.1" : {
                  "class" : "org.batfish.datamodel.BgpActivePeerConfig",
                  "checkLocalIpOnAccept" : true,
                  "clusterId" : 33620738,
                  "defaultMetric" : 0,
                  "ebgpMultihop" : false,
                  "enforceFirstAs" : true,
                  "group" : "as2",
                  "ipv4UnicastAddressFamily" : {
                    "addressFamilyCapabilities" : {
                      "additionalPathsReceive" : true,
                      "additionalPathsSelectAll" : true,
                      "additionalPathsSend" : true,
                      "advertiseExternal" : false,
                      "advertiseInactive" : true,
                      "allowLocalAsIn" : false,
                      "allowRemoteAsOut" : "ALWAYS",
                      "sendCommunity" : true,
                      "sendExtendedCommunity" : false
                    },
                    "exportPolicy" : "~BGP_PEER_EXPORT_POLICY:default:2.1.2.1~",
                    "routeReflectorClient" : false
                  },
                  "localAs" : 2,
                  "localIp" : "2.1.3.2",
                  "peerAddress" : "2.1.2.1",
                  "remoteAsns" : "2",
                  "replaceNonLocalAsesOnExport" : false
                },
                "2.1.2.2" : {
                  "class" : "org.batfish.datamodel.BgpActivePeerConfig",
                  "checkLocalIpOnAccept" : true,
                  "clusterId" : 33620738,
                  "defaultMetric" : 0,
                  "ebgpMultihop" : false,
                  "enforceFirstAs" : true,
                  "group" : "as2",
                  "ipv4UnicastAddressFamily" : {
                    "addressFamilyCapabilities" : {
                      "additionalPathsReceive" : true,
                      "additionalPathsSelectAll" : true,
                      "additionalPathsSend" : true,
                      "advertiseExternal" : false,
                      "advertiseInactive" : true,
                      "allowLocalAsIn" : false,
                      "allowRemoteAsOut" : "ALWAYS",
                      "sendCommunity" : true,
                      "sendExtendedCommunity" : false
                    },
                    "exportPolicy" : "~BGP_PEER_EXPORT_POLICY:default:2.1.2.2~",
                    "routeReflectorClient" : false
                  },
                  "localAs" : 2,
                  "localIp" : "2.1.3.2",
                  "peerAddress" : "2.1.2.2",
                  "remoteAsns" : "2",
                  "replaceNonLocalAsesOnExport" : false
                },
                "2.34.201.4" : {
                  "class" : "org.batfish.datamodel.BgpActivePeerConfig",
                  "checkLocalIpOnAccept" : true,
                  "clusterId" : 33620738,
                  "defaultMetric" : 0,
                  "ebgpMultihop" : false,
                  "enforceFirstAs" : true,
                  "group" : "dept",
                  "ipv4UnicastAddressFamily" : {
                    "addressFamilyCapabilities" : {
                      "additionalPathsReceive" : true,
                      "additionalPathsSelectAll" : true,
                      "additionalPathsSend" : true,
                      "advertiseExternal" : false,
                      "advertiseInactive" : true,
                      "allowLocalAsIn" : false,
                      "allowRemoteAsOut" : "ALWAYS",
                      "sendCommunity" : true,
                      "sendExtendedCommunity" : false
                    },
                    "exportPolicy" : "~BGP_PEER_EXPORT_POLICY:default:2.34.201.4~",
                    "exportPolicySources" : [
                      "as2dist_to_dept"
                    ],
                    "importPolicy" : "dept_to_as2dist",
                    "importPolicySources" : [
                      "dept_to_as2dist"
                    ],
                    "routeReflectorClient" : false
                  },
                  "localAs" : 2,
                  "localIp" : "2.34.201.3",
                  "peerAddress" : "2.34.201.4",
                  "remoteAsns" : "65001",
                  "replaceNonLocalAsesOnExport" : false
                }
              },
              "tieBreaker" : "ARRIVAL_ORDER"
            },
            "resolutionPolicy" : "~RESOLUTION_POLICY~"
          }
        }
      },
      "as3border1" : {
        "configurationFormat" : "CISCO_IOS",
        "exportBgpFromBgpRib" : true,
        "generateBgpAggregatesFromMainRib" : false,
        "name" : "as3border1",
        "communityMatchExprs" : {
          "as1_community" : {
            "class" : "org.batfish.datamodel.routing_policy.communities.CommunityMatchRegex",
            "communityRendering" : {
              "class" : "org.batfish.datamodel.routing_policy.communities.ColonSeparatedRendering"
            },
            "regex" : "(,|\\{|\\}|^|$| )1:"
          },
          "as2_community" : {
            "class" : "org.batfish.datamodel.routing_policy.communities.CommunityMatchRegex",
            "communityRendering" : {
              "class" : "org.batfish.datamodel.routing_policy.communities.ColonSeparatedRendering"
            },
            "regex" : "(,|\\{|\\}|^|$| )2:"
          },
          "as3_community" : {
            "class" : "org.batfish.datamodel.routing_policy.communities.CommunityMatchRegex",
            "communityRendering" : {
              "class" : "org.batfish.datamodel.routing_policy.communities.ColonSeparatedRendering"
            },
            "regex" : "(,|\\{|\\}|^|$| )3:"
          }
        },
        "communitySetMatchExprs" : {
          "as1_community" : {
            "class" : "org.batfish.datamodel.routing_policy.communities.HasCommunity",
            "expr" : {
              "class" : "org.batfish.datamodel.routing_policy.communities.CommunityMatchRegex",
              "communityRendering" : {
                "class" : "org.batfish.datamodel.routing_policy.communities.ColonSeparatedRendering"
              },
              "regex" : "(,|\\{|\\}|^|$| )1:"
            }
          },
          "as2_community" : {
            "class" : "org.batfish.datamodel.routing_policy.communities.HasCommunity",
            "expr" : {
              "class" : "org.batfish.datamodel.routing_policy.communities.CommunityMatchRegex",
              "communityRendering" : {
                "class" : "org.batfish.datamodel.routing_policy.communities.ColonSeparatedRendering"
              },
              "regex" : "(,|\\{|\\}|^|$| )2:"
            }
          },
          "as3_community" : {
            "class" : "org.batfish.datamodel.routing_policy.communities.HasCommunity",
            "expr" : {
              "class" : "org.batfish.datamodel.routing_policy.communities.CommunityMatchRegex",
              "communityRendering" : {
                "class" : "org.batfish.datamodel.routing_policy.communities.ColonSeparatedRendering"
              },
              "regex" : "(,|\\{|\\}|^|$| )3:"
            }
          }
        },
        "defaultCrossZoneAction" : "PERMIT",
        "defaultInboundAction" : "PERMIT",
        "deviceModel" : "CISCO_UNSPECIFIED",
        "deviceType" : "ROUTER",
        "disconnectAdminDownInterfaces" : true,
        "domainName" : "lab.local",
        "humanName" : "as3border1",
        "interfaces" : {
          "Ethernet0/0" : {
            "name" : "Ethernet0/0",
            "active" : false,
            "additionalArpIps" : {
              "class" : "org.batfish.datamodel.EmptyIpSpace"
            },
            "adminUp" : false,
            "autostate" : true,
            "bandwidth" : 1.0E7,
            "blacklisted" : false,
            "declaredNames" : [
              "Ethernet0/0"
            ],
            "hmm" : false,
            "inactiveReason" : "ADMIN_DOWN",
            "lineUp" : true,
            "mtu" : 1500,
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "speed" : 1.0E7,
            "switchport" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "PHYSICAL",
            "vrf" : "default"
          },
          "GigabitEthernet0/0" : {
            "name" : "GigabitEthernet0/0",
            "active" : true,
            "additionalArpIps" : {
              "class" : "org.batfish.datamodel.EmptyIpSpace"
            },
            "adminUp" : true,
            "allPrefixes" : [
              "3.0.1.1/24"
            ],
            "autostate" : true,
            "bandwidth" : 1.0E9,
            "blacklisted" : false,
            "declaredNames" : [
              "GigabitEthernet0/0"
            ],
            "hmm" : false,
            "lineUp" : true,
            "mtu" : 1500,
            "ospfSettings" : {
              "area" : 1,
              "cost" : 1,
              "deadInterval" : 40,
              "enabled" : true,
              "helloInterval" : 10,
              "helloMultiplier" : 0,
              "networkType" : "BROADCAST",
              "passive" : false,
              "process" : "1"
            },
            "prefix" : "3.0.1.1/24",
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "speed" : 1.0E9,
            "switchport" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "PHYSICAL",
            "vrf" : "default"
          },
          "GigabitEthernet1/0" : {
            "name" : "GigabitEthernet1/0",
            "active" : true,
            "additionalArpIps" : {
              "class" : "org.batfish.datamodel.EmptyIpSpace"
            },
            "adminUp" : true,
            "allPrefixes" : [
              "10.23.21.3/24"
            ],
            "autostate" : true,
            "bandwidth" : 1.0E9,
            "blacklisted" : false,
            "declaredNames" : [
              "GigabitEthernet1/0"
            ],
            "hmm" : false,
            "lineUp" : true,
            "mtu" : 1500,
            "prefix" : "10.23.21.3/24",
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "speed" : 1.0E9,
            "switchport" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "PHYSICAL",
            "vrf" : "default"
          },
          "Loopback0" : {
            "name" : "Loopback0",
            "active" : true,
            "additionalArpIps" : {
              "class" : "org.batfish.datamodel.EmptyIpSpace"
            },
            "adminUp" : true,
            "allPrefixes" : [
              "3.1.1.1/32"
            ],
            "autostate" : true,
            "bandwidth" : 8.0E9,
            "blacklisted" : false,
            "declaredNames" : [
              "Loopback0"
            ],
            "hmm" : false,
            "lineUp" : true,
            "mtu" : 1500,
            "ospfSettings" : {
              "area" : 1,
              "cost" : 1,
              "deadInterval" : 40,
              "enabled" : true,
              "helloInterval" : 10,
              "helloMultiplier" : 0,
              "networkType" : "BROADCAST",
              "passive" : false,
              "process" : "1"
            },
            "prefix" : "3.1.1.1/32",
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "switchport" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "LOOPBACK",
            "vrf" : "default"
          }
        },
        "ipAccessLists" : {
          "101" : {
            "lines" : [
              {
                "class" : "org.batfish.datamodel.ExprAclLine",
                "action" : "PERMIT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "255.255.255.0"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "1.0.1.0"
                    }
                  }
                },
                "name" : "permit ip host 1.0.1.0 host 255.255.255.0",
                "traceElement" : {
                  "fragments" : [
                    {
                      "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                      "text" : "Matched line "
                    },
                    {
                      "class" : "org.batfish.datamodel.TraceElement$LinkFragment",
                      "text" : "permit ip host 1.0.1.0 host 255.255.255.0",
                      "vendorStructureId" : {
                        "filename" : "configs/as3border1.cfg",
                        "structureName" : "101: permit ip host 1.0.1.0 host 255.255.255.0",
                        "structureType" : "extended ipv4 access-list line"
                      }
                    }
                  ]
                },
                "vendorStructureId" : {
                  "filename" : "configs/as3border1.cfg",
                  "structureName" : "101: permit ip host 1.0.1.0 host 255.255.255.0",
                  "structureType" : "extended ipv4 access-list line"
                }
              },
              {
                "class" : "org.batfish.datamodel.ExprAclLine",
                "action" : "PERMIT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "255.255.255.0"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "1.0.2.0"
                    }
                  }
                },
                "name" : "permit ip host 1.0.2.0 host 255.255.255.0",
                "traceElement" : {
                  "fragments" : [
                    {
                      "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                      "text" : "Matched line "
                    },
                    {
                      "class" : "org.batfish.datamodel.TraceElement$LinkFragment",
                      "text" : "permit ip host 1.0.2.0 host 255.255.255.0",
                      "vendorStructureId" : {
                        "filename" : "configs/as3border1.cfg",
                        "structureName" : "101: permit ip host 1.0.2.0 host 255.255.255.0",
                        "structureType" : "extended ipv4 access-list line"
                      }
                    }
                  ]
                },
                "vendorStructureId" : {
                  "filename" : "configs/as3border1.cfg",
                  "structureName" : "101: permit ip host 1.0.2.0 host 255.255.255.0",
                  "structureType" : "extended ipv4 access-list line"
                }
              }
            ],
            "name" : "101",
            "sourceName" : "101",
            "sourceType" : "extended ipv4 access-list"
          },
          "102" : {
            "lines" : [
              {
                "class" : "org.batfish.datamodel.ExprAclLine",
                "action" : "PERMIT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "255.0.0.0"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "2.0.0.0"
                    }
                  }
                },
                "name" : "permit ip host 2.0.0.0 host 255.0.0.0",
                "traceElement" : {
                  "fragments" : [
                    {
                      "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                      "text" : "Matched line "
                    },
                    {
                      "class" : "org.batfish.datamodel.TraceElement$LinkFragment",
                      "text" : "permit ip host 2.0.0.0 host 255.0.0.0",
                      "vendorStructureId" : {
                        "filename" : "configs/as3border1.cfg",
                        "structureName" : "102: permit ip host 2.0.0.0 host 255.0.0.0",
                        "structureType" : "extended ipv4 access-list line"
                      }
                    }
                  ]
                },
                "vendorStructureId" : {
                  "filename" : "configs/as3border1.cfg",
                  "structureName" : "102: permit ip host 2.0.0.0 host 255.0.0.0",
                  "structureType" : "extended ipv4 access-list line"
                }
              },
              {
                "class" : "org.batfish.datamodel.ExprAclLine",
                "action" : "PERMIT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "255.255.0.0"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "2.128.0.0"
                    }
                  }
                },
                "name" : "permit ip host 2.128.0.0 host 255.255.0.0",
                "traceElement" : {
                  "fragments" : [
                    {
                      "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                      "text" : "Matched line "
                    },
                    {
                      "class" : "org.batfish.datamodel.TraceElement$LinkFragment",
                      "text" : "permit ip host 2.128.0.0 host 255.255.0.0",
                      "vendorStructureId" : {
                        "filename" : "configs/as3border1.cfg",
                        "structureName" : "102: permit ip host 2.128.0.0 host 255.255.0.0",
                        "structureType" : "extended ipv4 access-list line"
                      }
                    }
                  ]
                },
                "vendorStructureId" : {
                  "filename" : "configs/as3border1.cfg",
                  "structureName" : "102: permit ip host 2.128.0.0 host 255.255.0.0",
                  "structureType" : "extended ipv4 access-list line"
                }
              }
            ],
            "name" : "102",
            "sourceName" : "102",
            "sourceType" : "extended ipv4 access-list"
          },
          "103" : {
            "lines" : [
              {
                "class" : "org.batfish.datamodel.ExprAclLine",
                "action" : "PERMIT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "255.255.255.0"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "3.0.1.0"
                    }
                  }
                },
                "name" : "permit ip host 3.0.1.0 host 255.255.255.0",
                "traceElement" : {
                  "fragments" : [
                    {
                      "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                      "text" : "Matched line "
                    },
                    {
                      "class" : "org.batfish.datamodel.TraceElement$LinkFragment",
                      "text" : "permit ip host 3.0.1.0 host 255.255.255.0",
                      "vendorStructureId" : {
                        "filename" : "configs/as3border1.cfg",
                        "structureName" : "103: permit ip host 3.0.1.0 host 255.255.255.0",
                        "structureType" : "extended ipv4 access-list line"
                      }
                    }
                  ]
                },
                "vendorStructureId" : {
                  "filename" : "configs/as3border1.cfg",
                  "structureName" : "103: permit ip host 3.0.1.0 host 255.255.255.0",
                  "structureType" : "extended ipv4 access-list line"
                }
              },
              {
                "class" : "org.batfish.datamodel.ExprAclLine",
                "action" : "PERMIT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "255.255.255.0"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "3.0.2.0"
                    }
                  }
                },
                "name" : "permit ip host 3.0.2.0 host 255.255.255.0",
                "traceElement" : {
                  "fragments" : [
                    {
                      "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                      "text" : "Matched line "
                    },
                    {
                      "class" : "org.batfish.datamodel.TraceElement$LinkFragment",
                      "text" : "permit ip host 3.0.2.0 host 255.255.255.0",
                      "vendorStructureId" : {
                        "filename" : "configs/as3border1.cfg",
                        "structureName" : "103: permit ip host 3.0.2.0 host 255.255.255.0",
                        "structureType" : "extended ipv4 access-list line"
                      }
                    }
                  ]
                },
                "vendorStructureId" : {
                  "filename" : "configs/as3border1.cfg",
                  "structureName" : "103: permit ip host 3.0.2.0 host 255.255.255.0",
                  "structureType" : "extended ipv4 access-list line"
                }
              }
            ],
            "name" : "103",
            "sourceName" : "103",
            "sourceType" : "extended ipv4 access-list"
          }
        },
        "mainRibEnforceResolvability" : false,
        "ntpServers" : [
          "18.18.18.18",
          "23.23.23.23"
        ],
        "routeFilterLists" : {
          "101" : {
            "lines" : [
              {
                "action" : "PERMIT",
                "ipWildcard" : "1.0.1.0/24",
                "lengthRange" : "24-24"
              },
              {
                "action" : "PERMIT",
                "ipWildcard" : "1.0.2.0/24",
                "lengthRange" : "24-24"
              }
            ],
            "name" : "101",
            "vendorStructureId" : {
              "filename" : "configs/as3border1.cfg",
              "structureName" : "101",
              "structureType" : "extended ipv4 access-list"
            }
          },
          "102" : {
            "lines" : [
              {
                "action" : "PERMIT",
                "ipWildcard" : "2.0.0.0/8",
                "lengthRange" : "8-8"
              },
              {
                "action" : "PERMIT",
                "ipWildcard" : "2.128.0.0/16",
                "lengthRange" : "16-16"
              }
            ],
            "name" : "102",
            "vendorStructureId" : {
              "filename" : "configs/as3border1.cfg",
              "structureName" : "102",
              "structureType" : "extended ipv4 access-list"
            }
          },
          "103" : {
            "lines" : [
              {
                "action" : "PERMIT",
                "ipWildcard" : "3.0.1.0/24",
                "lengthRange" : "24-24"
              },
              {
                "action" : "PERMIT",
                "ipWildcard" : "3.0.2.0/24",
                "lengthRange" : "24-24"
              }
            ],
            "name" : "103",
            "vendorStructureId" : {
              "filename" : "configs/as3border1.cfg",
              "structureName" : "103",
              "structureType" : "extended ipv4 access-list"
            }
          },
          "default_list" : {
            "lines" : [
              {
                "action" : "PERMIT",
                "ipWildcard" : "0.0.0.0/0",
                "lengthRange" : "0-0"
              }
            ],
            "name" : "default_list",
            "vendorStructureId" : {
              "filename" : "configs/as3border1.cfg",
              "structureName" : "default_list",
              "structureType" : "ipv4 prefix-list"
            }
          },
          "inbound_route_filter" : {
            "lines" : [
              {
                "action" : "DENY",
                "ipWildcard" : "3.0.0.0/8",
                "lengthRange" : "8-32"
              },
              {
                "action" : "PERMIT",
                "ipWildcard" : "0.0.0.0/0",
                "lengthRange" : "0-32"
              }
            ],
            "name" : "inbound_route_filter",
            "vendorStructureId" : {
              "filename" : "configs/as3border1.cfg",
              "structureName" : "inbound_route_filter",
              "structureType" : "ipv4 prefix-list"
            }
          }
        },
        "routingPolicies" : {
          "as1_to_as3" : {
            "name" : "as1_to_as3",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "~RMCLAUSE~as1_to_as3~100~",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ReturnLocalDefaultAction"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.communities.MatchCommunities",
                  "communitySetExpr" : {
                    "class" : "org.batfish.datamodel.routing_policy.communities.InputCommunities"
                  },
                  "communitySetMatchExpr" : {
                    "class" : "org.batfish.datamodel.routing_policy.communities.CommunitySetMatchExprReference",
                    "name" : "as1_community"
                  }
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.TraceableStatement",
                    "innerStatements" : [
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.SetLocalPreference",
                        "localPreference" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.LiteralLong",
                          "value" : 350
                        }
                      },
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                        "type" : "ReturnTrue"
                      }
                    ],
                    "traceElement" : {
                      "fragments" : [
                        {
                          "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                          "text" : "Matched "
                        },
                        {
                          "class" : "org.batfish.datamodel.TraceElement$LinkFragment",
                          "text" : "route-map as1_to_as3 clause 100",
                          "vendorStructureId" : {
                            "filename" : "configs/as3border1.cfg",
                            "structureName" : "as1_to_as3 100",
                            "structureType" : "route-map-clause"
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            ]
          },
          "as2_to_as3" : {
            "name" : "as2_to_as3",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "~RMCLAUSE~as2_to_as3~100~",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ReturnLocalDefaultAction"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.communities.MatchCommunities",
                  "communitySetExpr" : {
                    "class" : "org.batfish.datamodel.routing_policy.communities.InputCommunities"
                  },
                  "communitySetMatchExpr" : {
                    "class" : "org.batfish.datamodel.routing_policy.communities.CommunitySetMatchExprReference",
                    "name" : "as2_community"
                  }
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.TraceableStatement",
                    "innerStatements" : [
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.SetLocalPreference",
                        "localPreference" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.LiteralLong",
                          "value" : 350
                        }
                      },
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                        "type" : "ReturnTrue"
                      }
                    ],
                    "traceElement" : {
                      "fragments" : [
                        {
                          "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                          "text" : "Matched "
                        },
                        {
                          "class" : "org.batfish.datamodel.TraceElement$LinkFragment",
                          "text" : "route-map as2_to_as3 clause 100",
                          "vendorStructureId" : {
                            "filename" : "configs/as3border1.cfg",
                            "structureName" : "as2_to_as3 100",
                            "structureType" : "route-map-clause"
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            ]
          },
          "as3_to_as1" : {
            "name" : "as3_to_as1",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "~RMCLAUSE~as3_to_as1~2~",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.If",
                    "comment" : "~RMCLAUSE~as3_to_as1~3~",
                    "falseStatements" : [
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                        "type" : "ReturnLocalDefaultAction"
                      }
                    ],
                    "guard" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                      "prefix" : {
                        "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                      },
                      "prefixSet" : {
                        "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                        "name" : "103"
                      }
                    },
                    "trueStatements" : [
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.TraceableStatement",
                        "innerStatements" : [
                          {
                            "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
                            "metric" : {
                              "class" : "org.batfish.datamodel.routing_policy.expr.LiteralLong",
                              "value" : 50
                            }
                          },
                          {
                            "class" : "org.batfish.datamodel.routing_policy.communities.SetCommunities",
                            "communitySetExpr" : {
                              "class" : "org.batfish.datamodel.routing_policy.communities.CommunitySetUnion",
                              "exprs" : [
                                {
                                  "class" : "org.batfish.datamodel.routing_policy.communities.InputCommunities"
                                },
                                {
                                  "class" : "org.batfish.datamodel.routing_policy.communities.LiteralCommunitySet",
                                  "communitySet" : [
                                    "3:1"
                                  ]
                                }
                              ]
                            }
                          },
                          {
                            "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                            "type" : "ReturnTrue"
                          }
                        ],
                        "traceElement" : {
                          "fragments" : [
                            {
                              "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                              "text" : "Matched "
                            },
                            {
                              "class" : "org.batfish.datamodel.TraceElement$LinkFragment",
                              "text" : "route-map as3_to_as1 clause 3",
                              "vendorStructureId" : {
                                "filename" : "configs/as3border1.cfg",
                                "structureName" : "as3_to_as1 3",
                                "structureType" : "route-map-clause"
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                  "prefix" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                  },
                  "prefixSet" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                    "name" : "102"
                  }
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.TraceableStatement",
                    "innerStatements" : [
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
                        "metric" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.LiteralLong",
                          "value" : 50
                        }
                      },
                      {
                        "class" : "org.batfish.datamodel.routing_policy.communities.SetCommunities",
                        "communitySetExpr" : {
                          "class" : "org.batfish.datamodel.routing_policy.communities.CommunitySetUnion",
                          "exprs" : [
                            {
                              "class" : "org.batfish.datamodel.routing_policy.communities.InputCommunities"
                            },
                            {
                              "class" : "org.batfish.datamodel.routing_policy.communities.LiteralCommunitySet",
                              "communitySet" : [
                                "3:1"
                              ]
                            }
                          ]
                        }
                      },
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                        "type" : "ReturnTrue"
                      }
                    ],
                    "traceElement" : {
                      "fragments" : [
                        {
                          "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                          "text" : "Matched "
                        },
                        {
                          "class" : "org.batfish.datamodel.TraceElement$LinkFragment",
                          "text" : "route-map as3_to_as1 clause 2",
                          "vendorStructureId" : {
                            "filename" : "configs/as3border1.cfg",
                            "structureName" : "as3_to_as1 2",
                            "structureType" : "route-map-clause"
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            ]
          },
          "as3_to_as2" : {
            "name" : "as3_to_as2",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "~RMCLAUSE~as3_to_as2~1~",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.If",
                    "comment" : "~RMCLAUSE~as3_to_as2~3~",
                    "falseStatements" : [
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.If",
                        "comment" : "~RMCLAUSE~as3_to_as2~5~",
                        "falseStatements" : [
                          {
                            "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                            "type" : "ReturnLocalDefaultAction"
                          }
                        ],
                        "guard" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                          "prefix" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                          },
                          "prefixSet" : {
                            "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                            "name" : "default_list"
                          }
                        },
                        "trueStatements" : [
                          {
                            "class" : "org.batfish.datamodel.routing_policy.statement.TraceableStatement",
                            "innerStatements" : [
                              {
                                "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
                                "metric" : {
                                  "class" : "org.batfish.datamodel.routing_policy.expr.LiteralLong",
                                  "value" : 50
                                }
                              },
                              {
                                "class" : "org.batfish.datamodel.routing_policy.communities.SetCommunities",
                                "communitySetExpr" : {
                                  "class" : "org.batfish.datamodel.routing_policy.communities.CommunitySetUnion",
                                  "exprs" : [
                                    {
                                      "class" : "org.batfish.datamodel.routing_policy.communities.InputCommunities"
                                    },
                                    {
                                      "class" : "org.batfish.datamodel.routing_policy.communities.LiteralCommunitySet",
                                      "communitySet" : [
                                        "3:2"
                                      ]
                                    }
                                  ]
                                }
                              },
                              {
                                "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                                "type" : "ReturnTrue"
                              }
                            ],
                            "traceElement" : {
                              "fragments" : [
                                {
                                  "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                                  "text" : "Matched "
                                },
                                {
                                  "class" : "org.batfish.datamodel.TraceElement$LinkFragment",
                                  "text" : "route-map as3_to_as2 clause 5",
                                  "vendorStructureId" : {
                                    "filename" : "configs/as3border1.cfg",
                                    "structureName" : "as3_to_as2 5",
                                    "structureType" : "route-map-clause"
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    ],
                    "guard" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                      "prefix" : {
                        "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                      },
                      "prefixSet" : {
                        "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                        "name" : "103"
                      }
                    },
                    "trueStatements" : [
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.TraceableStatement",
                        "innerStatements" : [
                          {
                            "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
                            "metric" : {
                              "class" : "org.batfish.datamodel.routing_policy.expr.LiteralLong",
                              "value" : 50
                            }
                          },
                          {
                            "class" : "org.batfish.datamodel.routing_policy.communities.SetCommunities",
                            "communitySetExpr" : {
                              "class" : "org.batfish.datamodel.routing_policy.communities.CommunitySetUnion",
                              "exprs" : [
                                {
                                  "class" : "org.batfish.datamodel.routing_policy.communities.InputCommunities"
                                },
                                {
                                  "class" : "org.batfish.datamodel.routing_policy.communities.LiteralCommunitySet",
                                  "communitySet" : [
                                    "3:2"
                                  ]
                                }
                              ]
                            }
                          },
                          {
                            "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                            "type" : "ReturnTrue"
                          }
                        ],
                        "traceElement" : {
                          "fragments" : [
                            {
                              "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                              "text" : "Matched "
                            },
                            {
                              "class" : "org.batfish.datamodel.TraceElement$LinkFragment",
                              "text" : "route-map as3_to_as2 clause 3",
                              "vendorStructureId" : {
                                "filename" : "configs/as3border1.cfg",
                                "structureName" : "as3_to_as2 3",
                                "structureType" : "route-map-clause"
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                  "prefix" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                  },
                  "prefixSet" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                    "name" : "101"
                  }
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.TraceableStatement",
                    "innerStatements" : [
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
                        "metric" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.LiteralLong",
                          "value" : 50
                        }
                      },
                      {
                        "class" : "org.batfish.datamodel.routing_policy.communities.SetCommunities",
                        "communitySetExpr" : {
                          "class" : "org.batfish.datamodel.routing_policy.communities.CommunitySetUnion",
                          "exprs" : [
                            {
                              "class" : "org.batfish.datamodel.routing_policy.communities.InputCommunities"
                            },
                            {
                              "class" : "org.batfish.datamodel.routing_policy.communities.LiteralCommunitySet",
                              "communitySet" : [
                                "3:2"
                              ]
                            }
                          ]
                        }
                      },
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                        "type" : "ReturnTrue"
                      }
                    ],
                    "traceElement" : {
                      "fragments" : [
                        {
                          "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                          "text" : "Matched "
                        },
                        {
                          "class" : "org.batfish.datamodel.TraceElement$LinkFragment",
                          "text" : "route-map as3_to_as2 clause 1",
                          "vendorStructureId" : {
                            "filename" : "configs/as3border1.cfg",
                            "structureName" : "as3_to_as2 1",
                            "structureType" : "route-map-clause"
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            ]
          },
          "~BGP_COMMON_EXPORT_POLICY:default~" : {
            "name" : "~BGP_COMMON_EXPORT_POLICY:default~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                "type" : "ReturnTrue"
              }
            ]
          },
          "~BGP_PEER_EXPORT_POLICY:default:10.23.21.2~" : {
            "name" : "~BGP_PEER_EXPORT_POLICY:default:10.23.21.2~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "peer-export policy main conditional: exitAccept if true / exitReject if false",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitReject"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.Conjunction",
                  "conjuncts" : [
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                      "calledPolicyName" : "~BGP_COMMON_EXPORT_POLICY:default~"
                    },
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                      "calledPolicyName" : "as3_to_as2"
                    }
                  ]
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitAccept"
                  }
                ]
              }
            ]
          },
          "~BGP_PEER_EXPORT_POLICY:default:3.10.1.1~" : {
            "name" : "~BGP_PEER_EXPORT_POLICY:default:3.10.1.1~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "peer-export policy main conditional: exitAccept if true / exitReject if false",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitReject"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                  "calledPolicyName" : "~BGP_COMMON_EXPORT_POLICY:default~"
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitAccept"
                  }
                ]
              }
            ]
          },
          "~BGP_REDISTRIBUTION_POLICY:default~" : {
            "name" : "~BGP_REDISTRIBUTION_POLICY:default~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.SetWeight",
                "weight" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.LiteralInt",
                  "value" : 32768
                }
              },
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "Add network statement routes to BGP",
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.Conjunction",
                  "conjuncts" : [
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                      "prefix" : {
                        "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                      },
                      "prefixSet" : {
                        "class" : "org.batfish.datamodel.routing_policy.expr.ExplicitPrefixSet",
                        "prefixSpace" : [
                          "3.0.1.0/24"
                        ]
                      }
                    },
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.Not",
                      "expr" : {
                        "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                        "protocols" : [
                          "aggregate",
                          "bgp",
                          "ibgp"
                        ]
                      }
                    }
                  ]
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.SetOrigin",
                    "originType" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.LiteralOrigin",
                      "originType" : "igp"
                    }
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitAccept"
                  }
                ]
              },
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "Add network statement routes to BGP",
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.Conjunction",
                  "conjuncts" : [
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                      "prefix" : {
                        "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                      },
                      "prefixSet" : {
                        "class" : "org.batfish.datamodel.routing_policy.expr.ExplicitPrefixSet",
                        "prefixSpace" : [
                          "3.0.2.0/24"
                        ]
                      }
                    },
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.Not",
                      "expr" : {
                        "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                        "protocols" : [
                          "aggregate",
                          "bgp",
                          "ibgp"
                        ]
                      }
                    }
                  ]
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.SetOrigin",
                    "originType" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.LiteralOrigin",
                      "originType" : "igp"
                    }
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitAccept"
                  }
                ]
              },
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                "type" : "ExitReject"
              }
            ]
          },
          "~OSPF_EXPORT_POLICY:default:1~" : {
            "name" : "~OSPF_EXPORT_POLICY:default:1~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "OSPF export routes for connected",
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.Conjunction",
                  "conjuncts" : [
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                      "protocols" : [
                        "connected"
                      ]
                    },
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.Not",
                      "expr" : {
                        "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                        "comment" : "match default route",
                        "prefix" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                        },
                        "prefixSet" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.ExplicitPrefixSet",
                          "prefixSpace" : [
                            "0.0.0.0/0"
                          ]
                        }
                      }
                    }
                  ]
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.SetOspfMetricType",
                    "metricType" : "E2"
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
                    "metric" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.LiteralLong",
                      "value" : 20
                    }
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitAccept"
                  }
                ]
              }
            ]
          },
          "~RESOLUTION_POLICY~" : {
            "name" : "~RESOLUTION_POLICY~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ReturnTrue"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                  "comment" : "match default route",
                  "prefix" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                  },
                  "prefixSet" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.ExplicitPrefixSet",
                    "prefixSpace" : [
                      "0.0.0.0/0"
                    ]
                  }
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ReturnFalse"
                  }
                ]
              }
            ]
          }
        },
        "vendorFamily" : {
          "cisco" : {
            "aaa" : {
              "newModel" : false
            },
            "hostname" : "as3border1",
            "lines" : {
              "aux0" : {
                "name" : "aux0",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0,
                "lineType" : "AUX"
              },
              "con0" : {
                "name" : "con0",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0,
                "lineType" : "CON"
              },
              "vty0" : {
                "name" : "vty0",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0,
                "lineType" : "VTY"
              },
              "vty1" : {
                "name" : "vty1",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0,
                "lineType" : "VTY"
              },
              "vty2" : {
                "name" : "vty2",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0,
                "lineType" : "VTY"
              },
              "vty3" : {
                "name" : "vty3",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0,
                "lineType" : "VTY"
              },
              "vty4" : {
                "name" : "vty4",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0,
                "lineType" : "VTY"
              }
            },
            "logging" : {
              "on" : true
            },
            "ntp" : {
              "servers" : {
                "18.18.18.18" : {
                  "name" : "18.18.18.18"
                },
                "23.23.23.23" : {
                  "name" : "23.23.23.23"
                }
              }
            },
            "services" : {
              "timestamps" : {
                "enabled" : true,
                "subservices" : {
                  "debug" : {
                    "enabled" : true,
                    "subservices" : {
                      "datetime" : {
                        "enabled" : true,
                        "subservices" : {
                          "msec" : {
                            "enabled" : true
                          }
                        }
                      }
                    }
                  },
                  "log" : {
                    "enabled" : true,
                    "subservices" : {
                      "datetime" : {
                        "enabled" : true,
                        "subservices" : {
                          "msec" : {
                            "enabled" : true
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "vrfs" : {
          "default" : {
            "name" : "default",
            "ospfProcesses" : {
              "1" : {
                "adminCosts" : {
                  "ospf" : 110,
                  "ospfE1" : 110,
                  "ospfE2" : 110,
                  "ospfIA" : 110,
                  "ospfIS" : 110
                },
                "areas" : {
                  "1" : {
                    "injectDefaultRoute" : true,
                    "interfaces" : [
                      "GigabitEthernet0/0",
                      "Loopback0"
                    ],
                    "metricOfDefaultRoute" : 0,
                    "name" : 1,
                    "stubType" : "NONE"
                  }
                },
                "exportPolicy" : "~OSPF_EXPORT_POLICY:default:1~",
                "processId" : "1",
                "referenceBandwidth" : 1.0E8,
                "routerId" : "3.1.1.1",
                "summaryAdminCost" : 254,
                "summaryDiscardMetric" : 0
              }
            },
            "bgpProcess" : {
              "clientToClientReflection" : true,
              "ebgpAdminCost" : 20,
              "ibgpAdminCost" : 200,
              "localAdminCost" : 200,
              "localOriginationTypeTieBreaker" : "NO_PREFERENCE",
              "networkNextHopIpTieBreaker" : "HIGHEST_NEXT_HOP_IP",
              "redistributeNextHopIpTieBreaker" : "HIGHEST_NEXT_HOP_IP",
              "redistributionPolicy" : "~BGP_REDISTRIBUTION_POLICY:default~",
              "routerId" : "3.1.1.1",
              "clusterListAsIbgpCost" : true,
              "multipathEbgp" : true,
              "multipathEquivalentAsPathMatchMode" : "EXACT_PATH",
              "multipathIbgp" : true,
              "neighbors" : {
                "3.10.1.1" : {
                  "class" : "org.batfish.datamodel.BgpActivePeerConfig",
                  "checkLocalIpOnAccept" : true,
                  "clusterId" : 50397441,
                  "defaultMetric" : 0,
                  "ebgpMultihop" : false,
                  "enforceFirstAs" : true,
                  "group" : "as3",
                  "ipv4UnicastAddressFamily" : {
                    "addressFamilyCapabilities" : {
                      "additionalPathsReceive" : true,
                      "additionalPathsSelectAll" : true,
                      "additionalPathsSend" : true,
                      "advertiseExternal" : false,
                      "advertiseInactive" : true,
                      "allowLocalAsIn" : false,
                      "allowRemoteAsOut" : "ALWAYS",
                      "sendCommunity" : true,
                      "sendExtendedCommunity" : false
                    },
                    "exportPolicy" : "~BGP_PEER_EXPORT_POLICY:default:3.10.1.1~",
                    "routeReflectorClient" : false
                  },
                  "localAs" : 3,
                  "localIp" : "3.1.1.1",
                  "peerAddress" : "3.10.1.1",
                  "remoteAsns" : "3",
                  "replaceNonLocalAsesOnExport" : false
                },
                "10.23.21.2" : {
                  "class" : "org.batfish.datamodel.BgpActivePeerConfig",
                  "checkLocalIpOnAccept" : true,
                  "clusterId" : 50397441,
                  "defaultMetric" : 0,
                  "ebgpMultihop" : false,
                  "enforceFirstAs" : true,
                  "group" : "as2",
                  "ipv4UnicastAddressFamily" : {
                    "addressFamilyCapabilities" : {
                      "additionalPathsReceive" : true,
                      "additionalPathsSelectAll" : true,
                      "additionalPathsSend" : true,
                      "advertiseExternal" : false,
                      "advertiseInactive" : true,
                      "allowLocalAsIn" : false,
                      "allowRemoteAsOut" : "ALWAYS",
                      "sendCommunity" : true,
                      "sendExtendedCommunity" : false
                    },
                    "exportPolicy" : "~BGP_PEER_EXPORT_POLICY:default:10.23.21.2~",
                    "exportPolicySources" : [
                      "as3_to_as2"
                    ],
                    "importPolicy" : "as2_to_as3",
                    "importPolicySources" : [
                      "as2_to_as3"
                    ],
                    "routeReflectorClient" : false
                  },
                  "localAs" : 3,
                  "localIp" : "10.23.21.3",
                  "peerAddress" : "10.23.21.2",
                  "remoteAsns" : "2",
                  "replaceNonLocalAsesOnExport" : false
                }
              },
              "tieBreaker" : "ARRIVAL_ORDER"
            },
            "resolutionPolicy" : "~RESOLUTION_POLICY~"
          }
        }
      },
      "as3border2" : {
        "configurationFormat" : "CISCO_IOS",
        "exportBgpFromBgpRib" : true,
        "generateBgpAggregatesFromMainRib" : false,
        "name" : "as3border2",
        "communityMatchExprs" : {
          "as1_community" : {
            "class" : "org.batfish.datamodel.routing_policy.communities.CommunityMatchRegex",
            "communityRendering" : {
              "class" : "org.batfish.datamodel.routing_policy.communities.ColonSeparatedRendering"
            },
            "regex" : "(,|\\{|\\}|^|$| )1:"
          },
          "as2_community" : {
            "class" : "org.batfish.datamodel.routing_policy.communities.CommunityMatchRegex",
            "communityRendering" : {
              "class" : "org.batfish.datamodel.routing_policy.communities.ColonSeparatedRendering"
            },
            "regex" : "(,|\\{|\\}|^|$| )2:"
          },
          "as3_community" : {
            "class" : "org.batfish.datamodel.routing_policy.communities.CommunityMatchRegex",
            "communityRendering" : {
              "class" : "org.batfish.datamodel.routing_policy.communities.ColonSeparatedRendering"
            },
            "regex" : "(,|\\{|\\}|^|$| )3:"
          }
        },
        "communitySetMatchExprs" : {
          "as1_community" : {
            "class" : "org.batfish.datamodel.routing_policy.communities.HasCommunity",
            "expr" : {
              "class" : "org.batfish.datamodel.routing_policy.communities.CommunityMatchRegex",
              "communityRendering" : {
                "class" : "org.batfish.datamodel.routing_policy.communities.ColonSeparatedRendering"
              },
              "regex" : "(,|\\{|\\}|^|$| )1:"
            }
          },
          "as2_community" : {
            "class" : "org.batfish.datamodel.routing_policy.communities.HasCommunity",
            "expr" : {
              "class" : "org.batfish.datamodel.routing_policy.communities.CommunityMatchRegex",
              "communityRendering" : {
                "class" : "org.batfish.datamodel.routing_policy.communities.ColonSeparatedRendering"
              },
              "regex" : "(,|\\{|\\}|^|$| )2:"
            }
          },
          "as3_community" : {
            "class" : "org.batfish.datamodel.routing_policy.communities.HasCommunity",
            "expr" : {
              "class" : "org.batfish.datamodel.routing_policy.communities.CommunityMatchRegex",
              "communityRendering" : {
                "class" : "org.batfish.datamodel.routing_policy.communities.ColonSeparatedRendering"
              },
              "regex" : "(,|\\{|\\}|^|$| )3:"
            }
          }
        },
        "defaultCrossZoneAction" : "PERMIT",
        "defaultInboundAction" : "PERMIT",
        "deviceModel" : "CISCO_UNSPECIFIED",
        "deviceType" : "ROUTER",
        "disconnectAdminDownInterfaces" : true,
        "domainName" : "lab.local",
        "humanName" : "as3border2",
        "interfaces" : {
          "Ethernet0/0" : {
            "name" : "Ethernet0/0",
            "active" : false,
            "additionalArpIps" : {
              "class" : "org.batfish.datamodel.EmptyIpSpace"
            },
            "adminUp" : false,
            "autostate" : true,
            "bandwidth" : 1.0E7,
            "blacklisted" : false,
            "declaredNames" : [
              "Ethernet0/0"
            ],
            "hmm" : false,
            "inactiveReason" : "ADMIN_DOWN",
            "lineUp" : true,
            "mtu" : 1500,
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "speed" : 1.0E7,
            "switchport" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "PHYSICAL",
            "vrf" : "default"
          },
          "GigabitEthernet0/0" : {
            "name" : "GigabitEthernet0/0",
            "active" : true,
            "additionalArpIps" : {
              "class" : "org.batfish.datamodel.EmptyIpSpace"
            },
            "adminUp" : true,
            "allPrefixes" : [
              "10.13.22.3/24"
            ],
            "autostate" : true,
            "bandwidth" : 1.0E9,
            "blacklisted" : false,
            "declaredNames" : [
              "GigabitEthernet0/0"
            ],
            "hmm" : false,
            "lineUp" : true,
            "mtu" : 1500,
            "prefix" : "10.13.22.3/24",
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "speed" : 1.0E9,
            "switchport" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "PHYSICAL",
            "vrf" : "default"
          },
          "GigabitEthernet1/0" : {
            "name" : "GigabitEthernet1/0",
            "active" : true,
            "additionalArpIps" : {
              "class" : "org.batfish.datamodel.EmptyIpSpace"
            },
            "adminUp" : true,
            "allPrefixes" : [
              "3.0.2.1/24"
            ],
            "autostate" : true,
            "bandwidth" : 1.0E9,
            "blacklisted" : false,
            "declaredNames" : [
              "GigabitEthernet1/0"
            ],
            "hmm" : false,
            "lineUp" : true,
            "mtu" : 1500,
            "ospfSettings" : {
              "area" : 1,
              "cost" : 1,
              "deadInterval" : 40,
              "enabled" : true,
              "helloInterval" : 10,
              "helloMultiplier" : 0,
              "networkType" : "BROADCAST",
              "passive" : false,
              "process" : "1"
            },
            "prefix" : "3.0.2.1/24",
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "speed" : 1.0E9,
            "switchport" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "PHYSICAL",
            "vrf" : "default"
          },
          "Loopback0" : {
            "name" : "Loopback0",
            "active" : true,
            "additionalArpIps" : {
              "class" : "org.batfish.datamodel.EmptyIpSpace"
            },
            "adminUp" : true,
            "allPrefixes" : [
              "3.2.2.2/32"
            ],
            "autostate" : true,
            "bandwidth" : 8.0E9,
            "blacklisted" : false,
            "declaredNames" : [
              "Loopback0"
            ],
            "hmm" : false,
            "lineUp" : true,
            "mtu" : 1500,
            "ospfSettings" : {
              "area" : 1,
              "cost" : 1,
              "deadInterval" : 40,
              "enabled" : true,
              "helloInterval" : 10,
              "helloMultiplier" : 0,
              "networkType" : "BROADCAST",
              "passive" : false,
              "process" : "1"
            },
            "prefix" : "3.2.2.2/32",
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "switchport" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "LOOPBACK",
            "vrf" : "default"
          }
        },
        "ipAccessLists" : {
          "101" : {
            "lines" : [
              {
                "class" : "org.batfish.datamodel.ExprAclLine",
                "action" : "PERMIT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "255.255.255.0"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "1.0.1.0"
                    }
                  }
                },
                "name" : "permit ip host 1.0.1.0 host 255.255.255.0",
                "traceElement" : {
                  "fragments" : [
                    {
                      "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                      "text" : "Matched line "
                    },
                    {
                      "class" : "org.batfish.datamodel.TraceElement$LinkFragment",
                      "text" : "permit ip host 1.0.1.0 host 255.255.255.0",
                      "vendorStructureId" : {
                        "filename" : "configs/as3border2.cfg",
                        "structureName" : "101: permit ip host 1.0.1.0 host 255.255.255.0",
                        "structureType" : "extended ipv4 access-list line"
                      }
                    }
                  ]
                },
                "vendorStructureId" : {
                  "filename" : "configs/as3border2.cfg",
                  "structureName" : "101: permit ip host 1.0.1.0 host 255.255.255.0",
                  "structureType" : "extended ipv4 access-list line"
                }
              },
              {
                "class" : "org.batfish.datamodel.ExprAclLine",
                "action" : "PERMIT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "255.255.255.0"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "1.0.2.0"
                    }
                  }
                },
                "name" : "permit ip host 1.0.2.0 host 255.255.255.0",
                "traceElement" : {
                  "fragments" : [
                    {
                      "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                      "text" : "Matched line "
                    },
                    {
                      "class" : "org.batfish.datamodel.TraceElement$LinkFragment",
                      "text" : "permit ip host 1.0.2.0 host 255.255.255.0",
                      "vendorStructureId" : {
                        "filename" : "configs/as3border2.cfg",
                        "structureName" : "101: permit ip host 1.0.2.0 host 255.255.255.0",
                        "structureType" : "extended ipv4 access-list line"
                      }
                    }
                  ]
                },
                "vendorStructureId" : {
                  "filename" : "configs/as3border2.cfg",
                  "structureName" : "101: permit ip host 1.0.2.0 host 255.255.255.0",
                  "structureType" : "extended ipv4 access-list line"
                }
              }
            ],
            "name" : "101",
            "sourceName" : "101",
            "sourceType" : "extended ipv4 access-list"
          },
          "102" : {
            "lines" : [
              {
                "class" : "org.batfish.datamodel.ExprAclLine",
                "action" : "PERMIT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "255.0.0.0"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "2.0.0.0"
                    }
                  }
                },
                "name" : "permit ip host 2.0.0.0 host 255.0.0.0",
                "traceElement" : {
                  "fragments" : [
                    {
                      "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                      "text" : "Matched line "
                    },
                    {
                      "class" : "org.batfish.datamodel.TraceElement$LinkFragment",
                      "text" : "permit ip host 2.0.0.0 host 255.0.0.0",
                      "vendorStructureId" : {
                        "filename" : "configs/as3border2.cfg",
                        "structureName" : "102: permit ip host 2.0.0.0 host 255.0.0.0",
                        "structureType" : "extended ipv4 access-list line"
                      }
                    }
                  ]
                },
                "vendorStructureId" : {
                  "filename" : "configs/as3border2.cfg",
                  "structureName" : "102: permit ip host 2.0.0.0 host 255.0.0.0",
                  "structureType" : "extended ipv4 access-list line"
                }
              },
              {
                "class" : "org.batfish.datamodel.ExprAclLine",
                "action" : "PERMIT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "255.255.0.0"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "2.128.0.0"
                    }
                  }
                },
                "name" : "permit ip host 2.128.0.0 host 255.255.0.0",
                "traceElement" : {
                  "fragments" : [
                    {
                      "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                      "text" : "Matched line "
                    },
                    {
                      "class" : "org.batfish.datamodel.TraceElement$LinkFragment",
                      "text" : "permit ip host 2.128.0.0 host 255.255.0.0",
                      "vendorStructureId" : {
                        "filename" : "configs/as3border2.cfg",
                        "structureName" : "102: permit ip host 2.128.0.0 host 255.255.0.0",
                        "structureType" : "extended ipv4 access-list line"
                      }
                    }
                  ]
                },
                "vendorStructureId" : {
                  "filename" : "configs/as3border2.cfg",
                  "structureName" : "102: permit ip host 2.128.0.0 host 255.255.0.0",
                  "structureType" : "extended ipv4 access-list line"
                }
              }
            ],
            "name" : "102",
            "sourceName" : "102",
            "sourceType" : "extended ipv4 access-list"
          },
          "103" : {
            "lines" : [
              {
                "class" : "org.batfish.datamodel.ExprAclLine",
                "action" : "PERMIT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "255.255.255.0"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "3.0.1.0"
                    }
                  }
                },
                "name" : "permit ip host 3.0.1.0 host 255.255.255.0",
                "traceElement" : {
                  "fragments" : [
                    {
                      "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                      "text" : "Matched line "
                    },
                    {
                      "class" : "org.batfish.datamodel.TraceElement$LinkFragment",
                      "text" : "permit ip host 3.0.1.0 host 255.255.255.0",
                      "vendorStructureId" : {
                        "filename" : "configs/as3border2.cfg",
                        "structureName" : "103: permit ip host 3.0.1.0 host 255.255.255.0",
                        "structureType" : "extended ipv4 access-list line"
                      }
                    }
                  ]
                },
                "vendorStructureId" : {
                  "filename" : "configs/as3border2.cfg",
                  "structureName" : "103: permit ip host 3.0.1.0 host 255.255.255.0",
                  "structureType" : "extended ipv4 access-list line"
                }
              },
              {
                "class" : "org.batfish.datamodel.ExprAclLine",
                "action" : "PERMIT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "255.255.255.0"
                    },
                    "negate" : false,
                    "srcIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "3.0.2.0"
                    }
                  }
                },
                "name" : "permit ip host 3.0.2.0 host 255.255.255.0",
                "traceElement" : {
                  "fragments" : [
                    {
                      "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                      "text" : "Matched line "
                    },
                    {
                      "class" : "org.batfish.datamodel.TraceElement$LinkFragment",
                      "text" : "permit ip host 3.0.2.0 host 255.255.255.0",
                      "vendorStructureId" : {
                        "filename" : "configs/as3border2.cfg",
                        "structureName" : "103: permit ip host 3.0.2.0 host 255.255.255.0",
                        "structureType" : "extended ipv4 access-list line"
                      }
                    }
                  ]
                },
                "vendorStructureId" : {
                  "filename" : "configs/as3border2.cfg",
                  "structureName" : "103: permit ip host 3.0.2.0 host 255.255.255.0",
                  "structureType" : "extended ipv4 access-list line"
                }
              }
            ],
            "name" : "103",
            "sourceName" : "103",
            "sourceType" : "extended ipv4 access-list"
          }
        },
        "mainRibEnforceResolvability" : false,
        "ntpServers" : [
          "18.18.18.18",
          "23.23.23.23"
        ],
        "routeFilterLists" : {
          "101" : {
            "lines" : [
              {
                "action" : "PERMIT",
                "ipWildcard" : "1.0.1.0/24",
                "lengthRange" : "24-24"
              },
              {
                "action" : "PERMIT",
                "ipWildcard" : "1.0.2.0/24",
                "lengthRange" : "24-24"
              }
            ],
            "name" : "101",
            "vendorStructureId" : {
              "filename" : "configs/as3border2.cfg",
              "structureName" : "101",
              "structureType" : "extended ipv4 access-list"
            }
          },
          "102" : {
            "lines" : [
              {
                "action" : "PERMIT",
                "ipWildcard" : "2.0.0.0/8",
                "lengthRange" : "8-8"
              },
              {
                "action" : "PERMIT",
                "ipWildcard" : "2.128.0.0/16",
                "lengthRange" : "16-16"
              }
            ],
            "name" : "102",
            "vendorStructureId" : {
              "filename" : "configs/as3border2.cfg",
              "structureName" : "102",
              "structureType" : "extended ipv4 access-list"
            }
          },
          "103" : {
            "lines" : [
              {
                "action" : "PERMIT",
                "ipWildcard" : "3.0.1.0/24",
                "lengthRange" : "24-24"
              },
              {
                "action" : "PERMIT",
                "ipWildcard" : "3.0.2.0/24",
                "lengthRange" : "24-24"
              }
            ],
            "name" : "103",
            "vendorStructureId" : {
              "filename" : "configs/as3border2.cfg",
              "structureName" : "103",
              "structureType" : "extended ipv4 access-list"
            }
          },
          "inbound_route_filter" : {
            "lines" : [
              {
                "action" : "DENY",
                "ipWildcard" : "3.0.0.0/8",
                "lengthRange" : "8-32"
              },
              {
                "action" : "PERMIT",
                "ipWildcard" : "0.0.0.0/0",
                "lengthRange" : "0-32"
              }
            ],
            "name" : "inbound_route_filter",
            "vendorStructureId" : {
              "filename" : "configs/as3border2.cfg",
              "structureName" : "inbound_route_filter",
              "structureType" : "ipv4 prefix-list"
            }
          }
        },
        "routingPolicies" : {
          "as1_to_as3" : {
            "name" : "as1_to_as3",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "~RMCLAUSE~as1_to_as3~100~",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ReturnLocalDefaultAction"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.communities.MatchCommunities",
                  "communitySetExpr" : {
                    "class" : "org.batfish.datamodel.routing_policy.communities.InputCommunities"
                  },
                  "communitySetMatchExpr" : {
                    "class" : "org.batfish.datamodel.routing_policy.communities.CommunitySetMatchExprReference",
                    "name" : "as1_community"
                  }
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.TraceableStatement",
                    "innerStatements" : [
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.SetLocalPreference",
                        "localPreference" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.LiteralLong",
                          "value" : 350
                        }
                      },
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                        "type" : "ReturnTrue"
                      }
                    ],
                    "traceElement" : {
                      "fragments" : [
                        {
                          "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                          "text" : "Matched "
                        },
                        {
                          "class" : "org.batfish.datamodel.TraceElement$LinkFragment",
                          "text" : "route-map as1_to_as3 clause 100",
                          "vendorStructureId" : {
                            "filename" : "configs/as3border2.cfg",
                            "structureName" : "as1_to_as3 100",
                            "structureType" : "route-map-clause"
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            ]
          },
          "as2_to_as3" : {
            "name" : "as2_to_as3",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "~RMCLAUSE~as2_to_as3~100~",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ReturnLocalDefaultAction"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.communities.MatchCommunities",
                  "communitySetExpr" : {
                    "class" : "org.batfish.datamodel.routing_policy.communities.InputCommunities"
                  },
                  "communitySetMatchExpr" : {
                    "class" : "org.batfish.datamodel.routing_policy.communities.CommunitySetMatchExprReference",
                    "name" : "as2_community"
                  }
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.TraceableStatement",
                    "innerStatements" : [
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.SetLocalPreference",
                        "localPreference" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.LiteralLong",
                          "value" : 350
                        }
                      },
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                        "type" : "ReturnTrue"
                      }
                    ],
                    "traceElement" : {
                      "fragments" : [
                        {
                          "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                          "text" : "Matched "
                        },
                        {
                          "class" : "org.batfish.datamodel.TraceElement$LinkFragment",
                          "text" : "route-map as2_to_as3 clause 100",
                          "vendorStructureId" : {
                            "filename" : "configs/as3border2.cfg",
                            "structureName" : "as2_to_as3 100",
                            "structureType" : "route-map-clause"
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            ]
          },
          "as3_to_as1" : {
            "name" : "as3_to_as1",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "~RMCLAUSE~as3_to_as1~2~",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.If",
                    "comment" : "~RMCLAUSE~as3_to_as1~3~",
                    "falseStatements" : [
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                        "type" : "ReturnLocalDefaultAction"
                      }
                    ],
                    "guard" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                      "prefix" : {
                        "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                      },
                      "prefixSet" : {
                        "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                        "name" : "103"
                      }
                    },
                    "trueStatements" : [
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.TraceableStatement",
                        "innerStatements" : [
                          {
                            "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
                            "metric" : {
                              "class" : "org.batfish.datamodel.routing_policy.expr.LiteralLong",
                              "value" : 50
                            }
                          },
                          {
                            "class" : "org.batfish.datamodel.routing_policy.communities.SetCommunities",
                            "communitySetExpr" : {
                              "class" : "org.batfish.datamodel.routing_policy.communities.CommunitySetUnion",
                              "exprs" : [
                                {
                                  "class" : "org.batfish.datamodel.routing_policy.communities.InputCommunities"
                                },
                                {
                                  "class" : "org.batfish.datamodel.routing_policy.communities.LiteralCommunitySet",
                                  "communitySet" : [
                                    "3:1"
                                  ]
                                }
                              ]
                            }
                          },
                          {
                            "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                            "type" : "ReturnTrue"
                          }
                        ],
                        "traceElement" : {
                          "fragments" : [
                            {
                              "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                              "text" : "Matched "
                            },
                            {
                              "class" : "org.batfish.datamodel.TraceElement$LinkFragment",
                              "text" : "route-map as3_to_as1 clause 3",
                              "vendorStructureId" : {
                                "filename" : "configs/as3border2.cfg",
                                "structureName" : "as3_to_as1 3",
                                "structureType" : "route-map-clause"
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                  "prefix" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                  },
                  "prefixSet" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                    "name" : "102"
                  }
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.TraceableStatement",
                    "innerStatements" : [
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
                        "metric" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.LiteralLong",
                          "value" : 50
                        }
                      },
                      {
                        "class" : "org.batfish.datamodel.routing_policy.communities.SetCommunities",
                        "communitySetExpr" : {
                          "class" : "org.batfish.datamodel.routing_policy.communities.CommunitySetUnion",
                          "exprs" : [
                            {
                              "class" : "org.batfish.datamodel.routing_policy.communities.InputCommunities"
                            },
                            {
                              "class" : "org.batfish.datamodel.routing_policy.communities.LiteralCommunitySet",
                              "communitySet" : [
                                "3:1"
                              ]
                            }
                          ]
                        }
                      },
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                        "type" : "ReturnTrue"
                      }
                    ],
                    "traceElement" : {
                      "fragments" : [
                        {
                          "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                          "text" : "Matched "
                        },
                        {
                          "class" : "org.batfish.datamodel.TraceElement$LinkFragment",
                          "text" : "route-map as3_to_as1 clause 2",
                          "vendorStructureId" : {
                            "filename" : "configs/as3border2.cfg",
                            "structureName" : "as3_to_as1 2",
                            "structureType" : "route-map-clause"
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            ]
          },
          "as3_to_as2" : {
            "name" : "as3_to_as2",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "~RMCLAUSE~as3_to_as2~1~",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.If",
                    "comment" : "~RMCLAUSE~as3_to_as2~3~",
                    "falseStatements" : [
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                        "type" : "ReturnLocalDefaultAction"
                      }
                    ],
                    "guard" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                      "prefix" : {
                        "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                      },
                      "prefixSet" : {
                        "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                        "name" : "103"
                      }
                    },
                    "trueStatements" : [
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.TraceableStatement",
                        "innerStatements" : [
                          {
                            "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
                            "metric" : {
                              "class" : "org.batfish.datamodel.routing_policy.expr.LiteralLong",
                              "value" : 50
                            }
                          },
                          {
                            "class" : "org.batfish.datamodel.routing_policy.communities.SetCommunities",
                            "communitySetExpr" : {
                              "class" : "org.batfish.datamodel.routing_policy.communities.CommunitySetUnion",
                              "exprs" : [
                                {
                                  "class" : "org.batfish.datamodel.routing_policy.communities.InputCommunities"
                                },
                                {
                                  "class" : "org.batfish.datamodel.routing_policy.communities.LiteralCommunitySet",
                                  "communitySet" : [
                                    "3:2"
                                  ]
                                }
                              ]
                            }
                          },
                          {
                            "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                            "type" : "ReturnTrue"
                          }
                        ],
                        "traceElement" : {
                          "fragments" : [
                            {
                              "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                              "text" : "Matched "
                            },
                            {
                              "class" : "org.batfish.datamodel.TraceElement$LinkFragment",
                              "text" : "route-map as3_to_as2 clause 3",
                              "vendorStructureId" : {
                                "filename" : "configs/as3border2.cfg",
                                "structureName" : "as3_to_as2 3",
                                "structureType" : "route-map-clause"
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                  "prefix" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                  },
                  "prefixSet" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.NamedPrefixSet",
                    "name" : "101"
                  }
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.TraceableStatement",
                    "innerStatements" : [
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
                        "metric" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.LiteralLong",
                          "value" : 50
                        }
                      },
                      {
                        "class" : "org.batfish.datamodel.routing_policy.communities.SetCommunities",
                        "communitySetExpr" : {
                          "class" : "org.batfish.datamodel.routing_policy.communities.CommunitySetUnion",
                          "exprs" : [
                            {
                              "class" : "org.batfish.datamodel.routing_policy.communities.InputCommunities"
                            },
                            {
                              "class" : "org.batfish.datamodel.routing_policy.communities.LiteralCommunitySet",
                              "communitySet" : [
                                "3:2"
                              ]
                            }
                          ]
                        }
                      },
                      {
                        "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                        "type" : "ReturnTrue"
                      }
                    ],
                    "traceElement" : {
                      "fragments" : [
                        {
                          "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                          "text" : "Matched "
                        },
                        {
                          "class" : "org.batfish.datamodel.TraceElement$LinkFragment",
                          "text" : "route-map as3_to_as2 clause 1",
                          "vendorStructureId" : {
                            "filename" : "configs/as3border2.cfg",
                            "structureName" : "as3_to_as2 1",
                            "structureType" : "route-map-clause"
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            ]
          },
          "~BGP_COMMON_EXPORT_POLICY:default~" : {
            "name" : "~BGP_COMMON_EXPORT_POLICY:default~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                "type" : "ReturnTrue"
              }
            ]
          },
          "~BGP_PEER_EXPORT_POLICY:default:10.13.22.1~" : {
            "name" : "~BGP_PEER_EXPORT_POLICY:default:10.13.22.1~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "peer-export policy main conditional: exitAccept if true / exitReject if false",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitReject"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.Conjunction",
                  "conjuncts" : [
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                      "calledPolicyName" : "~BGP_COMMON_EXPORT_POLICY:default~"
                    },
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                      "calledPolicyName" : "as3_to_as1"
                    }
                  ]
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitAccept"
                  }
                ]
              }
            ]
          },
          "~BGP_PEER_EXPORT_POLICY:default:3.10.1.1~" : {
            "name" : "~BGP_PEER_EXPORT_POLICY:default:3.10.1.1~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "peer-export policy main conditional: exitAccept if true / exitReject if false",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitReject"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                  "calledPolicyName" : "~BGP_COMMON_EXPORT_POLICY:default~"
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitAccept"
                  }
                ]
              }
            ]
          },
          "~BGP_REDISTRIBUTION_POLICY:default~" : {
            "name" : "~BGP_REDISTRIBUTION_POLICY:default~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.SetWeight",
                "weight" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.LiteralInt",
                  "value" : 32768
                }
              },
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "Add network statement routes to BGP",
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.Conjunction",
                  "conjuncts" : [
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                      "prefix" : {
                        "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                      },
                      "prefixSet" : {
                        "class" : "org.batfish.datamodel.routing_policy.expr.ExplicitPrefixSet",
                        "prefixSpace" : [
                          "3.0.1.0/24"
                        ]
                      }
                    },
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.Not",
                      "expr" : {
                        "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                        "protocols" : [
                          "aggregate",
                          "bgp",
                          "ibgp"
                        ]
                      }
                    }
                  ]
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.SetOrigin",
                    "originType" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.LiteralOrigin",
                      "originType" : "igp"
                    }
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitAccept"
                  }
                ]
              },
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "Add network statement routes to BGP",
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.Conjunction",
                  "conjuncts" : [
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                      "prefix" : {
                        "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                      },
                      "prefixSet" : {
                        "class" : "org.batfish.datamodel.routing_policy.expr.ExplicitPrefixSet",
                        "prefixSpace" : [
                          "3.0.2.0/24"
                        ]
                      }
                    },
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.Not",
                      "expr" : {
                        "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                        "protocols" : [
                          "aggregate",
                          "bgp",
                          "ibgp"
                        ]
                      }
                    }
                  ]
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.SetOrigin",
                    "originType" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.LiteralOrigin",
                      "originType" : "igp"
                    }
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitAccept"
                  }
                ]
              },
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                "type" : "ExitReject"
              }
            ]
          },
          "~OSPF_EXPORT_POLICY:default:1~" : {
            "name" : "~OSPF_EXPORT_POLICY:default:1~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "OSPF export routes for connected",
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.Conjunction",
                  "conjuncts" : [
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                      "protocols" : [
                        "connected"
                      ]
                    },
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.Not",
                      "expr" : {
                        "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                        "comment" : "match default route",
                        "prefix" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                        },
                        "prefixSet" : {
                          "class" : "org.batfish.datamodel.routing_policy.expr.ExplicitPrefixSet",
                          "prefixSpace" : [
                            "0.0.0.0/0"
                          ]
                        }
                      }
                    }
                  ]
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.SetOspfMetricType",
                    "metricType" : "E2"
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.SetMetric",
                    "metric" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.LiteralLong",
                      "value" : 20
                    }
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitAccept"
                  }
                ]
              }
            ]
          },
          "~RESOLUTION_POLICY~" : {
            "name" : "~RESOLUTION_POLICY~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ReturnTrue"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                  "comment" : "match default route",
                  "prefix" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                  },
                  "prefixSet" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.ExplicitPrefixSet",
                    "prefixSpace" : [
                      "0.0.0.0/0"
                    ]
                  }
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ReturnFalse"
                  }
                ]
              }
            ]
          }
        },
        "vendorFamily" : {
          "cisco" : {
            "aaa" : {
              "newModel" : false
            },
            "hostname" : "as3border2",
            "lines" : {
              "aux0" : {
                "name" : "aux0",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0,
                "lineType" : "AUX"
              },
              "con0" : {
                "name" : "con0",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0,
                "lineType" : "CON"
              },
              "vty0" : {
                "name" : "vty0",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0,
                "lineType" : "VTY"
              },
              "vty1" : {
                "name" : "vty1",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0,
                "lineType" : "VTY"
              },
              "vty2" : {
                "name" : "vty2",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0,
                "lineType" : "VTY"
              },
              "vty3" : {
                "name" : "vty3",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0,
                "lineType" : "VTY"
              },
              "vty4" : {
                "name" : "vty4",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0,
                "lineType" : "VTY"
              }
            },
            "logging" : {
              "on" : true
            },
            "ntp" : {
              "servers" : {
                "18.18.18.18" : {
                  "name" : "18.18.18.18"
                },
                "23.23.23.23" : {
                  "name" : "23.23.23.23"
                }
              }
            },
            "services" : {
              "timestamps" : {
                "enabled" : true,
                "subservices" : {
                  "debug" : {
                    "enabled" : true,
                    "subservices" : {
                      "datetime" : {
                        "enabled" : true,
                        "subservices" : {
                          "msec" : {
                            "enabled" : true
                          }
                        }
                      }
                    }
                  },
                  "log" : {
                    "enabled" : true,
                    "subservices" : {
                      "datetime" : {
                        "enabled" : true,
                        "subservices" : {
                          "msec" : {
                            "enabled" : true
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "vrfs" : {
          "default" : {
            "name" : "default",
            "ospfProcesses" : {
              "1" : {
                "adminCosts" : {
                  "ospf" : 110,
                  "ospfE1" : 110,
                  "ospfE2" : 110,
                  "ospfIA" : 110,
                  "ospfIS" : 110
                },
                "areas" : {
                  "1" : {
                    "injectDefaultRoute" : true,
                    "interfaces" : [
                      "GigabitEthernet1/0",
                      "Loopback0"
                    ],
                    "metricOfDefaultRoute" : 0,
                    "name" : 1,
                    "stubType" : "NONE"
                  }
                },
                "exportPolicy" : "~OSPF_EXPORT_POLICY:default:1~",
                "processId" : "1",
                "referenceBandwidth" : 1.0E8,
                "routerId" : "3.2.2.2",
                "summaryAdminCost" : 254,
                "summaryDiscardMetric" : 0
              }
            },
            "bgpProcess" : {
              "clientToClientReflection" : true,
              "ebgpAdminCost" : 20,
              "ibgpAdminCost" : 200,
              "localAdminCost" : 200,
              "localOriginationTypeTieBreaker" : "NO_PREFERENCE",
              "networkNextHopIpTieBreaker" : "HIGHEST_NEXT_HOP_IP",
              "redistributeNextHopIpTieBreaker" : "HIGHEST_NEXT_HOP_IP",
              "redistributionPolicy" : "~BGP_REDISTRIBUTION_POLICY:default~",
              "routerId" : "3.2.2.2",
              "clusterListAsIbgpCost" : true,
              "multipathEbgp" : true,
              "multipathEquivalentAsPathMatchMode" : "EXACT_PATH",
              "multipathIbgp" : true,
              "neighbors" : {
                "3.10.1.1" : {
                  "class" : "org.batfish.datamodel.BgpActivePeerConfig",
                  "checkLocalIpOnAccept" : true,
                  "clusterId" : 50463234,
                  "defaultMetric" : 0,
                  "ebgpMultihop" : false,
                  "enforceFirstAs" : true,
                  "group" : "as3",
                  "ipv4UnicastAddressFamily" : {
                    "addressFamilyCapabilities" : {
                      "additionalPathsReceive" : true,
                      "additionalPathsSelectAll" : true,
                      "additionalPathsSend" : true,
                      "advertiseExternal" : false,
                      "advertiseInactive" : true,
                      "allowLocalAsIn" : false,
                      "allowRemoteAsOut" : "ALWAYS",
                      "sendCommunity" : true,
                      "sendExtendedCommunity" : false
                    },
                    "exportPolicy" : "~BGP_PEER_EXPORT_POLICY:default:3.10.1.1~",
                    "routeReflectorClient" : false
                  },
                  "localAs" : 3,
                  "localIp" : "3.2.2.2",
                  "peerAddress" : "3.10.1.1",
                  "remoteAsns" : "3",
                  "replaceNonLocalAsesOnExport" : false
                },
                "10.13.22.1" : {
                  "class" : "org.batfish.datamodel.BgpActivePeerConfig",
                  "checkLocalIpOnAccept" : true,
                  "clusterId" : 50463234,
                  "defaultMetric" : 0,
                  "ebgpMultihop" : false,
                  "enforceFirstAs" : true,
                  "group" : "as1",
                  "ipv4UnicastAddressFamily" : {
                    "addressFamilyCapabilities" : {
                      "additionalPathsReceive" : true,
                      "additionalPathsSelectAll" : true,
                      "additionalPathsSend" : true,
                      "advertiseExternal" : false,
                      "advertiseInactive" : true,
                      "allowLocalAsIn" : false,
                      "allowRemoteAsOut" : "ALWAYS",
                      "sendCommunity" : true,
                      "sendExtendedCommunity" : false
                    },
                    "exportPolicy" : "~BGP_PEER_EXPORT_POLICY:default:10.13.22.1~",
                    "exportPolicySources" : [
                      "as3_to_as1"
                    ],
                    "importPolicy" : "as1_to_as3",
                    "importPolicySources" : [
                      "as1_to_as3"
                    ],
                    "routeReflectorClient" : false
                  },
                  "localAs" : 3,
                  "localIp" : "10.13.22.3",
                  "peerAddress" : "10.13.22.1",
                  "remoteAsns" : "1",
                  "replaceNonLocalAsesOnExport" : false
                }
              },
              "tieBreaker" : "ARRIVAL_ORDER"
            },
            "resolutionPolicy" : "~RESOLUTION_POLICY~"
          }
        }
      },
      "as3core1" : {
        "configurationFormat" : "CISCO_IOS",
        "exportBgpFromBgpRib" : true,
        "generateBgpAggregatesFromMainRib" : false,
        "name" : "as3core1",
        "defaultCrossZoneAction" : "PERMIT",
        "defaultInboundAction" : "PERMIT",
        "deviceModel" : "CISCO_UNSPECIFIED",
        "deviceType" : "ROUTER",
        "disconnectAdminDownInterfaces" : true,
        "domainName" : "lab.local",
        "humanName" : "as3core1",
        "interfaces" : {
          "Ethernet0/0" : {
            "name" : "Ethernet0/0",
            "active" : false,
            "additionalArpIps" : {
              "class" : "org.batfish.datamodel.EmptyIpSpace"
            },
            "adminUp" : false,
            "autostate" : true,
            "bandwidth" : 1.0E7,
            "blacklisted" : false,
            "declaredNames" : [
              "Ethernet0/0"
            ],
            "hmm" : false,
            "inactiveReason" : "ADMIN_DOWN",
            "lineUp" : true,
            "mtu" : 1500,
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "speed" : 1.0E7,
            "switchport" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "PHYSICAL",
            "vrf" : "default"
          },
          "GigabitEthernet0/0" : {
            "name" : "GigabitEthernet0/0",
            "active" : true,
            "additionalArpIps" : {
              "class" : "org.batfish.datamodel.EmptyIpSpace"
            },
            "adminUp" : true,
            "allPrefixes" : [
              "3.0.2.2/24"
            ],
            "autostate" : true,
            "bandwidth" : 1.0E9,
            "blacklisted" : false,
            "declaredNames" : [
              "GigabitEthernet0/0"
            ],
            "hmm" : false,
            "lineUp" : true,
            "mtu" : 1500,
            "ospfSettings" : {
              "area" : 1,
              "cost" : 1,
              "deadInterval" : 40,
              "enabled" : true,
              "helloInterval" : 10,
              "helloMultiplier" : 0,
              "networkType" : "BROADCAST",
              "passive" : false,
              "process" : "1"
            },
            "prefix" : "3.0.2.2/24",
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "speed" : 1.0E9,
            "switchport" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "PHYSICAL",
            "vrf" : "default"
          },
          "GigabitEthernet1/0" : {
            "name" : "GigabitEthernet1/0",
            "active" : true,
            "additionalArpIps" : {
              "class" : "org.batfish.datamodel.EmptyIpSpace"
            },
            "adminUp" : true,
            "allPrefixes" : [
              "3.0.1.2/24"
            ],
            "autostate" : true,
            "bandwidth" : 1.0E9,
            "blacklisted" : false,
            "declaredNames" : [
              "GigabitEthernet1/0"
            ],
            "hmm" : false,
            "lineUp" : true,
            "mtu" : 1500,
            "ospfSettings" : {
              "area" : 1,
              "cost" : 1,
              "deadInterval" : 40,
              "enabled" : true,
              "helloInterval" : 10,
              "helloMultiplier" : 0,
              "networkType" : "BROADCAST",
              "passive" : false,
              "process" : "1"
            },
            "prefix" : "3.0.1.2/24",
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "speed" : 1.0E9,
            "switchport" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "PHYSICAL",
            "vrf" : "default"
          },
          "GigabitEthernet2/0" : {
            "name" : "GigabitEthernet2/0",
            "active" : true,
            "additionalArpIps" : {
              "class" : "org.batfish.datamodel.EmptyIpSpace"
            },
            "adminUp" : true,
            "allPrefixes" : [
              "90.90.90.1/24"
            ],
            "autostate" : true,
            "bandwidth" : 1.0E9,
            "blacklisted" : false,
            "declaredNames" : [
              "GigabitEthernet2/0"
            ],
            "hmm" : false,
            "lineUp" : true,
            "mtu" : 1500,
            "prefix" : "90.90.90.1/24",
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "speed" : 1.0E9,
            "switchport" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "PHYSICAL",
            "vrf" : "default"
          },
          "GigabitEthernet3/0" : {
            "name" : "GigabitEthernet3/0",
            "active" : true,
            "additionalArpIps" : {
              "class" : "org.batfish.datamodel.EmptyIpSpace"
            },
            "adminUp" : true,
            "allPrefixes" : [
              "90.90.90.2/24"
            ],
            "autostate" : true,
            "bandwidth" : 1.0E9,
            "blacklisted" : false,
            "declaredNames" : [
              "GigabitEthernet3/0"
            ],
            "hmm" : false,
            "lineUp" : true,
            "mtu" : 1500,
            "prefix" : "90.90.90.2/24",
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "speed" : 1.0E9,
            "switchport" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "PHYSICAL",
            "vrf" : "default"
          },
          "Loopback0" : {
            "name" : "Loopback0",
            "active" : true,
            "additionalArpIps" : {
              "class" : "org.batfish.datamodel.EmptyIpSpace"
            },
            "adminUp" : true,
            "allPrefixes" : [
              "3.10.1.1/32"
            ],
            "autostate" : true,
            "bandwidth" : 8.0E9,
            "blacklisted" : false,
            "declaredNames" : [
              "Loopback0"
            ],
            "hmm" : false,
            "lineUp" : true,
            "mtu" : 1500,
            "ospfSettings" : {
              "area" : 1,
              "cost" : 1,
              "deadInterval" : 40,
              "enabled" : true,
              "helloInterval" : 10,
              "helloMultiplier" : 0,
              "networkType" : "BROADCAST",
              "passive" : false,
              "process" : "1"
            },
            "prefix" : "3.10.1.1/32",
            "proxyArp" : true,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "switchport" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "LOOPBACK",
            "vrf" : "default"
          }
        },
        "loggingServers" : [
          "1.1.1.1",
          "2.2.2.2"
        ],
        "mainRibEnforceResolvability" : false,
        "routingPolicies" : {
          "~BGP_COMMON_EXPORT_POLICY:default~" : {
            "name" : "~BGP_COMMON_EXPORT_POLICY:default~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                "type" : "ReturnTrue"
              }
            ]
          },
          "~BGP_PEER_EXPORT_POLICY:default:3.1.1.1~" : {
            "name" : "~BGP_PEER_EXPORT_POLICY:default:3.1.1.1~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "peer-export policy main conditional: exitAccept if true / exitReject if false",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitReject"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                  "calledPolicyName" : "~BGP_COMMON_EXPORT_POLICY:default~"
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitAccept"
                  }
                ]
              }
            ]
          },
          "~BGP_PEER_EXPORT_POLICY:default:3.2.2.2~" : {
            "name" : "~BGP_PEER_EXPORT_POLICY:default:3.2.2.2~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "peer-export policy main conditional: exitAccept if true / exitReject if false",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitReject"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.CallExpr",
                  "calledPolicyName" : "~BGP_COMMON_EXPORT_POLICY:default~"
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitAccept"
                  }
                ]
              }
            ]
          },
          "~BGP_REDISTRIBUTION_POLICY:default~" : {
            "name" : "~BGP_REDISTRIBUTION_POLICY:default~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.SetWeight",
                "weight" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.LiteralInt",
                  "value" : 32768
                }
              },
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "Add network statement routes to BGP",
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.Conjunction",
                  "conjuncts" : [
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                      "prefix" : {
                        "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                      },
                      "prefixSet" : {
                        "class" : "org.batfish.datamodel.routing_policy.expr.ExplicitPrefixSet",
                        "prefixSpace" : [
                          "3.0.1.0/24"
                        ]
                      }
                    },
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.Not",
                      "expr" : {
                        "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                        "protocols" : [
                          "aggregate",
                          "bgp",
                          "ibgp"
                        ]
                      }
                    }
                  ]
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.SetOrigin",
                    "originType" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.LiteralOrigin",
                      "originType" : "igp"
                    }
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitAccept"
                  }
                ]
              },
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "comment" : "Add network statement routes to BGP",
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.Conjunction",
                  "conjuncts" : [
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                      "prefix" : {
                        "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                      },
                      "prefixSet" : {
                        "class" : "org.batfish.datamodel.routing_policy.expr.ExplicitPrefixSet",
                        "prefixSpace" : [
                          "3.0.2.0/24"
                        ]
                      }
                    },
                    {
                      "class" : "org.batfish.datamodel.routing_policy.expr.Not",
                      "expr" : {
                        "class" : "org.batfish.datamodel.routing_policy.expr.MatchProtocol",
                        "protocols" : [
                          "aggregate",
                          "bgp",
                          "ibgp"
                        ]
                      }
                    }
                  ]
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.SetOrigin",
                    "originType" : {
                      "class" : "org.batfish.datamodel.routing_policy.expr.LiteralOrigin",
                      "originType" : "igp"
                    }
                  },
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ExitAccept"
                  }
                ]
              },
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                "type" : "ExitReject"
              }
            ]
          },
          "~OSPF_EXPORT_POLICY:default:1~" : {
            "name" : "~OSPF_EXPORT_POLICY:default:1~"
          },
          "~RESOLUTION_POLICY~" : {
            "name" : "~RESOLUTION_POLICY~",
            "statements" : [
              {
                "class" : "org.batfish.datamodel.routing_policy.statement.If",
                "falseStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ReturnTrue"
                  }
                ],
                "guard" : {
                  "class" : "org.batfish.datamodel.routing_policy.expr.MatchPrefixSet",
                  "comment" : "match default route",
                  "prefix" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.DestinationNetwork"
                  },
                  "prefixSet" : {
                    "class" : "org.batfish.datamodel.routing_policy.expr.ExplicitPrefixSet",
                    "prefixSpace" : [
                      "0.0.0.0/0"
                    ]
                  }
                },
                "trueStatements" : [
                  {
                    "class" : "org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement",
                    "type" : "ReturnFalse"
                  }
                ]
              }
            ]
          }
        },
        "vendorFamily" : {
          "cisco" : {
            "aaa" : {
              "newModel" : false
            },
            "hostname" : "as3core1",
            "lines" : {
              "aux0" : {
                "name" : "aux0",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0,
                "lineType" : "AUX"
              },
              "con0" : {
                "name" : "con0",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0,
                "lineType" : "CON"
              },
              "vty0" : {
                "name" : "vty0",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0,
                "lineType" : "VTY"
              },
              "vty1" : {
                "name" : "vty1",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0,
                "lineType" : "VTY"
              },
              "vty2" : {
                "name" : "vty2",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0,
                "lineType" : "VTY"
              },
              "vty3" : {
                "name" : "vty3",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0,
                "lineType" : "VTY"
              },
              "vty4" : {
                "name" : "vty4",
                "execTimeoutMinutes" : 0,
                "execTimeoutSeconds" : 0,
                "lineType" : "VTY"
              }
            },
            "logging" : {
              "hosts" : {
                "1.1.1.1" : {
                  "name" : "1.1.1.1"
                },
                "2.2.2.2" : {
                  "name" : "2.2.2.2"
                }
              },
              "on" : true
            },
            "services" : {
              "timestamps" : {
                "enabled" : true,
                "subservices" : {
                  "debug" : {
                    "enabled" : true,
                    "subservices" : {
                      "datetime" : {
                        "enabled" : true,
                        "subservices" : {
                          "msec" : {
                            "enabled" : true
                          }
                        }
                      }
                    }
                  },
                  "log" : {
                    "enabled" : true,
                    "subservices" : {
                      "datetime" : {
                        "enabled" : true,
                        "subservices" : {
                          "msec" : {
                            "enabled" : true
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "vrfs" : {
          "default" : {
            "name" : "default",
            "ospfProcesses" : {
              "1" : {
                "adminCosts" : {
                  "ospf" : 110,
                  "ospfE1" : 110,
                  "ospfE2" : 110,
                  "ospfIA" : 110,
                  "ospfIS" : 110
                },
                "areas" : {
                  "1" : {
                    "injectDefaultRoute" : true,
                    "interfaces" : [
                      "GigabitEthernet0/0",
                      "GigabitEthernet1/0",
                      "Loopback0"
                    ],
                    "metricOfDefaultRoute" : 0,
                    "name" : 1,
                    "stubType" : "NONE"
                  }
                },
                "exportPolicy" : "~OSPF_EXPORT_POLICY:default:1~",
                "processId" : "1",
                "referenceBandwidth" : 1.0E8,
                "routerId" : "3.10.1.1",
                "summaryAdminCost" : 254,
                "summaryDiscardMetric" : 0
              }
            },
            "bgpProcess" : {
              "clientToClientReflection" : true,
              "ebgpAdminCost" : 20,
              "ibgpAdminCost" : 200,
              "localAdminCost" : 200,
              "localOriginationTypeTieBreaker" : "NO_PREFERENCE",
              "networkNextHopIpTieBreaker" : "HIGHEST_NEXT_HOP_IP",
              "redistributeNextHopIpTieBreaker" : "HIGHEST_NEXT_HOP_IP",
              "redistributionPolicy" : "~BGP_REDISTRIBUTION_POLICY:default~",
              "routerId" : "3.10.1.1",
              "clusterListAsIbgpCost" : true,
              "multipathEbgp" : true,
              "multipathEquivalentAsPathMatchMode" : "EXACT_PATH",
              "multipathIbgp" : true,
              "neighbors" : {
                "3.1.1.1" : {
                  "class" : "org.batfish.datamodel.BgpActivePeerConfig",
                  "checkLocalIpOnAccept" : true,
                  "clusterId" : 50987265,
                  "defaultMetric" : 0,
                  "ebgpMultihop" : false,
                  "enforceFirstAs" : true,
                  "group" : "as3",
                  "ipv4UnicastAddressFamily" : {
                    "addressFamilyCapabilities" : {
                      "additionalPathsReceive" : true,
                      "additionalPathsSelectAll" : true,
                      "additionalPathsSend" : true,
                      "advertiseExternal" : false,
                      "advertiseInactive" : true,
                      "allowLocalAsIn" : false,
                      "allowRemoteAsOut" : "ALWAYS",
                      "sendCommunity" : true,
                      "sendExtendedCommunity" : false
                    },
                    "exportPolicy" : "~BGP_PEER_EXPORT_POLICY:default:3.1.1.1~",
                    "routeReflectorClient" : true
                  },
                  "localAs" : 3,
                  "localIp" : "3.10.1.1",
                  "peerAddress" : "3.1.1.1",
                  "remoteAsns" : "3",
                  "replaceNonLocalAsesOnExport" : false
                },
                "3.2.2.2" : {
                  "class" : "org.batfish.datamodel.BgpActivePeerConfig",
                  "checkLocalIpOnAccept" : true,
                  "clusterId" : 50987265,
                  "defaultMetric" : 0,
                  "ebgpMultihop" : false,
                  "enforceFirstAs" : true,
                  "group" : "as3",
                  "ipv4UnicastAddressFamily" : {
                    "addressFamilyCapabilities" : {
                      "additionalPathsReceive" : true,
                      "additionalPathsSelectAll" : true,
                      "additionalPathsSend" : true,
                      "advertiseExternal" : false,
                      "advertiseInactive" : true,
                      "allowLocalAsIn" : false,
                      "allowRemoteAsOut" : "ALWAYS",
                      "sendCommunity" : true,
                      "sendExtendedCommunity" : false
                    },
                    "exportPolicy" : "~BGP_PEER_EXPORT_POLICY:default:3.2.2.2~",
                    "routeReflectorClient" : true
                  },
                  "localAs" : 3,
                  "localIp" : "3.10.1.1",
                  "peerAddress" : "3.2.2.2",
                  "remoteAsns" : "3",
                  "replaceNonLocalAsesOnExport" : false
                }
              },
              "tieBreaker" : "ARRIVAL_ORDER"
            },
            "resolutionPolicy" : "~RESOLUTION_POLICY~"
          }
        }
      },
      "host1" : {
        "configurationFormat" : "HOST",
        "exportBgpFromBgpRib" : false,
        "generateBgpAggregatesFromMainRib" : false,
        "name" : "host1",
        "defaultCrossZoneAction" : "PERMIT",
        "defaultInboundAction" : "PERMIT",
        "deviceType" : "HOST",
        "disconnectAdminDownInterfaces" : true,
        "interfaces" : {
          "eth0" : {
            "name" : "eth0",
            "active" : true,
            "additionalArpIps" : {
              "class" : "org.batfish.datamodel.EmptyIpSpace"
            },
            "adminUp" : true,
            "allPrefixes" : [
              "2.128.0.101/24"
            ],
            "autostate" : true,
            "bandwidth" : 1.0E9,
            "blacklisted" : false,
            "declaredNames" : [
              "eth0"
            ],
            "hmm" : false,
            "incomingFilter" : "filter::INPUT",
            "lineUp" : true,
            "mtu" : 1500,
            "outgoingFilter" : "filter::OUTPUT",
            "prefix" : "2.128.0.101/24",
            "proxyArp" : false,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "switchport" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "PHYSICAL",
            "vrf" : "default"
          }
        },
        "ipAccessLists" : {
          "filter::FORWARD" : {
            "lines" : [
              {
                "class" : "org.batfish.datamodel.ExprAclLine",
                "action" : "PERMIT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.TrueExpr"
                },
                "name" : "default",
                "traceElement" : {
                  "fragments" : [
                    {
                      "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                      "text" : "Matched line default"
                    }
                  ]
                }
              }
            ],
            "name" : "filter::FORWARD"
          },
          "filter::INPUT" : {
            "lines" : [
              {
                "class" : "org.batfish.datamodel.ExprAclLine",
                "action" : "PERMIT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstPorts" : [
                      "53-53"
                    ],
                    "ipProtocols" : [
                      "UDP"
                    ],
                    "negate" : false
                  }
                },
                "name" : "-p udp --dport 53 -j ACCEPT",
                "traceElement" : {
                  "fragments" : [
                    {
                      "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                      "text" : "Matched line -p udp --dport 53 -j ACCEPT"
                    }
                  ]
                }
              },
              {
                "class" : "org.batfish.datamodel.ExprAclLine",
                "action" : "PERMIT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstPorts" : [
                      "22-22"
                    ],
                    "ipProtocols" : [
                      "TCP"
                    ],
                    "negate" : false
                  }
                },
                "name" : "-p tcp --dport 22 -j ACCEPT",
                "traceElement" : {
                  "fragments" : [
                    {
                      "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                      "text" : "Matched line -p tcp --dport 22 -j ACCEPT"
                    }
                  ]
                }
              },
              {
                "class" : "org.batfish.datamodel.ExprAclLine",
                "action" : "DENY",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.TrueExpr"
                },
                "name" : "default",
                "traceElement" : {
                  "fragments" : [
                    {
                      "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                      "text" : "Matched line default"
                    }
                  ]
                }
              }
            ],
            "name" : "filter::INPUT"
          },
          "filter::OUTPUT" : {
            "lines" : [
              {
                "class" : "org.batfish.datamodel.ExprAclLine",
                "action" : "PERMIT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.TrueExpr"
                },
                "name" : "default",
                "traceElement" : {
                  "fragments" : [
                    {
                      "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                      "text" : "Matched line default"
                    }
                  ]
                }
              }
            ],
            "name" : "filter::OUTPUT"
          },
          "mangle::FORWARD" : {
            "lines" : [
              {
                "class" : "org.batfish.datamodel.ExprAclLine",
                "action" : "PERMIT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.TrueExpr"
                },
                "name" : "default",
                "traceElement" : {
                  "fragments" : [
                    {
                      "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                      "text" : "Matched line default"
                    }
                  ]
                }
              }
            ],
            "name" : "mangle::FORWARD"
          },
          "mangle::INPUT" : {
            "lines" : [
              {
                "class" : "org.batfish.datamodel.ExprAclLine",
                "action" : "PERMIT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.TrueExpr"
                },
                "name" : "default",
                "traceElement" : {
                  "fragments" : [
                    {
                      "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                      "text" : "Matched line default"
                    }
                  ]
                }
              }
            ],
            "name" : "mangle::INPUT"
          },
          "mangle::OUTPUT" : {
            "lines" : [
              {
                "class" : "org.batfish.datamodel.ExprAclLine",
                "action" : "PERMIT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.TrueExpr"
                },
                "name" : "default",
                "traceElement" : {
                  "fragments" : [
                    {
                      "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                      "text" : "Matched line default"
                    }
                  ]
                }
              }
            ],
            "name" : "mangle::OUTPUT"
          },
          "mangle::POSTROUTING" : {
            "lines" : [
              {
                "class" : "org.batfish.datamodel.ExprAclLine",
                "action" : "PERMIT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.TrueExpr"
                },
                "name" : "default",
                "traceElement" : {
                  "fragments" : [
                    {
                      "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                      "text" : "Matched line default"
                    }
                  ]
                }
              }
            ],
            "name" : "mangle::POSTROUTING"
          },
          "mangle::PREROUTING" : {
            "lines" : [
              {
                "class" : "org.batfish.datamodel.ExprAclLine",
                "action" : "PERMIT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.TrueExpr"
                },
                "name" : "default",
                "traceElement" : {
                  "fragments" : [
                    {
                      "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                      "text" : "Matched line default"
                    }
                  ]
                }
              }
            ],
            "name" : "mangle::PREROUTING"
          },
          "nat::OUTPUT" : {
            "lines" : [
              {
                "class" : "org.batfish.datamodel.ExprAclLine",
                "action" : "PERMIT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.TrueExpr"
                },
                "name" : "default",
                "traceElement" : {
                  "fragments" : [
                    {
                      "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                      "text" : "Matched line default"
                    }
                  ]
                }
              }
            ],
            "name" : "nat::OUTPUT"
          },
          "nat::POSTROUTING" : {
            "lines" : [
              {
                "class" : "org.batfish.datamodel.ExprAclLine",
                "action" : "PERMIT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.TrueExpr"
                },
                "name" : "default",
                "traceElement" : {
                  "fragments" : [
                    {
                      "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                      "text" : "Matched line default"
                    }
                  ]
                }
              }
            ],
            "name" : "nat::POSTROUTING"
          },
          "nat::PREROUTING" : {
            "lines" : [
              {
                "class" : "org.batfish.datamodel.ExprAclLine",
                "action" : "PERMIT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.TrueExpr"
                },
                "name" : "default",
                "traceElement" : {
                  "fragments" : [
                    {
                      "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                      "text" : "Matched line default"
                    }
                  ]
                }
              }
            ],
            "name" : "nat::PREROUTING"
          }
        },
        "mainRibEnforceResolvability" : false,
        "vendorFamily" : { },
        "vrfs" : {
          "default" : {
            "name" : "default",
            "staticRoutes" : [
              {
                "class" : "org.batfish.datamodel.StaticRoute",
                "administrativeCost" : 1,
                "metric" : 0,
                "network" : "0.0.0.0/0",
                "nextHopInterface" : "eth0",
                "nextHopIp" : "2.128.0.1",
                "tag" : -1
              }
            ]
          }
        }
      },
      "host2" : {
        "configurationFormat" : "HOST",
        "exportBgpFromBgpRib" : false,
        "generateBgpAggregatesFromMainRib" : false,
        "name" : "host2",
        "defaultCrossZoneAction" : "PERMIT",
        "defaultInboundAction" : "PERMIT",
        "deviceType" : "HOST",
        "disconnectAdminDownInterfaces" : true,
        "interfaces" : {
          "eth0" : {
            "name" : "eth0",
            "active" : true,
            "additionalArpIps" : {
              "class" : "org.batfish.datamodel.EmptyIpSpace"
            },
            "adminUp" : true,
            "allPrefixes" : [
              "2.128.1.101/24"
            ],
            "autostate" : true,
            "bandwidth" : 1.0E9,
            "blacklisted" : false,
            "declaredNames" : [
              "eth0"
            ],
            "hmm" : false,
            "incomingFilter" : "filter::INPUT",
            "lineUp" : true,
            "mtu" : 1500,
            "outgoingFilter" : "filter::OUTPUT",
            "prefix" : "2.128.1.101/24",
            "proxyArp" : false,
            "ripEnabled" : false,
            "ripPassive" : false,
            "spanningTreePortfast" : false,
            "switchport" : false,
            "switchportMode" : "NONE",
            "switchportTrunkEncapsulation" : "DOT1Q",
            "type" : "PHYSICAL",
            "vrf" : "default"
          }
        },
        "ipAccessLists" : {
          "filter::FORWARD" : {
            "lines" : [
              {
                "class" : "org.batfish.datamodel.ExprAclLine",
                "action" : "PERMIT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.TrueExpr"
                },
                "name" : "default",
                "traceElement" : {
                  "fragments" : [
                    {
                      "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                      "text" : "Matched line default"
                    }
                  ]
                }
              }
            ],
            "name" : "filter::FORWARD"
          },
          "filter::INPUT" : {
            "lines" : [
              {
                "class" : "org.batfish.datamodel.ExprAclLine",
                "action" : "PERMIT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstPorts" : [
                      "22-22"
                    ],
                    "ipProtocols" : [
                      "TCP"
                    ],
                    "negate" : false
                  }
                },
                "name" : "-p tcp --dport 22 -j ACCEPT",
                "traceElement" : {
                  "fragments" : [
                    {
                      "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                      "text" : "Matched line -p tcp --dport 22 -j ACCEPT"
                    }
                  ]
                }
              },
              {
                "class" : "org.batfish.datamodel.ExprAclLine",
                "action" : "DENY",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.TrueExpr"
                },
                "name" : "default",
                "traceElement" : {
                  "fragments" : [
                    {
                      "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                      "text" : "Matched line default"
                    }
                  ]
                }
              }
            ],
            "name" : "filter::INPUT"
          },
          "filter::OUTPUT" : {
            "lines" : [
              {
                "class" : "org.batfish.datamodel.ExprAclLine",
                "action" : "DENY",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.MatchHeaderSpace",
                  "headerSpace" : {
                    "dstIps" : {
                      "class" : "org.batfish.datamodel.IpWildcardIpSpace",
                      "ipWildcard" : "2.128.0.101"
                    },
                    "negate" : false
                  }
                },
                "name" : "-d 2.128.0.101 -j DROP",
                "traceElement" : {
                  "fragments" : [
                    {
                      "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                      "text" : "Matched line -d 2.128.0.101 -j DROP"
                    }
                  ]
                }
              },
              {
                "class" : "org.batfish.datamodel.ExprAclLine",
                "action" : "PERMIT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.TrueExpr"
                },
                "name" : "default",
                "traceElement" : {
                  "fragments" : [
                    {
                      "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                      "text" : "Matched line default"
                    }
                  ]
                }
              }
            ],
            "name" : "filter::OUTPUT"
          },
          "mangle::FORWARD" : {
            "lines" : [
              {
                "class" : "org.batfish.datamodel.ExprAclLine",
                "action" : "PERMIT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.TrueExpr"
                },
                "name" : "default",
                "traceElement" : {
                  "fragments" : [
                    {
                      "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                      "text" : "Matched line default"
                    }
                  ]
                }
              }
            ],
            "name" : "mangle::FORWARD"
          },
          "mangle::INPUT" : {
            "lines" : [
              {
                "class" : "org.batfish.datamodel.ExprAclLine",
                "action" : "PERMIT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.TrueExpr"
                },
                "name" : "default",
                "traceElement" : {
                  "fragments" : [
                    {
                      "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                      "text" : "Matched line default"
                    }
                  ]
                }
              }
            ],
            "name" : "mangle::INPUT"
          },
          "mangle::OUTPUT" : {
            "lines" : [
              {
                "class" : "org.batfish.datamodel.ExprAclLine",
                "action" : "PERMIT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.TrueExpr"
                },
                "name" : "default",
                "traceElement" : {
                  "fragments" : [
                    {
                      "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                      "text" : "Matched line default"
                    }
                  ]
                }
              }
            ],
            "name" : "mangle::OUTPUT"
          },
          "mangle::POSTROUTING" : {
            "lines" : [
              {
                "class" : "org.batfish.datamodel.ExprAclLine",
                "action" : "PERMIT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.TrueExpr"
                },
                "name" : "default",
                "traceElement" : {
                  "fragments" : [
                    {
                      "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                      "text" : "Matched line default"
                    }
                  ]
                }
              }
            ],
            "name" : "mangle::POSTROUTING"
          },
          "mangle::PREROUTING" : {
            "lines" : [
              {
                "class" : "org.batfish.datamodel.ExprAclLine",
                "action" : "PERMIT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.TrueExpr"
                },
                "name" : "default",
                "traceElement" : {
                  "fragments" : [
                    {
                      "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                      "text" : "Matched line default"
                    }
                  ]
                }
              }
            ],
            "name" : "mangle::PREROUTING"
          },
          "nat::OUTPUT" : {
            "lines" : [
              {
                "class" : "org.batfish.datamodel.ExprAclLine",
                "action" : "PERMIT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.TrueExpr"
                },
                "name" : "default",
                "traceElement" : {
                  "fragments" : [
                    {
                      "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                      "text" : "Matched line default"
                    }
                  ]
                }
              }
            ],
            "name" : "nat::OUTPUT"
          },
          "nat::POSTROUTING" : {
            "lines" : [
              {
                "class" : "org.batfish.datamodel.ExprAclLine",
                "action" : "PERMIT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.TrueExpr"
                },
                "name" : "default",
                "traceElement" : {
                  "fragments" : [
                    {
                      "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                      "text" : "Matched line default"
                    }
                  ]
                }
              }
            ],
            "name" : "nat::POSTROUTING"
          },
          "nat::PREROUTING" : {
            "lines" : [
              {
                "class" : "org.batfish.datamodel.ExprAclLine",
                "action" : "PERMIT",
                "matchCondition" : {
                  "class" : "org.batfish.datamodel.acl.TrueExpr"
                },
                "name" : "default",
                "traceElement" : {
                  "fragments" : [
                    {
                      "class" : "org.batfish.datamodel.TraceElement$TextFragment",
                      "text" : "Matched line default"
                    }
                  ]
                }
              }
            ],
            "name" : "nat::PREROUTING"
          }
        },
        "mainRibEnforceResolvability" : false,
        "vendorFamily" : { },
        "vrfs" : {
          "default" : {
            "name" : "default",
            "staticRoutes" : [
              {
                "class" : "org.batfish.datamodel.StaticRoute",
                "administrativeCost" : 1,
                "metric" : 0,
                "network" : "0.0.0.0/0",
                "nextHopInterface" : "eth0",
                "nextHopIp" : "2.128.1.1",
                "tag" : -1
              }
            ]
          }
        }
      }
    }
  }
]