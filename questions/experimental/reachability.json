{
  "class": "org.batfish.question.jsonpath.JsonPathQuestionPlugin$JsonPathQuestion",
  "innerQuestion": {
    "actions": "${actions}",
    "class": "org.batfish.question.specifiers.SpecifiersReachabilityQuestion",
    "forbiddenTransitNodesNodeSpecifierInput" : "${avoidNodes}",
    "destinationIpSpaceSpecifierInput": "${dstIps}",
    "finalNodesSpecifierInput": "${finalNodes}",
    "requiredTransitNodesNodeSpecifierInput": "${transitNodes}",
    "sourceLocationSpecifierInput": "${start}",
    "sourceIpSpaceSpecifierInput": "${srcIps}"
  },
  "instance": {
    "description": "Find flows that match the ingress and egress location, src and dest ip address and disposition constraints, as described by the input specifiers.",
    "instanceName": "reachability",
    "tags": [
      "dataPlane",
      "reachability"
    ],
    "variables": {
      "actions": {
        "description": "Only return flows for which the disposition is from this set",
        "minElements": 1,
        "optional": true,
        "type": "string",
        "value": [
          "accept"
        ]
      },
      "avoidNodes": {
        "description": "Flexible specification of locations that should not be transitted",
        "optional": true,
        "type": "string"
      },
      "dstIps": {
        "description": "Flexible specification of destination Ip -- filled based on location if unspecified",
        "optional": true,
        "type": "string"
      },
      "finalNodes": {
        "description": "Input to specify the set of nodes at which traces should end",
        "optional": true,
        "type": "string"
      },
      "start": {
        "description": "Flexible specification of start locations",
        "optional": true,
        "type": "string"
      },
      "srcIps": {
        "description": "Flexible specification of source Ip -- filled based on location if unspecified",
        "optional": true,
        "type": "string"
      },
      "transitNodes": {
        "description": "Flexible specification of transit locations",
        "optional": true,
        "type": "string"
      }
    }
  },
  "paths": [
    {
      "path": "$.traces.*",
      "suffix": true,
      "displayHints": {
        "extractions": {
          "flow": {
            "schema": "Flow",
            "method": {
              "use": "suffixofsuffix",
              "filter": "$.flow"
            }
          },
          "flowTraces": {
            "schema": "List<FlowTrace>",
            "method": {
              "use": "suffixofsuffix",
              "filter": "$.paths.BASE[*]"
            }
          }
        },
        "textDesc": "Path of ${flow} is ${flowTraces}"
      }
    }
  ]
}
