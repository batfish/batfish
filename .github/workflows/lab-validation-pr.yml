name: Lab Validation for PR

on:
  workflow_dispatch:
    inputs:
      pr_number:
        description: "PR number to test (e.g., 1234)"
        required: true
        type: string
      lab_filter:
        description: "Optional lab filter pattern (e.g., 'eos_*', 'aws_*'). Leave empty for all labs."
        required: false
        type: string

jobs:
  # Build Batfish JAR from the PR branch
  build-batfish:
    runs-on: ubuntu-latest
    outputs:
      pr_ref: ${{ steps.get_pr.outputs.pr_ref }}
      pr_title: ${{ steps.get_pr.outputs.pr_title }}
    steps:
    - name: Get PR information
      id: get_pr
      run: |
        PR_DATA=$(gh api repos/batfish/batfish/pulls/${{ inputs.pr_number }})
        PR_REF=$(echo "$PR_DATA" | jq -r '.head.ref')
        PR_TITLE=$(echo "$PR_DATA" | jq -r '.title')
        echo "pr_ref=$PR_REF" >> $GITHUB_OUTPUT
        echo "pr_title=$PR_TITLE" >> $GITHUB_OUTPUT
        echo "Testing PR #${{ inputs.pr_number }}: $PR_TITLE"
        echo "Branch: $PR_REF"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Checkout PR branch
      uses: actions/checkout@v4
      with:
        ref: ${{ steps.get_pr.outputs.pr_ref }}
    
    - name: Set up Java 17
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
    
    - name: Bazelisk cache
      uses: actions/cache@v4
      with:
        path: "~/.cache/bazelisk"
        key: ${{runner.os}}-bazelisk-${{ hashFiles('.bazelversion') }}
    
    - name: Bazel cache
      uses: actions/cache@v4
      with:
        path: "~/.cache/bazel"
        key: ${{runner.os}}-bazel-17-${{ hashFiles('.bazelversion', 'WORKSPACE', 'maven_install.json') }}-${{ github.run_id }}
        restore-keys: |
          ${{runner.os}}-bazel-17-${{ hashFiles('.bazelversion', 'WORKSPACE', 'maven_install.json') }}-

    - name: Build Batfish JAR and questions
      run: |
        bazel build //projects/allinone:allinone_main_deploy.jar
        cp bazel-bin/projects/allinone/allinone_main_deploy.jar allinone.jar
        # Create questions archive following pybatfish pattern
        tar -czf questions.tgz questions/

    - name: Upload Batfish artifacts
      uses: actions/upload-artifact@v4
      with:
        name: batfish-pr-artifacts
        path: |
          allinone.jar
          questions.tgz
        retention-days: 1

  # Run lab validation using the built JAR
  lab-validation:
    runs-on: ubuntu-latest
    needs: build-batfish
    steps:
    - name: Add PR comment - Starting validation
      run: |
        gh api repos/batfish/batfish/issues/${{ inputs.pr_number }}/comments \
          --method POST \
          --field body="üß™ **Lab Validation Started**

        Running lab validation for PR #${{ inputs.pr_number }}: ${{ needs.build-batfish.outputs.pr_title }}
        Branch: \`${{ needs.build-batfish.outputs.pr_ref }}\`
        Filter: ${{ inputs.lab_filter || 'All labs' }}

        [View workflow run](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Run lab validation
      uses: batfish/lab-validation/.github/workflows/reusable-lab-validation.yml@main
      with:
        batfish_ref: ${{ needs.build-batfish.outputs.pr_ref }}
        lab_filter: ${{ inputs.lab_filter }}

  # Post results as PR comment
  post-results:
    runs-on: ubuntu-latest
    needs: [build-batfish, lab-validation]
    if: always()  # Run even if lab validation fails
    steps:
    - name: Add PR comment - Results
      run: |
        if [ "${{ needs.lab-validation.result }}" == "success" ]; then
          STATUS="‚úÖ **Lab Validation Passed**"
          EMOJI="üéâ"
          COLOR="#28a745"
        else
          STATUS="‚ùå **Lab Validation Failed**"
          EMOJI="‚ö†Ô∏è"
          COLOR="#d73a49"
        fi

        gh api repos/batfish/batfish/issues/${{ inputs.pr_number }}/comments \
          --method POST \
          --field body="$EMOJI $STATUS

        PR #${{ inputs.pr_number }}: ${{ needs.build-batfish.outputs.pr_title }}
        Branch: \`${{ needs.build-batfish.outputs.pr_ref }}\`
        Filter: ${{ inputs.lab_filter || 'All labs' }}

        [View detailed results](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})

        <details>
        <summary>How to interpret results</summary>

        - ‚úÖ **Success**: All lab tests passed against your changes
        - ‚ùå **Failure**: Some lab tests failed - check the workflow logs for details
        - Expected failures are tracked in sickbay files and should be listed in the logs

        If you see unexpected failures, your changes may have introduced a regression in Batfish's network modeling.
        </details>"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}