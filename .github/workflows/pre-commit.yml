name: Pre-commit
on:
  pull_request:
  push:
    branches:
      - master
jobs:
  get_date:
    name: ":clock: Get Date"
    runs-on: ubuntu-latest
    steps:
      - name: Get current date
        id: date
        run: echo "::set-output name=ymd::$(date +'%Y-%m-%d')"
    outputs:
      ymd: ${{ steps.date.outputs.ymd }}
  format:
    runs-on: ubuntu-latest
    needs:
      - get_date
    steps:
      - uses: actions/checkout@v3
      - name: Maven cache
        uses: actions/cache@v3
        with:
          path: "~/.m2/repository"
          key: ${{runner.os}}-maven-${{ hashFiles('**/pom.xml') }}-format-${{ needs.get_date.outputs.ymd }}
          restore-keys: |
            ${{runner.os}}-maven-${{ hashFiles('**/pom.xml') }}-format-
            ${{runner.os}}-maven-${{ hashFiles('**/pom.xml') }}-
            ${{runner.os}}-maven-
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'
      - name: Java Formatting
        run: tools/fix_java_format.sh --check
  json_template:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9
      - name: Install dependencies
        run: python -m pip install pytest
      - name: JSON Templates
        run: cd tests && pytest
  junit:
    runs-on: ubuntu-latest
    needs:
      - format
      - json_template
      - get_date
    steps:
      - uses: actions/checkout@v3
      - name: Maven cache
        uses: actions/cache@v3
        with:
          path: "~/.m2/repository"
          key: ${{runner.os}}-maven-${{ hashFiles('**/pom.xml') }}-junit-${{ needs.get_date.outputs.ymd }}
          restore-keys: |
            ${{runner.os}}-maven-${{ hashFiles('**/pom.xml') }}-junit-
            ${{runner.os}}-maven-${{ hashFiles('**/pom.xml') }}-
            ${{runner.os}}-maven-
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'
      - name: Maven Junit Tests and Coverage
        run: |
          mvn -B -f projects/pom.xml test -DskipTests=false -Djacoco.skip=false
          mkdir -p workspace
          rsync -zarv --prune-empty-dirs --include '*/' --include 'jacoco*.exec' --exclude '*' projects/ workspace/
      - name: Save Jacoco exec
        uses: actions/upload-artifact@v3
        with:
          name: jacoco_exec
          path: workspace/**/jacoco.exec
  checkstyle:
    runs-on: ubuntu-latest
    needs:
      - format
      - json_template
      - get_date
    steps:
      - uses: actions/checkout@v3
      - name: Maven cache
        uses: actions/cache@v3
        with:
          path: "~/.m2/repository"
          key: ${{runner.os}}-maven-${{ hashFiles('**/pom.xml') }}-checkstyle-${{ needs.get_date.outputs.ymd }}
          restore-keys: |
            ${{runner.os}}-maven-${{ hashFiles('**/pom.xml') }}-checkstyle-
            ${{runner.os}}-maven-${{ hashFiles('**/pom.xml') }}-
            ${{runner.os}}-maven-
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'
      - name: Checkstyle, findbugs, dependency
        run: |
          mvn -B -f projects/pom.xml verify -Dcheckstyle.skip=false -Dmdep.analyze.skip=false -Dfindbugs.skip=false
  bazel_build_test_and_pmd:
    needs:
      - get_date
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Bazel cache
        uses: actions/cache@v3
        with:
          path: "~/.cache/bazel"
          key: ${{runner.os}}-bazel-${{ hashFiles('WORKSPACE', 'maven_install.json') }}-${{ needs.get_date.outputs.ymd }}
          restore-keys: |
            ${{runner.os}}-bazel-${{ hashFiles('WORKSPACE', 'maven_install.json') }}-
            ${{runner.os}}-bazel-
      - name: Bazel build and test
        run: |
          bazel test --test_output=errors --test_tag_filters=-pmd_test --build_tag_filters=-pmd_test -- //...
          bazel test --test_output=errors --test_tag_filters=pmd_test -- //...
  ref_tests:
    runs-on: ubuntu-latest
    needs:
      - get_date
    steps:
      - uses: actions/checkout@v3
      - name: Maven cache
        uses: actions/cache@v3
        with:
          path: "~/.m2/repository"
          key: ${{runner.os}}-maven-${{ hashFiles('**/pom.xml') }}-refs-${{ needs.get_date.outputs.ymd }}
          restore-keys: |
            ${{runner.os}}-maven-${{ hashFiles('**/pom.xml') }}-refs-
            ${{runner.os}}-maven-${{ hashFiles('**/pom.xml') }}-
            ${{runner.os}}-maven-
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'
      - name: Maven Build
        run: |
          mkdir workspace
          mvn -B -f projects package
          cp projects/allinone/target/allinone-bundle-*.jar workspace/allinone.jar
      - name: Ref tests
        run: |
          REFS=$(find tests -name commands)
          for cmd in ${REFS}; do
            .buildkite/ref_test.sh ${cmd}
          done
      - name: Upload Jacoco exec
        uses: actions/upload-artifact@v3
        with:
          name: jacoco_exec_ref
          path: workspace/**/jacoco.exec
      - name: Save JAR
        uses: actions/upload-artifact@v3
        with:
          name: allinone_jar
          path: workspace/allinone.jar
  code_cov:
    runs-on: ubuntu-latest
    needs:
      - junit
      - ref_tests
      - get_date
    steps:
      - uses: actions/checkout@v3
      - name: Maven cache
        uses: actions/cache@v3
        with:
          path: "~/.m2/repository"
          key: ${{runner.os}}-maven-${{ hashFiles('**/pom.xml') }}-codecov-${{ needs.get_date.outputs.ymd }}
          restore-keys: |
            ${{runner.os}}-maven-${{ hashFiles('**/pom.xml') }}-codecov-
            ${{runner.os}}-maven-${{ hashFiles('**/pom.xml') }}-
            ${{runner.os}}-maven-
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'
      - name: Download jar
        uses: actions/download-artifact@v3
        with:
          name: allinone_jar
          path: workspace
      - name: Download jacoco from unit tests
        uses: actions/download-artifact@v3
        with:
          name: jacoco_exec
          path: workspace
      - name: Download jacoco from ref tests
        uses: actions/download-artifact@v3
        with:
          name: jacoco_exec_ref
          path: workspace
      - name: Generate report
        run: .buildkite/jacoco_report.sh
